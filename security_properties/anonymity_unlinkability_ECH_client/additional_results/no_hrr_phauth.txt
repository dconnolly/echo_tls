mkdir -p ../../generated_libraries
m4 ../../libraries/client.m4.pvl > ../../generated_libraries/client.pvl
proverif \
-lib config.m4.pvl \
-lib ../../libraries/primitives.pvl \
-lib ../../libraries/format.pvl \
-lib ../../libraries/key_schedule.pvl \
-lib ../../libraries/events.pvl \
-lib config_proof_helper.m4.pvl \
-lib ../../libraries/tls_functions.pvl \
-lib ../../libraries/ech_functions.pvl \
-lib ../../libraries/server.pvl \
-lib ../../generated_libraries/client.pvl \
-lib ../../libraries/main_processes.pvl \
-lib ../../libraries/proof_helper_equivalence.pvl \
anonymity_unlinkability_ECH_client_no_ticket.pv
Biprocess 0 (that is, the initial process):
(
    {1}!
    {2}in(io, a: domain);
    {3}new lgt_id: idProc;
    {4}event Same(a);
    {5}new s: seed;
    {6}let sk_h: privkey = uc_privkey(s) in
    {7}let crt: certificate = valid_cert(a,pk(sk_h)) in
    {8}insert long_term_keys(a,sk_h,pk(sk_h),crt,lgt_id);
    {9}out(io, crt)
) | (
    {10}!
    {11}in(io, (c_dom: domain,s_dom: domain));
    {12}let h_alg: hash_alg = id_hash(StrongHash,1) in
    {13}new psk_id: idProc;
    {14}event Same(c_dom);
    {15}event Same(s_dom);
    {16}new s_1: seed;
    {17}let psk: preSharedKey = uc_psk(s_1) in
    {18}let id: identityPsk = mk_idpsk(s_dom,h_alg,psk) in
    {19}insert pre_shared_keys(c_dom,s_dom,h_alg,id,psk,psk_id,true)
) | (
    {20}!
    {21}in(io, s_dom_1: domain);
    {22}let ech_h: hash_alg = id_hash(StrongHash,2) in
    {23}let ech_a: aead_alg = id_aead(StrongAE,2) in
    {24}let ech_g: group = id_g(StrongDH,2) in
    {25}event Same(s_dom_1);
    {26}new id_1: configId;
    {27}new s_2[]: seed;
    {28}let gx: element = dh_pub(ech_g,dh_k(s_2)) in
    {29}let (skR: bitstring,pkR: element) = (dh_k(s_2),gx) in
    {30}let config: echConfig = ech_config(id_1,ech_g,pkR,s_dom_1,ech_h,ech_a) in
    {31}insert ech_configurations(config,skR);
    {32}out(io, config)
) | (
    {33}!
    {34}in(io, a_1: domain);
    {35}new idP: idProc;
    {36}new sk_d: privkey;
    {37}event CompromisedLtkForEquiv(pk(sk_d));
    {38}event Same(a_1);
    {39}let crt_1: certificate = valid_cert(a_1,pk(sk_d)) in
    {40}insert long_term_keys(a_1,sk_d,pk(sk_d),crt_1,idP);
    {41}event CompromisedLtk(pk(sk_d));
    {42}out(io, (sk_d,crt_1))
) | (
    0
) | (
    {43}!
    {44}in(io, s_dom_2: domain);
    {45}let ech_h_1: hash_alg = id_hash(StrongHash,2) in
    {46}let ech_a_1: aead_alg = id_aead(StrongAE,2) in
    {47}let ech_g_1: group = id_g(StrongDH,2) in
    {48}event Same(s_dom_2);
    {49}new id_2: configId;
    {50}new skR_d: bitstring;
    {51}let pkR_d: element = dh_pub(ech_g_1,skR_d) in
    {52}let config_1: echConfig = ech_config(id_2,ech_g_1,pkR_d,s_dom_2,ech_h_1,ech_a_1) in
    {53}event CompromisedEchKeyForEquiv(config_1);
    {54}insert ech_configurations(config_1,skR_d);
    {55}out(io, config_1);
    {56}event CompromisedEchKey(config_1);
    {57}out(io, skR_d)
) | (
    {58}!
    {59}in(ch_server_CFIN, (id_server: idProc,ArgsServerCFIN(cr: bytes32,sr: bytes32,h_alg_1: hash_alg,a_alg: aead_alg,s_dom_3: domain,s_pkey: pubkey,c_pkey: pubkey,psk_1: preSharedKey,master_secret: bitstring,chk: aead_key,c_seq: nat,cfin: mac_key,cur_log: bitstring)));
    {60}new st[]: stamp;
    {61}event PreciseIdProcess(ch_server_CFIN,id_server,st);
    {62}event Server_Rand_client(id_server,cr);
    {63}event Server_Rand_server(id_server,sr);
    {64}event Server_PSKChoosen(id_server,psk_1);
    {65}event Server_chk(id_server,chk);
    {66}event Server_cfin(id_server,cfin);
    {67}event Server_Cert_server(id_server,s_pkey);
    {68}event Server_Cert_client(id_server,c_pkey);
    {69}new st1[]: stamp;
    {70}event PreciseMess(ch_server_CFIN,id_server,st1,(chk,cfin,master_secret));
    {71}in(io, enc_fin: bitstring);
    {72}let fin_msg: msg = aead_dec(a_alg,chk,c_seq,zero,enc_fin) in
    {73}let FIN(hash_msg: bitstring) = fin_msg in
    {74}if (hash_msg = hmac(h_alg_1,cfin,cur_log)) then
    {75}let l: label = tls13_client_application_traffic_secret in
    {76}let h: bitstring = catch-fail(hash(h_alg_1,cur_log)) in
    {77}let v: bool = not-caught-fail(h) in
    {78}let x: bitstring = (if v then (l,h) else caught-fail) in
    {79}let client_ats: bitstring = catch-fail((if v then hmac(h_alg_1,master_secret,x) else fail-any)) in
    {80}let v_1: bool = not-caught-fail(client_ats) in
    {81}let l_1: label = (if v_1 then tls13_server_application_traffic_secret else caught-fail) in
    {82}let h_1: bitstring = (if v_1 then catch-fail(hash(h_alg_1,cur_log)) else caught-fail) in
    {83}let v_2: bool = not-caught-fail(h_1) in
    {84}let x_1: bitstring = (if v_2 then (l_1,h_1) else caught-fail) in
    {85}let server_ats: bitstring = (if v_1 then catch-fail((if v_2 then hmac(h_alg_1,master_secret,x_1) else fail-any)) else caught-fail) in
    {86}let v_3: bool = not-caught-fail(server_ats) in
    {87}let l_2: label = (if v_3 then tls13_exporter_master_secret else caught-fail) in
    {88}let h_2: bitstring = (if v_3 then catch-fail(hash(h_alg_1,cur_log)) else caught-fail) in
    {89}let v_4: bool = not-caught-fail(h_2) in
    {90}let x_2: bitstring = (if v_4 then (l_2,h_2) else caught-fail) in
    {91}let ems: bitstring = (if v_3 then catch-fail((if v_4 then hmac(h_alg_1,master_secret,x_2) else fail-any)) else caught-fail) in
    {92}let v_5: bool = not-caught-fail(ems) in
    {93}let l_3: label = (if v_5 then tls13_key else caught-fail) in
    {94}let h_3: bitstring = (if v_5 then zero else caught-fail) in
    {95}let x_3: bitstring = (if v_5 then (l_3,h_3) else caught-fail) in
    {96}let client_wkad: bitstring = (if v_5 then catch-fail(hmac(h_alg_1,client_ats,x_3)) else caught-fail) in
    {97}let v_6: bool = not-caught-fail(client_wkad) in
    {98}let l_4: label = (if v_6 then tls13_key else caught-fail) in
    {99}let h_4: bitstring = (if v_6 then zero else caught-fail) in
    {100}let x_4: bitstring = (if v_6 then (l_4,h_4) else caught-fail) in
    {101}let server_wkad: bitstring = (if v_6 then catch-fail(hmac(h_alg_1,server_ats,x_4)) else caught-fail) in
    {102}let v_7: bool = not-caught-fail(server_wkad) in
    {103}let l_5: label = (if v_7 then tls13_finished else caught-fail) in
    {104}let h_5: bitstring = (if v_7 then zero else caught-fail) in
    {105}let x_5: bitstring = (if v_7 then (l_5,h_5) else caught-fail) in
    {106}let client_fkad: bitstring = (if v_7 then catch-fail(hmac(h_alg_1,client_ats,x_5)) else caught-fail) in
    {107}let v_8: bool = not-caught-fail(client_fkad) in
    {108}let (cak: aead_key,sak: aead_key,cfkad: mac_key,ems_1: bitstring) = (if v_1 then (if v_3 then (if v_5 then (if v_6 then (if v_7 then (if v_8 then (client_wkad,server_wkad,client_fkad,ems) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
    {109}let cur_log_CFIN: bitstring = (cur_log,fin_msg) in
    {110}let l_6: label = tls13_resumption_master_secret in
    {111}let h_6: bitstring = catch-fail(hash(h_alg_1,cur_log_CFIN)) in
    {112}let v_9: bool = not-caught-fail(h_6) in
    {113}let x_6: bitstring = (if v_9 then (l_6,h_6) else caught-fail) in
    {114}let rms: bitstring = (if v_9 then hmac(h_alg_1,master_secret,x_6) else fail-any) in
    {115}event Server_cak(id_server,cak);
    {116}event Server_sak(id_server,sak);
    {117}event Server_cfkad(id_server,cfkad);
    {118}event Server_rms(id_server,rms);
    {119}event ServerFinished(id_server,cr,sr,psk_1,s_pkey,c_pkey,cak,sak,ems_1,rms);
    (
        0
    ) | (
        0
    ) | (
        {120}!
        {121}in(io, (seq_srv: nat,seq_client: nat));
        {122}if (is_nat(seq_srv) && is_nat(seq_client)) then
        {123}new req_rand: bitstring;
        {124}event ServerRequestPH(id_server,cr,sr,psk_1,s_pkey,c_pkey,req_rand);
        {125}let crtr_msg: msg = CRTR(req_rand) in
        {126}let enc_crt: bitstring = aead_enc(a_alg,sak,seq_srv,zero,crtr_msg) in
        {127}new st_1[]: stamp;
        {128}event ServerSequenceServerDataWriteKey(id_server,st_1,seq_srv);
        {129}event ServerSends(id_server,cr,sr,psk_1,s_pkey,c_pkey,seq_srv,zero,crtr_msg);
        {130}out(io, enc_crt);
        {131}let cur_log_CRTR: bitstring = (cur_log_CFIN,crtr_msg) in
        {132}in(io, enc_cert_msg: bitstring);
        {133}let cert_msg: msg = aead_dec(a_alg,cak,seq_client,zero,enc_cert_msg) in
        {134}new st1_1[]: stamp;
        {135}event ServerSequenceClientDataWriteKey(id_server,st1_1,seq_client);
        {136}event ServerReceives(id_server,cr,sr,psk_1,s_pkey,c_pkey,seq_client,zero,cert_msg);
        {137}let CRT(=req_rand,crt_2: certificate) = cert_msg in
        {138}let cur_log_CRT: bitstring = (cur_log_CRTR,cert_msg) in
        {139}in(io, enc_cert_verif_msg: bitstring);
        {140}let cert_verify_msg: msg = aead_dec(a_alg,cak,seq_client + 1,zero,enc_cert_verif_msg) in
        {141}new st2[]: stamp;
        {142}event ServerSequenceClientDataWriteKey(id_server,st2,seq_client + 1);
        {143}event ServerReceives(id_server,cr,sr,psk_1,s_pkey,c_pkey,seq_client + 1,zero,cert_verify_msg);
        {144}let CV(signed_log: bitstring) = cert_verify_msg in
        {145}if (verify(get_pkey(crt_2),hash(h_alg_1,cur_log_CRT),signed_log) && verify_cert(crt_2)) then
        {146}let c_pkey': pubkey = get_pkey(crt_2) in
        {147}let cur_log_CV: bitstring = (cur_log_CRT,cert_verify_msg) in
        {148}in(io, enc_fin_1: bitstring);
        {149}let fin_msg_1: msg = aead_dec(a_alg,cak,seq_client + 2,zero,enc_fin_1) in
        {150}new st3[]: stamp;
        {151}event ServerSequenceClientDataWriteKey(id_server,st3,seq_client + 2);
        {152}event ServerReceives(id_server,cr,sr,psk_1,s_pkey,c_pkey,seq_client + 2,zero,fin_msg_1);
        {153}let FIN(hash_msg_1: bitstring) = fin_msg_1 in
        {154}if (hash_msg_1 = hmac(h_alg_1,cfkad,cur_log_CV)) then
            {155}event ServerFinishedPH(id_server,cr,sr,psk_1,s_pkey,c_pkey,req_rand,c_pkey')
        else
            {156}out(io, handshake_failure)
    )
) | (
    {157}!
    {158}in(ch_server_FIN, (id_server_1: idProc,ArgsServerFIN(cr_1: bytes32,sr_1: bytes32,h_alg_2: hash_alg,a_alg_1: aead_alg,s_dom_4: domain,s_pkey_1: pubkey,req_cert: bool,psk_2: preSharedKey,master_secret_1: bitstring,chk_1: aead_key,c_seq_1: nat,shk: aead_key,s_seq: nat,cfin_1: mac_key,sfin: mac_key,cur_log_1: bitstring)));
    {159}new st_2[]: stamp;
    {160}event PreciseIdProcess(ch_server_FIN,id_server_1,st_2);
    {161}event Server_Rand_client(id_server_1,cr_1);
    {162}event Server_Rand_server(id_server_1,sr_1);
    {163}event Server_PSKChoosen(id_server_1,psk_2);
    {164}event Server_chk(id_server_1,chk_1);
    {165}event Server_shk(id_server_1,shk);
    {166}event Server_cfin(id_server_1,cfin_1);
    {167}event Server_sfin(id_server_1,sfin);
    {168}event Server_Cert_server(id_server_1,s_pkey_1);
    {169}new st1_2[]: stamp;
    {170}event PreciseMess(ch_server_FIN,id_server_1,st1_2,(chk_1,shk,master_secret_1));
    {171}let hash_msg_2: bitstring = hmac(h_alg_2,sfin,cur_log_1) in
    {172}let finished_msg: msg = FIN(hash_msg_2) in
    {173}let enc_finished: bitstring = aead_enc(a_alg_1,shk,s_seq,zero,finished_msg) in
    {174}event PreServerFinished(id_server_1,cr_1,sr_1,psk_2,s_pkey_1);
    {175}out(io, enc_finished);
    {176}let cur_log_FIN: bitstring = (cur_log_1,finished_msg) in
    {177}if (req_cert && (psk_2 = NoPsk)) then
    (
        {178}in(io, enc_cert_msg_1: bitstring);
        {179}let cert_msg_1: msg = aead_dec(a_alg_1,chk_1,c_seq_1,zero,enc_cert_msg_1) in
        {180}let CRT(=zero,crt_3: certificate) = cert_msg_1 in
        {181}let cur_log_CRT_1: bitstring = (cur_log_FIN,cert_msg_1) in
        {182}in(io, enc_cert_verif_msg_1: bitstring);
        {183}let cert_verify_msg_1: msg = aead_dec(a_alg_1,chk_1,c_seq_1 + 1,zero,enc_cert_verif_msg_1) in
        {184}let CV(signed_log_1: bitstring) = cert_verify_msg_1 in
        {185}if (verify(get_pkey(crt_3),hash(h_alg_2,cur_log_CRT_1),signed_log_1) && verify_cert(crt_3)) then
        {186}let c_pkey_1: pubkey = get_pkey(crt_3) in
        {187}let cur_log_CV_1: bitstring = (cur_log_CRT_1,cert_verify_msg_1) in
        {188}event Server_Cert_client(id_server_1,c_pkey_1);
        {189}out(ch_server_CFIN, (id_server_1,ArgsServerCFIN(cr_1,sr_1,h_alg_2,a_alg_1,s_dom_4,s_pkey_1,c_pkey_1,psk_2,master_secret_1,chk_1,c_seq_1 + 2,cfin_1,cur_log_CV_1)))
    )
    else
        {190}event Server_Cert_client(id_server_1,NoPubKey);
        {191}out(ch_server_CFIN, (id_server_1,ArgsServerCFIN(cr_1,sr_1,h_alg_2,a_alg_1,s_dom_4,s_pkey_1,NoPubKey,psk_2,master_secret_1,chk_1,c_seq_1,cfin_1,cur_log_FIN)))
) | (
    {192}!
    {193}in(ch_server_CRT, (id_server_2: idProc,ArgsServerCRT(cr_2: bytes32,sr_2: bytes32,h_alg_3: hash_alg,a_alg_2: aead_alg,s_dom_5: domain,req_cert_1: bool,master_secret_2: bitstring,chk_2: aead_key,c_seq_2: nat,shk_1: aead_key,s_seq_1: nat,cfin_2: mac_key,sfin_1: mac_key,cur_log_2: bitstring)));
    {194}new st_3[]: stamp;
    {195}event PreciseIdProcess(ch_server_CRT,id_server_2,st_3);
    {196}event Server_Rand_client(id_server_2,cr_2);
    {197}event Server_Rand_server(id_server_2,sr_2);
    {198}event Server_PSKChoosen(id_server_2,NoPsk);
    {199}event Server_chk(id_server_2,chk_2);
    {200}event Server_shk(id_server_2,shk_1);
    {201}event Server_cfin(id_server_2,cfin_2);
    {202}event Server_sfin(id_server_2,sfin_1);
    {203}new st1_3[]: stamp;
    {204}event PreciseMess(ch_server_CRT,id_server_2,st1_3,(master_secret_2,chk_2,shk_1));
    {222}get long_term_keys(s_dom': domain,sk: privkey,s_pkey_2: pubkey,crt_4: certificate,idP_1: idProc) in
    {205}let @3_x: bitstring = (s_dom',sk,s_pkey_2,crt_4,idP_1) in
    {206}new @3_st[]: stamp;
    {207}event PreciseInput(@3_st,@3_x);
    {208}let () = () in
    {209}event Selected_ltk(s_dom_5,s_dom',idP_1);
    {210}let (sk_1: privkey,s_pkey_3: pubkey,crt_5: certificate) = (sk,s_pkey_2,crt_4) in
    {211}event Server_Cert_server(id_server_2,s_pkey_3);
    {212}let certificate_msg: msg = CRT(zero,crt_5) in
    {213}let encrypted_certificate_msg: bitstring = aead_enc(a_alg_2,shk_1,s_seq_1,zero,certificate_msg) in
    {214}out(io, encrypted_certificate_msg);
    {215}let cur_log_CRT_2: bitstring = (cur_log_2,certificate_msg) in
    {216}let signed_log_2: bitstring = sign(sk_1,hash(h_alg_3,cur_log_CRT_2)) in
    {217}let certificate_verify_msg: msg = CV(signed_log_2) in
    {218}let encrypted_certificate_verify_msg: bitstring = aead_enc(a_alg_2,shk_1,s_seq_1 + 1,zero,certificate_verify_msg) in
    {219}out(io, encrypted_certificate_verify_msg);
    {220}let cur_log_CV_2: bitstring = (cur_log_CRT_2,certificate_verify_msg) in
    {221}out(ch_server_FIN, (id_server_2,ArgsServerFIN(cr_2,sr_2,h_alg_3,a_alg_2,s_dom_5,s_pkey_3,req_cert_1,NoPsk,master_secret_2,chk_2,c_seq_2,shk_1,s_seq_1 + 2,cfin_2,sfin_1,cur_log_CV_2)))
) | (
    {223}!
    {224}in(ch_server_SH, (id_server_3: idProc,ArgsServerSH(tls_g: group,tls_h: hash_alg,tls_a: aead_alg,s_dom_6: domain,req_cert_2: bool,is_backend: bool,use_psk: bool,no_HRR: bool,ee_msg: msg,client_hello: msg,cur_log_3: bitstring)));
    {225}new st_4[]: stamp;
    {226}event PreciseMess(ch_server_SH,id_server_3,st_4,(use_psk,client_hello));
    {227}let CH(cr_3: bytes32,offer: params) = client_hello in
    {228}event Server_Rand_client(id_server_3,cr_3);
    {229}let nego(=TLS13,=tls_h,=tls_a,client_kex_ext(DHE_kex(=tls_g,gx_1: element)),sni_ext: sniExt,ech_ext: echExt,extra_ext: extraExt,psk_ext: preSharedKeyExt) = offer in
    (
        {230}if (sni_ext = SNI(s_dom_6)) then
        (
            {231}event Server_DH_client(id_server_3,gx_1);
            {232}let v_10: msg = client_hello in
            {233}let v_11: bool = (((TLS13 =nf 1-proj-nego(2-proj-CH(v_10))) && success?(1-proj-nego(2-proj-CH(v_10)))) && success?(1-proj-CH(v_10))) in
            {234}let psk_ext_1: preSharedKeyExt = (if v_11 then 8-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {235}let extra_ext_1: extraExt = (if v_11 then 7-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {236}let ech_ext_1: echExt = (if v_11 then 6-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {237}let sni_ext_1: sniExt = (if v_11 then 5-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {238}let kex_ext: keyShareExt = (if v_11 then 4-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {239}let a_alg_3: aead_alg = (if v_11 then 3-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {240}let h_alg_4: hash_alg = (if v_11 then 2-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {241}let cr_4: bytes32 = (if v_11 then 1-proj-CH(v_10) else caught-fail) in
            {242}let v_12: bitstring = (if v_11 then catch-fail((use_psk,psk_ext_1)) else caught-fail) in
            {243}let v_13: bool = (not-caught-fail(v_12) && (((true =nf 1-proj-2-tuple(v_12)) && success?(1-proj-client_psk_ext(2-proj-2-tuple(v_12)))) && success?(1-proj-2-tuple(v_12)))) in
            {244}let binders: bitstring = (if v_13 then 2-proj-client_psk_ext(2-proj-2-tuple(v_12)) else caught-fail) in
            {245}let id_3: identityPsk = (if v_13 then 1-proj-client_psk_ext(2-proj-2-tuple(v_12)) else caught-fail) in
            {246}let v_14: bitstring = (if v_13 then catch-fail((get_server_psk(id_3),get_hash_psk(id_3))) else caught-fail) in
            {247}let v_15: bool = (not-caught-fail(v_14) && (((s_dom_6 =nf 1-proj-2-tuple(v_14)) && (h_alg_4 =nf 2-proj-2-tuple(v_14))) && success?(1-proj-2-tuple(v_14)))) in
            {248}let psk_3: preSharedKey = (if v_15 then catch-fail(get_psk(id_3)) else caught-fail) in
            {249}let v_16: bool = not-caught-fail(psk_3) in
            {250}let s_3: bitstring = (if v_16 then zero else caught-fail) in
            {251}let k: bitstring = (if v_16 then catch-fail(psk2b(psk_3)) else caught-fail) in
            {252}let v_17: bool = not-caught-fail(k) in
            {253}let early_secret: bitstring = (if v_16 then catch-fail((if v_17 then hmac(h_alg_4,s_3,k) else fail-any)) else caught-fail) in
            {254}let v_18: bool = not-caught-fail(early_secret) in
            {255}let l_7: label = (if v_18 then tls13_ext_res_binder else caught-fail) in
            {256}let m: bitstring = (if v_18 then zero else caught-fail) in
            {257}let h_7: bitstring = (if v_18 then catch-fail(hash(h_alg_4,m)) else caught-fail) in
            {258}let v_19: bool = not-caught-fail(h_7) in
            {259}let x_7: bitstring = (if v_19 then (l_7,h_7) else caught-fail) in
            {260}let binder_key: bitstring = (if v_18 then catch-fail((if v_19 then hmac(h_alg_4,early_secret,x_7) else fail-any)) else caught-fail) in
            {261}let v_20: bool = not-caught-fail(binder_key) in
            {262}let v_21: bitstring = (if v_16 then catch-fail((if v_18 then (if v_20 then (early_secret,binder_key) else fail-any) else fail-any)) else caught-fail) in
            {263}let v_22: bool = (not-caught-fail(v_21) && success?(1-proj-2-tuple(v_21))) in
            {264}let kb: mac_key = (if v_22 then 2-proj-2-tuple(v_21) else caught-fail) in
            {265}let early_secret_1: bitstring = (if v_22 then 1-proj-2-tuple(v_21) else caught-fail) in
            {266}let offer_1: params = (if v_22 then nego(TLS13,h_alg_4,a_alg_3,kex_ext,sni_ext_1,ech_ext_1,extra_ext_1,trunc_client_psk_ext(id_3)) else caught-fail) in
            {267}let cur_log': bitstring = (if v_22 then (cur_log_3,CH(cr_4,offer_1)) else caught-fail) in
            {268}let v_23: bool = (v_13 && not(v_15)) in
            {269}let psk_4: preSharedKey = (if v_23 then NoPsk else caught-fail) in
            {270}let s_4: bitstring = (if v_23 then zero else caught-fail) in
            {271}let k_1: bitstring = (if v_23 then catch-fail(psk2b(psk_4)) else caught-fail) in
            {272}let v_24: bool = not-caught-fail(k_1) in
            {273}let early_secret_2: bitstring = (if v_23 then catch-fail((if v_24 then hmac(h_alg_4,s_4,k_1) else fail-any)) else caught-fail) in
            {274}let v_25: bool = not-caught-fail(early_secret_2) in
            {275}let l_8: label = (if v_25 then tls13_ext_res_binder else caught-fail) in
            {276}let m_1: bitstring = (if v_25 then zero else caught-fail) in
            {277}let h_8: bitstring = (if v_25 then catch-fail(hash(h_alg_4,m_1)) else caught-fail) in
            {278}let v_26: bool = not-caught-fail(h_8) in
            {279}let x_8: bitstring = (if v_26 then (l_8,h_8) else caught-fail) in
            {280}let binder_key_1: bitstring = (if v_25 then catch-fail((if v_26 then hmac(h_alg_4,early_secret_2,x_8) else fail-any)) else caught-fail) in
            {281}let v_27: bool = not-caught-fail(binder_key_1) in
            {282}let v_28: bitstring = (if v_23 then catch-fail((if v_25 then (if v_27 then (early_secret_2,binder_key_1) else fail-any) else fail-any)) else caught-fail) in
            {283}let v_29: bool = (not-caught-fail(v_28) && success?(1-proj-2-tuple(v_28))) in
            {284}let kb_1: mac_key = (if v_29 then 2-proj-2-tuple(v_28) else caught-fail) in
            {285}let es: bitstring = (if v_29 then 1-proj-2-tuple(v_28) else caught-fail) in
            {286}let v_30: bool = (v_11 && not(v_13)) in
            {287}let psk_5: preSharedKey = (if v_30 then NoPsk else caught-fail) in
            {288}let s_5: bitstring = (if v_30 then zero else caught-fail) in
            {289}let k_2: bitstring = (if v_30 then catch-fail(psk2b(psk_5)) else caught-fail) in
            {290}let v_31: bool = not-caught-fail(k_2) in
            {291}let early_secret_3: bitstring = (if v_30 then catch-fail((if v_31 then hmac(h_alg_4,s_5,k_2) else fail-any)) else caught-fail) in
            {292}let v_32: bool = not-caught-fail(early_secret_3) in
            {293}let l_9: label = (if v_32 then tls13_ext_res_binder else caught-fail) in
            {294}let m_2: bitstring = (if v_32 then zero else caught-fail) in
            {295}let h_9: bitstring = (if v_32 then catch-fail(hash(h_alg_4,m_2)) else caught-fail) in
            {296}let v_33: bool = not-caught-fail(h_9) in
            {297}let x_9: bitstring = (if v_33 then (l_9,h_9) else caught-fail) in
            {298}let binder_key_2: bitstring = (if v_32 then catch-fail((if v_33 then hmac(h_alg_4,early_secret_3,x_9) else fail-any)) else caught-fail) in
            {299}let v_34: bool = not-caught-fail(binder_key_2) in
            {300}let v_35: bitstring = (if v_30 then catch-fail((if v_32 then (if v_34 then (early_secret_3,binder_key_2) else fail-any) else fail-any)) else caught-fail) in
            {301}let v_36: bool = (not-caught-fail(v_35) && success?(1-proj-2-tuple(v_35))) in
            {302}let kb_2: mac_key = (if v_36 then 2-proj-2-tuple(v_35) else caught-fail) in
            {303}let es_1: bitstring = (if v_36 then 1-proj-2-tuple(v_35) else caught-fail) in
            {304}let (early_secret_4: bitstring,s_psk_ext: preSharedKeyExt,psk_6: preSharedKey) = (if v_11 then (if v_13 then (if v_15 then (if v_16 then (if v_22 then (if (binders = hmac(h_alg_4,kb,cur_log')) then (early_secret_1,server_psk_ext(1),psk_3) else fail-any) else fail-any) else fail-any) else (if v_29 then (es,empty_psk_ext,NoPsk) else fail-any)) else (if v_36 then (es_1,empty_psk_ext,NoPsk) else fail-any)) else fail-any) in
            {305}event Server_PSKChoosen(id_server_3,psk_6);
            {306}let cur_log_CH: bitstring = (cur_log_3,client_hello) in
            (
                {307}if (false && (no_HRR && (psk_6 ≠ NoPsk))) then
                {308}!
                {309}in(io, (i: nat,ad: bitstring,enc_early_data: bitstring));
                {310}let l_10: label = tls13_client_early_traffic_secret in
                {311}let h_10: bitstring = catch-fail(hash(tls_h,cur_log_CH)) in
                {312}let v_37: bool = not-caught-fail(h_10) in
                {313}let x_10: bitstring = (if v_37 then (l_10,h_10) else caught-fail) in
                {314}let atsc0: bitstring = catch-fail((if v_37 then hmac(tls_h,early_secret_4,x_10) else fail-any)) in
                {315}let v_38: bool = not-caught-fail(atsc0) in
                {316}let l_11: label = (if v_38 then tls13_key else caught-fail) in
                {317}let h_11: bitstring = (if v_38 then zero else caught-fail) in
                {318}let x_11: bitstring = (if v_38 then (l_11,h_11) else caught-fail) in
                {319}let kc0: bitstring = (if v_38 then catch-fail(hmac(tls_h,atsc0,x_11)) else caught-fail) in
                {320}let v_39: bool = not-caught-fail(kc0) in
                {321}let l_12: label = (if v_39 then tls13_early_exporter_master_secret else caught-fail) in
                {322}let h_12: bitstring = (if v_39 then catch-fail(hash(tls_h,cur_log_CH)) else caught-fail) in
                {323}let v_40: bool = not-caught-fail(h_12) in
                {324}let x_12: bitstring = (if v_40 then (l_12,h_12) else caught-fail) in
                {325}let ems0: bitstring = (if v_39 then catch-fail((if v_40 then hmac(tls_h,early_secret_4,x_12) else fail-any)) else caught-fail) in
                {326}let v_41: bool = not-caught-fail(ems0) in
                {327}let (wkc0: aead_key,ems0_1: bitstring) = (if v_38 then (if v_39 then (if v_41 then (kc0,ems0) else fail-any) else fail-any) else fail-any) in
                {328}let early_data: bitstring = aead_dec(tls_a,wkc0,i,ad,enc_early_data) in
                    {329}new st1_4[]: stamp;
                    {330}event ServerSequenceClient0RTTDataWriteKey(id_server_3,st1_4,i);
                    {331}event ServerReceives0(id_server_3,s_dom_6,cr_3,psk_6,i,ad,early_data)
                else
                    {332}out(io, bad_record_mac)
            ) | (
                {333}new s_6[]: seed;
                {334}let (gxy: element,gy: element) = (dh_xy(s_6,client_hello),dh_encap_fun(tls_g,gx_1,dh_xy(s_6,client_hello))) in
                {335}event Server_DH_server(id_server_3,gy);
                {336}event Server_DH_gxy(id_server_3,gxy);
                {337}let l_13: label = tls13_derived in
                {338}let m_3: bitstring = catch-fail(hash(tls_h,zero)) in
                {339}let v_42: bool = not-caught-fail(m_3) in
                {340}let h_13: bitstring = (if v_42 then catch-fail(hash(tls_h,m_3)) else caught-fail) in
                {341}let v_43: bool = not-caught-fail(h_13) in
                {342}let x_13: bitstring = (if v_43 then (l_13,h_13) else caught-fail) in
                {343}let extra: bitstring = catch-fail((if v_42 then (if v_43 then hmac(tls_h,early_secret_4,x_13) else fail-any) else fail-any)) in
                {344}let v_44: bool = not-caught-fail(extra) in
                {345}let handshake_secret: bitstring = (if v_44 then hmac(tls_h,extra,gxy) else fail-any) in
                {346}let s_offer: params = nego(TLS13,tls_h,tls_a,server_kex_ext(DHE_kex(tls_g,gy)),empty_sni_ext,empty_ech_ext,empty_extra_ext,s_psk_ext) in
                {347}let v_45: bool = is_backend in
                {348}new sr24[]: bytes24;
                {349}let sr24_1: bytes24 = (if v_45 then sr24 else caught-fail) in
                {350}let sh_modified: msg = (if v_45 then SH(B32(sr24_1,zero8),s_offer) else caught-fail) in
                {351}let cur_log_sh: bitstring = (if v_45 then (cur_log_CH,sh_modified) else caught-fail) in
                {352}let transcript_ech_conf: bitstring = (if v_45 then catch-fail(hash(tls_h,cur_log_sh)) else caught-fail) in
                {353}let v_46: bool = not-caught-fail(transcript_ech_conf) in
                {354}let s_7: bitstring = (if v_46 then zero else caught-fail) in
                {355}let k_3: bitstring = (if v_46 then catch-fail(b32_2_b(get_random(client_hello))) else caught-fail) in
                {356}let v_47: bool = not-caught-fail(k_3) in
                {357}let k_4: bitstring = (if v_46 then catch-fail((if v_47 then hmac(tls_h,s_7,k_3) else fail-any)) else caught-fail) in
                {358}let v_48: bool = not-caught-fail(k_4) in
                {359}let l_14: label = (if v_48 then ech_accept_confirmation else caught-fail) in
                {360}let x_14: bitstring = (if v_48 then (l_14,cur_log_sh) else caught-fail) in
                {361}let sr8: bytes8 = (if v_46 then catch-fail(crop_into_bytes8((if v_48 then hmac(tls_h,k_4,x_14) else fail-any))) else caught-fail) in
                {362}let v_49: bool = not-caught-fail(sr8) in
                {363}new rand24[]: bytes24;
                {364}new rand8[]: bytes8;
                {365}let sr_3: bytes32 = (if v_45 then (if v_46 then (if v_49 then B32(sr24_1,sr8) else fail-any) else fail-any) else B32(rand24,rand8)) in
                {366}let server_hello: msg = SH(sr_3,s_offer) in
                {367}event Server_Rand_server(id_server_3,sr_3);
                {368}event ServerChoosesGroup(id_server_3,tls_g);
                {369}event ServerChoosesHash(cr_3,sr_3,tls_h);
                {370}event ServerChoosesAead(cr_3,sr_3,tls_a);
                {371}out(io, server_hello);
                {372}let cur_log_SH: bitstring = (cur_log_CH,server_hello) in
                {373}let l_15: label = tls13_derived in
                {374}let m_4: bitstring = catch-fail(hash(tls_h,zero)) in
                {375}let v_50: bool = not-caught-fail(m_4) in
                {376}let h_14: bitstring = (if v_50 then catch-fail(hash(tls_h,m_4)) else caught-fail) in
                {377}let v_51: bool = not-caught-fail(h_14) in
                {378}let x_15: bitstring = (if v_51 then (l_15,h_14) else caught-fail) in
                {379}let extra_1: bitstring = catch-fail((if v_50 then (if v_51 then hmac(tls_h,handshake_secret,x_15) else fail-any) else fail-any)) in
                {380}let v_52: bool = not-caught-fail(extra_1) in
                {381}let k_5: bitstring = (if v_52 then zero else caught-fail) in
                {382}let master_secret_3: bitstring = (if v_52 then catch-fail(hmac(tls_h,handshake_secret,k_5)) else caught-fail) in
                {383}let v_53: bool = not-caught-fail(master_secret_3) in
                {384}let l_16: label = (if v_53 then tls13_client_handshake_traffic_secret else caught-fail) in
                {385}let h_15: bitstring = (if v_53 then catch-fail(hash(tls_h,cur_log_SH)) else caught-fail) in
                {386}let v_54: bool = not-caught-fail(h_15) in
                {387}let x_16: bitstring = (if v_54 then (l_16,h_15) else caught-fail) in
                {388}let client_hts: bitstring = (if v_53 then catch-fail((if v_54 then hmac(tls_h,handshake_secret,x_16) else fail-any)) else caught-fail) in
                {389}let v_55: bool = not-caught-fail(client_hts) in
                {390}let l_17: label = (if v_55 then tls13_server_handshake_traffic_secret else caught-fail) in
                {391}let h_16: bitstring = (if v_55 then catch-fail(hash(tls_h,cur_log_SH)) else caught-fail) in
                {392}let v_56: bool = not-caught-fail(h_16) in
                {393}let x_17: bitstring = (if v_56 then (l_17,h_16) else caught-fail) in
                {394}let server_hts: bitstring = (if v_55 then catch-fail((if v_56 then hmac(tls_h,handshake_secret,x_17) else fail-any)) else caught-fail) in
                {395}let v_57: bool = not-caught-fail(server_hts) in
                {396}let l_18: label = (if v_57 then tls13_key else caught-fail) in
                {397}let h_17: bitstring = (if v_57 then zero else caught-fail) in
                {398}let x_18: bitstring = (if v_57 then (l_18,h_17) else caught-fail) in
                {399}let client_wkh: bitstring = (if v_57 then catch-fail(hmac(tls_h,client_hts,x_18)) else caught-fail) in
                {400}let v_58: bool = not-caught-fail(client_wkh) in
                {401}let l_19: label = (if v_58 then tls13_key else caught-fail) in
                {402}let h_18: bitstring = (if v_58 then zero else caught-fail) in
                {403}let x_19: bitstring = (if v_58 then (l_19,h_18) else caught-fail) in
                {404}let server_wkh: bitstring = (if v_58 then catch-fail(hmac(tls_h,server_hts,x_19)) else caught-fail) in
                {405}let v_59: bool = not-caught-fail(server_wkh) in
                {406}let l_20: label = (if v_59 then tls13_finished else caught-fail) in
                {407}let h_19: bitstring = (if v_59 then zero else caught-fail) in
                {408}let x_20: bitstring = (if v_59 then (l_20,h_19) else caught-fail) in
                {409}let client_fk: bitstring = (if v_59 then catch-fail(hmac(tls_h,client_hts,x_20)) else caught-fail) in
                {410}let v_60: bool = not-caught-fail(client_fk) in
                {411}let l_21: label = (if v_60 then tls13_finished else caught-fail) in
                {412}let h_20: bitstring = (if v_60 then zero else caught-fail) in
                {413}let x_21: bitstring = (if v_60 then (l_21,h_20) else caught-fail) in
                {414}let server_fk: bitstring = (if v_60 then catch-fail(hmac(tls_h,server_hts,x_21)) else caught-fail) in
                {415}let v_61: bool = not-caught-fail(server_fk) in
                {416}let (master_secret_4: bitstring,chk_3: aead_key,shk_2: aead_key,cfin_3: mac_key,sfin_2: mac_key) = (if v_52 then (if v_53 then (if v_55 then (if v_57 then (if v_58 then (if v_59 then (if v_60 then (if v_61 then (master_secret_3,client_wkh,server_wkh,client_fk,server_fk) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                {417}event Server_chk(id_server_3,chk_3);
                {418}event Server_shk(id_server_3,shk_2);
                {419}event Server_cfin(id_server_3,cfin_3);
                {420}event Server_sfin(id_server_3,sfin_2);
                {421}let enc_ee: bitstring = aead_enc(tls_a,shk_2,0,zero,ee_msg) in
                {422}out(io, enc_ee);
                {423}let cur_log_EE: bitstring = (cur_log_SH,ee_msg) in
                {424}if (psk_6 = NoPsk) then
                (
                    {425}if req_cert_2 then
                    (
                        {426}let crtr_msg_1: msg = CRTR(zero) in
                        {427}let enc_crt_1: bitstring = aead_enc(tls_a,shk_2,1,zero,crtr_msg_1) in
                        {428}out(io, enc_crt_1);
                        {429}let cur_log_CRTR_1: bitstring = (cur_log_EE,crtr_msg_1) in
                        {430}out(ch_server_CRT, (id_server_3,ArgsServerCRT(cr_3,sr_3,tls_h,tls_a,s_dom_6,req_cert_2,master_secret_4,chk_3,0,shk_2,2,cfin_3,sfin_2,cur_log_CRTR_1)))
                    )
                    else
                        {431}out(ch_server_CRT, (id_server_3,ArgsServerCRT(cr_3,sr_3,tls_h,tls_a,s_dom_6,req_cert_2,master_secret_4,chk_3,0,shk_2,1,cfin_3,sfin_2,cur_log_EE)))
                )
                else
                    {432}out(ch_server_FIN, (id_server_3,ArgsServerFIN(cr_3,sr_3,tls_h,tls_a,s_dom_6,NoPubKey,false,psk_6,master_secret_4,chk_3,0,shk_2,1,cfin_3,sfin_2,cur_log_EE)))
            )
        )
        else
            {433}out(io, illegal_parameter)
    )
    else
        {434}out(io, handshake_failure)
) | (
    {435}!
    {436}in(ch_client_CFIN, (id_client: idProc,ArgsClientCFIN(cr_5: bytes32,sr_4: bytes32,h_alg_5: hash_alg,a_alg_4: aead_alg,c_dom_1: domain,s_dom_7: domain,s_pkey_4: pubkey,c_pkey_2: pubkey,psk_7: preSharedKey,safe_psk: bool,comp_psk: bool,master_secret_5: bitstring,chk_4: aead_key,seq_client_1: nat,shk_3: aead_key,seq_srv_1: nat,cfin_4: mac_key,sfin_3: mac_key,cur_log_4: bitstring)));
    {437}new st_5[]: stamp;
    {438}event PreciseIdProcess(ch_client_CFIN,id_client,st_5);
    {439}event Client_server_domain(id_client,s_dom_7);
    {440}event Client_Rand_client(id_client,cr_5);
    {441}event Client_Rand_server(id_client,sr_4);
    {442}event Client_PSKChoosen(id_client,psk_7,safe_psk);
    {443}event Client_comp_psk(id_client,comp_psk);
    {444}event Client_chk(id_client,chk_4);
    {445}event Client_shk(id_client,shk_3);
    {446}event Client_cfin(id_client,cfin_4);
    {447}event Client_sfin(id_client,sfin_3);
    {448}event Client_Cert_server(id_client,s_pkey_4);
    {449}event Client_Cert_client(id_client,c_pkey_2);
    {450}new st1_5[]: stamp;
    {451}let args: bitstring = (c_dom_1,s_dom_7,psk_7,s_pkey_4,master_secret_5,safe_psk,comp_psk,cur_log_4) in
    {452}event PreciseMess(ch_client_CFIN,id_client,st1_5,args);
    {453}let l_22: label = tls13_client_application_traffic_secret in
    {454}let h_21: bitstring = catch-fail(hash(h_alg_5,cur_log_4)) in
    {455}let v_62: bool = not-caught-fail(h_21) in
    {456}let x_22: bitstring = (if v_62 then (l_22,h_21) else caught-fail) in
    {457}let client_ats_1: bitstring = catch-fail((if v_62 then hmac(h_alg_5,master_secret_5,x_22) else fail-any)) in
    {458}let v_63: bool = not-caught-fail(client_ats_1) in
    {459}let l_23: label = (if v_63 then tls13_server_application_traffic_secret else caught-fail) in
    {460}let h_22: bitstring = (if v_63 then catch-fail(hash(h_alg_5,cur_log_4)) else caught-fail) in
    {461}let v_64: bool = not-caught-fail(h_22) in
    {462}let x_23: bitstring = (if v_64 then (l_23,h_22) else caught-fail) in
    {463}let server_ats_1: bitstring = (if v_63 then catch-fail((if v_64 then hmac(h_alg_5,master_secret_5,x_23) else fail-any)) else caught-fail) in
    {464}let v_65: bool = not-caught-fail(server_ats_1) in
    {465}let l_24: label = (if v_65 then tls13_exporter_master_secret else caught-fail) in
    {466}let h_23: bitstring = (if v_65 then catch-fail(hash(h_alg_5,cur_log_4)) else caught-fail) in
    {467}let v_66: bool = not-caught-fail(h_23) in
    {468}let x_24: bitstring = (if v_66 then (l_24,h_23) else caught-fail) in
    {469}let ems_2: bitstring = (if v_65 then catch-fail((if v_66 then hmac(h_alg_5,master_secret_5,x_24) else fail-any)) else caught-fail) in
    {470}let v_67: bool = not-caught-fail(ems_2) in
    {471}let l_25: label = (if v_67 then tls13_key else caught-fail) in
    {472}let h_24: bitstring = (if v_67 then zero else caught-fail) in
    {473}let x_25: bitstring = (if v_67 then (l_25,h_24) else caught-fail) in
    {474}let client_wkad_1: bitstring = (if v_67 then catch-fail(hmac(h_alg_5,client_ats_1,x_25)) else caught-fail) in
    {475}let v_68: bool = not-caught-fail(client_wkad_1) in
    {476}let l_26: label = (if v_68 then tls13_key else caught-fail) in
    {477}let h_25: bitstring = (if v_68 then zero else caught-fail) in
    {478}let x_26: bitstring = (if v_68 then (l_26,h_25) else caught-fail) in
    {479}let server_wkad_1: bitstring = (if v_68 then catch-fail(hmac(h_alg_5,server_ats_1,x_26)) else caught-fail) in
    {480}let v_69: bool = not-caught-fail(server_wkad_1) in
    {481}let l_27: label = (if v_69 then tls13_finished else caught-fail) in
    {482}let h_26: bitstring = (if v_69 then zero else caught-fail) in
    {483}let x_27: bitstring = (if v_69 then (l_27,h_26) else caught-fail) in
    {484}let client_fkad_1: bitstring = (if v_69 then catch-fail(hmac(h_alg_5,client_ats_1,x_27)) else caught-fail) in
    {485}let v_70: bool = not-caught-fail(client_fkad_1) in
    {486}let (cak_1: aead_key,sak_1: aead_key,cfkad_1: mac_key,ems_3: bitstring) = (if v_63 then (if v_65 then (if v_67 then (if v_68 then (if v_69 then (if v_70 then (client_wkad_1,server_wkad_1,client_fkad_1,ems_2) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
    {487}event Client_cak(id_client,cak_1);
    {488}event Client_sak(id_client,sak_1);
    {489}event Client_cfkad(id_client,cfkad_1);
    {490}let client_hash_msg: bitstring = hmac(h_alg_5,cfin_4,cur_log_4) in
    {491}let client_finished_msg: msg = FIN(client_hash_msg) in
    {492}let cur_log'_1: bitstring = (cur_log_4,client_finished_msg) in
    {493}let l_28: label = tls13_resumption_master_secret in
    {494}let h_27: bitstring = catch-fail(hash(h_alg_5,cur_log'_1)) in
    {495}let v_71: bool = not-caught-fail(h_27) in
    {496}let x_28: bitstring = (if v_71 then (l_28,h_27) else caught-fail) in
    {497}let rms_1: bitstring = (if v_71 then hmac(h_alg_5,master_secret_5,x_28) else fail-any) in
    {498}event Client_rms(id_client,rms_1);
    {499}let enc_client_finished_msg: bitstring = aead_enc(a_alg_4,chk_4,seq_client_1,zero,client_finished_msg) in
    {500}event ClientFinished(id_client,cr_5,sr_4,psk_7,s_pkey_4,c_pkey_2,cak_1,sak_1,ems_3,rms_1);
    {501}out(io, enc_client_finished_msg);
    (
        0
    ) | (
        0
    ) | (
        {502}!
        {503}in(io, (seq_srv_2: nat,seq_client_2: nat));
        {504}if (is_nat(seq_srv_2) && is_nat(seq_client_2)) then
        {505}in(io, enc_msg: bitstring);
        {506}let CRTR(rand_crt: bitstring) = aead_dec(a_alg_4,sak_1,seq_srv_2,zero,enc_msg) in
        {507}new st_6[]: stamp;
        {508}event ClientSequenceServerDataWriteKey(id_client,st_6,seq_srv_2);
        {509}event ClientReceives(id_client,cr_5,sr_4,psk_7,s_pkey_4,c_pkey_2,seq_srv_2,zero,CRTR(rand_crt));
        {510}let cur_log_CRTR_2: bitstring = (cur_log'_1,CRTR(rand_crt)) in
        {539}get long_term_keys(c_dom': domain,sk_2: privkey,c_pkey'_1: pubkey,crt_6: certificate,idP_2: idProc) in
        {511}let @1_x: bitstring = (c_dom',sk_2,c_pkey'_1,crt_6,idP_2) in
        {512}new @1_st[]: stamp;
        {513}event PreciseInput(@1_st,@1_x);
        {514}let () = () in
        {515}event Selected_ltk(c_dom_1,c_dom',idP_2);
        {516}let (sk_3: privkey,c_pkey'_2: pubkey,crt_7: certificate) = (sk_2,c_pkey'_1,crt_6) in
        {517}let certificate_msg_1: msg = CRT(rand_crt,crt_7) in
        {518}let encrypted_certificate_msg_1: bitstring = aead_enc(a_alg_4,cak_1,seq_client_2,zero,certificate_msg_1) in
        {519}new st1_6[]: stamp;
        {520}event ClientSequenceClientDataWriteKey(id_client,st1_6,seq_client_2);
        {521}event ClientSends(id_client,cr_5,sr_4,psk_7,s_pkey_4,c_pkey_2,seq_client_2,zero,certificate_msg_1);
        {522}out(io, encrypted_certificate_msg_1);
        {523}let cur_log_CRT_3: bitstring = (cur_log_CRTR_2,certificate_msg_1) in
        {524}let signed_log_3: bitstring = sign(sk_3,hash(h_alg_5,cur_log_CRT_3)) in
        {525}let certificate_verify_msg_1: msg = CV(signed_log_3) in
        {526}let enc_verify_msg: bitstring = aead_enc(a_alg_4,cak_1,seq_client_2 + 1,zero,certificate_verify_msg_1) in
        {527}new st2_1[]: stamp;
        {528}event ClientSequenceClientDataWriteKey(id_client,st2_1,seq_client_2 + 1);
        {529}event ClientSends(id_client,cr_5,sr_4,psk_7,s_pkey_4,c_pkey_2,seq_client_2 + 1,zero,certificate_verify_msg_1);
        {530}out(io, enc_verify_msg);
        {531}let cur_log_CV_3: bitstring = (cur_log_CRT_3,certificate_verify_msg_1) in
        {532}let hash_msg_3: bitstring = hmac(h_alg_5,cfkad_1,cur_log_CV_3) in
        {533}let enc_fin_2: bitstring = aead_enc(a_alg_4,cak_1,seq_client_2 + 2,zero,FIN(hash_msg_3)) in
        {534}new st3_1[]: stamp;
        {535}event ClientSequenceClientDataWriteKey(id_client,st3_1,seq_client_2 + 2);
        {536}event ClientSends(id_client,cr_5,sr_4,psk_7,s_pkey_4,c_pkey_2,seq_client_2 + 2,zero,FIN(hash_msg_3));
        {537}event ClientFinishedPH(id_client,cr_5,sr_4,psk_7,s_pkey_4,c_pkey_2,rand_crt,c_pkey'_2);
        {538}out(io, enc_fin_2)
    )
) | (
    {540}!
    {541}in(ch_client_FIN, (id_client_1: idProc,ArgsClientFIN(cr_6: bytes32,sr_5: bytes32,h_alg_6: hash_alg,a_alg_5: aead_alg,c_dom_2: domain,s_dom_8: domain,s_pkey_5: pubkey,cert_req: bool,psk_8: preSharedKey,safe_psk_1: bool,comp_psk_1: bool,master_secret_6: bitstring,chk_5: aead_key,seq_client_3: nat,shk_4: aead_key,seq_srv_3: nat,cfin_5: mac_key,sfin_4: mac_key,cur_log_5: bitstring)));
    {542}new st_7[]: stamp;
    {543}event PreciseIdProcess(ch_client_FIN,id_client_1,st_7);
    {544}event Client_server_domain(id_client_1,s_dom_8);
    {545}event Client_Rand_client(id_client_1,cr_6);
    {546}event Client_Rand_server(id_client_1,sr_5);
    {547}event Client_PSKChoosen(id_client_1,psk_8,safe_psk_1);
    {548}event Client_comp_psk(id_client_1,comp_psk_1);
    {549}event Client_chk(id_client_1,chk_5);
    {550}event Client_shk(id_client_1,shk_4);
    {551}event Client_cfin(id_client_1,cfin_5);
    {552}event Client_sfin(id_client_1,sfin_4);
    {553}event Client_Cert_server(id_client_1,s_pkey_5);
    {554}new st1_7[]: stamp;
    {555}event PreciseMess(ch_client_FIN,id_client_1,st1_7,(master_secret_6,s_pkey_5,psk_8,safe_psk_1,comp_psk_1));
    {556}in(io, enc_finished_msg: bitstring);
    {557}let finished_msg_1: msg = aead_dec(a_alg_5,shk_4,seq_srv_3,zero,enc_finished_msg) in
    (
        {558}let FIN(hash_msg_4: bitstring) = finished_msg_1 in
        (
            {559}if (hash_msg_4 = hmac(h_alg_6,sfin_4,cur_log_5)) then
            {560}let cur_log2: bitstring = (cur_log_5,finished_msg_1) in
            {561}if cert_req then
            (
                {562}let seq_srv_4: nat = seq_srv_3 + 1 in
                {580}get long_term_keys(c_dom'_1: domain,sk_4: privkey,c_pkey_3: pubkey,crt_8: certificate,idP_3: idProc) in
                {563}let @2_x: bitstring = (c_dom'_1,sk_4,c_pkey_3,crt_8,idP_3) in
                {564}new @2_st[]: stamp;
                {565}event PreciseInput(@2_st,@2_x);
                {566}let () = () in
                {567}event Selected_ltk(c_dom_2,c_dom'_1,idP_3);
                {568}let (sk_5: privkey,c_pkey_4: pubkey,crt_9: certificate) = (sk_4,c_pkey_3,crt_8) in
                {569}event Client_Cert_client(id_client_1,c_pkey_4);
                {570}let certificate_msg_2: msg = CRT(zero,crt_9) in
                {571}let encrypted_certificate_msg_2: bitstring = aead_enc(a_alg_5,chk_5,seq_client_3,zero,certificate_msg_2) in
                {572}out(io, encrypted_certificate_msg_2);
                {573}let cur_log2_1: bitstring = (cur_log2,certificate_msg_2) in
                {574}let signed_log_4: bitstring = sign(sk_5,hash(h_alg_6,cur_log2_1)) in
                {575}let certificate_verify_msg_2: msg = CV(signed_log_4) in
                {576}let encrypted_certificate_verify_msg_1: bitstring = aead_enc(a_alg_5,chk_5,seq_client_3 + 1,zero,certificate_verify_msg_2) in
                {577}out(io, encrypted_certificate_verify_msg_1);
                {578}let cur_log3: bitstring = (cur_log2_1,certificate_verify_msg_2) in
                {579}out(ch_client_CFIN, (id_client_1,ArgsClientCFIN(cr_6,sr_5,h_alg_6,a_alg_5,c_dom_2,s_dom_8,s_pkey_5,c_pkey_4,NoPsk,false,comp_psk_1,master_secret_6,chk_5,seq_client_3 + 2,shk_4,seq_srv_4,cfin_5,sfin_4,cur_log3)))
            )
            else
                {581}event Client_Cert_client(id_client_1,NoPubKey);
                {582}out(ch_client_CFIN, (id_client_1,ArgsClientCFIN(cr_6,sr_5,h_alg_6,a_alg_5,c_dom_2,s_dom_8,s_pkey_5,NoPubKey,psk_8,safe_psk_1,comp_psk_1,master_secret_6,chk_5,seq_client_3,shk_4,seq_srv_3 + 1,cfin_5,sfin_4,cur_log2)))
        )
        else
            {583}out(io, unexpected_message)
    )
    else
        {584}out(io, bad_record_mac)
) | (
    {585}!
    {586}in(ch_client_CRT, (id_client_2: idProc,ArgsClientCRT(cr_7: bytes32,sr_6: bytes32,h_alg_7: hash_alg,a_alg_6: aead_alg,c_dom_3: domain,s_dom_9: domain,cert_req_1: bool,certificate_msg_3: msg,comp_psk_2: bool,master_secret_7: bitstring,chk_6: aead_key,seq_client_4: nat,shk_5: aead_key,seq_srv_5: nat,cfin_6: mac_key,sfin_5: mac_key,cur_log_6: bitstring)));
    {587}new st_8[]: stamp;
    {588}event PreciseIdProcess(ch_client_CRT,id_client_2,st_8);
    {589}event Client_server_domain(id_client_2,s_dom_9);
    {590}event Client_Rand_client(id_client_2,cr_7);
    {591}event Client_Rand_server(id_client_2,sr_6);
    {592}event Client_comp_psk(id_client_2,comp_psk_2);
    {593}event Client_chk(id_client_2,chk_6);
    {594}event Client_shk(id_client_2,shk_5);
    {595}event Client_cfin(id_client_2,cfin_6);
    {596}event Client_sfin(id_client_2,sfin_5);
    {597}let CRT(=zero,crt_10: certificate) = certificate_msg_3 in
    {598}let cur_log2_2: bitstring = (cur_log_6,certificate_msg_3) in
    {599}in(io, enc_crt_verif_msg: bitstring);
    {600}let certificate_verify_msg_3: msg = aead_dec(a_alg_6,shk_5,seq_srv_5,zero,enc_crt_verif_msg) in
    {601}let CV(signed_log_5: bitstring) = certificate_verify_msg_3 in
    {602}if (verify(get_pkey(crt_10),hash(h_alg_7,cur_log2_2),signed_log_5) && ((get_domain(crt_10) = s_dom_9) && verify_cert(crt_10))) then
    {603}let s_pkey_6: pubkey = get_pkey(crt_10) in
    {604}let cur_log3_1: bitstring = (cur_log2_2,certificate_verify_msg_3) in
    {605}event Client_Cert_server(id_client_2,s_pkey_6);
    {606}out(ch_client_FIN, (id_client_2,ArgsClientFIN(cr_7,sr_6,h_alg_7,a_alg_6,c_dom_3,s_dom_9,s_pkey_6,cert_req_1,NoPsk,false,comp_psk_2,master_secret_7,chk_6,seq_client_4,shk_5,seq_srv_5 + 1,cfin_6,sfin_5,cur_log3_1)))
) | (
    {607}!
    {608}in(ch_client_after_EE, (id_client_3: idProc,ArgsClientAfterEE(cr_8: bytes32,sr_7: bytes32,h_alg_8: hash_alg,a_alg_7: aead_alg,c_dom_4: domain,s_dom_10: domain,psk_9: preSharedKey,safe_psk_2: bool,comp_psk_3: bool,master_secret_8: bitstring,chk_7: aead_key,seq_client_5: nat,shk_6: aead_key,seq_srv_6: nat,cfin_7: mac_key,sfin_6: mac_key,cur_log_7: bitstring)));
    {609}new st_9[]: stamp;
    {610}event PreciseIdProcess(ch_client_after_EE,id_client_3,st_9);
    {611}event Client_server_domain(id_client_3,s_dom_10);
    {612}event Client_Rand_client(id_client_3,cr_8);
    {613}event Client_Rand_server(id_client_3,sr_7);
    {614}event Client_PSKChoosen(id_client_3,psk_9,safe_psk_2);
    {615}event Client_comp_psk(id_client_3,comp_psk_3);
    {616}event Client_chk(id_client_3,chk_7);
    {617}event Client_shk(id_client_3,shk_6);
    {618}event Client_cfin(id_client_3,cfin_7);
    {619}event Client_sfin(id_client_3,sfin_6);
    {620}new st1_8[]: stamp;
    {621}event PreciseMess(ch_client_after_EE,id_client_3,st1_8,master_secret_8);
    {622}if (psk_9 = NoPsk) then
    (
        {623}in(io, enc_msg_1: bitstring);
        {624}let msg': msg = aead_dec(a_alg_7,shk_6,seq_srv_6,zero,enc_msg_1) in
        {625}let CRTR(=zero) = msg' in
        (
            {626}let cur_log2_3: bitstring = (cur_log_7,msg') in
            {627}in(io, enc_crt_msg: bitstring);
            {628}let certificate_msg_4: msg = aead_dec(a_alg_7,shk_6,seq_srv_6 + 1,zero,enc_crt_msg) in
            {629}out(ch_client_CRT, (id_client_3,ArgsClientCRT(cr_8,sr_7,h_alg_8,a_alg_7,c_dom_4,s_dom_10,true,certificate_msg_4,comp_psk_3,master_secret_8,chk_7,seq_client_5,shk_6,seq_srv_6 + 2,cfin_7,sfin_6,cur_log2_3)))
        )
        else
            {630}let CRT(=zero,crt_11: certificate) = msg' in
                {631}out(ch_client_CRT, (id_client_3,ArgsClientCRT(cr_8,sr_7,h_alg_8,a_alg_7,c_dom_4,s_dom_10,false,msg',comp_psk_3,master_secret_8,chk_7,seq_client_5,shk_6,seq_srv_6 + 1,cfin_7,sfin_6,cur_log_7)))
            else
                {632}out(io, unexpected_message)
    )
    else
        {633}event Client_Cert_server(id_client_3,NoPubKey);
        {634}out(ch_client_FIN, (id_client_3,ArgsClientFIN(cr_8,sr_7,h_alg_8,a_alg_7,c_dom_4,s_dom_10,NoPubKey,false,psk_9,safe_psk_2,comp_psk_3,master_secret_8,chk_7,seq_client_5,shk_6,seq_srv_6,cfin_7,sfin_6,cur_log_7)))
) | (
    {635}!
    {641}get long_term_keys(dom1: domain,sk1: privkey,pk1: pubkey,cert1: certificate,idP1: idProc) in
    {636}event Same(idP1);
    {640}get long_term_keys(dom2: domain,sk2: privkey,pk2: pubkey,cert2: certificate,idP2: idProc) in
    {637}event Same(idP2);
    {638}insert long_term_keys(choice[dom1,dom2],choice[sk1,sk2],choice[pk1,pk2],choice[cert1,cert2],choice[idP1,idP2]);
    {639}insert long_term_keys(choice[dom2,dom1],choice[sk2,sk1],choice[pk2,pk1],choice[cert2,cert1],choice[idP2,idP1])
) | (
    {642}!
    {648}get pre_shared_keys(c_dom1: domain,s_dom_11: domain,h_alg_9: hash_alg,id1: identityPsk,psk1: preSharedKey,idP1_1: idProc,safe1: bool) in
    {643}event Same(idP1_1);
    {647}get pre_shared_keys(c_dom2: domain,=s_dom_11,=h_alg_9,id2: identityPsk,psk2: preSharedKey,idP2_1: idProc,safe2: bool) in
    {644}event Same(idP2_1);
    {645}insert pre_shared_keys(choice[c_dom1,c_dom2],s_dom_11,h_alg_9,choice[id1,id2],choice[psk1,psk2],choice[idP1_1,idP2_1],choice[safe1,safe2]);
    {646}insert pre_shared_keys(choice[c_dom2,c_dom1],s_dom_11,h_alg_9,choice[id2,id1],choice[psk2,psk1],choice[idP2_1,idP1_1],choice[safe2,safe1])
) | (
    0
) | (
    {649}!
    {650}new id_client_4: idProc;
    {651}in(io, backend_dom: domain);
    {652}event Same(backend_dom);
    {653}in(io, frontend_dom: domain);
    {654}event Same(frontend_dom);
    {655}in(io, c_dom_5: domain);
    {656}event Same(c_dom_5);
    {5170}get ech_configurations(ech_config(id_4: configId,g: group,pkR_1: element,=frontend_dom,h_alg_10: hash_alg,a_alg_8: aead_alg),skR_1: bitstring) in
    {657}let ech_conf: echConfig = ech_config(id_4,g,pkR_1,frontend_dom,h_alg_10,a_alg_8) in
    {658}let @6_id_client: idProc = id_client_4 in
    {659}let @6_i_extra_ext: extraExt = empty_extra_ext in
    {660}let @6_tls_h: hash_alg = id_hash(StrongHash,1) in
    {661}let @6_tls_a: aead_alg = id_aead(StrongAE,1) in
    {662}let @6_tls_g: group = id_g(StrongDH,1) in
    {663}let @6_backend_h: hash_alg = id_hash(StrongHash,1) in
    {664}let @6_backend_a: aead_alg = id_aead(StrongAE,1) in
    {665}let @6_backend_g: group = id_g(StrongDH,1) in
    {666}let @6_use_psk: bool = false in
    {667}let @6_comp_psk: bool = false in
    {668}in(io, @6_send_kex: bool);
    {669}let () = () in
    {670}event Same(@6_send_kex);
    {671}let @6_use_grease: bool = false in
    {672}let send_kex: bool = (not(false) || @6_send_kex) in
    {673}let ech_config(config_id: configId,ech_g_2: group,pkR_2: element,o_dom: domain,ech_h_2: hash_alg,ech_a_2: aead_alg) = ech_conf in
    {674}event ClientOffersEchConfig(@6_id_client,ech_conf);
    {675}let info: bitstring = (tls_ech_str,ech_conf) in
    {676}new s_8[]: seed;
    {677}let v_72: bitstring = (dh_xy(s_8,pkR_2),dh_encap_fun(ech_g_2,pkR_2,dh_xy(s_8,pkR_2))) in
    {678}let v_73: bool = success?(1-proj-2-tuple(v_72)) in
    {679}let enc: element = (if v_73 then 2-proj-2-tuple(v_72) else caught-fail) in
    {680}let shared_secret: element = (if v_73 then 1-proj-2-tuple(v_72) else caught-fail) in
    {681}let r: hpkeRole = (if v_73 then S else caught-fail) in
    {682}let salt: bitstring = (if v_73 then zero else caught-fail) in
    {683}let label_1: label = (if v_73 then hpke_info_hash else caught-fail) in
    {684}let k_6: bitstring = (if v_73 then (label_1,info) else caught-fail) in
    {685}let info_hash: bitstring = (if v_73 then catch-fail(hmac(ech_h_2,salt,k_6)) else caught-fail) in
    {686}let v_74: bool = not-caught-fail(info_hash) in
    {687}let label_2: label = (if v_74 then hpke_secret else caught-fail) in
    {688}let ikm: bitstring = (if v_74 then zero else caught-fail) in
    {689}let k_7: bitstring = (if v_74 then (label_2,ikm) else caught-fail) in
    {690}let xsecret: bitstring = (if v_74 then catch-fail(hmac(ech_h_2,shared_secret,k_7)) else caught-fail) in
    {691}let v_75: bool = not-caught-fail(xsecret) in
    {692}let label_3: label = (if v_75 then hpke_key else caught-fail) in
    {693}let x_29: bitstring = (if v_75 then (label_3,info_hash) else caught-fail) in
    {694}let key: aead_key = (if v_75 then catch-fail(hmac(ech_h_2,xsecret,x_29)) else caught-fail) in
    {695}let v_76: bool = not-caught-fail(key) in
    {696}let label_4: label = (if v_76 then hpke_base_nonce else caught-fail) in
    {697}let x_30: bitstring = (if v_76 then (label_4,info_hash) else caught-fail) in
    {698}let base_nonce: bitstring = (if v_76 then catch-fail(hmac(ech_h_2,xsecret,x_30)) else caught-fail) in
    {699}let v_77: bool = not-caught-fail(base_nonce) in
    {700}let (enc_1: element,context: hpkeContext) = (if v_73 then (enc,(if v_74 then (if v_75 then (if v_76 then (if v_77 then hpke_context(r,key,base_nonce) else fail-any) else fail-any) else fail-any) else fail-any)) else fail-any) in
    {701}let ech_config(config_id_1: configId,ech_g_3: group,pkR_3: element,o_dom_1: domain,ech_h_3: hash_alg,ech_a_3: aead_alg) = ech_conf in
    {702}new s_9[]: seed;
    {703}let gx_2: element = dh_pub(@6_backend_g,dh_k(s_9)) in
    {704}let v_78: bitstring = (dh_k(s_9),gx_2) in
    {705}let v_79: bool = success?(1-proj-2-tuple(v_78)) in
    {706}let gx_3: element = (if v_79 then 2-proj-2-tuple(v_78) else caught-fail) in
    {707}let x_31: bitstring = (if v_79 then 1-proj-2-tuple(v_78) else caught-fail) in
    {708}let kex: kex_alg = (if v_79 then (if send_kex then DHE_kex(@6_backend_g,gx_3) else DHE_group(@6_backend_g)) else caught-fail) in
    {709}let (i_kex_ext: keyShareExt,i_kex_data: bitstring) = (if v_79 then (client_kex_ext(kex),(x_31,@6_backend_g)) else fail-any) in
    {710}new s_10[]: seed;
    {711}let gx_4: element = dh_pub(@6_tls_g,dh_k(s_10)) in
    {712}let v_80: bitstring = (dh_k(s_10),gx_4) in
    {713}let v_81: bool = success?(1-proj-2-tuple(v_80)) in
    {714}let gx_5: element = (if v_81 then 2-proj-2-tuple(v_80) else caught-fail) in
    {715}let x_32: bitstring = (if v_81 then 1-proj-2-tuple(v_80) else caught-fail) in
    {716}let kex_1: kex_alg = (if v_81 then (if send_kex then DHE_kex(@6_tls_g,gx_5) else DHE_group(@6_tls_g)) else caught-fail) in
    {717}let (o_kex_ext: keyShareExt,o_kex_data: bitstring) = (if v_81 then (client_kex_ext(kex_1),(x_32,@6_tls_g)) else fail-any) in
    {718}new rand24_1[]: bytes24;
    {719}new rand8_1[]: bytes8;
    {720}let i_cr: bytes32 = B32(rand24_1,rand8_1) in
    {721}new rand24_2[]: bytes24;
    {722}new rand8_2[]: bytes8;
    {723}let o_cr: bytes32 = B32(rand24_2,rand8_2) in
    {724}let v_82: bool = @6_use_grease in
    {725}new payload[]: bitstring;
    {726}new configid[]: configId;
    {727}new s_11[]: seed;
    {728}let gx_6: element = (if v_82 then dh_pub(ech_g_3,dh_k(s_11)) else caught-fail) in
    {729}let v_83: bitstring = (if v_82 then catch-fail((dh_k(s_11),gx_6)) else caught-fail) in
    {730}let v_84: bool = (not-caught-fail(v_83) && success?(1-proj-2-tuple(v_83))) in
    {731}let gx_grease: element = (if v_84 then 2-proj-2-tuple(v_83) else caught-fail) in
    {732}let x_grease: bitstring = (if v_84 then 1-proj-2-tuple(v_83) else caught-fail) in
    {733}new s_12[]: seed;
    {734}let v_85: bitstring = (if v_84 then catch-fail((dh_xy(s_12,gx_grease),dh_encap_fun(ech_g_3,gx_grease,dh_xy(s_12,gx_grease)))) else caught-fail) in
    {735}let v_86: bool = (not-caught-fail(v_85) && success?(1-proj-2-tuple(v_85))) in
    {736}let enc_grease: element = (if v_86 then 2-proj-2-tuple(v_85) else caught-fail) in
    {737}let secret_grease: element = (if v_86 then 1-proj-2-tuple(v_85) else caught-fail) in
    {738}let ech_inner_or_grease: echExt = (if v_82 then (if v_84 then (if v_86 then ECHClientHelloOuter(ech_h_3,ech_a_3,configid,enc_grease,payload) else fail-any) else fail-any) else ECHClientHelloInner) in
    {739}let (dom_psk: domain,cr_psk: bytes32,kex_ext_psk: keyShareExt,extra_psk: extraExt,h_psk: hash_alg,a_psk: aead_alg) = (if @6_use_grease then (o_dom_1,o_cr,o_kex_ext,empty_extra_ext,@6_tls_h,@6_tls_a) else (backend_dom,i_cr,i_kex_ext,@6_i_extra_ext,@6_backend_h,@6_backend_a)) in
    {740}let old_psk_data: bitstring = zero in
    {741}let cur_log_8: bitstring = zero in
    {742}if @6_use_psk then
    (
        {743}let (psk_10: preSharedKey,id_5: identityPsk,old_es: bitstring,is_safe: bool) = old_psk_data in
        (
            {744}let offer_2: params = nego(TLS13,h_psk,a_psk,kex_ext_psk,SNI(dom_psk),ech_inner_or_grease,extra_psk,trunc_client_psk_ext(id_5)) in
            {745}let cur_log'_2: bitstring = (cur_log_8,CH(cr_psk,offer_2)) in
            {746}let s_13: bitstring = zero in
            {747}let k_8: bitstring = catch-fail(psk2b(psk_10)) in
            {748}let v_87: bool = not-caught-fail(k_8) in
            {749}let early_secret_5: bitstring = catch-fail((if v_87 then hmac(h_psk,s_13,k_8) else fail-any)) in
            {750}let v_88: bool = not-caught-fail(early_secret_5) in
            {751}let l_29: label = (if v_88 then tls13_ext_res_binder else caught-fail) in
            {752}let m_5: bitstring = (if v_88 then zero else caught-fail) in
            {753}let h_28: bitstring = (if v_88 then catch-fail(hash(h_psk,m_5)) else caught-fail) in
            {754}let v_89: bool = not-caught-fail(h_28) in
            {755}let x_33: bitstring = (if v_89 then (l_29,h_28) else caught-fail) in
            {756}let binder_key_3: bitstring = (if v_88 then catch-fail((if v_89 then hmac(h_psk,early_secret_5,x_33) else fail-any)) else caught-fail) in
            {757}let v_90: bool = not-caught-fail(binder_key_3) in
            {758}let v_91: bitstring = catch-fail((if v_88 then (if v_90 then (early_secret_5,binder_key_3) else fail-any) else fail-any)) in
            {759}let v_92: bool = (not-caught-fail(v_91) && success?(1-proj-2-tuple(v_91))) in
            {760}let kb_3: mac_key = (if v_92 then 2-proj-2-tuple(v_91) else caught-fail) in
            {761}let es_2: bitstring = (if v_92 then 1-proj-2-tuple(v_91) else caught-fail) in
            {762}let binders_1: bitstring = (if v_92 then catch-fail(hmac(h_psk,kb_3,cur_log'_2)) else caught-fail) in
            {763}let v_93: bool = not-caught-fail(binders_1) in
            {764}let v_94: bitstring = catch-fail((if v_92 then (if v_93 then (client_psk_ext(id_5,binders_1),(psk_10,id_5,es_2,is_safe)) else fail-any) else fail-any)) in
            {765}let v_95: bool = (not-caught-fail(v_94) && success?(1-proj-2-tuple(v_94))) in
            {766}let psk_data: bitstring = (if v_95 then 2-proj-2-tuple(v_94) else caught-fail) in
            {767}let psk_ext_2: preSharedKeyExt = (if v_95 then 1-proj-2-tuple(v_94) else caught-fail) in
            {768}let i_offer: params = (if v_95 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_2) else caught-fail) in
            {769}let i_client_hello: msg = (if v_95 then CH(i_cr,i_offer) else caught-fail) in
            {770}let v_96: bool = (if v_95 then catch-fail(@6_use_grease) else caught-fail) in
            {771}let o_offer: params = (if v_96 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),ech_inner_or_grease,empty_extra_ext,psk_ext_2) else caught-fail) in
            {772}new fake_id[]: identityPsk;
            {773}new fake_binder[]: bitstring;
            {774}let o_psk_ext: preSharedKeyExt = (if is-false(v_96) then (if @6_use_psk then client_psk_ext(fake_id,fake_binder) else empty_psk_ext) else caught-fail) in
            {775}let o_ech_ext_ADD: echExt = (if is-false(v_96) then ECHClientHelloOuter(ech_h_3,ech_a_3,config_id_1,enc_1,zero) else caught-fail) in
            {776}let o_offer_ADD: params = (if is-false(v_96) then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),o_ech_ext_ADD,empty_extra_ext,o_psk_ext) else caught-fail) in
            {777}let o_client_hello_ADD: msg = (if is-false(v_96) then CH(o_cr,o_offer_ADD) else caught-fail) in
            {778}let n: nat = (if is-false(v_96) then 1 else caught-fail) in
            {779}let v_97: hpkeContext = (if is-false(v_96) then catch-fail(context) else caught-fail) in
            {780}let v_98: bool = (not-caught-fail(v_97) && ((S =nf 1-proj-hpke_context(v_97)) && success?(1-proj-hpke_context(v_97)))) in
            {781}let base_nonce_1: bitstring = (if v_98 then 3-proj-hpke_context(v_97) else caught-fail) in
            {782}let key_1: aead_key = (if v_98 then 2-proj-hpke_context(v_97) else caught-fail) in
            {783}let payload_1: bitstring = (if is-false(v_96) then catch-fail((if v_98 then aead_enc(ech_a_3,key_1,(base_nonce_1,n),o_client_hello_ADD,i_client_hello) else fail-any)) else caught-fail) in
            {784}let v_99: bool = not-caught-fail(payload_1) in
            {785}let o_ech_ext: echExt = (if v_99 then ECHClientHelloOuter(ech_h_3,ech_a_3,config_id_1,enc_1,payload_1) else caught-fail) in
            {786}let o_offer_1: params = (if v_99 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),o_ech_ext,empty_extra_ext,o_psk_ext) else caught-fail) in
            {787}let (o_client_hello: msg,i_client_hello_1: msg,o_cr_1: bytes32,i_cr_1: bytes32,o_kex_data_1: bitstring,i_kex_data_1: bitstring,o_psk_ext_1: preSharedKeyExt,psk_data_1: bitstring,o_ech_ext_1: echExt) = (if v_95 then (if undo-catch-fail(v_96) then (CH(o_cr,o_offer),CH(o_cr,o_offer),o_cr,o_cr,o_kex_data,o_kex_data,psk_ext_2,psk_data,ech_inner_or_grease) else (if v_99 then (CH(o_cr,o_offer_1),i_client_hello,o_cr,i_cr,o_kex_data,i_kex_data,o_psk_ext,psk_data,o_ech_ext) else fail-any)) else fail-any) in
            {788}out(io, o_client_hello);
            {789}let (psk_11: preSharedKey,id_6: identityPsk,es_3: bitstring,safe: bool) = psk_data_1 in
            (
                {790}if (false && (not(@6_use_grease) && (psk_11 ≠ NoPsk))) then
                {791}let client_hello_1: bitstring = (zero,i_client_hello_1) in
                {792}let l_30: label = tls13_client_early_traffic_secret in
                {793}let h_29: bitstring = catch-fail(hash(@6_backend_h,client_hello_1)) in
                {794}let v_100: bool = not-caught-fail(h_29) in
                {795}let x_34: bitstring = (if v_100 then (l_30,h_29) else caught-fail) in
                {796}let atsc0_1: bitstring = catch-fail((if v_100 then hmac(@6_backend_h,es_3,x_34) else fail-any)) in
                {797}let v_101: bool = not-caught-fail(atsc0_1) in
                {798}let l_31: label = (if v_101 then tls13_key else caught-fail) in
                {799}let h_30: bitstring = (if v_101 then zero else caught-fail) in
                {800}let x_35: bitstring = (if v_101 then (l_31,h_30) else caught-fail) in
                {801}let kc0_1: bitstring = (if v_101 then catch-fail(hmac(@6_backend_h,atsc0_1,x_35)) else caught-fail) in
                {802}let v_102: bool = not-caught-fail(kc0_1) in
                {803}let l_32: label = (if v_102 then tls13_early_exporter_master_secret else caught-fail) in
                {804}let h_31: bitstring = (if v_102 then catch-fail(hash(@6_backend_h,client_hello_1)) else caught-fail) in
                {805}let v_103: bool = not-caught-fail(h_31) in
                {806}let x_36: bitstring = (if v_103 then (l_32,h_31) else caught-fail) in
                {807}let ems0_2: bitstring = (if v_102 then catch-fail((if v_103 then hmac(@6_backend_h,es_3,x_36) else fail-any)) else caught-fail) in
                {808}let v_104: bool = not-caught-fail(ems0_2) in
                {809}let (wkc0_1: aead_key,ems0_3: bitstring) = (if v_101 then (if v_102 then (if v_104 then (kc0_1,ems0_2) else fail-any) else fail-any) else fail-any) in
                {810}!
                {811}in(io, (i_1: nat,ad_1: bitstring));
                {812}if is_nat(i_1) then
                {813}new msg_ed[]: bitstring;
                {814}let enc_ed: bitstring = aead_enc(@6_backend_a,wkc0_1,i_1,ad_1,msg_ed) in
                {815}new st_10: stamp;
                {816}event ClientSequenceClient0RTTDataWriteKey(@6_id_client,st_10,i_1);
                {817}event ClientSends0(@6_id_client,i_cr_1,psk_11,i_1,ad_1,msg_ed);
                {818}out(io, enc_ed)
            ) | (
                {819}in(io, server_hello_1: msg);
                {820}let SH(B32(sr24_2: bytes24,sr8_1: bytes8),mode: params) = server_hello_1 in
                (
                    {821}if (false && (B32(sr24_2,sr8_1) = B32(HRR24,HRR8))) then
                    (
                        {822}if (send_kex ≠ true) then
                        {823}let nego(=TLS13,h_alg_11: hash_alg,a_alg_9: aead_alg,hrr_kex_ext(g_1: group),=empty_sni_ext,ech_ext_2: echExt,=empty_extra_ext,=empty_psk_ext) = mode in
                        {824}let v_105: bool = (ech_ext_2 = empty_ech_ext) in
                        {825}let hrr_mode: params = (if not(v_105) then nego(TLS13,@6_backend_h,@6_backend_a,hrr_kex_ext(@6_backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) else caught-fail) in
                        {826}let hrr: msg = (if not(v_105) then SH(B32(HRR24,HRR8),hrr_mode) else caught-fail) in
                        {827}let cur_log_9: bitstring = (if not(v_105) then ((zero,i_client_hello_1),hrr) else caught-fail) in
                        {828}let transcript_hrr_ech_conf: bitstring = (if not(v_105) then catch-fail(hash(@6_backend_h,cur_log_9)) else caught-fail) in
                        {829}let v_106: bool = not-caught-fail(transcript_hrr_ech_conf) in
                        {830}let s_14: bitstring = (if v_106 then zero else caught-fail) in
                        {831}let k_9: bitstring = (if v_106 then catch-fail(b32_2_b(get_random(i_client_hello_1))) else caught-fail) in
                        {832}let v_107: bool = not-caught-fail(k_9) in
                        {833}let k_10: bitstring = (if v_106 then catch-fail((if v_107 then hmac(@6_backend_h,s_14,k_9) else fail-any)) else caught-fail) in
                        {834}let v_108: bool = not-caught-fail(k_10) in
                        {835}let l_33: label = (if v_108 then hrr_ech_accept_confirmation else caught-fail) in
                        {836}let x_37: bitstring = (if v_108 then (l_33,cur_log_9) else caught-fail) in
                        {837}let is_ech_accepted: bool = (if v_105 then false else (if (ech_ext_2 = ECHHelloRetryRequest((if v_106 then crop_into_bytes8((if v_108 then hmac(@6_backend_h,k_10,x_37) else fail-any)) else fail-any))) then true else false)) in
                        {838}event ClientEchAcceptance(@6_id_client,is_ech_accepted);
                        {839}if is_ech_accepted then
                        (
                            {840}let cur_log_IN1_HRR: bitstring = ((zero,i_client_hello_1),server_hello_1) in
                            {841}let ech_config(config_id_2: configId,ech_g_4: group,pkR_4: element,o_dom_2: domain,ech_h_4: hash_alg,ech_a_4: aead_alg) = ech_conf in
                            {842}let send_key_share: bool = true in
                            {843}new s_15[]: seed;
                            {844}let gx_7: element = dh_pub(@6_backend_g,dh_k(s_15)) in
                            {845}let v_109: bitstring = (dh_k(s_15),gx_7) in
                            {846}let v_110: bool = success?(1-proj-2-tuple(v_109)) in
                            {847}let gx_8: element = (if v_110 then 2-proj-2-tuple(v_109) else caught-fail) in
                            {848}let x_38: bitstring = (if v_110 then 1-proj-2-tuple(v_109) else caught-fail) in
                            {849}let kex_2: kex_alg = (if v_110 then (if send_key_share then DHE_kex(@6_backend_g,gx_8) else DHE_group(@6_backend_g)) else caught-fail) in
                            {850}let (i_kex_ext_1: keyShareExt,i_kex_data_2: bitstring) = (if v_110 then (client_kex_ext(kex_2),(x_38,@6_backend_g)) else fail-any) in
                            {851}let send_key_share_1: bool = true in
                            {852}new s_16[]: seed;
                            {853}let gx_9: element = dh_pub(@6_tls_g,dh_k(s_16)) in
                            {854}let v_111: bitstring = (dh_k(s_16),gx_9) in
                            {855}let v_112: bool = success?(1-proj-2-tuple(v_111)) in
                            {856}let gx_10: element = (if v_112 then 2-proj-2-tuple(v_111) else caught-fail) in
                            {857}let x_39: bitstring = (if v_112 then 1-proj-2-tuple(v_111) else caught-fail) in
                            {858}let kex_3: kex_alg = (if v_112 then (if send_key_share_1 then DHE_kex(@6_tls_g,gx_10) else DHE_group(@6_tls_g)) else caught-fail) in
                            {859}let (o_kex_ext_1: keyShareExt,o_kex_data_2: bitstring) = (if v_112 then (client_kex_ext(kex_3),(x_39,@6_tls_g)) else fail-any) in
                            {860}new rand24_3[]: bytes24;
                            {861}new rand8_3[]: bytes8;
                            {862}let i_cr_2: bytes32 = B32(rand24_3,rand8_3) in
                            {863}new rand24_4[]: bytes24;
                            {864}new rand8_4[]: bytes8;
                            {865}let o_cr_2: bytes32 = B32(rand24_4,rand8_4) in
                            {866}let ech_ext_3: echExt = ECHClientHelloInner in
                            {867}if @6_use_psk then
                            (
                                {868}let (psk_12: preSharedKey,id_7: identityPsk,old_es_1: bitstring,is_safe_1: bool) = psk_data_1 in
                                (
                                    {869}let offer_3: params = nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_1,SNI(backend_dom),ech_ext_3,@6_i_extra_ext,trunc_client_psk_ext(id_7)) in
                                    {870}let cur_log'_3: bitstring = (cur_log_IN1_HRR,CH(i_cr_2,offer_3)) in
                                    {871}let s_17: bitstring = zero in
                                    {872}let k_11: bitstring = catch-fail(psk2b(psk_12)) in
                                    {873}let v_113: bool = not-caught-fail(k_11) in
                                    {874}let early_secret_6: bitstring = catch-fail((if v_113 then hmac(@6_backend_h,s_17,k_11) else fail-any)) in
                                    {875}let v_114: bool = not-caught-fail(early_secret_6) in
                                    {876}let l_34: label = (if v_114 then tls13_ext_res_binder else caught-fail) in
                                    {877}let m_6: bitstring = (if v_114 then zero else caught-fail) in
                                    {878}let h_32: bitstring = (if v_114 then catch-fail(hash(@6_backend_h,m_6)) else caught-fail) in
                                    {879}let v_115: bool = not-caught-fail(h_32) in
                                    {880}let x_40: bitstring = (if v_115 then (l_34,h_32) else caught-fail) in
                                    {881}let binder_key_4: bitstring = (if v_114 then catch-fail((if v_115 then hmac(@6_backend_h,early_secret_6,x_40) else fail-any)) else caught-fail) in
                                    {882}let v_116: bool = not-caught-fail(binder_key_4) in
                                    {883}let v_117: bitstring = catch-fail((if v_114 then (if v_116 then (early_secret_6,binder_key_4) else fail-any) else fail-any)) in
                                    {884}let v_118: bool = (not-caught-fail(v_117) && success?(1-proj-2-tuple(v_117))) in
                                    {885}let kb_4: mac_key = (if v_118 then 2-proj-2-tuple(v_117) else caught-fail) in
                                    {886}let es_4: bitstring = (if v_118 then 1-proj-2-tuple(v_117) else caught-fail) in
                                    {887}let binders_2: bitstring = (if v_118 then catch-fail(hmac(@6_backend_h,kb_4,cur_log'_3)) else caught-fail) in
                                    {888}let v_119: bool = not-caught-fail(binders_2) in
                                    {889}let v_120: bitstring = catch-fail((if v_118 then (if v_119 then (client_psk_ext(id_7,binders_2),(psk_12,id_7,es_4,is_safe_1)) else fail-any) else fail-any)) in
                                    {890}let v_121: bool = (not-caught-fail(v_120) && success?(1-proj-2-tuple(v_120))) in
                                    {891}let psk_data_2: bitstring = (if v_121 then 2-proj-2-tuple(v_120) else caught-fail) in
                                    {892}let psk_ext_3: preSharedKeyExt = (if v_121 then 1-proj-2-tuple(v_120) else caught-fail) in
                                    {893}let i_offer_1: params = (if v_121 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_1,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_3) else caught-fail) in
                                    {894}let i_client_hello_2: msg = (if v_121 then CH(i_cr_2,i_offer_1) else caught-fail) in
                                    {895}new fake_id_1[]: identityPsk;
                                    {896}new fake_binder_1[]: bitstring;
                                    {897}let o_psk_ext_2: preSharedKeyExt = (if v_121 then (if @6_use_psk then client_psk_ext(fake_id_1,fake_binder_1) else empty_psk_ext) else caught-fail) in
                                    {898}let o_ech_ext_ADD_1: echExt = (if v_121 then ECHClientHelloOuter(ech_h_4,ech_a_4,config_id_2,zero,zero) else caught-fail) in
                                    {899}let o_offer_ADD_1: params = (if v_121 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_1,SNI(o_dom_2),o_ech_ext_ADD_1,empty_extra_ext,o_psk_ext_2) else caught-fail) in
                                    {900}let o_client_hello_ADD_1: msg = (if v_121 then CH(o_cr_2,o_offer_ADD_1) else caught-fail) in
                                    {901}let n_1: nat = (if v_121 then 2 else caught-fail) in
                                    {902}let v_122: hpkeContext = (if v_121 then catch-fail(context) else caught-fail) in
                                    {903}let v_123: bool = (not-caught-fail(v_122) && ((S =nf 1-proj-hpke_context(v_122)) && success?(1-proj-hpke_context(v_122)))) in
                                    {904}let base_nonce_2: bitstring = (if v_123 then 3-proj-hpke_context(v_122) else caught-fail) in
                                    {905}let key_2: aead_key = (if v_123 then 2-proj-hpke_context(v_122) else caught-fail) in
                                    {906}let payload_2: bitstring = (if v_121 then catch-fail((if v_123 then aead_enc(ech_a_4,key_2,(base_nonce_2,n_1),o_client_hello_ADD_1,i_client_hello_2) else fail-any)) else caught-fail) in
                                    {907}let v_124: bool = not-caught-fail(payload_2) in
                                    {908}let o_ech_ext_2: echExt = (if v_124 then ECHClientHelloOuter(ech_h_4,ech_a_4,config_id_2,zero,payload_2) else caught-fail) in
                                    {909}let o_offer_2: params = (if v_124 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_1,SNI(o_dom_2),o_ech_ext_2,empty_extra_ext,o_psk_ext_2) else caught-fail) in
                                    {910}let (o_client_hello': msg,i_client_hello': msg,i_cr': bytes32,i_kex_data': bitstring,psk_data': bitstring) = (if v_121 then (if v_124 then (CH(o_cr_2,o_offer_2),i_client_hello_2,i_cr_2,i_kex_data_2,psk_data_2) else fail-any) else fail-any) in
                                    {911}out(io, o_client_hello');
                                    {912}in(io, server_hello': msg);
                                    {913}let SH(B32(sr24': bytes24,sr8': bytes8),params': params) = server_hello' in
                                    {914}let cur_log_IN1_HRR_IN2: bitstring = (cur_log_IN1_HRR,i_client_hello') in
                                    {915}let sh_modified_1: msg = SH(B32(sr24',zero8),params') in
                                    {916}let cur_log_sh_1: bitstring = (cur_log_IN1_HRR_IN2,sh_modified_1) in
                                    {917}let transcript_ech_conf_1: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_1)) in
                                    {918}let v_125: bool = not-caught-fail(transcript_ech_conf_1) in
                                    {919}let s_18: bitstring = (if v_125 then zero else caught-fail) in
                                    {920}let k_12: bitstring = (if v_125 then catch-fail(b32_2_b(get_random(i_client_hello'))) else caught-fail) in
                                    {921}let v_126: bool = not-caught-fail(k_12) in
                                    {922}let k_13: bitstring = (if v_125 then catch-fail((if v_126 then hmac(@6_backend_h,s_18,k_12) else fail-any)) else caught-fail) in
                                    {923}let v_127: bool = not-caught-fail(k_13) in
                                    {924}let l_35: label = (if v_127 then ech_accept_confirmation else caught-fail) in
                                    {925}let x_41: bitstring = (if v_127 then (l_35,cur_log_sh_1) else caught-fail) in
                                    {926}let sr8_2: bytes8 = (if v_125 then catch-fail(crop_into_bytes8((if v_127 then hmac(@6_backend_h,k_13,x_41) else fail-any))) else caught-fail) in
                                    {927}let v_128: bool = not-caught-fail(sr8_2) in
                                    {928}if (B32(sr24',sr8') = (if v_125 then (if v_128 then B32(sr24',sr8_2) else fail-any) else fail-any)) then
                                    {929}let (x_42: bitstring,g_2: group) = i_kex_data' in
                                    {930}let (psk_offer: preSharedKey,id_offer: identityPsk,es_offer: bitstring,is_safe_offer: bool) = psk_data' in
                                    {931}event Client_PSKOffer(@6_id_client,psk_offer,id_offer,is_safe_offer);
                                    {932}event Client_Rand_client(@6_id_client,i_cr');
                                    {933}event Client_DH_client(@6_id_client,dh_pub(g_2,x_42));
                                    {934}event Client_server_domain(@6_id_client,backend_dom);
                                    {935}let SH(sr_8: bytes32,mode_1: params) = server_hello' in
                                    {936}event Client_Rand_server(@6_id_client,sr_8);
                                    {937}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_2,gy_1: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_4: preSharedKeyExt) = mode_1 in
                                    (
                                        {938}let cur_log2_4: bitstring = (cur_log_IN1_HRR_IN2,server_hello') in
                                        {939}event Client_DH_server(@6_id_client,gy_1);
                                        {940}let v_129: bool = (psk_ext_4 = empty_psk_ext) in
                                        {941}let psk_13: preSharedKey = (if v_129 then NoPsk else caught-fail) in
                                        {942}let s_19: bitstring = (if v_129 then zero else caught-fail) in
                                        {943}let k_14: bitstring = (if v_129 then catch-fail(psk2b(psk_13)) else caught-fail) in
                                        {944}let v_130: bool = not-caught-fail(k_14) in
                                        {945}let early_secret_7: bitstring = (if v_129 then catch-fail((if v_130 then hmac(@6_backend_h,s_19,k_14) else fail-any)) else caught-fail) in
                                        {946}let v_131: bool = not-caught-fail(early_secret_7) in
                                        {947}let l_36: label = (if v_131 then tls13_ext_res_binder else caught-fail) in
                                        {948}let m_7: bitstring = (if v_131 then zero else caught-fail) in
                                        {949}let h_33: bitstring = (if v_131 then catch-fail(hash(@6_backend_h,m_7)) else caught-fail) in
                                        {950}let v_132: bool = not-caught-fail(h_33) in
                                        {951}let x_43: bitstring = (if v_132 then (l_36,h_33) else caught-fail) in
                                        {952}let binder_key_5: bitstring = (if v_131 then catch-fail((if v_132 then hmac(@6_backend_h,early_secret_7,x_43) else fail-any)) else caught-fail) in
                                        {953}let v_133: bool = not-caught-fail(binder_key_5) in
                                        {954}let v_134: bitstring = (if v_129 then catch-fail((if v_131 then (if v_133 then (early_secret_7,binder_key_5) else fail-any) else fail-any)) else caught-fail) in
                                        {955}let v_135: bool = (not-caught-fail(v_134) && success?(1-proj-2-tuple(v_134))) in
                                        {956}let kb_5: mac_key = (if v_135 then 2-proj-2-tuple(v_134) else caught-fail) in
                                        {957}let es_5: bitstring = (if v_135 then 1-proj-2-tuple(v_134) else caught-fail) in
                                        {958}let v_136: bitstring = (if not(v_129) then catch-fail(psk_data') else caught-fail) in
                                        {959}let v_137: bool = (not-caught-fail(v_136) && success?(1-proj-4-tuple(v_136))) in
                                        {960}let is_safe_2: bool = (if v_137 then 4-proj-4-tuple(v_136) else caught-fail) in
                                        {961}let es_6: bitstring = (if v_137 then 3-proj-4-tuple(v_136) else caught-fail) in
                                        {962}let id_8: identityPsk = (if v_137 then 2-proj-4-tuple(v_136) else caught-fail) in
                                        {963}let psk_14: preSharedKey = (if v_137 then 1-proj-4-tuple(v_136) else caught-fail) in
                                        {964}let (psk_15: preSharedKey,early_secret_8: bitstring,valid: bool,safe_psk_3: bool) = (if v_129 then (if v_135 then (NoPsk,es_5,true,false) else fail-any) else (if v_137 then (psk_14,es_6,((psk_14 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_4)),is_safe_2) else fail-any)) in
                                        {965}event Client_PSKChoosen(@6_id_client,psk_15,safe_psk_3);
                                        {966}if valid then
                                        (
                                            {967}let gxy_1: element = catch-fail(dh_decap_fun(g_2,gy_1,x_42)) in
                                            {968}let v_138: bool = not-caught-fail(gxy_1) in
                                            {969}new s_20[]: seed;
                                            {970}let gxy_2: element = (if v_138 then gxy_1 else dh_f(s_20)) in
                                            {971}event Client_DH_gxy(@6_id_client,gxy_2);
                                            {972}let l_37: label = tls13_derived in
                                            {973}let m_8: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {974}let v_139: bool = not-caught-fail(m_8) in
                                            {975}let h_34: bitstring = (if v_139 then catch-fail(hash(@6_backend_h,m_8)) else caught-fail) in
                                            {976}let v_140: bool = not-caught-fail(h_34) in
                                            {977}let x_44: bitstring = (if v_140 then (l_37,h_34) else caught-fail) in
                                            {978}let extra_2: bitstring = catch-fail((if v_139 then (if v_140 then hmac(@6_backend_h,early_secret_8,x_44) else fail-any) else fail-any)) in
                                            {979}let v_141: bool = not-caught-fail(extra_2) in
                                            {980}let handshake_secret_1: bitstring = (if v_141 then hmac(@6_backend_h,extra_2,gxy_2) else fail-any) in
                                            {981}let l_38: label = tls13_derived in
                                            {982}let m_9: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {983}let v_142: bool = not-caught-fail(m_9) in
                                            {984}let h_35: bitstring = (if v_142 then catch-fail(hash(@6_backend_h,m_9)) else caught-fail) in
                                            {985}let v_143: bool = not-caught-fail(h_35) in
                                            {986}let x_45: bitstring = (if v_143 then (l_38,h_35) else caught-fail) in
                                            {987}let extra_3: bitstring = catch-fail((if v_142 then (if v_143 then hmac(@6_backend_h,handshake_secret_1,x_45) else fail-any) else fail-any)) in
                                            {988}let v_144: bool = not-caught-fail(extra_3) in
                                            {989}let k_15: bitstring = (if v_144 then zero else caught-fail) in
                                            {990}let master_secret_9: bitstring = (if v_144 then catch-fail(hmac(@6_backend_h,handshake_secret_1,k_15)) else caught-fail) in
                                            {991}let v_145: bool = not-caught-fail(master_secret_9) in
                                            {992}let l_39: label = (if v_145 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {993}let h_36: bitstring = (if v_145 then catch-fail(hash(@6_backend_h,cur_log2_4)) else caught-fail) in
                                            {994}let v_146: bool = not-caught-fail(h_36) in
                                            {995}let x_46: bitstring = (if v_146 then (l_39,h_36) else caught-fail) in
                                            {996}let client_hts_1: bitstring = (if v_145 then catch-fail((if v_146 then hmac(@6_backend_h,handshake_secret_1,x_46) else fail-any)) else caught-fail) in
                                            {997}let v_147: bool = not-caught-fail(client_hts_1) in
                                            {998}let l_40: label = (if v_147 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {999}let h_37: bitstring = (if v_147 then catch-fail(hash(@6_backend_h,cur_log2_4)) else caught-fail) in
                                            {1000}let v_148: bool = not-caught-fail(h_37) in
                                            {1001}let x_47: bitstring = (if v_148 then (l_40,h_37) else caught-fail) in
                                            {1002}let server_hts_1: bitstring = (if v_147 then catch-fail((if v_148 then hmac(@6_backend_h,handshake_secret_1,x_47) else fail-any)) else caught-fail) in
                                            {1003}let v_149: bool = not-caught-fail(server_hts_1) in
                                            {1004}let l_41: label = (if v_149 then tls13_key else caught-fail) in
                                            {1005}let h_38: bitstring = (if v_149 then zero else caught-fail) in
                                            {1006}let x_48: bitstring = (if v_149 then (l_41,h_38) else caught-fail) in
                                            {1007}let client_wkh_1: bitstring = (if v_149 then catch-fail(hmac(@6_backend_h,client_hts_1,x_48)) else caught-fail) in
                                            {1008}let v_150: bool = not-caught-fail(client_wkh_1) in
                                            {1009}let l_42: label = (if v_150 then tls13_key else caught-fail) in
                                            {1010}let h_39: bitstring = (if v_150 then zero else caught-fail) in
                                            {1011}let x_49: bitstring = (if v_150 then (l_42,h_39) else caught-fail) in
                                            {1012}let server_wkh_1: bitstring = (if v_150 then catch-fail(hmac(@6_backend_h,server_hts_1,x_49)) else caught-fail) in
                                            {1013}let v_151: bool = not-caught-fail(server_wkh_1) in
                                            {1014}let l_43: label = (if v_151 then tls13_finished else caught-fail) in
                                            {1015}let h_40: bitstring = (if v_151 then zero else caught-fail) in
                                            {1016}let x_50: bitstring = (if v_151 then (l_43,h_40) else caught-fail) in
                                            {1017}let client_fk_1: bitstring = (if v_151 then catch-fail(hmac(@6_backend_h,client_hts_1,x_50)) else caught-fail) in
                                            {1018}let v_152: bool = not-caught-fail(client_fk_1) in
                                            {1019}let l_44: label = (if v_152 then tls13_finished else caught-fail) in
                                            {1020}let h_41: bitstring = (if v_152 then zero else caught-fail) in
                                            {1021}let x_51: bitstring = (if v_152 then (l_44,h_41) else caught-fail) in
                                            {1022}let server_fk_1: bitstring = (if v_152 then catch-fail(hmac(@6_backend_h,server_hts_1,x_51)) else caught-fail) in
                                            {1023}let v_153: bool = not-caught-fail(server_fk_1) in
                                            {1024}let (master_secret_10: bitstring,chk_8: aead_key,shk_7: aead_key,cfin_8: mac_key,sfin_7: mac_key) = (if v_144 then (if v_145 then (if v_147 then (if v_149 then (if v_150 then (if v_151 then (if v_152 then (if v_153 then (master_secret_9,client_wkh_1,server_wkh_1,client_fk_1,server_fk_1) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {1025}event Client_chk(@6_id_client,chk_8);
                                            {1026}event Client_shk(@6_id_client,shk_7);
                                            {1027}event Client_cfin(@6_id_client,cfin_8);
                                            {1028}event Client_sfin(@6_id_client,sfin_7);
                                            {1029}in(io, enc_ee_msg: bitstring);
                                            {1030}let ee_msg_1: msg = aead_dec(@6_backend_a,shk_7,0,zero,enc_ee_msg) in
                                            {1031}let EE(ech_ee: echExt,extra_ee: extraExt) = ee_msg_1 in
                                            {1032}let cur_log2_5: bitstring = (cur_log2_4,ee_msg_1) in
                                            {1033}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr',sr_8,@6_backend_h,@6_backend_a,c_dom_5,backend_dom,psk_15,safe_psk_3,@6_comp_psk,master_secret_10,chk_8,0,shk_7,1,cfin_8,sfin_7,cur_log2_5)))
                                        )
                                        else
                                            {1034}out(io, illegal_parameter)
                                    )
                                    else
                                        {1035}out(io, illegal_parameter)
                                )
                                else
                                    {1212}get pre_shared_keys(c_dom'_2: domain,=backend_dom,=@6_backend_h,id_9: identityPsk,psk_16: preSharedKey,idP_4: idProc,is_safe_3: bool) in
                                    {1036}event Selected_one_time_used_psk(@6_id_client,psk_16,is_safe_3);
                                    {1037}event Selected_psk(c_dom_5,c_dom'_2,idP_4,is_safe_3);
                                    {1038}event Selected_psk_no_missmatch(@6_id_client,backend_dom,@6_backend_h,psk_16,id_9);
                                    {1039}event Selected_psk_with_ID(c_dom_5,c_dom'_2,id_9,idP_4,is_safe_3);
                                    {1040}let v_154: bitstring = (id_9,psk_16,is_safe_3) in
                                    {1041}let v_155: bool = success?(1-proj-3-tuple(v_154)) in
                                    {1042}let is_safe_4: bool = (if v_155 then 3-proj-3-tuple(v_154) else caught-fail) in
                                    {1043}let psk_17: preSharedKey = (if v_155 then 2-proj-3-tuple(v_154) else caught-fail) in
                                    {1044}let id_10: identityPsk = (if v_155 then 1-proj-3-tuple(v_154) else caught-fail) in
                                    {1045}let offer_4: params = (if v_155 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_1,SNI(backend_dom),ech_ext_3,@6_i_extra_ext,trunc_client_psk_ext(id_10)) else caught-fail) in
                                    {1046}let cur_log'_4: bitstring = (if v_155 then (cur_log_IN1_HRR,CH(i_cr_2,offer_4)) else caught-fail) in
                                    {1047}let s_21: bitstring = (if v_155 then zero else caught-fail) in
                                    {1048}let k_16: bitstring = (if v_155 then catch-fail(psk2b(psk_17)) else caught-fail) in
                                    {1049}let v_156: bool = not-caught-fail(k_16) in
                                    {1050}let early_secret_9: bitstring = (if v_155 then catch-fail((if v_156 then hmac(@6_backend_h,s_21,k_16) else fail-any)) else caught-fail) in
                                    {1051}let v_157: bool = not-caught-fail(early_secret_9) in
                                    {1052}let l_45: label = (if v_157 then tls13_ext_res_binder else caught-fail) in
                                    {1053}let m_10: bitstring = (if v_157 then zero else caught-fail) in
                                    {1054}let h_42: bitstring = (if v_157 then catch-fail(hash(@6_backend_h,m_10)) else caught-fail) in
                                    {1055}let v_158: bool = not-caught-fail(h_42) in
                                    {1056}let x_52: bitstring = (if v_158 then (l_45,h_42) else caught-fail) in
                                    {1057}let binder_key_6: bitstring = (if v_157 then catch-fail((if v_158 then hmac(@6_backend_h,early_secret_9,x_52) else fail-any)) else caught-fail) in
                                    {1058}let v_159: bool = not-caught-fail(binder_key_6) in
                                    {1059}let v_160: bitstring = (if v_155 then catch-fail((if v_157 then (if v_159 then (early_secret_9,binder_key_6) else fail-any) else fail-any)) else caught-fail) in
                                    {1060}let v_161: bool = (not-caught-fail(v_160) && success?(1-proj-2-tuple(v_160))) in
                                    {1061}let kb_6: mac_key = (if v_161 then 2-proj-2-tuple(v_160) else caught-fail) in
                                    {1062}let es_7: bitstring = (if v_161 then 1-proj-2-tuple(v_160) else caught-fail) in
                                    {1063}let binders_3: bitstring = (if v_161 then catch-fail(hmac(@6_backend_h,kb_6,cur_log'_4)) else caught-fail) in
                                    {1064}let v_162: bool = not-caught-fail(binders_3) in
                                    {1065}let v_163: bitstring = catch-fail((if v_155 then (if v_161 then (if v_162 then (client_psk_ext(id_10,binders_3),(psk_17,id_10,es_7,is_safe_4)) else fail-any) else fail-any) else fail-any)) in
                                    {1066}let v_164: bool = (not-caught-fail(v_163) && success?(1-proj-2-tuple(v_163))) in
                                    {1067}let psk_data_3: bitstring = (if v_164 then 2-proj-2-tuple(v_163) else caught-fail) in
                                    {1068}let psk_ext_5: preSharedKeyExt = (if v_164 then 1-proj-2-tuple(v_163) else caught-fail) in
                                    {1069}let i_offer_2: params = (if v_164 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_1,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_5) else caught-fail) in
                                    {1070}let i_client_hello_3: msg = (if v_164 then CH(i_cr_2,i_offer_2) else caught-fail) in
                                    {1071}new fake_id_2[]: identityPsk;
                                    {1072}new fake_binder_2[]: bitstring;
                                    {1073}let o_psk_ext_3: preSharedKeyExt = (if v_164 then (if @6_use_psk then client_psk_ext(fake_id_2,fake_binder_2) else empty_psk_ext) else caught-fail) in
                                    {1074}let o_ech_ext_ADD_2: echExt = (if v_164 then ECHClientHelloOuter(ech_h_4,ech_a_4,config_id_2,zero,zero) else caught-fail) in
                                    {1075}let o_offer_ADD_2: params = (if v_164 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_1,SNI(o_dom_2),o_ech_ext_ADD_2,empty_extra_ext,o_psk_ext_3) else caught-fail) in
                                    {1076}let o_client_hello_ADD_2: msg = (if v_164 then CH(o_cr_2,o_offer_ADD_2) else caught-fail) in
                                    {1077}let n_2: nat = (if v_164 then 2 else caught-fail) in
                                    {1078}let v_165: hpkeContext = (if v_164 then catch-fail(context) else caught-fail) in
                                    {1079}let v_166: bool = (not-caught-fail(v_165) && ((S =nf 1-proj-hpke_context(v_165)) && success?(1-proj-hpke_context(v_165)))) in
                                    {1080}let base_nonce_3: bitstring = (if v_166 then 3-proj-hpke_context(v_165) else caught-fail) in
                                    {1081}let key_3: aead_key = (if v_166 then 2-proj-hpke_context(v_165) else caught-fail) in
                                    {1082}let payload_3: bitstring = (if v_164 then catch-fail((if v_166 then aead_enc(ech_a_4,key_3,(base_nonce_3,n_2),o_client_hello_ADD_2,i_client_hello_3) else fail-any)) else caught-fail) in
                                    {1083}let v_167: bool = not-caught-fail(payload_3) in
                                    {1084}let o_ech_ext_3: echExt = (if v_167 then ECHClientHelloOuter(ech_h_4,ech_a_4,config_id_2,zero,payload_3) else caught-fail) in
                                    {1085}let o_offer_3: params = (if v_167 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_1,SNI(o_dom_2),o_ech_ext_3,empty_extra_ext,o_psk_ext_3) else caught-fail) in
                                    {1086}let (o_client_hello'_1: msg,i_client_hello'_1: msg,i_cr'_1: bytes32,i_kex_data'_1: bitstring,psk_data'_1: bitstring) = (if v_164 then (if v_167 then (CH(o_cr_2,o_offer_3),i_client_hello_3,i_cr_2,i_kex_data_2,psk_data_3) else fail-any) else fail-any) in
                                    {1087}out(io, o_client_hello'_1);
                                    {1088}in(io, server_hello'_1: msg);
                                    {1089}let SH(B32(sr24'_1: bytes24,sr8'_1: bytes8),params'_1: params) = server_hello'_1 in
                                    {1090}let cur_log_IN1_HRR_IN2_1: bitstring = (cur_log_IN1_HRR,i_client_hello'_1) in
                                    {1091}let sh_modified_2: msg = SH(B32(sr24'_1,zero8),params'_1) in
                                    {1092}let cur_log_sh_2: bitstring = (cur_log_IN1_HRR_IN2_1,sh_modified_2) in
                                    {1093}let transcript_ech_conf_2: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_2)) in
                                    {1094}let v_168: bool = not-caught-fail(transcript_ech_conf_2) in
                                    {1095}let s_22: bitstring = (if v_168 then zero else caught-fail) in
                                    {1096}let k_17: bitstring = (if v_168 then catch-fail(b32_2_b(get_random(i_client_hello'_1))) else caught-fail) in
                                    {1097}let v_169: bool = not-caught-fail(k_17) in
                                    {1098}let k_18: bitstring = (if v_168 then catch-fail((if v_169 then hmac(@6_backend_h,s_22,k_17) else fail-any)) else caught-fail) in
                                    {1099}let v_170: bool = not-caught-fail(k_18) in
                                    {1100}let l_46: label = (if v_170 then ech_accept_confirmation else caught-fail) in
                                    {1101}let x_53: bitstring = (if v_170 then (l_46,cur_log_sh_2) else caught-fail) in
                                    {1102}let sr8_3: bytes8 = (if v_168 then catch-fail(crop_into_bytes8((if v_170 then hmac(@6_backend_h,k_18,x_53) else fail-any))) else caught-fail) in
                                    {1103}let v_171: bool = not-caught-fail(sr8_3) in
                                    {1104}if (B32(sr24'_1,sr8'_1) = (if v_168 then (if v_171 then B32(sr24'_1,sr8_3) else fail-any) else fail-any)) then
                                    {1105}let (x_54: bitstring,g_3: group) = i_kex_data'_1 in
                                    {1106}let (psk_offer_1: preSharedKey,id_offer_1: identityPsk,es_offer_1: bitstring,is_safe_offer_1: bool) = psk_data'_1 in
                                    {1107}event Client_PSKOffer(@6_id_client,psk_offer_1,id_offer_1,is_safe_offer_1);
                                    {1108}event Client_Rand_client(@6_id_client,i_cr'_1);
                                    {1109}event Client_DH_client(@6_id_client,dh_pub(g_3,x_54));
                                    {1110}event Client_server_domain(@6_id_client,backend_dom);
                                    {1111}let SH(sr_9: bytes32,mode_2: params) = server_hello'_1 in
                                    {1112}event Client_Rand_server(@6_id_client,sr_9);
                                    {1113}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_3,gy_2: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_6: preSharedKeyExt) = mode_2 in
                                    (
                                        {1114}let cur_log2_6: bitstring = (cur_log_IN1_HRR_IN2_1,server_hello'_1) in
                                        {1115}event Client_DH_server(@6_id_client,gy_2);
                                        {1116}let v_172: bool = (psk_ext_6 = empty_psk_ext) in
                                        {1117}let psk_18: preSharedKey = (if v_172 then NoPsk else caught-fail) in
                                        {1118}let s_23: bitstring = (if v_172 then zero else caught-fail) in
                                        {1119}let k_19: bitstring = (if v_172 then catch-fail(psk2b(psk_18)) else caught-fail) in
                                        {1120}let v_173: bool = not-caught-fail(k_19) in
                                        {1121}let early_secret_10: bitstring = (if v_172 then catch-fail((if v_173 then hmac(@6_backend_h,s_23,k_19) else fail-any)) else caught-fail) in
                                        {1122}let v_174: bool = not-caught-fail(early_secret_10) in
                                        {1123}let l_47: label = (if v_174 then tls13_ext_res_binder else caught-fail) in
                                        {1124}let m_11: bitstring = (if v_174 then zero else caught-fail) in
                                        {1125}let h_43: bitstring = (if v_174 then catch-fail(hash(@6_backend_h,m_11)) else caught-fail) in
                                        {1126}let v_175: bool = not-caught-fail(h_43) in
                                        {1127}let x_55: bitstring = (if v_175 then (l_47,h_43) else caught-fail) in
                                        {1128}let binder_key_7: bitstring = (if v_174 then catch-fail((if v_175 then hmac(@6_backend_h,early_secret_10,x_55) else fail-any)) else caught-fail) in
                                        {1129}let v_176: bool = not-caught-fail(binder_key_7) in
                                        {1130}let v_177: bitstring = (if v_172 then catch-fail((if v_174 then (if v_176 then (early_secret_10,binder_key_7) else fail-any) else fail-any)) else caught-fail) in
                                        {1131}let v_178: bool = (not-caught-fail(v_177) && success?(1-proj-2-tuple(v_177))) in
                                        {1132}let kb_7: mac_key = (if v_178 then 2-proj-2-tuple(v_177) else caught-fail) in
                                        {1133}let es_8: bitstring = (if v_178 then 1-proj-2-tuple(v_177) else caught-fail) in
                                        {1134}let v_179: bitstring = (if not(v_172) then catch-fail(psk_data'_1) else caught-fail) in
                                        {1135}let v_180: bool = (not-caught-fail(v_179) && success?(1-proj-4-tuple(v_179))) in
                                        {1136}let is_safe_5: bool = (if v_180 then 4-proj-4-tuple(v_179) else caught-fail) in
                                        {1137}let es_9: bitstring = (if v_180 then 3-proj-4-tuple(v_179) else caught-fail) in
                                        {1138}let id_11: identityPsk = (if v_180 then 2-proj-4-tuple(v_179) else caught-fail) in
                                        {1139}let psk_19: preSharedKey = (if v_180 then 1-proj-4-tuple(v_179) else caught-fail) in
                                        {1140}let (psk_20: preSharedKey,early_secret_11: bitstring,valid_1: bool,safe_psk_4: bool) = (if v_172 then (if v_178 then (NoPsk,es_8,true,false) else fail-any) else (if v_180 then (psk_19,es_9,((psk_19 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_6)),is_safe_5) else fail-any)) in
                                        {1141}event Client_PSKChoosen(@6_id_client,psk_20,safe_psk_4);
                                        {1142}if valid_1 then
                                        (
                                            {1143}let gxy_3: element = catch-fail(dh_decap_fun(g_3,gy_2,x_54)) in
                                            {1144}let v_181: bool = not-caught-fail(gxy_3) in
                                            {1145}new s_24[]: seed;
                                            {1146}let gxy_4: element = (if v_181 then gxy_3 else dh_f(s_24)) in
                                            {1147}event Client_DH_gxy(@6_id_client,gxy_4);
                                            {1148}let l_48: label = tls13_derived in
                                            {1149}let m_12: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {1150}let v_182: bool = not-caught-fail(m_12) in
                                            {1151}let h_44: bitstring = (if v_182 then catch-fail(hash(@6_backend_h,m_12)) else caught-fail) in
                                            {1152}let v_183: bool = not-caught-fail(h_44) in
                                            {1153}let x_56: bitstring = (if v_183 then (l_48,h_44) else caught-fail) in
                                            {1154}let extra_4: bitstring = catch-fail((if v_182 then (if v_183 then hmac(@6_backend_h,early_secret_11,x_56) else fail-any) else fail-any)) in
                                            {1155}let v_184: bool = not-caught-fail(extra_4) in
                                            {1156}let handshake_secret_2: bitstring = (if v_184 then hmac(@6_backend_h,extra_4,gxy_4) else fail-any) in
                                            {1157}let l_49: label = tls13_derived in
                                            {1158}let m_13: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {1159}let v_185: bool = not-caught-fail(m_13) in
                                            {1160}let h_45: bitstring = (if v_185 then catch-fail(hash(@6_backend_h,m_13)) else caught-fail) in
                                            {1161}let v_186: bool = not-caught-fail(h_45) in
                                            {1162}let x_57: bitstring = (if v_186 then (l_49,h_45) else caught-fail) in
                                            {1163}let extra_5: bitstring = catch-fail((if v_185 then (if v_186 then hmac(@6_backend_h,handshake_secret_2,x_57) else fail-any) else fail-any)) in
                                            {1164}let v_187: bool = not-caught-fail(extra_5) in
                                            {1165}let k_20: bitstring = (if v_187 then zero else caught-fail) in
                                            {1166}let master_secret_11: bitstring = (if v_187 then catch-fail(hmac(@6_backend_h,handshake_secret_2,k_20)) else caught-fail) in
                                            {1167}let v_188: bool = not-caught-fail(master_secret_11) in
                                            {1168}let l_50: label = (if v_188 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {1169}let h_46: bitstring = (if v_188 then catch-fail(hash(@6_backend_h,cur_log2_6)) else caught-fail) in
                                            {1170}let v_189: bool = not-caught-fail(h_46) in
                                            {1171}let x_58: bitstring = (if v_189 then (l_50,h_46) else caught-fail) in
                                            {1172}let client_hts_2: bitstring = (if v_188 then catch-fail((if v_189 then hmac(@6_backend_h,handshake_secret_2,x_58) else fail-any)) else caught-fail) in
                                            {1173}let v_190: bool = not-caught-fail(client_hts_2) in
                                            {1174}let l_51: label = (if v_190 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {1175}let h_47: bitstring = (if v_190 then catch-fail(hash(@6_backend_h,cur_log2_6)) else caught-fail) in
                                            {1176}let v_191: bool = not-caught-fail(h_47) in
                                            {1177}let x_59: bitstring = (if v_191 then (l_51,h_47) else caught-fail) in
                                            {1178}let server_hts_2: bitstring = (if v_190 then catch-fail((if v_191 then hmac(@6_backend_h,handshake_secret_2,x_59) else fail-any)) else caught-fail) in
                                            {1179}let v_192: bool = not-caught-fail(server_hts_2) in
                                            {1180}let l_52: label = (if v_192 then tls13_key else caught-fail) in
                                            {1181}let h_48: bitstring = (if v_192 then zero else caught-fail) in
                                            {1182}let x_60: bitstring = (if v_192 then (l_52,h_48) else caught-fail) in
                                            {1183}let client_wkh_2: bitstring = (if v_192 then catch-fail(hmac(@6_backend_h,client_hts_2,x_60)) else caught-fail) in
                                            {1184}let v_193: bool = not-caught-fail(client_wkh_2) in
                                            {1185}let l_53: label = (if v_193 then tls13_key else caught-fail) in
                                            {1186}let h_49: bitstring = (if v_193 then zero else caught-fail) in
                                            {1187}let x_61: bitstring = (if v_193 then (l_53,h_49) else caught-fail) in
                                            {1188}let server_wkh_2: bitstring = (if v_193 then catch-fail(hmac(@6_backend_h,server_hts_2,x_61)) else caught-fail) in
                                            {1189}let v_194: bool = not-caught-fail(server_wkh_2) in
                                            {1190}let l_54: label = (if v_194 then tls13_finished else caught-fail) in
                                            {1191}let h_50: bitstring = (if v_194 then zero else caught-fail) in
                                            {1192}let x_62: bitstring = (if v_194 then (l_54,h_50) else caught-fail) in
                                            {1193}let client_fk_2: bitstring = (if v_194 then catch-fail(hmac(@6_backend_h,client_hts_2,x_62)) else caught-fail) in
                                            {1194}let v_195: bool = not-caught-fail(client_fk_2) in
                                            {1195}let l_55: label = (if v_195 then tls13_finished else caught-fail) in
                                            {1196}let h_51: bitstring = (if v_195 then zero else caught-fail) in
                                            {1197}let x_63: bitstring = (if v_195 then (l_55,h_51) else caught-fail) in
                                            {1198}let server_fk_2: bitstring = (if v_195 then catch-fail(hmac(@6_backend_h,server_hts_2,x_63)) else caught-fail) in
                                            {1199}let v_196: bool = not-caught-fail(server_fk_2) in
                                            {1200}let (master_secret_12: bitstring,chk_9: aead_key,shk_8: aead_key,cfin_9: mac_key,sfin_8: mac_key) = (if v_187 then (if v_188 then (if v_190 then (if v_192 then (if v_193 then (if v_194 then (if v_195 then (if v_196 then (master_secret_11,client_wkh_2,server_wkh_2,client_fk_2,server_fk_2) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {1201}event Client_chk(@6_id_client,chk_9);
                                            {1202}event Client_shk(@6_id_client,shk_8);
                                            {1203}event Client_cfin(@6_id_client,cfin_9);
                                            {1204}event Client_sfin(@6_id_client,sfin_8);
                                            {1205}in(io, enc_ee_msg_1: bitstring);
                                            {1206}let ee_msg_2: msg = aead_dec(@6_backend_a,shk_8,0,zero,enc_ee_msg_1) in
                                            {1207}let EE(ech_ee_1: echExt,extra_ee_1: extraExt) = ee_msg_2 in
                                            {1208}let cur_log2_7: bitstring = (cur_log2_6,ee_msg_2) in
                                            {1209}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_1,sr_9,@6_backend_h,@6_backend_a,c_dom_5,backend_dom,psk_20,safe_psk_4,@6_comp_psk,master_secret_12,chk_9,0,shk_8,1,cfin_9,sfin_8,cur_log2_7)))
                                        )
                                        else
                                            {1210}out(io, illegal_parameter)
                                    )
                                    else
                                        {1211}out(io, illegal_parameter)
                            )
                            else
                                {1213}let psk_21: preSharedKey = NoPsk in
                                {1214}let s_25: bitstring = zero in
                                {1215}let k_21: bitstring = catch-fail(psk2b(psk_21)) in
                                {1216}let v_197: bool = not-caught-fail(k_21) in
                                {1217}let early_secret_12: bitstring = catch-fail((if v_197 then hmac(@6_backend_h,s_25,k_21) else fail-any)) in
                                {1218}let v_198: bool = not-caught-fail(early_secret_12) in
                                {1219}let l_56: label = (if v_198 then tls13_ext_res_binder else caught-fail) in
                                {1220}let m_14: bitstring = (if v_198 then zero else caught-fail) in
                                {1221}let h_52: bitstring = (if v_198 then catch-fail(hash(@6_backend_h,m_14)) else caught-fail) in
                                {1222}let v_199: bool = not-caught-fail(h_52) in
                                {1223}let x_64: bitstring = (if v_199 then (l_56,h_52) else caught-fail) in
                                {1224}let binder_key_8: bitstring = (if v_198 then catch-fail((if v_199 then hmac(@6_backend_h,early_secret_12,x_64) else fail-any)) else caught-fail) in
                                {1225}let v_200: bool = not-caught-fail(binder_key_8) in
                                {1226}let v_201: bitstring = catch-fail((if v_198 then (if v_200 then (early_secret_12,binder_key_8) else fail-any) else fail-any)) in
                                {1227}let v_202: bool = (not-caught-fail(v_201) && success?(1-proj-2-tuple(v_201))) in
                                {1228}let kb_8: mac_key = (if v_202 then 2-proj-2-tuple(v_201) else caught-fail) in
                                {1229}let es_10: bitstring = (if v_202 then 1-proj-2-tuple(v_201) else caught-fail) in
                                {1230}let v_203: bitstring = catch-fail((if v_202 then (empty_psk_ext,(NoPsk,zero,es_10,false)) else fail-any)) in
                                {1231}let v_204: bool = (not-caught-fail(v_203) && success?(1-proj-2-tuple(v_203))) in
                                {1232}let psk_data_4: bitstring = (if v_204 then 2-proj-2-tuple(v_203) else caught-fail) in
                                {1233}let psk_ext_7: preSharedKeyExt = (if v_204 then 1-proj-2-tuple(v_203) else caught-fail) in
                                {1234}let i_offer_3: params = (if v_204 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_1,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_7) else caught-fail) in
                                {1235}let i_client_hello_4: msg = (if v_204 then CH(i_cr_2,i_offer_3) else caught-fail) in
                                {1236}new fake_id_3[]: identityPsk;
                                {1237}new fake_binder_3[]: bitstring;
                                {1238}let o_psk_ext_4: preSharedKeyExt = (if v_204 then (if @6_use_psk then client_psk_ext(fake_id_3,fake_binder_3) else empty_psk_ext) else caught-fail) in
                                {1239}let o_ech_ext_ADD_3: echExt = (if v_204 then ECHClientHelloOuter(ech_h_4,ech_a_4,config_id_2,zero,zero) else caught-fail) in
                                {1240}let o_offer_ADD_3: params = (if v_204 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_1,SNI(o_dom_2),o_ech_ext_ADD_3,empty_extra_ext,o_psk_ext_4) else caught-fail) in
                                {1241}let o_client_hello_ADD_3: msg = (if v_204 then CH(o_cr_2,o_offer_ADD_3) else caught-fail) in
                                {1242}let n_3: nat = (if v_204 then 2 else caught-fail) in
                                {1243}let v_205: hpkeContext = (if v_204 then catch-fail(context) else caught-fail) in
                                {1244}let v_206: bool = (not-caught-fail(v_205) && ((S =nf 1-proj-hpke_context(v_205)) && success?(1-proj-hpke_context(v_205)))) in
                                {1245}let base_nonce_4: bitstring = (if v_206 then 3-proj-hpke_context(v_205) else caught-fail) in
                                {1246}let key_4: aead_key = (if v_206 then 2-proj-hpke_context(v_205) else caught-fail) in
                                {1247}let payload_4: bitstring = (if v_204 then catch-fail((if v_206 then aead_enc(ech_a_4,key_4,(base_nonce_4,n_3),o_client_hello_ADD_3,i_client_hello_4) else fail-any)) else caught-fail) in
                                {1248}let v_207: bool = not-caught-fail(payload_4) in
                                {1249}let o_ech_ext_4: echExt = (if v_207 then ECHClientHelloOuter(ech_h_4,ech_a_4,config_id_2,zero,payload_4) else caught-fail) in
                                {1250}let o_offer_4: params = (if v_207 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_1,SNI(o_dom_2),o_ech_ext_4,empty_extra_ext,o_psk_ext_4) else caught-fail) in
                                {1251}let (o_client_hello'_2: msg,i_client_hello'_2: msg,i_cr'_2: bytes32,i_kex_data'_2: bitstring,psk_data'_2: bitstring) = (if v_204 then (if v_207 then (CH(o_cr_2,o_offer_4),i_client_hello_4,i_cr_2,i_kex_data_2,psk_data_4) else fail-any) else fail-any) in
                                {1252}out(io, o_client_hello'_2);
                                {1253}in(io, server_hello'_2: msg);
                                {1254}let SH(B32(sr24'_2: bytes24,sr8'_2: bytes8),params'_2: params) = server_hello'_2 in
                                {1255}let cur_log_IN1_HRR_IN2_2: bitstring = (cur_log_IN1_HRR,i_client_hello'_2) in
                                {1256}let sh_modified_3: msg = SH(B32(sr24'_2,zero8),params'_2) in
                                {1257}let cur_log_sh_3: bitstring = (cur_log_IN1_HRR_IN2_2,sh_modified_3) in
                                {1258}let transcript_ech_conf_3: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_3)) in
                                {1259}let v_208: bool = not-caught-fail(transcript_ech_conf_3) in
                                {1260}let s_26: bitstring = (if v_208 then zero else caught-fail) in
                                {1261}let k_22: bitstring = (if v_208 then catch-fail(b32_2_b(get_random(i_client_hello'_2))) else caught-fail) in
                                {1262}let v_209: bool = not-caught-fail(k_22) in
                                {1263}let k_23: bitstring = (if v_208 then catch-fail((if v_209 then hmac(@6_backend_h,s_26,k_22) else fail-any)) else caught-fail) in
                                {1264}let v_210: bool = not-caught-fail(k_23) in
                                {1265}let l_57: label = (if v_210 then ech_accept_confirmation else caught-fail) in
                                {1266}let x_65: bitstring = (if v_210 then (l_57,cur_log_sh_3) else caught-fail) in
                                {1267}let sr8_4: bytes8 = (if v_208 then catch-fail(crop_into_bytes8((if v_210 then hmac(@6_backend_h,k_23,x_65) else fail-any))) else caught-fail) in
                                {1268}let v_211: bool = not-caught-fail(sr8_4) in
                                {1269}if (B32(sr24'_2,sr8'_2) = (if v_208 then (if v_211 then B32(sr24'_2,sr8_4) else fail-any) else fail-any)) then
                                {1270}let (x_66: bitstring,g_4: group) = i_kex_data'_2 in
                                {1271}let (psk_offer_2: preSharedKey,id_offer_2: identityPsk,es_offer_2: bitstring,is_safe_offer_2: bool) = psk_data'_2 in
                                {1272}event Client_PSKOffer(@6_id_client,psk_offer_2,id_offer_2,is_safe_offer_2);
                                {1273}event Client_Rand_client(@6_id_client,i_cr'_2);
                                {1274}event Client_DH_client(@6_id_client,dh_pub(g_4,x_66));
                                {1275}event Client_server_domain(@6_id_client,backend_dom);
                                {1276}let SH(sr_10: bytes32,mode_3: params) = server_hello'_2 in
                                {1277}event Client_Rand_server(@6_id_client,sr_10);
                                {1278}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_4,gy_3: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_8: preSharedKeyExt) = mode_3 in
                                (
                                    {1279}let cur_log2_8: bitstring = (cur_log_IN1_HRR_IN2_2,server_hello'_2) in
                                    {1280}event Client_DH_server(@6_id_client,gy_3);
                                    {1281}let v_212: bool = (psk_ext_8 = empty_psk_ext) in
                                    {1282}let psk_22: preSharedKey = (if v_212 then NoPsk else caught-fail) in
                                    {1283}let s_27: bitstring = (if v_212 then zero else caught-fail) in
                                    {1284}let k_24: bitstring = (if v_212 then catch-fail(psk2b(psk_22)) else caught-fail) in
                                    {1285}let v_213: bool = not-caught-fail(k_24) in
                                    {1286}let early_secret_13: bitstring = (if v_212 then catch-fail((if v_213 then hmac(@6_backend_h,s_27,k_24) else fail-any)) else caught-fail) in
                                    {1287}let v_214: bool = not-caught-fail(early_secret_13) in
                                    {1288}let l_58: label = (if v_214 then tls13_ext_res_binder else caught-fail) in
                                    {1289}let m_15: bitstring = (if v_214 then zero else caught-fail) in
                                    {1290}let h_53: bitstring = (if v_214 then catch-fail(hash(@6_backend_h,m_15)) else caught-fail) in
                                    {1291}let v_215: bool = not-caught-fail(h_53) in
                                    {1292}let x_67: bitstring = (if v_215 then (l_58,h_53) else caught-fail) in
                                    {1293}let binder_key_9: bitstring = (if v_214 then catch-fail((if v_215 then hmac(@6_backend_h,early_secret_13,x_67) else fail-any)) else caught-fail) in
                                    {1294}let v_216: bool = not-caught-fail(binder_key_9) in
                                    {1295}let v_217: bitstring = (if v_212 then catch-fail((if v_214 then (if v_216 then (early_secret_13,binder_key_9) else fail-any) else fail-any)) else caught-fail) in
                                    {1296}let v_218: bool = (not-caught-fail(v_217) && success?(1-proj-2-tuple(v_217))) in
                                    {1297}let kb_9: mac_key = (if v_218 then 2-proj-2-tuple(v_217) else caught-fail) in
                                    {1298}let es_11: bitstring = (if v_218 then 1-proj-2-tuple(v_217) else caught-fail) in
                                    {1299}let v_219: bitstring = (if not(v_212) then catch-fail(psk_data'_2) else caught-fail) in
                                    {1300}let v_220: bool = (not-caught-fail(v_219) && success?(1-proj-4-tuple(v_219))) in
                                    {1301}let is_safe_6: bool = (if v_220 then 4-proj-4-tuple(v_219) else caught-fail) in
                                    {1302}let es_12: bitstring = (if v_220 then 3-proj-4-tuple(v_219) else caught-fail) in
                                    {1303}let id_12: identityPsk = (if v_220 then 2-proj-4-tuple(v_219) else caught-fail) in
                                    {1304}let psk_23: preSharedKey = (if v_220 then 1-proj-4-tuple(v_219) else caught-fail) in
                                    {1305}let (psk_24: preSharedKey,early_secret_14: bitstring,valid_2: bool,safe_psk_5: bool) = (if v_212 then (if v_218 then (NoPsk,es_11,true,false) else fail-any) else (if v_220 then (psk_23,es_12,((psk_23 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_8)),is_safe_6) else fail-any)) in
                                    {1306}event Client_PSKChoosen(@6_id_client,psk_24,safe_psk_5);
                                    {1307}if valid_2 then
                                    (
                                        {1308}let gxy_5: element = catch-fail(dh_decap_fun(g_4,gy_3,x_66)) in
                                        {1309}let v_221: bool = not-caught-fail(gxy_5) in
                                        {1310}new s_28[]: seed;
                                        {1311}let gxy_6: element = (if v_221 then gxy_5 else dh_f(s_28)) in
                                        {1312}event Client_DH_gxy(@6_id_client,gxy_6);
                                        {1313}let l_59: label = tls13_derived in
                                        {1314}let m_16: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {1315}let v_222: bool = not-caught-fail(m_16) in
                                        {1316}let h_54: bitstring = (if v_222 then catch-fail(hash(@6_backend_h,m_16)) else caught-fail) in
                                        {1317}let v_223: bool = not-caught-fail(h_54) in
                                        {1318}let x_68: bitstring = (if v_223 then (l_59,h_54) else caught-fail) in
                                        {1319}let extra_6: bitstring = catch-fail((if v_222 then (if v_223 then hmac(@6_backend_h,early_secret_14,x_68) else fail-any) else fail-any)) in
                                        {1320}let v_224: bool = not-caught-fail(extra_6) in
                                        {1321}let handshake_secret_3: bitstring = (if v_224 then hmac(@6_backend_h,extra_6,gxy_6) else fail-any) in
                                        {1322}let l_60: label = tls13_derived in
                                        {1323}let m_17: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {1324}let v_225: bool = not-caught-fail(m_17) in
                                        {1325}let h_55: bitstring = (if v_225 then catch-fail(hash(@6_backend_h,m_17)) else caught-fail) in
                                        {1326}let v_226: bool = not-caught-fail(h_55) in
                                        {1327}let x_69: bitstring = (if v_226 then (l_60,h_55) else caught-fail) in
                                        {1328}let extra_7: bitstring = catch-fail((if v_225 then (if v_226 then hmac(@6_backend_h,handshake_secret_3,x_69) else fail-any) else fail-any)) in
                                        {1329}let v_227: bool = not-caught-fail(extra_7) in
                                        {1330}let k_25: bitstring = (if v_227 then zero else caught-fail) in
                                        {1331}let master_secret_13: bitstring = (if v_227 then catch-fail(hmac(@6_backend_h,handshake_secret_3,k_25)) else caught-fail) in
                                        {1332}let v_228: bool = not-caught-fail(master_secret_13) in
                                        {1333}let l_61: label = (if v_228 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {1334}let h_56: bitstring = (if v_228 then catch-fail(hash(@6_backend_h,cur_log2_8)) else caught-fail) in
                                        {1335}let v_229: bool = not-caught-fail(h_56) in
                                        {1336}let x_70: bitstring = (if v_229 then (l_61,h_56) else caught-fail) in
                                        {1337}let client_hts_3: bitstring = (if v_228 then catch-fail((if v_229 then hmac(@6_backend_h,handshake_secret_3,x_70) else fail-any)) else caught-fail) in
                                        {1338}let v_230: bool = not-caught-fail(client_hts_3) in
                                        {1339}let l_62: label = (if v_230 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {1340}let h_57: bitstring = (if v_230 then catch-fail(hash(@6_backend_h,cur_log2_8)) else caught-fail) in
                                        {1341}let v_231: bool = not-caught-fail(h_57) in
                                        {1342}let x_71: bitstring = (if v_231 then (l_62,h_57) else caught-fail) in
                                        {1343}let server_hts_3: bitstring = (if v_230 then catch-fail((if v_231 then hmac(@6_backend_h,handshake_secret_3,x_71) else fail-any)) else caught-fail) in
                                        {1344}let v_232: bool = not-caught-fail(server_hts_3) in
                                        {1345}let l_63: label = (if v_232 then tls13_key else caught-fail) in
                                        {1346}let h_58: bitstring = (if v_232 then zero else caught-fail) in
                                        {1347}let x_72: bitstring = (if v_232 then (l_63,h_58) else caught-fail) in
                                        {1348}let client_wkh_3: bitstring = (if v_232 then catch-fail(hmac(@6_backend_h,client_hts_3,x_72)) else caught-fail) in
                                        {1349}let v_233: bool = not-caught-fail(client_wkh_3) in
                                        {1350}let l_64: label = (if v_233 then tls13_key else caught-fail) in
                                        {1351}let h_59: bitstring = (if v_233 then zero else caught-fail) in
                                        {1352}let x_73: bitstring = (if v_233 then (l_64,h_59) else caught-fail) in
                                        {1353}let server_wkh_3: bitstring = (if v_233 then catch-fail(hmac(@6_backend_h,server_hts_3,x_73)) else caught-fail) in
                                        {1354}let v_234: bool = not-caught-fail(server_wkh_3) in
                                        {1355}let l_65: label = (if v_234 then tls13_finished else caught-fail) in
                                        {1356}let h_60: bitstring = (if v_234 then zero else caught-fail) in
                                        {1357}let x_74: bitstring = (if v_234 then (l_65,h_60) else caught-fail) in
                                        {1358}let client_fk_3: bitstring = (if v_234 then catch-fail(hmac(@6_backend_h,client_hts_3,x_74)) else caught-fail) in
                                        {1359}let v_235: bool = not-caught-fail(client_fk_3) in
                                        {1360}let l_66: label = (if v_235 then tls13_finished else caught-fail) in
                                        {1361}let h_61: bitstring = (if v_235 then zero else caught-fail) in
                                        {1362}let x_75: bitstring = (if v_235 then (l_66,h_61) else caught-fail) in
                                        {1363}let server_fk_3: bitstring = (if v_235 then catch-fail(hmac(@6_backend_h,server_hts_3,x_75)) else caught-fail) in
                                        {1364}let v_236: bool = not-caught-fail(server_fk_3) in
                                        {1365}let (master_secret_14: bitstring,chk_10: aead_key,shk_9: aead_key,cfin_10: mac_key,sfin_9: mac_key) = (if v_227 then (if v_228 then (if v_230 then (if v_232 then (if v_233 then (if v_234 then (if v_235 then (if v_236 then (master_secret_13,client_wkh_3,server_wkh_3,client_fk_3,server_fk_3) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {1366}event Client_chk(@6_id_client,chk_10);
                                        {1367}event Client_shk(@6_id_client,shk_9);
                                        {1368}event Client_cfin(@6_id_client,cfin_10);
                                        {1369}event Client_sfin(@6_id_client,sfin_9);
                                        {1370}in(io, enc_ee_msg_2: bitstring);
                                        {1371}let ee_msg_3: msg = aead_dec(@6_backend_a,shk_9,0,zero,enc_ee_msg_2) in
                                        {1372}let EE(ech_ee_2: echExt,extra_ee_2: extraExt) = ee_msg_3 in
                                        {1373}let cur_log2_9: bitstring = (cur_log2_8,ee_msg_3) in
                                        {1374}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_2,sr_10,@6_backend_h,@6_backend_a,c_dom_5,backend_dom,psk_24,safe_psk_5,@6_comp_psk,master_secret_14,chk_10,0,shk_9,1,cfin_10,sfin_9,cur_log2_9)))
                                    )
                                    else
                                        {1375}out(io, illegal_parameter)
                                )
                                else
                                    {1376}out(io, illegal_parameter)
                        )
                        else
                            {1377}let cur_log_OU1_HRR: bitstring = ((zero,o_client_hello),server_hello_1) in
                            {1378}let ech_config(config_id_3: configId,ech_g_5: group,pkR_5: element,o_dom_3: domain,ech_h_5: hash_alg,ech_a_5: aead_alg) = ech_conf in
                            {1379}new rand24_5[]: bytes24;
                            {1380}new rand8_5[]: bytes8;
                            {1381}let o_cr_3: bytes32 = B32(rand24_5,rand8_5) in
                            {1382}let send_key_share_2: bool = true in
                            {1383}new s_29[]: seed;
                            {1384}let gx_11: element = dh_pub(@6_tls_g,dh_k(s_29)) in
                            {1385}let v_237: bitstring = (dh_k(s_29),gx_11) in
                            {1386}let v_238: bool = success?(1-proj-2-tuple(v_237)) in
                            {1387}let gx_12: element = (if v_238 then 2-proj-2-tuple(v_237) else caught-fail) in
                            {1388}let x_76: bitstring = (if v_238 then 1-proj-2-tuple(v_237) else caught-fail) in
                            {1389}let kex_4: kex_alg = (if v_238 then (if send_key_share_2 then DHE_kex(@6_tls_g,gx_12) else DHE_group(@6_tls_g)) else caught-fail) in
                            {1390}let (o_kex_ext_2: keyShareExt,kex_data: bitstring) = (if v_238 then (client_kex_ext(kex_4),(x_76,@6_tls_g)) else fail-any) in
                            {1391}if @6_use_grease then
                            (
                                {1392}let extra_8: extraExt = empty_extra_ext in
                                {1393}if @6_use_psk then
                                (
                                    {1394}let (psk_25: preSharedKey,id_13: identityPsk,old_es_2: bitstring,is_safe_7: bool) = psk_data_1 in
                                    (
                                        {1395}let offer_5: params = nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_2,SNI(o_dom_3),o_ech_ext_1,extra_8,trunc_client_psk_ext(id_13)) in
                                        {1396}let cur_log'_5: bitstring = (cur_log_OU1_HRR,CH(o_cr_3,offer_5)) in
                                        {1397}let s_30: bitstring = zero in
                                        {1398}let k_26: bitstring = catch-fail(psk2b(psk_25)) in
                                        {1399}let v_239: bool = not-caught-fail(k_26) in
                                        {1400}let early_secret_15: bitstring = catch-fail((if v_239 then hmac(@6_tls_h,s_30,k_26) else fail-any)) in
                                        {1401}let v_240: bool = not-caught-fail(early_secret_15) in
                                        {1402}let l_67: label = (if v_240 then tls13_ext_res_binder else caught-fail) in
                                        {1403}let m_18: bitstring = (if v_240 then zero else caught-fail) in
                                        {1404}let h_62: bitstring = (if v_240 then catch-fail(hash(@6_tls_h,m_18)) else caught-fail) in
                                        {1405}let v_241: bool = not-caught-fail(h_62) in
                                        {1406}let x_77: bitstring = (if v_241 then (l_67,h_62) else caught-fail) in
                                        {1407}let binder_key_10: bitstring = (if v_240 then catch-fail((if v_241 then hmac(@6_tls_h,early_secret_15,x_77) else fail-any)) else caught-fail) in
                                        {1408}let v_242: bool = not-caught-fail(binder_key_10) in
                                        {1409}let v_243: bitstring = catch-fail((if v_240 then (if v_242 then (early_secret_15,binder_key_10) else fail-any) else fail-any)) in
                                        {1410}let v_244: bool = (not-caught-fail(v_243) && success?(1-proj-2-tuple(v_243))) in
                                        {1411}let kb_10: mac_key = (if v_244 then 2-proj-2-tuple(v_243) else caught-fail) in
                                        {1412}let es_13: bitstring = (if v_244 then 1-proj-2-tuple(v_243) else caught-fail) in
                                        {1413}let binders_4: bitstring = (if v_244 then catch-fail(hmac(@6_tls_h,kb_10,cur_log'_5)) else caught-fail) in
                                        {1414}let v_245: bool = not-caught-fail(binders_4) in
                                        {1415}let v_246: bitstring = catch-fail((if v_244 then (if v_245 then (client_psk_ext(id_13,binders_4),(psk_25,id_13,es_13,is_safe_7)) else fail-any) else fail-any)) in
                                        {1416}let v_247: bool = (not-caught-fail(v_246) && success?(1-proj-2-tuple(v_246))) in
                                        {1417}let psk_data_5: bitstring = (if v_247 then 2-proj-2-tuple(v_246) else caught-fail) in
                                        {1418}let psk_ext_9: preSharedKeyExt = (if v_247 then 1-proj-2-tuple(v_246) else caught-fail) in
                                        {1419}let o_offer_5: params = (if v_247 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_2,SNI(o_dom_3),o_ech_ext_1,empty_extra_ext,psk_ext_9) else caught-fail) in
                                        {1420}let (client_hello': msg,cr': bytes32,kex_data': bitstring,psk_data'_3: bitstring) = (if v_247 then (CH(o_cr_3,o_offer_5),o_cr_3,kex_data,psk_data_5) else fail-any) in
                                        {1421}out(io, client_hello');
                                        {1422}let cur_log_OU1_HRR_OU2: bitstring = (cur_log_OU1_HRR,client_hello') in
                                        {1423}in(io, server_hello'_3: msg);
                                        {1424}let SH(sr': bytes32,mode': params) = server_hello'_3 in
                                        (
                                            {1425}if (sr' = B32(HRR24,HRR8)) then
                                                {1426}out(io, unexpected_message)
                                            else
                                                {1427}let (x_78: bitstring,g_5: group) = kex_data' in
                                                {1428}let (psk_offer_3: preSharedKey,id_offer_3: identityPsk,es_offer_3: bitstring,is_safe_offer_3: bool) = psk_data'_3 in
                                                {1429}event Client_PSKOffer(@6_id_client,psk_offer_3,id_offer_3,is_safe_offer_3);
                                                {1430}event Client_Rand_client(@6_id_client,cr');
                                                {1431}event Client_DH_client(@6_id_client,dh_pub(g_5,x_78));
                                                {1432}event Client_server_domain(@6_id_client,o_dom);
                                                {1433}let SH(sr_11: bytes32,mode_4: params) = server_hello'_3 in
                                                {1434}event Client_Rand_server(@6_id_client,sr_11);
                                                {1435}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_5,gy_4: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_10: preSharedKeyExt) = mode_4 in
                                                (
                                                    {1436}let cur_log2_10: bitstring = (cur_log_OU1_HRR_OU2,server_hello'_3) in
                                                    {1437}event Client_DH_server(@6_id_client,gy_4);
                                                    {1438}let v_248: bool = (psk_ext_10 = empty_psk_ext) in
                                                    {1439}let psk_26: preSharedKey = (if v_248 then NoPsk else caught-fail) in
                                                    {1440}let s_31: bitstring = (if v_248 then zero else caught-fail) in
                                                    {1441}let k_27: bitstring = (if v_248 then catch-fail(psk2b(psk_26)) else caught-fail) in
                                                    {1442}let v_249: bool = not-caught-fail(k_27) in
                                                    {1443}let early_secret_16: bitstring = (if v_248 then catch-fail((if v_249 then hmac(@6_tls_h,s_31,k_27) else fail-any)) else caught-fail) in
                                                    {1444}let v_250: bool = not-caught-fail(early_secret_16) in
                                                    {1445}let l_68: label = (if v_250 then tls13_ext_res_binder else caught-fail) in
                                                    {1446}let m_19: bitstring = (if v_250 then zero else caught-fail) in
                                                    {1447}let h_63: bitstring = (if v_250 then catch-fail(hash(@6_tls_h,m_19)) else caught-fail) in
                                                    {1448}let v_251: bool = not-caught-fail(h_63) in
                                                    {1449}let x_79: bitstring = (if v_251 then (l_68,h_63) else caught-fail) in
                                                    {1450}let binder_key_11: bitstring = (if v_250 then catch-fail((if v_251 then hmac(@6_tls_h,early_secret_16,x_79) else fail-any)) else caught-fail) in
                                                    {1451}let v_252: bool = not-caught-fail(binder_key_11) in
                                                    {1452}let v_253: bitstring = (if v_248 then catch-fail((if v_250 then (if v_252 then (early_secret_16,binder_key_11) else fail-any) else fail-any)) else caught-fail) in
                                                    {1453}let v_254: bool = (not-caught-fail(v_253) && success?(1-proj-2-tuple(v_253))) in
                                                    {1454}let kb_11: mac_key = (if v_254 then 2-proj-2-tuple(v_253) else caught-fail) in
                                                    {1455}let es_14: bitstring = (if v_254 then 1-proj-2-tuple(v_253) else caught-fail) in
                                                    {1456}let v_255: bitstring = (if not(v_248) then catch-fail(psk_data'_3) else caught-fail) in
                                                    {1457}let v_256: bool = (not-caught-fail(v_255) && success?(1-proj-4-tuple(v_255))) in
                                                    {1458}let is_safe_8: bool = (if v_256 then 4-proj-4-tuple(v_255) else caught-fail) in
                                                    {1459}let es_15: bitstring = (if v_256 then 3-proj-4-tuple(v_255) else caught-fail) in
                                                    {1460}let id_14: identityPsk = (if v_256 then 2-proj-4-tuple(v_255) else caught-fail) in
                                                    {1461}let psk_27: preSharedKey = (if v_256 then 1-proj-4-tuple(v_255) else caught-fail) in
                                                    {1462}let (psk_28: preSharedKey,early_secret_17: bitstring,valid_3: bool,safe_psk_6: bool) = (if v_248 then (if v_254 then (NoPsk,es_14,true,false) else fail-any) else (if v_256 then (psk_27,es_15,((psk_27 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_10)),is_safe_8) else fail-any)) in
                                                    {1463}event Client_PSKChoosen(@6_id_client,psk_28,safe_psk_6);
                                                    {1464}if valid_3 then
                                                    (
                                                        {1465}let gxy_7: element = catch-fail(dh_decap_fun(g_5,gy_4,x_78)) in
                                                        {1466}let v_257: bool = not-caught-fail(gxy_7) in
                                                        {1467}new s_32[]: seed;
                                                        {1468}let gxy_8: element = (if v_257 then gxy_7 else dh_f(s_32)) in
                                                        {1469}event Client_DH_gxy(@6_id_client,gxy_8);
                                                        {1470}let l_69: label = tls13_derived in
                                                        {1471}let m_20: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {1472}let v_258: bool = not-caught-fail(m_20) in
                                                        {1473}let h_64: bitstring = (if v_258 then catch-fail(hash(@6_tls_h,m_20)) else caught-fail) in
                                                        {1474}let v_259: bool = not-caught-fail(h_64) in
                                                        {1475}let x_80: bitstring = (if v_259 then (l_69,h_64) else caught-fail) in
                                                        {1476}let extra_9: bitstring = catch-fail((if v_258 then (if v_259 then hmac(@6_tls_h,early_secret_17,x_80) else fail-any) else fail-any)) in
                                                        {1477}let v_260: bool = not-caught-fail(extra_9) in
                                                        {1478}let handshake_secret_4: bitstring = (if v_260 then hmac(@6_tls_h,extra_9,gxy_8) else fail-any) in
                                                        {1479}let l_70: label = tls13_derived in
                                                        {1480}let m_21: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {1481}let v_261: bool = not-caught-fail(m_21) in
                                                        {1482}let h_65: bitstring = (if v_261 then catch-fail(hash(@6_tls_h,m_21)) else caught-fail) in
                                                        {1483}let v_262: bool = not-caught-fail(h_65) in
                                                        {1484}let x_81: bitstring = (if v_262 then (l_70,h_65) else caught-fail) in
                                                        {1485}let extra_10: bitstring = catch-fail((if v_261 then (if v_262 then hmac(@6_tls_h,handshake_secret_4,x_81) else fail-any) else fail-any)) in
                                                        {1486}let v_263: bool = not-caught-fail(extra_10) in
                                                        {1487}let k_28: bitstring = (if v_263 then zero else caught-fail) in
                                                        {1488}let master_secret_15: bitstring = (if v_263 then catch-fail(hmac(@6_tls_h,handshake_secret_4,k_28)) else caught-fail) in
                                                        {1489}let v_264: bool = not-caught-fail(master_secret_15) in
                                                        {1490}let l_71: label = (if v_264 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {1491}let h_66: bitstring = (if v_264 then catch-fail(hash(@6_tls_h,cur_log2_10)) else caught-fail) in
                                                        {1492}let v_265: bool = not-caught-fail(h_66) in
                                                        {1493}let x_82: bitstring = (if v_265 then (l_71,h_66) else caught-fail) in
                                                        {1494}let client_hts_4: bitstring = (if v_264 then catch-fail((if v_265 then hmac(@6_tls_h,handshake_secret_4,x_82) else fail-any)) else caught-fail) in
                                                        {1495}let v_266: bool = not-caught-fail(client_hts_4) in
                                                        {1496}let l_72: label = (if v_266 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {1497}let h_67: bitstring = (if v_266 then catch-fail(hash(@6_tls_h,cur_log2_10)) else caught-fail) in
                                                        {1498}let v_267: bool = not-caught-fail(h_67) in
                                                        {1499}let x_83: bitstring = (if v_267 then (l_72,h_67) else caught-fail) in
                                                        {1500}let server_hts_4: bitstring = (if v_266 then catch-fail((if v_267 then hmac(@6_tls_h,handshake_secret_4,x_83) else fail-any)) else caught-fail) in
                                                        {1501}let v_268: bool = not-caught-fail(server_hts_4) in
                                                        {1502}let l_73: label = (if v_268 then tls13_key else caught-fail) in
                                                        {1503}let h_68: bitstring = (if v_268 then zero else caught-fail) in
                                                        {1504}let x_84: bitstring = (if v_268 then (l_73,h_68) else caught-fail) in
                                                        {1505}let client_wkh_4: bitstring = (if v_268 then catch-fail(hmac(@6_tls_h,client_hts_4,x_84)) else caught-fail) in
                                                        {1506}let v_269: bool = not-caught-fail(client_wkh_4) in
                                                        {1507}let l_74: label = (if v_269 then tls13_key else caught-fail) in
                                                        {1508}let h_69: bitstring = (if v_269 then zero else caught-fail) in
                                                        {1509}let x_85: bitstring = (if v_269 then (l_74,h_69) else caught-fail) in
                                                        {1510}let server_wkh_4: bitstring = (if v_269 then catch-fail(hmac(@6_tls_h,server_hts_4,x_85)) else caught-fail) in
                                                        {1511}let v_270: bool = not-caught-fail(server_wkh_4) in
                                                        {1512}let l_75: label = (if v_270 then tls13_finished else caught-fail) in
                                                        {1513}let h_70: bitstring = (if v_270 then zero else caught-fail) in
                                                        {1514}let x_86: bitstring = (if v_270 then (l_75,h_70) else caught-fail) in
                                                        {1515}let client_fk_4: bitstring = (if v_270 then catch-fail(hmac(@6_tls_h,client_hts_4,x_86)) else caught-fail) in
                                                        {1516}let v_271: bool = not-caught-fail(client_fk_4) in
                                                        {1517}let l_76: label = (if v_271 then tls13_finished else caught-fail) in
                                                        {1518}let h_71: bitstring = (if v_271 then zero else caught-fail) in
                                                        {1519}let x_87: bitstring = (if v_271 then (l_76,h_71) else caught-fail) in
                                                        {1520}let server_fk_4: bitstring = (if v_271 then catch-fail(hmac(@6_tls_h,server_hts_4,x_87)) else caught-fail) in
                                                        {1521}let v_272: bool = not-caught-fail(server_fk_4) in
                                                        {1522}let (master_secret_16: bitstring,chk_11: aead_key,shk_10: aead_key,cfin_11: mac_key,sfin_10: mac_key) = (if v_263 then (if v_264 then (if v_266 then (if v_268 then (if v_269 then (if v_270 then (if v_271 then (if v_272 then (master_secret_15,client_wkh_4,server_wkh_4,client_fk_4,server_fk_4) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {1523}event Client_chk(@6_id_client,chk_11);
                                                        {1524}event Client_shk(@6_id_client,shk_10);
                                                        {1525}event Client_cfin(@6_id_client,cfin_11);
                                                        {1526}event Client_sfin(@6_id_client,sfin_10);
                                                        {1527}in(io, enc_ee_msg_3: bitstring);
                                                        {1528}let ee_msg_4: msg = aead_dec(@6_tls_a,shk_10,0,zero,enc_ee_msg_3) in
                                                        {1529}let EE(ech_ee_3: echExt,extra_ee_3: extraExt) = ee_msg_4 in
                                                        {1530}let cur_log2_11: bitstring = (cur_log2_10,ee_msg_4) in
                                                        {1531}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr',sr_11,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_28,safe_psk_6,@6_comp_psk,master_secret_16,chk_11,0,shk_10,1,cfin_11,sfin_10,cur_log2_11)))
                                                    )
                                                    else
                                                        {1532}out(io, illegal_parameter)
                                                )
                                                else
                                                    {1533}out(io, illegal_parameter)
                                        )
                                        else
                                            {1534}out(io, unexpected_message)
                                    )
                                    else
                                        {1684}get pre_shared_keys(c_dom'_3: domain,=o_dom_3,=@6_tls_h,id_15: identityPsk,psk_29: preSharedKey,idP_5: idProc,is_safe_9: bool) in
                                        {1535}event Selected_one_time_used_psk(@6_id_client,psk_29,is_safe_9);
                                        {1536}event Selected_psk(c_dom_5,c_dom'_3,idP_5,is_safe_9);
                                        {1537}event Selected_psk_no_missmatch(@6_id_client,o_dom_3,@6_tls_h,psk_29,id_15);
                                        {1538}event Selected_psk_with_ID(c_dom_5,c_dom'_3,id_15,idP_5,is_safe_9);
                                        {1539}let v_273: bitstring = (id_15,psk_29,is_safe_9) in
                                        {1540}let v_274: bool = success?(1-proj-3-tuple(v_273)) in
                                        {1541}let is_safe_10: bool = (if v_274 then 3-proj-3-tuple(v_273) else caught-fail) in
                                        {1542}let psk_30: preSharedKey = (if v_274 then 2-proj-3-tuple(v_273) else caught-fail) in
                                        {1543}let id_16: identityPsk = (if v_274 then 1-proj-3-tuple(v_273) else caught-fail) in
                                        {1544}let offer_6: params = (if v_274 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_2,SNI(o_dom_3),o_ech_ext_1,extra_8,trunc_client_psk_ext(id_16)) else caught-fail) in
                                        {1545}let cur_log'_6: bitstring = (if v_274 then (cur_log_OU1_HRR,CH(o_cr_3,offer_6)) else caught-fail) in
                                        {1546}let s_33: bitstring = (if v_274 then zero else caught-fail) in
                                        {1547}let k_29: bitstring = (if v_274 then catch-fail(psk2b(psk_30)) else caught-fail) in
                                        {1548}let v_275: bool = not-caught-fail(k_29) in
                                        {1549}let early_secret_18: bitstring = (if v_274 then catch-fail((if v_275 then hmac(@6_tls_h,s_33,k_29) else fail-any)) else caught-fail) in
                                        {1550}let v_276: bool = not-caught-fail(early_secret_18) in
                                        {1551}let l_77: label = (if v_276 then tls13_ext_res_binder else caught-fail) in
                                        {1552}let m_22: bitstring = (if v_276 then zero else caught-fail) in
                                        {1553}let h_72: bitstring = (if v_276 then catch-fail(hash(@6_tls_h,m_22)) else caught-fail) in
                                        {1554}let v_277: bool = not-caught-fail(h_72) in
                                        {1555}let x_88: bitstring = (if v_277 then (l_77,h_72) else caught-fail) in
                                        {1556}let binder_key_12: bitstring = (if v_276 then catch-fail((if v_277 then hmac(@6_tls_h,early_secret_18,x_88) else fail-any)) else caught-fail) in
                                        {1557}let v_278: bool = not-caught-fail(binder_key_12) in
                                        {1558}let v_279: bitstring = (if v_274 then catch-fail((if v_276 then (if v_278 then (early_secret_18,binder_key_12) else fail-any) else fail-any)) else caught-fail) in
                                        {1559}let v_280: bool = (not-caught-fail(v_279) && success?(1-proj-2-tuple(v_279))) in
                                        {1560}let kb_12: mac_key = (if v_280 then 2-proj-2-tuple(v_279) else caught-fail) in
                                        {1561}let es_16: bitstring = (if v_280 then 1-proj-2-tuple(v_279) else caught-fail) in
                                        {1562}let binders_5: bitstring = (if v_280 then catch-fail(hmac(@6_tls_h,kb_12,cur_log'_6)) else caught-fail) in
                                        {1563}let v_281: bool = not-caught-fail(binders_5) in
                                        {1564}let v_282: bitstring = catch-fail((if v_274 then (if v_280 then (if v_281 then (client_psk_ext(id_16,binders_5),(psk_30,id_16,es_16,is_safe_10)) else fail-any) else fail-any) else fail-any)) in
                                        {1565}let v_283: bool = (not-caught-fail(v_282) && success?(1-proj-2-tuple(v_282))) in
                                        {1566}let psk_data_6: bitstring = (if v_283 then 2-proj-2-tuple(v_282) else caught-fail) in
                                        {1567}let psk_ext_11: preSharedKeyExt = (if v_283 then 1-proj-2-tuple(v_282) else caught-fail) in
                                        {1568}let o_offer_6: params = (if v_283 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_2,SNI(o_dom_3),o_ech_ext_1,empty_extra_ext,psk_ext_11) else caught-fail) in
                                        {1569}let (client_hello'_1: msg,cr'_1: bytes32,kex_data'_1: bitstring,psk_data'_4: bitstring) = (if v_283 then (CH(o_cr_3,o_offer_6),o_cr_3,kex_data,psk_data_6) else fail-any) in
                                        {1570}out(io, client_hello'_1);
                                        {1571}let cur_log_OU1_HRR_OU2_1: bitstring = (cur_log_OU1_HRR,client_hello'_1) in
                                        {1572}in(io, server_hello'_4: msg);
                                        {1573}let SH(sr'_1: bytes32,mode'_1: params) = server_hello'_4 in
                                        (
                                            {1574}if (sr'_1 = B32(HRR24,HRR8)) then
                                                {1575}out(io, unexpected_message)
                                            else
                                                {1576}let (x_89: bitstring,g_6: group) = kex_data'_1 in
                                                {1577}let (psk_offer_4: preSharedKey,id_offer_4: identityPsk,es_offer_4: bitstring,is_safe_offer_4: bool) = psk_data'_4 in
                                                {1578}event Client_PSKOffer(@6_id_client,psk_offer_4,id_offer_4,is_safe_offer_4);
                                                {1579}event Client_Rand_client(@6_id_client,cr'_1);
                                                {1580}event Client_DH_client(@6_id_client,dh_pub(g_6,x_89));
                                                {1581}event Client_server_domain(@6_id_client,o_dom);
                                                {1582}let SH(sr_12: bytes32,mode_5: params) = server_hello'_4 in
                                                {1583}event Client_Rand_server(@6_id_client,sr_12);
                                                {1584}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_6,gy_5: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_12: preSharedKeyExt) = mode_5 in
                                                (
                                                    {1585}let cur_log2_12: bitstring = (cur_log_OU1_HRR_OU2_1,server_hello'_4) in
                                                    {1586}event Client_DH_server(@6_id_client,gy_5);
                                                    {1587}let v_284: bool = (psk_ext_12 = empty_psk_ext) in
                                                    {1588}let psk_31: preSharedKey = (if v_284 then NoPsk else caught-fail) in
                                                    {1589}let s_34: bitstring = (if v_284 then zero else caught-fail) in
                                                    {1590}let k_30: bitstring = (if v_284 then catch-fail(psk2b(psk_31)) else caught-fail) in
                                                    {1591}let v_285: bool = not-caught-fail(k_30) in
                                                    {1592}let early_secret_19: bitstring = (if v_284 then catch-fail((if v_285 then hmac(@6_tls_h,s_34,k_30) else fail-any)) else caught-fail) in
                                                    {1593}let v_286: bool = not-caught-fail(early_secret_19) in
                                                    {1594}let l_78: label = (if v_286 then tls13_ext_res_binder else caught-fail) in
                                                    {1595}let m_23: bitstring = (if v_286 then zero else caught-fail) in
                                                    {1596}let h_73: bitstring = (if v_286 then catch-fail(hash(@6_tls_h,m_23)) else caught-fail) in
                                                    {1597}let v_287: bool = not-caught-fail(h_73) in
                                                    {1598}let x_90: bitstring = (if v_287 then (l_78,h_73) else caught-fail) in
                                                    {1599}let binder_key_13: bitstring = (if v_286 then catch-fail((if v_287 then hmac(@6_tls_h,early_secret_19,x_90) else fail-any)) else caught-fail) in
                                                    {1600}let v_288: bool = not-caught-fail(binder_key_13) in
                                                    {1601}let v_289: bitstring = (if v_284 then catch-fail((if v_286 then (if v_288 then (early_secret_19,binder_key_13) else fail-any) else fail-any)) else caught-fail) in
                                                    {1602}let v_290: bool = (not-caught-fail(v_289) && success?(1-proj-2-tuple(v_289))) in
                                                    {1603}let kb_13: mac_key = (if v_290 then 2-proj-2-tuple(v_289) else caught-fail) in
                                                    {1604}let es_17: bitstring = (if v_290 then 1-proj-2-tuple(v_289) else caught-fail) in
                                                    {1605}let v_291: bitstring = (if not(v_284) then catch-fail(psk_data'_4) else caught-fail) in
                                                    {1606}let v_292: bool = (not-caught-fail(v_291) && success?(1-proj-4-tuple(v_291))) in
                                                    {1607}let is_safe_11: bool = (if v_292 then 4-proj-4-tuple(v_291) else caught-fail) in
                                                    {1608}let es_18: bitstring = (if v_292 then 3-proj-4-tuple(v_291) else caught-fail) in
                                                    {1609}let id_17: identityPsk = (if v_292 then 2-proj-4-tuple(v_291) else caught-fail) in
                                                    {1610}let psk_32: preSharedKey = (if v_292 then 1-proj-4-tuple(v_291) else caught-fail) in
                                                    {1611}let (psk_33: preSharedKey,early_secret_20: bitstring,valid_4: bool,safe_psk_7: bool) = (if v_284 then (if v_290 then (NoPsk,es_17,true,false) else fail-any) else (if v_292 then (psk_32,es_18,((psk_32 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_12)),is_safe_11) else fail-any)) in
                                                    {1612}event Client_PSKChoosen(@6_id_client,psk_33,safe_psk_7);
                                                    {1613}if valid_4 then
                                                    (
                                                        {1614}let gxy_9: element = catch-fail(dh_decap_fun(g_6,gy_5,x_89)) in
                                                        {1615}let v_293: bool = not-caught-fail(gxy_9) in
                                                        {1616}new s_35[]: seed;
                                                        {1617}let gxy_10: element = (if v_293 then gxy_9 else dh_f(s_35)) in
                                                        {1618}event Client_DH_gxy(@6_id_client,gxy_10);
                                                        {1619}let l_79: label = tls13_derived in
                                                        {1620}let m_24: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {1621}let v_294: bool = not-caught-fail(m_24) in
                                                        {1622}let h_74: bitstring = (if v_294 then catch-fail(hash(@6_tls_h,m_24)) else caught-fail) in
                                                        {1623}let v_295: bool = not-caught-fail(h_74) in
                                                        {1624}let x_91: bitstring = (if v_295 then (l_79,h_74) else caught-fail) in
                                                        {1625}let extra_11: bitstring = catch-fail((if v_294 then (if v_295 then hmac(@6_tls_h,early_secret_20,x_91) else fail-any) else fail-any)) in
                                                        {1626}let v_296: bool = not-caught-fail(extra_11) in
                                                        {1627}let handshake_secret_5: bitstring = (if v_296 then hmac(@6_tls_h,extra_11,gxy_10) else fail-any) in
                                                        {1628}let l_80: label = tls13_derived in
                                                        {1629}let m_25: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {1630}let v_297: bool = not-caught-fail(m_25) in
                                                        {1631}let h_75: bitstring = (if v_297 then catch-fail(hash(@6_tls_h,m_25)) else caught-fail) in
                                                        {1632}let v_298: bool = not-caught-fail(h_75) in
                                                        {1633}let x_92: bitstring = (if v_298 then (l_80,h_75) else caught-fail) in
                                                        {1634}let extra_12: bitstring = catch-fail((if v_297 then (if v_298 then hmac(@6_tls_h,handshake_secret_5,x_92) else fail-any) else fail-any)) in
                                                        {1635}let v_299: bool = not-caught-fail(extra_12) in
                                                        {1636}let k_31: bitstring = (if v_299 then zero else caught-fail) in
                                                        {1637}let master_secret_17: bitstring = (if v_299 then catch-fail(hmac(@6_tls_h,handshake_secret_5,k_31)) else caught-fail) in
                                                        {1638}let v_300: bool = not-caught-fail(master_secret_17) in
                                                        {1639}let l_81: label = (if v_300 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {1640}let h_76: bitstring = (if v_300 then catch-fail(hash(@6_tls_h,cur_log2_12)) else caught-fail) in
                                                        {1641}let v_301: bool = not-caught-fail(h_76) in
                                                        {1642}let x_93: bitstring = (if v_301 then (l_81,h_76) else caught-fail) in
                                                        {1643}let client_hts_5: bitstring = (if v_300 then catch-fail((if v_301 then hmac(@6_tls_h,handshake_secret_5,x_93) else fail-any)) else caught-fail) in
                                                        {1644}let v_302: bool = not-caught-fail(client_hts_5) in
                                                        {1645}let l_82: label = (if v_302 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {1646}let h_77: bitstring = (if v_302 then catch-fail(hash(@6_tls_h,cur_log2_12)) else caught-fail) in
                                                        {1647}let v_303: bool = not-caught-fail(h_77) in
                                                        {1648}let x_94: bitstring = (if v_303 then (l_82,h_77) else caught-fail) in
                                                        {1649}let server_hts_5: bitstring = (if v_302 then catch-fail((if v_303 then hmac(@6_tls_h,handshake_secret_5,x_94) else fail-any)) else caught-fail) in
                                                        {1650}let v_304: bool = not-caught-fail(server_hts_5) in
                                                        {1651}let l_83: label = (if v_304 then tls13_key else caught-fail) in
                                                        {1652}let h_78: bitstring = (if v_304 then zero else caught-fail) in
                                                        {1653}let x_95: bitstring = (if v_304 then (l_83,h_78) else caught-fail) in
                                                        {1654}let client_wkh_5: bitstring = (if v_304 then catch-fail(hmac(@6_tls_h,client_hts_5,x_95)) else caught-fail) in
                                                        {1655}let v_305: bool = not-caught-fail(client_wkh_5) in
                                                        {1656}let l_84: label = (if v_305 then tls13_key else caught-fail) in
                                                        {1657}let h_79: bitstring = (if v_305 then zero else caught-fail) in
                                                        {1658}let x_96: bitstring = (if v_305 then (l_84,h_79) else caught-fail) in
                                                        {1659}let server_wkh_5: bitstring = (if v_305 then catch-fail(hmac(@6_tls_h,server_hts_5,x_96)) else caught-fail) in
                                                        {1660}let v_306: bool = not-caught-fail(server_wkh_5) in
                                                        {1661}let l_85: label = (if v_306 then tls13_finished else caught-fail) in
                                                        {1662}let h_80: bitstring = (if v_306 then zero else caught-fail) in
                                                        {1663}let x_97: bitstring = (if v_306 then (l_85,h_80) else caught-fail) in
                                                        {1664}let client_fk_5: bitstring = (if v_306 then catch-fail(hmac(@6_tls_h,client_hts_5,x_97)) else caught-fail) in
                                                        {1665}let v_307: bool = not-caught-fail(client_fk_5) in
                                                        {1666}let l_86: label = (if v_307 then tls13_finished else caught-fail) in
                                                        {1667}let h_81: bitstring = (if v_307 then zero else caught-fail) in
                                                        {1668}let x_98: bitstring = (if v_307 then (l_86,h_81) else caught-fail) in
                                                        {1669}let server_fk_5: bitstring = (if v_307 then catch-fail(hmac(@6_tls_h,server_hts_5,x_98)) else caught-fail) in
                                                        {1670}let v_308: bool = not-caught-fail(server_fk_5) in
                                                        {1671}let (master_secret_18: bitstring,chk_12: aead_key,shk_11: aead_key,cfin_12: mac_key,sfin_11: mac_key) = (if v_299 then (if v_300 then (if v_302 then (if v_304 then (if v_305 then (if v_306 then (if v_307 then (if v_308 then (master_secret_17,client_wkh_5,server_wkh_5,client_fk_5,server_fk_5) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {1672}event Client_chk(@6_id_client,chk_12);
                                                        {1673}event Client_shk(@6_id_client,shk_11);
                                                        {1674}event Client_cfin(@6_id_client,cfin_12);
                                                        {1675}event Client_sfin(@6_id_client,sfin_11);
                                                        {1676}in(io, enc_ee_msg_4: bitstring);
                                                        {1677}let ee_msg_5: msg = aead_dec(@6_tls_a,shk_11,0,zero,enc_ee_msg_4) in
                                                        {1678}let EE(ech_ee_4: echExt,extra_ee_4: extraExt) = ee_msg_5 in
                                                        {1679}let cur_log2_13: bitstring = (cur_log2_12,ee_msg_5) in
                                                        {1680}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_1,sr_12,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_33,safe_psk_7,@6_comp_psk,master_secret_18,chk_12,0,shk_11,1,cfin_12,sfin_11,cur_log2_13)))
                                                    )
                                                    else
                                                        {1681}out(io, illegal_parameter)
                                                )
                                                else
                                                    {1682}out(io, illegal_parameter)
                                        )
                                        else
                                            {1683}out(io, unexpected_message)
                                )
                                else
                                    {1685}let psk_34: preSharedKey = NoPsk in
                                    {1686}let s_36: bitstring = zero in
                                    {1687}let k_32: bitstring = catch-fail(psk2b(psk_34)) in
                                    {1688}let v_309: bool = not-caught-fail(k_32) in
                                    {1689}let early_secret_21: bitstring = catch-fail((if v_309 then hmac(@6_tls_h,s_36,k_32) else fail-any)) in
                                    {1690}let v_310: bool = not-caught-fail(early_secret_21) in
                                    {1691}let l_87: label = (if v_310 then tls13_ext_res_binder else caught-fail) in
                                    {1692}let m_26: bitstring = (if v_310 then zero else caught-fail) in
                                    {1693}let h_82: bitstring = (if v_310 then catch-fail(hash(@6_tls_h,m_26)) else caught-fail) in
                                    {1694}let v_311: bool = not-caught-fail(h_82) in
                                    {1695}let x_99: bitstring = (if v_311 then (l_87,h_82) else caught-fail) in
                                    {1696}let binder_key_14: bitstring = (if v_310 then catch-fail((if v_311 then hmac(@6_tls_h,early_secret_21,x_99) else fail-any)) else caught-fail) in
                                    {1697}let v_312: bool = not-caught-fail(binder_key_14) in
                                    {1698}let v_313: bitstring = catch-fail((if v_310 then (if v_312 then (early_secret_21,binder_key_14) else fail-any) else fail-any)) in
                                    {1699}let v_314: bool = (not-caught-fail(v_313) && success?(1-proj-2-tuple(v_313))) in
                                    {1700}let kb_14: mac_key = (if v_314 then 2-proj-2-tuple(v_313) else caught-fail) in
                                    {1701}let es_19: bitstring = (if v_314 then 1-proj-2-tuple(v_313) else caught-fail) in
                                    {1702}let v_315: bitstring = catch-fail((if v_314 then (empty_psk_ext,(NoPsk,zero,es_19,false)) else fail-any)) in
                                    {1703}let v_316: bool = (not-caught-fail(v_315) && success?(1-proj-2-tuple(v_315))) in
                                    {1704}let psk_data_7: bitstring = (if v_316 then 2-proj-2-tuple(v_315) else caught-fail) in
                                    {1705}let psk_ext_13: preSharedKeyExt = (if v_316 then 1-proj-2-tuple(v_315) else caught-fail) in
                                    {1706}let o_offer_7: params = (if v_316 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_2,SNI(o_dom_3),o_ech_ext_1,empty_extra_ext,psk_ext_13) else caught-fail) in
                                    {1707}let (client_hello'_2: msg,cr'_2: bytes32,kex_data'_2: bitstring,psk_data'_5: bitstring) = (if v_316 then (CH(o_cr_3,o_offer_7),o_cr_3,kex_data,psk_data_7) else fail-any) in
                                    {1708}out(io, client_hello'_2);
                                    {1709}let cur_log_OU1_HRR_OU2_2: bitstring = (cur_log_OU1_HRR,client_hello'_2) in
                                    {1710}in(io, server_hello'_5: msg);
                                    {1711}let SH(sr'_2: bytes32,mode'_2: params) = server_hello'_5 in
                                    (
                                        {1712}if (sr'_2 = B32(HRR24,HRR8)) then
                                            {1713}out(io, unexpected_message)
                                        else
                                            {1714}let (x_100: bitstring,g_7: group) = kex_data'_2 in
                                            {1715}let (psk_offer_5: preSharedKey,id_offer_5: identityPsk,es_offer_5: bitstring,is_safe_offer_5: bool) = psk_data'_5 in
                                            {1716}event Client_PSKOffer(@6_id_client,psk_offer_5,id_offer_5,is_safe_offer_5);
                                            {1717}event Client_Rand_client(@6_id_client,cr'_2);
                                            {1718}event Client_DH_client(@6_id_client,dh_pub(g_7,x_100));
                                            {1719}event Client_server_domain(@6_id_client,o_dom);
                                            {1720}let SH(sr_13: bytes32,mode_6: params) = server_hello'_5 in
                                            {1721}event Client_Rand_server(@6_id_client,sr_13);
                                            {1722}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_7,gy_6: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_14: preSharedKeyExt) = mode_6 in
                                            (
                                                {1723}let cur_log2_14: bitstring = (cur_log_OU1_HRR_OU2_2,server_hello'_5) in
                                                {1724}event Client_DH_server(@6_id_client,gy_6);
                                                {1725}let v_317: bool = (psk_ext_14 = empty_psk_ext) in
                                                {1726}let psk_35: preSharedKey = (if v_317 then NoPsk else caught-fail) in
                                                {1727}let s_37: bitstring = (if v_317 then zero else caught-fail) in
                                                {1728}let k_33: bitstring = (if v_317 then catch-fail(psk2b(psk_35)) else caught-fail) in
                                                {1729}let v_318: bool = not-caught-fail(k_33) in
                                                {1730}let early_secret_22: bitstring = (if v_317 then catch-fail((if v_318 then hmac(@6_tls_h,s_37,k_33) else fail-any)) else caught-fail) in
                                                {1731}let v_319: bool = not-caught-fail(early_secret_22) in
                                                {1732}let l_88: label = (if v_319 then tls13_ext_res_binder else caught-fail) in
                                                {1733}let m_27: bitstring = (if v_319 then zero else caught-fail) in
                                                {1734}let h_83: bitstring = (if v_319 then catch-fail(hash(@6_tls_h,m_27)) else caught-fail) in
                                                {1735}let v_320: bool = not-caught-fail(h_83) in
                                                {1736}let x_101: bitstring = (if v_320 then (l_88,h_83) else caught-fail) in
                                                {1737}let binder_key_15: bitstring = (if v_319 then catch-fail((if v_320 then hmac(@6_tls_h,early_secret_22,x_101) else fail-any)) else caught-fail) in
                                                {1738}let v_321: bool = not-caught-fail(binder_key_15) in
                                                {1739}let v_322: bitstring = (if v_317 then catch-fail((if v_319 then (if v_321 then (early_secret_22,binder_key_15) else fail-any) else fail-any)) else caught-fail) in
                                                {1740}let v_323: bool = (not-caught-fail(v_322) && success?(1-proj-2-tuple(v_322))) in
                                                {1741}let kb_15: mac_key = (if v_323 then 2-proj-2-tuple(v_322) else caught-fail) in
                                                {1742}let es_20: bitstring = (if v_323 then 1-proj-2-tuple(v_322) else caught-fail) in
                                                {1743}let v_324: bitstring = (if not(v_317) then catch-fail(psk_data'_5) else caught-fail) in
                                                {1744}let v_325: bool = (not-caught-fail(v_324) && success?(1-proj-4-tuple(v_324))) in
                                                {1745}let is_safe_12: bool = (if v_325 then 4-proj-4-tuple(v_324) else caught-fail) in
                                                {1746}let es_21: bitstring = (if v_325 then 3-proj-4-tuple(v_324) else caught-fail) in
                                                {1747}let id_18: identityPsk = (if v_325 then 2-proj-4-tuple(v_324) else caught-fail) in
                                                {1748}let psk_36: preSharedKey = (if v_325 then 1-proj-4-tuple(v_324) else caught-fail) in
                                                {1749}let (psk_37: preSharedKey,early_secret_23: bitstring,valid_5: bool,safe_psk_8: bool) = (if v_317 then (if v_323 then (NoPsk,es_20,true,false) else fail-any) else (if v_325 then (psk_36,es_21,((psk_36 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_14)),is_safe_12) else fail-any)) in
                                                {1750}event Client_PSKChoosen(@6_id_client,psk_37,safe_psk_8);
                                                {1751}if valid_5 then
                                                (
                                                    {1752}let gxy_11: element = catch-fail(dh_decap_fun(g_7,gy_6,x_100)) in
                                                    {1753}let v_326: bool = not-caught-fail(gxy_11) in
                                                    {1754}new s_38[]: seed;
                                                    {1755}let gxy_12: element = (if v_326 then gxy_11 else dh_f(s_38)) in
                                                    {1756}event Client_DH_gxy(@6_id_client,gxy_12);
                                                    {1757}let l_89: label = tls13_derived in
                                                    {1758}let m_28: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {1759}let v_327: bool = not-caught-fail(m_28) in
                                                    {1760}let h_84: bitstring = (if v_327 then catch-fail(hash(@6_tls_h,m_28)) else caught-fail) in
                                                    {1761}let v_328: bool = not-caught-fail(h_84) in
                                                    {1762}let x_102: bitstring = (if v_328 then (l_89,h_84) else caught-fail) in
                                                    {1763}let extra_13: bitstring = catch-fail((if v_327 then (if v_328 then hmac(@6_tls_h,early_secret_23,x_102) else fail-any) else fail-any)) in
                                                    {1764}let v_329: bool = not-caught-fail(extra_13) in
                                                    {1765}let handshake_secret_6: bitstring = (if v_329 then hmac(@6_tls_h,extra_13,gxy_12) else fail-any) in
                                                    {1766}let l_90: label = tls13_derived in
                                                    {1767}let m_29: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {1768}let v_330: bool = not-caught-fail(m_29) in
                                                    {1769}let h_85: bitstring = (if v_330 then catch-fail(hash(@6_tls_h,m_29)) else caught-fail) in
                                                    {1770}let v_331: bool = not-caught-fail(h_85) in
                                                    {1771}let x_103: bitstring = (if v_331 then (l_90,h_85) else caught-fail) in
                                                    {1772}let extra_14: bitstring = catch-fail((if v_330 then (if v_331 then hmac(@6_tls_h,handshake_secret_6,x_103) else fail-any) else fail-any)) in
                                                    {1773}let v_332: bool = not-caught-fail(extra_14) in
                                                    {1774}let k_34: bitstring = (if v_332 then zero else caught-fail) in
                                                    {1775}let master_secret_19: bitstring = (if v_332 then catch-fail(hmac(@6_tls_h,handshake_secret_6,k_34)) else caught-fail) in
                                                    {1776}let v_333: bool = not-caught-fail(master_secret_19) in
                                                    {1777}let l_91: label = (if v_333 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {1778}let h_86: bitstring = (if v_333 then catch-fail(hash(@6_tls_h,cur_log2_14)) else caught-fail) in
                                                    {1779}let v_334: bool = not-caught-fail(h_86) in
                                                    {1780}let x_104: bitstring = (if v_334 then (l_91,h_86) else caught-fail) in
                                                    {1781}let client_hts_6: bitstring = (if v_333 then catch-fail((if v_334 then hmac(@6_tls_h,handshake_secret_6,x_104) else fail-any)) else caught-fail) in
                                                    {1782}let v_335: bool = not-caught-fail(client_hts_6) in
                                                    {1783}let l_92: label = (if v_335 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {1784}let h_87: bitstring = (if v_335 then catch-fail(hash(@6_tls_h,cur_log2_14)) else caught-fail) in
                                                    {1785}let v_336: bool = not-caught-fail(h_87) in
                                                    {1786}let x_105: bitstring = (if v_336 then (l_92,h_87) else caught-fail) in
                                                    {1787}let server_hts_6: bitstring = (if v_335 then catch-fail((if v_336 then hmac(@6_tls_h,handshake_secret_6,x_105) else fail-any)) else caught-fail) in
                                                    {1788}let v_337: bool = not-caught-fail(server_hts_6) in
                                                    {1789}let l_93: label = (if v_337 then tls13_key else caught-fail) in
                                                    {1790}let h_88: bitstring = (if v_337 then zero else caught-fail) in
                                                    {1791}let x_106: bitstring = (if v_337 then (l_93,h_88) else caught-fail) in
                                                    {1792}let client_wkh_6: bitstring = (if v_337 then catch-fail(hmac(@6_tls_h,client_hts_6,x_106)) else caught-fail) in
                                                    {1793}let v_338: bool = not-caught-fail(client_wkh_6) in
                                                    {1794}let l_94: label = (if v_338 then tls13_key else caught-fail) in
                                                    {1795}let h_89: bitstring = (if v_338 then zero else caught-fail) in
                                                    {1796}let x_107: bitstring = (if v_338 then (l_94,h_89) else caught-fail) in
                                                    {1797}let server_wkh_6: bitstring = (if v_338 then catch-fail(hmac(@6_tls_h,server_hts_6,x_107)) else caught-fail) in
                                                    {1798}let v_339: bool = not-caught-fail(server_wkh_6) in
                                                    {1799}let l_95: label = (if v_339 then tls13_finished else caught-fail) in
                                                    {1800}let h_90: bitstring = (if v_339 then zero else caught-fail) in
                                                    {1801}let x_108: bitstring = (if v_339 then (l_95,h_90) else caught-fail) in
                                                    {1802}let client_fk_6: bitstring = (if v_339 then catch-fail(hmac(@6_tls_h,client_hts_6,x_108)) else caught-fail) in
                                                    {1803}let v_340: bool = not-caught-fail(client_fk_6) in
                                                    {1804}let l_96: label = (if v_340 then tls13_finished else caught-fail) in
                                                    {1805}let h_91: bitstring = (if v_340 then zero else caught-fail) in
                                                    {1806}let x_109: bitstring = (if v_340 then (l_96,h_91) else caught-fail) in
                                                    {1807}let server_fk_6: bitstring = (if v_340 then catch-fail(hmac(@6_tls_h,server_hts_6,x_109)) else caught-fail) in
                                                    {1808}let v_341: bool = not-caught-fail(server_fk_6) in
                                                    {1809}let (master_secret_20: bitstring,chk_13: aead_key,shk_12: aead_key,cfin_13: mac_key,sfin_12: mac_key) = (if v_332 then (if v_333 then (if v_335 then (if v_337 then (if v_338 then (if v_339 then (if v_340 then (if v_341 then (master_secret_19,client_wkh_6,server_wkh_6,client_fk_6,server_fk_6) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {1810}event Client_chk(@6_id_client,chk_13);
                                                    {1811}event Client_shk(@6_id_client,shk_12);
                                                    {1812}event Client_cfin(@6_id_client,cfin_13);
                                                    {1813}event Client_sfin(@6_id_client,sfin_12);
                                                    {1814}in(io, enc_ee_msg_5: bitstring);
                                                    {1815}let ee_msg_6: msg = aead_dec(@6_tls_a,shk_12,0,zero,enc_ee_msg_5) in
                                                    {1816}let EE(ech_ee_5: echExt,extra_ee_5: extraExt) = ee_msg_6 in
                                                    {1817}let cur_log2_15: bitstring = (cur_log2_14,ee_msg_6) in
                                                    {1818}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_2,sr_13,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_37,safe_psk_8,@6_comp_psk,master_secret_20,chk_13,0,shk_12,1,cfin_13,sfin_12,cur_log2_15)))
                                                )
                                                else
                                                    {1819}out(io, illegal_parameter)
                                            )
                                            else
                                                {1820}out(io, illegal_parameter)
                                    )
                                    else
                                        {1821}out(io, unexpected_message)
                            )
                            else
                                {1822}let psk_38: preSharedKey = NoPsk in
                                {1823}let s_39: bitstring = zero in
                                {1824}let k_35: bitstring = catch-fail(psk2b(psk_38)) in
                                {1825}let v_342: bool = not-caught-fail(k_35) in
                                {1826}let early_secret_24: bitstring = catch-fail((if v_342 then hmac(@6_tls_h,s_39,k_35) else fail-any)) in
                                {1827}let v_343: bool = not-caught-fail(early_secret_24) in
                                {1828}let l_97: label = (if v_343 then tls13_ext_res_binder else caught-fail) in
                                {1829}let m_30: bitstring = (if v_343 then zero else caught-fail) in
                                {1830}let h_92: bitstring = (if v_343 then catch-fail(hash(@6_tls_h,m_30)) else caught-fail) in
                                {1831}let v_344: bool = not-caught-fail(h_92) in
                                {1832}let x_110: bitstring = (if v_344 then (l_97,h_92) else caught-fail) in
                                {1833}let binder_key_16: bitstring = (if v_343 then catch-fail((if v_344 then hmac(@6_tls_h,early_secret_24,x_110) else fail-any)) else caught-fail) in
                                {1834}let v_345: bool = not-caught-fail(binder_key_16) in
                                {1835}let v_346: bitstring = catch-fail((if v_343 then (if v_345 then (early_secret_24,binder_key_16) else fail-any) else fail-any)) in
                                {1836}let v_347: bool = (not-caught-fail(v_346) && success?(1-proj-2-tuple(v_346))) in
                                {1837}let kb_16: mac_key = (if v_347 then 2-proj-2-tuple(v_346) else caught-fail) in
                                {1838}let es_22: bitstring = (if v_347 then 1-proj-2-tuple(v_346) else caught-fail) in
                                {1839}let v_348: preSharedKeyExt = (if v_347 then catch-fail(o_psk_ext_1) else caught-fail) in
                                {1840}let v_349: bool = (not-caught-fail(v_348) && success?(1-proj-client_psk_ext(v_348))) in
                                {1841}let fake_binder_4: bitstring = (if v_349 then 2-proj-client_psk_ext(v_348) else caught-fail) in
                                {1842}let fake_id_4: identityPsk = (if v_349 then 1-proj-client_psk_ext(v_348) else caught-fail) in
                                {1843}new fake_binder'[]: bitstring;
                                {1844}let v_350: bitstring = catch-fail((if v_347 then (if v_349 then (client_psk_ext(fake_id_4,fake_binder'),(NoPsk,zero,es_22,false)) else (empty_psk_ext,(NoPsk,zero,es_22,false))) else fail-any)) in
                                {1845}let v_351: bool = (not-caught-fail(v_350) && success?(1-proj-2-tuple(v_350))) in
                                {1846}let psk_data_8: bitstring = (if v_351 then 2-proj-2-tuple(v_350) else caught-fail) in
                                {1847}let psk_ext_15: preSharedKeyExt = (if v_351 then 1-proj-2-tuple(v_350) else caught-fail) in
                                {1848}let o_offer_8: params = (if v_351 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_2,SNI(o_dom_3),o_ech_ext_1,empty_extra_ext,psk_ext_15) else caught-fail) in
                                {1849}let (client_hello'_3: msg,cr'_3: bytes32,kex_data'_3: bitstring,psk_data'_6: bitstring) = (if v_351 then (CH(o_cr_3,o_offer_8),o_cr_3,kex_data,psk_data_8) else fail-any) in
                                {1850}out(io, client_hello'_3);
                                {1851}let cur_log_OU1_HRR_OU2_3: bitstring = (cur_log_OU1_HRR,client_hello'_3) in
                                {1852}in(io, server_hello'_6: msg);
                                {1853}let SH(sr'_3: bytes32,mode'_3: params) = server_hello'_6 in
                                (
                                    {1854}if (sr'_3 = B32(HRR24,HRR8)) then
                                        {1855}out(io, unexpected_message)
                                    else
                                        {1856}let (x_111: bitstring,g_8: group) = kex_data'_3 in
                                        {1857}let (psk_offer_6: preSharedKey,id_offer_6: identityPsk,es_offer_6: bitstring,is_safe_offer_6: bool) = psk_data'_6 in
                                        {1858}event Client_PSKOffer(@6_id_client,psk_offer_6,id_offer_6,is_safe_offer_6);
                                        {1859}event Client_Rand_client(@6_id_client,cr'_3);
                                        {1860}event Client_DH_client(@6_id_client,dh_pub(g_8,x_111));
                                        {1861}event Client_server_domain(@6_id_client,o_dom);
                                        {1862}let SH(sr_14: bytes32,mode_7: params) = server_hello'_6 in
                                        {1863}event Client_Rand_server(@6_id_client,sr_14);
                                        {1864}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_8,gy_7: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_16: preSharedKeyExt) = mode_7 in
                                        (
                                            {1865}let cur_log2_16: bitstring = (cur_log_OU1_HRR_OU2_3,server_hello'_6) in
                                            {1866}event Client_DH_server(@6_id_client,gy_7);
                                            {1867}let v_352: bool = (psk_ext_16 = empty_psk_ext) in
                                            {1868}let psk_39: preSharedKey = (if v_352 then NoPsk else caught-fail) in
                                            {1869}let s_40: bitstring = (if v_352 then zero else caught-fail) in
                                            {1870}let k_36: bitstring = (if v_352 then catch-fail(psk2b(psk_39)) else caught-fail) in
                                            {1871}let v_353: bool = not-caught-fail(k_36) in
                                            {1872}let early_secret_25: bitstring = (if v_352 then catch-fail((if v_353 then hmac(@6_tls_h,s_40,k_36) else fail-any)) else caught-fail) in
                                            {1873}let v_354: bool = not-caught-fail(early_secret_25) in
                                            {1874}let l_98: label = (if v_354 then tls13_ext_res_binder else caught-fail) in
                                            {1875}let m_31: bitstring = (if v_354 then zero else caught-fail) in
                                            {1876}let h_93: bitstring = (if v_354 then catch-fail(hash(@6_tls_h,m_31)) else caught-fail) in
                                            {1877}let v_355: bool = not-caught-fail(h_93) in
                                            {1878}let x_112: bitstring = (if v_355 then (l_98,h_93) else caught-fail) in
                                            {1879}let binder_key_17: bitstring = (if v_354 then catch-fail((if v_355 then hmac(@6_tls_h,early_secret_25,x_112) else fail-any)) else caught-fail) in
                                            {1880}let v_356: bool = not-caught-fail(binder_key_17) in
                                            {1881}let v_357: bitstring = (if v_352 then catch-fail((if v_354 then (if v_356 then (early_secret_25,binder_key_17) else fail-any) else fail-any)) else caught-fail) in
                                            {1882}let v_358: bool = (not-caught-fail(v_357) && success?(1-proj-2-tuple(v_357))) in
                                            {1883}let kb_17: mac_key = (if v_358 then 2-proj-2-tuple(v_357) else caught-fail) in
                                            {1884}let es_23: bitstring = (if v_358 then 1-proj-2-tuple(v_357) else caught-fail) in
                                            {1885}let v_359: bitstring = (if not(v_352) then catch-fail(psk_data'_6) else caught-fail) in
                                            {1886}let v_360: bool = (not-caught-fail(v_359) && success?(1-proj-4-tuple(v_359))) in
                                            {1887}let is_safe_13: bool = (if v_360 then 4-proj-4-tuple(v_359) else caught-fail) in
                                            {1888}let es_24: bitstring = (if v_360 then 3-proj-4-tuple(v_359) else caught-fail) in
                                            {1889}let id_19: identityPsk = (if v_360 then 2-proj-4-tuple(v_359) else caught-fail) in
                                            {1890}let psk_40: preSharedKey = (if v_360 then 1-proj-4-tuple(v_359) else caught-fail) in
                                            {1891}let (psk_41: preSharedKey,early_secret_26: bitstring,valid_6: bool,safe_psk_9: bool) = (if v_352 then (if v_358 then (NoPsk,es_23,true,false) else fail-any) else (if v_360 then (psk_40,es_24,((psk_40 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_16)),is_safe_13) else fail-any)) in
                                            {1892}event Client_PSKChoosen(@6_id_client,psk_41,safe_psk_9);
                                            {1893}if valid_6 then
                                            (
                                                {1894}let gxy_13: element = catch-fail(dh_decap_fun(g_8,gy_7,x_111)) in
                                                {1895}let v_361: bool = not-caught-fail(gxy_13) in
                                                {1896}new s_41[]: seed;
                                                {1897}let gxy_14: element = (if v_361 then gxy_13 else dh_f(s_41)) in
                                                {1898}event Client_DH_gxy(@6_id_client,gxy_14);
                                                {1899}let l_99: label = tls13_derived in
                                                {1900}let m_32: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                {1901}let v_362: bool = not-caught-fail(m_32) in
                                                {1902}let h_94: bitstring = (if v_362 then catch-fail(hash(@6_tls_h,m_32)) else caught-fail) in
                                                {1903}let v_363: bool = not-caught-fail(h_94) in
                                                {1904}let x_113: bitstring = (if v_363 then (l_99,h_94) else caught-fail) in
                                                {1905}let extra_15: bitstring = catch-fail((if v_362 then (if v_363 then hmac(@6_tls_h,early_secret_26,x_113) else fail-any) else fail-any)) in
                                                {1906}let v_364: bool = not-caught-fail(extra_15) in
                                                {1907}let handshake_secret_7: bitstring = (if v_364 then hmac(@6_tls_h,extra_15,gxy_14) else fail-any) in
                                                {1908}let l_100: label = tls13_derived in
                                                {1909}let m_33: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                {1910}let v_365: bool = not-caught-fail(m_33) in
                                                {1911}let h_95: bitstring = (if v_365 then catch-fail(hash(@6_tls_h,m_33)) else caught-fail) in
                                                {1912}let v_366: bool = not-caught-fail(h_95) in
                                                {1913}let x_114: bitstring = (if v_366 then (l_100,h_95) else caught-fail) in
                                                {1914}let extra_16: bitstring = catch-fail((if v_365 then (if v_366 then hmac(@6_tls_h,handshake_secret_7,x_114) else fail-any) else fail-any)) in
                                                {1915}let v_367: bool = not-caught-fail(extra_16) in
                                                {1916}let k_37: bitstring = (if v_367 then zero else caught-fail) in
                                                {1917}let master_secret_21: bitstring = (if v_367 then catch-fail(hmac(@6_tls_h,handshake_secret_7,k_37)) else caught-fail) in
                                                {1918}let v_368: bool = not-caught-fail(master_secret_21) in
                                                {1919}let l_101: label = (if v_368 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {1920}let h_96: bitstring = (if v_368 then catch-fail(hash(@6_tls_h,cur_log2_16)) else caught-fail) in
                                                {1921}let v_369: bool = not-caught-fail(h_96) in
                                                {1922}let x_115: bitstring = (if v_369 then (l_101,h_96) else caught-fail) in
                                                {1923}let client_hts_7: bitstring = (if v_368 then catch-fail((if v_369 then hmac(@6_tls_h,handshake_secret_7,x_115) else fail-any)) else caught-fail) in
                                                {1924}let v_370: bool = not-caught-fail(client_hts_7) in
                                                {1925}let l_102: label = (if v_370 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {1926}let h_97: bitstring = (if v_370 then catch-fail(hash(@6_tls_h,cur_log2_16)) else caught-fail) in
                                                {1927}let v_371: bool = not-caught-fail(h_97) in
                                                {1928}let x_116: bitstring = (if v_371 then (l_102,h_97) else caught-fail) in
                                                {1929}let server_hts_7: bitstring = (if v_370 then catch-fail((if v_371 then hmac(@6_tls_h,handshake_secret_7,x_116) else fail-any)) else caught-fail) in
                                                {1930}let v_372: bool = not-caught-fail(server_hts_7) in
                                                {1931}let l_103: label = (if v_372 then tls13_key else caught-fail) in
                                                {1932}let h_98: bitstring = (if v_372 then zero else caught-fail) in
                                                {1933}let x_117: bitstring = (if v_372 then (l_103,h_98) else caught-fail) in
                                                {1934}let client_wkh_7: bitstring = (if v_372 then catch-fail(hmac(@6_tls_h,client_hts_7,x_117)) else caught-fail) in
                                                {1935}let v_373: bool = not-caught-fail(client_wkh_7) in
                                                {1936}let l_104: label = (if v_373 then tls13_key else caught-fail) in
                                                {1937}let h_99: bitstring = (if v_373 then zero else caught-fail) in
                                                {1938}let x_118: bitstring = (if v_373 then (l_104,h_99) else caught-fail) in
                                                {1939}let server_wkh_7: bitstring = (if v_373 then catch-fail(hmac(@6_tls_h,server_hts_7,x_118)) else caught-fail) in
                                                {1940}let v_374: bool = not-caught-fail(server_wkh_7) in
                                                {1941}let l_105: label = (if v_374 then tls13_finished else caught-fail) in
                                                {1942}let h_100: bitstring = (if v_374 then zero else caught-fail) in
                                                {1943}let x_119: bitstring = (if v_374 then (l_105,h_100) else caught-fail) in
                                                {1944}let client_fk_7: bitstring = (if v_374 then catch-fail(hmac(@6_tls_h,client_hts_7,x_119)) else caught-fail) in
                                                {1945}let v_375: bool = not-caught-fail(client_fk_7) in
                                                {1946}let l_106: label = (if v_375 then tls13_finished else caught-fail) in
                                                {1947}let h_101: bitstring = (if v_375 then zero else caught-fail) in
                                                {1948}let x_120: bitstring = (if v_375 then (l_106,h_101) else caught-fail) in
                                                {1949}let server_fk_7: bitstring = (if v_375 then catch-fail(hmac(@6_tls_h,server_hts_7,x_120)) else caught-fail) in
                                                {1950}let v_376: bool = not-caught-fail(server_fk_7) in
                                                {1951}let (master_secret_22: bitstring,chk_14: aead_key,shk_13: aead_key,cfin_14: mac_key,sfin_13: mac_key) = (if v_367 then (if v_368 then (if v_370 then (if v_372 then (if v_373 then (if v_374 then (if v_375 then (if v_376 then (master_secret_21,client_wkh_7,server_wkh_7,client_fk_7,server_fk_7) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {1952}event Client_chk(@6_id_client,chk_14);
                                                {1953}event Client_shk(@6_id_client,shk_13);
                                                {1954}event Client_cfin(@6_id_client,cfin_14);
                                                {1955}event Client_sfin(@6_id_client,sfin_13);
                                                {1956}in(io, enc_ee_msg_6: bitstring);
                                                {1957}let ee_msg_7: msg = aead_dec(@6_tls_a,shk_13,0,zero,enc_ee_msg_6) in
                                                {1958}let EE(ech_ee_6: echExt,extra_ee_6: extraExt) = ee_msg_7 in
                                                {1959}let cur_log2_17: bitstring = (cur_log2_16,ee_msg_7) in
                                                {1960}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_3,sr_14,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_41,safe_psk_9,@6_comp_psk,master_secret_22,chk_14,0,shk_13,1,cfin_14,sfin_13,cur_log2_17)))
                                            )
                                            else
                                                {1961}out(io, illegal_parameter)
                                        )
                                        else
                                            {1962}out(io, illegal_parameter)
                                )
                                else
                                    {1963}out(io, unexpected_message)
                    )
                    else
                        {1964}let cur_log_10: bitstring = (zero,i_client_hello_1) in
                        {1965}let sh_modified_4: msg = SH(B32(sr24_2,zero8),mode) in
                        {1966}let cur_log_sh_4: bitstring = (cur_log_10,sh_modified_4) in
                        {1967}let transcript_ech_conf_4: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_4)) in
                        {1968}let v_377: bool = not-caught-fail(transcript_ech_conf_4) in
                        {1969}let s_42: bitstring = (if v_377 then zero else caught-fail) in
                        {1970}let k_38: bitstring = (if v_377 then catch-fail(b32_2_b(get_random(i_client_hello_1))) else caught-fail) in
                        {1971}let v_378: bool = not-caught-fail(k_38) in
                        {1972}let k_39: bitstring = (if v_377 then catch-fail((if v_378 then hmac(@6_backend_h,s_42,k_38) else fail-any)) else caught-fail) in
                        {1973}let v_379: bool = not-caught-fail(k_39) in
                        {1974}let l_107: label = (if v_379 then ech_accept_confirmation else caught-fail) in
                        {1975}let x_121: bitstring = (if v_379 then (l_107,cur_log_sh_4) else caught-fail) in
                        {1976}let sr8_5: bytes8 = (if v_377 then catch-fail(crop_into_bytes8((if v_379 then hmac(@6_backend_h,k_39,x_121) else fail-any))) else caught-fail) in
                        {1977}let v_380: bool = not-caught-fail(sr8_5) in
                        {1978}if (B32(sr24_2,sr8_1) = (if v_377 then (if v_380 then B32(sr24_2,sr8_5) else fail-any) else fail-any)) then
                        (
                            {1979}event ClientEchAcceptance(@6_id_client,true);
                            {1980}let cur_log_11: bitstring = (zero,i_client_hello_1) in
                            {1981}let (x_122: bitstring,g_9: group) = i_kex_data_1 in
                            {1982}let (psk_offer_7: preSharedKey,id_offer_7: identityPsk,es_offer_7: bitstring,is_safe_offer_7: bool) = psk_data_1 in
                            {1983}event Client_PSKOffer(@6_id_client,psk_offer_7,id_offer_7,is_safe_offer_7);
                            {1984}event Client_Rand_client(@6_id_client,i_cr_1);
                            {1985}event Client_DH_client(@6_id_client,dh_pub(g_9,x_122));
                            {1986}event Client_server_domain(@6_id_client,backend_dom);
                            {1987}let SH(sr_15: bytes32,mode_8: params) = server_hello_1 in
                            {1988}event Client_Rand_server(@6_id_client,sr_15);
                            {1989}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_9,gy_8: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_17: preSharedKeyExt) = mode_8 in
                            (
                                {1990}let cur_log2_18: bitstring = (cur_log_11,server_hello_1) in
                                {1991}event Client_DH_server(@6_id_client,gy_8);
                                {1992}let v_381: bool = (psk_ext_17 = empty_psk_ext) in
                                {1993}let psk_42: preSharedKey = (if v_381 then NoPsk else caught-fail) in
                                {1994}let s_43: bitstring = (if v_381 then zero else caught-fail) in
                                {1995}let k_40: bitstring = (if v_381 then catch-fail(psk2b(psk_42)) else caught-fail) in
                                {1996}let v_382: bool = not-caught-fail(k_40) in
                                {1997}let early_secret_27: bitstring = (if v_381 then catch-fail((if v_382 then hmac(@6_backend_h,s_43,k_40) else fail-any)) else caught-fail) in
                                {1998}let v_383: bool = not-caught-fail(early_secret_27) in
                                {1999}let l_108: label = (if v_383 then tls13_ext_res_binder else caught-fail) in
                                {2000}let m_34: bitstring = (if v_383 then zero else caught-fail) in
                                {2001}let h_102: bitstring = (if v_383 then catch-fail(hash(@6_backend_h,m_34)) else caught-fail) in
                                {2002}let v_384: bool = not-caught-fail(h_102) in
                                {2003}let x_123: bitstring = (if v_384 then (l_108,h_102) else caught-fail) in
                                {2004}let binder_key_18: bitstring = (if v_383 then catch-fail((if v_384 then hmac(@6_backend_h,early_secret_27,x_123) else fail-any)) else caught-fail) in
                                {2005}let v_385: bool = not-caught-fail(binder_key_18) in
                                {2006}let v_386: bitstring = (if v_381 then catch-fail((if v_383 then (if v_385 then (early_secret_27,binder_key_18) else fail-any) else fail-any)) else caught-fail) in
                                {2007}let v_387: bool = (not-caught-fail(v_386) && success?(1-proj-2-tuple(v_386))) in
                                {2008}let kb_18: mac_key = (if v_387 then 2-proj-2-tuple(v_386) else caught-fail) in
                                {2009}let es_25: bitstring = (if v_387 then 1-proj-2-tuple(v_386) else caught-fail) in
                                {2010}let v_388: bitstring = (if not(v_381) then catch-fail(psk_data_1) else caught-fail) in
                                {2011}let v_389: bool = (not-caught-fail(v_388) && success?(1-proj-4-tuple(v_388))) in
                                {2012}let is_safe_14: bool = (if v_389 then 4-proj-4-tuple(v_388) else caught-fail) in
                                {2013}let es_26: bitstring = (if v_389 then 3-proj-4-tuple(v_388) else caught-fail) in
                                {2014}let id_20: identityPsk = (if v_389 then 2-proj-4-tuple(v_388) else caught-fail) in
                                {2015}let psk_43: preSharedKey = (if v_389 then 1-proj-4-tuple(v_388) else caught-fail) in
                                {2016}let (psk_44: preSharedKey,early_secret_28: bitstring,valid_7: bool,safe_psk_10: bool) = (if v_381 then (if v_387 then (NoPsk,es_25,true,false) else fail-any) else (if v_389 then (psk_43,es_26,((psk_43 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_17)),is_safe_14) else fail-any)) in
                                {2017}event Client_PSKChoosen(@6_id_client,psk_44,safe_psk_10);
                                {2018}if valid_7 then
                                (
                                    {2019}let gxy_15: element = catch-fail(dh_decap_fun(g_9,gy_8,x_122)) in
                                    {2020}let v_390: bool = not-caught-fail(gxy_15) in
                                    {2021}new s_44[]: seed;
                                    {2022}let gxy_16: element = (if v_390 then gxy_15 else dh_f(s_44)) in
                                    {2023}event Client_DH_gxy(@6_id_client,gxy_16);
                                    {2024}let l_109: label = tls13_derived in
                                    {2025}let m_35: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                    {2026}let v_391: bool = not-caught-fail(m_35) in
                                    {2027}let h_103: bitstring = (if v_391 then catch-fail(hash(@6_backend_h,m_35)) else caught-fail) in
                                    {2028}let v_392: bool = not-caught-fail(h_103) in
                                    {2029}let x_124: bitstring = (if v_392 then (l_109,h_103) else caught-fail) in
                                    {2030}let extra_17: bitstring = catch-fail((if v_391 then (if v_392 then hmac(@6_backend_h,early_secret_28,x_124) else fail-any) else fail-any)) in
                                    {2031}let v_393: bool = not-caught-fail(extra_17) in
                                    {2032}let handshake_secret_8: bitstring = (if v_393 then hmac(@6_backend_h,extra_17,gxy_16) else fail-any) in
                                    {2033}let l_110: label = tls13_derived in
                                    {2034}let m_36: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                    {2035}let v_394: bool = not-caught-fail(m_36) in
                                    {2036}let h_104: bitstring = (if v_394 then catch-fail(hash(@6_backend_h,m_36)) else caught-fail) in
                                    {2037}let v_395: bool = not-caught-fail(h_104) in
                                    {2038}let x_125: bitstring = (if v_395 then (l_110,h_104) else caught-fail) in
                                    {2039}let extra_18: bitstring = catch-fail((if v_394 then (if v_395 then hmac(@6_backend_h,handshake_secret_8,x_125) else fail-any) else fail-any)) in
                                    {2040}let v_396: bool = not-caught-fail(extra_18) in
                                    {2041}let k_41: bitstring = (if v_396 then zero else caught-fail) in
                                    {2042}let master_secret_23: bitstring = (if v_396 then catch-fail(hmac(@6_backend_h,handshake_secret_8,k_41)) else caught-fail) in
                                    {2043}let v_397: bool = not-caught-fail(master_secret_23) in
                                    {2044}let l_111: label = (if v_397 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {2045}let h_105: bitstring = (if v_397 then catch-fail(hash(@6_backend_h,cur_log2_18)) else caught-fail) in
                                    {2046}let v_398: bool = not-caught-fail(h_105) in
                                    {2047}let x_126: bitstring = (if v_398 then (l_111,h_105) else caught-fail) in
                                    {2048}let client_hts_8: bitstring = (if v_397 then catch-fail((if v_398 then hmac(@6_backend_h,handshake_secret_8,x_126) else fail-any)) else caught-fail) in
                                    {2049}let v_399: bool = not-caught-fail(client_hts_8) in
                                    {2050}let l_112: label = (if v_399 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {2051}let h_106: bitstring = (if v_399 then catch-fail(hash(@6_backend_h,cur_log2_18)) else caught-fail) in
                                    {2052}let v_400: bool = not-caught-fail(h_106) in
                                    {2053}let x_127: bitstring = (if v_400 then (l_112,h_106) else caught-fail) in
                                    {2054}let server_hts_8: bitstring = (if v_399 then catch-fail((if v_400 then hmac(@6_backend_h,handshake_secret_8,x_127) else fail-any)) else caught-fail) in
                                    {2055}let v_401: bool = not-caught-fail(server_hts_8) in
                                    {2056}let l_113: label = (if v_401 then tls13_key else caught-fail) in
                                    {2057}let h_107: bitstring = (if v_401 then zero else caught-fail) in
                                    {2058}let x_128: bitstring = (if v_401 then (l_113,h_107) else caught-fail) in
                                    {2059}let client_wkh_8: bitstring = (if v_401 then catch-fail(hmac(@6_backend_h,client_hts_8,x_128)) else caught-fail) in
                                    {2060}let v_402: bool = not-caught-fail(client_wkh_8) in
                                    {2061}let l_114: label = (if v_402 then tls13_key else caught-fail) in
                                    {2062}let h_108: bitstring = (if v_402 then zero else caught-fail) in
                                    {2063}let x_129: bitstring = (if v_402 then (l_114,h_108) else caught-fail) in
                                    {2064}let server_wkh_8: bitstring = (if v_402 then catch-fail(hmac(@6_backend_h,server_hts_8,x_129)) else caught-fail) in
                                    {2065}let v_403: bool = not-caught-fail(server_wkh_8) in
                                    {2066}let l_115: label = (if v_403 then tls13_finished else caught-fail) in
                                    {2067}let h_109: bitstring = (if v_403 then zero else caught-fail) in
                                    {2068}let x_130: bitstring = (if v_403 then (l_115,h_109) else caught-fail) in
                                    {2069}let client_fk_8: bitstring = (if v_403 then catch-fail(hmac(@6_backend_h,client_hts_8,x_130)) else caught-fail) in
                                    {2070}let v_404: bool = not-caught-fail(client_fk_8) in
                                    {2071}let l_116: label = (if v_404 then tls13_finished else caught-fail) in
                                    {2072}let h_110: bitstring = (if v_404 then zero else caught-fail) in
                                    {2073}let x_131: bitstring = (if v_404 then (l_116,h_110) else caught-fail) in
                                    {2074}let server_fk_8: bitstring = (if v_404 then catch-fail(hmac(@6_backend_h,server_hts_8,x_131)) else caught-fail) in
                                    {2075}let v_405: bool = not-caught-fail(server_fk_8) in
                                    {2076}let (master_secret_24: bitstring,chk_15: aead_key,shk_14: aead_key,cfin_15: mac_key,sfin_14: mac_key) = (if v_396 then (if v_397 then (if v_399 then (if v_401 then (if v_402 then (if v_403 then (if v_404 then (if v_405 then (master_secret_23,client_wkh_8,server_wkh_8,client_fk_8,server_fk_8) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {2077}event Client_chk(@6_id_client,chk_15);
                                    {2078}event Client_shk(@6_id_client,shk_14);
                                    {2079}event Client_cfin(@6_id_client,cfin_15);
                                    {2080}event Client_sfin(@6_id_client,sfin_14);
                                    {2081}in(io, enc_ee_msg_7: bitstring);
                                    {2082}let ee_msg_8: msg = aead_dec(@6_backend_a,shk_14,0,zero,enc_ee_msg_7) in
                                    {2083}let EE(ech_ee_7: echExt,extra_ee_7: extraExt) = ee_msg_8 in
                                    {2084}let cur_log2_19: bitstring = (cur_log2_18,ee_msg_8) in
                                    {2085}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr_1,sr_15,@6_backend_h,@6_backend_a,c_dom_5,backend_dom,psk_44,safe_psk_10,@6_comp_psk,master_secret_24,chk_15,0,shk_14,1,cfin_15,sfin_14,cur_log2_19)))
                                )
                                else
                                    {2086}out(io, illegal_parameter)
                            )
                            else
                                {2087}out(io, illegal_parameter)
                        )
                        else
                            {2088}event ClientEchAcceptance(@6_id_client,false);
                            {2089}let v_406: bool = @6_use_grease in
                            {2090}let psk_45: preSharedKey = (if not(v_406) then NoPsk else caught-fail) in
                            {2091}let s_45: bitstring = (if not(v_406) then zero else caught-fail) in
                            {2092}let k_42: bitstring = (if not(v_406) then catch-fail(psk2b(psk_45)) else caught-fail) in
                            {2093}let v_407: bool = not-caught-fail(k_42) in
                            {2094}let early_secret_29: bitstring = (if not(v_406) then catch-fail((if v_407 then hmac(@6_tls_h,s_45,k_42) else fail-any)) else caught-fail) in
                            {2095}let v_408: bool = not-caught-fail(early_secret_29) in
                            {2096}let l_117: label = (if v_408 then tls13_ext_res_binder else caught-fail) in
                            {2097}let m_37: bitstring = (if v_408 then zero else caught-fail) in
                            {2098}let h_111: bitstring = (if v_408 then catch-fail(hash(@6_tls_h,m_37)) else caught-fail) in
                            {2099}let v_409: bool = not-caught-fail(h_111) in
                            {2100}let x_132: bitstring = (if v_409 then (l_117,h_111) else caught-fail) in
                            {2101}let binder_key_19: bitstring = (if v_408 then catch-fail((if v_409 then hmac(@6_tls_h,early_secret_29,x_132) else fail-any)) else caught-fail) in
                            {2102}let v_410: bool = not-caught-fail(binder_key_19) in
                            {2103}let v_411: bitstring = (if not(v_406) then catch-fail((if v_408 then (if v_410 then (early_secret_29,binder_key_19) else fail-any) else fail-any)) else caught-fail) in
                            {2104}let v_412: bool = (not-caught-fail(v_411) && success?(1-proj-2-tuple(v_411))) in
                            {2105}let kb_19: mac_key = (if v_412 then 2-proj-2-tuple(v_411) else caught-fail) in
                            {2106}let es': bitstring = (if v_412 then 1-proj-2-tuple(v_411) else caught-fail) in
                            {2107}let psk_data'_7: bitstring = (if v_406 then psk_data_1 else (if v_412 then (NoPsk,zero,es',false) else fail-any)) in
                            {2108}let cur_log_12: bitstring = (zero,o_client_hello) in
                            {2109}let (x_133: bitstring,g_10: group) = o_kex_data_1 in
                            {2110}let (psk_offer_8: preSharedKey,id_offer_8: identityPsk,es_offer_8: bitstring,is_safe_offer_8: bool) = psk_data'_7 in
                            {2111}event Client_PSKOffer(@6_id_client,psk_offer_8,id_offer_8,is_safe_offer_8);
                            {2112}event Client_Rand_client(@6_id_client,o_cr_1);
                            {2113}event Client_DH_client(@6_id_client,dh_pub(g_10,x_133));
                            {2114}event Client_server_domain(@6_id_client,o_dom);
                            {2115}let SH(sr_16: bytes32,mode_9: params) = server_hello_1 in
                            {2116}event Client_Rand_server(@6_id_client,sr_16);
                            {2117}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_10,gy_9: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_18: preSharedKeyExt) = mode_9 in
                            (
                                {2118}let cur_log2_20: bitstring = (cur_log_12,server_hello_1) in
                                {2119}event Client_DH_server(@6_id_client,gy_9);
                                {2120}let v_413: bool = (psk_ext_18 = empty_psk_ext) in
                                {2121}let psk_46: preSharedKey = (if v_413 then NoPsk else caught-fail) in
                                {2122}let s_46: bitstring = (if v_413 then zero else caught-fail) in
                                {2123}let k_43: bitstring = (if v_413 then catch-fail(psk2b(psk_46)) else caught-fail) in
                                {2124}let v_414: bool = not-caught-fail(k_43) in
                                {2125}let early_secret_30: bitstring = (if v_413 then catch-fail((if v_414 then hmac(@6_tls_h,s_46,k_43) else fail-any)) else caught-fail) in
                                {2126}let v_415: bool = not-caught-fail(early_secret_30) in
                                {2127}let l_118: label = (if v_415 then tls13_ext_res_binder else caught-fail) in
                                {2128}let m_38: bitstring = (if v_415 then zero else caught-fail) in
                                {2129}let h_112: bitstring = (if v_415 then catch-fail(hash(@6_tls_h,m_38)) else caught-fail) in
                                {2130}let v_416: bool = not-caught-fail(h_112) in
                                {2131}let x_134: bitstring = (if v_416 then (l_118,h_112) else caught-fail) in
                                {2132}let binder_key_20: bitstring = (if v_415 then catch-fail((if v_416 then hmac(@6_tls_h,early_secret_30,x_134) else fail-any)) else caught-fail) in
                                {2133}let v_417: bool = not-caught-fail(binder_key_20) in
                                {2134}let v_418: bitstring = (if v_413 then catch-fail((if v_415 then (if v_417 then (early_secret_30,binder_key_20) else fail-any) else fail-any)) else caught-fail) in
                                {2135}let v_419: bool = (not-caught-fail(v_418) && success?(1-proj-2-tuple(v_418))) in
                                {2136}let kb_20: mac_key = (if v_419 then 2-proj-2-tuple(v_418) else caught-fail) in
                                {2137}let es_27: bitstring = (if v_419 then 1-proj-2-tuple(v_418) else caught-fail) in
                                {2138}let v_420: bitstring = (if not(v_413) then catch-fail(psk_data'_7) else caught-fail) in
                                {2139}let v_421: bool = (not-caught-fail(v_420) && success?(1-proj-4-tuple(v_420))) in
                                {2140}let is_safe_15: bool = (if v_421 then 4-proj-4-tuple(v_420) else caught-fail) in
                                {2141}let es_28: bitstring = (if v_421 then 3-proj-4-tuple(v_420) else caught-fail) in
                                {2142}let id_21: identityPsk = (if v_421 then 2-proj-4-tuple(v_420) else caught-fail) in
                                {2143}let psk_47: preSharedKey = (if v_421 then 1-proj-4-tuple(v_420) else caught-fail) in
                                {2144}let (psk_48: preSharedKey,early_secret_31: bitstring,valid_8: bool,safe_psk_11: bool) = (if v_413 then (if v_419 then (NoPsk,es_27,true,false) else fail-any) else (if v_421 then (psk_47,es_28,((psk_47 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_18)),is_safe_15) else fail-any)) in
                                {2145}event Client_PSKChoosen(@6_id_client,psk_48,safe_psk_11);
                                {2146}if valid_8 then
                                (
                                    {2147}let gxy_17: element = catch-fail(dh_decap_fun(g_10,gy_9,x_133)) in
                                    {2148}let v_422: bool = not-caught-fail(gxy_17) in
                                    {2149}new s_47[]: seed;
                                    {2150}let gxy_18: element = (if v_422 then gxy_17 else dh_f(s_47)) in
                                    {2151}event Client_DH_gxy(@6_id_client,gxy_18);
                                    {2152}let l_119: label = tls13_derived in
                                    {2153}let m_39: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                    {2154}let v_423: bool = not-caught-fail(m_39) in
                                    {2155}let h_113: bitstring = (if v_423 then catch-fail(hash(@6_tls_h,m_39)) else caught-fail) in
                                    {2156}let v_424: bool = not-caught-fail(h_113) in
                                    {2157}let x_135: bitstring = (if v_424 then (l_119,h_113) else caught-fail) in
                                    {2158}let extra_19: bitstring = catch-fail((if v_423 then (if v_424 then hmac(@6_tls_h,early_secret_31,x_135) else fail-any) else fail-any)) in
                                    {2159}let v_425: bool = not-caught-fail(extra_19) in
                                    {2160}let handshake_secret_9: bitstring = (if v_425 then hmac(@6_tls_h,extra_19,gxy_18) else fail-any) in
                                    {2161}let l_120: label = tls13_derived in
                                    {2162}let m_40: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                    {2163}let v_426: bool = not-caught-fail(m_40) in
                                    {2164}let h_114: bitstring = (if v_426 then catch-fail(hash(@6_tls_h,m_40)) else caught-fail) in
                                    {2165}let v_427: bool = not-caught-fail(h_114) in
                                    {2166}let x_136: bitstring = (if v_427 then (l_120,h_114) else caught-fail) in
                                    {2167}let extra_20: bitstring = catch-fail((if v_426 then (if v_427 then hmac(@6_tls_h,handshake_secret_9,x_136) else fail-any) else fail-any)) in
                                    {2168}let v_428: bool = not-caught-fail(extra_20) in
                                    {2169}let k_44: bitstring = (if v_428 then zero else caught-fail) in
                                    {2170}let master_secret_25: bitstring = (if v_428 then catch-fail(hmac(@6_tls_h,handshake_secret_9,k_44)) else caught-fail) in
                                    {2171}let v_429: bool = not-caught-fail(master_secret_25) in
                                    {2172}let l_121: label = (if v_429 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {2173}let h_115: bitstring = (if v_429 then catch-fail(hash(@6_tls_h,cur_log2_20)) else caught-fail) in
                                    {2174}let v_430: bool = not-caught-fail(h_115) in
                                    {2175}let x_137: bitstring = (if v_430 then (l_121,h_115) else caught-fail) in
                                    {2176}let client_hts_9: bitstring = (if v_429 then catch-fail((if v_430 then hmac(@6_tls_h,handshake_secret_9,x_137) else fail-any)) else caught-fail) in
                                    {2177}let v_431: bool = not-caught-fail(client_hts_9) in
                                    {2178}let l_122: label = (if v_431 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {2179}let h_116: bitstring = (if v_431 then catch-fail(hash(@6_tls_h,cur_log2_20)) else caught-fail) in
                                    {2180}let v_432: bool = not-caught-fail(h_116) in
                                    {2181}let x_138: bitstring = (if v_432 then (l_122,h_116) else caught-fail) in
                                    {2182}let server_hts_9: bitstring = (if v_431 then catch-fail((if v_432 then hmac(@6_tls_h,handshake_secret_9,x_138) else fail-any)) else caught-fail) in
                                    {2183}let v_433: bool = not-caught-fail(server_hts_9) in
                                    {2184}let l_123: label = (if v_433 then tls13_key else caught-fail) in
                                    {2185}let h_117: bitstring = (if v_433 then zero else caught-fail) in
                                    {2186}let x_139: bitstring = (if v_433 then (l_123,h_117) else caught-fail) in
                                    {2187}let client_wkh_9: bitstring = (if v_433 then catch-fail(hmac(@6_tls_h,client_hts_9,x_139)) else caught-fail) in
                                    {2188}let v_434: bool = not-caught-fail(client_wkh_9) in
                                    {2189}let l_124: label = (if v_434 then tls13_key else caught-fail) in
                                    {2190}let h_118: bitstring = (if v_434 then zero else caught-fail) in
                                    {2191}let x_140: bitstring = (if v_434 then (l_124,h_118) else caught-fail) in
                                    {2192}let server_wkh_9: bitstring = (if v_434 then catch-fail(hmac(@6_tls_h,server_hts_9,x_140)) else caught-fail) in
                                    {2193}let v_435: bool = not-caught-fail(server_wkh_9) in
                                    {2194}let l_125: label = (if v_435 then tls13_finished else caught-fail) in
                                    {2195}let h_119: bitstring = (if v_435 then zero else caught-fail) in
                                    {2196}let x_141: bitstring = (if v_435 then (l_125,h_119) else caught-fail) in
                                    {2197}let client_fk_9: bitstring = (if v_435 then catch-fail(hmac(@6_tls_h,client_hts_9,x_141)) else caught-fail) in
                                    {2198}let v_436: bool = not-caught-fail(client_fk_9) in
                                    {2199}let l_126: label = (if v_436 then tls13_finished else caught-fail) in
                                    {2200}let h_120: bitstring = (if v_436 then zero else caught-fail) in
                                    {2201}let x_142: bitstring = (if v_436 then (l_126,h_120) else caught-fail) in
                                    {2202}let server_fk_9: bitstring = (if v_436 then catch-fail(hmac(@6_tls_h,server_hts_9,x_142)) else caught-fail) in
                                    {2203}let v_437: bool = not-caught-fail(server_fk_9) in
                                    {2204}let (master_secret_26: bitstring,chk_16: aead_key,shk_15: aead_key,cfin_16: mac_key,sfin_15: mac_key) = (if v_428 then (if v_429 then (if v_431 then (if v_433 then (if v_434 then (if v_435 then (if v_436 then (if v_437 then (master_secret_25,client_wkh_9,server_wkh_9,client_fk_9,server_fk_9) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {2205}event Client_chk(@6_id_client,chk_16);
                                    {2206}event Client_shk(@6_id_client,shk_15);
                                    {2207}event Client_cfin(@6_id_client,cfin_16);
                                    {2208}event Client_sfin(@6_id_client,sfin_15);
                                    {2209}in(io, enc_ee_msg_8: bitstring);
                                    {2210}let ee_msg_9: msg = aead_dec(@6_tls_a,shk_15,0,zero,enc_ee_msg_8) in
                                    {2211}let EE(ech_ee_8: echExt,extra_ee_8: extraExt) = ee_msg_9 in
                                    {2212}let cur_log2_21: bitstring = (cur_log2_20,ee_msg_9) in
                                    {2213}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(o_cr_1,sr_16,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_48,safe_psk_11,@6_comp_psk,master_secret_26,chk_16,0,shk_15,1,cfin_16,sfin_15,cur_log2_21)))
                                )
                                else
                                    {2214}out(io, illegal_parameter)
                            )
                            else
                                {2215}out(io, illegal_parameter)
                )
                else
                    {2216}out(io, unexpected_message)
            )
        )
        else
            {3699}get pre_shared_keys(c_dom'_4: domain,=dom_psk,=h_psk,id_22: identityPsk,psk_49: preSharedKey,idP_6: idProc,is_safe_16: bool) in
            {2217}event Selected_one_time_used_psk(@6_id_client,psk_49,is_safe_16);
            {2218}event Selected_psk(c_dom_5,c_dom'_4,idP_6,is_safe_16);
            {2219}event Selected_psk_no_missmatch(@6_id_client,dom_psk,h_psk,psk_49,id_22);
            {2220}event Selected_psk_with_ID(c_dom_5,c_dom'_4,id_22,idP_6,is_safe_16);
            {2221}let v_438: bitstring = (id_22,psk_49,is_safe_16) in
            {2222}let v_439: bool = success?(1-proj-3-tuple(v_438)) in
            {2223}let is_safe_17: bool = (if v_439 then 3-proj-3-tuple(v_438) else caught-fail) in
            {2224}let psk_50: preSharedKey = (if v_439 then 2-proj-3-tuple(v_438) else caught-fail) in
            {2225}let id_23: identityPsk = (if v_439 then 1-proj-3-tuple(v_438) else caught-fail) in
            {2226}let offer_7: params = (if v_439 then nego(TLS13,h_psk,a_psk,kex_ext_psk,SNI(dom_psk),ech_inner_or_grease,extra_psk,trunc_client_psk_ext(id_23)) else caught-fail) in
            {2227}let cur_log'_7: bitstring = (if v_439 then (cur_log_8,CH(cr_psk,offer_7)) else caught-fail) in
            {2228}let s_48: bitstring = (if v_439 then zero else caught-fail) in
            {2229}let k_45: bitstring = (if v_439 then catch-fail(psk2b(psk_50)) else caught-fail) in
            {2230}let v_440: bool = not-caught-fail(k_45) in
            {2231}let early_secret_32: bitstring = (if v_439 then catch-fail((if v_440 then hmac(h_psk,s_48,k_45) else fail-any)) else caught-fail) in
            {2232}let v_441: bool = not-caught-fail(early_secret_32) in
            {2233}let l_127: label = (if v_441 then tls13_ext_res_binder else caught-fail) in
            {2234}let m_41: bitstring = (if v_441 then zero else caught-fail) in
            {2235}let h_121: bitstring = (if v_441 then catch-fail(hash(h_psk,m_41)) else caught-fail) in
            {2236}let v_442: bool = not-caught-fail(h_121) in
            {2237}let x_143: bitstring = (if v_442 then (l_127,h_121) else caught-fail) in
            {2238}let binder_key_21: bitstring = (if v_441 then catch-fail((if v_442 then hmac(h_psk,early_secret_32,x_143) else fail-any)) else caught-fail) in
            {2239}let v_443: bool = not-caught-fail(binder_key_21) in
            {2240}let v_444: bitstring = (if v_439 then catch-fail((if v_441 then (if v_443 then (early_secret_32,binder_key_21) else fail-any) else fail-any)) else caught-fail) in
            {2241}let v_445: bool = (not-caught-fail(v_444) && success?(1-proj-2-tuple(v_444))) in
            {2242}let kb_21: mac_key = (if v_445 then 2-proj-2-tuple(v_444) else caught-fail) in
            {2243}let es_29: bitstring = (if v_445 then 1-proj-2-tuple(v_444) else caught-fail) in
            {2244}let binders_6: bitstring = (if v_445 then catch-fail(hmac(h_psk,kb_21,cur_log'_7)) else caught-fail) in
            {2245}let v_446: bool = not-caught-fail(binders_6) in
            {2246}let v_447: bitstring = catch-fail((if v_439 then (if v_445 then (if v_446 then (client_psk_ext(id_23,binders_6),(psk_50,id_23,es_29,is_safe_17)) else fail-any) else fail-any) else fail-any)) in
            {2247}let v_448: bool = (not-caught-fail(v_447) && success?(1-proj-2-tuple(v_447))) in
            {2248}let psk_data_9: bitstring = (if v_448 then 2-proj-2-tuple(v_447) else caught-fail) in
            {2249}let psk_ext_19: preSharedKeyExt = (if v_448 then 1-proj-2-tuple(v_447) else caught-fail) in
            {2250}let i_offer_4: params = (if v_448 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_19) else caught-fail) in
            {2251}let i_client_hello_5: msg = (if v_448 then CH(i_cr,i_offer_4) else caught-fail) in
            {2252}let v_449: bool = (if v_448 then catch-fail(@6_use_grease) else caught-fail) in
            {2253}let o_offer_9: params = (if v_449 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),ech_inner_or_grease,empty_extra_ext,psk_ext_19) else caught-fail) in
            {2254}new fake_id_5[]: identityPsk;
            {2255}new fake_binder_5[]: bitstring;
            {2256}let o_psk_ext_5: preSharedKeyExt = (if is-false(v_449) then (if @6_use_psk then client_psk_ext(fake_id_5,fake_binder_5) else empty_psk_ext) else caught-fail) in
            {2257}let o_ech_ext_ADD_4: echExt = (if is-false(v_449) then ECHClientHelloOuter(ech_h_3,ech_a_3,config_id_1,enc_1,zero) else caught-fail) in
            {2258}let o_offer_ADD_4: params = (if is-false(v_449) then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),o_ech_ext_ADD_4,empty_extra_ext,o_psk_ext_5) else caught-fail) in
            {2259}let o_client_hello_ADD_4: msg = (if is-false(v_449) then CH(o_cr,o_offer_ADD_4) else caught-fail) in
            {2260}let n_4: nat = (if is-false(v_449) then 1 else caught-fail) in
            {2261}let v_450: hpkeContext = (if is-false(v_449) then catch-fail(context) else caught-fail) in
            {2262}let v_451: bool = (not-caught-fail(v_450) && ((S =nf 1-proj-hpke_context(v_450)) && success?(1-proj-hpke_context(v_450)))) in
            {2263}let base_nonce_5: bitstring = (if v_451 then 3-proj-hpke_context(v_450) else caught-fail) in
            {2264}let key_5: aead_key = (if v_451 then 2-proj-hpke_context(v_450) else caught-fail) in
            {2265}let payload_5: bitstring = (if is-false(v_449) then catch-fail((if v_451 then aead_enc(ech_a_3,key_5,(base_nonce_5,n_4),o_client_hello_ADD_4,i_client_hello_5) else fail-any)) else caught-fail) in
            {2266}let v_452: bool = not-caught-fail(payload_5) in
            {2267}let o_ech_ext_5: echExt = (if v_452 then ECHClientHelloOuter(ech_h_3,ech_a_3,config_id_1,enc_1,payload_5) else caught-fail) in
            {2268}let o_offer_10: params = (if v_452 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),o_ech_ext_5,empty_extra_ext,o_psk_ext_5) else caught-fail) in
            {2269}let (o_client_hello_1: msg,i_client_hello_6: msg,o_cr_4: bytes32,i_cr_3: bytes32,o_kex_data_3: bitstring,i_kex_data_3: bitstring,o_psk_ext_6: preSharedKeyExt,psk_data_10: bitstring,o_ech_ext_6: echExt) = (if v_448 then (if undo-catch-fail(v_449) then (CH(o_cr,o_offer_9),CH(o_cr,o_offer_9),o_cr,o_cr,o_kex_data,o_kex_data,psk_ext_19,psk_data_9,ech_inner_or_grease) else (if v_452 then (CH(o_cr,o_offer_10),i_client_hello_5,o_cr,i_cr,o_kex_data,i_kex_data,o_psk_ext_5,psk_data_9,o_ech_ext_5) else fail-any)) else fail-any) in
            {2270}out(io, o_client_hello_1);
            {2271}let (psk_51: preSharedKey,id_24: identityPsk,es_30: bitstring,safe_1: bool) = psk_data_10 in
            (
                {2272}if (false && (not(@6_use_grease) && (psk_51 ≠ NoPsk))) then
                {2273}let client_hello_2: bitstring = (zero,i_client_hello_6) in
                {2274}let l_128: label = tls13_client_early_traffic_secret in
                {2275}let h_122: bitstring = catch-fail(hash(@6_backend_h,client_hello_2)) in
                {2276}let v_453: bool = not-caught-fail(h_122) in
                {2277}let x_144: bitstring = (if v_453 then (l_128,h_122) else caught-fail) in
                {2278}let atsc0_2: bitstring = catch-fail((if v_453 then hmac(@6_backend_h,es_30,x_144) else fail-any)) in
                {2279}let v_454: bool = not-caught-fail(atsc0_2) in
                {2280}let l_129: label = (if v_454 then tls13_key else caught-fail) in
                {2281}let h_123: bitstring = (if v_454 then zero else caught-fail) in
                {2282}let x_145: bitstring = (if v_454 then (l_129,h_123) else caught-fail) in
                {2283}let kc0_2: bitstring = (if v_454 then catch-fail(hmac(@6_backend_h,atsc0_2,x_145)) else caught-fail) in
                {2284}let v_455: bool = not-caught-fail(kc0_2) in
                {2285}let l_130: label = (if v_455 then tls13_early_exporter_master_secret else caught-fail) in
                {2286}let h_124: bitstring = (if v_455 then catch-fail(hash(@6_backend_h,client_hello_2)) else caught-fail) in
                {2287}let v_456: bool = not-caught-fail(h_124) in
                {2288}let x_146: bitstring = (if v_456 then (l_130,h_124) else caught-fail) in
                {2289}let ems0_4: bitstring = (if v_455 then catch-fail((if v_456 then hmac(@6_backend_h,es_30,x_146) else fail-any)) else caught-fail) in
                {2290}let v_457: bool = not-caught-fail(ems0_4) in
                {2291}let (wkc0_2: aead_key,ems0_5: bitstring) = (if v_454 then (if v_455 then (if v_457 then (kc0_2,ems0_4) else fail-any) else fail-any) else fail-any) in
                {2292}!
                {2293}in(io, (i_2: nat,ad_2: bitstring));
                {2294}if is_nat(i_2) then
                {2295}new msg_ed_1[]: bitstring;
                {2296}let enc_ed_1: bitstring = aead_enc(@6_backend_a,wkc0_2,i_2,ad_2,msg_ed_1) in
                {2297}new st_11: stamp;
                {2298}event ClientSequenceClient0RTTDataWriteKey(@6_id_client,st_11,i_2);
                {2299}event ClientSends0(@6_id_client,i_cr_3,psk_51,i_2,ad_2,msg_ed_1);
                {2300}out(io, enc_ed_1)
            ) | (
                {2301}in(io, server_hello_2: msg);
                {2302}let SH(B32(sr24_3: bytes24,sr8_6: bytes8),mode_10: params) = server_hello_2 in
                (
                    {2303}if (false && (B32(sr24_3,sr8_6) = B32(HRR24,HRR8))) then
                    (
                        {2304}if (send_kex ≠ true) then
                        {2305}let nego(=TLS13,h_alg_12: hash_alg,a_alg_10: aead_alg,hrr_kex_ext(g_11: group),=empty_sni_ext,ech_ext_4: echExt,=empty_extra_ext,=empty_psk_ext) = mode_10 in
                        {2306}let v_458: bool = (ech_ext_4 = empty_ech_ext) in
                        {2307}let hrr_mode_1: params = (if not(v_458) then nego(TLS13,@6_backend_h,@6_backend_a,hrr_kex_ext(@6_backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) else caught-fail) in
                        {2308}let hrr_1: msg = (if not(v_458) then SH(B32(HRR24,HRR8),hrr_mode_1) else caught-fail) in
                        {2309}let cur_log_13: bitstring = (if not(v_458) then ((zero,i_client_hello_6),hrr_1) else caught-fail) in
                        {2310}let transcript_hrr_ech_conf_1: bitstring = (if not(v_458) then catch-fail(hash(@6_backend_h,cur_log_13)) else caught-fail) in
                        {2311}let v_459: bool = not-caught-fail(transcript_hrr_ech_conf_1) in
                        {2312}let s_49: bitstring = (if v_459 then zero else caught-fail) in
                        {2313}let k_46: bitstring = (if v_459 then catch-fail(b32_2_b(get_random(i_client_hello_6))) else caught-fail) in
                        {2314}let v_460: bool = not-caught-fail(k_46) in
                        {2315}let k_47: bitstring = (if v_459 then catch-fail((if v_460 then hmac(@6_backend_h,s_49,k_46) else fail-any)) else caught-fail) in
                        {2316}let v_461: bool = not-caught-fail(k_47) in
                        {2317}let l_131: label = (if v_461 then hrr_ech_accept_confirmation else caught-fail) in
                        {2318}let x_147: bitstring = (if v_461 then (l_131,cur_log_13) else caught-fail) in
                        {2319}let is_ech_accepted_1: bool = (if v_458 then false else (if (ech_ext_4 = ECHHelloRetryRequest((if v_459 then crop_into_bytes8((if v_461 then hmac(@6_backend_h,k_47,x_147) else fail-any)) else fail-any))) then true else false)) in
                        {2320}event ClientEchAcceptance(@6_id_client,is_ech_accepted_1);
                        {2321}if is_ech_accepted_1 then
                        (
                            {2322}let cur_log_IN1_HRR_1: bitstring = ((zero,i_client_hello_6),server_hello_2) in
                            {2323}let ech_config(config_id_4: configId,ech_g_6: group,pkR_6: element,o_dom_4: domain,ech_h_6: hash_alg,ech_a_6: aead_alg) = ech_conf in
                            {2324}let send_key_share_3: bool = true in
                            {2325}new s_50[]: seed;
                            {2326}let gx_13: element = dh_pub(@6_backend_g,dh_k(s_50)) in
                            {2327}let v_462: bitstring = (dh_k(s_50),gx_13) in
                            {2328}let v_463: bool = success?(1-proj-2-tuple(v_462)) in
                            {2329}let gx_14: element = (if v_463 then 2-proj-2-tuple(v_462) else caught-fail) in
                            {2330}let x_148: bitstring = (if v_463 then 1-proj-2-tuple(v_462) else caught-fail) in
                            {2331}let kex_5: kex_alg = (if v_463 then (if send_key_share_3 then DHE_kex(@6_backend_g,gx_14) else DHE_group(@6_backend_g)) else caught-fail) in
                            {2332}let (i_kex_ext_2: keyShareExt,i_kex_data_4: bitstring) = (if v_463 then (client_kex_ext(kex_5),(x_148,@6_backend_g)) else fail-any) in
                            {2333}let send_key_share_4: bool = true in
                            {2334}new s_51[]: seed;
                            {2335}let gx_15: element = dh_pub(@6_tls_g,dh_k(s_51)) in
                            {2336}let v_464: bitstring = (dh_k(s_51),gx_15) in
                            {2337}let v_465: bool = success?(1-proj-2-tuple(v_464)) in
                            {2338}let gx_16: element = (if v_465 then 2-proj-2-tuple(v_464) else caught-fail) in
                            {2339}let x_149: bitstring = (if v_465 then 1-proj-2-tuple(v_464) else caught-fail) in
                            {2340}let kex_6: kex_alg = (if v_465 then (if send_key_share_4 then DHE_kex(@6_tls_g,gx_16) else DHE_group(@6_tls_g)) else caught-fail) in
                            {2341}let (o_kex_ext_3: keyShareExt,o_kex_data_4: bitstring) = (if v_465 then (client_kex_ext(kex_6),(x_149,@6_tls_g)) else fail-any) in
                            {2342}new rand24_6[]: bytes24;
                            {2343}new rand8_6[]: bytes8;
                            {2344}let i_cr_4: bytes32 = B32(rand24_6,rand8_6) in
                            {2345}new rand24_7[]: bytes24;
                            {2346}new rand8_7[]: bytes8;
                            {2347}let o_cr_5: bytes32 = B32(rand24_7,rand8_7) in
                            {2348}let ech_ext_5: echExt = ECHClientHelloInner in
                            {2349}if @6_use_psk then
                            (
                                {2350}let (psk_52: preSharedKey,id_25: identityPsk,old_es_3: bitstring,is_safe_18: bool) = psk_data_10 in
                                (
                                    {2351}let offer_8: params = nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_2,SNI(backend_dom),ech_ext_5,@6_i_extra_ext,trunc_client_psk_ext(id_25)) in
                                    {2352}let cur_log'_8: bitstring = (cur_log_IN1_HRR_1,CH(i_cr_4,offer_8)) in
                                    {2353}let s_52: bitstring = zero in
                                    {2354}let k_48: bitstring = catch-fail(psk2b(psk_52)) in
                                    {2355}let v_466: bool = not-caught-fail(k_48) in
                                    {2356}let early_secret_33: bitstring = catch-fail((if v_466 then hmac(@6_backend_h,s_52,k_48) else fail-any)) in
                                    {2357}let v_467: bool = not-caught-fail(early_secret_33) in
                                    {2358}let l_132: label = (if v_467 then tls13_ext_res_binder else caught-fail) in
                                    {2359}let m_42: bitstring = (if v_467 then zero else caught-fail) in
                                    {2360}let h_125: bitstring = (if v_467 then catch-fail(hash(@6_backend_h,m_42)) else caught-fail) in
                                    {2361}let v_468: bool = not-caught-fail(h_125) in
                                    {2362}let x_150: bitstring = (if v_468 then (l_132,h_125) else caught-fail) in
                                    {2363}let binder_key_22: bitstring = (if v_467 then catch-fail((if v_468 then hmac(@6_backend_h,early_secret_33,x_150) else fail-any)) else caught-fail) in
                                    {2364}let v_469: bool = not-caught-fail(binder_key_22) in
                                    {2365}let v_470: bitstring = catch-fail((if v_467 then (if v_469 then (early_secret_33,binder_key_22) else fail-any) else fail-any)) in
                                    {2366}let v_471: bool = (not-caught-fail(v_470) && success?(1-proj-2-tuple(v_470))) in
                                    {2367}let kb_22: mac_key = (if v_471 then 2-proj-2-tuple(v_470) else caught-fail) in
                                    {2368}let es_31: bitstring = (if v_471 then 1-proj-2-tuple(v_470) else caught-fail) in
                                    {2369}let binders_7: bitstring = (if v_471 then catch-fail(hmac(@6_backend_h,kb_22,cur_log'_8)) else caught-fail) in
                                    {2370}let v_472: bool = not-caught-fail(binders_7) in
                                    {2371}let v_473: bitstring = catch-fail((if v_471 then (if v_472 then (client_psk_ext(id_25,binders_7),(psk_52,id_25,es_31,is_safe_18)) else fail-any) else fail-any)) in
                                    {2372}let v_474: bool = (not-caught-fail(v_473) && success?(1-proj-2-tuple(v_473))) in
                                    {2373}let psk_data_11: bitstring = (if v_474 then 2-proj-2-tuple(v_473) else caught-fail) in
                                    {2374}let psk_ext_20: preSharedKeyExt = (if v_474 then 1-proj-2-tuple(v_473) else caught-fail) in
                                    {2375}let i_offer_5: params = (if v_474 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_2,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_20) else caught-fail) in
                                    {2376}let i_client_hello_7: msg = (if v_474 then CH(i_cr_4,i_offer_5) else caught-fail) in
                                    {2377}new fake_id_6[]: identityPsk;
                                    {2378}new fake_binder_6[]: bitstring;
                                    {2379}let o_psk_ext_7: preSharedKeyExt = (if v_474 then (if @6_use_psk then client_psk_ext(fake_id_6,fake_binder_6) else empty_psk_ext) else caught-fail) in
                                    {2380}let o_ech_ext_ADD_5: echExt = (if v_474 then ECHClientHelloOuter(ech_h_6,ech_a_6,config_id_4,zero,zero) else caught-fail) in
                                    {2381}let o_offer_ADD_5: params = (if v_474 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_3,SNI(o_dom_4),o_ech_ext_ADD_5,empty_extra_ext,o_psk_ext_7) else caught-fail) in
                                    {2382}let o_client_hello_ADD_5: msg = (if v_474 then CH(o_cr_5,o_offer_ADD_5) else caught-fail) in
                                    {2383}let n_5: nat = (if v_474 then 2 else caught-fail) in
                                    {2384}let v_475: hpkeContext = (if v_474 then catch-fail(context) else caught-fail) in
                                    {2385}let v_476: bool = (not-caught-fail(v_475) && ((S =nf 1-proj-hpke_context(v_475)) && success?(1-proj-hpke_context(v_475)))) in
                                    {2386}let base_nonce_6: bitstring = (if v_476 then 3-proj-hpke_context(v_475) else caught-fail) in
                                    {2387}let key_6: aead_key = (if v_476 then 2-proj-hpke_context(v_475) else caught-fail) in
                                    {2388}let payload_6: bitstring = (if v_474 then catch-fail((if v_476 then aead_enc(ech_a_6,key_6,(base_nonce_6,n_5),o_client_hello_ADD_5,i_client_hello_7) else fail-any)) else caught-fail) in
                                    {2389}let v_477: bool = not-caught-fail(payload_6) in
                                    {2390}let o_ech_ext_7: echExt = (if v_477 then ECHClientHelloOuter(ech_h_6,ech_a_6,config_id_4,zero,payload_6) else caught-fail) in
                                    {2391}let o_offer_11: params = (if v_477 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_3,SNI(o_dom_4),o_ech_ext_7,empty_extra_ext,o_psk_ext_7) else caught-fail) in
                                    {2392}let (o_client_hello'_3: msg,i_client_hello'_3: msg,i_cr'_3: bytes32,i_kex_data'_3: bitstring,psk_data'_8: bitstring) = (if v_474 then (if v_477 then (CH(o_cr_5,o_offer_11),i_client_hello_7,i_cr_4,i_kex_data_4,psk_data_11) else fail-any) else fail-any) in
                                    {2393}out(io, o_client_hello'_3);
                                    {2394}in(io, server_hello'_7: msg);
                                    {2395}let SH(B32(sr24'_3: bytes24,sr8'_3: bytes8),params'_3: params) = server_hello'_7 in
                                    {2396}let cur_log_IN1_HRR_IN2_3: bitstring = (cur_log_IN1_HRR_1,i_client_hello'_3) in
                                    {2397}let sh_modified_5: msg = SH(B32(sr24'_3,zero8),params'_3) in
                                    {2398}let cur_log_sh_5: bitstring = (cur_log_IN1_HRR_IN2_3,sh_modified_5) in
                                    {2399}let transcript_ech_conf_5: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_5)) in
                                    {2400}let v_478: bool = not-caught-fail(transcript_ech_conf_5) in
                                    {2401}let s_53: bitstring = (if v_478 then zero else caught-fail) in
                                    {2402}let k_49: bitstring = (if v_478 then catch-fail(b32_2_b(get_random(i_client_hello'_3))) else caught-fail) in
                                    {2403}let v_479: bool = not-caught-fail(k_49) in
                                    {2404}let k_50: bitstring = (if v_478 then catch-fail((if v_479 then hmac(@6_backend_h,s_53,k_49) else fail-any)) else caught-fail) in
                                    {2405}let v_480: bool = not-caught-fail(k_50) in
                                    {2406}let l_133: label = (if v_480 then ech_accept_confirmation else caught-fail) in
                                    {2407}let x_151: bitstring = (if v_480 then (l_133,cur_log_sh_5) else caught-fail) in
                                    {2408}let sr8_7: bytes8 = (if v_478 then catch-fail(crop_into_bytes8((if v_480 then hmac(@6_backend_h,k_50,x_151) else fail-any))) else caught-fail) in
                                    {2409}let v_481: bool = not-caught-fail(sr8_7) in
                                    {2410}if (B32(sr24'_3,sr8'_3) = (if v_478 then (if v_481 then B32(sr24'_3,sr8_7) else fail-any) else fail-any)) then
                                    {2411}let (x_152: bitstring,g_12: group) = i_kex_data'_3 in
                                    {2412}let (psk_offer_9: preSharedKey,id_offer_9: identityPsk,es_offer_9: bitstring,is_safe_offer_9: bool) = psk_data'_8 in
                                    {2413}event Client_PSKOffer(@6_id_client,psk_offer_9,id_offer_9,is_safe_offer_9);
                                    {2414}event Client_Rand_client(@6_id_client,i_cr'_3);
                                    {2415}event Client_DH_client(@6_id_client,dh_pub(g_12,x_152));
                                    {2416}event Client_server_domain(@6_id_client,backend_dom);
                                    {2417}let SH(sr_17: bytes32,mode_11: params) = server_hello'_7 in
                                    {2418}event Client_Rand_server(@6_id_client,sr_17);
                                    {2419}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_12,gy_10: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_21: preSharedKeyExt) = mode_11 in
                                    (
                                        {2420}let cur_log2_22: bitstring = (cur_log_IN1_HRR_IN2_3,server_hello'_7) in
                                        {2421}event Client_DH_server(@6_id_client,gy_10);
                                        {2422}let v_482: bool = (psk_ext_21 = empty_psk_ext) in
                                        {2423}let psk_53: preSharedKey = (if v_482 then NoPsk else caught-fail) in
                                        {2424}let s_54: bitstring = (if v_482 then zero else caught-fail) in
                                        {2425}let k_51: bitstring = (if v_482 then catch-fail(psk2b(psk_53)) else caught-fail) in
                                        {2426}let v_483: bool = not-caught-fail(k_51) in
                                        {2427}let early_secret_34: bitstring = (if v_482 then catch-fail((if v_483 then hmac(@6_backend_h,s_54,k_51) else fail-any)) else caught-fail) in
                                        {2428}let v_484: bool = not-caught-fail(early_secret_34) in
                                        {2429}let l_134: label = (if v_484 then tls13_ext_res_binder else caught-fail) in
                                        {2430}let m_43: bitstring = (if v_484 then zero else caught-fail) in
                                        {2431}let h_126: bitstring = (if v_484 then catch-fail(hash(@6_backend_h,m_43)) else caught-fail) in
                                        {2432}let v_485: bool = not-caught-fail(h_126) in
                                        {2433}let x_153: bitstring = (if v_485 then (l_134,h_126) else caught-fail) in
                                        {2434}let binder_key_23: bitstring = (if v_484 then catch-fail((if v_485 then hmac(@6_backend_h,early_secret_34,x_153) else fail-any)) else caught-fail) in
                                        {2435}let v_486: bool = not-caught-fail(binder_key_23) in
                                        {2436}let v_487: bitstring = (if v_482 then catch-fail((if v_484 then (if v_486 then (early_secret_34,binder_key_23) else fail-any) else fail-any)) else caught-fail) in
                                        {2437}let v_488: bool = (not-caught-fail(v_487) && success?(1-proj-2-tuple(v_487))) in
                                        {2438}let kb_23: mac_key = (if v_488 then 2-proj-2-tuple(v_487) else caught-fail) in
                                        {2439}let es_32: bitstring = (if v_488 then 1-proj-2-tuple(v_487) else caught-fail) in
                                        {2440}let v_489: bitstring = (if not(v_482) then catch-fail(psk_data'_8) else caught-fail) in
                                        {2441}let v_490: bool = (not-caught-fail(v_489) && success?(1-proj-4-tuple(v_489))) in
                                        {2442}let is_safe_19: bool = (if v_490 then 4-proj-4-tuple(v_489) else caught-fail) in
                                        {2443}let es_33: bitstring = (if v_490 then 3-proj-4-tuple(v_489) else caught-fail) in
                                        {2444}let id_26: identityPsk = (if v_490 then 2-proj-4-tuple(v_489) else caught-fail) in
                                        {2445}let psk_54: preSharedKey = (if v_490 then 1-proj-4-tuple(v_489) else caught-fail) in
                                        {2446}let (psk_55: preSharedKey,early_secret_35: bitstring,valid_9: bool,safe_psk_12: bool) = (if v_482 then (if v_488 then (NoPsk,es_32,true,false) else fail-any) else (if v_490 then (psk_54,es_33,((psk_54 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_21)),is_safe_19) else fail-any)) in
                                        {2447}event Client_PSKChoosen(@6_id_client,psk_55,safe_psk_12);
                                        {2448}if valid_9 then
                                        (
                                            {2449}let gxy_19: element = catch-fail(dh_decap_fun(g_12,gy_10,x_152)) in
                                            {2450}let v_491: bool = not-caught-fail(gxy_19) in
                                            {2451}new s_55[]: seed;
                                            {2452}let gxy_20: element = (if v_491 then gxy_19 else dh_f(s_55)) in
                                            {2453}event Client_DH_gxy(@6_id_client,gxy_20);
                                            {2454}let l_135: label = tls13_derived in
                                            {2455}let m_44: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {2456}let v_492: bool = not-caught-fail(m_44) in
                                            {2457}let h_127: bitstring = (if v_492 then catch-fail(hash(@6_backend_h,m_44)) else caught-fail) in
                                            {2458}let v_493: bool = not-caught-fail(h_127) in
                                            {2459}let x_154: bitstring = (if v_493 then (l_135,h_127) else caught-fail) in
                                            {2460}let extra_21: bitstring = catch-fail((if v_492 then (if v_493 then hmac(@6_backend_h,early_secret_35,x_154) else fail-any) else fail-any)) in
                                            {2461}let v_494: bool = not-caught-fail(extra_21) in
                                            {2462}let handshake_secret_10: bitstring = (if v_494 then hmac(@6_backend_h,extra_21,gxy_20) else fail-any) in
                                            {2463}let l_136: label = tls13_derived in
                                            {2464}let m_45: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {2465}let v_495: bool = not-caught-fail(m_45) in
                                            {2466}let h_128: bitstring = (if v_495 then catch-fail(hash(@6_backend_h,m_45)) else caught-fail) in
                                            {2467}let v_496: bool = not-caught-fail(h_128) in
                                            {2468}let x_155: bitstring = (if v_496 then (l_136,h_128) else caught-fail) in
                                            {2469}let extra_22: bitstring = catch-fail((if v_495 then (if v_496 then hmac(@6_backend_h,handshake_secret_10,x_155) else fail-any) else fail-any)) in
                                            {2470}let v_497: bool = not-caught-fail(extra_22) in
                                            {2471}let k_52: bitstring = (if v_497 then zero else caught-fail) in
                                            {2472}let master_secret_27: bitstring = (if v_497 then catch-fail(hmac(@6_backend_h,handshake_secret_10,k_52)) else caught-fail) in
                                            {2473}let v_498: bool = not-caught-fail(master_secret_27) in
                                            {2474}let l_137: label = (if v_498 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {2475}let h_129: bitstring = (if v_498 then catch-fail(hash(@6_backend_h,cur_log2_22)) else caught-fail) in
                                            {2476}let v_499: bool = not-caught-fail(h_129) in
                                            {2477}let x_156: bitstring = (if v_499 then (l_137,h_129) else caught-fail) in
                                            {2478}let client_hts_10: bitstring = (if v_498 then catch-fail((if v_499 then hmac(@6_backend_h,handshake_secret_10,x_156) else fail-any)) else caught-fail) in
                                            {2479}let v_500: bool = not-caught-fail(client_hts_10) in
                                            {2480}let l_138: label = (if v_500 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {2481}let h_130: bitstring = (if v_500 then catch-fail(hash(@6_backend_h,cur_log2_22)) else caught-fail) in
                                            {2482}let v_501: bool = not-caught-fail(h_130) in
                                            {2483}let x_157: bitstring = (if v_501 then (l_138,h_130) else caught-fail) in
                                            {2484}let server_hts_10: bitstring = (if v_500 then catch-fail((if v_501 then hmac(@6_backend_h,handshake_secret_10,x_157) else fail-any)) else caught-fail) in
                                            {2485}let v_502: bool = not-caught-fail(server_hts_10) in
                                            {2486}let l_139: label = (if v_502 then tls13_key else caught-fail) in
                                            {2487}let h_131: bitstring = (if v_502 then zero else caught-fail) in
                                            {2488}let x_158: bitstring = (if v_502 then (l_139,h_131) else caught-fail) in
                                            {2489}let client_wkh_10: bitstring = (if v_502 then catch-fail(hmac(@6_backend_h,client_hts_10,x_158)) else caught-fail) in
                                            {2490}let v_503: bool = not-caught-fail(client_wkh_10) in
                                            {2491}let l_140: label = (if v_503 then tls13_key else caught-fail) in
                                            {2492}let h_132: bitstring = (if v_503 then zero else caught-fail) in
                                            {2493}let x_159: bitstring = (if v_503 then (l_140,h_132) else caught-fail) in
                                            {2494}let server_wkh_10: bitstring = (if v_503 then catch-fail(hmac(@6_backend_h,server_hts_10,x_159)) else caught-fail) in
                                            {2495}let v_504: bool = not-caught-fail(server_wkh_10) in
                                            {2496}let l_141: label = (if v_504 then tls13_finished else caught-fail) in
                                            {2497}let h_133: bitstring = (if v_504 then zero else caught-fail) in
                                            {2498}let x_160: bitstring = (if v_504 then (l_141,h_133) else caught-fail) in
                                            {2499}let client_fk_10: bitstring = (if v_504 then catch-fail(hmac(@6_backend_h,client_hts_10,x_160)) else caught-fail) in
                                            {2500}let v_505: bool = not-caught-fail(client_fk_10) in
                                            {2501}let l_142: label = (if v_505 then tls13_finished else caught-fail) in
                                            {2502}let h_134: bitstring = (if v_505 then zero else caught-fail) in
                                            {2503}let x_161: bitstring = (if v_505 then (l_142,h_134) else caught-fail) in
                                            {2504}let server_fk_10: bitstring = (if v_505 then catch-fail(hmac(@6_backend_h,server_hts_10,x_161)) else caught-fail) in
                                            {2505}let v_506: bool = not-caught-fail(server_fk_10) in
                                            {2506}let (master_secret_28: bitstring,chk_17: aead_key,shk_16: aead_key,cfin_17: mac_key,sfin_16: mac_key) = (if v_497 then (if v_498 then (if v_500 then (if v_502 then (if v_503 then (if v_504 then (if v_505 then (if v_506 then (master_secret_27,client_wkh_10,server_wkh_10,client_fk_10,server_fk_10) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {2507}event Client_chk(@6_id_client,chk_17);
                                            {2508}event Client_shk(@6_id_client,shk_16);
                                            {2509}event Client_cfin(@6_id_client,cfin_17);
                                            {2510}event Client_sfin(@6_id_client,sfin_16);
                                            {2511}in(io, enc_ee_msg_9: bitstring);
                                            {2512}let ee_msg_10: msg = aead_dec(@6_backend_a,shk_16,0,zero,enc_ee_msg_9) in
                                            {2513}let EE(ech_ee_9: echExt,extra_ee_9: extraExt) = ee_msg_10 in
                                            {2514}let cur_log2_23: bitstring = (cur_log2_22,ee_msg_10) in
                                            {2515}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_3,sr_17,@6_backend_h,@6_backend_a,c_dom_5,backend_dom,psk_55,safe_psk_12,@6_comp_psk,master_secret_28,chk_17,0,shk_16,1,cfin_17,sfin_16,cur_log2_23)))
                                        )
                                        else
                                            {2516}out(io, illegal_parameter)
                                    )
                                    else
                                        {2517}out(io, illegal_parameter)
                                )
                                else
                                    {2694}get pre_shared_keys(c_dom'_5: domain,=backend_dom,=@6_backend_h,id_27: identityPsk,psk_56: preSharedKey,idP_7: idProc,is_safe_20: bool) in
                                    {2518}event Selected_one_time_used_psk(@6_id_client,psk_56,is_safe_20);
                                    {2519}event Selected_psk(c_dom_5,c_dom'_5,idP_7,is_safe_20);
                                    {2520}event Selected_psk_no_missmatch(@6_id_client,backend_dom,@6_backend_h,psk_56,id_27);
                                    {2521}event Selected_psk_with_ID(c_dom_5,c_dom'_5,id_27,idP_7,is_safe_20);
                                    {2522}let v_507: bitstring = (id_27,psk_56,is_safe_20) in
                                    {2523}let v_508: bool = success?(1-proj-3-tuple(v_507)) in
                                    {2524}let is_safe_21: bool = (if v_508 then 3-proj-3-tuple(v_507) else caught-fail) in
                                    {2525}let psk_57: preSharedKey = (if v_508 then 2-proj-3-tuple(v_507) else caught-fail) in
                                    {2526}let id_28: identityPsk = (if v_508 then 1-proj-3-tuple(v_507) else caught-fail) in
                                    {2527}let offer_9: params = (if v_508 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_2,SNI(backend_dom),ech_ext_5,@6_i_extra_ext,trunc_client_psk_ext(id_28)) else caught-fail) in
                                    {2528}let cur_log'_9: bitstring = (if v_508 then (cur_log_IN1_HRR_1,CH(i_cr_4,offer_9)) else caught-fail) in
                                    {2529}let s_56: bitstring = (if v_508 then zero else caught-fail) in
                                    {2530}let k_53: bitstring = (if v_508 then catch-fail(psk2b(psk_57)) else caught-fail) in
                                    {2531}let v_509: bool = not-caught-fail(k_53) in
                                    {2532}let early_secret_36: bitstring = (if v_508 then catch-fail((if v_509 then hmac(@6_backend_h,s_56,k_53) else fail-any)) else caught-fail) in
                                    {2533}let v_510: bool = not-caught-fail(early_secret_36) in
                                    {2534}let l_143: label = (if v_510 then tls13_ext_res_binder else caught-fail) in
                                    {2535}let m_46: bitstring = (if v_510 then zero else caught-fail) in
                                    {2536}let h_135: bitstring = (if v_510 then catch-fail(hash(@6_backend_h,m_46)) else caught-fail) in
                                    {2537}let v_511: bool = not-caught-fail(h_135) in
                                    {2538}let x_162: bitstring = (if v_511 then (l_143,h_135) else caught-fail) in
                                    {2539}let binder_key_24: bitstring = (if v_510 then catch-fail((if v_511 then hmac(@6_backend_h,early_secret_36,x_162) else fail-any)) else caught-fail) in
                                    {2540}let v_512: bool = not-caught-fail(binder_key_24) in
                                    {2541}let v_513: bitstring = (if v_508 then catch-fail((if v_510 then (if v_512 then (early_secret_36,binder_key_24) else fail-any) else fail-any)) else caught-fail) in
                                    {2542}let v_514: bool = (not-caught-fail(v_513) && success?(1-proj-2-tuple(v_513))) in
                                    {2543}let kb_24: mac_key = (if v_514 then 2-proj-2-tuple(v_513) else caught-fail) in
                                    {2544}let es_34: bitstring = (if v_514 then 1-proj-2-tuple(v_513) else caught-fail) in
                                    {2545}let binders_8: bitstring = (if v_514 then catch-fail(hmac(@6_backend_h,kb_24,cur_log'_9)) else caught-fail) in
                                    {2546}let v_515: bool = not-caught-fail(binders_8) in
                                    {2547}let v_516: bitstring = catch-fail((if v_508 then (if v_514 then (if v_515 then (client_psk_ext(id_28,binders_8),(psk_57,id_28,es_34,is_safe_21)) else fail-any) else fail-any) else fail-any)) in
                                    {2548}let v_517: bool = (not-caught-fail(v_516) && success?(1-proj-2-tuple(v_516))) in
                                    {2549}let psk_data_12: bitstring = (if v_517 then 2-proj-2-tuple(v_516) else caught-fail) in
                                    {2550}let psk_ext_22: preSharedKeyExt = (if v_517 then 1-proj-2-tuple(v_516) else caught-fail) in
                                    {2551}let i_offer_6: params = (if v_517 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_2,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_22) else caught-fail) in
                                    {2552}let i_client_hello_8: msg = (if v_517 then CH(i_cr_4,i_offer_6) else caught-fail) in
                                    {2553}new fake_id_7[]: identityPsk;
                                    {2554}new fake_binder_7[]: bitstring;
                                    {2555}let o_psk_ext_8: preSharedKeyExt = (if v_517 then (if @6_use_psk then client_psk_ext(fake_id_7,fake_binder_7) else empty_psk_ext) else caught-fail) in
                                    {2556}let o_ech_ext_ADD_6: echExt = (if v_517 then ECHClientHelloOuter(ech_h_6,ech_a_6,config_id_4,zero,zero) else caught-fail) in
                                    {2557}let o_offer_ADD_6: params = (if v_517 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_3,SNI(o_dom_4),o_ech_ext_ADD_6,empty_extra_ext,o_psk_ext_8) else caught-fail) in
                                    {2558}let o_client_hello_ADD_6: msg = (if v_517 then CH(o_cr_5,o_offer_ADD_6) else caught-fail) in
                                    {2559}let n_6: nat = (if v_517 then 2 else caught-fail) in
                                    {2560}let v_518: hpkeContext = (if v_517 then catch-fail(context) else caught-fail) in
                                    {2561}let v_519: bool = (not-caught-fail(v_518) && ((S =nf 1-proj-hpke_context(v_518)) && success?(1-proj-hpke_context(v_518)))) in
                                    {2562}let base_nonce_7: bitstring = (if v_519 then 3-proj-hpke_context(v_518) else caught-fail) in
                                    {2563}let key_7: aead_key = (if v_519 then 2-proj-hpke_context(v_518) else caught-fail) in
                                    {2564}let payload_7: bitstring = (if v_517 then catch-fail((if v_519 then aead_enc(ech_a_6,key_7,(base_nonce_7,n_6),o_client_hello_ADD_6,i_client_hello_8) else fail-any)) else caught-fail) in
                                    {2565}let v_520: bool = not-caught-fail(payload_7) in
                                    {2566}let o_ech_ext_8: echExt = (if v_520 then ECHClientHelloOuter(ech_h_6,ech_a_6,config_id_4,zero,payload_7) else caught-fail) in
                                    {2567}let o_offer_12: params = (if v_520 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_3,SNI(o_dom_4),o_ech_ext_8,empty_extra_ext,o_psk_ext_8) else caught-fail) in
                                    {2568}let (o_client_hello'_4: msg,i_client_hello'_4: msg,i_cr'_4: bytes32,i_kex_data'_4: bitstring,psk_data'_9: bitstring) = (if v_517 then (if v_520 then (CH(o_cr_5,o_offer_12),i_client_hello_8,i_cr_4,i_kex_data_4,psk_data_12) else fail-any) else fail-any) in
                                    {2569}out(io, o_client_hello'_4);
                                    {2570}in(io, server_hello'_8: msg);
                                    {2571}let SH(B32(sr24'_4: bytes24,sr8'_4: bytes8),params'_4: params) = server_hello'_8 in
                                    {2572}let cur_log_IN1_HRR_IN2_4: bitstring = (cur_log_IN1_HRR_1,i_client_hello'_4) in
                                    {2573}let sh_modified_6: msg = SH(B32(sr24'_4,zero8),params'_4) in
                                    {2574}let cur_log_sh_6: bitstring = (cur_log_IN1_HRR_IN2_4,sh_modified_6) in
                                    {2575}let transcript_ech_conf_6: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_6)) in
                                    {2576}let v_521: bool = not-caught-fail(transcript_ech_conf_6) in
                                    {2577}let s_57: bitstring = (if v_521 then zero else caught-fail) in
                                    {2578}let k_54: bitstring = (if v_521 then catch-fail(b32_2_b(get_random(i_client_hello'_4))) else caught-fail) in
                                    {2579}let v_522: bool = not-caught-fail(k_54) in
                                    {2580}let k_55: bitstring = (if v_521 then catch-fail((if v_522 then hmac(@6_backend_h,s_57,k_54) else fail-any)) else caught-fail) in
                                    {2581}let v_523: bool = not-caught-fail(k_55) in
                                    {2582}let l_144: label = (if v_523 then ech_accept_confirmation else caught-fail) in
                                    {2583}let x_163: bitstring = (if v_523 then (l_144,cur_log_sh_6) else caught-fail) in
                                    {2584}let sr8_8: bytes8 = (if v_521 then catch-fail(crop_into_bytes8((if v_523 then hmac(@6_backend_h,k_55,x_163) else fail-any))) else caught-fail) in
                                    {2585}let v_524: bool = not-caught-fail(sr8_8) in
                                    {2586}if (B32(sr24'_4,sr8'_4) = (if v_521 then (if v_524 then B32(sr24'_4,sr8_8) else fail-any) else fail-any)) then
                                    {2587}let (x_164: bitstring,g_13: group) = i_kex_data'_4 in
                                    {2588}let (psk_offer_10: preSharedKey,id_offer_10: identityPsk,es_offer_10: bitstring,is_safe_offer_10: bool) = psk_data'_9 in
                                    {2589}event Client_PSKOffer(@6_id_client,psk_offer_10,id_offer_10,is_safe_offer_10);
                                    {2590}event Client_Rand_client(@6_id_client,i_cr'_4);
                                    {2591}event Client_DH_client(@6_id_client,dh_pub(g_13,x_164));
                                    {2592}event Client_server_domain(@6_id_client,backend_dom);
                                    {2593}let SH(sr_18: bytes32,mode_12: params) = server_hello'_8 in
                                    {2594}event Client_Rand_server(@6_id_client,sr_18);
                                    {2595}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_13,gy_11: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_23: preSharedKeyExt) = mode_12 in
                                    (
                                        {2596}let cur_log2_24: bitstring = (cur_log_IN1_HRR_IN2_4,server_hello'_8) in
                                        {2597}event Client_DH_server(@6_id_client,gy_11);
                                        {2598}let v_525: bool = (psk_ext_23 = empty_psk_ext) in
                                        {2599}let psk_58: preSharedKey = (if v_525 then NoPsk else caught-fail) in
                                        {2600}let s_58: bitstring = (if v_525 then zero else caught-fail) in
                                        {2601}let k_56: bitstring = (if v_525 then catch-fail(psk2b(psk_58)) else caught-fail) in
                                        {2602}let v_526: bool = not-caught-fail(k_56) in
                                        {2603}let early_secret_37: bitstring = (if v_525 then catch-fail((if v_526 then hmac(@6_backend_h,s_58,k_56) else fail-any)) else caught-fail) in
                                        {2604}let v_527: bool = not-caught-fail(early_secret_37) in
                                        {2605}let l_145: label = (if v_527 then tls13_ext_res_binder else caught-fail) in
                                        {2606}let m_47: bitstring = (if v_527 then zero else caught-fail) in
                                        {2607}let h_136: bitstring = (if v_527 then catch-fail(hash(@6_backend_h,m_47)) else caught-fail) in
                                        {2608}let v_528: bool = not-caught-fail(h_136) in
                                        {2609}let x_165: bitstring = (if v_528 then (l_145,h_136) else caught-fail) in
                                        {2610}let binder_key_25: bitstring = (if v_527 then catch-fail((if v_528 then hmac(@6_backend_h,early_secret_37,x_165) else fail-any)) else caught-fail) in
                                        {2611}let v_529: bool = not-caught-fail(binder_key_25) in
                                        {2612}let v_530: bitstring = (if v_525 then catch-fail((if v_527 then (if v_529 then (early_secret_37,binder_key_25) else fail-any) else fail-any)) else caught-fail) in
                                        {2613}let v_531: bool = (not-caught-fail(v_530) && success?(1-proj-2-tuple(v_530))) in
                                        {2614}let kb_25: mac_key = (if v_531 then 2-proj-2-tuple(v_530) else caught-fail) in
                                        {2615}let es_35: bitstring = (if v_531 then 1-proj-2-tuple(v_530) else caught-fail) in
                                        {2616}let v_532: bitstring = (if not(v_525) then catch-fail(psk_data'_9) else caught-fail) in
                                        {2617}let v_533: bool = (not-caught-fail(v_532) && success?(1-proj-4-tuple(v_532))) in
                                        {2618}let is_safe_22: bool = (if v_533 then 4-proj-4-tuple(v_532) else caught-fail) in
                                        {2619}let es_36: bitstring = (if v_533 then 3-proj-4-tuple(v_532) else caught-fail) in
                                        {2620}let id_29: identityPsk = (if v_533 then 2-proj-4-tuple(v_532) else caught-fail) in
                                        {2621}let psk_59: preSharedKey = (if v_533 then 1-proj-4-tuple(v_532) else caught-fail) in
                                        {2622}let (psk_60: preSharedKey,early_secret_38: bitstring,valid_10: bool,safe_psk_13: bool) = (if v_525 then (if v_531 then (NoPsk,es_35,true,false) else fail-any) else (if v_533 then (psk_59,es_36,((psk_59 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_23)),is_safe_22) else fail-any)) in
                                        {2623}event Client_PSKChoosen(@6_id_client,psk_60,safe_psk_13);
                                        {2624}if valid_10 then
                                        (
                                            {2625}let gxy_21: element = catch-fail(dh_decap_fun(g_13,gy_11,x_164)) in
                                            {2626}let v_534: bool = not-caught-fail(gxy_21) in
                                            {2627}new s_59[]: seed;
                                            {2628}let gxy_22: element = (if v_534 then gxy_21 else dh_f(s_59)) in
                                            {2629}event Client_DH_gxy(@6_id_client,gxy_22);
                                            {2630}let l_146: label = tls13_derived in
                                            {2631}let m_48: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {2632}let v_535: bool = not-caught-fail(m_48) in
                                            {2633}let h_137: bitstring = (if v_535 then catch-fail(hash(@6_backend_h,m_48)) else caught-fail) in
                                            {2634}let v_536: bool = not-caught-fail(h_137) in
                                            {2635}let x_166: bitstring = (if v_536 then (l_146,h_137) else caught-fail) in
                                            {2636}let extra_23: bitstring = catch-fail((if v_535 then (if v_536 then hmac(@6_backend_h,early_secret_38,x_166) else fail-any) else fail-any)) in
                                            {2637}let v_537: bool = not-caught-fail(extra_23) in
                                            {2638}let handshake_secret_11: bitstring = (if v_537 then hmac(@6_backend_h,extra_23,gxy_22) else fail-any) in
                                            {2639}let l_147: label = tls13_derived in
                                            {2640}let m_49: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {2641}let v_538: bool = not-caught-fail(m_49) in
                                            {2642}let h_138: bitstring = (if v_538 then catch-fail(hash(@6_backend_h,m_49)) else caught-fail) in
                                            {2643}let v_539: bool = not-caught-fail(h_138) in
                                            {2644}let x_167: bitstring = (if v_539 then (l_147,h_138) else caught-fail) in
                                            {2645}let extra_24: bitstring = catch-fail((if v_538 then (if v_539 then hmac(@6_backend_h,handshake_secret_11,x_167) else fail-any) else fail-any)) in
                                            {2646}let v_540: bool = not-caught-fail(extra_24) in
                                            {2647}let k_57: bitstring = (if v_540 then zero else caught-fail) in
                                            {2648}let master_secret_29: bitstring = (if v_540 then catch-fail(hmac(@6_backend_h,handshake_secret_11,k_57)) else caught-fail) in
                                            {2649}let v_541: bool = not-caught-fail(master_secret_29) in
                                            {2650}let l_148: label = (if v_541 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {2651}let h_139: bitstring = (if v_541 then catch-fail(hash(@6_backend_h,cur_log2_24)) else caught-fail) in
                                            {2652}let v_542: bool = not-caught-fail(h_139) in
                                            {2653}let x_168: bitstring = (if v_542 then (l_148,h_139) else caught-fail) in
                                            {2654}let client_hts_11: bitstring = (if v_541 then catch-fail((if v_542 then hmac(@6_backend_h,handshake_secret_11,x_168) else fail-any)) else caught-fail) in
                                            {2655}let v_543: bool = not-caught-fail(client_hts_11) in
                                            {2656}let l_149: label = (if v_543 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {2657}let h_140: bitstring = (if v_543 then catch-fail(hash(@6_backend_h,cur_log2_24)) else caught-fail) in
                                            {2658}let v_544: bool = not-caught-fail(h_140) in
                                            {2659}let x_169: bitstring = (if v_544 then (l_149,h_140) else caught-fail) in
                                            {2660}let server_hts_11: bitstring = (if v_543 then catch-fail((if v_544 then hmac(@6_backend_h,handshake_secret_11,x_169) else fail-any)) else caught-fail) in
                                            {2661}let v_545: bool = not-caught-fail(server_hts_11) in
                                            {2662}let l_150: label = (if v_545 then tls13_key else caught-fail) in
                                            {2663}let h_141: bitstring = (if v_545 then zero else caught-fail) in
                                            {2664}let x_170: bitstring = (if v_545 then (l_150,h_141) else caught-fail) in
                                            {2665}let client_wkh_11: bitstring = (if v_545 then catch-fail(hmac(@6_backend_h,client_hts_11,x_170)) else caught-fail) in
                                            {2666}let v_546: bool = not-caught-fail(client_wkh_11) in
                                            {2667}let l_151: label = (if v_546 then tls13_key else caught-fail) in
                                            {2668}let h_142: bitstring = (if v_546 then zero else caught-fail) in
                                            {2669}let x_171: bitstring = (if v_546 then (l_151,h_142) else caught-fail) in
                                            {2670}let server_wkh_11: bitstring = (if v_546 then catch-fail(hmac(@6_backend_h,server_hts_11,x_171)) else caught-fail) in
                                            {2671}let v_547: bool = not-caught-fail(server_wkh_11) in
                                            {2672}let l_152: label = (if v_547 then tls13_finished else caught-fail) in
                                            {2673}let h_143: bitstring = (if v_547 then zero else caught-fail) in
                                            {2674}let x_172: bitstring = (if v_547 then (l_152,h_143) else caught-fail) in
                                            {2675}let client_fk_11: bitstring = (if v_547 then catch-fail(hmac(@6_backend_h,client_hts_11,x_172)) else caught-fail) in
                                            {2676}let v_548: bool = not-caught-fail(client_fk_11) in
                                            {2677}let l_153: label = (if v_548 then tls13_finished else caught-fail) in
                                            {2678}let h_144: bitstring = (if v_548 then zero else caught-fail) in
                                            {2679}let x_173: bitstring = (if v_548 then (l_153,h_144) else caught-fail) in
                                            {2680}let server_fk_11: bitstring = (if v_548 then catch-fail(hmac(@6_backend_h,server_hts_11,x_173)) else caught-fail) in
                                            {2681}let v_549: bool = not-caught-fail(server_fk_11) in
                                            {2682}let (master_secret_30: bitstring,chk_18: aead_key,shk_17: aead_key,cfin_18: mac_key,sfin_17: mac_key) = (if v_540 then (if v_541 then (if v_543 then (if v_545 then (if v_546 then (if v_547 then (if v_548 then (if v_549 then (master_secret_29,client_wkh_11,server_wkh_11,client_fk_11,server_fk_11) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {2683}event Client_chk(@6_id_client,chk_18);
                                            {2684}event Client_shk(@6_id_client,shk_17);
                                            {2685}event Client_cfin(@6_id_client,cfin_18);
                                            {2686}event Client_sfin(@6_id_client,sfin_17);
                                            {2687}in(io, enc_ee_msg_10: bitstring);
                                            {2688}let ee_msg_11: msg = aead_dec(@6_backend_a,shk_17,0,zero,enc_ee_msg_10) in
                                            {2689}let EE(ech_ee_10: echExt,extra_ee_10: extraExt) = ee_msg_11 in
                                            {2690}let cur_log2_25: bitstring = (cur_log2_24,ee_msg_11) in
                                            {2691}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_4,sr_18,@6_backend_h,@6_backend_a,c_dom_5,backend_dom,psk_60,safe_psk_13,@6_comp_psk,master_secret_30,chk_18,0,shk_17,1,cfin_18,sfin_17,cur_log2_25)))
                                        )
                                        else
                                            {2692}out(io, illegal_parameter)
                                    )
                                    else
                                        {2693}out(io, illegal_parameter)
                            )
                            else
                                {2695}let psk_61: preSharedKey = NoPsk in
                                {2696}let s_60: bitstring = zero in
                                {2697}let k_58: bitstring = catch-fail(psk2b(psk_61)) in
                                {2698}let v_550: bool = not-caught-fail(k_58) in
                                {2699}let early_secret_39: bitstring = catch-fail((if v_550 then hmac(@6_backend_h,s_60,k_58) else fail-any)) in
                                {2700}let v_551: bool = not-caught-fail(early_secret_39) in
                                {2701}let l_154: label = (if v_551 then tls13_ext_res_binder else caught-fail) in
                                {2702}let m_50: bitstring = (if v_551 then zero else caught-fail) in
                                {2703}let h_145: bitstring = (if v_551 then catch-fail(hash(@6_backend_h,m_50)) else caught-fail) in
                                {2704}let v_552: bool = not-caught-fail(h_145) in
                                {2705}let x_174: bitstring = (if v_552 then (l_154,h_145) else caught-fail) in
                                {2706}let binder_key_26: bitstring = (if v_551 then catch-fail((if v_552 then hmac(@6_backend_h,early_secret_39,x_174) else fail-any)) else caught-fail) in
                                {2707}let v_553: bool = not-caught-fail(binder_key_26) in
                                {2708}let v_554: bitstring = catch-fail((if v_551 then (if v_553 then (early_secret_39,binder_key_26) else fail-any) else fail-any)) in
                                {2709}let v_555: bool = (not-caught-fail(v_554) && success?(1-proj-2-tuple(v_554))) in
                                {2710}let kb_26: mac_key = (if v_555 then 2-proj-2-tuple(v_554) else caught-fail) in
                                {2711}let es_37: bitstring = (if v_555 then 1-proj-2-tuple(v_554) else caught-fail) in
                                {2712}let v_556: bitstring = catch-fail((if v_555 then (empty_psk_ext,(NoPsk,zero,es_37,false)) else fail-any)) in
                                {2713}let v_557: bool = (not-caught-fail(v_556) && success?(1-proj-2-tuple(v_556))) in
                                {2714}let psk_data_13: bitstring = (if v_557 then 2-proj-2-tuple(v_556) else caught-fail) in
                                {2715}let psk_ext_24: preSharedKeyExt = (if v_557 then 1-proj-2-tuple(v_556) else caught-fail) in
                                {2716}let i_offer_7: params = (if v_557 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_2,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_24) else caught-fail) in
                                {2717}let i_client_hello_9: msg = (if v_557 then CH(i_cr_4,i_offer_7) else caught-fail) in
                                {2718}new fake_id_8[]: identityPsk;
                                {2719}new fake_binder_8[]: bitstring;
                                {2720}let o_psk_ext_9: preSharedKeyExt = (if v_557 then (if @6_use_psk then client_psk_ext(fake_id_8,fake_binder_8) else empty_psk_ext) else caught-fail) in
                                {2721}let o_ech_ext_ADD_7: echExt = (if v_557 then ECHClientHelloOuter(ech_h_6,ech_a_6,config_id_4,zero,zero) else caught-fail) in
                                {2722}let o_offer_ADD_7: params = (if v_557 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_3,SNI(o_dom_4),o_ech_ext_ADD_7,empty_extra_ext,o_psk_ext_9) else caught-fail) in
                                {2723}let o_client_hello_ADD_7: msg = (if v_557 then CH(o_cr_5,o_offer_ADD_7) else caught-fail) in
                                {2724}let n_7: nat = (if v_557 then 2 else caught-fail) in
                                {2725}let v_558: hpkeContext = (if v_557 then catch-fail(context) else caught-fail) in
                                {2726}let v_559: bool = (not-caught-fail(v_558) && ((S =nf 1-proj-hpke_context(v_558)) && success?(1-proj-hpke_context(v_558)))) in
                                {2727}let base_nonce_8: bitstring = (if v_559 then 3-proj-hpke_context(v_558) else caught-fail) in
                                {2728}let key_8: aead_key = (if v_559 then 2-proj-hpke_context(v_558) else caught-fail) in
                                {2729}let payload_8: bitstring = (if v_557 then catch-fail((if v_559 then aead_enc(ech_a_6,key_8,(base_nonce_8,n_7),o_client_hello_ADD_7,i_client_hello_9) else fail-any)) else caught-fail) in
                                {2730}let v_560: bool = not-caught-fail(payload_8) in
                                {2731}let o_ech_ext_9: echExt = (if v_560 then ECHClientHelloOuter(ech_h_6,ech_a_6,config_id_4,zero,payload_8) else caught-fail) in
                                {2732}let o_offer_13: params = (if v_560 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_3,SNI(o_dom_4),o_ech_ext_9,empty_extra_ext,o_psk_ext_9) else caught-fail) in
                                {2733}let (o_client_hello'_5: msg,i_client_hello'_5: msg,i_cr'_5: bytes32,i_kex_data'_5: bitstring,psk_data'_10: bitstring) = (if v_557 then (if v_560 then (CH(o_cr_5,o_offer_13),i_client_hello_9,i_cr_4,i_kex_data_4,psk_data_13) else fail-any) else fail-any) in
                                {2734}out(io, o_client_hello'_5);
                                {2735}in(io, server_hello'_9: msg);
                                {2736}let SH(B32(sr24'_5: bytes24,sr8'_5: bytes8),params'_5: params) = server_hello'_9 in
                                {2737}let cur_log_IN1_HRR_IN2_5: bitstring = (cur_log_IN1_HRR_1,i_client_hello'_5) in
                                {2738}let sh_modified_7: msg = SH(B32(sr24'_5,zero8),params'_5) in
                                {2739}let cur_log_sh_7: bitstring = (cur_log_IN1_HRR_IN2_5,sh_modified_7) in
                                {2740}let transcript_ech_conf_7: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_7)) in
                                {2741}let v_561: bool = not-caught-fail(transcript_ech_conf_7) in
                                {2742}let s_61: bitstring = (if v_561 then zero else caught-fail) in
                                {2743}let k_59: bitstring = (if v_561 then catch-fail(b32_2_b(get_random(i_client_hello'_5))) else caught-fail) in
                                {2744}let v_562: bool = not-caught-fail(k_59) in
                                {2745}let k_60: bitstring = (if v_561 then catch-fail((if v_562 then hmac(@6_backend_h,s_61,k_59) else fail-any)) else caught-fail) in
                                {2746}let v_563: bool = not-caught-fail(k_60) in
                                {2747}let l_155: label = (if v_563 then ech_accept_confirmation else caught-fail) in
                                {2748}let x_175: bitstring = (if v_563 then (l_155,cur_log_sh_7) else caught-fail) in
                                {2749}let sr8_9: bytes8 = (if v_561 then catch-fail(crop_into_bytes8((if v_563 then hmac(@6_backend_h,k_60,x_175) else fail-any))) else caught-fail) in
                                {2750}let v_564: bool = not-caught-fail(sr8_9) in
                                {2751}if (B32(sr24'_5,sr8'_5) = (if v_561 then (if v_564 then B32(sr24'_5,sr8_9) else fail-any) else fail-any)) then
                                {2752}let (x_176: bitstring,g_14: group) = i_kex_data'_5 in
                                {2753}let (psk_offer_11: preSharedKey,id_offer_11: identityPsk,es_offer_11: bitstring,is_safe_offer_11: bool) = psk_data'_10 in
                                {2754}event Client_PSKOffer(@6_id_client,psk_offer_11,id_offer_11,is_safe_offer_11);
                                {2755}event Client_Rand_client(@6_id_client,i_cr'_5);
                                {2756}event Client_DH_client(@6_id_client,dh_pub(g_14,x_176));
                                {2757}event Client_server_domain(@6_id_client,backend_dom);
                                {2758}let SH(sr_19: bytes32,mode_13: params) = server_hello'_9 in
                                {2759}event Client_Rand_server(@6_id_client,sr_19);
                                {2760}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_14,gy_12: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_25: preSharedKeyExt) = mode_13 in
                                (
                                    {2761}let cur_log2_26: bitstring = (cur_log_IN1_HRR_IN2_5,server_hello'_9) in
                                    {2762}event Client_DH_server(@6_id_client,gy_12);
                                    {2763}let v_565: bool = (psk_ext_25 = empty_psk_ext) in
                                    {2764}let psk_62: preSharedKey = (if v_565 then NoPsk else caught-fail) in
                                    {2765}let s_62: bitstring = (if v_565 then zero else caught-fail) in
                                    {2766}let k_61: bitstring = (if v_565 then catch-fail(psk2b(psk_62)) else caught-fail) in
                                    {2767}let v_566: bool = not-caught-fail(k_61) in
                                    {2768}let early_secret_40: bitstring = (if v_565 then catch-fail((if v_566 then hmac(@6_backend_h,s_62,k_61) else fail-any)) else caught-fail) in
                                    {2769}let v_567: bool = not-caught-fail(early_secret_40) in
                                    {2770}let l_156: label = (if v_567 then tls13_ext_res_binder else caught-fail) in
                                    {2771}let m_51: bitstring = (if v_567 then zero else caught-fail) in
                                    {2772}let h_146: bitstring = (if v_567 then catch-fail(hash(@6_backend_h,m_51)) else caught-fail) in
                                    {2773}let v_568: bool = not-caught-fail(h_146) in
                                    {2774}let x_177: bitstring = (if v_568 then (l_156,h_146) else caught-fail) in
                                    {2775}let binder_key_27: bitstring = (if v_567 then catch-fail((if v_568 then hmac(@6_backend_h,early_secret_40,x_177) else fail-any)) else caught-fail) in
                                    {2776}let v_569: bool = not-caught-fail(binder_key_27) in
                                    {2777}let v_570: bitstring = (if v_565 then catch-fail((if v_567 then (if v_569 then (early_secret_40,binder_key_27) else fail-any) else fail-any)) else caught-fail) in
                                    {2778}let v_571: bool = (not-caught-fail(v_570) && success?(1-proj-2-tuple(v_570))) in
                                    {2779}let kb_27: mac_key = (if v_571 then 2-proj-2-tuple(v_570) else caught-fail) in
                                    {2780}let es_38: bitstring = (if v_571 then 1-proj-2-tuple(v_570) else caught-fail) in
                                    {2781}let v_572: bitstring = (if not(v_565) then catch-fail(psk_data'_10) else caught-fail) in
                                    {2782}let v_573: bool = (not-caught-fail(v_572) && success?(1-proj-4-tuple(v_572))) in
                                    {2783}let is_safe_23: bool = (if v_573 then 4-proj-4-tuple(v_572) else caught-fail) in
                                    {2784}let es_39: bitstring = (if v_573 then 3-proj-4-tuple(v_572) else caught-fail) in
                                    {2785}let id_30: identityPsk = (if v_573 then 2-proj-4-tuple(v_572) else caught-fail) in
                                    {2786}let psk_63: preSharedKey = (if v_573 then 1-proj-4-tuple(v_572) else caught-fail) in
                                    {2787}let (psk_64: preSharedKey,early_secret_41: bitstring,valid_11: bool,safe_psk_14: bool) = (if v_565 then (if v_571 then (NoPsk,es_38,true,false) else fail-any) else (if v_573 then (psk_63,es_39,((psk_63 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_25)),is_safe_23) else fail-any)) in
                                    {2788}event Client_PSKChoosen(@6_id_client,psk_64,safe_psk_14);
                                    {2789}if valid_11 then
                                    (
                                        {2790}let gxy_23: element = catch-fail(dh_decap_fun(g_14,gy_12,x_176)) in
                                        {2791}let v_574: bool = not-caught-fail(gxy_23) in
                                        {2792}new s_63[]: seed;
                                        {2793}let gxy_24: element = (if v_574 then gxy_23 else dh_f(s_63)) in
                                        {2794}event Client_DH_gxy(@6_id_client,gxy_24);
                                        {2795}let l_157: label = tls13_derived in
                                        {2796}let m_52: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {2797}let v_575: bool = not-caught-fail(m_52) in
                                        {2798}let h_147: bitstring = (if v_575 then catch-fail(hash(@6_backend_h,m_52)) else caught-fail) in
                                        {2799}let v_576: bool = not-caught-fail(h_147) in
                                        {2800}let x_178: bitstring = (if v_576 then (l_157,h_147) else caught-fail) in
                                        {2801}let extra_25: bitstring = catch-fail((if v_575 then (if v_576 then hmac(@6_backend_h,early_secret_41,x_178) else fail-any) else fail-any)) in
                                        {2802}let v_577: bool = not-caught-fail(extra_25) in
                                        {2803}let handshake_secret_12: bitstring = (if v_577 then hmac(@6_backend_h,extra_25,gxy_24) else fail-any) in
                                        {2804}let l_158: label = tls13_derived in
                                        {2805}let m_53: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {2806}let v_578: bool = not-caught-fail(m_53) in
                                        {2807}let h_148: bitstring = (if v_578 then catch-fail(hash(@6_backend_h,m_53)) else caught-fail) in
                                        {2808}let v_579: bool = not-caught-fail(h_148) in
                                        {2809}let x_179: bitstring = (if v_579 then (l_158,h_148) else caught-fail) in
                                        {2810}let extra_26: bitstring = catch-fail((if v_578 then (if v_579 then hmac(@6_backend_h,handshake_secret_12,x_179) else fail-any) else fail-any)) in
                                        {2811}let v_580: bool = not-caught-fail(extra_26) in
                                        {2812}let k_62: bitstring = (if v_580 then zero else caught-fail) in
                                        {2813}let master_secret_31: bitstring = (if v_580 then catch-fail(hmac(@6_backend_h,handshake_secret_12,k_62)) else caught-fail) in
                                        {2814}let v_581: bool = not-caught-fail(master_secret_31) in
                                        {2815}let l_159: label = (if v_581 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {2816}let h_149: bitstring = (if v_581 then catch-fail(hash(@6_backend_h,cur_log2_26)) else caught-fail) in
                                        {2817}let v_582: bool = not-caught-fail(h_149) in
                                        {2818}let x_180: bitstring = (if v_582 then (l_159,h_149) else caught-fail) in
                                        {2819}let client_hts_12: bitstring = (if v_581 then catch-fail((if v_582 then hmac(@6_backend_h,handshake_secret_12,x_180) else fail-any)) else caught-fail) in
                                        {2820}let v_583: bool = not-caught-fail(client_hts_12) in
                                        {2821}let l_160: label = (if v_583 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {2822}let h_150: bitstring = (if v_583 then catch-fail(hash(@6_backend_h,cur_log2_26)) else caught-fail) in
                                        {2823}let v_584: bool = not-caught-fail(h_150) in
                                        {2824}let x_181: bitstring = (if v_584 then (l_160,h_150) else caught-fail) in
                                        {2825}let server_hts_12: bitstring = (if v_583 then catch-fail((if v_584 then hmac(@6_backend_h,handshake_secret_12,x_181) else fail-any)) else caught-fail) in
                                        {2826}let v_585: bool = not-caught-fail(server_hts_12) in
                                        {2827}let l_161: label = (if v_585 then tls13_key else caught-fail) in
                                        {2828}let h_151: bitstring = (if v_585 then zero else caught-fail) in
                                        {2829}let x_182: bitstring = (if v_585 then (l_161,h_151) else caught-fail) in
                                        {2830}let client_wkh_12: bitstring = (if v_585 then catch-fail(hmac(@6_backend_h,client_hts_12,x_182)) else caught-fail) in
                                        {2831}let v_586: bool = not-caught-fail(client_wkh_12) in
                                        {2832}let l_162: label = (if v_586 then tls13_key else caught-fail) in
                                        {2833}let h_152: bitstring = (if v_586 then zero else caught-fail) in
                                        {2834}let x_183: bitstring = (if v_586 then (l_162,h_152) else caught-fail) in
                                        {2835}let server_wkh_12: bitstring = (if v_586 then catch-fail(hmac(@6_backend_h,server_hts_12,x_183)) else caught-fail) in
                                        {2836}let v_587: bool = not-caught-fail(server_wkh_12) in
                                        {2837}let l_163: label = (if v_587 then tls13_finished else caught-fail) in
                                        {2838}let h_153: bitstring = (if v_587 then zero else caught-fail) in
                                        {2839}let x_184: bitstring = (if v_587 then (l_163,h_153) else caught-fail) in
                                        {2840}let client_fk_12: bitstring = (if v_587 then catch-fail(hmac(@6_backend_h,client_hts_12,x_184)) else caught-fail) in
                                        {2841}let v_588: bool = not-caught-fail(client_fk_12) in
                                        {2842}let l_164: label = (if v_588 then tls13_finished else caught-fail) in
                                        {2843}let h_154: bitstring = (if v_588 then zero else caught-fail) in
                                        {2844}let x_185: bitstring = (if v_588 then (l_164,h_154) else caught-fail) in
                                        {2845}let server_fk_12: bitstring = (if v_588 then catch-fail(hmac(@6_backend_h,server_hts_12,x_185)) else caught-fail) in
                                        {2846}let v_589: bool = not-caught-fail(server_fk_12) in
                                        {2847}let (master_secret_32: bitstring,chk_19: aead_key,shk_18: aead_key,cfin_19: mac_key,sfin_18: mac_key) = (if v_580 then (if v_581 then (if v_583 then (if v_585 then (if v_586 then (if v_587 then (if v_588 then (if v_589 then (master_secret_31,client_wkh_12,server_wkh_12,client_fk_12,server_fk_12) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {2848}event Client_chk(@6_id_client,chk_19);
                                        {2849}event Client_shk(@6_id_client,shk_18);
                                        {2850}event Client_cfin(@6_id_client,cfin_19);
                                        {2851}event Client_sfin(@6_id_client,sfin_18);
                                        {2852}in(io, enc_ee_msg_11: bitstring);
                                        {2853}let ee_msg_12: msg = aead_dec(@6_backend_a,shk_18,0,zero,enc_ee_msg_11) in
                                        {2854}let EE(ech_ee_11: echExt,extra_ee_11: extraExt) = ee_msg_12 in
                                        {2855}let cur_log2_27: bitstring = (cur_log2_26,ee_msg_12) in
                                        {2856}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_5,sr_19,@6_backend_h,@6_backend_a,c_dom_5,backend_dom,psk_64,safe_psk_14,@6_comp_psk,master_secret_32,chk_19,0,shk_18,1,cfin_19,sfin_18,cur_log2_27)))
                                    )
                                    else
                                        {2857}out(io, illegal_parameter)
                                )
                                else
                                    {2858}out(io, illegal_parameter)
                        )
                        else
                            {2859}let cur_log_OU1_HRR_1: bitstring = ((zero,o_client_hello_1),server_hello_2) in
                            {2860}let ech_config(config_id_5: configId,ech_g_7: group,pkR_7: element,o_dom_5: domain,ech_h_7: hash_alg,ech_a_7: aead_alg) = ech_conf in
                            {2861}new rand24_8[]: bytes24;
                            {2862}new rand8_8[]: bytes8;
                            {2863}let o_cr_6: bytes32 = B32(rand24_8,rand8_8) in
                            {2864}let send_key_share_5: bool = true in
                            {2865}new s_64[]: seed;
                            {2866}let gx_17: element = dh_pub(@6_tls_g,dh_k(s_64)) in
                            {2867}let v_590: bitstring = (dh_k(s_64),gx_17) in
                            {2868}let v_591: bool = success?(1-proj-2-tuple(v_590)) in
                            {2869}let gx_18: element = (if v_591 then 2-proj-2-tuple(v_590) else caught-fail) in
                            {2870}let x_186: bitstring = (if v_591 then 1-proj-2-tuple(v_590) else caught-fail) in
                            {2871}let kex_7: kex_alg = (if v_591 then (if send_key_share_5 then DHE_kex(@6_tls_g,gx_18) else DHE_group(@6_tls_g)) else caught-fail) in
                            {2872}let (o_kex_ext_4: keyShareExt,kex_data_1: bitstring) = (if v_591 then (client_kex_ext(kex_7),(x_186,@6_tls_g)) else fail-any) in
                            {2873}if @6_use_grease then
                            (
                                {2874}let extra_27: extraExt = empty_extra_ext in
                                {2875}if @6_use_psk then
                                (
                                    {2876}let (psk_65: preSharedKey,id_31: identityPsk,old_es_4: bitstring,is_safe_24: bool) = psk_data_10 in
                                    (
                                        {2877}let offer_10: params = nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_4,SNI(o_dom_5),o_ech_ext_6,extra_27,trunc_client_psk_ext(id_31)) in
                                        {2878}let cur_log'_10: bitstring = (cur_log_OU1_HRR_1,CH(o_cr_6,offer_10)) in
                                        {2879}let s_65: bitstring = zero in
                                        {2880}let k_63: bitstring = catch-fail(psk2b(psk_65)) in
                                        {2881}let v_592: bool = not-caught-fail(k_63) in
                                        {2882}let early_secret_42: bitstring = catch-fail((if v_592 then hmac(@6_tls_h,s_65,k_63) else fail-any)) in
                                        {2883}let v_593: bool = not-caught-fail(early_secret_42) in
                                        {2884}let l_165: label = (if v_593 then tls13_ext_res_binder else caught-fail) in
                                        {2885}let m_54: bitstring = (if v_593 then zero else caught-fail) in
                                        {2886}let h_155: bitstring = (if v_593 then catch-fail(hash(@6_tls_h,m_54)) else caught-fail) in
                                        {2887}let v_594: bool = not-caught-fail(h_155) in
                                        {2888}let x_187: bitstring = (if v_594 then (l_165,h_155) else caught-fail) in
                                        {2889}let binder_key_28: bitstring = (if v_593 then catch-fail((if v_594 then hmac(@6_tls_h,early_secret_42,x_187) else fail-any)) else caught-fail) in
                                        {2890}let v_595: bool = not-caught-fail(binder_key_28) in
                                        {2891}let v_596: bitstring = catch-fail((if v_593 then (if v_595 then (early_secret_42,binder_key_28) else fail-any) else fail-any)) in
                                        {2892}let v_597: bool = (not-caught-fail(v_596) && success?(1-proj-2-tuple(v_596))) in
                                        {2893}let kb_28: mac_key = (if v_597 then 2-proj-2-tuple(v_596) else caught-fail) in
                                        {2894}let es_40: bitstring = (if v_597 then 1-proj-2-tuple(v_596) else caught-fail) in
                                        {2895}let binders_9: bitstring = (if v_597 then catch-fail(hmac(@6_tls_h,kb_28,cur_log'_10)) else caught-fail) in
                                        {2896}let v_598: bool = not-caught-fail(binders_9) in
                                        {2897}let v_599: bitstring = catch-fail((if v_597 then (if v_598 then (client_psk_ext(id_31,binders_9),(psk_65,id_31,es_40,is_safe_24)) else fail-any) else fail-any)) in
                                        {2898}let v_600: bool = (not-caught-fail(v_599) && success?(1-proj-2-tuple(v_599))) in
                                        {2899}let psk_data_14: bitstring = (if v_600 then 2-proj-2-tuple(v_599) else caught-fail) in
                                        {2900}let psk_ext_26: preSharedKeyExt = (if v_600 then 1-proj-2-tuple(v_599) else caught-fail) in
                                        {2901}let o_offer_14: params = (if v_600 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_4,SNI(o_dom_5),o_ech_ext_6,empty_extra_ext,psk_ext_26) else caught-fail) in
                                        {2902}let (client_hello'_4: msg,cr'_4: bytes32,kex_data'_4: bitstring,psk_data'_11: bitstring) = (if v_600 then (CH(o_cr_6,o_offer_14),o_cr_6,kex_data_1,psk_data_14) else fail-any) in
                                        {2903}out(io, client_hello'_4);
                                        {2904}let cur_log_OU1_HRR_OU2_4: bitstring = (cur_log_OU1_HRR_1,client_hello'_4) in
                                        {2905}in(io, server_hello'_10: msg);
                                        {2906}let SH(sr'_4: bytes32,mode'_4: params) = server_hello'_10 in
                                        (
                                            {2907}if (sr'_4 = B32(HRR24,HRR8)) then
                                                {2908}out(io, unexpected_message)
                                            else
                                                {2909}let (x_188: bitstring,g_15: group) = kex_data'_4 in
                                                {2910}let (psk_offer_12: preSharedKey,id_offer_12: identityPsk,es_offer_12: bitstring,is_safe_offer_12: bool) = psk_data'_11 in
                                                {2911}event Client_PSKOffer(@6_id_client,psk_offer_12,id_offer_12,is_safe_offer_12);
                                                {2912}event Client_Rand_client(@6_id_client,cr'_4);
                                                {2913}event Client_DH_client(@6_id_client,dh_pub(g_15,x_188));
                                                {2914}event Client_server_domain(@6_id_client,o_dom);
                                                {2915}let SH(sr_20: bytes32,mode_14: params) = server_hello'_10 in
                                                {2916}event Client_Rand_server(@6_id_client,sr_20);
                                                {2917}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_15,gy_13: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_27: preSharedKeyExt) = mode_14 in
                                                (
                                                    {2918}let cur_log2_28: bitstring = (cur_log_OU1_HRR_OU2_4,server_hello'_10) in
                                                    {2919}event Client_DH_server(@6_id_client,gy_13);
                                                    {2920}let v_601: bool = (psk_ext_27 = empty_psk_ext) in
                                                    {2921}let psk_66: preSharedKey = (if v_601 then NoPsk else caught-fail) in
                                                    {2922}let s_66: bitstring = (if v_601 then zero else caught-fail) in
                                                    {2923}let k_64: bitstring = (if v_601 then catch-fail(psk2b(psk_66)) else caught-fail) in
                                                    {2924}let v_602: bool = not-caught-fail(k_64) in
                                                    {2925}let early_secret_43: bitstring = (if v_601 then catch-fail((if v_602 then hmac(@6_tls_h,s_66,k_64) else fail-any)) else caught-fail) in
                                                    {2926}let v_603: bool = not-caught-fail(early_secret_43) in
                                                    {2927}let l_166: label = (if v_603 then tls13_ext_res_binder else caught-fail) in
                                                    {2928}let m_55: bitstring = (if v_603 then zero else caught-fail) in
                                                    {2929}let h_156: bitstring = (if v_603 then catch-fail(hash(@6_tls_h,m_55)) else caught-fail) in
                                                    {2930}let v_604: bool = not-caught-fail(h_156) in
                                                    {2931}let x_189: bitstring = (if v_604 then (l_166,h_156) else caught-fail) in
                                                    {2932}let binder_key_29: bitstring = (if v_603 then catch-fail((if v_604 then hmac(@6_tls_h,early_secret_43,x_189) else fail-any)) else caught-fail) in
                                                    {2933}let v_605: bool = not-caught-fail(binder_key_29) in
                                                    {2934}let v_606: bitstring = (if v_601 then catch-fail((if v_603 then (if v_605 then (early_secret_43,binder_key_29) else fail-any) else fail-any)) else caught-fail) in
                                                    {2935}let v_607: bool = (not-caught-fail(v_606) && success?(1-proj-2-tuple(v_606))) in
                                                    {2936}let kb_29: mac_key = (if v_607 then 2-proj-2-tuple(v_606) else caught-fail) in
                                                    {2937}let es_41: bitstring = (if v_607 then 1-proj-2-tuple(v_606) else caught-fail) in
                                                    {2938}let v_608: bitstring = (if not(v_601) then catch-fail(psk_data'_11) else caught-fail) in
                                                    {2939}let v_609: bool = (not-caught-fail(v_608) && success?(1-proj-4-tuple(v_608))) in
                                                    {2940}let is_safe_25: bool = (if v_609 then 4-proj-4-tuple(v_608) else caught-fail) in
                                                    {2941}let es_42: bitstring = (if v_609 then 3-proj-4-tuple(v_608) else caught-fail) in
                                                    {2942}let id_32: identityPsk = (if v_609 then 2-proj-4-tuple(v_608) else caught-fail) in
                                                    {2943}let psk_67: preSharedKey = (if v_609 then 1-proj-4-tuple(v_608) else caught-fail) in
                                                    {2944}let (psk_68: preSharedKey,early_secret_44: bitstring,valid_12: bool,safe_psk_15: bool) = (if v_601 then (if v_607 then (NoPsk,es_41,true,false) else fail-any) else (if v_609 then (psk_67,es_42,((psk_67 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_27)),is_safe_25) else fail-any)) in
                                                    {2945}event Client_PSKChoosen(@6_id_client,psk_68,safe_psk_15);
                                                    {2946}if valid_12 then
                                                    (
                                                        {2947}let gxy_25: element = catch-fail(dh_decap_fun(g_15,gy_13,x_188)) in
                                                        {2948}let v_610: bool = not-caught-fail(gxy_25) in
                                                        {2949}new s_67[]: seed;
                                                        {2950}let gxy_26: element = (if v_610 then gxy_25 else dh_f(s_67)) in
                                                        {2951}event Client_DH_gxy(@6_id_client,gxy_26);
                                                        {2952}let l_167: label = tls13_derived in
                                                        {2953}let m_56: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {2954}let v_611: bool = not-caught-fail(m_56) in
                                                        {2955}let h_157: bitstring = (if v_611 then catch-fail(hash(@6_tls_h,m_56)) else caught-fail) in
                                                        {2956}let v_612: bool = not-caught-fail(h_157) in
                                                        {2957}let x_190: bitstring = (if v_612 then (l_167,h_157) else caught-fail) in
                                                        {2958}let extra_28: bitstring = catch-fail((if v_611 then (if v_612 then hmac(@6_tls_h,early_secret_44,x_190) else fail-any) else fail-any)) in
                                                        {2959}let v_613: bool = not-caught-fail(extra_28) in
                                                        {2960}let handshake_secret_13: bitstring = (if v_613 then hmac(@6_tls_h,extra_28,gxy_26) else fail-any) in
                                                        {2961}let l_168: label = tls13_derived in
                                                        {2962}let m_57: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {2963}let v_614: bool = not-caught-fail(m_57) in
                                                        {2964}let h_158: bitstring = (if v_614 then catch-fail(hash(@6_tls_h,m_57)) else caught-fail) in
                                                        {2965}let v_615: bool = not-caught-fail(h_158) in
                                                        {2966}let x_191: bitstring = (if v_615 then (l_168,h_158) else caught-fail) in
                                                        {2967}let extra_29: bitstring = catch-fail((if v_614 then (if v_615 then hmac(@6_tls_h,handshake_secret_13,x_191) else fail-any) else fail-any)) in
                                                        {2968}let v_616: bool = not-caught-fail(extra_29) in
                                                        {2969}let k_65: bitstring = (if v_616 then zero else caught-fail) in
                                                        {2970}let master_secret_33: bitstring = (if v_616 then catch-fail(hmac(@6_tls_h,handshake_secret_13,k_65)) else caught-fail) in
                                                        {2971}let v_617: bool = not-caught-fail(master_secret_33) in
                                                        {2972}let l_169: label = (if v_617 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {2973}let h_159: bitstring = (if v_617 then catch-fail(hash(@6_tls_h,cur_log2_28)) else caught-fail) in
                                                        {2974}let v_618: bool = not-caught-fail(h_159) in
                                                        {2975}let x_192: bitstring = (if v_618 then (l_169,h_159) else caught-fail) in
                                                        {2976}let client_hts_13: bitstring = (if v_617 then catch-fail((if v_618 then hmac(@6_tls_h,handshake_secret_13,x_192) else fail-any)) else caught-fail) in
                                                        {2977}let v_619: bool = not-caught-fail(client_hts_13) in
                                                        {2978}let l_170: label = (if v_619 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {2979}let h_160: bitstring = (if v_619 then catch-fail(hash(@6_tls_h,cur_log2_28)) else caught-fail) in
                                                        {2980}let v_620: bool = not-caught-fail(h_160) in
                                                        {2981}let x_193: bitstring = (if v_620 then (l_170,h_160) else caught-fail) in
                                                        {2982}let server_hts_13: bitstring = (if v_619 then catch-fail((if v_620 then hmac(@6_tls_h,handshake_secret_13,x_193) else fail-any)) else caught-fail) in
                                                        {2983}let v_621: bool = not-caught-fail(server_hts_13) in
                                                        {2984}let l_171: label = (if v_621 then tls13_key else caught-fail) in
                                                        {2985}let h_161: bitstring = (if v_621 then zero else caught-fail) in
                                                        {2986}let x_194: bitstring = (if v_621 then (l_171,h_161) else caught-fail) in
                                                        {2987}let client_wkh_13: bitstring = (if v_621 then catch-fail(hmac(@6_tls_h,client_hts_13,x_194)) else caught-fail) in
                                                        {2988}let v_622: bool = not-caught-fail(client_wkh_13) in
                                                        {2989}let l_172: label = (if v_622 then tls13_key else caught-fail) in
                                                        {2990}let h_162: bitstring = (if v_622 then zero else caught-fail) in
                                                        {2991}let x_195: bitstring = (if v_622 then (l_172,h_162) else caught-fail) in
                                                        {2992}let server_wkh_13: bitstring = (if v_622 then catch-fail(hmac(@6_tls_h,server_hts_13,x_195)) else caught-fail) in
                                                        {2993}let v_623: bool = not-caught-fail(server_wkh_13) in
                                                        {2994}let l_173: label = (if v_623 then tls13_finished else caught-fail) in
                                                        {2995}let h_163: bitstring = (if v_623 then zero else caught-fail) in
                                                        {2996}let x_196: bitstring = (if v_623 then (l_173,h_163) else caught-fail) in
                                                        {2997}let client_fk_13: bitstring = (if v_623 then catch-fail(hmac(@6_tls_h,client_hts_13,x_196)) else caught-fail) in
                                                        {2998}let v_624: bool = not-caught-fail(client_fk_13) in
                                                        {2999}let l_174: label = (if v_624 then tls13_finished else caught-fail) in
                                                        {3000}let h_164: bitstring = (if v_624 then zero else caught-fail) in
                                                        {3001}let x_197: bitstring = (if v_624 then (l_174,h_164) else caught-fail) in
                                                        {3002}let server_fk_13: bitstring = (if v_624 then catch-fail(hmac(@6_tls_h,server_hts_13,x_197)) else caught-fail) in
                                                        {3003}let v_625: bool = not-caught-fail(server_fk_13) in
                                                        {3004}let (master_secret_34: bitstring,chk_20: aead_key,shk_19: aead_key,cfin_20: mac_key,sfin_19: mac_key) = (if v_616 then (if v_617 then (if v_619 then (if v_621 then (if v_622 then (if v_623 then (if v_624 then (if v_625 then (master_secret_33,client_wkh_13,server_wkh_13,client_fk_13,server_fk_13) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {3005}event Client_chk(@6_id_client,chk_20);
                                                        {3006}event Client_shk(@6_id_client,shk_19);
                                                        {3007}event Client_cfin(@6_id_client,cfin_20);
                                                        {3008}event Client_sfin(@6_id_client,sfin_19);
                                                        {3009}in(io, enc_ee_msg_12: bitstring);
                                                        {3010}let ee_msg_13: msg = aead_dec(@6_tls_a,shk_19,0,zero,enc_ee_msg_12) in
                                                        {3011}let EE(ech_ee_12: echExt,extra_ee_12: extraExt) = ee_msg_13 in
                                                        {3012}let cur_log2_29: bitstring = (cur_log2_28,ee_msg_13) in
                                                        {3013}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_4,sr_20,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_68,safe_psk_15,@6_comp_psk,master_secret_34,chk_20,0,shk_19,1,cfin_20,sfin_19,cur_log2_29)))
                                                    )
                                                    else
                                                        {3014}out(io, illegal_parameter)
                                                )
                                                else
                                                    {3015}out(io, illegal_parameter)
                                        )
                                        else
                                            {3016}out(io, unexpected_message)
                                    )
                                    else
                                        {3166}get pre_shared_keys(c_dom'_6: domain,=o_dom_5,=@6_tls_h,id_33: identityPsk,psk_69: preSharedKey,idP_8: idProc,is_safe_26: bool) in
                                        {3017}event Selected_one_time_used_psk(@6_id_client,psk_69,is_safe_26);
                                        {3018}event Selected_psk(c_dom_5,c_dom'_6,idP_8,is_safe_26);
                                        {3019}event Selected_psk_no_missmatch(@6_id_client,o_dom_5,@6_tls_h,psk_69,id_33);
                                        {3020}event Selected_psk_with_ID(c_dom_5,c_dom'_6,id_33,idP_8,is_safe_26);
                                        {3021}let v_626: bitstring = (id_33,psk_69,is_safe_26) in
                                        {3022}let v_627: bool = success?(1-proj-3-tuple(v_626)) in
                                        {3023}let is_safe_27: bool = (if v_627 then 3-proj-3-tuple(v_626) else caught-fail) in
                                        {3024}let psk_70: preSharedKey = (if v_627 then 2-proj-3-tuple(v_626) else caught-fail) in
                                        {3025}let id_34: identityPsk = (if v_627 then 1-proj-3-tuple(v_626) else caught-fail) in
                                        {3026}let offer_11: params = (if v_627 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_4,SNI(o_dom_5),o_ech_ext_6,extra_27,trunc_client_psk_ext(id_34)) else caught-fail) in
                                        {3027}let cur_log'_11: bitstring = (if v_627 then (cur_log_OU1_HRR_1,CH(o_cr_6,offer_11)) else caught-fail) in
                                        {3028}let s_68: bitstring = (if v_627 then zero else caught-fail) in
                                        {3029}let k_66: bitstring = (if v_627 then catch-fail(psk2b(psk_70)) else caught-fail) in
                                        {3030}let v_628: bool = not-caught-fail(k_66) in
                                        {3031}let early_secret_45: bitstring = (if v_627 then catch-fail((if v_628 then hmac(@6_tls_h,s_68,k_66) else fail-any)) else caught-fail) in
                                        {3032}let v_629: bool = not-caught-fail(early_secret_45) in
                                        {3033}let l_175: label = (if v_629 then tls13_ext_res_binder else caught-fail) in
                                        {3034}let m_58: bitstring = (if v_629 then zero else caught-fail) in
                                        {3035}let h_165: bitstring = (if v_629 then catch-fail(hash(@6_tls_h,m_58)) else caught-fail) in
                                        {3036}let v_630: bool = not-caught-fail(h_165) in
                                        {3037}let x_198: bitstring = (if v_630 then (l_175,h_165) else caught-fail) in
                                        {3038}let binder_key_30: bitstring = (if v_629 then catch-fail((if v_630 then hmac(@6_tls_h,early_secret_45,x_198) else fail-any)) else caught-fail) in
                                        {3039}let v_631: bool = not-caught-fail(binder_key_30) in
                                        {3040}let v_632: bitstring = (if v_627 then catch-fail((if v_629 then (if v_631 then (early_secret_45,binder_key_30) else fail-any) else fail-any)) else caught-fail) in
                                        {3041}let v_633: bool = (not-caught-fail(v_632) && success?(1-proj-2-tuple(v_632))) in
                                        {3042}let kb_30: mac_key = (if v_633 then 2-proj-2-tuple(v_632) else caught-fail) in
                                        {3043}let es_43: bitstring = (if v_633 then 1-proj-2-tuple(v_632) else caught-fail) in
                                        {3044}let binders_10: bitstring = (if v_633 then catch-fail(hmac(@6_tls_h,kb_30,cur_log'_11)) else caught-fail) in
                                        {3045}let v_634: bool = not-caught-fail(binders_10) in
                                        {3046}let v_635: bitstring = catch-fail((if v_627 then (if v_633 then (if v_634 then (client_psk_ext(id_34,binders_10),(psk_70,id_34,es_43,is_safe_27)) else fail-any) else fail-any) else fail-any)) in
                                        {3047}let v_636: bool = (not-caught-fail(v_635) && success?(1-proj-2-tuple(v_635))) in
                                        {3048}let psk_data_15: bitstring = (if v_636 then 2-proj-2-tuple(v_635) else caught-fail) in
                                        {3049}let psk_ext_28: preSharedKeyExt = (if v_636 then 1-proj-2-tuple(v_635) else caught-fail) in
                                        {3050}let o_offer_15: params = (if v_636 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_4,SNI(o_dom_5),o_ech_ext_6,empty_extra_ext,psk_ext_28) else caught-fail) in
                                        {3051}let (client_hello'_5: msg,cr'_5: bytes32,kex_data'_5: bitstring,psk_data'_12: bitstring) = (if v_636 then (CH(o_cr_6,o_offer_15),o_cr_6,kex_data_1,psk_data_15) else fail-any) in
                                        {3052}out(io, client_hello'_5);
                                        {3053}let cur_log_OU1_HRR_OU2_5: bitstring = (cur_log_OU1_HRR_1,client_hello'_5) in
                                        {3054}in(io, server_hello'_11: msg);
                                        {3055}let SH(sr'_5: bytes32,mode'_5: params) = server_hello'_11 in
                                        (
                                            {3056}if (sr'_5 = B32(HRR24,HRR8)) then
                                                {3057}out(io, unexpected_message)
                                            else
                                                {3058}let (x_199: bitstring,g_16: group) = kex_data'_5 in
                                                {3059}let (psk_offer_13: preSharedKey,id_offer_13: identityPsk,es_offer_13: bitstring,is_safe_offer_13: bool) = psk_data'_12 in
                                                {3060}event Client_PSKOffer(@6_id_client,psk_offer_13,id_offer_13,is_safe_offer_13);
                                                {3061}event Client_Rand_client(@6_id_client,cr'_5);
                                                {3062}event Client_DH_client(@6_id_client,dh_pub(g_16,x_199));
                                                {3063}event Client_server_domain(@6_id_client,o_dom);
                                                {3064}let SH(sr_21: bytes32,mode_15: params) = server_hello'_11 in
                                                {3065}event Client_Rand_server(@6_id_client,sr_21);
                                                {3066}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_16,gy_14: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_29: preSharedKeyExt) = mode_15 in
                                                (
                                                    {3067}let cur_log2_30: bitstring = (cur_log_OU1_HRR_OU2_5,server_hello'_11) in
                                                    {3068}event Client_DH_server(@6_id_client,gy_14);
                                                    {3069}let v_637: bool = (psk_ext_29 = empty_psk_ext) in
                                                    {3070}let psk_71: preSharedKey = (if v_637 then NoPsk else caught-fail) in
                                                    {3071}let s_69: bitstring = (if v_637 then zero else caught-fail) in
                                                    {3072}let k_67: bitstring = (if v_637 then catch-fail(psk2b(psk_71)) else caught-fail) in
                                                    {3073}let v_638: bool = not-caught-fail(k_67) in
                                                    {3074}let early_secret_46: bitstring = (if v_637 then catch-fail((if v_638 then hmac(@6_tls_h,s_69,k_67) else fail-any)) else caught-fail) in
                                                    {3075}let v_639: bool = not-caught-fail(early_secret_46) in
                                                    {3076}let l_176: label = (if v_639 then tls13_ext_res_binder else caught-fail) in
                                                    {3077}let m_59: bitstring = (if v_639 then zero else caught-fail) in
                                                    {3078}let h_166: bitstring = (if v_639 then catch-fail(hash(@6_tls_h,m_59)) else caught-fail) in
                                                    {3079}let v_640: bool = not-caught-fail(h_166) in
                                                    {3080}let x_200: bitstring = (if v_640 then (l_176,h_166) else caught-fail) in
                                                    {3081}let binder_key_31: bitstring = (if v_639 then catch-fail((if v_640 then hmac(@6_tls_h,early_secret_46,x_200) else fail-any)) else caught-fail) in
                                                    {3082}let v_641: bool = not-caught-fail(binder_key_31) in
                                                    {3083}let v_642: bitstring = (if v_637 then catch-fail((if v_639 then (if v_641 then (early_secret_46,binder_key_31) else fail-any) else fail-any)) else caught-fail) in
                                                    {3084}let v_643: bool = (not-caught-fail(v_642) && success?(1-proj-2-tuple(v_642))) in
                                                    {3085}let kb_31: mac_key = (if v_643 then 2-proj-2-tuple(v_642) else caught-fail) in
                                                    {3086}let es_44: bitstring = (if v_643 then 1-proj-2-tuple(v_642) else caught-fail) in
                                                    {3087}let v_644: bitstring = (if not(v_637) then catch-fail(psk_data'_12) else caught-fail) in
                                                    {3088}let v_645: bool = (not-caught-fail(v_644) && success?(1-proj-4-tuple(v_644))) in
                                                    {3089}let is_safe_28: bool = (if v_645 then 4-proj-4-tuple(v_644) else caught-fail) in
                                                    {3090}let es_45: bitstring = (if v_645 then 3-proj-4-tuple(v_644) else caught-fail) in
                                                    {3091}let id_35: identityPsk = (if v_645 then 2-proj-4-tuple(v_644) else caught-fail) in
                                                    {3092}let psk_72: preSharedKey = (if v_645 then 1-proj-4-tuple(v_644) else caught-fail) in
                                                    {3093}let (psk_73: preSharedKey,early_secret_47: bitstring,valid_13: bool,safe_psk_16: bool) = (if v_637 then (if v_643 then (NoPsk,es_44,true,false) else fail-any) else (if v_645 then (psk_72,es_45,((psk_72 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_29)),is_safe_28) else fail-any)) in
                                                    {3094}event Client_PSKChoosen(@6_id_client,psk_73,safe_psk_16);
                                                    {3095}if valid_13 then
                                                    (
                                                        {3096}let gxy_27: element = catch-fail(dh_decap_fun(g_16,gy_14,x_199)) in
                                                        {3097}let v_646: bool = not-caught-fail(gxy_27) in
                                                        {3098}new s_70[]: seed;
                                                        {3099}let gxy_28: element = (if v_646 then gxy_27 else dh_f(s_70)) in
                                                        {3100}event Client_DH_gxy(@6_id_client,gxy_28);
                                                        {3101}let l_177: label = tls13_derived in
                                                        {3102}let m_60: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {3103}let v_647: bool = not-caught-fail(m_60) in
                                                        {3104}let h_167: bitstring = (if v_647 then catch-fail(hash(@6_tls_h,m_60)) else caught-fail) in
                                                        {3105}let v_648: bool = not-caught-fail(h_167) in
                                                        {3106}let x_201: bitstring = (if v_648 then (l_177,h_167) else caught-fail) in
                                                        {3107}let extra_30: bitstring = catch-fail((if v_647 then (if v_648 then hmac(@6_tls_h,early_secret_47,x_201) else fail-any) else fail-any)) in
                                                        {3108}let v_649: bool = not-caught-fail(extra_30) in
                                                        {3109}let handshake_secret_14: bitstring = (if v_649 then hmac(@6_tls_h,extra_30,gxy_28) else fail-any) in
                                                        {3110}let l_178: label = tls13_derived in
                                                        {3111}let m_61: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {3112}let v_650: bool = not-caught-fail(m_61) in
                                                        {3113}let h_168: bitstring = (if v_650 then catch-fail(hash(@6_tls_h,m_61)) else caught-fail) in
                                                        {3114}let v_651: bool = not-caught-fail(h_168) in
                                                        {3115}let x_202: bitstring = (if v_651 then (l_178,h_168) else caught-fail) in
                                                        {3116}let extra_31: bitstring = catch-fail((if v_650 then (if v_651 then hmac(@6_tls_h,handshake_secret_14,x_202) else fail-any) else fail-any)) in
                                                        {3117}let v_652: bool = not-caught-fail(extra_31) in
                                                        {3118}let k_68: bitstring = (if v_652 then zero else caught-fail) in
                                                        {3119}let master_secret_35: bitstring = (if v_652 then catch-fail(hmac(@6_tls_h,handshake_secret_14,k_68)) else caught-fail) in
                                                        {3120}let v_653: bool = not-caught-fail(master_secret_35) in
                                                        {3121}let l_179: label = (if v_653 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {3122}let h_169: bitstring = (if v_653 then catch-fail(hash(@6_tls_h,cur_log2_30)) else caught-fail) in
                                                        {3123}let v_654: bool = not-caught-fail(h_169) in
                                                        {3124}let x_203: bitstring = (if v_654 then (l_179,h_169) else caught-fail) in
                                                        {3125}let client_hts_14: bitstring = (if v_653 then catch-fail((if v_654 then hmac(@6_tls_h,handshake_secret_14,x_203) else fail-any)) else caught-fail) in
                                                        {3126}let v_655: bool = not-caught-fail(client_hts_14) in
                                                        {3127}let l_180: label = (if v_655 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {3128}let h_170: bitstring = (if v_655 then catch-fail(hash(@6_tls_h,cur_log2_30)) else caught-fail) in
                                                        {3129}let v_656: bool = not-caught-fail(h_170) in
                                                        {3130}let x_204: bitstring = (if v_656 then (l_180,h_170) else caught-fail) in
                                                        {3131}let server_hts_14: bitstring = (if v_655 then catch-fail((if v_656 then hmac(@6_tls_h,handshake_secret_14,x_204) else fail-any)) else caught-fail) in
                                                        {3132}let v_657: bool = not-caught-fail(server_hts_14) in
                                                        {3133}let l_181: label = (if v_657 then tls13_key else caught-fail) in
                                                        {3134}let h_171: bitstring = (if v_657 then zero else caught-fail) in
                                                        {3135}let x_205: bitstring = (if v_657 then (l_181,h_171) else caught-fail) in
                                                        {3136}let client_wkh_14: bitstring = (if v_657 then catch-fail(hmac(@6_tls_h,client_hts_14,x_205)) else caught-fail) in
                                                        {3137}let v_658: bool = not-caught-fail(client_wkh_14) in
                                                        {3138}let l_182: label = (if v_658 then tls13_key else caught-fail) in
                                                        {3139}let h_172: bitstring = (if v_658 then zero else caught-fail) in
                                                        {3140}let x_206: bitstring = (if v_658 then (l_182,h_172) else caught-fail) in
                                                        {3141}let server_wkh_14: bitstring = (if v_658 then catch-fail(hmac(@6_tls_h,server_hts_14,x_206)) else caught-fail) in
                                                        {3142}let v_659: bool = not-caught-fail(server_wkh_14) in
                                                        {3143}let l_183: label = (if v_659 then tls13_finished else caught-fail) in
                                                        {3144}let h_173: bitstring = (if v_659 then zero else caught-fail) in
                                                        {3145}let x_207: bitstring = (if v_659 then (l_183,h_173) else caught-fail) in
                                                        {3146}let client_fk_14: bitstring = (if v_659 then catch-fail(hmac(@6_tls_h,client_hts_14,x_207)) else caught-fail) in
                                                        {3147}let v_660: bool = not-caught-fail(client_fk_14) in
                                                        {3148}let l_184: label = (if v_660 then tls13_finished else caught-fail) in
                                                        {3149}let h_174: bitstring = (if v_660 then zero else caught-fail) in
                                                        {3150}let x_208: bitstring = (if v_660 then (l_184,h_174) else caught-fail) in
                                                        {3151}let server_fk_14: bitstring = (if v_660 then catch-fail(hmac(@6_tls_h,server_hts_14,x_208)) else caught-fail) in
                                                        {3152}let v_661: bool = not-caught-fail(server_fk_14) in
                                                        {3153}let (master_secret_36: bitstring,chk_21: aead_key,shk_20: aead_key,cfin_21: mac_key,sfin_20: mac_key) = (if v_652 then (if v_653 then (if v_655 then (if v_657 then (if v_658 then (if v_659 then (if v_660 then (if v_661 then (master_secret_35,client_wkh_14,server_wkh_14,client_fk_14,server_fk_14) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {3154}event Client_chk(@6_id_client,chk_21);
                                                        {3155}event Client_shk(@6_id_client,shk_20);
                                                        {3156}event Client_cfin(@6_id_client,cfin_21);
                                                        {3157}event Client_sfin(@6_id_client,sfin_20);
                                                        {3158}in(io, enc_ee_msg_13: bitstring);
                                                        {3159}let ee_msg_14: msg = aead_dec(@6_tls_a,shk_20,0,zero,enc_ee_msg_13) in
                                                        {3160}let EE(ech_ee_13: echExt,extra_ee_13: extraExt) = ee_msg_14 in
                                                        {3161}let cur_log2_31: bitstring = (cur_log2_30,ee_msg_14) in
                                                        {3162}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_5,sr_21,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_73,safe_psk_16,@6_comp_psk,master_secret_36,chk_21,0,shk_20,1,cfin_21,sfin_20,cur_log2_31)))
                                                    )
                                                    else
                                                        {3163}out(io, illegal_parameter)
                                                )
                                                else
                                                    {3164}out(io, illegal_parameter)
                                        )
                                        else
                                            {3165}out(io, unexpected_message)
                                )
                                else
                                    {3167}let psk_74: preSharedKey = NoPsk in
                                    {3168}let s_71: bitstring = zero in
                                    {3169}let k_69: bitstring = catch-fail(psk2b(psk_74)) in
                                    {3170}let v_662: bool = not-caught-fail(k_69) in
                                    {3171}let early_secret_48: bitstring = catch-fail((if v_662 then hmac(@6_tls_h,s_71,k_69) else fail-any)) in
                                    {3172}let v_663: bool = not-caught-fail(early_secret_48) in
                                    {3173}let l_185: label = (if v_663 then tls13_ext_res_binder else caught-fail) in
                                    {3174}let m_62: bitstring = (if v_663 then zero else caught-fail) in
                                    {3175}let h_175: bitstring = (if v_663 then catch-fail(hash(@6_tls_h,m_62)) else caught-fail) in
                                    {3176}let v_664: bool = not-caught-fail(h_175) in
                                    {3177}let x_209: bitstring = (if v_664 then (l_185,h_175) else caught-fail) in
                                    {3178}let binder_key_32: bitstring = (if v_663 then catch-fail((if v_664 then hmac(@6_tls_h,early_secret_48,x_209) else fail-any)) else caught-fail) in
                                    {3179}let v_665: bool = not-caught-fail(binder_key_32) in
                                    {3180}let v_666: bitstring = catch-fail((if v_663 then (if v_665 then (early_secret_48,binder_key_32) else fail-any) else fail-any)) in
                                    {3181}let v_667: bool = (not-caught-fail(v_666) && success?(1-proj-2-tuple(v_666))) in
                                    {3182}let kb_32: mac_key = (if v_667 then 2-proj-2-tuple(v_666) else caught-fail) in
                                    {3183}let es_46: bitstring = (if v_667 then 1-proj-2-tuple(v_666) else caught-fail) in
                                    {3184}let v_668: bitstring = catch-fail((if v_667 then (empty_psk_ext,(NoPsk,zero,es_46,false)) else fail-any)) in
                                    {3185}let v_669: bool = (not-caught-fail(v_668) && success?(1-proj-2-tuple(v_668))) in
                                    {3186}let psk_data_16: bitstring = (if v_669 then 2-proj-2-tuple(v_668) else caught-fail) in
                                    {3187}let psk_ext_30: preSharedKeyExt = (if v_669 then 1-proj-2-tuple(v_668) else caught-fail) in
                                    {3188}let o_offer_16: params = (if v_669 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_4,SNI(o_dom_5),o_ech_ext_6,empty_extra_ext,psk_ext_30) else caught-fail) in
                                    {3189}let (client_hello'_6: msg,cr'_6: bytes32,kex_data'_6: bitstring,psk_data'_13: bitstring) = (if v_669 then (CH(o_cr_6,o_offer_16),o_cr_6,kex_data_1,psk_data_16) else fail-any) in
                                    {3190}out(io, client_hello'_6);
                                    {3191}let cur_log_OU1_HRR_OU2_6: bitstring = (cur_log_OU1_HRR_1,client_hello'_6) in
                                    {3192}in(io, server_hello'_12: msg);
                                    {3193}let SH(sr'_6: bytes32,mode'_6: params) = server_hello'_12 in
                                    (
                                        {3194}if (sr'_6 = B32(HRR24,HRR8)) then
                                            {3195}out(io, unexpected_message)
                                        else
                                            {3196}let (x_210: bitstring,g_17: group) = kex_data'_6 in
                                            {3197}let (psk_offer_14: preSharedKey,id_offer_14: identityPsk,es_offer_14: bitstring,is_safe_offer_14: bool) = psk_data'_13 in
                                            {3198}event Client_PSKOffer(@6_id_client,psk_offer_14,id_offer_14,is_safe_offer_14);
                                            {3199}event Client_Rand_client(@6_id_client,cr'_6);
                                            {3200}event Client_DH_client(@6_id_client,dh_pub(g_17,x_210));
                                            {3201}event Client_server_domain(@6_id_client,o_dom);
                                            {3202}let SH(sr_22: bytes32,mode_16: params) = server_hello'_12 in
                                            {3203}event Client_Rand_server(@6_id_client,sr_22);
                                            {3204}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_17,gy_15: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_31: preSharedKeyExt) = mode_16 in
                                            (
                                                {3205}let cur_log2_32: bitstring = (cur_log_OU1_HRR_OU2_6,server_hello'_12) in
                                                {3206}event Client_DH_server(@6_id_client,gy_15);
                                                {3207}let v_670: bool = (psk_ext_31 = empty_psk_ext) in
                                                {3208}let psk_75: preSharedKey = (if v_670 then NoPsk else caught-fail) in
                                                {3209}let s_72: bitstring = (if v_670 then zero else caught-fail) in
                                                {3210}let k_70: bitstring = (if v_670 then catch-fail(psk2b(psk_75)) else caught-fail) in
                                                {3211}let v_671: bool = not-caught-fail(k_70) in
                                                {3212}let early_secret_49: bitstring = (if v_670 then catch-fail((if v_671 then hmac(@6_tls_h,s_72,k_70) else fail-any)) else caught-fail) in
                                                {3213}let v_672: bool = not-caught-fail(early_secret_49) in
                                                {3214}let l_186: label = (if v_672 then tls13_ext_res_binder else caught-fail) in
                                                {3215}let m_63: bitstring = (if v_672 then zero else caught-fail) in
                                                {3216}let h_176: bitstring = (if v_672 then catch-fail(hash(@6_tls_h,m_63)) else caught-fail) in
                                                {3217}let v_673: bool = not-caught-fail(h_176) in
                                                {3218}let x_211: bitstring = (if v_673 then (l_186,h_176) else caught-fail) in
                                                {3219}let binder_key_33: bitstring = (if v_672 then catch-fail((if v_673 then hmac(@6_tls_h,early_secret_49,x_211) else fail-any)) else caught-fail) in
                                                {3220}let v_674: bool = not-caught-fail(binder_key_33) in
                                                {3221}let v_675: bitstring = (if v_670 then catch-fail((if v_672 then (if v_674 then (early_secret_49,binder_key_33) else fail-any) else fail-any)) else caught-fail) in
                                                {3222}let v_676: bool = (not-caught-fail(v_675) && success?(1-proj-2-tuple(v_675))) in
                                                {3223}let kb_33: mac_key = (if v_676 then 2-proj-2-tuple(v_675) else caught-fail) in
                                                {3224}let es_47: bitstring = (if v_676 then 1-proj-2-tuple(v_675) else caught-fail) in
                                                {3225}let v_677: bitstring = (if not(v_670) then catch-fail(psk_data'_13) else caught-fail) in
                                                {3226}let v_678: bool = (not-caught-fail(v_677) && success?(1-proj-4-tuple(v_677))) in
                                                {3227}let is_safe_29: bool = (if v_678 then 4-proj-4-tuple(v_677) else caught-fail) in
                                                {3228}let es_48: bitstring = (if v_678 then 3-proj-4-tuple(v_677) else caught-fail) in
                                                {3229}let id_36: identityPsk = (if v_678 then 2-proj-4-tuple(v_677) else caught-fail) in
                                                {3230}let psk_76: preSharedKey = (if v_678 then 1-proj-4-tuple(v_677) else caught-fail) in
                                                {3231}let (psk_77: preSharedKey,early_secret_50: bitstring,valid_14: bool,safe_psk_17: bool) = (if v_670 then (if v_676 then (NoPsk,es_47,true,false) else fail-any) else (if v_678 then (psk_76,es_48,((psk_76 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_31)),is_safe_29) else fail-any)) in
                                                {3232}event Client_PSKChoosen(@6_id_client,psk_77,safe_psk_17);
                                                {3233}if valid_14 then
                                                (
                                                    {3234}let gxy_29: element = catch-fail(dh_decap_fun(g_17,gy_15,x_210)) in
                                                    {3235}let v_679: bool = not-caught-fail(gxy_29) in
                                                    {3236}new s_73[]: seed;
                                                    {3237}let gxy_30: element = (if v_679 then gxy_29 else dh_f(s_73)) in
                                                    {3238}event Client_DH_gxy(@6_id_client,gxy_30);
                                                    {3239}let l_187: label = tls13_derived in
                                                    {3240}let m_64: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {3241}let v_680: bool = not-caught-fail(m_64) in
                                                    {3242}let h_177: bitstring = (if v_680 then catch-fail(hash(@6_tls_h,m_64)) else caught-fail) in
                                                    {3243}let v_681: bool = not-caught-fail(h_177) in
                                                    {3244}let x_212: bitstring = (if v_681 then (l_187,h_177) else caught-fail) in
                                                    {3245}let extra_32: bitstring = catch-fail((if v_680 then (if v_681 then hmac(@6_tls_h,early_secret_50,x_212) else fail-any) else fail-any)) in
                                                    {3246}let v_682: bool = not-caught-fail(extra_32) in
                                                    {3247}let handshake_secret_15: bitstring = (if v_682 then hmac(@6_tls_h,extra_32,gxy_30) else fail-any) in
                                                    {3248}let l_188: label = tls13_derived in
                                                    {3249}let m_65: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {3250}let v_683: bool = not-caught-fail(m_65) in
                                                    {3251}let h_178: bitstring = (if v_683 then catch-fail(hash(@6_tls_h,m_65)) else caught-fail) in
                                                    {3252}let v_684: bool = not-caught-fail(h_178) in
                                                    {3253}let x_213: bitstring = (if v_684 then (l_188,h_178) else caught-fail) in
                                                    {3254}let extra_33: bitstring = catch-fail((if v_683 then (if v_684 then hmac(@6_tls_h,handshake_secret_15,x_213) else fail-any) else fail-any)) in
                                                    {3255}let v_685: bool = not-caught-fail(extra_33) in
                                                    {3256}let k_71: bitstring = (if v_685 then zero else caught-fail) in
                                                    {3257}let master_secret_37: bitstring = (if v_685 then catch-fail(hmac(@6_tls_h,handshake_secret_15,k_71)) else caught-fail) in
                                                    {3258}let v_686: bool = not-caught-fail(master_secret_37) in
                                                    {3259}let l_189: label = (if v_686 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {3260}let h_179: bitstring = (if v_686 then catch-fail(hash(@6_tls_h,cur_log2_32)) else caught-fail) in
                                                    {3261}let v_687: bool = not-caught-fail(h_179) in
                                                    {3262}let x_214: bitstring = (if v_687 then (l_189,h_179) else caught-fail) in
                                                    {3263}let client_hts_15: bitstring = (if v_686 then catch-fail((if v_687 then hmac(@6_tls_h,handshake_secret_15,x_214) else fail-any)) else caught-fail) in
                                                    {3264}let v_688: bool = not-caught-fail(client_hts_15) in
                                                    {3265}let l_190: label = (if v_688 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {3266}let h_180: bitstring = (if v_688 then catch-fail(hash(@6_tls_h,cur_log2_32)) else caught-fail) in
                                                    {3267}let v_689: bool = not-caught-fail(h_180) in
                                                    {3268}let x_215: bitstring = (if v_689 then (l_190,h_180) else caught-fail) in
                                                    {3269}let server_hts_15: bitstring = (if v_688 then catch-fail((if v_689 then hmac(@6_tls_h,handshake_secret_15,x_215) else fail-any)) else caught-fail) in
                                                    {3270}let v_690: bool = not-caught-fail(server_hts_15) in
                                                    {3271}let l_191: label = (if v_690 then tls13_key else caught-fail) in
                                                    {3272}let h_181: bitstring = (if v_690 then zero else caught-fail) in
                                                    {3273}let x_216: bitstring = (if v_690 then (l_191,h_181) else caught-fail) in
                                                    {3274}let client_wkh_15: bitstring = (if v_690 then catch-fail(hmac(@6_tls_h,client_hts_15,x_216)) else caught-fail) in
                                                    {3275}let v_691: bool = not-caught-fail(client_wkh_15) in
                                                    {3276}let l_192: label = (if v_691 then tls13_key else caught-fail) in
                                                    {3277}let h_182: bitstring = (if v_691 then zero else caught-fail) in
                                                    {3278}let x_217: bitstring = (if v_691 then (l_192,h_182) else caught-fail) in
                                                    {3279}let server_wkh_15: bitstring = (if v_691 then catch-fail(hmac(@6_tls_h,server_hts_15,x_217)) else caught-fail) in
                                                    {3280}let v_692: bool = not-caught-fail(server_wkh_15) in
                                                    {3281}let l_193: label = (if v_692 then tls13_finished else caught-fail) in
                                                    {3282}let h_183: bitstring = (if v_692 then zero else caught-fail) in
                                                    {3283}let x_218: bitstring = (if v_692 then (l_193,h_183) else caught-fail) in
                                                    {3284}let client_fk_15: bitstring = (if v_692 then catch-fail(hmac(@6_tls_h,client_hts_15,x_218)) else caught-fail) in
                                                    {3285}let v_693: bool = not-caught-fail(client_fk_15) in
                                                    {3286}let l_194: label = (if v_693 then tls13_finished else caught-fail) in
                                                    {3287}let h_184: bitstring = (if v_693 then zero else caught-fail) in
                                                    {3288}let x_219: bitstring = (if v_693 then (l_194,h_184) else caught-fail) in
                                                    {3289}let server_fk_15: bitstring = (if v_693 then catch-fail(hmac(@6_tls_h,server_hts_15,x_219)) else caught-fail) in
                                                    {3290}let v_694: bool = not-caught-fail(server_fk_15) in
                                                    {3291}let (master_secret_38: bitstring,chk_22: aead_key,shk_21: aead_key,cfin_22: mac_key,sfin_21: mac_key) = (if v_685 then (if v_686 then (if v_688 then (if v_690 then (if v_691 then (if v_692 then (if v_693 then (if v_694 then (master_secret_37,client_wkh_15,server_wkh_15,client_fk_15,server_fk_15) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {3292}event Client_chk(@6_id_client,chk_22);
                                                    {3293}event Client_shk(@6_id_client,shk_21);
                                                    {3294}event Client_cfin(@6_id_client,cfin_22);
                                                    {3295}event Client_sfin(@6_id_client,sfin_21);
                                                    {3296}in(io, enc_ee_msg_14: bitstring);
                                                    {3297}let ee_msg_15: msg = aead_dec(@6_tls_a,shk_21,0,zero,enc_ee_msg_14) in
                                                    {3298}let EE(ech_ee_14: echExt,extra_ee_14: extraExt) = ee_msg_15 in
                                                    {3299}let cur_log2_33: bitstring = (cur_log2_32,ee_msg_15) in
                                                    {3300}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_6,sr_22,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_77,safe_psk_17,@6_comp_psk,master_secret_38,chk_22,0,shk_21,1,cfin_22,sfin_21,cur_log2_33)))
                                                )
                                                else
                                                    {3301}out(io, illegal_parameter)
                                            )
                                            else
                                                {3302}out(io, illegal_parameter)
                                    )
                                    else
                                        {3303}out(io, unexpected_message)
                            )
                            else
                                {3304}let psk_78: preSharedKey = NoPsk in
                                {3305}let s_74: bitstring = zero in
                                {3306}let k_72: bitstring = catch-fail(psk2b(psk_78)) in
                                {3307}let v_695: bool = not-caught-fail(k_72) in
                                {3308}let early_secret_51: bitstring = catch-fail((if v_695 then hmac(@6_tls_h,s_74,k_72) else fail-any)) in
                                {3309}let v_696: bool = not-caught-fail(early_secret_51) in
                                {3310}let l_195: label = (if v_696 then tls13_ext_res_binder else caught-fail) in
                                {3311}let m_66: bitstring = (if v_696 then zero else caught-fail) in
                                {3312}let h_185: bitstring = (if v_696 then catch-fail(hash(@6_tls_h,m_66)) else caught-fail) in
                                {3313}let v_697: bool = not-caught-fail(h_185) in
                                {3314}let x_220: bitstring = (if v_697 then (l_195,h_185) else caught-fail) in
                                {3315}let binder_key_34: bitstring = (if v_696 then catch-fail((if v_697 then hmac(@6_tls_h,early_secret_51,x_220) else fail-any)) else caught-fail) in
                                {3316}let v_698: bool = not-caught-fail(binder_key_34) in
                                {3317}let v_699: bitstring = catch-fail((if v_696 then (if v_698 then (early_secret_51,binder_key_34) else fail-any) else fail-any)) in
                                {3318}let v_700: bool = (not-caught-fail(v_699) && success?(1-proj-2-tuple(v_699))) in
                                {3319}let kb_34: mac_key = (if v_700 then 2-proj-2-tuple(v_699) else caught-fail) in
                                {3320}let es_49: bitstring = (if v_700 then 1-proj-2-tuple(v_699) else caught-fail) in
                                {3321}let v_701: preSharedKeyExt = (if v_700 then catch-fail(o_psk_ext_6) else caught-fail) in
                                {3322}let v_702: bool = (not-caught-fail(v_701) && success?(1-proj-client_psk_ext(v_701))) in
                                {3323}let fake_binder_9: bitstring = (if v_702 then 2-proj-client_psk_ext(v_701) else caught-fail) in
                                {3324}let fake_id_9: identityPsk = (if v_702 then 1-proj-client_psk_ext(v_701) else caught-fail) in
                                {3325}new fake_binder'_1[]: bitstring;
                                {3326}let v_703: bitstring = catch-fail((if v_700 then (if v_702 then (client_psk_ext(fake_id_9,fake_binder'_1),(NoPsk,zero,es_49,false)) else (empty_psk_ext,(NoPsk,zero,es_49,false))) else fail-any)) in
                                {3327}let v_704: bool = (not-caught-fail(v_703) && success?(1-proj-2-tuple(v_703))) in
                                {3328}let psk_data_17: bitstring = (if v_704 then 2-proj-2-tuple(v_703) else caught-fail) in
                                {3329}let psk_ext_32: preSharedKeyExt = (if v_704 then 1-proj-2-tuple(v_703) else caught-fail) in
                                {3330}let o_offer_17: params = (if v_704 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_4,SNI(o_dom_5),o_ech_ext_6,empty_extra_ext,psk_ext_32) else caught-fail) in
                                {3331}let (client_hello'_7: msg,cr'_7: bytes32,kex_data'_7: bitstring,psk_data'_14: bitstring) = (if v_704 then (CH(o_cr_6,o_offer_17),o_cr_6,kex_data_1,psk_data_17) else fail-any) in
                                {3332}out(io, client_hello'_7);
                                {3333}let cur_log_OU1_HRR_OU2_7: bitstring = (cur_log_OU1_HRR_1,client_hello'_7) in
                                {3334}in(io, server_hello'_13: msg);
                                {3335}let SH(sr'_7: bytes32,mode'_7: params) = server_hello'_13 in
                                (
                                    {3336}if (sr'_7 = B32(HRR24,HRR8)) then
                                        {3337}out(io, unexpected_message)
                                    else
                                        {3338}let (x_221: bitstring,g_18: group) = kex_data'_7 in
                                        {3339}let (psk_offer_15: preSharedKey,id_offer_15: identityPsk,es_offer_15: bitstring,is_safe_offer_15: bool) = psk_data'_14 in
                                        {3340}event Client_PSKOffer(@6_id_client,psk_offer_15,id_offer_15,is_safe_offer_15);
                                        {3341}event Client_Rand_client(@6_id_client,cr'_7);
                                        {3342}event Client_DH_client(@6_id_client,dh_pub(g_18,x_221));
                                        {3343}event Client_server_domain(@6_id_client,o_dom);
                                        {3344}let SH(sr_23: bytes32,mode_17: params) = server_hello'_13 in
                                        {3345}event Client_Rand_server(@6_id_client,sr_23);
                                        {3346}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_18,gy_16: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_33: preSharedKeyExt) = mode_17 in
                                        (
                                            {3347}let cur_log2_34: bitstring = (cur_log_OU1_HRR_OU2_7,server_hello'_13) in
                                            {3348}event Client_DH_server(@6_id_client,gy_16);
                                            {3349}let v_705: bool = (psk_ext_33 = empty_psk_ext) in
                                            {3350}let psk_79: preSharedKey = (if v_705 then NoPsk else caught-fail) in
                                            {3351}let s_75: bitstring = (if v_705 then zero else caught-fail) in
                                            {3352}let k_73: bitstring = (if v_705 then catch-fail(psk2b(psk_79)) else caught-fail) in
                                            {3353}let v_706: bool = not-caught-fail(k_73) in
                                            {3354}let early_secret_52: bitstring = (if v_705 then catch-fail((if v_706 then hmac(@6_tls_h,s_75,k_73) else fail-any)) else caught-fail) in
                                            {3355}let v_707: bool = not-caught-fail(early_secret_52) in
                                            {3356}let l_196: label = (if v_707 then tls13_ext_res_binder else caught-fail) in
                                            {3357}let m_67: bitstring = (if v_707 then zero else caught-fail) in
                                            {3358}let h_186: bitstring = (if v_707 then catch-fail(hash(@6_tls_h,m_67)) else caught-fail) in
                                            {3359}let v_708: bool = not-caught-fail(h_186) in
                                            {3360}let x_222: bitstring = (if v_708 then (l_196,h_186) else caught-fail) in
                                            {3361}let binder_key_35: bitstring = (if v_707 then catch-fail((if v_708 then hmac(@6_tls_h,early_secret_52,x_222) else fail-any)) else caught-fail) in
                                            {3362}let v_709: bool = not-caught-fail(binder_key_35) in
                                            {3363}let v_710: bitstring = (if v_705 then catch-fail((if v_707 then (if v_709 then (early_secret_52,binder_key_35) else fail-any) else fail-any)) else caught-fail) in
                                            {3364}let v_711: bool = (not-caught-fail(v_710) && success?(1-proj-2-tuple(v_710))) in
                                            {3365}let kb_35: mac_key = (if v_711 then 2-proj-2-tuple(v_710) else caught-fail) in
                                            {3366}let es_50: bitstring = (if v_711 then 1-proj-2-tuple(v_710) else caught-fail) in
                                            {3367}let v_712: bitstring = (if not(v_705) then catch-fail(psk_data'_14) else caught-fail) in
                                            {3368}let v_713: bool = (not-caught-fail(v_712) && success?(1-proj-4-tuple(v_712))) in
                                            {3369}let is_safe_30: bool = (if v_713 then 4-proj-4-tuple(v_712) else caught-fail) in
                                            {3370}let es_51: bitstring = (if v_713 then 3-proj-4-tuple(v_712) else caught-fail) in
                                            {3371}let id_37: identityPsk = (if v_713 then 2-proj-4-tuple(v_712) else caught-fail) in
                                            {3372}let psk_80: preSharedKey = (if v_713 then 1-proj-4-tuple(v_712) else caught-fail) in
                                            {3373}let (psk_81: preSharedKey,early_secret_53: bitstring,valid_15: bool,safe_psk_18: bool) = (if v_705 then (if v_711 then (NoPsk,es_50,true,false) else fail-any) else (if v_713 then (psk_80,es_51,((psk_80 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_33)),is_safe_30) else fail-any)) in
                                            {3374}event Client_PSKChoosen(@6_id_client,psk_81,safe_psk_18);
                                            {3375}if valid_15 then
                                            (
                                                {3376}let gxy_31: element = catch-fail(dh_decap_fun(g_18,gy_16,x_221)) in
                                                {3377}let v_714: bool = not-caught-fail(gxy_31) in
                                                {3378}new s_76[]: seed;
                                                {3379}let gxy_32: element = (if v_714 then gxy_31 else dh_f(s_76)) in
                                                {3380}event Client_DH_gxy(@6_id_client,gxy_32);
                                                {3381}let l_197: label = tls13_derived in
                                                {3382}let m_68: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                {3383}let v_715: bool = not-caught-fail(m_68) in
                                                {3384}let h_187: bitstring = (if v_715 then catch-fail(hash(@6_tls_h,m_68)) else caught-fail) in
                                                {3385}let v_716: bool = not-caught-fail(h_187) in
                                                {3386}let x_223: bitstring = (if v_716 then (l_197,h_187) else caught-fail) in
                                                {3387}let extra_34: bitstring = catch-fail((if v_715 then (if v_716 then hmac(@6_tls_h,early_secret_53,x_223) else fail-any) else fail-any)) in
                                                {3388}let v_717: bool = not-caught-fail(extra_34) in
                                                {3389}let handshake_secret_16: bitstring = (if v_717 then hmac(@6_tls_h,extra_34,gxy_32) else fail-any) in
                                                {3390}let l_198: label = tls13_derived in
                                                {3391}let m_69: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                {3392}let v_718: bool = not-caught-fail(m_69) in
                                                {3393}let h_188: bitstring = (if v_718 then catch-fail(hash(@6_tls_h,m_69)) else caught-fail) in
                                                {3394}let v_719: bool = not-caught-fail(h_188) in
                                                {3395}let x_224: bitstring = (if v_719 then (l_198,h_188) else caught-fail) in
                                                {3396}let extra_35: bitstring = catch-fail((if v_718 then (if v_719 then hmac(@6_tls_h,handshake_secret_16,x_224) else fail-any) else fail-any)) in
                                                {3397}let v_720: bool = not-caught-fail(extra_35) in
                                                {3398}let k_74: bitstring = (if v_720 then zero else caught-fail) in
                                                {3399}let master_secret_39: bitstring = (if v_720 then catch-fail(hmac(@6_tls_h,handshake_secret_16,k_74)) else caught-fail) in
                                                {3400}let v_721: bool = not-caught-fail(master_secret_39) in
                                                {3401}let l_199: label = (if v_721 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {3402}let h_189: bitstring = (if v_721 then catch-fail(hash(@6_tls_h,cur_log2_34)) else caught-fail) in
                                                {3403}let v_722: bool = not-caught-fail(h_189) in
                                                {3404}let x_225: bitstring = (if v_722 then (l_199,h_189) else caught-fail) in
                                                {3405}let client_hts_16: bitstring = (if v_721 then catch-fail((if v_722 then hmac(@6_tls_h,handshake_secret_16,x_225) else fail-any)) else caught-fail) in
                                                {3406}let v_723: bool = not-caught-fail(client_hts_16) in
                                                {3407}let l_200: label = (if v_723 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {3408}let h_190: bitstring = (if v_723 then catch-fail(hash(@6_tls_h,cur_log2_34)) else caught-fail) in
                                                {3409}let v_724: bool = not-caught-fail(h_190) in
                                                {3410}let x_226: bitstring = (if v_724 then (l_200,h_190) else caught-fail) in
                                                {3411}let server_hts_16: bitstring = (if v_723 then catch-fail((if v_724 then hmac(@6_tls_h,handshake_secret_16,x_226) else fail-any)) else caught-fail) in
                                                {3412}let v_725: bool = not-caught-fail(server_hts_16) in
                                                {3413}let l_201: label = (if v_725 then tls13_key else caught-fail) in
                                                {3414}let h_191: bitstring = (if v_725 then zero else caught-fail) in
                                                {3415}let x_227: bitstring = (if v_725 then (l_201,h_191) else caught-fail) in
                                                {3416}let client_wkh_16: bitstring = (if v_725 then catch-fail(hmac(@6_tls_h,client_hts_16,x_227)) else caught-fail) in
                                                {3417}let v_726: bool = not-caught-fail(client_wkh_16) in
                                                {3418}let l_202: label = (if v_726 then tls13_key else caught-fail) in
                                                {3419}let h_192: bitstring = (if v_726 then zero else caught-fail) in
                                                {3420}let x_228: bitstring = (if v_726 then (l_202,h_192) else caught-fail) in
                                                {3421}let server_wkh_16: bitstring = (if v_726 then catch-fail(hmac(@6_tls_h,server_hts_16,x_228)) else caught-fail) in
                                                {3422}let v_727: bool = not-caught-fail(server_wkh_16) in
                                                {3423}let l_203: label = (if v_727 then tls13_finished else caught-fail) in
                                                {3424}let h_193: bitstring = (if v_727 then zero else caught-fail) in
                                                {3425}let x_229: bitstring = (if v_727 then (l_203,h_193) else caught-fail) in
                                                {3426}let client_fk_16: bitstring = (if v_727 then catch-fail(hmac(@6_tls_h,client_hts_16,x_229)) else caught-fail) in
                                                {3427}let v_728: bool = not-caught-fail(client_fk_16) in
                                                {3428}let l_204: label = (if v_728 then tls13_finished else caught-fail) in
                                                {3429}let h_194: bitstring = (if v_728 then zero else caught-fail) in
                                                {3430}let x_230: bitstring = (if v_728 then (l_204,h_194) else caught-fail) in
                                                {3431}let server_fk_16: bitstring = (if v_728 then catch-fail(hmac(@6_tls_h,server_hts_16,x_230)) else caught-fail) in
                                                {3432}let v_729: bool = not-caught-fail(server_fk_16) in
                                                {3433}let (master_secret_40: bitstring,chk_23: aead_key,shk_22: aead_key,cfin_23: mac_key,sfin_22: mac_key) = (if v_720 then (if v_721 then (if v_723 then (if v_725 then (if v_726 then (if v_727 then (if v_728 then (if v_729 then (master_secret_39,client_wkh_16,server_wkh_16,client_fk_16,server_fk_16) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {3434}event Client_chk(@6_id_client,chk_23);
                                                {3435}event Client_shk(@6_id_client,shk_22);
                                                {3436}event Client_cfin(@6_id_client,cfin_23);
                                                {3437}event Client_sfin(@6_id_client,sfin_22);
                                                {3438}in(io, enc_ee_msg_15: bitstring);
                                                {3439}let ee_msg_16: msg = aead_dec(@6_tls_a,shk_22,0,zero,enc_ee_msg_15) in
                                                {3440}let EE(ech_ee_15: echExt,extra_ee_15: extraExt) = ee_msg_16 in
                                                {3441}let cur_log2_35: bitstring = (cur_log2_34,ee_msg_16) in
                                                {3442}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_7,sr_23,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_81,safe_psk_18,@6_comp_psk,master_secret_40,chk_23,0,shk_22,1,cfin_23,sfin_22,cur_log2_35)))
                                            )
                                            else
                                                {3443}out(io, illegal_parameter)
                                        )
                                        else
                                            {3444}out(io, illegal_parameter)
                                )
                                else
                                    {3445}out(io, unexpected_message)
                    )
                    else
                        {3446}let cur_log_14: bitstring = (zero,i_client_hello_6) in
                        {3447}let sh_modified_8: msg = SH(B32(sr24_3,zero8),mode_10) in
                        {3448}let cur_log_sh_8: bitstring = (cur_log_14,sh_modified_8) in
                        {3449}let transcript_ech_conf_8: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_8)) in
                        {3450}let v_730: bool = not-caught-fail(transcript_ech_conf_8) in
                        {3451}let s_77: bitstring = (if v_730 then zero else caught-fail) in
                        {3452}let k_75: bitstring = (if v_730 then catch-fail(b32_2_b(get_random(i_client_hello_6))) else caught-fail) in
                        {3453}let v_731: bool = not-caught-fail(k_75) in
                        {3454}let k_76: bitstring = (if v_730 then catch-fail((if v_731 then hmac(@6_backend_h,s_77,k_75) else fail-any)) else caught-fail) in
                        {3455}let v_732: bool = not-caught-fail(k_76) in
                        {3456}let l_205: label = (if v_732 then ech_accept_confirmation else caught-fail) in
                        {3457}let x_231: bitstring = (if v_732 then (l_205,cur_log_sh_8) else caught-fail) in
                        {3458}let sr8_10: bytes8 = (if v_730 then catch-fail(crop_into_bytes8((if v_732 then hmac(@6_backend_h,k_76,x_231) else fail-any))) else caught-fail) in
                        {3459}let v_733: bool = not-caught-fail(sr8_10) in
                        {3460}if (B32(sr24_3,sr8_6) = (if v_730 then (if v_733 then B32(sr24_3,sr8_10) else fail-any) else fail-any)) then
                        (
                            {3461}event ClientEchAcceptance(@6_id_client,true);
                            {3462}let cur_log_15: bitstring = (zero,i_client_hello_6) in
                            {3463}let (x_232: bitstring,g_19: group) = i_kex_data_3 in
                            {3464}let (psk_offer_16: preSharedKey,id_offer_16: identityPsk,es_offer_16: bitstring,is_safe_offer_16: bool) = psk_data_10 in
                            {3465}event Client_PSKOffer(@6_id_client,psk_offer_16,id_offer_16,is_safe_offer_16);
                            {3466}event Client_Rand_client(@6_id_client,i_cr_3);
                            {3467}event Client_DH_client(@6_id_client,dh_pub(g_19,x_232));
                            {3468}event Client_server_domain(@6_id_client,backend_dom);
                            {3469}let SH(sr_24: bytes32,mode_18: params) = server_hello_2 in
                            {3470}event Client_Rand_server(@6_id_client,sr_24);
                            {3471}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_19,gy_17: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_34: preSharedKeyExt) = mode_18 in
                            (
                                {3472}let cur_log2_36: bitstring = (cur_log_15,server_hello_2) in
                                {3473}event Client_DH_server(@6_id_client,gy_17);
                                {3474}let v_734: bool = (psk_ext_34 = empty_psk_ext) in
                                {3475}let psk_82: preSharedKey = (if v_734 then NoPsk else caught-fail) in
                                {3476}let s_78: bitstring = (if v_734 then zero else caught-fail) in
                                {3477}let k_77: bitstring = (if v_734 then catch-fail(psk2b(psk_82)) else caught-fail) in
                                {3478}let v_735: bool = not-caught-fail(k_77) in
                                {3479}let early_secret_54: bitstring = (if v_734 then catch-fail((if v_735 then hmac(@6_backend_h,s_78,k_77) else fail-any)) else caught-fail) in
                                {3480}let v_736: bool = not-caught-fail(early_secret_54) in
                                {3481}let l_206: label = (if v_736 then tls13_ext_res_binder else caught-fail) in
                                {3482}let m_70: bitstring = (if v_736 then zero else caught-fail) in
                                {3483}let h_195: bitstring = (if v_736 then catch-fail(hash(@6_backend_h,m_70)) else caught-fail) in
                                {3484}let v_737: bool = not-caught-fail(h_195) in
                                {3485}let x_233: bitstring = (if v_737 then (l_206,h_195) else caught-fail) in
                                {3486}let binder_key_36: bitstring = (if v_736 then catch-fail((if v_737 then hmac(@6_backend_h,early_secret_54,x_233) else fail-any)) else caught-fail) in
                                {3487}let v_738: bool = not-caught-fail(binder_key_36) in
                                {3488}let v_739: bitstring = (if v_734 then catch-fail((if v_736 then (if v_738 then (early_secret_54,binder_key_36) else fail-any) else fail-any)) else caught-fail) in
                                {3489}let v_740: bool = (not-caught-fail(v_739) && success?(1-proj-2-tuple(v_739))) in
                                {3490}let kb_36: mac_key = (if v_740 then 2-proj-2-tuple(v_739) else caught-fail) in
                                {3491}let es_52: bitstring = (if v_740 then 1-proj-2-tuple(v_739) else caught-fail) in
                                {3492}let v_741: bitstring = (if not(v_734) then catch-fail(psk_data_10) else caught-fail) in
                                {3493}let v_742: bool = (not-caught-fail(v_741) && success?(1-proj-4-tuple(v_741))) in
                                {3494}let is_safe_31: bool = (if v_742 then 4-proj-4-tuple(v_741) else caught-fail) in
                                {3495}let es_53: bitstring = (if v_742 then 3-proj-4-tuple(v_741) else caught-fail) in
                                {3496}let id_38: identityPsk = (if v_742 then 2-proj-4-tuple(v_741) else caught-fail) in
                                {3497}let psk_83: preSharedKey = (if v_742 then 1-proj-4-tuple(v_741) else caught-fail) in
                                {3498}let (psk_84: preSharedKey,early_secret_55: bitstring,valid_16: bool,safe_psk_19: bool) = (if v_734 then (if v_740 then (NoPsk,es_52,true,false) else fail-any) else (if v_742 then (psk_83,es_53,((psk_83 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_34)),is_safe_31) else fail-any)) in
                                {3499}event Client_PSKChoosen(@6_id_client,psk_84,safe_psk_19);
                                {3500}if valid_16 then
                                (
                                    {3501}let gxy_33: element = catch-fail(dh_decap_fun(g_19,gy_17,x_232)) in
                                    {3502}let v_743: bool = not-caught-fail(gxy_33) in
                                    {3503}new s_79[]: seed;
                                    {3504}let gxy_34: element = (if v_743 then gxy_33 else dh_f(s_79)) in
                                    {3505}event Client_DH_gxy(@6_id_client,gxy_34);
                                    {3506}let l_207: label = tls13_derived in
                                    {3507}let m_71: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                    {3508}let v_744: bool = not-caught-fail(m_71) in
                                    {3509}let h_196: bitstring = (if v_744 then catch-fail(hash(@6_backend_h,m_71)) else caught-fail) in
                                    {3510}let v_745: bool = not-caught-fail(h_196) in
                                    {3511}let x_234: bitstring = (if v_745 then (l_207,h_196) else caught-fail) in
                                    {3512}let extra_36: bitstring = catch-fail((if v_744 then (if v_745 then hmac(@6_backend_h,early_secret_55,x_234) else fail-any) else fail-any)) in
                                    {3513}let v_746: bool = not-caught-fail(extra_36) in
                                    {3514}let handshake_secret_17: bitstring = (if v_746 then hmac(@6_backend_h,extra_36,gxy_34) else fail-any) in
                                    {3515}let l_208: label = tls13_derived in
                                    {3516}let m_72: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                    {3517}let v_747: bool = not-caught-fail(m_72) in
                                    {3518}let h_197: bitstring = (if v_747 then catch-fail(hash(@6_backend_h,m_72)) else caught-fail) in
                                    {3519}let v_748: bool = not-caught-fail(h_197) in
                                    {3520}let x_235: bitstring = (if v_748 then (l_208,h_197) else caught-fail) in
                                    {3521}let extra_37: bitstring = catch-fail((if v_747 then (if v_748 then hmac(@6_backend_h,handshake_secret_17,x_235) else fail-any) else fail-any)) in
                                    {3522}let v_749: bool = not-caught-fail(extra_37) in
                                    {3523}let k_78: bitstring = (if v_749 then zero else caught-fail) in
                                    {3524}let master_secret_41: bitstring = (if v_749 then catch-fail(hmac(@6_backend_h,handshake_secret_17,k_78)) else caught-fail) in
                                    {3525}let v_750: bool = not-caught-fail(master_secret_41) in
                                    {3526}let l_209: label = (if v_750 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {3527}let h_198: bitstring = (if v_750 then catch-fail(hash(@6_backend_h,cur_log2_36)) else caught-fail) in
                                    {3528}let v_751: bool = not-caught-fail(h_198) in
                                    {3529}let x_236: bitstring = (if v_751 then (l_209,h_198) else caught-fail) in
                                    {3530}let client_hts_17: bitstring = (if v_750 then catch-fail((if v_751 then hmac(@6_backend_h,handshake_secret_17,x_236) else fail-any)) else caught-fail) in
                                    {3531}let v_752: bool = not-caught-fail(client_hts_17) in
                                    {3532}let l_210: label = (if v_752 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {3533}let h_199: bitstring = (if v_752 then catch-fail(hash(@6_backend_h,cur_log2_36)) else caught-fail) in
                                    {3534}let v_753: bool = not-caught-fail(h_199) in
                                    {3535}let x_237: bitstring = (if v_753 then (l_210,h_199) else caught-fail) in
                                    {3536}let server_hts_17: bitstring = (if v_752 then catch-fail((if v_753 then hmac(@6_backend_h,handshake_secret_17,x_237) else fail-any)) else caught-fail) in
                                    {3537}let v_754: bool = not-caught-fail(server_hts_17) in
                                    {3538}let l_211: label = (if v_754 then tls13_key else caught-fail) in
                                    {3539}let h_200: bitstring = (if v_754 then zero else caught-fail) in
                                    {3540}let x_238: bitstring = (if v_754 then (l_211,h_200) else caught-fail) in
                                    {3541}let client_wkh_17: bitstring = (if v_754 then catch-fail(hmac(@6_backend_h,client_hts_17,x_238)) else caught-fail) in
                                    {3542}let v_755: bool = not-caught-fail(client_wkh_17) in
                                    {3543}let l_212: label = (if v_755 then tls13_key else caught-fail) in
                                    {3544}let h_201: bitstring = (if v_755 then zero else caught-fail) in
                                    {3545}let x_239: bitstring = (if v_755 then (l_212,h_201) else caught-fail) in
                                    {3546}let server_wkh_17: bitstring = (if v_755 then catch-fail(hmac(@6_backend_h,server_hts_17,x_239)) else caught-fail) in
                                    {3547}let v_756: bool = not-caught-fail(server_wkh_17) in
                                    {3548}let l_213: label = (if v_756 then tls13_finished else caught-fail) in
                                    {3549}let h_202: bitstring = (if v_756 then zero else caught-fail) in
                                    {3550}let x_240: bitstring = (if v_756 then (l_213,h_202) else caught-fail) in
                                    {3551}let client_fk_17: bitstring = (if v_756 then catch-fail(hmac(@6_backend_h,client_hts_17,x_240)) else caught-fail) in
                                    {3552}let v_757: bool = not-caught-fail(client_fk_17) in
                                    {3553}let l_214: label = (if v_757 then tls13_finished else caught-fail) in
                                    {3554}let h_203: bitstring = (if v_757 then zero else caught-fail) in
                                    {3555}let x_241: bitstring = (if v_757 then (l_214,h_203) else caught-fail) in
                                    {3556}let server_fk_17: bitstring = (if v_757 then catch-fail(hmac(@6_backend_h,server_hts_17,x_241)) else caught-fail) in
                                    {3557}let v_758: bool = not-caught-fail(server_fk_17) in
                                    {3558}let (master_secret_42: bitstring,chk_24: aead_key,shk_23: aead_key,cfin_24: mac_key,sfin_23: mac_key) = (if v_749 then (if v_750 then (if v_752 then (if v_754 then (if v_755 then (if v_756 then (if v_757 then (if v_758 then (master_secret_41,client_wkh_17,server_wkh_17,client_fk_17,server_fk_17) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {3559}event Client_chk(@6_id_client,chk_24);
                                    {3560}event Client_shk(@6_id_client,shk_23);
                                    {3561}event Client_cfin(@6_id_client,cfin_24);
                                    {3562}event Client_sfin(@6_id_client,sfin_23);
                                    {3563}in(io, enc_ee_msg_16: bitstring);
                                    {3564}let ee_msg_17: msg = aead_dec(@6_backend_a,shk_23,0,zero,enc_ee_msg_16) in
                                    {3565}let EE(ech_ee_16: echExt,extra_ee_16: extraExt) = ee_msg_17 in
                                    {3566}let cur_log2_37: bitstring = (cur_log2_36,ee_msg_17) in
                                    {3567}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr_3,sr_24,@6_backend_h,@6_backend_a,c_dom_5,backend_dom,psk_84,safe_psk_19,@6_comp_psk,master_secret_42,chk_24,0,shk_23,1,cfin_24,sfin_23,cur_log2_37)))
                                )
                                else
                                    {3568}out(io, illegal_parameter)
                            )
                            else
                                {3569}out(io, illegal_parameter)
                        )
                        else
                            {3570}event ClientEchAcceptance(@6_id_client,false);
                            {3571}let v_759: bool = @6_use_grease in
                            {3572}let psk_85: preSharedKey = (if not(v_759) then NoPsk else caught-fail) in
                            {3573}let s_80: bitstring = (if not(v_759) then zero else caught-fail) in
                            {3574}let k_79: bitstring = (if not(v_759) then catch-fail(psk2b(psk_85)) else caught-fail) in
                            {3575}let v_760: bool = not-caught-fail(k_79) in
                            {3576}let early_secret_56: bitstring = (if not(v_759) then catch-fail((if v_760 then hmac(@6_tls_h,s_80,k_79) else fail-any)) else caught-fail) in
                            {3577}let v_761: bool = not-caught-fail(early_secret_56) in
                            {3578}let l_215: label = (if v_761 then tls13_ext_res_binder else caught-fail) in
                            {3579}let m_73: bitstring = (if v_761 then zero else caught-fail) in
                            {3580}let h_204: bitstring = (if v_761 then catch-fail(hash(@6_tls_h,m_73)) else caught-fail) in
                            {3581}let v_762: bool = not-caught-fail(h_204) in
                            {3582}let x_242: bitstring = (if v_762 then (l_215,h_204) else caught-fail) in
                            {3583}let binder_key_37: bitstring = (if v_761 then catch-fail((if v_762 then hmac(@6_tls_h,early_secret_56,x_242) else fail-any)) else caught-fail) in
                            {3584}let v_763: bool = not-caught-fail(binder_key_37) in
                            {3585}let v_764: bitstring = (if not(v_759) then catch-fail((if v_761 then (if v_763 then (early_secret_56,binder_key_37) else fail-any) else fail-any)) else caught-fail) in
                            {3586}let v_765: bool = (not-caught-fail(v_764) && success?(1-proj-2-tuple(v_764))) in
                            {3587}let kb_37: mac_key = (if v_765 then 2-proj-2-tuple(v_764) else caught-fail) in
                            {3588}let es'_1: bitstring = (if v_765 then 1-proj-2-tuple(v_764) else caught-fail) in
                            {3589}let psk_data'_15: bitstring = (if v_759 then psk_data_10 else (if v_765 then (NoPsk,zero,es'_1,false) else fail-any)) in
                            {3590}let cur_log_16: bitstring = (zero,o_client_hello_1) in
                            {3591}let (x_243: bitstring,g_20: group) = o_kex_data_3 in
                            {3592}let (psk_offer_17: preSharedKey,id_offer_17: identityPsk,es_offer_17: bitstring,is_safe_offer_17: bool) = psk_data'_15 in
                            {3593}event Client_PSKOffer(@6_id_client,psk_offer_17,id_offer_17,is_safe_offer_17);
                            {3594}event Client_Rand_client(@6_id_client,o_cr_4);
                            {3595}event Client_DH_client(@6_id_client,dh_pub(g_20,x_243));
                            {3596}event Client_server_domain(@6_id_client,o_dom);
                            {3597}let SH(sr_25: bytes32,mode_19: params) = server_hello_2 in
                            {3598}event Client_Rand_server(@6_id_client,sr_25);
                            {3599}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_20,gy_18: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_35: preSharedKeyExt) = mode_19 in
                            (
                                {3600}let cur_log2_38: bitstring = (cur_log_16,server_hello_2) in
                                {3601}event Client_DH_server(@6_id_client,gy_18);
                                {3602}let v_766: bool = (psk_ext_35 = empty_psk_ext) in
                                {3603}let psk_86: preSharedKey = (if v_766 then NoPsk else caught-fail) in
                                {3604}let s_81: bitstring = (if v_766 then zero else caught-fail) in
                                {3605}let k_80: bitstring = (if v_766 then catch-fail(psk2b(psk_86)) else caught-fail) in
                                {3606}let v_767: bool = not-caught-fail(k_80) in
                                {3607}let early_secret_57: bitstring = (if v_766 then catch-fail((if v_767 then hmac(@6_tls_h,s_81,k_80) else fail-any)) else caught-fail) in
                                {3608}let v_768: bool = not-caught-fail(early_secret_57) in
                                {3609}let l_216: label = (if v_768 then tls13_ext_res_binder else caught-fail) in
                                {3610}let m_74: bitstring = (if v_768 then zero else caught-fail) in
                                {3611}let h_205: bitstring = (if v_768 then catch-fail(hash(@6_tls_h,m_74)) else caught-fail) in
                                {3612}let v_769: bool = not-caught-fail(h_205) in
                                {3613}let x_244: bitstring = (if v_769 then (l_216,h_205) else caught-fail) in
                                {3614}let binder_key_38: bitstring = (if v_768 then catch-fail((if v_769 then hmac(@6_tls_h,early_secret_57,x_244) else fail-any)) else caught-fail) in
                                {3615}let v_770: bool = not-caught-fail(binder_key_38) in
                                {3616}let v_771: bitstring = (if v_766 then catch-fail((if v_768 then (if v_770 then (early_secret_57,binder_key_38) else fail-any) else fail-any)) else caught-fail) in
                                {3617}let v_772: bool = (not-caught-fail(v_771) && success?(1-proj-2-tuple(v_771))) in
                                {3618}let kb_38: mac_key = (if v_772 then 2-proj-2-tuple(v_771) else caught-fail) in
                                {3619}let es_54: bitstring = (if v_772 then 1-proj-2-tuple(v_771) else caught-fail) in
                                {3620}let v_773: bitstring = (if not(v_766) then catch-fail(psk_data'_15) else caught-fail) in
                                {3621}let v_774: bool = (not-caught-fail(v_773) && success?(1-proj-4-tuple(v_773))) in
                                {3622}let is_safe_32: bool = (if v_774 then 4-proj-4-tuple(v_773) else caught-fail) in
                                {3623}let es_55: bitstring = (if v_774 then 3-proj-4-tuple(v_773) else caught-fail) in
                                {3624}let id_39: identityPsk = (if v_774 then 2-proj-4-tuple(v_773) else caught-fail) in
                                {3625}let psk_87: preSharedKey = (if v_774 then 1-proj-4-tuple(v_773) else caught-fail) in
                                {3626}let (psk_88: preSharedKey,early_secret_58: bitstring,valid_17: bool,safe_psk_20: bool) = (if v_766 then (if v_772 then (NoPsk,es_54,true,false) else fail-any) else (if v_774 then (psk_87,es_55,((psk_87 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_35)),is_safe_32) else fail-any)) in
                                {3627}event Client_PSKChoosen(@6_id_client,psk_88,safe_psk_20);
                                {3628}if valid_17 then
                                (
                                    {3629}let gxy_35: element = catch-fail(dh_decap_fun(g_20,gy_18,x_243)) in
                                    {3630}let v_775: bool = not-caught-fail(gxy_35) in
                                    {3631}new s_82[]: seed;
                                    {3632}let gxy_36: element = (if v_775 then gxy_35 else dh_f(s_82)) in
                                    {3633}event Client_DH_gxy(@6_id_client,gxy_36);
                                    {3634}let l_217: label = tls13_derived in
                                    {3635}let m_75: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                    {3636}let v_776: bool = not-caught-fail(m_75) in
                                    {3637}let h_206: bitstring = (if v_776 then catch-fail(hash(@6_tls_h,m_75)) else caught-fail) in
                                    {3638}let v_777: bool = not-caught-fail(h_206) in
                                    {3639}let x_245: bitstring = (if v_777 then (l_217,h_206) else caught-fail) in
                                    {3640}let extra_38: bitstring = catch-fail((if v_776 then (if v_777 then hmac(@6_tls_h,early_secret_58,x_245) else fail-any) else fail-any)) in
                                    {3641}let v_778: bool = not-caught-fail(extra_38) in
                                    {3642}let handshake_secret_18: bitstring = (if v_778 then hmac(@6_tls_h,extra_38,gxy_36) else fail-any) in
                                    {3643}let l_218: label = tls13_derived in
                                    {3644}let m_76: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                    {3645}let v_779: bool = not-caught-fail(m_76) in
                                    {3646}let h_207: bitstring = (if v_779 then catch-fail(hash(@6_tls_h,m_76)) else caught-fail) in
                                    {3647}let v_780: bool = not-caught-fail(h_207) in
                                    {3648}let x_246: bitstring = (if v_780 then (l_218,h_207) else caught-fail) in
                                    {3649}let extra_39: bitstring = catch-fail((if v_779 then (if v_780 then hmac(@6_tls_h,handshake_secret_18,x_246) else fail-any) else fail-any)) in
                                    {3650}let v_781: bool = not-caught-fail(extra_39) in
                                    {3651}let k_81: bitstring = (if v_781 then zero else caught-fail) in
                                    {3652}let master_secret_43: bitstring = (if v_781 then catch-fail(hmac(@6_tls_h,handshake_secret_18,k_81)) else caught-fail) in
                                    {3653}let v_782: bool = not-caught-fail(master_secret_43) in
                                    {3654}let l_219: label = (if v_782 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {3655}let h_208: bitstring = (if v_782 then catch-fail(hash(@6_tls_h,cur_log2_38)) else caught-fail) in
                                    {3656}let v_783: bool = not-caught-fail(h_208) in
                                    {3657}let x_247: bitstring = (if v_783 then (l_219,h_208) else caught-fail) in
                                    {3658}let client_hts_18: bitstring = (if v_782 then catch-fail((if v_783 then hmac(@6_tls_h,handshake_secret_18,x_247) else fail-any)) else caught-fail) in
                                    {3659}let v_784: bool = not-caught-fail(client_hts_18) in
                                    {3660}let l_220: label = (if v_784 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {3661}let h_209: bitstring = (if v_784 then catch-fail(hash(@6_tls_h,cur_log2_38)) else caught-fail) in
                                    {3662}let v_785: bool = not-caught-fail(h_209) in
                                    {3663}let x_248: bitstring = (if v_785 then (l_220,h_209) else caught-fail) in
                                    {3664}let server_hts_18: bitstring = (if v_784 then catch-fail((if v_785 then hmac(@6_tls_h,handshake_secret_18,x_248) else fail-any)) else caught-fail) in
                                    {3665}let v_786: bool = not-caught-fail(server_hts_18) in
                                    {3666}let l_221: label = (if v_786 then tls13_key else caught-fail) in
                                    {3667}let h_210: bitstring = (if v_786 then zero else caught-fail) in
                                    {3668}let x_249: bitstring = (if v_786 then (l_221,h_210) else caught-fail) in
                                    {3669}let client_wkh_18: bitstring = (if v_786 then catch-fail(hmac(@6_tls_h,client_hts_18,x_249)) else caught-fail) in
                                    {3670}let v_787: bool = not-caught-fail(client_wkh_18) in
                                    {3671}let l_222: label = (if v_787 then tls13_key else caught-fail) in
                                    {3672}let h_211: bitstring = (if v_787 then zero else caught-fail) in
                                    {3673}let x_250: bitstring = (if v_787 then (l_222,h_211) else caught-fail) in
                                    {3674}let server_wkh_18: bitstring = (if v_787 then catch-fail(hmac(@6_tls_h,server_hts_18,x_250)) else caught-fail) in
                                    {3675}let v_788: bool = not-caught-fail(server_wkh_18) in
                                    {3676}let l_223: label = (if v_788 then tls13_finished else caught-fail) in
                                    {3677}let h_212: bitstring = (if v_788 then zero else caught-fail) in
                                    {3678}let x_251: bitstring = (if v_788 then (l_223,h_212) else caught-fail) in
                                    {3679}let client_fk_18: bitstring = (if v_788 then catch-fail(hmac(@6_tls_h,client_hts_18,x_251)) else caught-fail) in
                                    {3680}let v_789: bool = not-caught-fail(client_fk_18) in
                                    {3681}let l_224: label = (if v_789 then tls13_finished else caught-fail) in
                                    {3682}let h_213: bitstring = (if v_789 then zero else caught-fail) in
                                    {3683}let x_252: bitstring = (if v_789 then (l_224,h_213) else caught-fail) in
                                    {3684}let server_fk_18: bitstring = (if v_789 then catch-fail(hmac(@6_tls_h,server_hts_18,x_252)) else caught-fail) in
                                    {3685}let v_790: bool = not-caught-fail(server_fk_18) in
                                    {3686}let (master_secret_44: bitstring,chk_25: aead_key,shk_24: aead_key,cfin_25: mac_key,sfin_24: mac_key) = (if v_781 then (if v_782 then (if v_784 then (if v_786 then (if v_787 then (if v_788 then (if v_789 then (if v_790 then (master_secret_43,client_wkh_18,server_wkh_18,client_fk_18,server_fk_18) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {3687}event Client_chk(@6_id_client,chk_25);
                                    {3688}event Client_shk(@6_id_client,shk_24);
                                    {3689}event Client_cfin(@6_id_client,cfin_25);
                                    {3690}event Client_sfin(@6_id_client,sfin_24);
                                    {3691}in(io, enc_ee_msg_17: bitstring);
                                    {3692}let ee_msg_18: msg = aead_dec(@6_tls_a,shk_24,0,zero,enc_ee_msg_17) in
                                    {3693}let EE(ech_ee_17: echExt,extra_ee_17: extraExt) = ee_msg_18 in
                                    {3694}let cur_log2_39: bitstring = (cur_log2_38,ee_msg_18) in
                                    {3695}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(o_cr_4,sr_25,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_88,safe_psk_20,@6_comp_psk,master_secret_44,chk_25,0,shk_24,1,cfin_25,sfin_24,cur_log2_39)))
                                )
                                else
                                    {3696}out(io, illegal_parameter)
                            )
                            else
                                {3697}out(io, illegal_parameter)
                )
                else
                    {3698}out(io, unexpected_message)
            )
    )
    else
        {3700}let psk_89: preSharedKey = NoPsk in
        {3701}let s_83: bitstring = zero in
        {3702}let k_82: bitstring = catch-fail(psk2b(psk_89)) in
        {3703}let v_791: bool = not-caught-fail(k_82) in
        {3704}let early_secret_59: bitstring = catch-fail((if v_791 then hmac(h_psk,s_83,k_82) else fail-any)) in
        {3705}let v_792: bool = not-caught-fail(early_secret_59) in
        {3706}let l_225: label = (if v_792 then tls13_ext_res_binder else caught-fail) in
        {3707}let m_77: bitstring = (if v_792 then zero else caught-fail) in
        {3708}let h_214: bitstring = (if v_792 then catch-fail(hash(h_psk,m_77)) else caught-fail) in
        {3709}let v_793: bool = not-caught-fail(h_214) in
        {3710}let x_253: bitstring = (if v_793 then (l_225,h_214) else caught-fail) in
        {3711}let binder_key_39: bitstring = (if v_792 then catch-fail((if v_793 then hmac(h_psk,early_secret_59,x_253) else fail-any)) else caught-fail) in
        {3712}let v_794: bool = not-caught-fail(binder_key_39) in
        {3713}let v_795: bitstring = catch-fail((if v_792 then (if v_794 then (early_secret_59,binder_key_39) else fail-any) else fail-any)) in
        {3714}let v_796: bool = (not-caught-fail(v_795) && success?(1-proj-2-tuple(v_795))) in
        {3715}let kb_39: mac_key = (if v_796 then 2-proj-2-tuple(v_795) else caught-fail) in
        {3716}let es_56: bitstring = (if v_796 then 1-proj-2-tuple(v_795) else caught-fail) in
        {3717}let v_797: bitstring = catch-fail((if v_796 then (empty_psk_ext,(NoPsk,zero,es_56,false)) else fail-any)) in
        {3718}let v_798: bool = (not-caught-fail(v_797) && success?(1-proj-2-tuple(v_797))) in
        {3719}let psk_data_18: bitstring = (if v_798 then 2-proj-2-tuple(v_797) else caught-fail) in
        {3720}let psk_ext_36: preSharedKeyExt = (if v_798 then 1-proj-2-tuple(v_797) else caught-fail) in
        {3721}let i_offer_8: params = (if v_798 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_36) else caught-fail) in
        {3722}let i_client_hello_10: msg = (if v_798 then CH(i_cr,i_offer_8) else caught-fail) in
        {3723}let v_799: bool = (if v_798 then catch-fail(@6_use_grease) else caught-fail) in
        {3724}let o_offer_18: params = (if v_799 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),ech_inner_or_grease,empty_extra_ext,psk_ext_36) else caught-fail) in
        {3725}new fake_id_10[]: identityPsk;
        {3726}new fake_binder_10[]: bitstring;
        {3727}let o_psk_ext_10: preSharedKeyExt = (if is-false(v_799) then (if @6_use_psk then client_psk_ext(fake_id_10,fake_binder_10) else empty_psk_ext) else caught-fail) in
        {3728}let o_ech_ext_ADD_8: echExt = (if is-false(v_799) then ECHClientHelloOuter(ech_h_3,ech_a_3,config_id_1,enc_1,zero) else caught-fail) in
        {3729}let o_offer_ADD_8: params = (if is-false(v_799) then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),o_ech_ext_ADD_8,empty_extra_ext,o_psk_ext_10) else caught-fail) in
        {3730}let o_client_hello_ADD_8: msg = (if is-false(v_799) then CH(o_cr,o_offer_ADD_8) else caught-fail) in
        {3731}let n_8: nat = (if is-false(v_799) then 1 else caught-fail) in
        {3732}let v_800: hpkeContext = (if is-false(v_799) then catch-fail(context) else caught-fail) in
        {3733}let v_801: bool = (not-caught-fail(v_800) && ((S =nf 1-proj-hpke_context(v_800)) && success?(1-proj-hpke_context(v_800)))) in
        {3734}let base_nonce_9: bitstring = (if v_801 then 3-proj-hpke_context(v_800) else caught-fail) in
        {3735}let key_9: aead_key = (if v_801 then 2-proj-hpke_context(v_800) else caught-fail) in
        {3736}let payload_9: bitstring = (if is-false(v_799) then catch-fail((if v_801 then aead_enc(ech_a_3,key_9,(base_nonce_9,n_8),o_client_hello_ADD_8,i_client_hello_10) else fail-any)) else caught-fail) in
        {3737}let v_802: bool = not-caught-fail(payload_9) in
        {3738}let o_ech_ext_10: echExt = (if v_802 then ECHClientHelloOuter(ech_h_3,ech_a_3,config_id_1,enc_1,payload_9) else caught-fail) in
        {3739}let o_offer_19: params = (if v_802 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),o_ech_ext_10,empty_extra_ext,o_psk_ext_10) else caught-fail) in
        {3740}let (o_client_hello_2: msg,i_client_hello_11: msg,o_cr_7: bytes32,i_cr_5: bytes32,o_kex_data_5: bitstring,i_kex_data_5: bitstring,o_psk_ext_11: preSharedKeyExt,psk_data_19: bitstring,o_ech_ext_11: echExt) = (if v_798 then (if undo-catch-fail(v_799) then (CH(o_cr,o_offer_18),CH(o_cr,o_offer_18),o_cr,o_cr,o_kex_data,o_kex_data,psk_ext_36,psk_data_18,ech_inner_or_grease) else (if v_802 then (CH(o_cr,o_offer_19),i_client_hello_10,o_cr,i_cr,o_kex_data,i_kex_data,o_psk_ext_10,psk_data_18,o_ech_ext_10) else fail-any)) else fail-any) in
        {3741}out(io, o_client_hello_2);
        {3742}let (psk_90: preSharedKey,id_40: identityPsk,es_57: bitstring,safe_2: bool) = psk_data_19 in
        (
            {3743}if (false && (not(@6_use_grease) && (psk_90 ≠ NoPsk))) then
            {3744}let client_hello_3: bitstring = (zero,i_client_hello_11) in
            {3745}let l_226: label = tls13_client_early_traffic_secret in
            {3746}let h_215: bitstring = catch-fail(hash(@6_backend_h,client_hello_3)) in
            {3747}let v_803: bool = not-caught-fail(h_215) in
            {3748}let x_254: bitstring = (if v_803 then (l_226,h_215) else caught-fail) in
            {3749}let atsc0_3: bitstring = catch-fail((if v_803 then hmac(@6_backend_h,es_57,x_254) else fail-any)) in
            {3750}let v_804: bool = not-caught-fail(atsc0_3) in
            {3751}let l_227: label = (if v_804 then tls13_key else caught-fail) in
            {3752}let h_216: bitstring = (if v_804 then zero else caught-fail) in
            {3753}let x_255: bitstring = (if v_804 then (l_227,h_216) else caught-fail) in
            {3754}let kc0_3: bitstring = (if v_804 then catch-fail(hmac(@6_backend_h,atsc0_3,x_255)) else caught-fail) in
            {3755}let v_805: bool = not-caught-fail(kc0_3) in
            {3756}let l_228: label = (if v_805 then tls13_early_exporter_master_secret else caught-fail) in
            {3757}let h_217: bitstring = (if v_805 then catch-fail(hash(@6_backend_h,client_hello_3)) else caught-fail) in
            {3758}let v_806: bool = not-caught-fail(h_217) in
            {3759}let x_256: bitstring = (if v_806 then (l_228,h_217) else caught-fail) in
            {3760}let ems0_6: bitstring = (if v_805 then catch-fail((if v_806 then hmac(@6_backend_h,es_57,x_256) else fail-any)) else caught-fail) in
            {3761}let v_807: bool = not-caught-fail(ems0_6) in
            {3762}let (wkc0_3: aead_key,ems0_7: bitstring) = (if v_804 then (if v_805 then (if v_807 then (kc0_3,ems0_6) else fail-any) else fail-any) else fail-any) in
            {3763}!
            {3764}in(io, (i_3: nat,ad_3: bitstring));
            {3765}if is_nat(i_3) then
            {3766}new msg_ed_2[]: bitstring;
            {3767}let enc_ed_2: bitstring = aead_enc(@6_backend_a,wkc0_3,i_3,ad_3,msg_ed_2) in
            {3768}new st_12: stamp;
            {3769}event ClientSequenceClient0RTTDataWriteKey(@6_id_client,st_12,i_3);
            {3770}event ClientSends0(@6_id_client,i_cr_5,psk_90,i_3,ad_3,msg_ed_2);
            {3771}out(io, enc_ed_2)
        ) | (
            {3772}in(io, server_hello_3: msg);
            {3773}let SH(B32(sr24_4: bytes24,sr8_11: bytes8),mode_20: params) = server_hello_3 in
            (
                {3774}if (false && (B32(sr24_4,sr8_11) = B32(HRR24,HRR8))) then
                (
                    {3775}if (send_kex ≠ true) then
                    {3776}let nego(=TLS13,h_alg_13: hash_alg,a_alg_11: aead_alg,hrr_kex_ext(g_21: group),=empty_sni_ext,ech_ext_6: echExt,=empty_extra_ext,=empty_psk_ext) = mode_20 in
                    {3777}let v_808: bool = (ech_ext_6 = empty_ech_ext) in
                    {3778}let hrr_mode_2: params = (if not(v_808) then nego(TLS13,@6_backend_h,@6_backend_a,hrr_kex_ext(@6_backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) else caught-fail) in
                    {3779}let hrr_2: msg = (if not(v_808) then SH(B32(HRR24,HRR8),hrr_mode_2) else caught-fail) in
                    {3780}let cur_log_17: bitstring = (if not(v_808) then ((zero,i_client_hello_11),hrr_2) else caught-fail) in
                    {3781}let transcript_hrr_ech_conf_2: bitstring = (if not(v_808) then catch-fail(hash(@6_backend_h,cur_log_17)) else caught-fail) in
                    {3782}let v_809: bool = not-caught-fail(transcript_hrr_ech_conf_2) in
                    {3783}let s_84: bitstring = (if v_809 then zero else caught-fail) in
                    {3784}let k_83: bitstring = (if v_809 then catch-fail(b32_2_b(get_random(i_client_hello_11))) else caught-fail) in
                    {3785}let v_810: bool = not-caught-fail(k_83) in
                    {3786}let k_84: bitstring = (if v_809 then catch-fail((if v_810 then hmac(@6_backend_h,s_84,k_83) else fail-any)) else caught-fail) in
                    {3787}let v_811: bool = not-caught-fail(k_84) in
                    {3788}let l_229: label = (if v_811 then hrr_ech_accept_confirmation else caught-fail) in
                    {3789}let x_257: bitstring = (if v_811 then (l_229,cur_log_17) else caught-fail) in
                    {3790}let is_ech_accepted_2: bool = (if v_808 then false else (if (ech_ext_6 = ECHHelloRetryRequest((if v_809 then crop_into_bytes8((if v_811 then hmac(@6_backend_h,k_84,x_257) else fail-any)) else fail-any))) then true else false)) in
                    {3791}event ClientEchAcceptance(@6_id_client,is_ech_accepted_2);
                    {3792}if is_ech_accepted_2 then
                    (
                        {3793}let cur_log_IN1_HRR_2: bitstring = ((zero,i_client_hello_11),server_hello_3) in
                        {3794}let ech_config(config_id_6: configId,ech_g_8: group,pkR_8: element,o_dom_6: domain,ech_h_8: hash_alg,ech_a_8: aead_alg) = ech_conf in
                        {3795}let send_key_share_6: bool = true in
                        {3796}new s_85[]: seed;
                        {3797}let gx_19: element = dh_pub(@6_backend_g,dh_k(s_85)) in
                        {3798}let v_812: bitstring = (dh_k(s_85),gx_19) in
                        {3799}let v_813: bool = success?(1-proj-2-tuple(v_812)) in
                        {3800}let gx_20: element = (if v_813 then 2-proj-2-tuple(v_812) else caught-fail) in
                        {3801}let x_258: bitstring = (if v_813 then 1-proj-2-tuple(v_812) else caught-fail) in
                        {3802}let kex_8: kex_alg = (if v_813 then (if send_key_share_6 then DHE_kex(@6_backend_g,gx_20) else DHE_group(@6_backend_g)) else caught-fail) in
                        {3803}let (i_kex_ext_3: keyShareExt,i_kex_data_6: bitstring) = (if v_813 then (client_kex_ext(kex_8),(x_258,@6_backend_g)) else fail-any) in
                        {3804}let send_key_share_7: bool = true in
                        {3805}new s_86[]: seed;
                        {3806}let gx_21: element = dh_pub(@6_tls_g,dh_k(s_86)) in
                        {3807}let v_814: bitstring = (dh_k(s_86),gx_21) in
                        {3808}let v_815: bool = success?(1-proj-2-tuple(v_814)) in
                        {3809}let gx_22: element = (if v_815 then 2-proj-2-tuple(v_814) else caught-fail) in
                        {3810}let x_259: bitstring = (if v_815 then 1-proj-2-tuple(v_814) else caught-fail) in
                        {3811}let kex_9: kex_alg = (if v_815 then (if send_key_share_7 then DHE_kex(@6_tls_g,gx_22) else DHE_group(@6_tls_g)) else caught-fail) in
                        {3812}let (o_kex_ext_5: keyShareExt,o_kex_data_6: bitstring) = (if v_815 then (client_kex_ext(kex_9),(x_259,@6_tls_g)) else fail-any) in
                        {3813}new rand24_9[]: bytes24;
                        {3814}new rand8_9[]: bytes8;
                        {3815}let i_cr_6: bytes32 = B32(rand24_9,rand8_9) in
                        {3816}new rand24_10[]: bytes24;
                        {3817}new rand8_10[]: bytes8;
                        {3818}let o_cr_8: bytes32 = B32(rand24_10,rand8_10) in
                        {3819}let ech_ext_7: echExt = ECHClientHelloInner in
                        {3820}if @6_use_psk then
                        (
                            {3821}let (psk_91: preSharedKey,id_41: identityPsk,old_es_5: bitstring,is_safe_33: bool) = psk_data_19 in
                            (
                                {3822}let offer_12: params = nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_3,SNI(backend_dom),ech_ext_7,@6_i_extra_ext,trunc_client_psk_ext(id_41)) in
                                {3823}let cur_log'_12: bitstring = (cur_log_IN1_HRR_2,CH(i_cr_6,offer_12)) in
                                {3824}let s_87: bitstring = zero in
                                {3825}let k_85: bitstring = catch-fail(psk2b(psk_91)) in
                                {3826}let v_816: bool = not-caught-fail(k_85) in
                                {3827}let early_secret_60: bitstring = catch-fail((if v_816 then hmac(@6_backend_h,s_87,k_85) else fail-any)) in
                                {3828}let v_817: bool = not-caught-fail(early_secret_60) in
                                {3829}let l_230: label = (if v_817 then tls13_ext_res_binder else caught-fail) in
                                {3830}let m_78: bitstring = (if v_817 then zero else caught-fail) in
                                {3831}let h_218: bitstring = (if v_817 then catch-fail(hash(@6_backend_h,m_78)) else caught-fail) in
                                {3832}let v_818: bool = not-caught-fail(h_218) in
                                {3833}let x_260: bitstring = (if v_818 then (l_230,h_218) else caught-fail) in
                                {3834}let binder_key_40: bitstring = (if v_817 then catch-fail((if v_818 then hmac(@6_backend_h,early_secret_60,x_260) else fail-any)) else caught-fail) in
                                {3835}let v_819: bool = not-caught-fail(binder_key_40) in
                                {3836}let v_820: bitstring = catch-fail((if v_817 then (if v_819 then (early_secret_60,binder_key_40) else fail-any) else fail-any)) in
                                {3837}let v_821: bool = (not-caught-fail(v_820) && success?(1-proj-2-tuple(v_820))) in
                                {3838}let kb_40: mac_key = (if v_821 then 2-proj-2-tuple(v_820) else caught-fail) in
                                {3839}let es_58: bitstring = (if v_821 then 1-proj-2-tuple(v_820) else caught-fail) in
                                {3840}let binders_11: bitstring = (if v_821 then catch-fail(hmac(@6_backend_h,kb_40,cur_log'_12)) else caught-fail) in
                                {3841}let v_822: bool = not-caught-fail(binders_11) in
                                {3842}let v_823: bitstring = catch-fail((if v_821 then (if v_822 then (client_psk_ext(id_41,binders_11),(psk_91,id_41,es_58,is_safe_33)) else fail-any) else fail-any)) in
                                {3843}let v_824: bool = (not-caught-fail(v_823) && success?(1-proj-2-tuple(v_823))) in
                                {3844}let psk_data_20: bitstring = (if v_824 then 2-proj-2-tuple(v_823) else caught-fail) in
                                {3845}let psk_ext_37: preSharedKeyExt = (if v_824 then 1-proj-2-tuple(v_823) else caught-fail) in
                                {3846}let i_offer_9: params = (if v_824 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_3,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_37) else caught-fail) in
                                {3847}let i_client_hello_12: msg = (if v_824 then CH(i_cr_6,i_offer_9) else caught-fail) in
                                {3848}new fake_id_11[]: identityPsk;
                                {3849}new fake_binder_11[]: bitstring;
                                {3850}let o_psk_ext_12: preSharedKeyExt = (if v_824 then (if @6_use_psk then client_psk_ext(fake_id_11,fake_binder_11) else empty_psk_ext) else caught-fail) in
                                {3851}let o_ech_ext_ADD_9: echExt = (if v_824 then ECHClientHelloOuter(ech_h_8,ech_a_8,config_id_6,zero,zero) else caught-fail) in
                                {3852}let o_offer_ADD_9: params = (if v_824 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_5,SNI(o_dom_6),o_ech_ext_ADD_9,empty_extra_ext,o_psk_ext_12) else caught-fail) in
                                {3853}let o_client_hello_ADD_9: msg = (if v_824 then CH(o_cr_8,o_offer_ADD_9) else caught-fail) in
                                {3854}let n_9: nat = (if v_824 then 2 else caught-fail) in
                                {3855}let v_825: hpkeContext = (if v_824 then catch-fail(context) else caught-fail) in
                                {3856}let v_826: bool = (not-caught-fail(v_825) && ((S =nf 1-proj-hpke_context(v_825)) && success?(1-proj-hpke_context(v_825)))) in
                                {3857}let base_nonce_10: bitstring = (if v_826 then 3-proj-hpke_context(v_825) else caught-fail) in
                                {3858}let key_10: aead_key = (if v_826 then 2-proj-hpke_context(v_825) else caught-fail) in
                                {3859}let payload_10: bitstring = (if v_824 then catch-fail((if v_826 then aead_enc(ech_a_8,key_10,(base_nonce_10,n_9),o_client_hello_ADD_9,i_client_hello_12) else fail-any)) else caught-fail) in
                                {3860}let v_827: bool = not-caught-fail(payload_10) in
                                {3861}let o_ech_ext_12: echExt = (if v_827 then ECHClientHelloOuter(ech_h_8,ech_a_8,config_id_6,zero,payload_10) else caught-fail) in
                                {3862}let o_offer_20: params = (if v_827 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_5,SNI(o_dom_6),o_ech_ext_12,empty_extra_ext,o_psk_ext_12) else caught-fail) in
                                {3863}let (o_client_hello'_6: msg,i_client_hello'_6: msg,i_cr'_6: bytes32,i_kex_data'_6: bitstring,psk_data'_16: bitstring) = (if v_824 then (if v_827 then (CH(o_cr_8,o_offer_20),i_client_hello_12,i_cr_6,i_kex_data_6,psk_data_20) else fail-any) else fail-any) in
                                {3864}out(io, o_client_hello'_6);
                                {3865}in(io, server_hello'_14: msg);
                                {3866}let SH(B32(sr24'_6: bytes24,sr8'_6: bytes8),params'_6: params) = server_hello'_14 in
                                {3867}let cur_log_IN1_HRR_IN2_6: bitstring = (cur_log_IN1_HRR_2,i_client_hello'_6) in
                                {3868}let sh_modified_9: msg = SH(B32(sr24'_6,zero8),params'_6) in
                                {3869}let cur_log_sh_9: bitstring = (cur_log_IN1_HRR_IN2_6,sh_modified_9) in
                                {3870}let transcript_ech_conf_9: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_9)) in
                                {3871}let v_828: bool = not-caught-fail(transcript_ech_conf_9) in
                                {3872}let s_88: bitstring = (if v_828 then zero else caught-fail) in
                                {3873}let k_86: bitstring = (if v_828 then catch-fail(b32_2_b(get_random(i_client_hello'_6))) else caught-fail) in
                                {3874}let v_829: bool = not-caught-fail(k_86) in
                                {3875}let k_87: bitstring = (if v_828 then catch-fail((if v_829 then hmac(@6_backend_h,s_88,k_86) else fail-any)) else caught-fail) in
                                {3876}let v_830: bool = not-caught-fail(k_87) in
                                {3877}let l_231: label = (if v_830 then ech_accept_confirmation else caught-fail) in
                                {3878}let x_261: bitstring = (if v_830 then (l_231,cur_log_sh_9) else caught-fail) in
                                {3879}let sr8_12: bytes8 = (if v_828 then catch-fail(crop_into_bytes8((if v_830 then hmac(@6_backend_h,k_87,x_261) else fail-any))) else caught-fail) in
                                {3880}let v_831: bool = not-caught-fail(sr8_12) in
                                {3881}if (B32(sr24'_6,sr8'_6) = (if v_828 then (if v_831 then B32(sr24'_6,sr8_12) else fail-any) else fail-any)) then
                                {3882}let (x_262: bitstring,g_22: group) = i_kex_data'_6 in
                                {3883}let (psk_offer_18: preSharedKey,id_offer_18: identityPsk,es_offer_18: bitstring,is_safe_offer_18: bool) = psk_data'_16 in
                                {3884}event Client_PSKOffer(@6_id_client,psk_offer_18,id_offer_18,is_safe_offer_18);
                                {3885}event Client_Rand_client(@6_id_client,i_cr'_6);
                                {3886}event Client_DH_client(@6_id_client,dh_pub(g_22,x_262));
                                {3887}event Client_server_domain(@6_id_client,backend_dom);
                                {3888}let SH(sr_26: bytes32,mode_21: params) = server_hello'_14 in
                                {3889}event Client_Rand_server(@6_id_client,sr_26);
                                {3890}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_22,gy_19: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_38: preSharedKeyExt) = mode_21 in
                                (
                                    {3891}let cur_log2_40: bitstring = (cur_log_IN1_HRR_IN2_6,server_hello'_14) in
                                    {3892}event Client_DH_server(@6_id_client,gy_19);
                                    {3893}let v_832: bool = (psk_ext_38 = empty_psk_ext) in
                                    {3894}let psk_92: preSharedKey = (if v_832 then NoPsk else caught-fail) in
                                    {3895}let s_89: bitstring = (if v_832 then zero else caught-fail) in
                                    {3896}let k_88: bitstring = (if v_832 then catch-fail(psk2b(psk_92)) else caught-fail) in
                                    {3897}let v_833: bool = not-caught-fail(k_88) in
                                    {3898}let early_secret_61: bitstring = (if v_832 then catch-fail((if v_833 then hmac(@6_backend_h,s_89,k_88) else fail-any)) else caught-fail) in
                                    {3899}let v_834: bool = not-caught-fail(early_secret_61) in
                                    {3900}let l_232: label = (if v_834 then tls13_ext_res_binder else caught-fail) in
                                    {3901}let m_79: bitstring = (if v_834 then zero else caught-fail) in
                                    {3902}let h_219: bitstring = (if v_834 then catch-fail(hash(@6_backend_h,m_79)) else caught-fail) in
                                    {3903}let v_835: bool = not-caught-fail(h_219) in
                                    {3904}let x_263: bitstring = (if v_835 then (l_232,h_219) else caught-fail) in
                                    {3905}let binder_key_41: bitstring = (if v_834 then catch-fail((if v_835 then hmac(@6_backend_h,early_secret_61,x_263) else fail-any)) else caught-fail) in
                                    {3906}let v_836: bool = not-caught-fail(binder_key_41) in
                                    {3907}let v_837: bitstring = (if v_832 then catch-fail((if v_834 then (if v_836 then (early_secret_61,binder_key_41) else fail-any) else fail-any)) else caught-fail) in
                                    {3908}let v_838: bool = (not-caught-fail(v_837) && success?(1-proj-2-tuple(v_837))) in
                                    {3909}let kb_41: mac_key = (if v_838 then 2-proj-2-tuple(v_837) else caught-fail) in
                                    {3910}let es_59: bitstring = (if v_838 then 1-proj-2-tuple(v_837) else caught-fail) in
                                    {3911}let v_839: bitstring = (if not(v_832) then catch-fail(psk_data'_16) else caught-fail) in
                                    {3912}let v_840: bool = (not-caught-fail(v_839) && success?(1-proj-4-tuple(v_839))) in
                                    {3913}let is_safe_34: bool = (if v_840 then 4-proj-4-tuple(v_839) else caught-fail) in
                                    {3914}let es_60: bitstring = (if v_840 then 3-proj-4-tuple(v_839) else caught-fail) in
                                    {3915}let id_42: identityPsk = (if v_840 then 2-proj-4-tuple(v_839) else caught-fail) in
                                    {3916}let psk_93: preSharedKey = (if v_840 then 1-proj-4-tuple(v_839) else caught-fail) in
                                    {3917}let (psk_94: preSharedKey,early_secret_62: bitstring,valid_18: bool,safe_psk_21: bool) = (if v_832 then (if v_838 then (NoPsk,es_59,true,false) else fail-any) else (if v_840 then (psk_93,es_60,((psk_93 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_38)),is_safe_34) else fail-any)) in
                                    {3918}event Client_PSKChoosen(@6_id_client,psk_94,safe_psk_21);
                                    {3919}if valid_18 then
                                    (
                                        {3920}let gxy_37: element = catch-fail(dh_decap_fun(g_22,gy_19,x_262)) in
                                        {3921}let v_841: bool = not-caught-fail(gxy_37) in
                                        {3922}new s_90[]: seed;
                                        {3923}let gxy_38: element = (if v_841 then gxy_37 else dh_f(s_90)) in
                                        {3924}event Client_DH_gxy(@6_id_client,gxy_38);
                                        {3925}let l_233: label = tls13_derived in
                                        {3926}let m_80: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {3927}let v_842: bool = not-caught-fail(m_80) in
                                        {3928}let h_220: bitstring = (if v_842 then catch-fail(hash(@6_backend_h,m_80)) else caught-fail) in
                                        {3929}let v_843: bool = not-caught-fail(h_220) in
                                        {3930}let x_264: bitstring = (if v_843 then (l_233,h_220) else caught-fail) in
                                        {3931}let extra_40: bitstring = catch-fail((if v_842 then (if v_843 then hmac(@6_backend_h,early_secret_62,x_264) else fail-any) else fail-any)) in
                                        {3932}let v_844: bool = not-caught-fail(extra_40) in
                                        {3933}let handshake_secret_19: bitstring = (if v_844 then hmac(@6_backend_h,extra_40,gxy_38) else fail-any) in
                                        {3934}let l_234: label = tls13_derived in
                                        {3935}let m_81: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {3936}let v_845: bool = not-caught-fail(m_81) in
                                        {3937}let h_221: bitstring = (if v_845 then catch-fail(hash(@6_backend_h,m_81)) else caught-fail) in
                                        {3938}let v_846: bool = not-caught-fail(h_221) in
                                        {3939}let x_265: bitstring = (if v_846 then (l_234,h_221) else caught-fail) in
                                        {3940}let extra_41: bitstring = catch-fail((if v_845 then (if v_846 then hmac(@6_backend_h,handshake_secret_19,x_265) else fail-any) else fail-any)) in
                                        {3941}let v_847: bool = not-caught-fail(extra_41) in
                                        {3942}let k_89: bitstring = (if v_847 then zero else caught-fail) in
                                        {3943}let master_secret_45: bitstring = (if v_847 then catch-fail(hmac(@6_backend_h,handshake_secret_19,k_89)) else caught-fail) in
                                        {3944}let v_848: bool = not-caught-fail(master_secret_45) in
                                        {3945}let l_235: label = (if v_848 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {3946}let h_222: bitstring = (if v_848 then catch-fail(hash(@6_backend_h,cur_log2_40)) else caught-fail) in
                                        {3947}let v_849: bool = not-caught-fail(h_222) in
                                        {3948}let x_266: bitstring = (if v_849 then (l_235,h_222) else caught-fail) in
                                        {3949}let client_hts_19: bitstring = (if v_848 then catch-fail((if v_849 then hmac(@6_backend_h,handshake_secret_19,x_266) else fail-any)) else caught-fail) in
                                        {3950}let v_850: bool = not-caught-fail(client_hts_19) in
                                        {3951}let l_236: label = (if v_850 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {3952}let h_223: bitstring = (if v_850 then catch-fail(hash(@6_backend_h,cur_log2_40)) else caught-fail) in
                                        {3953}let v_851: bool = not-caught-fail(h_223) in
                                        {3954}let x_267: bitstring = (if v_851 then (l_236,h_223) else caught-fail) in
                                        {3955}let server_hts_19: bitstring = (if v_850 then catch-fail((if v_851 then hmac(@6_backend_h,handshake_secret_19,x_267) else fail-any)) else caught-fail) in
                                        {3956}let v_852: bool = not-caught-fail(server_hts_19) in
                                        {3957}let l_237: label = (if v_852 then tls13_key else caught-fail) in
                                        {3958}let h_224: bitstring = (if v_852 then zero else caught-fail) in
                                        {3959}let x_268: bitstring = (if v_852 then (l_237,h_224) else caught-fail) in
                                        {3960}let client_wkh_19: bitstring = (if v_852 then catch-fail(hmac(@6_backend_h,client_hts_19,x_268)) else caught-fail) in
                                        {3961}let v_853: bool = not-caught-fail(client_wkh_19) in
                                        {3962}let l_238: label = (if v_853 then tls13_key else caught-fail) in
                                        {3963}let h_225: bitstring = (if v_853 then zero else caught-fail) in
                                        {3964}let x_269: bitstring = (if v_853 then (l_238,h_225) else caught-fail) in
                                        {3965}let server_wkh_19: bitstring = (if v_853 then catch-fail(hmac(@6_backend_h,server_hts_19,x_269)) else caught-fail) in
                                        {3966}let v_854: bool = not-caught-fail(server_wkh_19) in
                                        {3967}let l_239: label = (if v_854 then tls13_finished else caught-fail) in
                                        {3968}let h_226: bitstring = (if v_854 then zero else caught-fail) in
                                        {3969}let x_270: bitstring = (if v_854 then (l_239,h_226) else caught-fail) in
                                        {3970}let client_fk_19: bitstring = (if v_854 then catch-fail(hmac(@6_backend_h,client_hts_19,x_270)) else caught-fail) in
                                        {3971}let v_855: bool = not-caught-fail(client_fk_19) in
                                        {3972}let l_240: label = (if v_855 then tls13_finished else caught-fail) in
                                        {3973}let h_227: bitstring = (if v_855 then zero else caught-fail) in
                                        {3974}let x_271: bitstring = (if v_855 then (l_240,h_227) else caught-fail) in
                                        {3975}let server_fk_19: bitstring = (if v_855 then catch-fail(hmac(@6_backend_h,server_hts_19,x_271)) else caught-fail) in
                                        {3976}let v_856: bool = not-caught-fail(server_fk_19) in
                                        {3977}let (master_secret_46: bitstring,chk_26: aead_key,shk_25: aead_key,cfin_26: mac_key,sfin_25: mac_key) = (if v_847 then (if v_848 then (if v_850 then (if v_852 then (if v_853 then (if v_854 then (if v_855 then (if v_856 then (master_secret_45,client_wkh_19,server_wkh_19,client_fk_19,server_fk_19) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {3978}event Client_chk(@6_id_client,chk_26);
                                        {3979}event Client_shk(@6_id_client,shk_25);
                                        {3980}event Client_cfin(@6_id_client,cfin_26);
                                        {3981}event Client_sfin(@6_id_client,sfin_25);
                                        {3982}in(io, enc_ee_msg_18: bitstring);
                                        {3983}let ee_msg_19: msg = aead_dec(@6_backend_a,shk_25,0,zero,enc_ee_msg_18) in
                                        {3984}let EE(ech_ee_18: echExt,extra_ee_18: extraExt) = ee_msg_19 in
                                        {3985}let cur_log2_41: bitstring = (cur_log2_40,ee_msg_19) in
                                        {3986}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_6,sr_26,@6_backend_h,@6_backend_a,c_dom_5,backend_dom,psk_94,safe_psk_21,@6_comp_psk,master_secret_46,chk_26,0,shk_25,1,cfin_26,sfin_25,cur_log2_41)))
                                    )
                                    else
                                        {3987}out(io, illegal_parameter)
                                )
                                else
                                    {3988}out(io, illegal_parameter)
                            )
                            else
                                {4165}get pre_shared_keys(c_dom'_7: domain,=backend_dom,=@6_backend_h,id_43: identityPsk,psk_95: preSharedKey,idP_9: idProc,is_safe_35: bool) in
                                {3989}event Selected_one_time_used_psk(@6_id_client,psk_95,is_safe_35);
                                {3990}event Selected_psk(c_dom_5,c_dom'_7,idP_9,is_safe_35);
                                {3991}event Selected_psk_no_missmatch(@6_id_client,backend_dom,@6_backend_h,psk_95,id_43);
                                {3992}event Selected_psk_with_ID(c_dom_5,c_dom'_7,id_43,idP_9,is_safe_35);
                                {3993}let v_857: bitstring = (id_43,psk_95,is_safe_35) in
                                {3994}let v_858: bool = success?(1-proj-3-tuple(v_857)) in
                                {3995}let is_safe_36: bool = (if v_858 then 3-proj-3-tuple(v_857) else caught-fail) in
                                {3996}let psk_96: preSharedKey = (if v_858 then 2-proj-3-tuple(v_857) else caught-fail) in
                                {3997}let id_44: identityPsk = (if v_858 then 1-proj-3-tuple(v_857) else caught-fail) in
                                {3998}let offer_13: params = (if v_858 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_3,SNI(backend_dom),ech_ext_7,@6_i_extra_ext,trunc_client_psk_ext(id_44)) else caught-fail) in
                                {3999}let cur_log'_13: bitstring = (if v_858 then (cur_log_IN1_HRR_2,CH(i_cr_6,offer_13)) else caught-fail) in
                                {4000}let s_91: bitstring = (if v_858 then zero else caught-fail) in
                                {4001}let k_90: bitstring = (if v_858 then catch-fail(psk2b(psk_96)) else caught-fail) in
                                {4002}let v_859: bool = not-caught-fail(k_90) in
                                {4003}let early_secret_63: bitstring = (if v_858 then catch-fail((if v_859 then hmac(@6_backend_h,s_91,k_90) else fail-any)) else caught-fail) in
                                {4004}let v_860: bool = not-caught-fail(early_secret_63) in
                                {4005}let l_241: label = (if v_860 then tls13_ext_res_binder else caught-fail) in
                                {4006}let m_82: bitstring = (if v_860 then zero else caught-fail) in
                                {4007}let h_228: bitstring = (if v_860 then catch-fail(hash(@6_backend_h,m_82)) else caught-fail) in
                                {4008}let v_861: bool = not-caught-fail(h_228) in
                                {4009}let x_272: bitstring = (if v_861 then (l_241,h_228) else caught-fail) in
                                {4010}let binder_key_42: bitstring = (if v_860 then catch-fail((if v_861 then hmac(@6_backend_h,early_secret_63,x_272) else fail-any)) else caught-fail) in
                                {4011}let v_862: bool = not-caught-fail(binder_key_42) in
                                {4012}let v_863: bitstring = (if v_858 then catch-fail((if v_860 then (if v_862 then (early_secret_63,binder_key_42) else fail-any) else fail-any)) else caught-fail) in
                                {4013}let v_864: bool = (not-caught-fail(v_863) && success?(1-proj-2-tuple(v_863))) in
                                {4014}let kb_42: mac_key = (if v_864 then 2-proj-2-tuple(v_863) else caught-fail) in
                                {4015}let es_61: bitstring = (if v_864 then 1-proj-2-tuple(v_863) else caught-fail) in
                                {4016}let binders_12: bitstring = (if v_864 then catch-fail(hmac(@6_backend_h,kb_42,cur_log'_13)) else caught-fail) in
                                {4017}let v_865: bool = not-caught-fail(binders_12) in
                                {4018}let v_866: bitstring = catch-fail((if v_858 then (if v_864 then (if v_865 then (client_psk_ext(id_44,binders_12),(psk_96,id_44,es_61,is_safe_36)) else fail-any) else fail-any) else fail-any)) in
                                {4019}let v_867: bool = (not-caught-fail(v_866) && success?(1-proj-2-tuple(v_866))) in
                                {4020}let psk_data_21: bitstring = (if v_867 then 2-proj-2-tuple(v_866) else caught-fail) in
                                {4021}let psk_ext_39: preSharedKeyExt = (if v_867 then 1-proj-2-tuple(v_866) else caught-fail) in
                                {4022}let i_offer_10: params = (if v_867 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_3,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_39) else caught-fail) in
                                {4023}let i_client_hello_13: msg = (if v_867 then CH(i_cr_6,i_offer_10) else caught-fail) in
                                {4024}new fake_id_12[]: identityPsk;
                                {4025}new fake_binder_12[]: bitstring;
                                {4026}let o_psk_ext_13: preSharedKeyExt = (if v_867 then (if @6_use_psk then client_psk_ext(fake_id_12,fake_binder_12) else empty_psk_ext) else caught-fail) in
                                {4027}let o_ech_ext_ADD_10: echExt = (if v_867 then ECHClientHelloOuter(ech_h_8,ech_a_8,config_id_6,zero,zero) else caught-fail) in
                                {4028}let o_offer_ADD_10: params = (if v_867 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_5,SNI(o_dom_6),o_ech_ext_ADD_10,empty_extra_ext,o_psk_ext_13) else caught-fail) in
                                {4029}let o_client_hello_ADD_10: msg = (if v_867 then CH(o_cr_8,o_offer_ADD_10) else caught-fail) in
                                {4030}let n_10: nat = (if v_867 then 2 else caught-fail) in
                                {4031}let v_868: hpkeContext = (if v_867 then catch-fail(context) else caught-fail) in
                                {4032}let v_869: bool = (not-caught-fail(v_868) && ((S =nf 1-proj-hpke_context(v_868)) && success?(1-proj-hpke_context(v_868)))) in
                                {4033}let base_nonce_11: bitstring = (if v_869 then 3-proj-hpke_context(v_868) else caught-fail) in
                                {4034}let key_11: aead_key = (if v_869 then 2-proj-hpke_context(v_868) else caught-fail) in
                                {4035}let payload_11: bitstring = (if v_867 then catch-fail((if v_869 then aead_enc(ech_a_8,key_11,(base_nonce_11,n_10),o_client_hello_ADD_10,i_client_hello_13) else fail-any)) else caught-fail) in
                                {4036}let v_870: bool = not-caught-fail(payload_11) in
                                {4037}let o_ech_ext_13: echExt = (if v_870 then ECHClientHelloOuter(ech_h_8,ech_a_8,config_id_6,zero,payload_11) else caught-fail) in
                                {4038}let o_offer_21: params = (if v_870 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_5,SNI(o_dom_6),o_ech_ext_13,empty_extra_ext,o_psk_ext_13) else caught-fail) in
                                {4039}let (o_client_hello'_7: msg,i_client_hello'_7: msg,i_cr'_7: bytes32,i_kex_data'_7: bitstring,psk_data'_17: bitstring) = (if v_867 then (if v_870 then (CH(o_cr_8,o_offer_21),i_client_hello_13,i_cr_6,i_kex_data_6,psk_data_21) else fail-any) else fail-any) in
                                {4040}out(io, o_client_hello'_7);
                                {4041}in(io, server_hello'_15: msg);
                                {4042}let SH(B32(sr24'_7: bytes24,sr8'_7: bytes8),params'_7: params) = server_hello'_15 in
                                {4043}let cur_log_IN1_HRR_IN2_7: bitstring = (cur_log_IN1_HRR_2,i_client_hello'_7) in
                                {4044}let sh_modified_10: msg = SH(B32(sr24'_7,zero8),params'_7) in
                                {4045}let cur_log_sh_10: bitstring = (cur_log_IN1_HRR_IN2_7,sh_modified_10) in
                                {4046}let transcript_ech_conf_10: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_10)) in
                                {4047}let v_871: bool = not-caught-fail(transcript_ech_conf_10) in
                                {4048}let s_92: bitstring = (if v_871 then zero else caught-fail) in
                                {4049}let k_91: bitstring = (if v_871 then catch-fail(b32_2_b(get_random(i_client_hello'_7))) else caught-fail) in
                                {4050}let v_872: bool = not-caught-fail(k_91) in
                                {4051}let k_92: bitstring = (if v_871 then catch-fail((if v_872 then hmac(@6_backend_h,s_92,k_91) else fail-any)) else caught-fail) in
                                {4052}let v_873: bool = not-caught-fail(k_92) in
                                {4053}let l_242: label = (if v_873 then ech_accept_confirmation else caught-fail) in
                                {4054}let x_273: bitstring = (if v_873 then (l_242,cur_log_sh_10) else caught-fail) in
                                {4055}let sr8_13: bytes8 = (if v_871 then catch-fail(crop_into_bytes8((if v_873 then hmac(@6_backend_h,k_92,x_273) else fail-any))) else caught-fail) in
                                {4056}let v_874: bool = not-caught-fail(sr8_13) in
                                {4057}if (B32(sr24'_7,sr8'_7) = (if v_871 then (if v_874 then B32(sr24'_7,sr8_13) else fail-any) else fail-any)) then
                                {4058}let (x_274: bitstring,g_23: group) = i_kex_data'_7 in
                                {4059}let (psk_offer_19: preSharedKey,id_offer_19: identityPsk,es_offer_19: bitstring,is_safe_offer_19: bool) = psk_data'_17 in
                                {4060}event Client_PSKOffer(@6_id_client,psk_offer_19,id_offer_19,is_safe_offer_19);
                                {4061}event Client_Rand_client(@6_id_client,i_cr'_7);
                                {4062}event Client_DH_client(@6_id_client,dh_pub(g_23,x_274));
                                {4063}event Client_server_domain(@6_id_client,backend_dom);
                                {4064}let SH(sr_27: bytes32,mode_22: params) = server_hello'_15 in
                                {4065}event Client_Rand_server(@6_id_client,sr_27);
                                {4066}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_23,gy_20: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_40: preSharedKeyExt) = mode_22 in
                                (
                                    {4067}let cur_log2_42: bitstring = (cur_log_IN1_HRR_IN2_7,server_hello'_15) in
                                    {4068}event Client_DH_server(@6_id_client,gy_20);
                                    {4069}let v_875: bool = (psk_ext_40 = empty_psk_ext) in
                                    {4070}let psk_97: preSharedKey = (if v_875 then NoPsk else caught-fail) in
                                    {4071}let s_93: bitstring = (if v_875 then zero else caught-fail) in
                                    {4072}let k_93: bitstring = (if v_875 then catch-fail(psk2b(psk_97)) else caught-fail) in
                                    {4073}let v_876: bool = not-caught-fail(k_93) in
                                    {4074}let early_secret_64: bitstring = (if v_875 then catch-fail((if v_876 then hmac(@6_backend_h,s_93,k_93) else fail-any)) else caught-fail) in
                                    {4075}let v_877: bool = not-caught-fail(early_secret_64) in
                                    {4076}let l_243: label = (if v_877 then tls13_ext_res_binder else caught-fail) in
                                    {4077}let m_83: bitstring = (if v_877 then zero else caught-fail) in
                                    {4078}let h_229: bitstring = (if v_877 then catch-fail(hash(@6_backend_h,m_83)) else caught-fail) in
                                    {4079}let v_878: bool = not-caught-fail(h_229) in
                                    {4080}let x_275: bitstring = (if v_878 then (l_243,h_229) else caught-fail) in
                                    {4081}let binder_key_43: bitstring = (if v_877 then catch-fail((if v_878 then hmac(@6_backend_h,early_secret_64,x_275) else fail-any)) else caught-fail) in
                                    {4082}let v_879: bool = not-caught-fail(binder_key_43) in
                                    {4083}let v_880: bitstring = (if v_875 then catch-fail((if v_877 then (if v_879 then (early_secret_64,binder_key_43) else fail-any) else fail-any)) else caught-fail) in
                                    {4084}let v_881: bool = (not-caught-fail(v_880) && success?(1-proj-2-tuple(v_880))) in
                                    {4085}let kb_43: mac_key = (if v_881 then 2-proj-2-tuple(v_880) else caught-fail) in
                                    {4086}let es_62: bitstring = (if v_881 then 1-proj-2-tuple(v_880) else caught-fail) in
                                    {4087}let v_882: bitstring = (if not(v_875) then catch-fail(psk_data'_17) else caught-fail) in
                                    {4088}let v_883: bool = (not-caught-fail(v_882) && success?(1-proj-4-tuple(v_882))) in
                                    {4089}let is_safe_37: bool = (if v_883 then 4-proj-4-tuple(v_882) else caught-fail) in
                                    {4090}let es_63: bitstring = (if v_883 then 3-proj-4-tuple(v_882) else caught-fail) in
                                    {4091}let id_45: identityPsk = (if v_883 then 2-proj-4-tuple(v_882) else caught-fail) in
                                    {4092}let psk_98: preSharedKey = (if v_883 then 1-proj-4-tuple(v_882) else caught-fail) in
                                    {4093}let (psk_99: preSharedKey,early_secret_65: bitstring,valid_19: bool,safe_psk_22: bool) = (if v_875 then (if v_881 then (NoPsk,es_62,true,false) else fail-any) else (if v_883 then (psk_98,es_63,((psk_98 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_40)),is_safe_37) else fail-any)) in
                                    {4094}event Client_PSKChoosen(@6_id_client,psk_99,safe_psk_22);
                                    {4095}if valid_19 then
                                    (
                                        {4096}let gxy_39: element = catch-fail(dh_decap_fun(g_23,gy_20,x_274)) in
                                        {4097}let v_884: bool = not-caught-fail(gxy_39) in
                                        {4098}new s_94[]: seed;
                                        {4099}let gxy_40: element = (if v_884 then gxy_39 else dh_f(s_94)) in
                                        {4100}event Client_DH_gxy(@6_id_client,gxy_40);
                                        {4101}let l_244: label = tls13_derived in
                                        {4102}let m_84: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {4103}let v_885: bool = not-caught-fail(m_84) in
                                        {4104}let h_230: bitstring = (if v_885 then catch-fail(hash(@6_backend_h,m_84)) else caught-fail) in
                                        {4105}let v_886: bool = not-caught-fail(h_230) in
                                        {4106}let x_276: bitstring = (if v_886 then (l_244,h_230) else caught-fail) in
                                        {4107}let extra_42: bitstring = catch-fail((if v_885 then (if v_886 then hmac(@6_backend_h,early_secret_65,x_276) else fail-any) else fail-any)) in
                                        {4108}let v_887: bool = not-caught-fail(extra_42) in
                                        {4109}let handshake_secret_20: bitstring = (if v_887 then hmac(@6_backend_h,extra_42,gxy_40) else fail-any) in
                                        {4110}let l_245: label = tls13_derived in
                                        {4111}let m_85: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {4112}let v_888: bool = not-caught-fail(m_85) in
                                        {4113}let h_231: bitstring = (if v_888 then catch-fail(hash(@6_backend_h,m_85)) else caught-fail) in
                                        {4114}let v_889: bool = not-caught-fail(h_231) in
                                        {4115}let x_277: bitstring = (if v_889 then (l_245,h_231) else caught-fail) in
                                        {4116}let extra_43: bitstring = catch-fail((if v_888 then (if v_889 then hmac(@6_backend_h,handshake_secret_20,x_277) else fail-any) else fail-any)) in
                                        {4117}let v_890: bool = not-caught-fail(extra_43) in
                                        {4118}let k_94: bitstring = (if v_890 then zero else caught-fail) in
                                        {4119}let master_secret_47: bitstring = (if v_890 then catch-fail(hmac(@6_backend_h,handshake_secret_20,k_94)) else caught-fail) in
                                        {4120}let v_891: bool = not-caught-fail(master_secret_47) in
                                        {4121}let l_246: label = (if v_891 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {4122}let h_232: bitstring = (if v_891 then catch-fail(hash(@6_backend_h,cur_log2_42)) else caught-fail) in
                                        {4123}let v_892: bool = not-caught-fail(h_232) in
                                        {4124}let x_278: bitstring = (if v_892 then (l_246,h_232) else caught-fail) in
                                        {4125}let client_hts_20: bitstring = (if v_891 then catch-fail((if v_892 then hmac(@6_backend_h,handshake_secret_20,x_278) else fail-any)) else caught-fail) in
                                        {4126}let v_893: bool = not-caught-fail(client_hts_20) in
                                        {4127}let l_247: label = (if v_893 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {4128}let h_233: bitstring = (if v_893 then catch-fail(hash(@6_backend_h,cur_log2_42)) else caught-fail) in
                                        {4129}let v_894: bool = not-caught-fail(h_233) in
                                        {4130}let x_279: bitstring = (if v_894 then (l_247,h_233) else caught-fail) in
                                        {4131}let server_hts_20: bitstring = (if v_893 then catch-fail((if v_894 then hmac(@6_backend_h,handshake_secret_20,x_279) else fail-any)) else caught-fail) in
                                        {4132}let v_895: bool = not-caught-fail(server_hts_20) in
                                        {4133}let l_248: label = (if v_895 then tls13_key else caught-fail) in
                                        {4134}let h_234: bitstring = (if v_895 then zero else caught-fail) in
                                        {4135}let x_280: bitstring = (if v_895 then (l_248,h_234) else caught-fail) in
                                        {4136}let client_wkh_20: bitstring = (if v_895 then catch-fail(hmac(@6_backend_h,client_hts_20,x_280)) else caught-fail) in
                                        {4137}let v_896: bool = not-caught-fail(client_wkh_20) in
                                        {4138}let l_249: label = (if v_896 then tls13_key else caught-fail) in
                                        {4139}let h_235: bitstring = (if v_896 then zero else caught-fail) in
                                        {4140}let x_281: bitstring = (if v_896 then (l_249,h_235) else caught-fail) in
                                        {4141}let server_wkh_20: bitstring = (if v_896 then catch-fail(hmac(@6_backend_h,server_hts_20,x_281)) else caught-fail) in
                                        {4142}let v_897: bool = not-caught-fail(server_wkh_20) in
                                        {4143}let l_250: label = (if v_897 then tls13_finished else caught-fail) in
                                        {4144}let h_236: bitstring = (if v_897 then zero else caught-fail) in
                                        {4145}let x_282: bitstring = (if v_897 then (l_250,h_236) else caught-fail) in
                                        {4146}let client_fk_20: bitstring = (if v_897 then catch-fail(hmac(@6_backend_h,client_hts_20,x_282)) else caught-fail) in
                                        {4147}let v_898: bool = not-caught-fail(client_fk_20) in
                                        {4148}let l_251: label = (if v_898 then tls13_finished else caught-fail) in
                                        {4149}let h_237: bitstring = (if v_898 then zero else caught-fail) in
                                        {4150}let x_283: bitstring = (if v_898 then (l_251,h_237) else caught-fail) in
                                        {4151}let server_fk_20: bitstring = (if v_898 then catch-fail(hmac(@6_backend_h,server_hts_20,x_283)) else caught-fail) in
                                        {4152}let v_899: bool = not-caught-fail(server_fk_20) in
                                        {4153}let (master_secret_48: bitstring,chk_27: aead_key,shk_26: aead_key,cfin_27: mac_key,sfin_26: mac_key) = (if v_890 then (if v_891 then (if v_893 then (if v_895 then (if v_896 then (if v_897 then (if v_898 then (if v_899 then (master_secret_47,client_wkh_20,server_wkh_20,client_fk_20,server_fk_20) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {4154}event Client_chk(@6_id_client,chk_27);
                                        {4155}event Client_shk(@6_id_client,shk_26);
                                        {4156}event Client_cfin(@6_id_client,cfin_27);
                                        {4157}event Client_sfin(@6_id_client,sfin_26);
                                        {4158}in(io, enc_ee_msg_19: bitstring);
                                        {4159}let ee_msg_20: msg = aead_dec(@6_backend_a,shk_26,0,zero,enc_ee_msg_19) in
                                        {4160}let EE(ech_ee_19: echExt,extra_ee_19: extraExt) = ee_msg_20 in
                                        {4161}let cur_log2_43: bitstring = (cur_log2_42,ee_msg_20) in
                                        {4162}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_7,sr_27,@6_backend_h,@6_backend_a,c_dom_5,backend_dom,psk_99,safe_psk_22,@6_comp_psk,master_secret_48,chk_27,0,shk_26,1,cfin_27,sfin_26,cur_log2_43)))
                                    )
                                    else
                                        {4163}out(io, illegal_parameter)
                                )
                                else
                                    {4164}out(io, illegal_parameter)
                        )
                        else
                            {4166}let psk_100: preSharedKey = NoPsk in
                            {4167}let s_95: bitstring = zero in
                            {4168}let k_95: bitstring = catch-fail(psk2b(psk_100)) in
                            {4169}let v_900: bool = not-caught-fail(k_95) in
                            {4170}let early_secret_66: bitstring = catch-fail((if v_900 then hmac(@6_backend_h,s_95,k_95) else fail-any)) in
                            {4171}let v_901: bool = not-caught-fail(early_secret_66) in
                            {4172}let l_252: label = (if v_901 then tls13_ext_res_binder else caught-fail) in
                            {4173}let m_86: bitstring = (if v_901 then zero else caught-fail) in
                            {4174}let h_238: bitstring = (if v_901 then catch-fail(hash(@6_backend_h,m_86)) else caught-fail) in
                            {4175}let v_902: bool = not-caught-fail(h_238) in
                            {4176}let x_284: bitstring = (if v_902 then (l_252,h_238) else caught-fail) in
                            {4177}let binder_key_44: bitstring = (if v_901 then catch-fail((if v_902 then hmac(@6_backend_h,early_secret_66,x_284) else fail-any)) else caught-fail) in
                            {4178}let v_903: bool = not-caught-fail(binder_key_44) in
                            {4179}let v_904: bitstring = catch-fail((if v_901 then (if v_903 then (early_secret_66,binder_key_44) else fail-any) else fail-any)) in
                            {4180}let v_905: bool = (not-caught-fail(v_904) && success?(1-proj-2-tuple(v_904))) in
                            {4181}let kb_44: mac_key = (if v_905 then 2-proj-2-tuple(v_904) else caught-fail) in
                            {4182}let es_64: bitstring = (if v_905 then 1-proj-2-tuple(v_904) else caught-fail) in
                            {4183}let v_906: bitstring = catch-fail((if v_905 then (empty_psk_ext,(NoPsk,zero,es_64,false)) else fail-any)) in
                            {4184}let v_907: bool = (not-caught-fail(v_906) && success?(1-proj-2-tuple(v_906))) in
                            {4185}let psk_data_22: bitstring = (if v_907 then 2-proj-2-tuple(v_906) else caught-fail) in
                            {4186}let psk_ext_41: preSharedKeyExt = (if v_907 then 1-proj-2-tuple(v_906) else caught-fail) in
                            {4187}let i_offer_11: params = (if v_907 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_3,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_41) else caught-fail) in
                            {4188}let i_client_hello_14: msg = (if v_907 then CH(i_cr_6,i_offer_11) else caught-fail) in
                            {4189}new fake_id_13[]: identityPsk;
                            {4190}new fake_binder_13[]: bitstring;
                            {4191}let o_psk_ext_14: preSharedKeyExt = (if v_907 then (if @6_use_psk then client_psk_ext(fake_id_13,fake_binder_13) else empty_psk_ext) else caught-fail) in
                            {4192}let o_ech_ext_ADD_11: echExt = (if v_907 then ECHClientHelloOuter(ech_h_8,ech_a_8,config_id_6,zero,zero) else caught-fail) in
                            {4193}let o_offer_ADD_11: params = (if v_907 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_5,SNI(o_dom_6),o_ech_ext_ADD_11,empty_extra_ext,o_psk_ext_14) else caught-fail) in
                            {4194}let o_client_hello_ADD_11: msg = (if v_907 then CH(o_cr_8,o_offer_ADD_11) else caught-fail) in
                            {4195}let n_11: nat = (if v_907 then 2 else caught-fail) in
                            {4196}let v_908: hpkeContext = (if v_907 then catch-fail(context) else caught-fail) in
                            {4197}let v_909: bool = (not-caught-fail(v_908) && ((S =nf 1-proj-hpke_context(v_908)) && success?(1-proj-hpke_context(v_908)))) in
                            {4198}let base_nonce_12: bitstring = (if v_909 then 3-proj-hpke_context(v_908) else caught-fail) in
                            {4199}let key_12: aead_key = (if v_909 then 2-proj-hpke_context(v_908) else caught-fail) in
                            {4200}let payload_12: bitstring = (if v_907 then catch-fail((if v_909 then aead_enc(ech_a_8,key_12,(base_nonce_12,n_11),o_client_hello_ADD_11,i_client_hello_14) else fail-any)) else caught-fail) in
                            {4201}let v_910: bool = not-caught-fail(payload_12) in
                            {4202}let o_ech_ext_14: echExt = (if v_910 then ECHClientHelloOuter(ech_h_8,ech_a_8,config_id_6,zero,payload_12) else caught-fail) in
                            {4203}let o_offer_22: params = (if v_910 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_5,SNI(o_dom_6),o_ech_ext_14,empty_extra_ext,o_psk_ext_14) else caught-fail) in
                            {4204}let (o_client_hello'_8: msg,i_client_hello'_8: msg,i_cr'_8: bytes32,i_kex_data'_8: bitstring,psk_data'_18: bitstring) = (if v_907 then (if v_910 then (CH(o_cr_8,o_offer_22),i_client_hello_14,i_cr_6,i_kex_data_6,psk_data_22) else fail-any) else fail-any) in
                            {4205}out(io, o_client_hello'_8);
                            {4206}in(io, server_hello'_16: msg);
                            {4207}let SH(B32(sr24'_8: bytes24,sr8'_8: bytes8),params'_8: params) = server_hello'_16 in
                            {4208}let cur_log_IN1_HRR_IN2_8: bitstring = (cur_log_IN1_HRR_2,i_client_hello'_8) in
                            {4209}let sh_modified_11: msg = SH(B32(sr24'_8,zero8),params'_8) in
                            {4210}let cur_log_sh_11: bitstring = (cur_log_IN1_HRR_IN2_8,sh_modified_11) in
                            {4211}let transcript_ech_conf_11: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_11)) in
                            {4212}let v_911: bool = not-caught-fail(transcript_ech_conf_11) in
                            {4213}let s_96: bitstring = (if v_911 then zero else caught-fail) in
                            {4214}let k_96: bitstring = (if v_911 then catch-fail(b32_2_b(get_random(i_client_hello'_8))) else caught-fail) in
                            {4215}let v_912: bool = not-caught-fail(k_96) in
                            {4216}let k_97: bitstring = (if v_911 then catch-fail((if v_912 then hmac(@6_backend_h,s_96,k_96) else fail-any)) else caught-fail) in
                            {4217}let v_913: bool = not-caught-fail(k_97) in
                            {4218}let l_253: label = (if v_913 then ech_accept_confirmation else caught-fail) in
                            {4219}let x_285: bitstring = (if v_913 then (l_253,cur_log_sh_11) else caught-fail) in
                            {4220}let sr8_14: bytes8 = (if v_911 then catch-fail(crop_into_bytes8((if v_913 then hmac(@6_backend_h,k_97,x_285) else fail-any))) else caught-fail) in
                            {4221}let v_914: bool = not-caught-fail(sr8_14) in
                            {4222}if (B32(sr24'_8,sr8'_8) = (if v_911 then (if v_914 then B32(sr24'_8,sr8_14) else fail-any) else fail-any)) then
                            {4223}let (x_286: bitstring,g_24: group) = i_kex_data'_8 in
                            {4224}let (psk_offer_20: preSharedKey,id_offer_20: identityPsk,es_offer_20: bitstring,is_safe_offer_20: bool) = psk_data'_18 in
                            {4225}event Client_PSKOffer(@6_id_client,psk_offer_20,id_offer_20,is_safe_offer_20);
                            {4226}event Client_Rand_client(@6_id_client,i_cr'_8);
                            {4227}event Client_DH_client(@6_id_client,dh_pub(g_24,x_286));
                            {4228}event Client_server_domain(@6_id_client,backend_dom);
                            {4229}let SH(sr_28: bytes32,mode_23: params) = server_hello'_16 in
                            {4230}event Client_Rand_server(@6_id_client,sr_28);
                            {4231}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_24,gy_21: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_42: preSharedKeyExt) = mode_23 in
                            (
                                {4232}let cur_log2_44: bitstring = (cur_log_IN1_HRR_IN2_8,server_hello'_16) in
                                {4233}event Client_DH_server(@6_id_client,gy_21);
                                {4234}let v_915: bool = (psk_ext_42 = empty_psk_ext) in
                                {4235}let psk_101: preSharedKey = (if v_915 then NoPsk else caught-fail) in
                                {4236}let s_97: bitstring = (if v_915 then zero else caught-fail) in
                                {4237}let k_98: bitstring = (if v_915 then catch-fail(psk2b(psk_101)) else caught-fail) in
                                {4238}let v_916: bool = not-caught-fail(k_98) in
                                {4239}let early_secret_67: bitstring = (if v_915 then catch-fail((if v_916 then hmac(@6_backend_h,s_97,k_98) else fail-any)) else caught-fail) in
                                {4240}let v_917: bool = not-caught-fail(early_secret_67) in
                                {4241}let l_254: label = (if v_917 then tls13_ext_res_binder else caught-fail) in
                                {4242}let m_87: bitstring = (if v_917 then zero else caught-fail) in
                                {4243}let h_239: bitstring = (if v_917 then catch-fail(hash(@6_backend_h,m_87)) else caught-fail) in
                                {4244}let v_918: bool = not-caught-fail(h_239) in
                                {4245}let x_287: bitstring = (if v_918 then (l_254,h_239) else caught-fail) in
                                {4246}let binder_key_45: bitstring = (if v_917 then catch-fail((if v_918 then hmac(@6_backend_h,early_secret_67,x_287) else fail-any)) else caught-fail) in
                                {4247}let v_919: bool = not-caught-fail(binder_key_45) in
                                {4248}let v_920: bitstring = (if v_915 then catch-fail((if v_917 then (if v_919 then (early_secret_67,binder_key_45) else fail-any) else fail-any)) else caught-fail) in
                                {4249}let v_921: bool = (not-caught-fail(v_920) && success?(1-proj-2-tuple(v_920))) in
                                {4250}let kb_45: mac_key = (if v_921 then 2-proj-2-tuple(v_920) else caught-fail) in
                                {4251}let es_65: bitstring = (if v_921 then 1-proj-2-tuple(v_920) else caught-fail) in
                                {4252}let v_922: bitstring = (if not(v_915) then catch-fail(psk_data'_18) else caught-fail) in
                                {4253}let v_923: bool = (not-caught-fail(v_922) && success?(1-proj-4-tuple(v_922))) in
                                {4254}let is_safe_38: bool = (if v_923 then 4-proj-4-tuple(v_922) else caught-fail) in
                                {4255}let es_66: bitstring = (if v_923 then 3-proj-4-tuple(v_922) else caught-fail) in
                                {4256}let id_46: identityPsk = (if v_923 then 2-proj-4-tuple(v_922) else caught-fail) in
                                {4257}let psk_102: preSharedKey = (if v_923 then 1-proj-4-tuple(v_922) else caught-fail) in
                                {4258}let (psk_103: preSharedKey,early_secret_68: bitstring,valid_20: bool,safe_psk_23: bool) = (if v_915 then (if v_921 then (NoPsk,es_65,true,false) else fail-any) else (if v_923 then (psk_102,es_66,((psk_102 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_42)),is_safe_38) else fail-any)) in
                                {4259}event Client_PSKChoosen(@6_id_client,psk_103,safe_psk_23);
                                {4260}if valid_20 then
                                (
                                    {4261}let gxy_41: element = catch-fail(dh_decap_fun(g_24,gy_21,x_286)) in
                                    {4262}let v_924: bool = not-caught-fail(gxy_41) in
                                    {4263}new s_98[]: seed;
                                    {4264}let gxy_42: element = (if v_924 then gxy_41 else dh_f(s_98)) in
                                    {4265}event Client_DH_gxy(@6_id_client,gxy_42);
                                    {4266}let l_255: label = tls13_derived in
                                    {4267}let m_88: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                    {4268}let v_925: bool = not-caught-fail(m_88) in
                                    {4269}let h_240: bitstring = (if v_925 then catch-fail(hash(@6_backend_h,m_88)) else caught-fail) in
                                    {4270}let v_926: bool = not-caught-fail(h_240) in
                                    {4271}let x_288: bitstring = (if v_926 then (l_255,h_240) else caught-fail) in
                                    {4272}let extra_44: bitstring = catch-fail((if v_925 then (if v_926 then hmac(@6_backend_h,early_secret_68,x_288) else fail-any) else fail-any)) in
                                    {4273}let v_927: bool = not-caught-fail(extra_44) in
                                    {4274}let handshake_secret_21: bitstring = (if v_927 then hmac(@6_backend_h,extra_44,gxy_42) else fail-any) in
                                    {4275}let l_256: label = tls13_derived in
                                    {4276}let m_89: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                    {4277}let v_928: bool = not-caught-fail(m_89) in
                                    {4278}let h_241: bitstring = (if v_928 then catch-fail(hash(@6_backend_h,m_89)) else caught-fail) in
                                    {4279}let v_929: bool = not-caught-fail(h_241) in
                                    {4280}let x_289: bitstring = (if v_929 then (l_256,h_241) else caught-fail) in
                                    {4281}let extra_45: bitstring = catch-fail((if v_928 then (if v_929 then hmac(@6_backend_h,handshake_secret_21,x_289) else fail-any) else fail-any)) in
                                    {4282}let v_930: bool = not-caught-fail(extra_45) in
                                    {4283}let k_99: bitstring = (if v_930 then zero else caught-fail) in
                                    {4284}let master_secret_49: bitstring = (if v_930 then catch-fail(hmac(@6_backend_h,handshake_secret_21,k_99)) else caught-fail) in
                                    {4285}let v_931: bool = not-caught-fail(master_secret_49) in
                                    {4286}let l_257: label = (if v_931 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {4287}let h_242: bitstring = (if v_931 then catch-fail(hash(@6_backend_h,cur_log2_44)) else caught-fail) in
                                    {4288}let v_932: bool = not-caught-fail(h_242) in
                                    {4289}let x_290: bitstring = (if v_932 then (l_257,h_242) else caught-fail) in
                                    {4290}let client_hts_21: bitstring = (if v_931 then catch-fail((if v_932 then hmac(@6_backend_h,handshake_secret_21,x_290) else fail-any)) else caught-fail) in
                                    {4291}let v_933: bool = not-caught-fail(client_hts_21) in
                                    {4292}let l_258: label = (if v_933 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {4293}let h_243: bitstring = (if v_933 then catch-fail(hash(@6_backend_h,cur_log2_44)) else caught-fail) in
                                    {4294}let v_934: bool = not-caught-fail(h_243) in
                                    {4295}let x_291: bitstring = (if v_934 then (l_258,h_243) else caught-fail) in
                                    {4296}let server_hts_21: bitstring = (if v_933 then catch-fail((if v_934 then hmac(@6_backend_h,handshake_secret_21,x_291) else fail-any)) else caught-fail) in
                                    {4297}let v_935: bool = not-caught-fail(server_hts_21) in
                                    {4298}let l_259: label = (if v_935 then tls13_key else caught-fail) in
                                    {4299}let h_244: bitstring = (if v_935 then zero else caught-fail) in
                                    {4300}let x_292: bitstring = (if v_935 then (l_259,h_244) else caught-fail) in
                                    {4301}let client_wkh_21: bitstring = (if v_935 then catch-fail(hmac(@6_backend_h,client_hts_21,x_292)) else caught-fail) in
                                    {4302}let v_936: bool = not-caught-fail(client_wkh_21) in
                                    {4303}let l_260: label = (if v_936 then tls13_key else caught-fail) in
                                    {4304}let h_245: bitstring = (if v_936 then zero else caught-fail) in
                                    {4305}let x_293: bitstring = (if v_936 then (l_260,h_245) else caught-fail) in
                                    {4306}let server_wkh_21: bitstring = (if v_936 then catch-fail(hmac(@6_backend_h,server_hts_21,x_293)) else caught-fail) in
                                    {4307}let v_937: bool = not-caught-fail(server_wkh_21) in
                                    {4308}let l_261: label = (if v_937 then tls13_finished else caught-fail) in
                                    {4309}let h_246: bitstring = (if v_937 then zero else caught-fail) in
                                    {4310}let x_294: bitstring = (if v_937 then (l_261,h_246) else caught-fail) in
                                    {4311}let client_fk_21: bitstring = (if v_937 then catch-fail(hmac(@6_backend_h,client_hts_21,x_294)) else caught-fail) in
                                    {4312}let v_938: bool = not-caught-fail(client_fk_21) in
                                    {4313}let l_262: label = (if v_938 then tls13_finished else caught-fail) in
                                    {4314}let h_247: bitstring = (if v_938 then zero else caught-fail) in
                                    {4315}let x_295: bitstring = (if v_938 then (l_262,h_247) else caught-fail) in
                                    {4316}let server_fk_21: bitstring = (if v_938 then catch-fail(hmac(@6_backend_h,server_hts_21,x_295)) else caught-fail) in
                                    {4317}let v_939: bool = not-caught-fail(server_fk_21) in
                                    {4318}let (master_secret_50: bitstring,chk_28: aead_key,shk_27: aead_key,cfin_28: mac_key,sfin_27: mac_key) = (if v_930 then (if v_931 then (if v_933 then (if v_935 then (if v_936 then (if v_937 then (if v_938 then (if v_939 then (master_secret_49,client_wkh_21,server_wkh_21,client_fk_21,server_fk_21) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {4319}event Client_chk(@6_id_client,chk_28);
                                    {4320}event Client_shk(@6_id_client,shk_27);
                                    {4321}event Client_cfin(@6_id_client,cfin_28);
                                    {4322}event Client_sfin(@6_id_client,sfin_27);
                                    {4323}in(io, enc_ee_msg_20: bitstring);
                                    {4324}let ee_msg_21: msg = aead_dec(@6_backend_a,shk_27,0,zero,enc_ee_msg_20) in
                                    {4325}let EE(ech_ee_20: echExt,extra_ee_20: extraExt) = ee_msg_21 in
                                    {4326}let cur_log2_45: bitstring = (cur_log2_44,ee_msg_21) in
                                    {4327}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_8,sr_28,@6_backend_h,@6_backend_a,c_dom_5,backend_dom,psk_103,safe_psk_23,@6_comp_psk,master_secret_50,chk_28,0,shk_27,1,cfin_28,sfin_27,cur_log2_45)))
                                )
                                else
                                    {4328}out(io, illegal_parameter)
                            )
                            else
                                {4329}out(io, illegal_parameter)
                    )
                    else
                        {4330}let cur_log_OU1_HRR_2: bitstring = ((zero,o_client_hello_2),server_hello_3) in
                        {4331}let ech_config(config_id_7: configId,ech_g_9: group,pkR_9: element,o_dom_7: domain,ech_h_9: hash_alg,ech_a_9: aead_alg) = ech_conf in
                        {4332}new rand24_11[]: bytes24;
                        {4333}new rand8_11[]: bytes8;
                        {4334}let o_cr_9: bytes32 = B32(rand24_11,rand8_11) in
                        {4335}let send_key_share_8: bool = true in
                        {4336}new s_99[]: seed;
                        {4337}let gx_23: element = dh_pub(@6_tls_g,dh_k(s_99)) in
                        {4338}let v_940: bitstring = (dh_k(s_99),gx_23) in
                        {4339}let v_941: bool = success?(1-proj-2-tuple(v_940)) in
                        {4340}let gx_24: element = (if v_941 then 2-proj-2-tuple(v_940) else caught-fail) in
                        {4341}let x_296: bitstring = (if v_941 then 1-proj-2-tuple(v_940) else caught-fail) in
                        {4342}let kex_10: kex_alg = (if v_941 then (if send_key_share_8 then DHE_kex(@6_tls_g,gx_24) else DHE_group(@6_tls_g)) else caught-fail) in
                        {4343}let (o_kex_ext_6: keyShareExt,kex_data_2: bitstring) = (if v_941 then (client_kex_ext(kex_10),(x_296,@6_tls_g)) else fail-any) in
                        {4344}if @6_use_grease then
                        (
                            {4345}let extra_46: extraExt = empty_extra_ext in
                            {4346}if @6_use_psk then
                            (
                                {4347}let (psk_104: preSharedKey,id_47: identityPsk,old_es_6: bitstring,is_safe_39: bool) = psk_data_19 in
                                (
                                    {4348}let offer_14: params = nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_6,SNI(o_dom_7),o_ech_ext_11,extra_46,trunc_client_psk_ext(id_47)) in
                                    {4349}let cur_log'_14: bitstring = (cur_log_OU1_HRR_2,CH(o_cr_9,offer_14)) in
                                    {4350}let s_100: bitstring = zero in
                                    {4351}let k_100: bitstring = catch-fail(psk2b(psk_104)) in
                                    {4352}let v_942: bool = not-caught-fail(k_100) in
                                    {4353}let early_secret_69: bitstring = catch-fail((if v_942 then hmac(@6_tls_h,s_100,k_100) else fail-any)) in
                                    {4354}let v_943: bool = not-caught-fail(early_secret_69) in
                                    {4355}let l_263: label = (if v_943 then tls13_ext_res_binder else caught-fail) in
                                    {4356}let m_90: bitstring = (if v_943 then zero else caught-fail) in
                                    {4357}let h_248: bitstring = (if v_943 then catch-fail(hash(@6_tls_h,m_90)) else caught-fail) in
                                    {4358}let v_944: bool = not-caught-fail(h_248) in
                                    {4359}let x_297: bitstring = (if v_944 then (l_263,h_248) else caught-fail) in
                                    {4360}let binder_key_46: bitstring = (if v_943 then catch-fail((if v_944 then hmac(@6_tls_h,early_secret_69,x_297) else fail-any)) else caught-fail) in
                                    {4361}let v_945: bool = not-caught-fail(binder_key_46) in
                                    {4362}let v_946: bitstring = catch-fail((if v_943 then (if v_945 then (early_secret_69,binder_key_46) else fail-any) else fail-any)) in
                                    {4363}let v_947: bool = (not-caught-fail(v_946) && success?(1-proj-2-tuple(v_946))) in
                                    {4364}let kb_46: mac_key = (if v_947 then 2-proj-2-tuple(v_946) else caught-fail) in
                                    {4365}let es_67: bitstring = (if v_947 then 1-proj-2-tuple(v_946) else caught-fail) in
                                    {4366}let binders_13: bitstring = (if v_947 then catch-fail(hmac(@6_tls_h,kb_46,cur_log'_14)) else caught-fail) in
                                    {4367}let v_948: bool = not-caught-fail(binders_13) in
                                    {4368}let v_949: bitstring = catch-fail((if v_947 then (if v_948 then (client_psk_ext(id_47,binders_13),(psk_104,id_47,es_67,is_safe_39)) else fail-any) else fail-any)) in
                                    {4369}let v_950: bool = (not-caught-fail(v_949) && success?(1-proj-2-tuple(v_949))) in
                                    {4370}let psk_data_23: bitstring = (if v_950 then 2-proj-2-tuple(v_949) else caught-fail) in
                                    {4371}let psk_ext_43: preSharedKeyExt = (if v_950 then 1-proj-2-tuple(v_949) else caught-fail) in
                                    {4372}let o_offer_23: params = (if v_950 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_6,SNI(o_dom_7),o_ech_ext_11,empty_extra_ext,psk_ext_43) else caught-fail) in
                                    {4373}let (client_hello'_8: msg,cr'_8: bytes32,kex_data'_8: bitstring,psk_data'_19: bitstring) = (if v_950 then (CH(o_cr_9,o_offer_23),o_cr_9,kex_data_2,psk_data_23) else fail-any) in
                                    {4374}out(io, client_hello'_8);
                                    {4375}let cur_log_OU1_HRR_OU2_8: bitstring = (cur_log_OU1_HRR_2,client_hello'_8) in
                                    {4376}in(io, server_hello'_17: msg);
                                    {4377}let SH(sr'_8: bytes32,mode'_8: params) = server_hello'_17 in
                                    (
                                        {4378}if (sr'_8 = B32(HRR24,HRR8)) then
                                            {4379}out(io, unexpected_message)
                                        else
                                            {4380}let (x_298: bitstring,g_25: group) = kex_data'_8 in
                                            {4381}let (psk_offer_21: preSharedKey,id_offer_21: identityPsk,es_offer_21: bitstring,is_safe_offer_21: bool) = psk_data'_19 in
                                            {4382}event Client_PSKOffer(@6_id_client,psk_offer_21,id_offer_21,is_safe_offer_21);
                                            {4383}event Client_Rand_client(@6_id_client,cr'_8);
                                            {4384}event Client_DH_client(@6_id_client,dh_pub(g_25,x_298));
                                            {4385}event Client_server_domain(@6_id_client,o_dom);
                                            {4386}let SH(sr_29: bytes32,mode_24: params) = server_hello'_17 in
                                            {4387}event Client_Rand_server(@6_id_client,sr_29);
                                            {4388}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_25,gy_22: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_44: preSharedKeyExt) = mode_24 in
                                            (
                                                {4389}let cur_log2_46: bitstring = (cur_log_OU1_HRR_OU2_8,server_hello'_17) in
                                                {4390}event Client_DH_server(@6_id_client,gy_22);
                                                {4391}let v_951: bool = (psk_ext_44 = empty_psk_ext) in
                                                {4392}let psk_105: preSharedKey = (if v_951 then NoPsk else caught-fail) in
                                                {4393}let s_101: bitstring = (if v_951 then zero else caught-fail) in
                                                {4394}let k_101: bitstring = (if v_951 then catch-fail(psk2b(psk_105)) else caught-fail) in
                                                {4395}let v_952: bool = not-caught-fail(k_101) in
                                                {4396}let early_secret_70: bitstring = (if v_951 then catch-fail((if v_952 then hmac(@6_tls_h,s_101,k_101) else fail-any)) else caught-fail) in
                                                {4397}let v_953: bool = not-caught-fail(early_secret_70) in
                                                {4398}let l_264: label = (if v_953 then tls13_ext_res_binder else caught-fail) in
                                                {4399}let m_91: bitstring = (if v_953 then zero else caught-fail) in
                                                {4400}let h_249: bitstring = (if v_953 then catch-fail(hash(@6_tls_h,m_91)) else caught-fail) in
                                                {4401}let v_954: bool = not-caught-fail(h_249) in
                                                {4402}let x_299: bitstring = (if v_954 then (l_264,h_249) else caught-fail) in
                                                {4403}let binder_key_47: bitstring = (if v_953 then catch-fail((if v_954 then hmac(@6_tls_h,early_secret_70,x_299) else fail-any)) else caught-fail) in
                                                {4404}let v_955: bool = not-caught-fail(binder_key_47) in
                                                {4405}let v_956: bitstring = (if v_951 then catch-fail((if v_953 then (if v_955 then (early_secret_70,binder_key_47) else fail-any) else fail-any)) else caught-fail) in
                                                {4406}let v_957: bool = (not-caught-fail(v_956) && success?(1-proj-2-tuple(v_956))) in
                                                {4407}let kb_47: mac_key = (if v_957 then 2-proj-2-tuple(v_956) else caught-fail) in
                                                {4408}let es_68: bitstring = (if v_957 then 1-proj-2-tuple(v_956) else caught-fail) in
                                                {4409}let v_958: bitstring = (if not(v_951) then catch-fail(psk_data'_19) else caught-fail) in
                                                {4410}let v_959: bool = (not-caught-fail(v_958) && success?(1-proj-4-tuple(v_958))) in
                                                {4411}let is_safe_40: bool = (if v_959 then 4-proj-4-tuple(v_958) else caught-fail) in
                                                {4412}let es_69: bitstring = (if v_959 then 3-proj-4-tuple(v_958) else caught-fail) in
                                                {4413}let id_48: identityPsk = (if v_959 then 2-proj-4-tuple(v_958) else caught-fail) in
                                                {4414}let psk_106: preSharedKey = (if v_959 then 1-proj-4-tuple(v_958) else caught-fail) in
                                                {4415}let (psk_107: preSharedKey,early_secret_71: bitstring,valid_21: bool,safe_psk_24: bool) = (if v_951 then (if v_957 then (NoPsk,es_68,true,false) else fail-any) else (if v_959 then (psk_106,es_69,((psk_106 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_44)),is_safe_40) else fail-any)) in
                                                {4416}event Client_PSKChoosen(@6_id_client,psk_107,safe_psk_24);
                                                {4417}if valid_21 then
                                                (
                                                    {4418}let gxy_43: element = catch-fail(dh_decap_fun(g_25,gy_22,x_298)) in
                                                    {4419}let v_960: bool = not-caught-fail(gxy_43) in
                                                    {4420}new s_102[]: seed;
                                                    {4421}let gxy_44: element = (if v_960 then gxy_43 else dh_f(s_102)) in
                                                    {4422}event Client_DH_gxy(@6_id_client,gxy_44);
                                                    {4423}let l_265: label = tls13_derived in
                                                    {4424}let m_92: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {4425}let v_961: bool = not-caught-fail(m_92) in
                                                    {4426}let h_250: bitstring = (if v_961 then catch-fail(hash(@6_tls_h,m_92)) else caught-fail) in
                                                    {4427}let v_962: bool = not-caught-fail(h_250) in
                                                    {4428}let x_300: bitstring = (if v_962 then (l_265,h_250) else caught-fail) in
                                                    {4429}let extra_47: bitstring = catch-fail((if v_961 then (if v_962 then hmac(@6_tls_h,early_secret_71,x_300) else fail-any) else fail-any)) in
                                                    {4430}let v_963: bool = not-caught-fail(extra_47) in
                                                    {4431}let handshake_secret_22: bitstring = (if v_963 then hmac(@6_tls_h,extra_47,gxy_44) else fail-any) in
                                                    {4432}let l_266: label = tls13_derived in
                                                    {4433}let m_93: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {4434}let v_964: bool = not-caught-fail(m_93) in
                                                    {4435}let h_251: bitstring = (if v_964 then catch-fail(hash(@6_tls_h,m_93)) else caught-fail) in
                                                    {4436}let v_965: bool = not-caught-fail(h_251) in
                                                    {4437}let x_301: bitstring = (if v_965 then (l_266,h_251) else caught-fail) in
                                                    {4438}let extra_48: bitstring = catch-fail((if v_964 then (if v_965 then hmac(@6_tls_h,handshake_secret_22,x_301) else fail-any) else fail-any)) in
                                                    {4439}let v_966: bool = not-caught-fail(extra_48) in
                                                    {4440}let k_102: bitstring = (if v_966 then zero else caught-fail) in
                                                    {4441}let master_secret_51: bitstring = (if v_966 then catch-fail(hmac(@6_tls_h,handshake_secret_22,k_102)) else caught-fail) in
                                                    {4442}let v_967: bool = not-caught-fail(master_secret_51) in
                                                    {4443}let l_267: label = (if v_967 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {4444}let h_252: bitstring = (if v_967 then catch-fail(hash(@6_tls_h,cur_log2_46)) else caught-fail) in
                                                    {4445}let v_968: bool = not-caught-fail(h_252) in
                                                    {4446}let x_302: bitstring = (if v_968 then (l_267,h_252) else caught-fail) in
                                                    {4447}let client_hts_22: bitstring = (if v_967 then catch-fail((if v_968 then hmac(@6_tls_h,handshake_secret_22,x_302) else fail-any)) else caught-fail) in
                                                    {4448}let v_969: bool = not-caught-fail(client_hts_22) in
                                                    {4449}let l_268: label = (if v_969 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {4450}let h_253: bitstring = (if v_969 then catch-fail(hash(@6_tls_h,cur_log2_46)) else caught-fail) in
                                                    {4451}let v_970: bool = not-caught-fail(h_253) in
                                                    {4452}let x_303: bitstring = (if v_970 then (l_268,h_253) else caught-fail) in
                                                    {4453}let server_hts_22: bitstring = (if v_969 then catch-fail((if v_970 then hmac(@6_tls_h,handshake_secret_22,x_303) else fail-any)) else caught-fail) in
                                                    {4454}let v_971: bool = not-caught-fail(server_hts_22) in
                                                    {4455}let l_269: label = (if v_971 then tls13_key else caught-fail) in
                                                    {4456}let h_254: bitstring = (if v_971 then zero else caught-fail) in
                                                    {4457}let x_304: bitstring = (if v_971 then (l_269,h_254) else caught-fail) in
                                                    {4458}let client_wkh_22: bitstring = (if v_971 then catch-fail(hmac(@6_tls_h,client_hts_22,x_304)) else caught-fail) in
                                                    {4459}let v_972: bool = not-caught-fail(client_wkh_22) in
                                                    {4460}let l_270: label = (if v_972 then tls13_key else caught-fail) in
                                                    {4461}let h_255: bitstring = (if v_972 then zero else caught-fail) in
                                                    {4462}let x_305: bitstring = (if v_972 then (l_270,h_255) else caught-fail) in
                                                    {4463}let server_wkh_22: bitstring = (if v_972 then catch-fail(hmac(@6_tls_h,server_hts_22,x_305)) else caught-fail) in
                                                    {4464}let v_973: bool = not-caught-fail(server_wkh_22) in
                                                    {4465}let l_271: label = (if v_973 then tls13_finished else caught-fail) in
                                                    {4466}let h_256: bitstring = (if v_973 then zero else caught-fail) in
                                                    {4467}let x_306: bitstring = (if v_973 then (l_271,h_256) else caught-fail) in
                                                    {4468}let client_fk_22: bitstring = (if v_973 then catch-fail(hmac(@6_tls_h,client_hts_22,x_306)) else caught-fail) in
                                                    {4469}let v_974: bool = not-caught-fail(client_fk_22) in
                                                    {4470}let l_272: label = (if v_974 then tls13_finished else caught-fail) in
                                                    {4471}let h_257: bitstring = (if v_974 then zero else caught-fail) in
                                                    {4472}let x_307: bitstring = (if v_974 then (l_272,h_257) else caught-fail) in
                                                    {4473}let server_fk_22: bitstring = (if v_974 then catch-fail(hmac(@6_tls_h,server_hts_22,x_307)) else caught-fail) in
                                                    {4474}let v_975: bool = not-caught-fail(server_fk_22) in
                                                    {4475}let (master_secret_52: bitstring,chk_29: aead_key,shk_28: aead_key,cfin_29: mac_key,sfin_28: mac_key) = (if v_966 then (if v_967 then (if v_969 then (if v_971 then (if v_972 then (if v_973 then (if v_974 then (if v_975 then (master_secret_51,client_wkh_22,server_wkh_22,client_fk_22,server_fk_22) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {4476}event Client_chk(@6_id_client,chk_29);
                                                    {4477}event Client_shk(@6_id_client,shk_28);
                                                    {4478}event Client_cfin(@6_id_client,cfin_29);
                                                    {4479}event Client_sfin(@6_id_client,sfin_28);
                                                    {4480}in(io, enc_ee_msg_21: bitstring);
                                                    {4481}let ee_msg_22: msg = aead_dec(@6_tls_a,shk_28,0,zero,enc_ee_msg_21) in
                                                    {4482}let EE(ech_ee_21: echExt,extra_ee_21: extraExt) = ee_msg_22 in
                                                    {4483}let cur_log2_47: bitstring = (cur_log2_46,ee_msg_22) in
                                                    {4484}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_8,sr_29,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_107,safe_psk_24,@6_comp_psk,master_secret_52,chk_29,0,shk_28,1,cfin_29,sfin_28,cur_log2_47)))
                                                )
                                                else
                                                    {4485}out(io, illegal_parameter)
                                            )
                                            else
                                                {4486}out(io, illegal_parameter)
                                    )
                                    else
                                        {4487}out(io, unexpected_message)
                                )
                                else
                                    {4637}get pre_shared_keys(c_dom'_8: domain,=o_dom_7,=@6_tls_h,id_49: identityPsk,psk_108: preSharedKey,idP_10: idProc,is_safe_41: bool) in
                                    {4488}event Selected_one_time_used_psk(@6_id_client,psk_108,is_safe_41);
                                    {4489}event Selected_psk(c_dom_5,c_dom'_8,idP_10,is_safe_41);
                                    {4490}event Selected_psk_no_missmatch(@6_id_client,o_dom_7,@6_tls_h,psk_108,id_49);
                                    {4491}event Selected_psk_with_ID(c_dom_5,c_dom'_8,id_49,idP_10,is_safe_41);
                                    {4492}let v_976: bitstring = (id_49,psk_108,is_safe_41) in
                                    {4493}let v_977: bool = success?(1-proj-3-tuple(v_976)) in
                                    {4494}let is_safe_42: bool = (if v_977 then 3-proj-3-tuple(v_976) else caught-fail) in
                                    {4495}let psk_109: preSharedKey = (if v_977 then 2-proj-3-tuple(v_976) else caught-fail) in
                                    {4496}let id_50: identityPsk = (if v_977 then 1-proj-3-tuple(v_976) else caught-fail) in
                                    {4497}let offer_15: params = (if v_977 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_6,SNI(o_dom_7),o_ech_ext_11,extra_46,trunc_client_psk_ext(id_50)) else caught-fail) in
                                    {4498}let cur_log'_15: bitstring = (if v_977 then (cur_log_OU1_HRR_2,CH(o_cr_9,offer_15)) else caught-fail) in
                                    {4499}let s_103: bitstring = (if v_977 then zero else caught-fail) in
                                    {4500}let k_103: bitstring = (if v_977 then catch-fail(psk2b(psk_109)) else caught-fail) in
                                    {4501}let v_978: bool = not-caught-fail(k_103) in
                                    {4502}let early_secret_72: bitstring = (if v_977 then catch-fail((if v_978 then hmac(@6_tls_h,s_103,k_103) else fail-any)) else caught-fail) in
                                    {4503}let v_979: bool = not-caught-fail(early_secret_72) in
                                    {4504}let l_273: label = (if v_979 then tls13_ext_res_binder else caught-fail) in
                                    {4505}let m_94: bitstring = (if v_979 then zero else caught-fail) in
                                    {4506}let h_258: bitstring = (if v_979 then catch-fail(hash(@6_tls_h,m_94)) else caught-fail) in
                                    {4507}let v_980: bool = not-caught-fail(h_258) in
                                    {4508}let x_308: bitstring = (if v_980 then (l_273,h_258) else caught-fail) in
                                    {4509}let binder_key_48: bitstring = (if v_979 then catch-fail((if v_980 then hmac(@6_tls_h,early_secret_72,x_308) else fail-any)) else caught-fail) in
                                    {4510}let v_981: bool = not-caught-fail(binder_key_48) in
                                    {4511}let v_982: bitstring = (if v_977 then catch-fail((if v_979 then (if v_981 then (early_secret_72,binder_key_48) else fail-any) else fail-any)) else caught-fail) in
                                    {4512}let v_983: bool = (not-caught-fail(v_982) && success?(1-proj-2-tuple(v_982))) in
                                    {4513}let kb_48: mac_key = (if v_983 then 2-proj-2-tuple(v_982) else caught-fail) in
                                    {4514}let es_70: bitstring = (if v_983 then 1-proj-2-tuple(v_982) else caught-fail) in
                                    {4515}let binders_14: bitstring = (if v_983 then catch-fail(hmac(@6_tls_h,kb_48,cur_log'_15)) else caught-fail) in
                                    {4516}let v_984: bool = not-caught-fail(binders_14) in
                                    {4517}let v_985: bitstring = catch-fail((if v_977 then (if v_983 then (if v_984 then (client_psk_ext(id_50,binders_14),(psk_109,id_50,es_70,is_safe_42)) else fail-any) else fail-any) else fail-any)) in
                                    {4518}let v_986: bool = (not-caught-fail(v_985) && success?(1-proj-2-tuple(v_985))) in
                                    {4519}let psk_data_24: bitstring = (if v_986 then 2-proj-2-tuple(v_985) else caught-fail) in
                                    {4520}let psk_ext_45: preSharedKeyExt = (if v_986 then 1-proj-2-tuple(v_985) else caught-fail) in
                                    {4521}let o_offer_24: params = (if v_986 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_6,SNI(o_dom_7),o_ech_ext_11,empty_extra_ext,psk_ext_45) else caught-fail) in
                                    {4522}let (client_hello'_9: msg,cr'_9: bytes32,kex_data'_9: bitstring,psk_data'_20: bitstring) = (if v_986 then (CH(o_cr_9,o_offer_24),o_cr_9,kex_data_2,psk_data_24) else fail-any) in
                                    {4523}out(io, client_hello'_9);
                                    {4524}let cur_log_OU1_HRR_OU2_9: bitstring = (cur_log_OU1_HRR_2,client_hello'_9) in
                                    {4525}in(io, server_hello'_18: msg);
                                    {4526}let SH(sr'_9: bytes32,mode'_9: params) = server_hello'_18 in
                                    (
                                        {4527}if (sr'_9 = B32(HRR24,HRR8)) then
                                            {4528}out(io, unexpected_message)
                                        else
                                            {4529}let (x_309: bitstring,g_26: group) = kex_data'_9 in
                                            {4530}let (psk_offer_22: preSharedKey,id_offer_22: identityPsk,es_offer_22: bitstring,is_safe_offer_22: bool) = psk_data'_20 in
                                            {4531}event Client_PSKOffer(@6_id_client,psk_offer_22,id_offer_22,is_safe_offer_22);
                                            {4532}event Client_Rand_client(@6_id_client,cr'_9);
                                            {4533}event Client_DH_client(@6_id_client,dh_pub(g_26,x_309));
                                            {4534}event Client_server_domain(@6_id_client,o_dom);
                                            {4535}let SH(sr_30: bytes32,mode_25: params) = server_hello'_18 in
                                            {4536}event Client_Rand_server(@6_id_client,sr_30);
                                            {4537}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_26,gy_23: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_46: preSharedKeyExt) = mode_25 in
                                            (
                                                {4538}let cur_log2_48: bitstring = (cur_log_OU1_HRR_OU2_9,server_hello'_18) in
                                                {4539}event Client_DH_server(@6_id_client,gy_23);
                                                {4540}let v_987: bool = (psk_ext_46 = empty_psk_ext) in
                                                {4541}let psk_110: preSharedKey = (if v_987 then NoPsk else caught-fail) in
                                                {4542}let s_104: bitstring = (if v_987 then zero else caught-fail) in
                                                {4543}let k_104: bitstring = (if v_987 then catch-fail(psk2b(psk_110)) else caught-fail) in
                                                {4544}let v_988: bool = not-caught-fail(k_104) in
                                                {4545}let early_secret_73: bitstring = (if v_987 then catch-fail((if v_988 then hmac(@6_tls_h,s_104,k_104) else fail-any)) else caught-fail) in
                                                {4546}let v_989: bool = not-caught-fail(early_secret_73) in
                                                {4547}let l_274: label = (if v_989 then tls13_ext_res_binder else caught-fail) in
                                                {4548}let m_95: bitstring = (if v_989 then zero else caught-fail) in
                                                {4549}let h_259: bitstring = (if v_989 then catch-fail(hash(@6_tls_h,m_95)) else caught-fail) in
                                                {4550}let v_990: bool = not-caught-fail(h_259) in
                                                {4551}let x_310: bitstring = (if v_990 then (l_274,h_259) else caught-fail) in
                                                {4552}let binder_key_49: bitstring = (if v_989 then catch-fail((if v_990 then hmac(@6_tls_h,early_secret_73,x_310) else fail-any)) else caught-fail) in
                                                {4553}let v_991: bool = not-caught-fail(binder_key_49) in
                                                {4554}let v_992: bitstring = (if v_987 then catch-fail((if v_989 then (if v_991 then (early_secret_73,binder_key_49) else fail-any) else fail-any)) else caught-fail) in
                                                {4555}let v_993: bool = (not-caught-fail(v_992) && success?(1-proj-2-tuple(v_992))) in
                                                {4556}let kb_49: mac_key = (if v_993 then 2-proj-2-tuple(v_992) else caught-fail) in
                                                {4557}let es_71: bitstring = (if v_993 then 1-proj-2-tuple(v_992) else caught-fail) in
                                                {4558}let v_994: bitstring = (if not(v_987) then catch-fail(psk_data'_20) else caught-fail) in
                                                {4559}let v_995: bool = (not-caught-fail(v_994) && success?(1-proj-4-tuple(v_994))) in
                                                {4560}let is_safe_43: bool = (if v_995 then 4-proj-4-tuple(v_994) else caught-fail) in
                                                {4561}let es_72: bitstring = (if v_995 then 3-proj-4-tuple(v_994) else caught-fail) in
                                                {4562}let id_51: identityPsk = (if v_995 then 2-proj-4-tuple(v_994) else caught-fail) in
                                                {4563}let psk_111: preSharedKey = (if v_995 then 1-proj-4-tuple(v_994) else caught-fail) in
                                                {4564}let (psk_112: preSharedKey,early_secret_74: bitstring,valid_22: bool,safe_psk_25: bool) = (if v_987 then (if v_993 then (NoPsk,es_71,true,false) else fail-any) else (if v_995 then (psk_111,es_72,((psk_111 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_46)),is_safe_43) else fail-any)) in
                                                {4565}event Client_PSKChoosen(@6_id_client,psk_112,safe_psk_25);
                                                {4566}if valid_22 then
                                                (
                                                    {4567}let gxy_45: element = catch-fail(dh_decap_fun(g_26,gy_23,x_309)) in
                                                    {4568}let v_996: bool = not-caught-fail(gxy_45) in
                                                    {4569}new s_105[]: seed;
                                                    {4570}let gxy_46: element = (if v_996 then gxy_45 else dh_f(s_105)) in
                                                    {4571}event Client_DH_gxy(@6_id_client,gxy_46);
                                                    {4572}let l_275: label = tls13_derived in
                                                    {4573}let m_96: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {4574}let v_997: bool = not-caught-fail(m_96) in
                                                    {4575}let h_260: bitstring = (if v_997 then catch-fail(hash(@6_tls_h,m_96)) else caught-fail) in
                                                    {4576}let v_998: bool = not-caught-fail(h_260) in
                                                    {4577}let x_311: bitstring = (if v_998 then (l_275,h_260) else caught-fail) in
                                                    {4578}let extra_49: bitstring = catch-fail((if v_997 then (if v_998 then hmac(@6_tls_h,early_secret_74,x_311) else fail-any) else fail-any)) in
                                                    {4579}let v_999: bool = not-caught-fail(extra_49) in
                                                    {4580}let handshake_secret_23: bitstring = (if v_999 then hmac(@6_tls_h,extra_49,gxy_46) else fail-any) in
                                                    {4581}let l_276: label = tls13_derived in
                                                    {4582}let m_97: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {4583}let v_1000: bool = not-caught-fail(m_97) in
                                                    {4584}let h_261: bitstring = (if v_1000 then catch-fail(hash(@6_tls_h,m_97)) else caught-fail) in
                                                    {4585}let v_1001: bool = not-caught-fail(h_261) in
                                                    {4586}let x_312: bitstring = (if v_1001 then (l_276,h_261) else caught-fail) in
                                                    {4587}let extra_50: bitstring = catch-fail((if v_1000 then (if v_1001 then hmac(@6_tls_h,handshake_secret_23,x_312) else fail-any) else fail-any)) in
                                                    {4588}let v_1002: bool = not-caught-fail(extra_50) in
                                                    {4589}let k_105: bitstring = (if v_1002 then zero else caught-fail) in
                                                    {4590}let master_secret_53: bitstring = (if v_1002 then catch-fail(hmac(@6_tls_h,handshake_secret_23,k_105)) else caught-fail) in
                                                    {4591}let v_1003: bool = not-caught-fail(master_secret_53) in
                                                    {4592}let l_277: label = (if v_1003 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {4593}let h_262: bitstring = (if v_1003 then catch-fail(hash(@6_tls_h,cur_log2_48)) else caught-fail) in
                                                    {4594}let v_1004: bool = not-caught-fail(h_262) in
                                                    {4595}let x_313: bitstring = (if v_1004 then (l_277,h_262) else caught-fail) in
                                                    {4596}let client_hts_23: bitstring = (if v_1003 then catch-fail((if v_1004 then hmac(@6_tls_h,handshake_secret_23,x_313) else fail-any)) else caught-fail) in
                                                    {4597}let v_1005: bool = not-caught-fail(client_hts_23) in
                                                    {4598}let l_278: label = (if v_1005 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {4599}let h_263: bitstring = (if v_1005 then catch-fail(hash(@6_tls_h,cur_log2_48)) else caught-fail) in
                                                    {4600}let v_1006: bool = not-caught-fail(h_263) in
                                                    {4601}let x_314: bitstring = (if v_1006 then (l_278,h_263) else caught-fail) in
                                                    {4602}let server_hts_23: bitstring = (if v_1005 then catch-fail((if v_1006 then hmac(@6_tls_h,handshake_secret_23,x_314) else fail-any)) else caught-fail) in
                                                    {4603}let v_1007: bool = not-caught-fail(server_hts_23) in
                                                    {4604}let l_279: label = (if v_1007 then tls13_key else caught-fail) in
                                                    {4605}let h_264: bitstring = (if v_1007 then zero else caught-fail) in
                                                    {4606}let x_315: bitstring = (if v_1007 then (l_279,h_264) else caught-fail) in
                                                    {4607}let client_wkh_23: bitstring = (if v_1007 then catch-fail(hmac(@6_tls_h,client_hts_23,x_315)) else caught-fail) in
                                                    {4608}let v_1008: bool = not-caught-fail(client_wkh_23) in
                                                    {4609}let l_280: label = (if v_1008 then tls13_key else caught-fail) in
                                                    {4610}let h_265: bitstring = (if v_1008 then zero else caught-fail) in
                                                    {4611}let x_316: bitstring = (if v_1008 then (l_280,h_265) else caught-fail) in
                                                    {4612}let server_wkh_23: bitstring = (if v_1008 then catch-fail(hmac(@6_tls_h,server_hts_23,x_316)) else caught-fail) in
                                                    {4613}let v_1009: bool = not-caught-fail(server_wkh_23) in
                                                    {4614}let l_281: label = (if v_1009 then tls13_finished else caught-fail) in
                                                    {4615}let h_266: bitstring = (if v_1009 then zero else caught-fail) in
                                                    {4616}let x_317: bitstring = (if v_1009 then (l_281,h_266) else caught-fail) in
                                                    {4617}let client_fk_23: bitstring = (if v_1009 then catch-fail(hmac(@6_tls_h,client_hts_23,x_317)) else caught-fail) in
                                                    {4618}let v_1010: bool = not-caught-fail(client_fk_23) in
                                                    {4619}let l_282: label = (if v_1010 then tls13_finished else caught-fail) in
                                                    {4620}let h_267: bitstring = (if v_1010 then zero else caught-fail) in
                                                    {4621}let x_318: bitstring = (if v_1010 then (l_282,h_267) else caught-fail) in
                                                    {4622}let server_fk_23: bitstring = (if v_1010 then catch-fail(hmac(@6_tls_h,server_hts_23,x_318)) else caught-fail) in
                                                    {4623}let v_1011: bool = not-caught-fail(server_fk_23) in
                                                    {4624}let (master_secret_54: bitstring,chk_30: aead_key,shk_29: aead_key,cfin_30: mac_key,sfin_29: mac_key) = (if v_1002 then (if v_1003 then (if v_1005 then (if v_1007 then (if v_1008 then (if v_1009 then (if v_1010 then (if v_1011 then (master_secret_53,client_wkh_23,server_wkh_23,client_fk_23,server_fk_23) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {4625}event Client_chk(@6_id_client,chk_30);
                                                    {4626}event Client_shk(@6_id_client,shk_29);
                                                    {4627}event Client_cfin(@6_id_client,cfin_30);
                                                    {4628}event Client_sfin(@6_id_client,sfin_29);
                                                    {4629}in(io, enc_ee_msg_22: bitstring);
                                                    {4630}let ee_msg_23: msg = aead_dec(@6_tls_a,shk_29,0,zero,enc_ee_msg_22) in
                                                    {4631}let EE(ech_ee_22: echExt,extra_ee_22: extraExt) = ee_msg_23 in
                                                    {4632}let cur_log2_49: bitstring = (cur_log2_48,ee_msg_23) in
                                                    {4633}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_9,sr_30,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_112,safe_psk_25,@6_comp_psk,master_secret_54,chk_30,0,shk_29,1,cfin_30,sfin_29,cur_log2_49)))
                                                )
                                                else
                                                    {4634}out(io, illegal_parameter)
                                            )
                                            else
                                                {4635}out(io, illegal_parameter)
                                    )
                                    else
                                        {4636}out(io, unexpected_message)
                            )
                            else
                                {4638}let psk_113: preSharedKey = NoPsk in
                                {4639}let s_106: bitstring = zero in
                                {4640}let k_106: bitstring = catch-fail(psk2b(psk_113)) in
                                {4641}let v_1012: bool = not-caught-fail(k_106) in
                                {4642}let early_secret_75: bitstring = catch-fail((if v_1012 then hmac(@6_tls_h,s_106,k_106) else fail-any)) in
                                {4643}let v_1013: bool = not-caught-fail(early_secret_75) in
                                {4644}let l_283: label = (if v_1013 then tls13_ext_res_binder else caught-fail) in
                                {4645}let m_98: bitstring = (if v_1013 then zero else caught-fail) in
                                {4646}let h_268: bitstring = (if v_1013 then catch-fail(hash(@6_tls_h,m_98)) else caught-fail) in
                                {4647}let v_1014: bool = not-caught-fail(h_268) in
                                {4648}let x_319: bitstring = (if v_1014 then (l_283,h_268) else caught-fail) in
                                {4649}let binder_key_50: bitstring = (if v_1013 then catch-fail((if v_1014 then hmac(@6_tls_h,early_secret_75,x_319) else fail-any)) else caught-fail) in
                                {4650}let v_1015: bool = not-caught-fail(binder_key_50) in
                                {4651}let v_1016: bitstring = catch-fail((if v_1013 then (if v_1015 then (early_secret_75,binder_key_50) else fail-any) else fail-any)) in
                                {4652}let v_1017: bool = (not-caught-fail(v_1016) && success?(1-proj-2-tuple(v_1016))) in
                                {4653}let kb_50: mac_key = (if v_1017 then 2-proj-2-tuple(v_1016) else caught-fail) in
                                {4654}let es_73: bitstring = (if v_1017 then 1-proj-2-tuple(v_1016) else caught-fail) in
                                {4655}let v_1018: bitstring = catch-fail((if v_1017 then (empty_psk_ext,(NoPsk,zero,es_73,false)) else fail-any)) in
                                {4656}let v_1019: bool = (not-caught-fail(v_1018) && success?(1-proj-2-tuple(v_1018))) in
                                {4657}let psk_data_25: bitstring = (if v_1019 then 2-proj-2-tuple(v_1018) else caught-fail) in
                                {4658}let psk_ext_47: preSharedKeyExt = (if v_1019 then 1-proj-2-tuple(v_1018) else caught-fail) in
                                {4659}let o_offer_25: params = (if v_1019 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_6,SNI(o_dom_7),o_ech_ext_11,empty_extra_ext,psk_ext_47) else caught-fail) in
                                {4660}let (client_hello'_10: msg,cr'_10: bytes32,kex_data'_10: bitstring,psk_data'_21: bitstring) = (if v_1019 then (CH(o_cr_9,o_offer_25),o_cr_9,kex_data_2,psk_data_25) else fail-any) in
                                {4661}out(io, client_hello'_10);
                                {4662}let cur_log_OU1_HRR_OU2_10: bitstring = (cur_log_OU1_HRR_2,client_hello'_10) in
                                {4663}in(io, server_hello'_19: msg);
                                {4664}let SH(sr'_10: bytes32,mode'_10: params) = server_hello'_19 in
                                (
                                    {4665}if (sr'_10 = B32(HRR24,HRR8)) then
                                        {4666}out(io, unexpected_message)
                                    else
                                        {4667}let (x_320: bitstring,g_27: group) = kex_data'_10 in
                                        {4668}let (psk_offer_23: preSharedKey,id_offer_23: identityPsk,es_offer_23: bitstring,is_safe_offer_23: bool) = psk_data'_21 in
                                        {4669}event Client_PSKOffer(@6_id_client,psk_offer_23,id_offer_23,is_safe_offer_23);
                                        {4670}event Client_Rand_client(@6_id_client,cr'_10);
                                        {4671}event Client_DH_client(@6_id_client,dh_pub(g_27,x_320));
                                        {4672}event Client_server_domain(@6_id_client,o_dom);
                                        {4673}let SH(sr_31: bytes32,mode_26: params) = server_hello'_19 in
                                        {4674}event Client_Rand_server(@6_id_client,sr_31);
                                        {4675}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_27,gy_24: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_48: preSharedKeyExt) = mode_26 in
                                        (
                                            {4676}let cur_log2_50: bitstring = (cur_log_OU1_HRR_OU2_10,server_hello'_19) in
                                            {4677}event Client_DH_server(@6_id_client,gy_24);
                                            {4678}let v_1020: bool = (psk_ext_48 = empty_psk_ext) in
                                            {4679}let psk_114: preSharedKey = (if v_1020 then NoPsk else caught-fail) in
                                            {4680}let s_107: bitstring = (if v_1020 then zero else caught-fail) in
                                            {4681}let k_107: bitstring = (if v_1020 then catch-fail(psk2b(psk_114)) else caught-fail) in
                                            {4682}let v_1021: bool = not-caught-fail(k_107) in
                                            {4683}let early_secret_76: bitstring = (if v_1020 then catch-fail((if v_1021 then hmac(@6_tls_h,s_107,k_107) else fail-any)) else caught-fail) in
                                            {4684}let v_1022: bool = not-caught-fail(early_secret_76) in
                                            {4685}let l_284: label = (if v_1022 then tls13_ext_res_binder else caught-fail) in
                                            {4686}let m_99: bitstring = (if v_1022 then zero else caught-fail) in
                                            {4687}let h_269: bitstring = (if v_1022 then catch-fail(hash(@6_tls_h,m_99)) else caught-fail) in
                                            {4688}let v_1023: bool = not-caught-fail(h_269) in
                                            {4689}let x_321: bitstring = (if v_1023 then (l_284,h_269) else caught-fail) in
                                            {4690}let binder_key_51: bitstring = (if v_1022 then catch-fail((if v_1023 then hmac(@6_tls_h,early_secret_76,x_321) else fail-any)) else caught-fail) in
                                            {4691}let v_1024: bool = not-caught-fail(binder_key_51) in
                                            {4692}let v_1025: bitstring = (if v_1020 then catch-fail((if v_1022 then (if v_1024 then (early_secret_76,binder_key_51) else fail-any) else fail-any)) else caught-fail) in
                                            {4693}let v_1026: bool = (not-caught-fail(v_1025) && success?(1-proj-2-tuple(v_1025))) in
                                            {4694}let kb_51: mac_key = (if v_1026 then 2-proj-2-tuple(v_1025) else caught-fail) in
                                            {4695}let es_74: bitstring = (if v_1026 then 1-proj-2-tuple(v_1025) else caught-fail) in
                                            {4696}let v_1027: bitstring = (if not(v_1020) then catch-fail(psk_data'_21) else caught-fail) in
                                            {4697}let v_1028: bool = (not-caught-fail(v_1027) && success?(1-proj-4-tuple(v_1027))) in
                                            {4698}let is_safe_44: bool = (if v_1028 then 4-proj-4-tuple(v_1027) else caught-fail) in
                                            {4699}let es_75: bitstring = (if v_1028 then 3-proj-4-tuple(v_1027) else caught-fail) in
                                            {4700}let id_52: identityPsk = (if v_1028 then 2-proj-4-tuple(v_1027) else caught-fail) in
                                            {4701}let psk_115: preSharedKey = (if v_1028 then 1-proj-4-tuple(v_1027) else caught-fail) in
                                            {4702}let (psk_116: preSharedKey,early_secret_77: bitstring,valid_23: bool,safe_psk_26: bool) = (if v_1020 then (if v_1026 then (NoPsk,es_74,true,false) else fail-any) else (if v_1028 then (psk_115,es_75,((psk_115 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_48)),is_safe_44) else fail-any)) in
                                            {4703}event Client_PSKChoosen(@6_id_client,psk_116,safe_psk_26);
                                            {4704}if valid_23 then
                                            (
                                                {4705}let gxy_47: element = catch-fail(dh_decap_fun(g_27,gy_24,x_320)) in
                                                {4706}let v_1029: bool = not-caught-fail(gxy_47) in
                                                {4707}new s_108[]: seed;
                                                {4708}let gxy_48: element = (if v_1029 then gxy_47 else dh_f(s_108)) in
                                                {4709}event Client_DH_gxy(@6_id_client,gxy_48);
                                                {4710}let l_285: label = tls13_derived in
                                                {4711}let m_100: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                {4712}let v_1030: bool = not-caught-fail(m_100) in
                                                {4713}let h_270: bitstring = (if v_1030 then catch-fail(hash(@6_tls_h,m_100)) else caught-fail) in
                                                {4714}let v_1031: bool = not-caught-fail(h_270) in
                                                {4715}let x_322: bitstring = (if v_1031 then (l_285,h_270) else caught-fail) in
                                                {4716}let extra_51: bitstring = catch-fail((if v_1030 then (if v_1031 then hmac(@6_tls_h,early_secret_77,x_322) else fail-any) else fail-any)) in
                                                {4717}let v_1032: bool = not-caught-fail(extra_51) in
                                                {4718}let handshake_secret_24: bitstring = (if v_1032 then hmac(@6_tls_h,extra_51,gxy_48) else fail-any) in
                                                {4719}let l_286: label = tls13_derived in
                                                {4720}let m_101: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                {4721}let v_1033: bool = not-caught-fail(m_101) in
                                                {4722}let h_271: bitstring = (if v_1033 then catch-fail(hash(@6_tls_h,m_101)) else caught-fail) in
                                                {4723}let v_1034: bool = not-caught-fail(h_271) in
                                                {4724}let x_323: bitstring = (if v_1034 then (l_286,h_271) else caught-fail) in
                                                {4725}let extra_52: bitstring = catch-fail((if v_1033 then (if v_1034 then hmac(@6_tls_h,handshake_secret_24,x_323) else fail-any) else fail-any)) in
                                                {4726}let v_1035: bool = not-caught-fail(extra_52) in
                                                {4727}let k_108: bitstring = (if v_1035 then zero else caught-fail) in
                                                {4728}let master_secret_55: bitstring = (if v_1035 then catch-fail(hmac(@6_tls_h,handshake_secret_24,k_108)) else caught-fail) in
                                                {4729}let v_1036: bool = not-caught-fail(master_secret_55) in
                                                {4730}let l_287: label = (if v_1036 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {4731}let h_272: bitstring = (if v_1036 then catch-fail(hash(@6_tls_h,cur_log2_50)) else caught-fail) in
                                                {4732}let v_1037: bool = not-caught-fail(h_272) in
                                                {4733}let x_324: bitstring = (if v_1037 then (l_287,h_272) else caught-fail) in
                                                {4734}let client_hts_24: bitstring = (if v_1036 then catch-fail((if v_1037 then hmac(@6_tls_h,handshake_secret_24,x_324) else fail-any)) else caught-fail) in
                                                {4735}let v_1038: bool = not-caught-fail(client_hts_24) in
                                                {4736}let l_288: label = (if v_1038 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {4737}let h_273: bitstring = (if v_1038 then catch-fail(hash(@6_tls_h,cur_log2_50)) else caught-fail) in
                                                {4738}let v_1039: bool = not-caught-fail(h_273) in
                                                {4739}let x_325: bitstring = (if v_1039 then (l_288,h_273) else caught-fail) in
                                                {4740}let server_hts_24: bitstring = (if v_1038 then catch-fail((if v_1039 then hmac(@6_tls_h,handshake_secret_24,x_325) else fail-any)) else caught-fail) in
                                                {4741}let v_1040: bool = not-caught-fail(server_hts_24) in
                                                {4742}let l_289: label = (if v_1040 then tls13_key else caught-fail) in
                                                {4743}let h_274: bitstring = (if v_1040 then zero else caught-fail) in
                                                {4744}let x_326: bitstring = (if v_1040 then (l_289,h_274) else caught-fail) in
                                                {4745}let client_wkh_24: bitstring = (if v_1040 then catch-fail(hmac(@6_tls_h,client_hts_24,x_326)) else caught-fail) in
                                                {4746}let v_1041: bool = not-caught-fail(client_wkh_24) in
                                                {4747}let l_290: label = (if v_1041 then tls13_key else caught-fail) in
                                                {4748}let h_275: bitstring = (if v_1041 then zero else caught-fail) in
                                                {4749}let x_327: bitstring = (if v_1041 then (l_290,h_275) else caught-fail) in
                                                {4750}let server_wkh_24: bitstring = (if v_1041 then catch-fail(hmac(@6_tls_h,server_hts_24,x_327)) else caught-fail) in
                                                {4751}let v_1042: bool = not-caught-fail(server_wkh_24) in
                                                {4752}let l_291: label = (if v_1042 then tls13_finished else caught-fail) in
                                                {4753}let h_276: bitstring = (if v_1042 then zero else caught-fail) in
                                                {4754}let x_328: bitstring = (if v_1042 then (l_291,h_276) else caught-fail) in
                                                {4755}let client_fk_24: bitstring = (if v_1042 then catch-fail(hmac(@6_tls_h,client_hts_24,x_328)) else caught-fail) in
                                                {4756}let v_1043: bool = not-caught-fail(client_fk_24) in
                                                {4757}let l_292: label = (if v_1043 then tls13_finished else caught-fail) in
                                                {4758}let h_277: bitstring = (if v_1043 then zero else caught-fail) in
                                                {4759}let x_329: bitstring = (if v_1043 then (l_292,h_277) else caught-fail) in
                                                {4760}let server_fk_24: bitstring = (if v_1043 then catch-fail(hmac(@6_tls_h,server_hts_24,x_329)) else caught-fail) in
                                                {4761}let v_1044: bool = not-caught-fail(server_fk_24) in
                                                {4762}let (master_secret_56: bitstring,chk_31: aead_key,shk_30: aead_key,cfin_31: mac_key,sfin_30: mac_key) = (if v_1035 then (if v_1036 then (if v_1038 then (if v_1040 then (if v_1041 then (if v_1042 then (if v_1043 then (if v_1044 then (master_secret_55,client_wkh_24,server_wkh_24,client_fk_24,server_fk_24) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {4763}event Client_chk(@6_id_client,chk_31);
                                                {4764}event Client_shk(@6_id_client,shk_30);
                                                {4765}event Client_cfin(@6_id_client,cfin_31);
                                                {4766}event Client_sfin(@6_id_client,sfin_30);
                                                {4767}in(io, enc_ee_msg_23: bitstring);
                                                {4768}let ee_msg_24: msg = aead_dec(@6_tls_a,shk_30,0,zero,enc_ee_msg_23) in
                                                {4769}let EE(ech_ee_23: echExt,extra_ee_23: extraExt) = ee_msg_24 in
                                                {4770}let cur_log2_51: bitstring = (cur_log2_50,ee_msg_24) in
                                                {4771}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_10,sr_31,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_116,safe_psk_26,@6_comp_psk,master_secret_56,chk_31,0,shk_30,1,cfin_31,sfin_30,cur_log2_51)))
                                            )
                                            else
                                                {4772}out(io, illegal_parameter)
                                        )
                                        else
                                            {4773}out(io, illegal_parameter)
                                )
                                else
                                    {4774}out(io, unexpected_message)
                        )
                        else
                            {4775}let psk_117: preSharedKey = NoPsk in
                            {4776}let s_109: bitstring = zero in
                            {4777}let k_109: bitstring = catch-fail(psk2b(psk_117)) in
                            {4778}let v_1045: bool = not-caught-fail(k_109) in
                            {4779}let early_secret_78: bitstring = catch-fail((if v_1045 then hmac(@6_tls_h,s_109,k_109) else fail-any)) in
                            {4780}let v_1046: bool = not-caught-fail(early_secret_78) in
                            {4781}let l_293: label = (if v_1046 then tls13_ext_res_binder else caught-fail) in
                            {4782}let m_102: bitstring = (if v_1046 then zero else caught-fail) in
                            {4783}let h_278: bitstring = (if v_1046 then catch-fail(hash(@6_tls_h,m_102)) else caught-fail) in
                            {4784}let v_1047: bool = not-caught-fail(h_278) in
                            {4785}let x_330: bitstring = (if v_1047 then (l_293,h_278) else caught-fail) in
                            {4786}let binder_key_52: bitstring = (if v_1046 then catch-fail((if v_1047 then hmac(@6_tls_h,early_secret_78,x_330) else fail-any)) else caught-fail) in
                            {4787}let v_1048: bool = not-caught-fail(binder_key_52) in
                            {4788}let v_1049: bitstring = catch-fail((if v_1046 then (if v_1048 then (early_secret_78,binder_key_52) else fail-any) else fail-any)) in
                            {4789}let v_1050: bool = (not-caught-fail(v_1049) && success?(1-proj-2-tuple(v_1049))) in
                            {4790}let kb_52: mac_key = (if v_1050 then 2-proj-2-tuple(v_1049) else caught-fail) in
                            {4791}let es_76: bitstring = (if v_1050 then 1-proj-2-tuple(v_1049) else caught-fail) in
                            {4792}let v_1051: preSharedKeyExt = (if v_1050 then catch-fail(o_psk_ext_11) else caught-fail) in
                            {4793}let v_1052: bool = (not-caught-fail(v_1051) && success?(1-proj-client_psk_ext(v_1051))) in
                            {4794}let fake_binder_14: bitstring = (if v_1052 then 2-proj-client_psk_ext(v_1051) else caught-fail) in
                            {4795}let fake_id_14: identityPsk = (if v_1052 then 1-proj-client_psk_ext(v_1051) else caught-fail) in
                            {4796}new fake_binder'_2[]: bitstring;
                            {4797}let v_1053: bitstring = catch-fail((if v_1050 then (if v_1052 then (client_psk_ext(fake_id_14,fake_binder'_2),(NoPsk,zero,es_76,false)) else (empty_psk_ext,(NoPsk,zero,es_76,false))) else fail-any)) in
                            {4798}let v_1054: bool = (not-caught-fail(v_1053) && success?(1-proj-2-tuple(v_1053))) in
                            {4799}let psk_data_26: bitstring = (if v_1054 then 2-proj-2-tuple(v_1053) else caught-fail) in
                            {4800}let psk_ext_49: preSharedKeyExt = (if v_1054 then 1-proj-2-tuple(v_1053) else caught-fail) in
                            {4801}let o_offer_26: params = (if v_1054 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_6,SNI(o_dom_7),o_ech_ext_11,empty_extra_ext,psk_ext_49) else caught-fail) in
                            {4802}let (client_hello'_11: msg,cr'_11: bytes32,kex_data'_11: bitstring,psk_data'_22: bitstring) = (if v_1054 then (CH(o_cr_9,o_offer_26),o_cr_9,kex_data_2,psk_data_26) else fail-any) in
                            {4803}out(io, client_hello'_11);
                            {4804}let cur_log_OU1_HRR_OU2_11: bitstring = (cur_log_OU1_HRR_2,client_hello'_11) in
                            {4805}in(io, server_hello'_20: msg);
                            {4806}let SH(sr'_11: bytes32,mode'_11: params) = server_hello'_20 in
                            (
                                {4807}if (sr'_11 = B32(HRR24,HRR8)) then
                                    {4808}out(io, unexpected_message)
                                else
                                    {4809}let (x_331: bitstring,g_28: group) = kex_data'_11 in
                                    {4810}let (psk_offer_24: preSharedKey,id_offer_24: identityPsk,es_offer_24: bitstring,is_safe_offer_24: bool) = psk_data'_22 in
                                    {4811}event Client_PSKOffer(@6_id_client,psk_offer_24,id_offer_24,is_safe_offer_24);
                                    {4812}event Client_Rand_client(@6_id_client,cr'_11);
                                    {4813}event Client_DH_client(@6_id_client,dh_pub(g_28,x_331));
                                    {4814}event Client_server_domain(@6_id_client,o_dom);
                                    {4815}let SH(sr_32: bytes32,mode_27: params) = server_hello'_20 in
                                    {4816}event Client_Rand_server(@6_id_client,sr_32);
                                    {4817}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_28,gy_25: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_50: preSharedKeyExt) = mode_27 in
                                    (
                                        {4818}let cur_log2_52: bitstring = (cur_log_OU1_HRR_OU2_11,server_hello'_20) in
                                        {4819}event Client_DH_server(@6_id_client,gy_25);
                                        {4820}let v_1055: bool = (psk_ext_50 = empty_psk_ext) in
                                        {4821}let psk_118: preSharedKey = (if v_1055 then NoPsk else caught-fail) in
                                        {4822}let s_110: bitstring = (if v_1055 then zero else caught-fail) in
                                        {4823}let k_110: bitstring = (if v_1055 then catch-fail(psk2b(psk_118)) else caught-fail) in
                                        {4824}let v_1056: bool = not-caught-fail(k_110) in
                                        {4825}let early_secret_79: bitstring = (if v_1055 then catch-fail((if v_1056 then hmac(@6_tls_h,s_110,k_110) else fail-any)) else caught-fail) in
                                        {4826}let v_1057: bool = not-caught-fail(early_secret_79) in
                                        {4827}let l_294: label = (if v_1057 then tls13_ext_res_binder else caught-fail) in
                                        {4828}let m_103: bitstring = (if v_1057 then zero else caught-fail) in
                                        {4829}let h_279: bitstring = (if v_1057 then catch-fail(hash(@6_tls_h,m_103)) else caught-fail) in
                                        {4830}let v_1058: bool = not-caught-fail(h_279) in
                                        {4831}let x_332: bitstring = (if v_1058 then (l_294,h_279) else caught-fail) in
                                        {4832}let binder_key_53: bitstring = (if v_1057 then catch-fail((if v_1058 then hmac(@6_tls_h,early_secret_79,x_332) else fail-any)) else caught-fail) in
                                        {4833}let v_1059: bool = not-caught-fail(binder_key_53) in
                                        {4834}let v_1060: bitstring = (if v_1055 then catch-fail((if v_1057 then (if v_1059 then (early_secret_79,binder_key_53) else fail-any) else fail-any)) else caught-fail) in
                                        {4835}let v_1061: bool = (not-caught-fail(v_1060) && success?(1-proj-2-tuple(v_1060))) in
                                        {4836}let kb_53: mac_key = (if v_1061 then 2-proj-2-tuple(v_1060) else caught-fail) in
                                        {4837}let es_77: bitstring = (if v_1061 then 1-proj-2-tuple(v_1060) else caught-fail) in
                                        {4838}let v_1062: bitstring = (if not(v_1055) then catch-fail(psk_data'_22) else caught-fail) in
                                        {4839}let v_1063: bool = (not-caught-fail(v_1062) && success?(1-proj-4-tuple(v_1062))) in
                                        {4840}let is_safe_45: bool = (if v_1063 then 4-proj-4-tuple(v_1062) else caught-fail) in
                                        {4841}let es_78: bitstring = (if v_1063 then 3-proj-4-tuple(v_1062) else caught-fail) in
                                        {4842}let id_53: identityPsk = (if v_1063 then 2-proj-4-tuple(v_1062) else caught-fail) in
                                        {4843}let psk_119: preSharedKey = (if v_1063 then 1-proj-4-tuple(v_1062) else caught-fail) in
                                        {4844}let (psk_120: preSharedKey,early_secret_80: bitstring,valid_24: bool,safe_psk_27: bool) = (if v_1055 then (if v_1061 then (NoPsk,es_77,true,false) else fail-any) else (if v_1063 then (psk_119,es_78,((psk_119 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_50)),is_safe_45) else fail-any)) in
                                        {4845}event Client_PSKChoosen(@6_id_client,psk_120,safe_psk_27);
                                        {4846}if valid_24 then
                                        (
                                            {4847}let gxy_49: element = catch-fail(dh_decap_fun(g_28,gy_25,x_331)) in
                                            {4848}let v_1064: bool = not-caught-fail(gxy_49) in
                                            {4849}new s_111[]: seed;
                                            {4850}let gxy_50: element = (if v_1064 then gxy_49 else dh_f(s_111)) in
                                            {4851}event Client_DH_gxy(@6_id_client,gxy_50);
                                            {4852}let l_295: label = tls13_derived in
                                            {4853}let m_104: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                            {4854}let v_1065: bool = not-caught-fail(m_104) in
                                            {4855}let h_280: bitstring = (if v_1065 then catch-fail(hash(@6_tls_h,m_104)) else caught-fail) in
                                            {4856}let v_1066: bool = not-caught-fail(h_280) in
                                            {4857}let x_333: bitstring = (if v_1066 then (l_295,h_280) else caught-fail) in
                                            {4858}let extra_53: bitstring = catch-fail((if v_1065 then (if v_1066 then hmac(@6_tls_h,early_secret_80,x_333) else fail-any) else fail-any)) in
                                            {4859}let v_1067: bool = not-caught-fail(extra_53) in
                                            {4860}let handshake_secret_25: bitstring = (if v_1067 then hmac(@6_tls_h,extra_53,gxy_50) else fail-any) in
                                            {4861}let l_296: label = tls13_derived in
                                            {4862}let m_105: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                            {4863}let v_1068: bool = not-caught-fail(m_105) in
                                            {4864}let h_281: bitstring = (if v_1068 then catch-fail(hash(@6_tls_h,m_105)) else caught-fail) in
                                            {4865}let v_1069: bool = not-caught-fail(h_281) in
                                            {4866}let x_334: bitstring = (if v_1069 then (l_296,h_281) else caught-fail) in
                                            {4867}let extra_54: bitstring = catch-fail((if v_1068 then (if v_1069 then hmac(@6_tls_h,handshake_secret_25,x_334) else fail-any) else fail-any)) in
                                            {4868}let v_1070: bool = not-caught-fail(extra_54) in
                                            {4869}let k_111: bitstring = (if v_1070 then zero else caught-fail) in
                                            {4870}let master_secret_57: bitstring = (if v_1070 then catch-fail(hmac(@6_tls_h,handshake_secret_25,k_111)) else caught-fail) in
                                            {4871}let v_1071: bool = not-caught-fail(master_secret_57) in
                                            {4872}let l_297: label = (if v_1071 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {4873}let h_282: bitstring = (if v_1071 then catch-fail(hash(@6_tls_h,cur_log2_52)) else caught-fail) in
                                            {4874}let v_1072: bool = not-caught-fail(h_282) in
                                            {4875}let x_335: bitstring = (if v_1072 then (l_297,h_282) else caught-fail) in
                                            {4876}let client_hts_25: bitstring = (if v_1071 then catch-fail((if v_1072 then hmac(@6_tls_h,handshake_secret_25,x_335) else fail-any)) else caught-fail) in
                                            {4877}let v_1073: bool = not-caught-fail(client_hts_25) in
                                            {4878}let l_298: label = (if v_1073 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {4879}let h_283: bitstring = (if v_1073 then catch-fail(hash(@6_tls_h,cur_log2_52)) else caught-fail) in
                                            {4880}let v_1074: bool = not-caught-fail(h_283) in
                                            {4881}let x_336: bitstring = (if v_1074 then (l_298,h_283) else caught-fail) in
                                            {4882}let server_hts_25: bitstring = (if v_1073 then catch-fail((if v_1074 then hmac(@6_tls_h,handshake_secret_25,x_336) else fail-any)) else caught-fail) in
                                            {4883}let v_1075: bool = not-caught-fail(server_hts_25) in
                                            {4884}let l_299: label = (if v_1075 then tls13_key else caught-fail) in
                                            {4885}let h_284: bitstring = (if v_1075 then zero else caught-fail) in
                                            {4886}let x_337: bitstring = (if v_1075 then (l_299,h_284) else caught-fail) in
                                            {4887}let client_wkh_25: bitstring = (if v_1075 then catch-fail(hmac(@6_tls_h,client_hts_25,x_337)) else caught-fail) in
                                            {4888}let v_1076: bool = not-caught-fail(client_wkh_25) in
                                            {4889}let l_300: label = (if v_1076 then tls13_key else caught-fail) in
                                            {4890}let h_285: bitstring = (if v_1076 then zero else caught-fail) in
                                            {4891}let x_338: bitstring = (if v_1076 then (l_300,h_285) else caught-fail) in
                                            {4892}let server_wkh_25: bitstring = (if v_1076 then catch-fail(hmac(@6_tls_h,server_hts_25,x_338)) else caught-fail) in
                                            {4893}let v_1077: bool = not-caught-fail(server_wkh_25) in
                                            {4894}let l_301: label = (if v_1077 then tls13_finished else caught-fail) in
                                            {4895}let h_286: bitstring = (if v_1077 then zero else caught-fail) in
                                            {4896}let x_339: bitstring = (if v_1077 then (l_301,h_286) else caught-fail) in
                                            {4897}let client_fk_25: bitstring = (if v_1077 then catch-fail(hmac(@6_tls_h,client_hts_25,x_339)) else caught-fail) in
                                            {4898}let v_1078: bool = not-caught-fail(client_fk_25) in
                                            {4899}let l_302: label = (if v_1078 then tls13_finished else caught-fail) in
                                            {4900}let h_287: bitstring = (if v_1078 then zero else caught-fail) in
                                            {4901}let x_340: bitstring = (if v_1078 then (l_302,h_287) else caught-fail) in
                                            {4902}let server_fk_25: bitstring = (if v_1078 then catch-fail(hmac(@6_tls_h,server_hts_25,x_340)) else caught-fail) in
                                            {4903}let v_1079: bool = not-caught-fail(server_fk_25) in
                                            {4904}let (master_secret_58: bitstring,chk_32: aead_key,shk_31: aead_key,cfin_32: mac_key,sfin_31: mac_key) = (if v_1070 then (if v_1071 then (if v_1073 then (if v_1075 then (if v_1076 then (if v_1077 then (if v_1078 then (if v_1079 then (master_secret_57,client_wkh_25,server_wkh_25,client_fk_25,server_fk_25) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {4905}event Client_chk(@6_id_client,chk_32);
                                            {4906}event Client_shk(@6_id_client,shk_31);
                                            {4907}event Client_cfin(@6_id_client,cfin_32);
                                            {4908}event Client_sfin(@6_id_client,sfin_31);
                                            {4909}in(io, enc_ee_msg_24: bitstring);
                                            {4910}let ee_msg_25: msg = aead_dec(@6_tls_a,shk_31,0,zero,enc_ee_msg_24) in
                                            {4911}let EE(ech_ee_24: echExt,extra_ee_24: extraExt) = ee_msg_25 in
                                            {4912}let cur_log2_53: bitstring = (cur_log2_52,ee_msg_25) in
                                            {4913}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_11,sr_32,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_120,safe_psk_27,@6_comp_psk,master_secret_58,chk_32,0,shk_31,1,cfin_32,sfin_31,cur_log2_53)))
                                        )
                                        else
                                            {4914}out(io, illegal_parameter)
                                    )
                                    else
                                        {4915}out(io, illegal_parameter)
                            )
                            else
                                {4916}out(io, unexpected_message)
                )
                else
                    {4917}let cur_log_18: bitstring = (zero,i_client_hello_11) in
                    {4918}let sh_modified_12: msg = SH(B32(sr24_4,zero8),mode_20) in
                    {4919}let cur_log_sh_12: bitstring = (cur_log_18,sh_modified_12) in
                    {4920}let transcript_ech_conf_12: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_12)) in
                    {4921}let v_1080: bool = not-caught-fail(transcript_ech_conf_12) in
                    {4922}let s_112: bitstring = (if v_1080 then zero else caught-fail) in
                    {4923}let k_112: bitstring = (if v_1080 then catch-fail(b32_2_b(get_random(i_client_hello_11))) else caught-fail) in
                    {4924}let v_1081: bool = not-caught-fail(k_112) in
                    {4925}let k_113: bitstring = (if v_1080 then catch-fail((if v_1081 then hmac(@6_backend_h,s_112,k_112) else fail-any)) else caught-fail) in
                    {4926}let v_1082: bool = not-caught-fail(k_113) in
                    {4927}let l_303: label = (if v_1082 then ech_accept_confirmation else caught-fail) in
                    {4928}let x_341: bitstring = (if v_1082 then (l_303,cur_log_sh_12) else caught-fail) in
                    {4929}let sr8_15: bytes8 = (if v_1080 then catch-fail(crop_into_bytes8((if v_1082 then hmac(@6_backend_h,k_113,x_341) else fail-any))) else caught-fail) in
                    {4930}let v_1083: bool = not-caught-fail(sr8_15) in
                    {4931}if (B32(sr24_4,sr8_11) = (if v_1080 then (if v_1083 then B32(sr24_4,sr8_15) else fail-any) else fail-any)) then
                    (
                        {4932}event ClientEchAcceptance(@6_id_client,true);
                        {4933}let cur_log_19: bitstring = (zero,i_client_hello_11) in
                        {4934}let (x_342: bitstring,g_29: group) = i_kex_data_5 in
                        {4935}let (psk_offer_25: preSharedKey,id_offer_25: identityPsk,es_offer_25: bitstring,is_safe_offer_25: bool) = psk_data_19 in
                        {4936}event Client_PSKOffer(@6_id_client,psk_offer_25,id_offer_25,is_safe_offer_25);
                        {4937}event Client_Rand_client(@6_id_client,i_cr_5);
                        {4938}event Client_DH_client(@6_id_client,dh_pub(g_29,x_342));
                        {4939}event Client_server_domain(@6_id_client,backend_dom);
                        {4940}let SH(sr_33: bytes32,mode_28: params) = server_hello_3 in
                        {4941}event Client_Rand_server(@6_id_client,sr_33);
                        {4942}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_29,gy_26: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_51: preSharedKeyExt) = mode_28 in
                        (
                            {4943}let cur_log2_54: bitstring = (cur_log_19,server_hello_3) in
                            {4944}event Client_DH_server(@6_id_client,gy_26);
                            {4945}let v_1084: bool = (psk_ext_51 = empty_psk_ext) in
                            {4946}let psk_121: preSharedKey = (if v_1084 then NoPsk else caught-fail) in
                            {4947}let s_113: bitstring = (if v_1084 then zero else caught-fail) in
                            {4948}let k_114: bitstring = (if v_1084 then catch-fail(psk2b(psk_121)) else caught-fail) in
                            {4949}let v_1085: bool = not-caught-fail(k_114) in
                            {4950}let early_secret_81: bitstring = (if v_1084 then catch-fail((if v_1085 then hmac(@6_backend_h,s_113,k_114) else fail-any)) else caught-fail) in
                            {4951}let v_1086: bool = not-caught-fail(early_secret_81) in
                            {4952}let l_304: label = (if v_1086 then tls13_ext_res_binder else caught-fail) in
                            {4953}let m_106: bitstring = (if v_1086 then zero else caught-fail) in
                            {4954}let h_288: bitstring = (if v_1086 then catch-fail(hash(@6_backend_h,m_106)) else caught-fail) in
                            {4955}let v_1087: bool = not-caught-fail(h_288) in
                            {4956}let x_343: bitstring = (if v_1087 then (l_304,h_288) else caught-fail) in
                            {4957}let binder_key_54: bitstring = (if v_1086 then catch-fail((if v_1087 then hmac(@6_backend_h,early_secret_81,x_343) else fail-any)) else caught-fail) in
                            {4958}let v_1088: bool = not-caught-fail(binder_key_54) in
                            {4959}let v_1089: bitstring = (if v_1084 then catch-fail((if v_1086 then (if v_1088 then (early_secret_81,binder_key_54) else fail-any) else fail-any)) else caught-fail) in
                            {4960}let v_1090: bool = (not-caught-fail(v_1089) && success?(1-proj-2-tuple(v_1089))) in
                            {4961}let kb_54: mac_key = (if v_1090 then 2-proj-2-tuple(v_1089) else caught-fail) in
                            {4962}let es_79: bitstring = (if v_1090 then 1-proj-2-tuple(v_1089) else caught-fail) in
                            {4963}let v_1091: bitstring = (if not(v_1084) then catch-fail(psk_data_19) else caught-fail) in
                            {4964}let v_1092: bool = (not-caught-fail(v_1091) && success?(1-proj-4-tuple(v_1091))) in
                            {4965}let is_safe_46: bool = (if v_1092 then 4-proj-4-tuple(v_1091) else caught-fail) in
                            {4966}let es_80: bitstring = (if v_1092 then 3-proj-4-tuple(v_1091) else caught-fail) in
                            {4967}let id_54: identityPsk = (if v_1092 then 2-proj-4-tuple(v_1091) else caught-fail) in
                            {4968}let psk_122: preSharedKey = (if v_1092 then 1-proj-4-tuple(v_1091) else caught-fail) in
                            {4969}let (psk_123: preSharedKey,early_secret_82: bitstring,valid_25: bool,safe_psk_28: bool) = (if v_1084 then (if v_1090 then (NoPsk,es_79,true,false) else fail-any) else (if v_1092 then (psk_122,es_80,((psk_122 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_51)),is_safe_46) else fail-any)) in
                            {4970}event Client_PSKChoosen(@6_id_client,psk_123,safe_psk_28);
                            {4971}if valid_25 then
                            (
                                {4972}let gxy_51: element = catch-fail(dh_decap_fun(g_29,gy_26,x_342)) in
                                {4973}let v_1093: bool = not-caught-fail(gxy_51) in
                                {4974}new s_114[]: seed;
                                {4975}let gxy_52: element = (if v_1093 then gxy_51 else dh_f(s_114)) in
                                {4976}event Client_DH_gxy(@6_id_client,gxy_52);
                                {4977}let l_305: label = tls13_derived in
                                {4978}let m_107: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                {4979}let v_1094: bool = not-caught-fail(m_107) in
                                {4980}let h_289: bitstring = (if v_1094 then catch-fail(hash(@6_backend_h,m_107)) else caught-fail) in
                                {4981}let v_1095: bool = not-caught-fail(h_289) in
                                {4982}let x_344: bitstring = (if v_1095 then (l_305,h_289) else caught-fail) in
                                {4983}let extra_55: bitstring = catch-fail((if v_1094 then (if v_1095 then hmac(@6_backend_h,early_secret_82,x_344) else fail-any) else fail-any)) in
                                {4984}let v_1096: bool = not-caught-fail(extra_55) in
                                {4985}let handshake_secret_26: bitstring = (if v_1096 then hmac(@6_backend_h,extra_55,gxy_52) else fail-any) in
                                {4986}let l_306: label = tls13_derived in
                                {4987}let m_108: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                {4988}let v_1097: bool = not-caught-fail(m_108) in
                                {4989}let h_290: bitstring = (if v_1097 then catch-fail(hash(@6_backend_h,m_108)) else caught-fail) in
                                {4990}let v_1098: bool = not-caught-fail(h_290) in
                                {4991}let x_345: bitstring = (if v_1098 then (l_306,h_290) else caught-fail) in
                                {4992}let extra_56: bitstring = catch-fail((if v_1097 then (if v_1098 then hmac(@6_backend_h,handshake_secret_26,x_345) else fail-any) else fail-any)) in
                                {4993}let v_1099: bool = not-caught-fail(extra_56) in
                                {4994}let k_115: bitstring = (if v_1099 then zero else caught-fail) in
                                {4995}let master_secret_59: bitstring = (if v_1099 then catch-fail(hmac(@6_backend_h,handshake_secret_26,k_115)) else caught-fail) in
                                {4996}let v_1100: bool = not-caught-fail(master_secret_59) in
                                {4997}let l_307: label = (if v_1100 then tls13_client_handshake_traffic_secret else caught-fail) in
                                {4998}let h_291: bitstring = (if v_1100 then catch-fail(hash(@6_backend_h,cur_log2_54)) else caught-fail) in
                                {4999}let v_1101: bool = not-caught-fail(h_291) in
                                {5000}let x_346: bitstring = (if v_1101 then (l_307,h_291) else caught-fail) in
                                {5001}let client_hts_26: bitstring = (if v_1100 then catch-fail((if v_1101 then hmac(@6_backend_h,handshake_secret_26,x_346) else fail-any)) else caught-fail) in
                                {5002}let v_1102: bool = not-caught-fail(client_hts_26) in
                                {5003}let l_308: label = (if v_1102 then tls13_server_handshake_traffic_secret else caught-fail) in
                                {5004}let h_292: bitstring = (if v_1102 then catch-fail(hash(@6_backend_h,cur_log2_54)) else caught-fail) in
                                {5005}let v_1103: bool = not-caught-fail(h_292) in
                                {5006}let x_347: bitstring = (if v_1103 then (l_308,h_292) else caught-fail) in
                                {5007}let server_hts_26: bitstring = (if v_1102 then catch-fail((if v_1103 then hmac(@6_backend_h,handshake_secret_26,x_347) else fail-any)) else caught-fail) in
                                {5008}let v_1104: bool = not-caught-fail(server_hts_26) in
                                {5009}let l_309: label = (if v_1104 then tls13_key else caught-fail) in
                                {5010}let h_293: bitstring = (if v_1104 then zero else caught-fail) in
                                {5011}let x_348: bitstring = (if v_1104 then (l_309,h_293) else caught-fail) in
                                {5012}let client_wkh_26: bitstring = (if v_1104 then catch-fail(hmac(@6_backend_h,client_hts_26,x_348)) else caught-fail) in
                                {5013}let v_1105: bool = not-caught-fail(client_wkh_26) in
                                {5014}let l_310: label = (if v_1105 then tls13_key else caught-fail) in
                                {5015}let h_294: bitstring = (if v_1105 then zero else caught-fail) in
                                {5016}let x_349: bitstring = (if v_1105 then (l_310,h_294) else caught-fail) in
                                {5017}let server_wkh_26: bitstring = (if v_1105 then catch-fail(hmac(@6_backend_h,server_hts_26,x_349)) else caught-fail) in
                                {5018}let v_1106: bool = not-caught-fail(server_wkh_26) in
                                {5019}let l_311: label = (if v_1106 then tls13_finished else caught-fail) in
                                {5020}let h_295: bitstring = (if v_1106 then zero else caught-fail) in
                                {5021}let x_350: bitstring = (if v_1106 then (l_311,h_295) else caught-fail) in
                                {5022}let client_fk_26: bitstring = (if v_1106 then catch-fail(hmac(@6_backend_h,client_hts_26,x_350)) else caught-fail) in
                                {5023}let v_1107: bool = not-caught-fail(client_fk_26) in
                                {5024}let l_312: label = (if v_1107 then tls13_finished else caught-fail) in
                                {5025}let h_296: bitstring = (if v_1107 then zero else caught-fail) in
                                {5026}let x_351: bitstring = (if v_1107 then (l_312,h_296) else caught-fail) in
                                {5027}let server_fk_26: bitstring = (if v_1107 then catch-fail(hmac(@6_backend_h,server_hts_26,x_351)) else caught-fail) in
                                {5028}let v_1108: bool = not-caught-fail(server_fk_26) in
                                {5029}let (master_secret_60: bitstring,chk_33: aead_key,shk_32: aead_key,cfin_33: mac_key,sfin_32: mac_key) = (if v_1099 then (if v_1100 then (if v_1102 then (if v_1104 then (if v_1105 then (if v_1106 then (if v_1107 then (if v_1108 then (master_secret_59,client_wkh_26,server_wkh_26,client_fk_26,server_fk_26) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                {5030}event Client_chk(@6_id_client,chk_33);
                                {5031}event Client_shk(@6_id_client,shk_32);
                                {5032}event Client_cfin(@6_id_client,cfin_33);
                                {5033}event Client_sfin(@6_id_client,sfin_32);
                                {5034}in(io, enc_ee_msg_25: bitstring);
                                {5035}let ee_msg_26: msg = aead_dec(@6_backend_a,shk_32,0,zero,enc_ee_msg_25) in
                                {5036}let EE(ech_ee_25: echExt,extra_ee_25: extraExt) = ee_msg_26 in
                                {5037}let cur_log2_55: bitstring = (cur_log2_54,ee_msg_26) in
                                {5038}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr_5,sr_33,@6_backend_h,@6_backend_a,c_dom_5,backend_dom,psk_123,safe_psk_28,@6_comp_psk,master_secret_60,chk_33,0,shk_32,1,cfin_33,sfin_32,cur_log2_55)))
                            )
                            else
                                {5039}out(io, illegal_parameter)
                        )
                        else
                            {5040}out(io, illegal_parameter)
                    )
                    else
                        {5041}event ClientEchAcceptance(@6_id_client,false);
                        {5042}let v_1109: bool = @6_use_grease in
                        {5043}let psk_124: preSharedKey = (if not(v_1109) then NoPsk else caught-fail) in
                        {5044}let s_115: bitstring = (if not(v_1109) then zero else caught-fail) in
                        {5045}let k_116: bitstring = (if not(v_1109) then catch-fail(psk2b(psk_124)) else caught-fail) in
                        {5046}let v_1110: bool = not-caught-fail(k_116) in
                        {5047}let early_secret_83: bitstring = (if not(v_1109) then catch-fail((if v_1110 then hmac(@6_tls_h,s_115,k_116) else fail-any)) else caught-fail) in
                        {5048}let v_1111: bool = not-caught-fail(early_secret_83) in
                        {5049}let l_313: label = (if v_1111 then tls13_ext_res_binder else caught-fail) in
                        {5050}let m_109: bitstring = (if v_1111 then zero else caught-fail) in
                        {5051}let h_297: bitstring = (if v_1111 then catch-fail(hash(@6_tls_h,m_109)) else caught-fail) in
                        {5052}let v_1112: bool = not-caught-fail(h_297) in
                        {5053}let x_352: bitstring = (if v_1112 then (l_313,h_297) else caught-fail) in
                        {5054}let binder_key_55: bitstring = (if v_1111 then catch-fail((if v_1112 then hmac(@6_tls_h,early_secret_83,x_352) else fail-any)) else caught-fail) in
                        {5055}let v_1113: bool = not-caught-fail(binder_key_55) in
                        {5056}let v_1114: bitstring = (if not(v_1109) then catch-fail((if v_1111 then (if v_1113 then (early_secret_83,binder_key_55) else fail-any) else fail-any)) else caught-fail) in
                        {5057}let v_1115: bool = (not-caught-fail(v_1114) && success?(1-proj-2-tuple(v_1114))) in
                        {5058}let kb_55: mac_key = (if v_1115 then 2-proj-2-tuple(v_1114) else caught-fail) in
                        {5059}let es'_2: bitstring = (if v_1115 then 1-proj-2-tuple(v_1114) else caught-fail) in
                        {5060}let psk_data'_23: bitstring = (if v_1109 then psk_data_19 else (if v_1115 then (NoPsk,zero,es'_2,false) else fail-any)) in
                        {5061}let cur_log_20: bitstring = (zero,o_client_hello_2) in
                        {5062}let (x_353: bitstring,g_30: group) = o_kex_data_5 in
                        {5063}let (psk_offer_26: preSharedKey,id_offer_26: identityPsk,es_offer_26: bitstring,is_safe_offer_26: bool) = psk_data'_23 in
                        {5064}event Client_PSKOffer(@6_id_client,psk_offer_26,id_offer_26,is_safe_offer_26);
                        {5065}event Client_Rand_client(@6_id_client,o_cr_7);
                        {5066}event Client_DH_client(@6_id_client,dh_pub(g_30,x_353));
                        {5067}event Client_server_domain(@6_id_client,o_dom);
                        {5068}let SH(sr_34: bytes32,mode_29: params) = server_hello_3 in
                        {5069}event Client_Rand_server(@6_id_client,sr_34);
                        {5070}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_30,gy_27: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_52: preSharedKeyExt) = mode_29 in
                        (
                            {5071}let cur_log2_56: bitstring = (cur_log_20,server_hello_3) in
                            {5072}event Client_DH_server(@6_id_client,gy_27);
                            {5073}let v_1116: bool = (psk_ext_52 = empty_psk_ext) in
                            {5074}let psk_125: preSharedKey = (if v_1116 then NoPsk else caught-fail) in
                            {5075}let s_116: bitstring = (if v_1116 then zero else caught-fail) in
                            {5076}let k_117: bitstring = (if v_1116 then catch-fail(psk2b(psk_125)) else caught-fail) in
                            {5077}let v_1117: bool = not-caught-fail(k_117) in
                            {5078}let early_secret_84: bitstring = (if v_1116 then catch-fail((if v_1117 then hmac(@6_tls_h,s_116,k_117) else fail-any)) else caught-fail) in
                            {5079}let v_1118: bool = not-caught-fail(early_secret_84) in
                            {5080}let l_314: label = (if v_1118 then tls13_ext_res_binder else caught-fail) in
                            {5081}let m_110: bitstring = (if v_1118 then zero else caught-fail) in
                            {5082}let h_298: bitstring = (if v_1118 then catch-fail(hash(@6_tls_h,m_110)) else caught-fail) in
                            {5083}let v_1119: bool = not-caught-fail(h_298) in
                            {5084}let x_354: bitstring = (if v_1119 then (l_314,h_298) else caught-fail) in
                            {5085}let binder_key_56: bitstring = (if v_1118 then catch-fail((if v_1119 then hmac(@6_tls_h,early_secret_84,x_354) else fail-any)) else caught-fail) in
                            {5086}let v_1120: bool = not-caught-fail(binder_key_56) in
                            {5087}let v_1121: bitstring = (if v_1116 then catch-fail((if v_1118 then (if v_1120 then (early_secret_84,binder_key_56) else fail-any) else fail-any)) else caught-fail) in
                            {5088}let v_1122: bool = (not-caught-fail(v_1121) && success?(1-proj-2-tuple(v_1121))) in
                            {5089}let kb_56: mac_key = (if v_1122 then 2-proj-2-tuple(v_1121) else caught-fail) in
                            {5090}let es_81: bitstring = (if v_1122 then 1-proj-2-tuple(v_1121) else caught-fail) in
                            {5091}let v_1123: bitstring = (if not(v_1116) then catch-fail(psk_data'_23) else caught-fail) in
                            {5092}let v_1124: bool = (not-caught-fail(v_1123) && success?(1-proj-4-tuple(v_1123))) in
                            {5093}let is_safe_47: bool = (if v_1124 then 4-proj-4-tuple(v_1123) else caught-fail) in
                            {5094}let es_82: bitstring = (if v_1124 then 3-proj-4-tuple(v_1123) else caught-fail) in
                            {5095}let id_55: identityPsk = (if v_1124 then 2-proj-4-tuple(v_1123) else caught-fail) in
                            {5096}let psk_126: preSharedKey = (if v_1124 then 1-proj-4-tuple(v_1123) else caught-fail) in
                            {5097}let (psk_127: preSharedKey,early_secret_85: bitstring,valid_26: bool,safe_psk_29: bool) = (if v_1116 then (if v_1122 then (NoPsk,es_81,true,false) else fail-any) else (if v_1124 then (psk_126,es_82,((psk_126 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_52)),is_safe_47) else fail-any)) in
                            {5098}event Client_PSKChoosen(@6_id_client,psk_127,safe_psk_29);
                            {5099}if valid_26 then
                            (
                                {5100}let gxy_53: element = catch-fail(dh_decap_fun(g_30,gy_27,x_353)) in
                                {5101}let v_1125: bool = not-caught-fail(gxy_53) in
                                {5102}new s_117[]: seed;
                                {5103}let gxy_54: element = (if v_1125 then gxy_53 else dh_f(s_117)) in
                                {5104}event Client_DH_gxy(@6_id_client,gxy_54);
                                {5105}let l_315: label = tls13_derived in
                                {5106}let m_111: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                {5107}let v_1126: bool = not-caught-fail(m_111) in
                                {5108}let h_299: bitstring = (if v_1126 then catch-fail(hash(@6_tls_h,m_111)) else caught-fail) in
                                {5109}let v_1127: bool = not-caught-fail(h_299) in
                                {5110}let x_355: bitstring = (if v_1127 then (l_315,h_299) else caught-fail) in
                                {5111}let extra_57: bitstring = catch-fail((if v_1126 then (if v_1127 then hmac(@6_tls_h,early_secret_85,x_355) else fail-any) else fail-any)) in
                                {5112}let v_1128: bool = not-caught-fail(extra_57) in
                                {5113}let handshake_secret_27: bitstring = (if v_1128 then hmac(@6_tls_h,extra_57,gxy_54) else fail-any) in
                                {5114}let l_316: label = tls13_derived in
                                {5115}let m_112: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                {5116}let v_1129: bool = not-caught-fail(m_112) in
                                {5117}let h_300: bitstring = (if v_1129 then catch-fail(hash(@6_tls_h,m_112)) else caught-fail) in
                                {5118}let v_1130: bool = not-caught-fail(h_300) in
                                {5119}let x_356: bitstring = (if v_1130 then (l_316,h_300) else caught-fail) in
                                {5120}let extra_58: bitstring = catch-fail((if v_1129 then (if v_1130 then hmac(@6_tls_h,handshake_secret_27,x_356) else fail-any) else fail-any)) in
                                {5121}let v_1131: bool = not-caught-fail(extra_58) in
                                {5122}let k_118: bitstring = (if v_1131 then zero else caught-fail) in
                                {5123}let master_secret_61: bitstring = (if v_1131 then catch-fail(hmac(@6_tls_h,handshake_secret_27,k_118)) else caught-fail) in
                                {5124}let v_1132: bool = not-caught-fail(master_secret_61) in
                                {5125}let l_317: label = (if v_1132 then tls13_client_handshake_traffic_secret else caught-fail) in
                                {5126}let h_301: bitstring = (if v_1132 then catch-fail(hash(@6_tls_h,cur_log2_56)) else caught-fail) in
                                {5127}let v_1133: bool = not-caught-fail(h_301) in
                                {5128}let x_357: bitstring = (if v_1133 then (l_317,h_301) else caught-fail) in
                                {5129}let client_hts_27: bitstring = (if v_1132 then catch-fail((if v_1133 then hmac(@6_tls_h,handshake_secret_27,x_357) else fail-any)) else caught-fail) in
                                {5130}let v_1134: bool = not-caught-fail(client_hts_27) in
                                {5131}let l_318: label = (if v_1134 then tls13_server_handshake_traffic_secret else caught-fail) in
                                {5132}let h_302: bitstring = (if v_1134 then catch-fail(hash(@6_tls_h,cur_log2_56)) else caught-fail) in
                                {5133}let v_1135: bool = not-caught-fail(h_302) in
                                {5134}let x_358: bitstring = (if v_1135 then (l_318,h_302) else caught-fail) in
                                {5135}let server_hts_27: bitstring = (if v_1134 then catch-fail((if v_1135 then hmac(@6_tls_h,handshake_secret_27,x_358) else fail-any)) else caught-fail) in
                                {5136}let v_1136: bool = not-caught-fail(server_hts_27) in
                                {5137}let l_319: label = (if v_1136 then tls13_key else caught-fail) in
                                {5138}let h_303: bitstring = (if v_1136 then zero else caught-fail) in
                                {5139}let x_359: bitstring = (if v_1136 then (l_319,h_303) else caught-fail) in
                                {5140}let client_wkh_27: bitstring = (if v_1136 then catch-fail(hmac(@6_tls_h,client_hts_27,x_359)) else caught-fail) in
                                {5141}let v_1137: bool = not-caught-fail(client_wkh_27) in
                                {5142}let l_320: label = (if v_1137 then tls13_key else caught-fail) in
                                {5143}let h_304: bitstring = (if v_1137 then zero else caught-fail) in
                                {5144}let x_360: bitstring = (if v_1137 then (l_320,h_304) else caught-fail) in
                                {5145}let server_wkh_27: bitstring = (if v_1137 then catch-fail(hmac(@6_tls_h,server_hts_27,x_360)) else caught-fail) in
                                {5146}let v_1138: bool = not-caught-fail(server_wkh_27) in
                                {5147}let l_321: label = (if v_1138 then tls13_finished else caught-fail) in
                                {5148}let h_305: bitstring = (if v_1138 then zero else caught-fail) in
                                {5149}let x_361: bitstring = (if v_1138 then (l_321,h_305) else caught-fail) in
                                {5150}let client_fk_27: bitstring = (if v_1138 then catch-fail(hmac(@6_tls_h,client_hts_27,x_361)) else caught-fail) in
                                {5151}let v_1139: bool = not-caught-fail(client_fk_27) in
                                {5152}let l_322: label = (if v_1139 then tls13_finished else caught-fail) in
                                {5153}let h_306: bitstring = (if v_1139 then zero else caught-fail) in
                                {5154}let x_362: bitstring = (if v_1139 then (l_322,h_306) else caught-fail) in
                                {5155}let server_fk_27: bitstring = (if v_1139 then catch-fail(hmac(@6_tls_h,server_hts_27,x_362)) else caught-fail) in
                                {5156}let v_1140: bool = not-caught-fail(server_fk_27) in
                                {5157}let (master_secret_62: bitstring,chk_34: aead_key,shk_33: aead_key,cfin_34: mac_key,sfin_33: mac_key) = (if v_1131 then (if v_1132 then (if v_1134 then (if v_1136 then (if v_1137 then (if v_1138 then (if v_1139 then (if v_1140 then (master_secret_61,client_wkh_27,server_wkh_27,client_fk_27,server_fk_27) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                {5158}event Client_chk(@6_id_client,chk_34);
                                {5159}event Client_shk(@6_id_client,shk_33);
                                {5160}event Client_cfin(@6_id_client,cfin_34);
                                {5161}event Client_sfin(@6_id_client,sfin_33);
                                {5162}in(io, enc_ee_msg_26: bitstring);
                                {5163}let ee_msg_27: msg = aead_dec(@6_tls_a,shk_33,0,zero,enc_ee_msg_26) in
                                {5164}let EE(ech_ee_26: echExt,extra_ee_26: extraExt) = ee_msg_27 in
                                {5165}let cur_log2_57: bitstring = (cur_log2_56,ee_msg_27) in
                                {5166}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(o_cr_7,sr_34,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_127,safe_psk_29,@6_comp_psk,master_secret_62,chk_34,0,shk_33,1,cfin_34,sfin_33,cur_log2_57)))
                            )
                            else
                                {5167}out(io, illegal_parameter)
                        )
                        else
                            {5168}out(io, illegal_parameter)
            )
            else
                {5169}out(io, unexpected_message)
        )
) | (
    {5171}!
    {5172}new id_server_4: idProc;
    {5173}in(io, s_dom_12: domain);
    {5174}event Same(s_dom_12);
    {5175}let id_server_5: idProc = id_server_4 in
    {5176}let extra_ext_2: extraExt = empty_extra_ext in
    {5177}let tls_h_1: hash_alg = id_hash(StrongHash,1) in
    {5178}let tls_a_1: aead_alg = id_aead(StrongAE,1) in
    {5179}let tls_g_1: group = id_g(StrongDH,1) in
    {5180}let backend_h: hash_alg = id_hash(StrongHash,1) in
    {5181}let backend_a: aead_alg = id_aead(StrongAE,1) in
    {5182}let backend_g: group = id_g(StrongDH,1) in
    {5183}in(io, use_ech: bool);
    {5184}new @5_st[]: stamp;
    {5185}event PreciseInput(@5_st,use_ech);
    {5186}let () = () in
    {5187}event Same(use_ech);
    {5188}let use_psk_1: bool = false in
    {5189}let req_cert_3: bool = false in
    {5190}in(io, o_client_hello_3: msg);
    {5191}let CH(cr_9: bytes32,nego(=TLS13,c_h_alg: hash_alg,c_a_alg: aead_alg,kex_ext_1: keyShareExt,sni_ext_2: sniExt,ech_ext_8: echExt,extra_ext_3: extraExt,psk_ext_53: preSharedKeyExt)) = o_client_hello_3 in
    (
        {5192}if (sni_ext_2 = SNI(s_dom_12)) then
        (
            {5383}get ech_configurations(ech_config(config_id_8: configId,ech_g_10: group,pkR_10: element,=s_dom_12,ech_h_10: hash_alg,ech_a_10: aead_alg),skR_2: bitstring) in
            {5193}let ech_conf_1: echConfig = ech_config(config_id_8,ech_g_10,pkR_10,s_dom_12,ech_h_10,ech_a_10) in
            {5194}let @4_x: bitstring = (ech_conf_1,skR_2) in
            {5195}new @4_st[]: stamp;
            {5196}event PreciseInput(@4_st,@4_x);
            {5197}let () = () in
            {5198}event ServerChoosesEchConfig(id_server_5,ech_conf_1,use_ech);
            {5199}let v_1141: echConfig = ech_conf_1 in
            {5200}let v_1142: bool = success?(1-proj-ech_config(v_1141)) in
            {5201}let a_alg_12: aead_alg = (if v_1142 then 6-proj-ech_config(v_1141) else caught-fail) in
            {5202}let h_alg_14: hash_alg = (if v_1142 then 5-proj-ech_config(v_1141) else caught-fail) in
            {5203}let s_dom_13: domain = (if v_1142 then 4-proj-ech_config(v_1141) else caught-fail) in
            {5204}let pkR_11: element = (if v_1142 then 3-proj-ech_config(v_1141) else caught-fail) in
            {5205}let g_31: group = (if v_1142 then 2-proj-ech_config(v_1141) else caught-fail) in
            {5206}let config_id_9: configId = (if v_1142 then 1-proj-ech_config(v_1141) else caught-fail) in
            {5207}new s_118[]: seed;
            {5208}let gx_25: element = (if v_1142 then dh_pub(g_31,dh_k(s_118)) else caught-fail) in
            {5209}let v_1143: bitstring = (if v_1142 then catch-fail((dh_k(s_118),gx_25)) else caught-fail) in
            {5210}let v_1144: bool = (not-caught-fail(v_1143) && success?(1-proj-2-tuple(v_1143))) in
            {5211}let pkR': element = (if v_1144 then 2-proj-2-tuple(v_1143) else caught-fail) in
            {5212}let skR': bitstring = (if v_1144 then 1-proj-2-tuple(v_1143) else caught-fail) in
            {5213}new config_id'[]: configId;
            {5214}let retry_ech_ext: echExt = (if v_1142 then (if v_1144 then ECHConfigList(ech_config(config_id',g_31,pkR',s_dom_13,h_alg_14,a_alg_12)) else fail-any) else fail-any) in
            {5215}if ((use_ech ≠ true) || (ech_ext_8 = empty_ech_ext)) then
            (
                {5216}event ServerEchAcceptance(id_server_5,false);
                {5217}let ee_msg_28: msg = EE(empty_ech_ext,extra_ext_2) in
                {5218}let CH(cr_10: bytes32,nego(=TLS13,=tls_h_1,=tls_a_1,kex_ext_2: keyShareExt,SNI(=s_dom_12),ech_ext_9: echExt,extra_ext_4: extraExt,psk_ext_54: preSharedKeyExt)) = o_client_hello_3 in
                (
                    {5219}let (=true,client_kex_ext(DHE_group(=tls_g_1))) = (false,kex_ext_2) in
                    (
                        {5220}let hrr_mode_3: params = nego(TLS13,tls_h_1,tls_a_1,hrr_kex_ext(tls_g_1),empty_sni_ext,empty_ech_ext,empty_extra_ext,empty_psk_ext) in
                        {5221}let hello_retry_request: msg = SH(B32(HRR24,HRR8),hrr_mode_3) in
                        {5222}out(io, hello_retry_request);
                        {5223}let cur_log_HRR: bitstring = ((zero,o_client_hello_3),hello_retry_request) in
                        {5224}in(io, client_hello'_12: msg);
                        {5225}let CH(cr'_12: bytes32,offer': params) = client_hello'_12 in
                            {5226}out(ch_server_SH, (id_server_5,ArgsServerSH(tls_g_1,tls_h_1,tls_a_1,s_dom_12,req_cert_3,false,use_psk_1,false,ee_msg_28,client_hello'_12,cur_log_HRR)))
                        else
                            {5227}out(io, unexpected_message)
                    )
                    else
                        {5228}let client_kex_ext(DHE_kex(=tls_g_1,gx_26: element)) = kex_ext_2 in
                            {5229}out(ch_server_SH, (id_server_5,ArgsServerSH(tls_g_1,tls_h_1,tls_a_1,s_dom_12,req_cert_3,false,use_psk_1,true,ee_msg_28,o_client_hello_3,zero)))
                        else
                            {5230}out(io, handshake_failure)
                )
                else
                    {5231}out(io, handshake_failure)
            )
            else
                {5232}let ECHClientHelloOuter(ech_h': hash_alg,ech_a': aead_alg,config_id'_1: configId,enc_2: element,payload_13: bitstring) = ech_ext_8 in
                (
                    {5233}if ((ech_h' = ech_h_10) && ((ech_a' = ech_a_10) && (config_id'_1 = config_id_8))) then
                    (
                        {5234}let info_1: bitstring = (tls_ech_str,ech_conf_1) in
                        {5235}let gxy_55: element = catch-fail(dh_decap_fun(ech_g_10,enc_2,skR_2)) in
                        {5236}let v_1145: bool = not-caught-fail(gxy_55) in
                        {5237}new s_119[]: seed;
                        {5238}let shared_secret_1: element = (if v_1145 then gxy_55 else dh_f(s_119)) in
                        {5239}let r_1: hpkeRole = R in
                        {5240}let salt_1: bitstring = zero in
                        {5241}let label_5: label = hpke_info_hash in
                        {5242}let k_119: bitstring = (label_5,info_1) in
                        {5243}let info_hash_1: bitstring = catch-fail(hmac(ech_h_10,salt_1,k_119)) in
                        {5244}let v_1146: bool = not-caught-fail(info_hash_1) in
                        {5245}let label_6: label = (if v_1146 then hpke_secret else caught-fail) in
                        {5246}let ikm_1: bitstring = (if v_1146 then zero else caught-fail) in
                        {5247}let k_120: bitstring = (if v_1146 then (label_6,ikm_1) else caught-fail) in
                        {5248}let xsecret_1: bitstring = (if v_1146 then catch-fail(hmac(ech_h_10,shared_secret_1,k_120)) else caught-fail) in
                        {5249}let v_1147: bool = not-caught-fail(xsecret_1) in
                        {5250}let label_7: label = (if v_1147 then hpke_key else caught-fail) in
                        {5251}let x_363: bitstring = (if v_1147 then (label_7,info_hash_1) else caught-fail) in
                        {5252}let key_13: aead_key = (if v_1147 then catch-fail(hmac(ech_h_10,xsecret_1,x_363)) else caught-fail) in
                        {5253}let v_1148: bool = not-caught-fail(key_13) in
                        {5254}let label_8: label = (if v_1148 then hpke_base_nonce else caught-fail) in
                        {5255}let x_364: bitstring = (if v_1148 then (label_8,info_hash_1) else caught-fail) in
                        {5256}let base_nonce_13: bitstring = (if v_1148 then catch-fail(hmac(ech_h_10,xsecret_1,x_364)) else caught-fail) in
                        {5257}let v_1149: bool = not-caught-fail(base_nonce_13) in
                        {5258}let context_1: hpkeContext = (if v_1146 then (if v_1147 then (if v_1148 then (if v_1149 then hpke_context(r_1,key_13,base_nonce_13) else fail-any) else fail-any) else fail-any) else fail-any) in
                        {5259}let v_1150: msg = o_client_hello_3 in
                        {5260}let v_1151: bool = (success?(1-proj-nego(2-proj-CH(v_1150))) && success?(1-proj-CH(v_1150))) in
                        {5261}let psk_ext_55: preSharedKeyExt = (if v_1151 then 8-proj-nego(2-proj-CH(v_1150)) else caught-fail) in
                        {5262}let extra_ext_5: extraExt = (if v_1151 then 7-proj-nego(2-proj-CH(v_1150)) else caught-fail) in
                        {5263}let ech_ext_10: echExt = (if v_1151 then 6-proj-nego(2-proj-CH(v_1150)) else caught-fail) in
                        {5264}let sni_ext_3: sniExt = (if v_1151 then 5-proj-nego(2-proj-CH(v_1150)) else caught-fail) in
                        {5265}let kex_ext_3: keyShareExt = (if v_1151 then 4-proj-nego(2-proj-CH(v_1150)) else caught-fail) in
                        {5266}let a_alg_13: aead_alg = (if v_1151 then 3-proj-nego(2-proj-CH(v_1150)) else caught-fail) in
                        {5267}let h_alg_15: hash_alg = (if v_1151 then 2-proj-nego(2-proj-CH(v_1150)) else caught-fail) in
                        {5268}let v_1152: TLS_version = (if v_1151 then 1-proj-nego(2-proj-CH(v_1150)) else caught-fail) in
                        {5269}let r_2: bytes32 = (if v_1151 then 1-proj-CH(v_1150) else caught-fail) in
                        {5270}let v_1153: echExt = (if v_1151 then catch-fail(ech_ext_10) else caught-fail) in
                        {5271}let v_1154: bool = (not-caught-fail(v_1153) && success?(1-proj-ECHClientHelloOuter(v_1153))) in
                        {5272}let payload_14: bitstring = (if v_1154 then 5-proj-ECHClientHelloOuter(v_1153) else caught-fail) in
                        {5273}let enc_3: element = (if v_1154 then 4-proj-ECHClientHelloOuter(v_1153) else caught-fail) in
                        {5274}let config_id_10: configId = (if v_1154 then 3-proj-ECHClientHelloOuter(v_1153) else caught-fail) in
                        {5275}let a_alg_ech: aead_alg = (if v_1154 then 2-proj-ECHClientHelloOuter(v_1153) else caught-fail) in
                        {5276}let h_alg_ech: hash_alg = (if v_1154 then 1-proj-ECHClientHelloOuter(v_1153) else caught-fail) in
                        {5277}let ech_ext': echExt = (if v_1154 then ECHClientHelloOuter(h_alg_ech,a_alg_ech,config_id_10,enc_3,zero) else caught-fail) in
                        {5278}let client_hello_AAD: msg = (if v_1151 then (if v_1154 then CH(r_2,nego(v_1152,h_alg_15,a_alg_13,kex_ext_3,sni_ext_3,ech_ext',extra_ext_5,psk_ext_55)) else fail-any) else fail-any) in
                        {5279}let n_12: nat = 1 in
                        {5280}let v_1155: hpkeContext = context_1 in
                        {5281}let v_1156: bool = ((R =nf 1-proj-hpke_context(v_1155)) && success?(1-proj-hpke_context(v_1155))) in
                        {5282}let base_nonce_14: bitstring = (if v_1156 then 3-proj-hpke_context(v_1155) else caught-fail) in
                        {5283}let key_14: aead_key = (if v_1156 then 2-proj-hpke_context(v_1155) else caught-fail) in
                        {5284}let i_client_hello_15: msg = (if v_1156 then aead_dec(ech_a_10,key_14,(base_nonce_14,n_12),client_hello_AAD,payload_13) else fail-any) in
                        (
                            {5285}let CH(cr'_13: bytes32,nego(=TLS13,c_h_alg': hash_alg,c_a_alg': aead_alg,kex_ext': keyShareExt,SNI(i_dom: domain),=ECHClientHelloInner,extra_ext': extraExt,psk_ext': preSharedKeyExt)) = i_client_hello_15 in
                            (
                                {5286}event ServerEchAcceptance(id_server_5,true);
                                {5287}let ee_msg_29: msg = EE(empty_ech_ext,extra_ext_2) in
                                {5288}let CH(cr_11: bytes32,nego(=TLS13,=backend_h,=backend_a,kex_ext_4: keyShareExt,SNI(i_dom_1: domain),=ECHClientHelloInner,extra_ext_6: extraExt,psk_ext_56: preSharedKeyExt)) = i_client_hello_15 in
                                (
                                    {5289}let (=true,client_kex_ext(DHE_group(=backend_g))) = (false,kex_ext_4) in
                                    (
                                        {5290}let hrr_mode_4: params = nego(TLS13,backend_h,backend_a,hrr_kex_ext(backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) in
                                        {5291}let hrr_3: msg = SH(B32(HRR24,HRR8),hrr_mode_4) in
                                        {5292}let cur_log_21: bitstring = ((zero,i_client_hello_15),hrr_3) in
                                        {5293}let transcript_hrr_ech_conf_3: bitstring = catch-fail(hash(backend_h,cur_log_21)) in
                                        {5294}let v_1157: bool = not-caught-fail(transcript_hrr_ech_conf_3) in
                                        {5295}let s_120: bitstring = (if v_1157 then zero else caught-fail) in
                                        {5296}let k_121: bitstring = (if v_1157 then catch-fail(b32_2_b(get_random(i_client_hello_15))) else caught-fail) in
                                        {5297}let v_1158: bool = not-caught-fail(k_121) in
                                        {5298}let k_122: bitstring = (if v_1157 then catch-fail((if v_1158 then hmac(backend_h,s_120,k_121) else fail-any)) else caught-fail) in
                                        {5299}let v_1159: bool = not-caught-fail(k_122) in
                                        {5300}let l_323: label = (if v_1159 then hrr_ech_accept_confirmation else caught-fail) in
                                        {5301}let x_365: bitstring = (if v_1159 then (l_323,cur_log_21) else caught-fail) in
                                        {5302}let hrr_accept_confirmation: bytes8 = catch-fail((if v_1157 then crop_into_bytes8((if v_1159 then hmac(backend_h,k_122,x_365) else fail-any)) else fail-any)) in
                                        {5303}let v_1160: bool = not-caught-fail(hrr_accept_confirmation) in
                                        {5304}let hrr_mode_5: params = (if v_1160 then nego(TLS13,backend_h,backend_a,hrr_kex_ext(backend_g),empty_sni_ext,ECHHelloRetryRequest(hrr_accept_confirmation),empty_extra_ext,empty_psk_ext) else caught-fail) in
                                        {5305}let hrr_msg: msg = (if v_1160 then SH(B32(HRR24,HRR8),hrr_mode_5) else fail-any) in
                                        {5306}out(io, hrr_msg);
                                        {5307}let ech_config(id_conf: configId,ech_g_11: group,pkR_12: element,s_dom_14: domain,ech_h_11: hash_alg,ech_a_11: aead_alg) = ech_conf_1 in
                                        {5308}in(io, o_client_hello_4: msg);
                                        {5309}let CH(cr'_14: bytes32,nego(=TLS13,h_alg': hash_alg,a_alg': aead_alg,kex_ext'_1: keyShareExt,SNI(=s_dom_14),ech_ext_11: echExt,extra_ext'_1: extraExt,psk_ext'_1: preSharedKeyExt)) = o_client_hello_4 in
                                        (
                                            {5310}if (ech_ext_11 = empty_ech_ext) then
                                                {5311}out(io, missing_extension)
                                            else
                                                {5312}let ECHClientHelloOuter(=ech_h_11,=ech_a_11,=id_conf,=zero,payload_15: bitstring) = ech_ext_11 in
                                                (
                                                    {5313}let v_1161: msg = o_client_hello_4 in
                                                    {5314}let v_1162: bool = (success?(1-proj-nego(2-proj-CH(v_1161))) && success?(1-proj-CH(v_1161))) in
                                                    {5315}let psk_ext_57: preSharedKeyExt = (if v_1162 then 8-proj-nego(2-proj-CH(v_1161)) else caught-fail) in
                                                    {5316}let extra_ext_7: extraExt = (if v_1162 then 7-proj-nego(2-proj-CH(v_1161)) else caught-fail) in
                                                    {5317}let ech_ext_12: echExt = (if v_1162 then 6-proj-nego(2-proj-CH(v_1161)) else caught-fail) in
                                                    {5318}let sni_ext_4: sniExt = (if v_1162 then 5-proj-nego(2-proj-CH(v_1161)) else caught-fail) in
                                                    {5319}let kex_ext_5: keyShareExt = (if v_1162 then 4-proj-nego(2-proj-CH(v_1161)) else caught-fail) in
                                                    {5320}let a_alg_14: aead_alg = (if v_1162 then 3-proj-nego(2-proj-CH(v_1161)) else caught-fail) in
                                                    {5321}let h_alg_16: hash_alg = (if v_1162 then 2-proj-nego(2-proj-CH(v_1161)) else caught-fail) in
                                                    {5322}let v_1163: TLS_version = (if v_1162 then 1-proj-nego(2-proj-CH(v_1161)) else caught-fail) in
                                                    {5323}let r_3: bytes32 = (if v_1162 then 1-proj-CH(v_1161) else caught-fail) in
                                                    {5324}let v_1164: echExt = (if v_1162 then catch-fail(ech_ext_12) else caught-fail) in
                                                    {5325}let v_1165: bool = (not-caught-fail(v_1164) && success?(1-proj-ECHClientHelloOuter(v_1164))) in
                                                    {5326}let payload_16: bitstring = (if v_1165 then 5-proj-ECHClientHelloOuter(v_1164) else caught-fail) in
                                                    {5327}let enc_4: element = (if v_1165 then 4-proj-ECHClientHelloOuter(v_1164) else caught-fail) in
                                                    {5328}let config_id_11: configId = (if v_1165 then 3-proj-ECHClientHelloOuter(v_1164) else caught-fail) in
                                                    {5329}let a_alg_ech_1: aead_alg = (if v_1165 then 2-proj-ECHClientHelloOuter(v_1164) else caught-fail) in
                                                    {5330}let h_alg_ech_1: hash_alg = (if v_1165 then 1-proj-ECHClientHelloOuter(v_1164) else caught-fail) in
                                                    {5331}let ech_ext'_1: echExt = (if v_1165 then ECHClientHelloOuter(h_alg_ech_1,a_alg_ech_1,config_id_11,enc_4,zero) else caught-fail) in
                                                    {5332}let client_hello_AAD_1: msg = (if v_1162 then (if v_1165 then CH(r_3,nego(v_1163,h_alg_16,a_alg_14,kex_ext_5,sni_ext_4,ech_ext'_1,extra_ext_7,psk_ext_57)) else fail-any) else fail-any) in
                                                    {5333}let n_13: nat = 2 in
                                                    {5334}let v_1166: hpkeContext = context_1 in
                                                    {5335}let v_1167: bool = ((R =nf 1-proj-hpke_context(v_1166)) && success?(1-proj-hpke_context(v_1166))) in
                                                    {5336}let base_nonce_15: bitstring = (if v_1167 then 3-proj-hpke_context(v_1166) else caught-fail) in
                                                    {5337}let key_15: aead_key = (if v_1167 then 2-proj-hpke_context(v_1166) else caught-fail) in
                                                    {5338}let i_client_hello'_9: msg = (if v_1167 then aead_dec(ech_a_11,key_15,(base_nonce_15,n_13),client_hello_AAD_1,payload_15) else fail-any) in
                                                    (
                                                        {5339}let CH(i_cr_7: bytes32,nego(=TLS13,i_h_alg: hash_alg,i_a_alg: aead_alg,i_kex_ext_4: keyShareExt,SNI(=i_dom_1),=ECHClientHelloInner,i_extra_ext: extraExt,i_psk_ext: preSharedKeyExt)) = i_client_hello'_9 in
                                                            {5340}out(ch_server_SH, (id_server_5,ArgsServerSH(backend_g,backend_h,backend_a,i_dom_1,req_cert_3,true,use_psk_1,false,ee_msg_29,i_client_hello'_9,((zero,i_client_hello_15),hrr_msg))))
                                                        else
                                                            {5341}out(io, illegal_parameter)
                                                    )
                                                    else
                                                        {5342}out(io, decrypt_error)
                                                )
                                                else
                                                    {5343}out(io, illegal_parameter)
                                        )
                                        else
                                            {5344}out(io, unexpected_message)
                                    )
                                    else
                                        {5345}let client_kex_ext(DHE_kex(=backend_g,gx_27: element)) = kex_ext_4 in
                                            {5346}out(ch_server_SH, (id_server_5,ArgsServerSH(backend_g,backend_h,backend_a,i_dom_1,req_cert_3,true,use_psk_1,true,ee_msg_29,i_client_hello_15,zero)))
                                        else
                                            {5347}out(io, handshake_failure)
                                )
                                else
                                    {5348}out(io, handshake_failure)
                            )
                            else
                                {5349}out(io, illegal_parameter)
                        )
                        else
                            {5350}event ServerEchAcceptance(id_server_5,false);
                            {5351}let ee_msg_30: msg = EE(retry_ech_ext,extra_ext_2) in
                            {5352}let CH(cr_12: bytes32,nego(=TLS13,=tls_h_1,=tls_a_1,kex_ext_6: keyShareExt,SNI(=s_dom_12),ech_ext_13: echExt,extra_ext_8: extraExt,psk_ext_58: preSharedKeyExt)) = o_client_hello_3 in
                            (
                                {5353}let (=true,client_kex_ext(DHE_group(=tls_g_1))) = (false,kex_ext_6) in
                                (
                                    {5354}let hrr_mode_6: params = nego(TLS13,tls_h_1,tls_a_1,hrr_kex_ext(tls_g_1),empty_sni_ext,empty_ech_ext,empty_extra_ext,empty_psk_ext) in
                                    {5355}let hello_retry_request_1: msg = SH(B32(HRR24,HRR8),hrr_mode_6) in
                                    {5356}out(io, hello_retry_request_1);
                                    {5357}let cur_log_HRR_1: bitstring = ((zero,o_client_hello_3),hello_retry_request_1) in
                                    {5358}in(io, client_hello'_13: msg);
                                    {5359}let CH(cr'_15: bytes32,offer'_1: params) = client_hello'_13 in
                                        {5360}out(ch_server_SH, (id_server_5,ArgsServerSH(tls_g_1,tls_h_1,tls_a_1,s_dom_12,req_cert_3,false,use_psk_1,false,ee_msg_30,client_hello'_13,cur_log_HRR_1)))
                                    else
                                        {5361}out(io, unexpected_message)
                                )
                                else
                                    {5362}let client_kex_ext(DHE_kex(=tls_g_1,gx_28: element)) = kex_ext_6 in
                                        {5363}out(ch_server_SH, (id_server_5,ArgsServerSH(tls_g_1,tls_h_1,tls_a_1,s_dom_12,req_cert_3,false,use_psk_1,true,ee_msg_30,o_client_hello_3,zero)))
                                    else
                                        {5364}out(io, handshake_failure)
                            )
                            else
                                {5365}out(io, handshake_failure)
                    )
                    else
                        {5366}event ServerEchAcceptance(id_server_5,false);
                        {5367}let ee_msg_31: msg = EE(retry_ech_ext,extra_ext_2) in
                        {5368}let CH(cr_13: bytes32,nego(=TLS13,=tls_h_1,=tls_a_1,kex_ext_7: keyShareExt,SNI(=s_dom_12),ech_ext_14: echExt,extra_ext_9: extraExt,psk_ext_59: preSharedKeyExt)) = o_client_hello_3 in
                        (
                            {5369}let (=true,client_kex_ext(DHE_group(=tls_g_1))) = (false,kex_ext_7) in
                            (
                                {5370}let hrr_mode_7: params = nego(TLS13,tls_h_1,tls_a_1,hrr_kex_ext(tls_g_1),empty_sni_ext,empty_ech_ext,empty_extra_ext,empty_psk_ext) in
                                {5371}let hello_retry_request_2: msg = SH(B32(HRR24,HRR8),hrr_mode_7) in
                                {5372}out(io, hello_retry_request_2);
                                {5373}let cur_log_HRR_2: bitstring = ((zero,o_client_hello_3),hello_retry_request_2) in
                                {5374}in(io, client_hello'_14: msg);
                                {5375}let CH(cr'_16: bytes32,offer'_2: params) = client_hello'_14 in
                                    {5376}out(ch_server_SH, (id_server_5,ArgsServerSH(tls_g_1,tls_h_1,tls_a_1,s_dom_12,req_cert_3,false,use_psk_1,false,ee_msg_31,client_hello'_14,cur_log_HRR_2)))
                                else
                                    {5377}out(io, unexpected_message)
                            )
                            else
                                {5378}let client_kex_ext(DHE_kex(=tls_g_1,gx_29: element)) = kex_ext_7 in
                                    {5379}out(ch_server_SH, (id_server_5,ArgsServerSH(tls_g_1,tls_h_1,tls_a_1,s_dom_12,req_cert_3,false,use_psk_1,true,ee_msg_31,o_client_hello_3,zero)))
                                else
                                    {5380}out(io, handshake_failure)
                        )
                        else
                            {5381}out(io, handshake_failure)
                )
                else
                    {5382}out(io, illegal_parameter)
        )
        else
            {5384}out(io, handshake_failure)
    )
    else
        {5385}out(io, unexpected_message)
) | (
    {5386}!
    {5387}in(io, ClientA: domain);
    {5388}in(io, ClientB: domain);
    {5389}let c_dom_6: domain = choice[ClientA,ClientB] in
    {5390}in(io, frontend_dom_1: domain);
    {5391}event Same(frontend_dom_1);
    {5392}in(io, backend_dom_1: domain);
    {5393}event Same(backend_dom_1);
    {5394}new s_121: seed;
    {5395}let id_client_5: idProc = idClientDiff(s_121) in
    {9911}get ech_configurations(ech_config(id_56: configId,g_32: group,pkR_13: element,=frontend_dom_1,h_alg_17: hash_alg,a_alg_15: aead_alg),skR_3: bitstring) in
    {5396}let ech_conf_2: echConfig = ech_config(id_56,g_32,pkR_13,frontend_dom_1,h_alg_17,a_alg_15) in
    {5397}event ConfigOffered(id_client_5,ech_conf_2);
    {5398}let @8_i_extra_ext: extraExt = empty_extra_ext in
    {5399}let @8_tls_h: hash_alg = id_hash(StrongHash,1) in
    {5400}let @8_tls_a: aead_alg = id_aead(StrongAE,1) in
    {5401}let @8_tls_g: group = id_g(StrongDH,1) in
    {5402}let @8_backend_h: hash_alg = id_hash(StrongHash,1) in
    {5403}let @8_backend_a: aead_alg = id_aead(StrongAE,1) in
    {5404}let @8_backend_g: group = id_g(StrongDH,1) in
    {5405}let @8_use_psk: bool = false in
    {5406}let @8_comp_psk: bool = false in
    {5407}in(io, @8_send_kex: bool);
    {5408}new @8_st[]: stamp;
    {5409}event PreciseInput(@8_st,@8_send_kex);
    {5410}let () = () in
    {5411}event Same(@8_send_kex);
    {5412}let @8_use_grease: bool = false in
    {5413}let send_kex_1: bool = (not(false) || @8_send_kex) in
    {5414}let ech_config(config_id_12: configId,ech_g_12: group,pkR_14: element,o_dom_8: domain,ech_h_12: hash_alg,ech_a_12: aead_alg) = ech_conf_2 in
    {5415}event ClientOffersEchConfig(id_client_5,ech_conf_2);
    {5416}let info_2: bitstring = (tls_ech_str,ech_conf_2) in
    {5417}new s_122[]: seed;
    {5418}let v_1168: bitstring = (dh_xy(s_122,pkR_14),dh_encap_fun(ech_g_12,pkR_14,dh_xy(s_122,pkR_14))) in
    {5419}let v_1169: bool = success?(1-proj-2-tuple(v_1168)) in
    {5420}let enc_5: element = (if v_1169 then 2-proj-2-tuple(v_1168) else caught-fail) in
    {5421}let shared_secret_2: element = (if v_1169 then 1-proj-2-tuple(v_1168) else caught-fail) in
    {5422}let r_4: hpkeRole = (if v_1169 then S else caught-fail) in
    {5423}let salt_2: bitstring = (if v_1169 then zero else caught-fail) in
    {5424}let label_9: label = (if v_1169 then hpke_info_hash else caught-fail) in
    {5425}let k_123: bitstring = (if v_1169 then (label_9,info_2) else caught-fail) in
    {5426}let info_hash_2: bitstring = (if v_1169 then catch-fail(hmac(ech_h_12,salt_2,k_123)) else caught-fail) in
    {5427}let v_1170: bool = not-caught-fail(info_hash_2) in
    {5428}let label_10: label = (if v_1170 then hpke_secret else caught-fail) in
    {5429}let ikm_2: bitstring = (if v_1170 then zero else caught-fail) in
    {5430}let k_124: bitstring = (if v_1170 then (label_10,ikm_2) else caught-fail) in
    {5431}let xsecret_2: bitstring = (if v_1170 then catch-fail(hmac(ech_h_12,shared_secret_2,k_124)) else caught-fail) in
    {5432}let v_1171: bool = not-caught-fail(xsecret_2) in
    {5433}let label_11: label = (if v_1171 then hpke_key else caught-fail) in
    {5434}let x_366: bitstring = (if v_1171 then (label_11,info_hash_2) else caught-fail) in
    {5435}let key_16: aead_key = (if v_1171 then catch-fail(hmac(ech_h_12,xsecret_2,x_366)) else caught-fail) in
    {5436}let v_1172: bool = not-caught-fail(key_16) in
    {5437}let label_12: label = (if v_1172 then hpke_base_nonce else caught-fail) in
    {5438}let x_367: bitstring = (if v_1172 then (label_12,info_hash_2) else caught-fail) in
    {5439}let base_nonce_16: bitstring = (if v_1172 then catch-fail(hmac(ech_h_12,xsecret_2,x_367)) else caught-fail) in
    {5440}let v_1173: bool = not-caught-fail(base_nonce_16) in
    {5441}let (enc_6: element,context_2: hpkeContext) = (if v_1169 then (enc_5,(if v_1170 then (if v_1171 then (if v_1172 then (if v_1173 then hpke_context(r_4,key_16,base_nonce_16) else fail-any) else fail-any) else fail-any) else fail-any)) else fail-any) in
    {5442}let ech_config(config_id_13: configId,ech_g_13: group,pkR_15: element,o_dom_9: domain,ech_h_13: hash_alg,ech_a_13: aead_alg) = ech_conf_2 in
    {5443}new s_123[]: seed;
    {5444}let gx_30: element = dh_pub(@8_backend_g,dh_k(s_123)) in
    {5445}let v_1174: bitstring = (dh_k(s_123),gx_30) in
    {5446}let v_1175: bool = success?(1-proj-2-tuple(v_1174)) in
    {5447}let gx_31: element = (if v_1175 then 2-proj-2-tuple(v_1174) else caught-fail) in
    {5448}let x_368: bitstring = (if v_1175 then 1-proj-2-tuple(v_1174) else caught-fail) in
    {5449}let kex_11: kex_alg = (if v_1175 then (if send_kex_1 then DHE_kex(@8_backend_g,gx_31) else DHE_group(@8_backend_g)) else caught-fail) in
    {5450}let (i_kex_ext_5: keyShareExt,i_kex_data_7: bitstring) = (if v_1175 then (client_kex_ext(kex_11),(x_368,@8_backend_g)) else fail-any) in
    {5451}new s_124[]: seed;
    {5452}let gx_32: element = dh_pub(@8_tls_g,dh_k(s_124)) in
    {5453}let v_1176: bitstring = (dh_k(s_124),gx_32) in
    {5454}let v_1177: bool = success?(1-proj-2-tuple(v_1176)) in
    {5455}let gx_33: element = (if v_1177 then 2-proj-2-tuple(v_1176) else caught-fail) in
    {5456}let x_369: bitstring = (if v_1177 then 1-proj-2-tuple(v_1176) else caught-fail) in
    {5457}let kex_12: kex_alg = (if v_1177 then (if send_kex_1 then DHE_kex(@8_tls_g,gx_33) else DHE_group(@8_tls_g)) else caught-fail) in
    {5458}let (o_kex_ext_7: keyShareExt,o_kex_data_7: bitstring) = (if v_1177 then (client_kex_ext(kex_12),(x_369,@8_tls_g)) else fail-any) in
    {5459}new rand24_12[]: bytes24;
    {5460}new rand8_12[]: bytes8;
    {5461}let i_cr_8: bytes32 = B32(rand24_12,rand8_12) in
    {5462}new rand24_13[]: bytes24;
    {5463}new rand8_13[]: bytes8;
    {5464}let o_cr_10: bytes32 = B32(rand24_13,rand8_13) in
    {5465}let v_1178: bool = @8_use_grease in
    {5466}new payload_17[]: bitstring;
    {5467}new configid_1[]: configId;
    {5468}new s_125[]: seed;
    {5469}let gx_34: element = (if v_1178 then dh_pub(ech_g_13,dh_k(s_125)) else caught-fail) in
    {5470}let v_1179: bitstring = (if v_1178 then catch-fail((dh_k(s_125),gx_34)) else caught-fail) in
    {5471}let v_1180: bool = (not-caught-fail(v_1179) && success?(1-proj-2-tuple(v_1179))) in
    {5472}let gx_grease_1: element = (if v_1180 then 2-proj-2-tuple(v_1179) else caught-fail) in
    {5473}let x_grease_1: bitstring = (if v_1180 then 1-proj-2-tuple(v_1179) else caught-fail) in
    {5474}new s_126[]: seed;
    {5475}let v_1181: bitstring = (if v_1180 then catch-fail((dh_xy(s_126,gx_grease_1),dh_encap_fun(ech_g_13,gx_grease_1,dh_xy(s_126,gx_grease_1)))) else caught-fail) in
    {5476}let v_1182: bool = (not-caught-fail(v_1181) && success?(1-proj-2-tuple(v_1181))) in
    {5477}let enc_grease_1: element = (if v_1182 then 2-proj-2-tuple(v_1181) else caught-fail) in
    {5478}let secret_grease_1: element = (if v_1182 then 1-proj-2-tuple(v_1181) else caught-fail) in
    {5479}let ech_inner_or_grease_1: echExt = (if v_1178 then (if v_1180 then (if v_1182 then ECHClientHelloOuter(ech_h_13,ech_a_13,configid_1,enc_grease_1,payload_17) else fail-any) else fail-any) else ECHClientHelloInner) in
    {5480}let (dom_psk_1: domain,cr_psk_1: bytes32,kex_ext_psk_1: keyShareExt,extra_psk_1: extraExt,h_psk_1: hash_alg,a_psk_1: aead_alg) = (if @8_use_grease then (o_dom_9,o_cr_10,o_kex_ext_7,empty_extra_ext,@8_tls_h,@8_tls_a) else (backend_dom_1,i_cr_8,i_kex_ext_5,@8_i_extra_ext,@8_backend_h,@8_backend_a)) in
    {5481}let old_psk_data_1: bitstring = zero in
    {5482}let cur_log_22: bitstring = zero in
    {5483}if @8_use_psk then
    (
        {5484}let (psk_128: preSharedKey,id_57: identityPsk,old_es_7: bitstring,is_safe_48: bool) = old_psk_data_1 in
        (
            {5485}let offer_16: params = nego(TLS13,h_psk_1,a_psk_1,kex_ext_psk_1,SNI(dom_psk_1),ech_inner_or_grease_1,extra_psk_1,trunc_client_psk_ext(id_57)) in
            {5486}let cur_log'_16: bitstring = (cur_log_22,CH(cr_psk_1,offer_16)) in
            {5487}let s_127: bitstring = zero in
            {5488}let k_125: bitstring = catch-fail(psk2b(psk_128)) in
            {5489}let v_1183: bool = not-caught-fail(k_125) in
            {5490}let early_secret_86: bitstring = catch-fail((if v_1183 then hmac(h_psk_1,s_127,k_125) else fail-any)) in
            {5491}let v_1184: bool = not-caught-fail(early_secret_86) in
            {5492}let l_324: label = (if v_1184 then tls13_ext_res_binder else caught-fail) in
            {5493}let m_113: bitstring = (if v_1184 then zero else caught-fail) in
            {5494}let h_307: bitstring = (if v_1184 then catch-fail(hash(h_psk_1,m_113)) else caught-fail) in
            {5495}let v_1185: bool = not-caught-fail(h_307) in
            {5496}let x_370: bitstring = (if v_1185 then (l_324,h_307) else caught-fail) in
            {5497}let binder_key_57: bitstring = (if v_1184 then catch-fail((if v_1185 then hmac(h_psk_1,early_secret_86,x_370) else fail-any)) else caught-fail) in
            {5498}let v_1186: bool = not-caught-fail(binder_key_57) in
            {5499}let v_1187: bitstring = catch-fail((if v_1184 then (if v_1186 then (early_secret_86,binder_key_57) else fail-any) else fail-any)) in
            {5500}let v_1188: bool = (not-caught-fail(v_1187) && success?(1-proj-2-tuple(v_1187))) in
            {5501}let kb_57: mac_key = (if v_1188 then 2-proj-2-tuple(v_1187) else caught-fail) in
            {5502}let es_83: bitstring = (if v_1188 then 1-proj-2-tuple(v_1187) else caught-fail) in
            {5503}let binders_15: bitstring = (if v_1188 then catch-fail(hmac(h_psk_1,kb_57,cur_log'_16)) else caught-fail) in
            {5504}let v_1189: bool = not-caught-fail(binders_15) in
            {5505}let v_1190: bitstring = catch-fail((if v_1188 then (if v_1189 then (client_psk_ext(id_57,binders_15),(psk_128,id_57,es_83,is_safe_48)) else fail-any) else fail-any)) in
            {5506}let v_1191: bool = (not-caught-fail(v_1190) && success?(1-proj-2-tuple(v_1190))) in
            {5507}let psk_data_27: bitstring = (if v_1191 then 2-proj-2-tuple(v_1190) else caught-fail) in
            {5508}let psk_ext_60: preSharedKeyExt = (if v_1191 then 1-proj-2-tuple(v_1190) else caught-fail) in
            {5509}let i_offer_12: params = (if v_1191 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_5,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_60) else caught-fail) in
            {5510}let i_client_hello_16: msg = (if v_1191 then CH(i_cr_8,i_offer_12) else caught-fail) in
            {5511}let v_1192: bool = (if v_1191 then catch-fail(@8_use_grease) else caught-fail) in
            {5512}let o_offer_27: params = (if v_1192 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),ech_inner_or_grease_1,empty_extra_ext,psk_ext_60) else caught-fail) in
            {5513}new fake_id_15[]: identityPsk;
            {5514}new fake_binder_15[]: bitstring;
            {5515}let o_psk_ext_15: preSharedKeyExt = (if is-false(v_1192) then (if @8_use_psk then client_psk_ext(fake_id_15,fake_binder_15) else empty_psk_ext) else caught-fail) in
            {5516}let o_ech_ext_ADD_12: echExt = (if is-false(v_1192) then ECHClientHelloOuter(ech_h_13,ech_a_13,config_id_13,enc_6,zero) else caught-fail) in
            {5517}let o_offer_ADD_12: params = (if is-false(v_1192) then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),o_ech_ext_ADD_12,empty_extra_ext,o_psk_ext_15) else caught-fail) in
            {5518}let o_client_hello_ADD_12: msg = (if is-false(v_1192) then CH(o_cr_10,o_offer_ADD_12) else caught-fail) in
            {5519}let n_14: nat = (if is-false(v_1192) then 1 else caught-fail) in
            {5520}let v_1193: hpkeContext = (if is-false(v_1192) then catch-fail(context_2) else caught-fail) in
            {5521}let v_1194: bool = (not-caught-fail(v_1193) && ((S =nf 1-proj-hpke_context(v_1193)) && success?(1-proj-hpke_context(v_1193)))) in
            {5522}let base_nonce_17: bitstring = (if v_1194 then 3-proj-hpke_context(v_1193) else caught-fail) in
            {5523}let key_17: aead_key = (if v_1194 then 2-proj-hpke_context(v_1193) else caught-fail) in
            {5524}let payload_18: bitstring = (if is-false(v_1192) then catch-fail((if v_1194 then aead_enc(ech_a_13,key_17,(base_nonce_17,n_14),o_client_hello_ADD_12,i_client_hello_16) else fail-any)) else caught-fail) in
            {5525}let v_1195: bool = not-caught-fail(payload_18) in
            {5526}let o_ech_ext_15: echExt = (if v_1195 then ECHClientHelloOuter(ech_h_13,ech_a_13,config_id_13,enc_6,payload_18) else caught-fail) in
            {5527}let o_offer_28: params = (if v_1195 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),o_ech_ext_15,empty_extra_ext,o_psk_ext_15) else caught-fail) in
            {5528}let (o_client_hello_5: msg,i_client_hello_17: msg,o_cr_11: bytes32,i_cr_9: bytes32,o_kex_data_8: bitstring,i_kex_data_8: bitstring,o_psk_ext_16: preSharedKeyExt,psk_data_28: bitstring,o_ech_ext_16: echExt) = (if v_1191 then (if undo-catch-fail(v_1192) then (CH(o_cr_10,o_offer_27),CH(o_cr_10,o_offer_27),o_cr_10,o_cr_10,o_kex_data_7,o_kex_data_7,psk_ext_60,psk_data_27,ech_inner_or_grease_1) else (if v_1195 then (CH(o_cr_10,o_offer_28),i_client_hello_16,o_cr_10,i_cr_8,o_kex_data_7,i_kex_data_7,o_psk_ext_15,psk_data_27,o_ech_ext_15) else fail-any)) else fail-any) in
            {5529}out(io, o_client_hello_5);
            {5530}let (psk_129: preSharedKey,id_58: identityPsk,es_84: bitstring,safe_3: bool) = psk_data_28 in
            (
                {5531}if (false && (not(@8_use_grease) && (psk_129 ≠ NoPsk))) then
                {5532}let client_hello_4: bitstring = (zero,i_client_hello_17) in
                {5533}let l_325: label = tls13_client_early_traffic_secret in
                {5534}let h_308: bitstring = catch-fail(hash(@8_backend_h,client_hello_4)) in
                {5535}let v_1196: bool = not-caught-fail(h_308) in
                {5536}let x_371: bitstring = (if v_1196 then (l_325,h_308) else caught-fail) in
                {5537}let atsc0_4: bitstring = catch-fail((if v_1196 then hmac(@8_backend_h,es_84,x_371) else fail-any)) in
                {5538}let v_1197: bool = not-caught-fail(atsc0_4) in
                {5539}let l_326: label = (if v_1197 then tls13_key else caught-fail) in
                {5540}let h_309: bitstring = (if v_1197 then zero else caught-fail) in
                {5541}let x_372: bitstring = (if v_1197 then (l_326,h_309) else caught-fail) in
                {5542}let kc0_4: bitstring = (if v_1197 then catch-fail(hmac(@8_backend_h,atsc0_4,x_372)) else caught-fail) in
                {5543}let v_1198: bool = not-caught-fail(kc0_4) in
                {5544}let l_327: label = (if v_1198 then tls13_early_exporter_master_secret else caught-fail) in
                {5545}let h_310: bitstring = (if v_1198 then catch-fail(hash(@8_backend_h,client_hello_4)) else caught-fail) in
                {5546}let v_1199: bool = not-caught-fail(h_310) in
                {5547}let x_373: bitstring = (if v_1199 then (l_327,h_310) else caught-fail) in
                {5548}let ems0_8: bitstring = (if v_1198 then catch-fail((if v_1199 then hmac(@8_backend_h,es_84,x_373) else fail-any)) else caught-fail) in
                {5549}let v_1200: bool = not-caught-fail(ems0_8) in
                {5550}let (wkc0_4: aead_key,ems0_9: bitstring) = (if v_1197 then (if v_1198 then (if v_1200 then (kc0_4,ems0_8) else fail-any) else fail-any) else fail-any) in
                {5551}!
                {5552}in(io, (i_4: nat,ad_4: bitstring));
                {5553}if is_nat(i_4) then
                {5554}new msg_ed_3[]: bitstring;
                {5555}let enc_ed_3: bitstring = aead_enc(@8_backend_a,wkc0_4,i_4,ad_4,msg_ed_3) in
                {5556}new st_13: stamp;
                {5557}event ClientSequenceClient0RTTDataWriteKey(id_client_5,st_13,i_4);
                {5558}event ClientSends0(id_client_5,i_cr_9,psk_129,i_4,ad_4,msg_ed_3);
                {5559}out(io, enc_ed_3)
            ) | (
                {5560}in(io, server_hello_4: msg);
                {5561}let SH(B32(sr24_5: bytes24,sr8_16: bytes8),mode_30: params) = server_hello_4 in
                (
                    {5562}if (false && (B32(sr24_5,sr8_16) = B32(HRR24,HRR8))) then
                    (
                        {5563}if (send_kex_1 ≠ true) then
                        {5564}let nego(=TLS13,h_alg_18: hash_alg,a_alg_16: aead_alg,hrr_kex_ext(g_33: group),=empty_sni_ext,ech_ext_15: echExt,=empty_extra_ext,=empty_psk_ext) = mode_30 in
                        {5565}let v_1201: bool = (ech_ext_15 = empty_ech_ext) in
                        {5566}let hrr_mode_8: params = (if not(v_1201) then nego(TLS13,@8_backend_h,@8_backend_a,hrr_kex_ext(@8_backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) else caught-fail) in
                        {5567}let hrr_4: msg = (if not(v_1201) then SH(B32(HRR24,HRR8),hrr_mode_8) else caught-fail) in
                        {5568}let cur_log_23: bitstring = (if not(v_1201) then ((zero,i_client_hello_17),hrr_4) else caught-fail) in
                        {5569}let transcript_hrr_ech_conf_4: bitstring = (if not(v_1201) then catch-fail(hash(@8_backend_h,cur_log_23)) else caught-fail) in
                        {5570}let v_1202: bool = not-caught-fail(transcript_hrr_ech_conf_4) in
                        {5571}let s_128: bitstring = (if v_1202 then zero else caught-fail) in
                        {5572}let k_126: bitstring = (if v_1202 then catch-fail(b32_2_b(get_random(i_client_hello_17))) else caught-fail) in
                        {5573}let v_1203: bool = not-caught-fail(k_126) in
                        {5574}let k_127: bitstring = (if v_1202 then catch-fail((if v_1203 then hmac(@8_backend_h,s_128,k_126) else fail-any)) else caught-fail) in
                        {5575}let v_1204: bool = not-caught-fail(k_127) in
                        {5576}let l_328: label = (if v_1204 then hrr_ech_accept_confirmation else caught-fail) in
                        {5577}let x_374: bitstring = (if v_1204 then (l_328,cur_log_23) else caught-fail) in
                        {5578}let is_ech_accepted_3: bool = (if v_1201 then false else (if (ech_ext_15 = ECHHelloRetryRequest((if v_1202 then crop_into_bytes8((if v_1204 then hmac(@8_backend_h,k_127,x_374) else fail-any)) else fail-any))) then true else false)) in
                        {5579}event ClientEchAcceptance(id_client_5,is_ech_accepted_3);
                        {5580}if is_ech_accepted_3 then
                        (
                            {5581}let cur_log_IN1_HRR_3: bitstring = ((zero,i_client_hello_17),server_hello_4) in
                            {5582}let ech_config(config_id_14: configId,ech_g_14: group,pkR_16: element,o_dom_10: domain,ech_h_14: hash_alg,ech_a_14: aead_alg) = ech_conf_2 in
                            {5583}let send_key_share_9: bool = true in
                            {5584}new s_129[]: seed;
                            {5585}let gx_35: element = dh_pub(@8_backend_g,dh_k(s_129)) in
                            {5586}let v_1205: bitstring = (dh_k(s_129),gx_35) in
                            {5587}let v_1206: bool = success?(1-proj-2-tuple(v_1205)) in
                            {5588}let gx_36: element = (if v_1206 then 2-proj-2-tuple(v_1205) else caught-fail) in
                            {5589}let x_375: bitstring = (if v_1206 then 1-proj-2-tuple(v_1205) else caught-fail) in
                            {5590}let kex_13: kex_alg = (if v_1206 then (if send_key_share_9 then DHE_kex(@8_backend_g,gx_36) else DHE_group(@8_backend_g)) else caught-fail) in
                            {5591}let (i_kex_ext_6: keyShareExt,i_kex_data_9: bitstring) = (if v_1206 then (client_kex_ext(kex_13),(x_375,@8_backend_g)) else fail-any) in
                            {5592}let send_key_share_10: bool = true in
                            {5593}new s_130[]: seed;
                            {5594}let gx_37: element = dh_pub(@8_tls_g,dh_k(s_130)) in
                            {5595}let v_1207: bitstring = (dh_k(s_130),gx_37) in
                            {5596}let v_1208: bool = success?(1-proj-2-tuple(v_1207)) in
                            {5597}let gx_38: element = (if v_1208 then 2-proj-2-tuple(v_1207) else caught-fail) in
                            {5598}let x_376: bitstring = (if v_1208 then 1-proj-2-tuple(v_1207) else caught-fail) in
                            {5599}let kex_14: kex_alg = (if v_1208 then (if send_key_share_10 then DHE_kex(@8_tls_g,gx_38) else DHE_group(@8_tls_g)) else caught-fail) in
                            {5600}let (o_kex_ext_8: keyShareExt,o_kex_data_9: bitstring) = (if v_1208 then (client_kex_ext(kex_14),(x_376,@8_tls_g)) else fail-any) in
                            {5601}new rand24_14[]: bytes24;
                            {5602}new rand8_14[]: bytes8;
                            {5603}let i_cr_10: bytes32 = B32(rand24_14,rand8_14) in
                            {5604}new rand24_15[]: bytes24;
                            {5605}new rand8_15[]: bytes8;
                            {5606}let o_cr_12: bytes32 = B32(rand24_15,rand8_15) in
                            {5607}let ech_ext_16: echExt = ECHClientHelloInner in
                            {5608}if @8_use_psk then
                            (
                                {5609}let (psk_130: preSharedKey,id_59: identityPsk,old_es_8: bitstring,is_safe_49: bool) = psk_data_28 in
                                (
                                    {5610}let offer_17: params = nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_6,SNI(backend_dom_1),ech_ext_16,@8_i_extra_ext,trunc_client_psk_ext(id_59)) in
                                    {5611}let cur_log'_17: bitstring = (cur_log_IN1_HRR_3,CH(i_cr_10,offer_17)) in
                                    {5612}let s_131: bitstring = zero in
                                    {5613}let k_128: bitstring = catch-fail(psk2b(psk_130)) in
                                    {5614}let v_1209: bool = not-caught-fail(k_128) in
                                    {5615}let early_secret_87: bitstring = catch-fail((if v_1209 then hmac(@8_backend_h,s_131,k_128) else fail-any)) in
                                    {5616}let v_1210: bool = not-caught-fail(early_secret_87) in
                                    {5617}let l_329: label = (if v_1210 then tls13_ext_res_binder else caught-fail) in
                                    {5618}let m_114: bitstring = (if v_1210 then zero else caught-fail) in
                                    {5619}let h_311: bitstring = (if v_1210 then catch-fail(hash(@8_backend_h,m_114)) else caught-fail) in
                                    {5620}let v_1211: bool = not-caught-fail(h_311) in
                                    {5621}let x_377: bitstring = (if v_1211 then (l_329,h_311) else caught-fail) in
                                    {5622}let binder_key_58: bitstring = (if v_1210 then catch-fail((if v_1211 then hmac(@8_backend_h,early_secret_87,x_377) else fail-any)) else caught-fail) in
                                    {5623}let v_1212: bool = not-caught-fail(binder_key_58) in
                                    {5624}let v_1213: bitstring = catch-fail((if v_1210 then (if v_1212 then (early_secret_87,binder_key_58) else fail-any) else fail-any)) in
                                    {5625}let v_1214: bool = (not-caught-fail(v_1213) && success?(1-proj-2-tuple(v_1213))) in
                                    {5626}let kb_58: mac_key = (if v_1214 then 2-proj-2-tuple(v_1213) else caught-fail) in
                                    {5627}let es_85: bitstring = (if v_1214 then 1-proj-2-tuple(v_1213) else caught-fail) in
                                    {5628}let binders_16: bitstring = (if v_1214 then catch-fail(hmac(@8_backend_h,kb_58,cur_log'_17)) else caught-fail) in
                                    {5629}let v_1215: bool = not-caught-fail(binders_16) in
                                    {5630}let v_1216: bitstring = catch-fail((if v_1214 then (if v_1215 then (client_psk_ext(id_59,binders_16),(psk_130,id_59,es_85,is_safe_49)) else fail-any) else fail-any)) in
                                    {5631}let v_1217: bool = (not-caught-fail(v_1216) && success?(1-proj-2-tuple(v_1216))) in
                                    {5632}let psk_data_29: bitstring = (if v_1217 then 2-proj-2-tuple(v_1216) else caught-fail) in
                                    {5633}let psk_ext_61: preSharedKeyExt = (if v_1217 then 1-proj-2-tuple(v_1216) else caught-fail) in
                                    {5634}let i_offer_13: params = (if v_1217 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_6,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_61) else caught-fail) in
                                    {5635}let i_client_hello_18: msg = (if v_1217 then CH(i_cr_10,i_offer_13) else caught-fail) in
                                    {5636}new fake_id_16[]: identityPsk;
                                    {5637}new fake_binder_16[]: bitstring;
                                    {5638}let o_psk_ext_17: preSharedKeyExt = (if v_1217 then (if @8_use_psk then client_psk_ext(fake_id_16,fake_binder_16) else empty_psk_ext) else caught-fail) in
                                    {5639}let o_ech_ext_ADD_13: echExt = (if v_1217 then ECHClientHelloOuter(ech_h_14,ech_a_14,config_id_14,zero,zero) else caught-fail) in
                                    {5640}let o_offer_ADD_13: params = (if v_1217 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_8,SNI(o_dom_10),o_ech_ext_ADD_13,empty_extra_ext,o_psk_ext_17) else caught-fail) in
                                    {5641}let o_client_hello_ADD_13: msg = (if v_1217 then CH(o_cr_12,o_offer_ADD_13) else caught-fail) in
                                    {5642}let n_15: nat = (if v_1217 then 2 else caught-fail) in
                                    {5643}let v_1218: hpkeContext = (if v_1217 then catch-fail(context_2) else caught-fail) in
                                    {5644}let v_1219: bool = (not-caught-fail(v_1218) && ((S =nf 1-proj-hpke_context(v_1218)) && success?(1-proj-hpke_context(v_1218)))) in
                                    {5645}let base_nonce_18: bitstring = (if v_1219 then 3-proj-hpke_context(v_1218) else caught-fail) in
                                    {5646}let key_18: aead_key = (if v_1219 then 2-proj-hpke_context(v_1218) else caught-fail) in
                                    {5647}let payload_19: bitstring = (if v_1217 then catch-fail((if v_1219 then aead_enc(ech_a_14,key_18,(base_nonce_18,n_15),o_client_hello_ADD_13,i_client_hello_18) else fail-any)) else caught-fail) in
                                    {5648}let v_1220: bool = not-caught-fail(payload_19) in
                                    {5649}let o_ech_ext_17: echExt = (if v_1220 then ECHClientHelloOuter(ech_h_14,ech_a_14,config_id_14,zero,payload_19) else caught-fail) in
                                    {5650}let o_offer_29: params = (if v_1220 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_8,SNI(o_dom_10),o_ech_ext_17,empty_extra_ext,o_psk_ext_17) else caught-fail) in
                                    {5651}let (o_client_hello'_9: msg,i_client_hello'_10: msg,i_cr'_9: bytes32,i_kex_data'_9: bitstring,psk_data'_24: bitstring) = (if v_1217 then (if v_1220 then (CH(o_cr_12,o_offer_29),i_client_hello_18,i_cr_10,i_kex_data_9,psk_data_29) else fail-any) else fail-any) in
                                    {5652}out(io, o_client_hello'_9);
                                    {5653}in(io, server_hello'_21: msg);
                                    {5654}let SH(B32(sr24'_9: bytes24,sr8'_9: bytes8),params'_9: params) = server_hello'_21 in
                                    {5655}let cur_log_IN1_HRR_IN2_9: bitstring = (cur_log_IN1_HRR_3,i_client_hello'_10) in
                                    {5656}let sh_modified_13: msg = SH(B32(sr24'_9,zero8),params'_9) in
                                    {5657}let cur_log_sh_13: bitstring = (cur_log_IN1_HRR_IN2_9,sh_modified_13) in
                                    {5658}let transcript_ech_conf_13: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_13)) in
                                    {5659}let v_1221: bool = not-caught-fail(transcript_ech_conf_13) in
                                    {5660}let s_132: bitstring = (if v_1221 then zero else caught-fail) in
                                    {5661}let k_129: bitstring = (if v_1221 then catch-fail(b32_2_b(get_random(i_client_hello'_10))) else caught-fail) in
                                    {5662}let v_1222: bool = not-caught-fail(k_129) in
                                    {5663}let k_130: bitstring = (if v_1221 then catch-fail((if v_1222 then hmac(@8_backend_h,s_132,k_129) else fail-any)) else caught-fail) in
                                    {5664}let v_1223: bool = not-caught-fail(k_130) in
                                    {5665}let l_330: label = (if v_1223 then ech_accept_confirmation else caught-fail) in
                                    {5666}let x_378: bitstring = (if v_1223 then (l_330,cur_log_sh_13) else caught-fail) in
                                    {5667}let sr8_17: bytes8 = (if v_1221 then catch-fail(crop_into_bytes8((if v_1223 then hmac(@8_backend_h,k_130,x_378) else fail-any))) else caught-fail) in
                                    {5668}let v_1224: bool = not-caught-fail(sr8_17) in
                                    {5669}if (B32(sr24'_9,sr8'_9) = (if v_1221 then (if v_1224 then B32(sr24'_9,sr8_17) else fail-any) else fail-any)) then
                                    {5670}let (x_379: bitstring,g_34: group) = i_kex_data'_9 in
                                    {5671}let (psk_offer_27: preSharedKey,id_offer_27: identityPsk,es_offer_27: bitstring,is_safe_offer_27: bool) = psk_data'_24 in
                                    {5672}event Client_PSKOffer(id_client_5,psk_offer_27,id_offer_27,is_safe_offer_27);
                                    {5673}event Client_Rand_client(id_client_5,i_cr'_9);
                                    {5674}event Client_DH_client(id_client_5,dh_pub(g_34,x_379));
                                    {5675}event Client_server_domain(id_client_5,backend_dom_1);
                                    {5676}let SH(sr_35: bytes32,mode_31: params) = server_hello'_21 in
                                    {5677}event Client_Rand_server(id_client_5,sr_35);
                                    {5678}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_34,gy_28: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_62: preSharedKeyExt) = mode_31 in
                                    (
                                        {5679}let cur_log2_58: bitstring = (cur_log_IN1_HRR_IN2_9,server_hello'_21) in
                                        {5680}event Client_DH_server(id_client_5,gy_28);
                                        {5681}let v_1225: bool = (psk_ext_62 = empty_psk_ext) in
                                        {5682}let psk_131: preSharedKey = (if v_1225 then NoPsk else caught-fail) in
                                        {5683}let s_133: bitstring = (if v_1225 then zero else caught-fail) in
                                        {5684}let k_131: bitstring = (if v_1225 then catch-fail(psk2b(psk_131)) else caught-fail) in
                                        {5685}let v_1226: bool = not-caught-fail(k_131) in
                                        {5686}let early_secret_88: bitstring = (if v_1225 then catch-fail((if v_1226 then hmac(@8_backend_h,s_133,k_131) else fail-any)) else caught-fail) in
                                        {5687}let v_1227: bool = not-caught-fail(early_secret_88) in
                                        {5688}let l_331: label = (if v_1227 then tls13_ext_res_binder else caught-fail) in
                                        {5689}let m_115: bitstring = (if v_1227 then zero else caught-fail) in
                                        {5690}let h_312: bitstring = (if v_1227 then catch-fail(hash(@8_backend_h,m_115)) else caught-fail) in
                                        {5691}let v_1228: bool = not-caught-fail(h_312) in
                                        {5692}let x_380: bitstring = (if v_1228 then (l_331,h_312) else caught-fail) in
                                        {5693}let binder_key_59: bitstring = (if v_1227 then catch-fail((if v_1228 then hmac(@8_backend_h,early_secret_88,x_380) else fail-any)) else caught-fail) in
                                        {5694}let v_1229: bool = not-caught-fail(binder_key_59) in
                                        {5695}let v_1230: bitstring = (if v_1225 then catch-fail((if v_1227 then (if v_1229 then (early_secret_88,binder_key_59) else fail-any) else fail-any)) else caught-fail) in
                                        {5696}let v_1231: bool = (not-caught-fail(v_1230) && success?(1-proj-2-tuple(v_1230))) in
                                        {5697}let kb_59: mac_key = (if v_1231 then 2-proj-2-tuple(v_1230) else caught-fail) in
                                        {5698}let es_86: bitstring = (if v_1231 then 1-proj-2-tuple(v_1230) else caught-fail) in
                                        {5699}let v_1232: bitstring = (if not(v_1225) then catch-fail(psk_data'_24) else caught-fail) in
                                        {5700}let v_1233: bool = (not-caught-fail(v_1232) && success?(1-proj-4-tuple(v_1232))) in
                                        {5701}let is_safe_50: bool = (if v_1233 then 4-proj-4-tuple(v_1232) else caught-fail) in
                                        {5702}let es_87: bitstring = (if v_1233 then 3-proj-4-tuple(v_1232) else caught-fail) in
                                        {5703}let id_60: identityPsk = (if v_1233 then 2-proj-4-tuple(v_1232) else caught-fail) in
                                        {5704}let psk_132: preSharedKey = (if v_1233 then 1-proj-4-tuple(v_1232) else caught-fail) in
                                        {5705}let (psk_133: preSharedKey,early_secret_89: bitstring,valid_27: bool,safe_psk_30: bool) = (if v_1225 then (if v_1231 then (NoPsk,es_86,true,false) else fail-any) else (if v_1233 then (psk_132,es_87,((psk_132 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_62)),is_safe_50) else fail-any)) in
                                        {5706}event Client_PSKChoosen(id_client_5,psk_133,safe_psk_30);
                                        {5707}if valid_27 then
                                        (
                                            {5708}let gxy_56: element = catch-fail(dh_decap_fun(g_34,gy_28,x_379)) in
                                            {5709}let v_1234: bool = not-caught-fail(gxy_56) in
                                            {5710}new s_134[]: seed;
                                            {5711}let gxy_57: element = (if v_1234 then gxy_56 else dh_f(s_134)) in
                                            {5712}event Client_DH_gxy(id_client_5,gxy_57);
                                            {5713}let l_332: label = tls13_derived in
                                            {5714}let m_116: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {5715}let v_1235: bool = not-caught-fail(m_116) in
                                            {5716}let h_313: bitstring = (if v_1235 then catch-fail(hash(@8_backend_h,m_116)) else caught-fail) in
                                            {5717}let v_1236: bool = not-caught-fail(h_313) in
                                            {5718}let x_381: bitstring = (if v_1236 then (l_332,h_313) else caught-fail) in
                                            {5719}let extra_59: bitstring = catch-fail((if v_1235 then (if v_1236 then hmac(@8_backend_h,early_secret_89,x_381) else fail-any) else fail-any)) in
                                            {5720}let v_1237: bool = not-caught-fail(extra_59) in
                                            {5721}let handshake_secret_28: bitstring = (if v_1237 then hmac(@8_backend_h,extra_59,gxy_57) else fail-any) in
                                            {5722}let l_333: label = tls13_derived in
                                            {5723}let m_117: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {5724}let v_1238: bool = not-caught-fail(m_117) in
                                            {5725}let h_314: bitstring = (if v_1238 then catch-fail(hash(@8_backend_h,m_117)) else caught-fail) in
                                            {5726}let v_1239: bool = not-caught-fail(h_314) in
                                            {5727}let x_382: bitstring = (if v_1239 then (l_333,h_314) else caught-fail) in
                                            {5728}let extra_60: bitstring = catch-fail((if v_1238 then (if v_1239 then hmac(@8_backend_h,handshake_secret_28,x_382) else fail-any) else fail-any)) in
                                            {5729}let v_1240: bool = not-caught-fail(extra_60) in
                                            {5730}let k_132: bitstring = (if v_1240 then zero else caught-fail) in
                                            {5731}let master_secret_63: bitstring = (if v_1240 then catch-fail(hmac(@8_backend_h,handshake_secret_28,k_132)) else caught-fail) in
                                            {5732}let v_1241: bool = not-caught-fail(master_secret_63) in
                                            {5733}let l_334: label = (if v_1241 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {5734}let h_315: bitstring = (if v_1241 then catch-fail(hash(@8_backend_h,cur_log2_58)) else caught-fail) in
                                            {5735}let v_1242: bool = not-caught-fail(h_315) in
                                            {5736}let x_383: bitstring = (if v_1242 then (l_334,h_315) else caught-fail) in
                                            {5737}let client_hts_28: bitstring = (if v_1241 then catch-fail((if v_1242 then hmac(@8_backend_h,handshake_secret_28,x_383) else fail-any)) else caught-fail) in
                                            {5738}let v_1243: bool = not-caught-fail(client_hts_28) in
                                            {5739}let l_335: label = (if v_1243 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {5740}let h_316: bitstring = (if v_1243 then catch-fail(hash(@8_backend_h,cur_log2_58)) else caught-fail) in
                                            {5741}let v_1244: bool = not-caught-fail(h_316) in
                                            {5742}let x_384: bitstring = (if v_1244 then (l_335,h_316) else caught-fail) in
                                            {5743}let server_hts_28: bitstring = (if v_1243 then catch-fail((if v_1244 then hmac(@8_backend_h,handshake_secret_28,x_384) else fail-any)) else caught-fail) in
                                            {5744}let v_1245: bool = not-caught-fail(server_hts_28) in
                                            {5745}let l_336: label = (if v_1245 then tls13_key else caught-fail) in
                                            {5746}let h_317: bitstring = (if v_1245 then zero else caught-fail) in
                                            {5747}let x_385: bitstring = (if v_1245 then (l_336,h_317) else caught-fail) in
                                            {5748}let client_wkh_28: bitstring = (if v_1245 then catch-fail(hmac(@8_backend_h,client_hts_28,x_385)) else caught-fail) in
                                            {5749}let v_1246: bool = not-caught-fail(client_wkh_28) in
                                            {5750}let l_337: label = (if v_1246 then tls13_key else caught-fail) in
                                            {5751}let h_318: bitstring = (if v_1246 then zero else caught-fail) in
                                            {5752}let x_386: bitstring = (if v_1246 then (l_337,h_318) else caught-fail) in
                                            {5753}let server_wkh_28: bitstring = (if v_1246 then catch-fail(hmac(@8_backend_h,server_hts_28,x_386)) else caught-fail) in
                                            {5754}let v_1247: bool = not-caught-fail(server_wkh_28) in
                                            {5755}let l_338: label = (if v_1247 then tls13_finished else caught-fail) in
                                            {5756}let h_319: bitstring = (if v_1247 then zero else caught-fail) in
                                            {5757}let x_387: bitstring = (if v_1247 then (l_338,h_319) else caught-fail) in
                                            {5758}let client_fk_28: bitstring = (if v_1247 then catch-fail(hmac(@8_backend_h,client_hts_28,x_387)) else caught-fail) in
                                            {5759}let v_1248: bool = not-caught-fail(client_fk_28) in
                                            {5760}let l_339: label = (if v_1248 then tls13_finished else caught-fail) in
                                            {5761}let h_320: bitstring = (if v_1248 then zero else caught-fail) in
                                            {5762}let x_388: bitstring = (if v_1248 then (l_339,h_320) else caught-fail) in
                                            {5763}let server_fk_28: bitstring = (if v_1248 then catch-fail(hmac(@8_backend_h,server_hts_28,x_388)) else caught-fail) in
                                            {5764}let v_1249: bool = not-caught-fail(server_fk_28) in
                                            {5765}let (master_secret_64: bitstring,chk_35: aead_key,shk_34: aead_key,cfin_35: mac_key,sfin_34: mac_key) = (if v_1240 then (if v_1241 then (if v_1243 then (if v_1245 then (if v_1246 then (if v_1247 then (if v_1248 then (if v_1249 then (master_secret_63,client_wkh_28,server_wkh_28,client_fk_28,server_fk_28) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {5766}event Client_chk(id_client_5,chk_35);
                                            {5767}event Client_shk(id_client_5,shk_34);
                                            {5768}event Client_cfin(id_client_5,cfin_35);
                                            {5769}event Client_sfin(id_client_5,sfin_34);
                                            {5770}in(io, enc_ee_msg_27: bitstring);
                                            {5771}let ee_msg_32: msg = aead_dec(@8_backend_a,shk_34,0,zero,enc_ee_msg_27) in
                                            {5772}let EE(ech_ee_27: echExt,extra_ee_27: extraExt) = ee_msg_32 in
                                            {5773}let cur_log2_59: bitstring = (cur_log2_58,ee_msg_32) in
                                            {5774}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_9,sr_35,@8_backend_h,@8_backend_a,c_dom_6,backend_dom_1,psk_133,safe_psk_30,@8_comp_psk,master_secret_64,chk_35,0,shk_34,1,cfin_35,sfin_34,cur_log2_59)))
                                        )
                                        else
                                            {5775}out(io, illegal_parameter)
                                    )
                                    else
                                        {5776}out(io, illegal_parameter)
                                )
                                else
                                    {5953}get pre_shared_keys(c_dom'_9: domain,=backend_dom_1,=@8_backend_h,id_61: identityPsk,psk_134: preSharedKey,idP_11: idProc,is_safe_51: bool) in
                                    {5777}event Selected_one_time_used_psk(id_client_5,psk_134,is_safe_51);
                                    {5778}event Selected_psk(c_dom_6,c_dom'_9,idP_11,is_safe_51);
                                    {5779}event Selected_psk_no_missmatch(id_client_5,backend_dom_1,@8_backend_h,psk_134,id_61);
                                    {5780}event Selected_psk_with_ID(c_dom_6,c_dom'_9,id_61,idP_11,is_safe_51);
                                    {5781}let v_1250: bitstring = (id_61,psk_134,is_safe_51) in
                                    {5782}let v_1251: bool = success?(1-proj-3-tuple(v_1250)) in
                                    {5783}let is_safe_52: bool = (if v_1251 then 3-proj-3-tuple(v_1250) else caught-fail) in
                                    {5784}let psk_135: preSharedKey = (if v_1251 then 2-proj-3-tuple(v_1250) else caught-fail) in
                                    {5785}let id_62: identityPsk = (if v_1251 then 1-proj-3-tuple(v_1250) else caught-fail) in
                                    {5786}let offer_18: params = (if v_1251 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_6,SNI(backend_dom_1),ech_ext_16,@8_i_extra_ext,trunc_client_psk_ext(id_62)) else caught-fail) in
                                    {5787}let cur_log'_18: bitstring = (if v_1251 then (cur_log_IN1_HRR_3,CH(i_cr_10,offer_18)) else caught-fail) in
                                    {5788}let s_135: bitstring = (if v_1251 then zero else caught-fail) in
                                    {5789}let k_133: bitstring = (if v_1251 then catch-fail(psk2b(psk_135)) else caught-fail) in
                                    {5790}let v_1252: bool = not-caught-fail(k_133) in
                                    {5791}let early_secret_90: bitstring = (if v_1251 then catch-fail((if v_1252 then hmac(@8_backend_h,s_135,k_133) else fail-any)) else caught-fail) in
                                    {5792}let v_1253: bool = not-caught-fail(early_secret_90) in
                                    {5793}let l_340: label = (if v_1253 then tls13_ext_res_binder else caught-fail) in
                                    {5794}let m_118: bitstring = (if v_1253 then zero else caught-fail) in
                                    {5795}let h_321: bitstring = (if v_1253 then catch-fail(hash(@8_backend_h,m_118)) else caught-fail) in
                                    {5796}let v_1254: bool = not-caught-fail(h_321) in
                                    {5797}let x_389: bitstring = (if v_1254 then (l_340,h_321) else caught-fail) in
                                    {5798}let binder_key_60: bitstring = (if v_1253 then catch-fail((if v_1254 then hmac(@8_backend_h,early_secret_90,x_389) else fail-any)) else caught-fail) in
                                    {5799}let v_1255: bool = not-caught-fail(binder_key_60) in
                                    {5800}let v_1256: bitstring = (if v_1251 then catch-fail((if v_1253 then (if v_1255 then (early_secret_90,binder_key_60) else fail-any) else fail-any)) else caught-fail) in
                                    {5801}let v_1257: bool = (not-caught-fail(v_1256) && success?(1-proj-2-tuple(v_1256))) in
                                    {5802}let kb_60: mac_key = (if v_1257 then 2-proj-2-tuple(v_1256) else caught-fail) in
                                    {5803}let es_88: bitstring = (if v_1257 then 1-proj-2-tuple(v_1256) else caught-fail) in
                                    {5804}let binders_17: bitstring = (if v_1257 then catch-fail(hmac(@8_backend_h,kb_60,cur_log'_18)) else caught-fail) in
                                    {5805}let v_1258: bool = not-caught-fail(binders_17) in
                                    {5806}let v_1259: bitstring = catch-fail((if v_1251 then (if v_1257 then (if v_1258 then (client_psk_ext(id_62,binders_17),(psk_135,id_62,es_88,is_safe_52)) else fail-any) else fail-any) else fail-any)) in
                                    {5807}let v_1260: bool = (not-caught-fail(v_1259) && success?(1-proj-2-tuple(v_1259))) in
                                    {5808}let psk_data_30: bitstring = (if v_1260 then 2-proj-2-tuple(v_1259) else caught-fail) in
                                    {5809}let psk_ext_63: preSharedKeyExt = (if v_1260 then 1-proj-2-tuple(v_1259) else caught-fail) in
                                    {5810}let i_offer_14: params = (if v_1260 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_6,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_63) else caught-fail) in
                                    {5811}let i_client_hello_19: msg = (if v_1260 then CH(i_cr_10,i_offer_14) else caught-fail) in
                                    {5812}new fake_id_17[]: identityPsk;
                                    {5813}new fake_binder_17[]: bitstring;
                                    {5814}let o_psk_ext_18: preSharedKeyExt = (if v_1260 then (if @8_use_psk then client_psk_ext(fake_id_17,fake_binder_17) else empty_psk_ext) else caught-fail) in
                                    {5815}let o_ech_ext_ADD_14: echExt = (if v_1260 then ECHClientHelloOuter(ech_h_14,ech_a_14,config_id_14,zero,zero) else caught-fail) in
                                    {5816}let o_offer_ADD_14: params = (if v_1260 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_8,SNI(o_dom_10),o_ech_ext_ADD_14,empty_extra_ext,o_psk_ext_18) else caught-fail) in
                                    {5817}let o_client_hello_ADD_14: msg = (if v_1260 then CH(o_cr_12,o_offer_ADD_14) else caught-fail) in
                                    {5818}let n_16: nat = (if v_1260 then 2 else caught-fail) in
                                    {5819}let v_1261: hpkeContext = (if v_1260 then catch-fail(context_2) else caught-fail) in
                                    {5820}let v_1262: bool = (not-caught-fail(v_1261) && ((S =nf 1-proj-hpke_context(v_1261)) && success?(1-proj-hpke_context(v_1261)))) in
                                    {5821}let base_nonce_19: bitstring = (if v_1262 then 3-proj-hpke_context(v_1261) else caught-fail) in
                                    {5822}let key_19: aead_key = (if v_1262 then 2-proj-hpke_context(v_1261) else caught-fail) in
                                    {5823}let payload_20: bitstring = (if v_1260 then catch-fail((if v_1262 then aead_enc(ech_a_14,key_19,(base_nonce_19,n_16),o_client_hello_ADD_14,i_client_hello_19) else fail-any)) else caught-fail) in
                                    {5824}let v_1263: bool = not-caught-fail(payload_20) in
                                    {5825}let o_ech_ext_18: echExt = (if v_1263 then ECHClientHelloOuter(ech_h_14,ech_a_14,config_id_14,zero,payload_20) else caught-fail) in
                                    {5826}let o_offer_30: params = (if v_1263 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_8,SNI(o_dom_10),o_ech_ext_18,empty_extra_ext,o_psk_ext_18) else caught-fail) in
                                    {5827}let (o_client_hello'_10: msg,i_client_hello'_11: msg,i_cr'_10: bytes32,i_kex_data'_10: bitstring,psk_data'_25: bitstring) = (if v_1260 then (if v_1263 then (CH(o_cr_12,o_offer_30),i_client_hello_19,i_cr_10,i_kex_data_9,psk_data_30) else fail-any) else fail-any) in
                                    {5828}out(io, o_client_hello'_10);
                                    {5829}in(io, server_hello'_22: msg);
                                    {5830}let SH(B32(sr24'_10: bytes24,sr8'_10: bytes8),params'_10: params) = server_hello'_22 in
                                    {5831}let cur_log_IN1_HRR_IN2_10: bitstring = (cur_log_IN1_HRR_3,i_client_hello'_11) in
                                    {5832}let sh_modified_14: msg = SH(B32(sr24'_10,zero8),params'_10) in
                                    {5833}let cur_log_sh_14: bitstring = (cur_log_IN1_HRR_IN2_10,sh_modified_14) in
                                    {5834}let transcript_ech_conf_14: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_14)) in
                                    {5835}let v_1264: bool = not-caught-fail(transcript_ech_conf_14) in
                                    {5836}let s_136: bitstring = (if v_1264 then zero else caught-fail) in
                                    {5837}let k_134: bitstring = (if v_1264 then catch-fail(b32_2_b(get_random(i_client_hello'_11))) else caught-fail) in
                                    {5838}let v_1265: bool = not-caught-fail(k_134) in
                                    {5839}let k_135: bitstring = (if v_1264 then catch-fail((if v_1265 then hmac(@8_backend_h,s_136,k_134) else fail-any)) else caught-fail) in
                                    {5840}let v_1266: bool = not-caught-fail(k_135) in
                                    {5841}let l_341: label = (if v_1266 then ech_accept_confirmation else caught-fail) in
                                    {5842}let x_390: bitstring = (if v_1266 then (l_341,cur_log_sh_14) else caught-fail) in
                                    {5843}let sr8_18: bytes8 = (if v_1264 then catch-fail(crop_into_bytes8((if v_1266 then hmac(@8_backend_h,k_135,x_390) else fail-any))) else caught-fail) in
                                    {5844}let v_1267: bool = not-caught-fail(sr8_18) in
                                    {5845}if (B32(sr24'_10,sr8'_10) = (if v_1264 then (if v_1267 then B32(sr24'_10,sr8_18) else fail-any) else fail-any)) then
                                    {5846}let (x_391: bitstring,g_35: group) = i_kex_data'_10 in
                                    {5847}let (psk_offer_28: preSharedKey,id_offer_28: identityPsk,es_offer_28: bitstring,is_safe_offer_28: bool) = psk_data'_25 in
                                    {5848}event Client_PSKOffer(id_client_5,psk_offer_28,id_offer_28,is_safe_offer_28);
                                    {5849}event Client_Rand_client(id_client_5,i_cr'_10);
                                    {5850}event Client_DH_client(id_client_5,dh_pub(g_35,x_391));
                                    {5851}event Client_server_domain(id_client_5,backend_dom_1);
                                    {5852}let SH(sr_36: bytes32,mode_32: params) = server_hello'_22 in
                                    {5853}event Client_Rand_server(id_client_5,sr_36);
                                    {5854}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_35,gy_29: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_64: preSharedKeyExt) = mode_32 in
                                    (
                                        {5855}let cur_log2_60: bitstring = (cur_log_IN1_HRR_IN2_10,server_hello'_22) in
                                        {5856}event Client_DH_server(id_client_5,gy_29);
                                        {5857}let v_1268: bool = (psk_ext_64 = empty_psk_ext) in
                                        {5858}let psk_136: preSharedKey = (if v_1268 then NoPsk else caught-fail) in
                                        {5859}let s_137: bitstring = (if v_1268 then zero else caught-fail) in
                                        {5860}let k_136: bitstring = (if v_1268 then catch-fail(psk2b(psk_136)) else caught-fail) in
                                        {5861}let v_1269: bool = not-caught-fail(k_136) in
                                        {5862}let early_secret_91: bitstring = (if v_1268 then catch-fail((if v_1269 then hmac(@8_backend_h,s_137,k_136) else fail-any)) else caught-fail) in
                                        {5863}let v_1270: bool = not-caught-fail(early_secret_91) in
                                        {5864}let l_342: label = (if v_1270 then tls13_ext_res_binder else caught-fail) in
                                        {5865}let m_119: bitstring = (if v_1270 then zero else caught-fail) in
                                        {5866}let h_322: bitstring = (if v_1270 then catch-fail(hash(@8_backend_h,m_119)) else caught-fail) in
                                        {5867}let v_1271: bool = not-caught-fail(h_322) in
                                        {5868}let x_392: bitstring = (if v_1271 then (l_342,h_322) else caught-fail) in
                                        {5869}let binder_key_61: bitstring = (if v_1270 then catch-fail((if v_1271 then hmac(@8_backend_h,early_secret_91,x_392) else fail-any)) else caught-fail) in
                                        {5870}let v_1272: bool = not-caught-fail(binder_key_61) in
                                        {5871}let v_1273: bitstring = (if v_1268 then catch-fail((if v_1270 then (if v_1272 then (early_secret_91,binder_key_61) else fail-any) else fail-any)) else caught-fail) in
                                        {5872}let v_1274: bool = (not-caught-fail(v_1273) && success?(1-proj-2-tuple(v_1273))) in
                                        {5873}let kb_61: mac_key = (if v_1274 then 2-proj-2-tuple(v_1273) else caught-fail) in
                                        {5874}let es_89: bitstring = (if v_1274 then 1-proj-2-tuple(v_1273) else caught-fail) in
                                        {5875}let v_1275: bitstring = (if not(v_1268) then catch-fail(psk_data'_25) else caught-fail) in
                                        {5876}let v_1276: bool = (not-caught-fail(v_1275) && success?(1-proj-4-tuple(v_1275))) in
                                        {5877}let is_safe_53: bool = (if v_1276 then 4-proj-4-tuple(v_1275) else caught-fail) in
                                        {5878}let es_90: bitstring = (if v_1276 then 3-proj-4-tuple(v_1275) else caught-fail) in
                                        {5879}let id_63: identityPsk = (if v_1276 then 2-proj-4-tuple(v_1275) else caught-fail) in
                                        {5880}let psk_137: preSharedKey = (if v_1276 then 1-proj-4-tuple(v_1275) else caught-fail) in
                                        {5881}let (psk_138: preSharedKey,early_secret_92: bitstring,valid_28: bool,safe_psk_31: bool) = (if v_1268 then (if v_1274 then (NoPsk,es_89,true,false) else fail-any) else (if v_1276 then (psk_137,es_90,((psk_137 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_64)),is_safe_53) else fail-any)) in
                                        {5882}event Client_PSKChoosen(id_client_5,psk_138,safe_psk_31);
                                        {5883}if valid_28 then
                                        (
                                            {5884}let gxy_58: element = catch-fail(dh_decap_fun(g_35,gy_29,x_391)) in
                                            {5885}let v_1277: bool = not-caught-fail(gxy_58) in
                                            {5886}new s_138[]: seed;
                                            {5887}let gxy_59: element = (if v_1277 then gxy_58 else dh_f(s_138)) in
                                            {5888}event Client_DH_gxy(id_client_5,gxy_59);
                                            {5889}let l_343: label = tls13_derived in
                                            {5890}let m_120: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {5891}let v_1278: bool = not-caught-fail(m_120) in
                                            {5892}let h_323: bitstring = (if v_1278 then catch-fail(hash(@8_backend_h,m_120)) else caught-fail) in
                                            {5893}let v_1279: bool = not-caught-fail(h_323) in
                                            {5894}let x_393: bitstring = (if v_1279 then (l_343,h_323) else caught-fail) in
                                            {5895}let extra_61: bitstring = catch-fail((if v_1278 then (if v_1279 then hmac(@8_backend_h,early_secret_92,x_393) else fail-any) else fail-any)) in
                                            {5896}let v_1280: bool = not-caught-fail(extra_61) in
                                            {5897}let handshake_secret_29: bitstring = (if v_1280 then hmac(@8_backend_h,extra_61,gxy_59) else fail-any) in
                                            {5898}let l_344: label = tls13_derived in
                                            {5899}let m_121: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {5900}let v_1281: bool = not-caught-fail(m_121) in
                                            {5901}let h_324: bitstring = (if v_1281 then catch-fail(hash(@8_backend_h,m_121)) else caught-fail) in
                                            {5902}let v_1282: bool = not-caught-fail(h_324) in
                                            {5903}let x_394: bitstring = (if v_1282 then (l_344,h_324) else caught-fail) in
                                            {5904}let extra_62: bitstring = catch-fail((if v_1281 then (if v_1282 then hmac(@8_backend_h,handshake_secret_29,x_394) else fail-any) else fail-any)) in
                                            {5905}let v_1283: bool = not-caught-fail(extra_62) in
                                            {5906}let k_137: bitstring = (if v_1283 then zero else caught-fail) in
                                            {5907}let master_secret_65: bitstring = (if v_1283 then catch-fail(hmac(@8_backend_h,handshake_secret_29,k_137)) else caught-fail) in
                                            {5908}let v_1284: bool = not-caught-fail(master_secret_65) in
                                            {5909}let l_345: label = (if v_1284 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {5910}let h_325: bitstring = (if v_1284 then catch-fail(hash(@8_backend_h,cur_log2_60)) else caught-fail) in
                                            {5911}let v_1285: bool = not-caught-fail(h_325) in
                                            {5912}let x_395: bitstring = (if v_1285 then (l_345,h_325) else caught-fail) in
                                            {5913}let client_hts_29: bitstring = (if v_1284 then catch-fail((if v_1285 then hmac(@8_backend_h,handshake_secret_29,x_395) else fail-any)) else caught-fail) in
                                            {5914}let v_1286: bool = not-caught-fail(client_hts_29) in
                                            {5915}let l_346: label = (if v_1286 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {5916}let h_326: bitstring = (if v_1286 then catch-fail(hash(@8_backend_h,cur_log2_60)) else caught-fail) in
                                            {5917}let v_1287: bool = not-caught-fail(h_326) in
                                            {5918}let x_396: bitstring = (if v_1287 then (l_346,h_326) else caught-fail) in
                                            {5919}let server_hts_29: bitstring = (if v_1286 then catch-fail((if v_1287 then hmac(@8_backend_h,handshake_secret_29,x_396) else fail-any)) else caught-fail) in
                                            {5920}let v_1288: bool = not-caught-fail(server_hts_29) in
                                            {5921}let l_347: label = (if v_1288 then tls13_key else caught-fail) in
                                            {5922}let h_327: bitstring = (if v_1288 then zero else caught-fail) in
                                            {5923}let x_397: bitstring = (if v_1288 then (l_347,h_327) else caught-fail) in
                                            {5924}let client_wkh_29: bitstring = (if v_1288 then catch-fail(hmac(@8_backend_h,client_hts_29,x_397)) else caught-fail) in
                                            {5925}let v_1289: bool = not-caught-fail(client_wkh_29) in
                                            {5926}let l_348: label = (if v_1289 then tls13_key else caught-fail) in
                                            {5927}let h_328: bitstring = (if v_1289 then zero else caught-fail) in
                                            {5928}let x_398: bitstring = (if v_1289 then (l_348,h_328) else caught-fail) in
                                            {5929}let server_wkh_29: bitstring = (if v_1289 then catch-fail(hmac(@8_backend_h,server_hts_29,x_398)) else caught-fail) in
                                            {5930}let v_1290: bool = not-caught-fail(server_wkh_29) in
                                            {5931}let l_349: label = (if v_1290 then tls13_finished else caught-fail) in
                                            {5932}let h_329: bitstring = (if v_1290 then zero else caught-fail) in
                                            {5933}let x_399: bitstring = (if v_1290 then (l_349,h_329) else caught-fail) in
                                            {5934}let client_fk_29: bitstring = (if v_1290 then catch-fail(hmac(@8_backend_h,client_hts_29,x_399)) else caught-fail) in
                                            {5935}let v_1291: bool = not-caught-fail(client_fk_29) in
                                            {5936}let l_350: label = (if v_1291 then tls13_finished else caught-fail) in
                                            {5937}let h_330: bitstring = (if v_1291 then zero else caught-fail) in
                                            {5938}let x_400: bitstring = (if v_1291 then (l_350,h_330) else caught-fail) in
                                            {5939}let server_fk_29: bitstring = (if v_1291 then catch-fail(hmac(@8_backend_h,server_hts_29,x_400)) else caught-fail) in
                                            {5940}let v_1292: bool = not-caught-fail(server_fk_29) in
                                            {5941}let (master_secret_66: bitstring,chk_36: aead_key,shk_35: aead_key,cfin_36: mac_key,sfin_35: mac_key) = (if v_1283 then (if v_1284 then (if v_1286 then (if v_1288 then (if v_1289 then (if v_1290 then (if v_1291 then (if v_1292 then (master_secret_65,client_wkh_29,server_wkh_29,client_fk_29,server_fk_29) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {5942}event Client_chk(id_client_5,chk_36);
                                            {5943}event Client_shk(id_client_5,shk_35);
                                            {5944}event Client_cfin(id_client_5,cfin_36);
                                            {5945}event Client_sfin(id_client_5,sfin_35);
                                            {5946}in(io, enc_ee_msg_28: bitstring);
                                            {5947}let ee_msg_33: msg = aead_dec(@8_backend_a,shk_35,0,zero,enc_ee_msg_28) in
                                            {5948}let EE(ech_ee_28: echExt,extra_ee_28: extraExt) = ee_msg_33 in
                                            {5949}let cur_log2_61: bitstring = (cur_log2_60,ee_msg_33) in
                                            {5950}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_10,sr_36,@8_backend_h,@8_backend_a,c_dom_6,backend_dom_1,psk_138,safe_psk_31,@8_comp_psk,master_secret_66,chk_36,0,shk_35,1,cfin_36,sfin_35,cur_log2_61)))
                                        )
                                        else
                                            {5951}out(io, illegal_parameter)
                                    )
                                    else
                                        {5952}out(io, illegal_parameter)
                            )
                            else
                                {5954}let psk_139: preSharedKey = NoPsk in
                                {5955}let s_139: bitstring = zero in
                                {5956}let k_138: bitstring = catch-fail(psk2b(psk_139)) in
                                {5957}let v_1293: bool = not-caught-fail(k_138) in
                                {5958}let early_secret_93: bitstring = catch-fail((if v_1293 then hmac(@8_backend_h,s_139,k_138) else fail-any)) in
                                {5959}let v_1294: bool = not-caught-fail(early_secret_93) in
                                {5960}let l_351: label = (if v_1294 then tls13_ext_res_binder else caught-fail) in
                                {5961}let m_122: bitstring = (if v_1294 then zero else caught-fail) in
                                {5962}let h_331: bitstring = (if v_1294 then catch-fail(hash(@8_backend_h,m_122)) else caught-fail) in
                                {5963}let v_1295: bool = not-caught-fail(h_331) in
                                {5964}let x_401: bitstring = (if v_1295 then (l_351,h_331) else caught-fail) in
                                {5965}let binder_key_62: bitstring = (if v_1294 then catch-fail((if v_1295 then hmac(@8_backend_h,early_secret_93,x_401) else fail-any)) else caught-fail) in
                                {5966}let v_1296: bool = not-caught-fail(binder_key_62) in
                                {5967}let v_1297: bitstring = catch-fail((if v_1294 then (if v_1296 then (early_secret_93,binder_key_62) else fail-any) else fail-any)) in
                                {5968}let v_1298: bool = (not-caught-fail(v_1297) && success?(1-proj-2-tuple(v_1297))) in
                                {5969}let kb_62: mac_key = (if v_1298 then 2-proj-2-tuple(v_1297) else caught-fail) in
                                {5970}let es_91: bitstring = (if v_1298 then 1-proj-2-tuple(v_1297) else caught-fail) in
                                {5971}let v_1299: bitstring = catch-fail((if v_1298 then (empty_psk_ext,(NoPsk,zero,es_91,false)) else fail-any)) in
                                {5972}let v_1300: bool = (not-caught-fail(v_1299) && success?(1-proj-2-tuple(v_1299))) in
                                {5973}let psk_data_31: bitstring = (if v_1300 then 2-proj-2-tuple(v_1299) else caught-fail) in
                                {5974}let psk_ext_65: preSharedKeyExt = (if v_1300 then 1-proj-2-tuple(v_1299) else caught-fail) in
                                {5975}let i_offer_15: params = (if v_1300 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_6,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_65) else caught-fail) in
                                {5976}let i_client_hello_20: msg = (if v_1300 then CH(i_cr_10,i_offer_15) else caught-fail) in
                                {5977}new fake_id_18[]: identityPsk;
                                {5978}new fake_binder_18[]: bitstring;
                                {5979}let o_psk_ext_19: preSharedKeyExt = (if v_1300 then (if @8_use_psk then client_psk_ext(fake_id_18,fake_binder_18) else empty_psk_ext) else caught-fail) in
                                {5980}let o_ech_ext_ADD_15: echExt = (if v_1300 then ECHClientHelloOuter(ech_h_14,ech_a_14,config_id_14,zero,zero) else caught-fail) in
                                {5981}let o_offer_ADD_15: params = (if v_1300 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_8,SNI(o_dom_10),o_ech_ext_ADD_15,empty_extra_ext,o_psk_ext_19) else caught-fail) in
                                {5982}let o_client_hello_ADD_15: msg = (if v_1300 then CH(o_cr_12,o_offer_ADD_15) else caught-fail) in
                                {5983}let n_17: nat = (if v_1300 then 2 else caught-fail) in
                                {5984}let v_1301: hpkeContext = (if v_1300 then catch-fail(context_2) else caught-fail) in
                                {5985}let v_1302: bool = (not-caught-fail(v_1301) && ((S =nf 1-proj-hpke_context(v_1301)) && success?(1-proj-hpke_context(v_1301)))) in
                                {5986}let base_nonce_20: bitstring = (if v_1302 then 3-proj-hpke_context(v_1301) else caught-fail) in
                                {5987}let key_20: aead_key = (if v_1302 then 2-proj-hpke_context(v_1301) else caught-fail) in
                                {5988}let payload_21: bitstring = (if v_1300 then catch-fail((if v_1302 then aead_enc(ech_a_14,key_20,(base_nonce_20,n_17),o_client_hello_ADD_15,i_client_hello_20) else fail-any)) else caught-fail) in
                                {5989}let v_1303: bool = not-caught-fail(payload_21) in
                                {5990}let o_ech_ext_19: echExt = (if v_1303 then ECHClientHelloOuter(ech_h_14,ech_a_14,config_id_14,zero,payload_21) else caught-fail) in
                                {5991}let o_offer_31: params = (if v_1303 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_8,SNI(o_dom_10),o_ech_ext_19,empty_extra_ext,o_psk_ext_19) else caught-fail) in
                                {5992}let (o_client_hello'_11: msg,i_client_hello'_12: msg,i_cr'_11: bytes32,i_kex_data'_11: bitstring,psk_data'_26: bitstring) = (if v_1300 then (if v_1303 then (CH(o_cr_12,o_offer_31),i_client_hello_20,i_cr_10,i_kex_data_9,psk_data_31) else fail-any) else fail-any) in
                                {5993}out(io, o_client_hello'_11);
                                {5994}in(io, server_hello'_23: msg);
                                {5995}let SH(B32(sr24'_11: bytes24,sr8'_11: bytes8),params'_11: params) = server_hello'_23 in
                                {5996}let cur_log_IN1_HRR_IN2_11: bitstring = (cur_log_IN1_HRR_3,i_client_hello'_12) in
                                {5997}let sh_modified_15: msg = SH(B32(sr24'_11,zero8),params'_11) in
                                {5998}let cur_log_sh_15: bitstring = (cur_log_IN1_HRR_IN2_11,sh_modified_15) in
                                {5999}let transcript_ech_conf_15: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_15)) in
                                {6000}let v_1304: bool = not-caught-fail(transcript_ech_conf_15) in
                                {6001}let s_140: bitstring = (if v_1304 then zero else caught-fail) in
                                {6002}let k_139: bitstring = (if v_1304 then catch-fail(b32_2_b(get_random(i_client_hello'_12))) else caught-fail) in
                                {6003}let v_1305: bool = not-caught-fail(k_139) in
                                {6004}let k_140: bitstring = (if v_1304 then catch-fail((if v_1305 then hmac(@8_backend_h,s_140,k_139) else fail-any)) else caught-fail) in
                                {6005}let v_1306: bool = not-caught-fail(k_140) in
                                {6006}let l_352: label = (if v_1306 then ech_accept_confirmation else caught-fail) in
                                {6007}let x_402: bitstring = (if v_1306 then (l_352,cur_log_sh_15) else caught-fail) in
                                {6008}let sr8_19: bytes8 = (if v_1304 then catch-fail(crop_into_bytes8((if v_1306 then hmac(@8_backend_h,k_140,x_402) else fail-any))) else caught-fail) in
                                {6009}let v_1307: bool = not-caught-fail(sr8_19) in
                                {6010}if (B32(sr24'_11,sr8'_11) = (if v_1304 then (if v_1307 then B32(sr24'_11,sr8_19) else fail-any) else fail-any)) then
                                {6011}let (x_403: bitstring,g_36: group) = i_kex_data'_11 in
                                {6012}let (psk_offer_29: preSharedKey,id_offer_29: identityPsk,es_offer_29: bitstring,is_safe_offer_29: bool) = psk_data'_26 in
                                {6013}event Client_PSKOffer(id_client_5,psk_offer_29,id_offer_29,is_safe_offer_29);
                                {6014}event Client_Rand_client(id_client_5,i_cr'_11);
                                {6015}event Client_DH_client(id_client_5,dh_pub(g_36,x_403));
                                {6016}event Client_server_domain(id_client_5,backend_dom_1);
                                {6017}let SH(sr_37: bytes32,mode_33: params) = server_hello'_23 in
                                {6018}event Client_Rand_server(id_client_5,sr_37);
                                {6019}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_36,gy_30: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_66: preSharedKeyExt) = mode_33 in
                                (
                                    {6020}let cur_log2_62: bitstring = (cur_log_IN1_HRR_IN2_11,server_hello'_23) in
                                    {6021}event Client_DH_server(id_client_5,gy_30);
                                    {6022}let v_1308: bool = (psk_ext_66 = empty_psk_ext) in
                                    {6023}let psk_140: preSharedKey = (if v_1308 then NoPsk else caught-fail) in
                                    {6024}let s_141: bitstring = (if v_1308 then zero else caught-fail) in
                                    {6025}let k_141: bitstring = (if v_1308 then catch-fail(psk2b(psk_140)) else caught-fail) in
                                    {6026}let v_1309: bool = not-caught-fail(k_141) in
                                    {6027}let early_secret_94: bitstring = (if v_1308 then catch-fail((if v_1309 then hmac(@8_backend_h,s_141,k_141) else fail-any)) else caught-fail) in
                                    {6028}let v_1310: bool = not-caught-fail(early_secret_94) in
                                    {6029}let l_353: label = (if v_1310 then tls13_ext_res_binder else caught-fail) in
                                    {6030}let m_123: bitstring = (if v_1310 then zero else caught-fail) in
                                    {6031}let h_332: bitstring = (if v_1310 then catch-fail(hash(@8_backend_h,m_123)) else caught-fail) in
                                    {6032}let v_1311: bool = not-caught-fail(h_332) in
                                    {6033}let x_404: bitstring = (if v_1311 then (l_353,h_332) else caught-fail) in
                                    {6034}let binder_key_63: bitstring = (if v_1310 then catch-fail((if v_1311 then hmac(@8_backend_h,early_secret_94,x_404) else fail-any)) else caught-fail) in
                                    {6035}let v_1312: bool = not-caught-fail(binder_key_63) in
                                    {6036}let v_1313: bitstring = (if v_1308 then catch-fail((if v_1310 then (if v_1312 then (early_secret_94,binder_key_63) else fail-any) else fail-any)) else caught-fail) in
                                    {6037}let v_1314: bool = (not-caught-fail(v_1313) && success?(1-proj-2-tuple(v_1313))) in
                                    {6038}let kb_63: mac_key = (if v_1314 then 2-proj-2-tuple(v_1313) else caught-fail) in
                                    {6039}let es_92: bitstring = (if v_1314 then 1-proj-2-tuple(v_1313) else caught-fail) in
                                    {6040}let v_1315: bitstring = (if not(v_1308) then catch-fail(psk_data'_26) else caught-fail) in
                                    {6041}let v_1316: bool = (not-caught-fail(v_1315) && success?(1-proj-4-tuple(v_1315))) in
                                    {6042}let is_safe_54: bool = (if v_1316 then 4-proj-4-tuple(v_1315) else caught-fail) in
                                    {6043}let es_93: bitstring = (if v_1316 then 3-proj-4-tuple(v_1315) else caught-fail) in
                                    {6044}let id_64: identityPsk = (if v_1316 then 2-proj-4-tuple(v_1315) else caught-fail) in
                                    {6045}let psk_141: preSharedKey = (if v_1316 then 1-proj-4-tuple(v_1315) else caught-fail) in
                                    {6046}let (psk_142: preSharedKey,early_secret_95: bitstring,valid_29: bool,safe_psk_32: bool) = (if v_1308 then (if v_1314 then (NoPsk,es_92,true,false) else fail-any) else (if v_1316 then (psk_141,es_93,((psk_141 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_66)),is_safe_54) else fail-any)) in
                                    {6047}event Client_PSKChoosen(id_client_5,psk_142,safe_psk_32);
                                    {6048}if valid_29 then
                                    (
                                        {6049}let gxy_60: element = catch-fail(dh_decap_fun(g_36,gy_30,x_403)) in
                                        {6050}let v_1317: bool = not-caught-fail(gxy_60) in
                                        {6051}new s_142[]: seed;
                                        {6052}let gxy_61: element = (if v_1317 then gxy_60 else dh_f(s_142)) in
                                        {6053}event Client_DH_gxy(id_client_5,gxy_61);
                                        {6054}let l_354: label = tls13_derived in
                                        {6055}let m_124: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {6056}let v_1318: bool = not-caught-fail(m_124) in
                                        {6057}let h_333: bitstring = (if v_1318 then catch-fail(hash(@8_backend_h,m_124)) else caught-fail) in
                                        {6058}let v_1319: bool = not-caught-fail(h_333) in
                                        {6059}let x_405: bitstring = (if v_1319 then (l_354,h_333) else caught-fail) in
                                        {6060}let extra_63: bitstring = catch-fail((if v_1318 then (if v_1319 then hmac(@8_backend_h,early_secret_95,x_405) else fail-any) else fail-any)) in
                                        {6061}let v_1320: bool = not-caught-fail(extra_63) in
                                        {6062}let handshake_secret_30: bitstring = (if v_1320 then hmac(@8_backend_h,extra_63,gxy_61) else fail-any) in
                                        {6063}let l_355: label = tls13_derived in
                                        {6064}let m_125: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {6065}let v_1321: bool = not-caught-fail(m_125) in
                                        {6066}let h_334: bitstring = (if v_1321 then catch-fail(hash(@8_backend_h,m_125)) else caught-fail) in
                                        {6067}let v_1322: bool = not-caught-fail(h_334) in
                                        {6068}let x_406: bitstring = (if v_1322 then (l_355,h_334) else caught-fail) in
                                        {6069}let extra_64: bitstring = catch-fail((if v_1321 then (if v_1322 then hmac(@8_backend_h,handshake_secret_30,x_406) else fail-any) else fail-any)) in
                                        {6070}let v_1323: bool = not-caught-fail(extra_64) in
                                        {6071}let k_142: bitstring = (if v_1323 then zero else caught-fail) in
                                        {6072}let master_secret_67: bitstring = (if v_1323 then catch-fail(hmac(@8_backend_h,handshake_secret_30,k_142)) else caught-fail) in
                                        {6073}let v_1324: bool = not-caught-fail(master_secret_67) in
                                        {6074}let l_356: label = (if v_1324 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {6075}let h_335: bitstring = (if v_1324 then catch-fail(hash(@8_backend_h,cur_log2_62)) else caught-fail) in
                                        {6076}let v_1325: bool = not-caught-fail(h_335) in
                                        {6077}let x_407: bitstring = (if v_1325 then (l_356,h_335) else caught-fail) in
                                        {6078}let client_hts_30: bitstring = (if v_1324 then catch-fail((if v_1325 then hmac(@8_backend_h,handshake_secret_30,x_407) else fail-any)) else caught-fail) in
                                        {6079}let v_1326: bool = not-caught-fail(client_hts_30) in
                                        {6080}let l_357: label = (if v_1326 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {6081}let h_336: bitstring = (if v_1326 then catch-fail(hash(@8_backend_h,cur_log2_62)) else caught-fail) in
                                        {6082}let v_1327: bool = not-caught-fail(h_336) in
                                        {6083}let x_408: bitstring = (if v_1327 then (l_357,h_336) else caught-fail) in
                                        {6084}let server_hts_30: bitstring = (if v_1326 then catch-fail((if v_1327 then hmac(@8_backend_h,handshake_secret_30,x_408) else fail-any)) else caught-fail) in
                                        {6085}let v_1328: bool = not-caught-fail(server_hts_30) in
                                        {6086}let l_358: label = (if v_1328 then tls13_key else caught-fail) in
                                        {6087}let h_337: bitstring = (if v_1328 then zero else caught-fail) in
                                        {6088}let x_409: bitstring = (if v_1328 then (l_358,h_337) else caught-fail) in
                                        {6089}let client_wkh_30: bitstring = (if v_1328 then catch-fail(hmac(@8_backend_h,client_hts_30,x_409)) else caught-fail) in
                                        {6090}let v_1329: bool = not-caught-fail(client_wkh_30) in
                                        {6091}let l_359: label = (if v_1329 then tls13_key else caught-fail) in
                                        {6092}let h_338: bitstring = (if v_1329 then zero else caught-fail) in
                                        {6093}let x_410: bitstring = (if v_1329 then (l_359,h_338) else caught-fail) in
                                        {6094}let server_wkh_30: bitstring = (if v_1329 then catch-fail(hmac(@8_backend_h,server_hts_30,x_410)) else caught-fail) in
                                        {6095}let v_1330: bool = not-caught-fail(server_wkh_30) in
                                        {6096}let l_360: label = (if v_1330 then tls13_finished else caught-fail) in
                                        {6097}let h_339: bitstring = (if v_1330 then zero else caught-fail) in
                                        {6098}let x_411: bitstring = (if v_1330 then (l_360,h_339) else caught-fail) in
                                        {6099}let client_fk_30: bitstring = (if v_1330 then catch-fail(hmac(@8_backend_h,client_hts_30,x_411)) else caught-fail) in
                                        {6100}let v_1331: bool = not-caught-fail(client_fk_30) in
                                        {6101}let l_361: label = (if v_1331 then tls13_finished else caught-fail) in
                                        {6102}let h_340: bitstring = (if v_1331 then zero else caught-fail) in
                                        {6103}let x_412: bitstring = (if v_1331 then (l_361,h_340) else caught-fail) in
                                        {6104}let server_fk_30: bitstring = (if v_1331 then catch-fail(hmac(@8_backend_h,server_hts_30,x_412)) else caught-fail) in
                                        {6105}let v_1332: bool = not-caught-fail(server_fk_30) in
                                        {6106}let (master_secret_68: bitstring,chk_37: aead_key,shk_36: aead_key,cfin_37: mac_key,sfin_36: mac_key) = (if v_1323 then (if v_1324 then (if v_1326 then (if v_1328 then (if v_1329 then (if v_1330 then (if v_1331 then (if v_1332 then (master_secret_67,client_wkh_30,server_wkh_30,client_fk_30,server_fk_30) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {6107}event Client_chk(id_client_5,chk_37);
                                        {6108}event Client_shk(id_client_5,shk_36);
                                        {6109}event Client_cfin(id_client_5,cfin_37);
                                        {6110}event Client_sfin(id_client_5,sfin_36);
                                        {6111}in(io, enc_ee_msg_29: bitstring);
                                        {6112}let ee_msg_34: msg = aead_dec(@8_backend_a,shk_36,0,zero,enc_ee_msg_29) in
                                        {6113}let EE(ech_ee_29: echExt,extra_ee_29: extraExt) = ee_msg_34 in
                                        {6114}let cur_log2_63: bitstring = (cur_log2_62,ee_msg_34) in
                                        {6115}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_11,sr_37,@8_backend_h,@8_backend_a,c_dom_6,backend_dom_1,psk_142,safe_psk_32,@8_comp_psk,master_secret_68,chk_37,0,shk_36,1,cfin_37,sfin_36,cur_log2_63)))
                                    )
                                    else
                                        {6116}out(io, illegal_parameter)
                                )
                                else
                                    {6117}out(io, illegal_parameter)
                        )
                        else
                            {6118}let cur_log_OU1_HRR_3: bitstring = ((zero,o_client_hello_5),server_hello_4) in
                            {6119}let ech_config(config_id_15: configId,ech_g_15: group,pkR_17: element,o_dom_11: domain,ech_h_15: hash_alg,ech_a_15: aead_alg) = ech_conf_2 in
                            {6120}new rand24_16[]: bytes24;
                            {6121}new rand8_16[]: bytes8;
                            {6122}let o_cr_13: bytes32 = B32(rand24_16,rand8_16) in
                            {6123}let send_key_share_11: bool = true in
                            {6124}new s_143[]: seed;
                            {6125}let gx_39: element = dh_pub(@8_tls_g,dh_k(s_143)) in
                            {6126}let v_1333: bitstring = (dh_k(s_143),gx_39) in
                            {6127}let v_1334: bool = success?(1-proj-2-tuple(v_1333)) in
                            {6128}let gx_40: element = (if v_1334 then 2-proj-2-tuple(v_1333) else caught-fail) in
                            {6129}let x_413: bitstring = (if v_1334 then 1-proj-2-tuple(v_1333) else caught-fail) in
                            {6130}let kex_15: kex_alg = (if v_1334 then (if send_key_share_11 then DHE_kex(@8_tls_g,gx_40) else DHE_group(@8_tls_g)) else caught-fail) in
                            {6131}let (o_kex_ext_9: keyShareExt,kex_data_3: bitstring) = (if v_1334 then (client_kex_ext(kex_15),(x_413,@8_tls_g)) else fail-any) in
                            {6132}if @8_use_grease then
                            (
                                {6133}let extra_65: extraExt = empty_extra_ext in
                                {6134}if @8_use_psk then
                                (
                                    {6135}let (psk_143: preSharedKey,id_65: identityPsk,old_es_9: bitstring,is_safe_55: bool) = psk_data_28 in
                                    (
                                        {6136}let offer_19: params = nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_9,SNI(o_dom_11),o_ech_ext_16,extra_65,trunc_client_psk_ext(id_65)) in
                                        {6137}let cur_log'_19: bitstring = (cur_log_OU1_HRR_3,CH(o_cr_13,offer_19)) in
                                        {6138}let s_144: bitstring = zero in
                                        {6139}let k_143: bitstring = catch-fail(psk2b(psk_143)) in
                                        {6140}let v_1335: bool = not-caught-fail(k_143) in
                                        {6141}let early_secret_96: bitstring = catch-fail((if v_1335 then hmac(@8_tls_h,s_144,k_143) else fail-any)) in
                                        {6142}let v_1336: bool = not-caught-fail(early_secret_96) in
                                        {6143}let l_362: label = (if v_1336 then tls13_ext_res_binder else caught-fail) in
                                        {6144}let m_126: bitstring = (if v_1336 then zero else caught-fail) in
                                        {6145}let h_341: bitstring = (if v_1336 then catch-fail(hash(@8_tls_h,m_126)) else caught-fail) in
                                        {6146}let v_1337: bool = not-caught-fail(h_341) in
                                        {6147}let x_414: bitstring = (if v_1337 then (l_362,h_341) else caught-fail) in
                                        {6148}let binder_key_64: bitstring = (if v_1336 then catch-fail((if v_1337 then hmac(@8_tls_h,early_secret_96,x_414) else fail-any)) else caught-fail) in
                                        {6149}let v_1338: bool = not-caught-fail(binder_key_64) in
                                        {6150}let v_1339: bitstring = catch-fail((if v_1336 then (if v_1338 then (early_secret_96,binder_key_64) else fail-any) else fail-any)) in
                                        {6151}let v_1340: bool = (not-caught-fail(v_1339) && success?(1-proj-2-tuple(v_1339))) in
                                        {6152}let kb_64: mac_key = (if v_1340 then 2-proj-2-tuple(v_1339) else caught-fail) in
                                        {6153}let es_94: bitstring = (if v_1340 then 1-proj-2-tuple(v_1339) else caught-fail) in
                                        {6154}let binders_18: bitstring = (if v_1340 then catch-fail(hmac(@8_tls_h,kb_64,cur_log'_19)) else caught-fail) in
                                        {6155}let v_1341: bool = not-caught-fail(binders_18) in
                                        {6156}let v_1342: bitstring = catch-fail((if v_1340 then (if v_1341 then (client_psk_ext(id_65,binders_18),(psk_143,id_65,es_94,is_safe_55)) else fail-any) else fail-any)) in
                                        {6157}let v_1343: bool = (not-caught-fail(v_1342) && success?(1-proj-2-tuple(v_1342))) in
                                        {6158}let psk_data_32: bitstring = (if v_1343 then 2-proj-2-tuple(v_1342) else caught-fail) in
                                        {6159}let psk_ext_67: preSharedKeyExt = (if v_1343 then 1-proj-2-tuple(v_1342) else caught-fail) in
                                        {6160}let o_offer_32: params = (if v_1343 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_9,SNI(o_dom_11),o_ech_ext_16,empty_extra_ext,psk_ext_67) else caught-fail) in
                                        {6161}let (client_hello'_15: msg,cr'_17: bytes32,kex_data'_12: bitstring,psk_data'_27: bitstring) = (if v_1343 then (CH(o_cr_13,o_offer_32),o_cr_13,kex_data_3,psk_data_32) else fail-any) in
                                        {6162}out(io, client_hello'_15);
                                        {6163}let cur_log_OU1_HRR_OU2_12: bitstring = (cur_log_OU1_HRR_3,client_hello'_15) in
                                        {6164}in(io, server_hello'_24: msg);
                                        {6165}let SH(sr'_12: bytes32,mode'_12: params) = server_hello'_24 in
                                        (
                                            {6166}if (sr'_12 = B32(HRR24,HRR8)) then
                                                {6167}out(io, unexpected_message)
                                            else
                                                {6168}let (x_415: bitstring,g_37: group) = kex_data'_12 in
                                                {6169}let (psk_offer_30: preSharedKey,id_offer_30: identityPsk,es_offer_30: bitstring,is_safe_offer_30: bool) = psk_data'_27 in
                                                {6170}event Client_PSKOffer(id_client_5,psk_offer_30,id_offer_30,is_safe_offer_30);
                                                {6171}event Client_Rand_client(id_client_5,cr'_17);
                                                {6172}event Client_DH_client(id_client_5,dh_pub(g_37,x_415));
                                                {6173}event Client_server_domain(id_client_5,o_dom_8);
                                                {6174}let SH(sr_38: bytes32,mode_34: params) = server_hello'_24 in
                                                {6175}event Client_Rand_server(id_client_5,sr_38);
                                                {6176}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_37,gy_31: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_68: preSharedKeyExt) = mode_34 in
                                                (
                                                    {6177}let cur_log2_64: bitstring = (cur_log_OU1_HRR_OU2_12,server_hello'_24) in
                                                    {6178}event Client_DH_server(id_client_5,gy_31);
                                                    {6179}let v_1344: bool = (psk_ext_68 = empty_psk_ext) in
                                                    {6180}let psk_144: preSharedKey = (if v_1344 then NoPsk else caught-fail) in
                                                    {6181}let s_145: bitstring = (if v_1344 then zero else caught-fail) in
                                                    {6182}let k_144: bitstring = (if v_1344 then catch-fail(psk2b(psk_144)) else caught-fail) in
                                                    {6183}let v_1345: bool = not-caught-fail(k_144) in
                                                    {6184}let early_secret_97: bitstring = (if v_1344 then catch-fail((if v_1345 then hmac(@8_tls_h,s_145,k_144) else fail-any)) else caught-fail) in
                                                    {6185}let v_1346: bool = not-caught-fail(early_secret_97) in
                                                    {6186}let l_363: label = (if v_1346 then tls13_ext_res_binder else caught-fail) in
                                                    {6187}let m_127: bitstring = (if v_1346 then zero else caught-fail) in
                                                    {6188}let h_342: bitstring = (if v_1346 then catch-fail(hash(@8_tls_h,m_127)) else caught-fail) in
                                                    {6189}let v_1347: bool = not-caught-fail(h_342) in
                                                    {6190}let x_416: bitstring = (if v_1347 then (l_363,h_342) else caught-fail) in
                                                    {6191}let binder_key_65: bitstring = (if v_1346 then catch-fail((if v_1347 then hmac(@8_tls_h,early_secret_97,x_416) else fail-any)) else caught-fail) in
                                                    {6192}let v_1348: bool = not-caught-fail(binder_key_65) in
                                                    {6193}let v_1349: bitstring = (if v_1344 then catch-fail((if v_1346 then (if v_1348 then (early_secret_97,binder_key_65) else fail-any) else fail-any)) else caught-fail) in
                                                    {6194}let v_1350: bool = (not-caught-fail(v_1349) && success?(1-proj-2-tuple(v_1349))) in
                                                    {6195}let kb_65: mac_key = (if v_1350 then 2-proj-2-tuple(v_1349) else caught-fail) in
                                                    {6196}let es_95: bitstring = (if v_1350 then 1-proj-2-tuple(v_1349) else caught-fail) in
                                                    {6197}let v_1351: bitstring = (if not(v_1344) then catch-fail(psk_data'_27) else caught-fail) in
                                                    {6198}let v_1352: bool = (not-caught-fail(v_1351) && success?(1-proj-4-tuple(v_1351))) in
                                                    {6199}let is_safe_56: bool = (if v_1352 then 4-proj-4-tuple(v_1351) else caught-fail) in
                                                    {6200}let es_96: bitstring = (if v_1352 then 3-proj-4-tuple(v_1351) else caught-fail) in
                                                    {6201}let id_66: identityPsk = (if v_1352 then 2-proj-4-tuple(v_1351) else caught-fail) in
                                                    {6202}let psk_145: preSharedKey = (if v_1352 then 1-proj-4-tuple(v_1351) else caught-fail) in
                                                    {6203}let (psk_146: preSharedKey,early_secret_98: bitstring,valid_30: bool,safe_psk_33: bool) = (if v_1344 then (if v_1350 then (NoPsk,es_95,true,false) else fail-any) else (if v_1352 then (psk_145,es_96,((psk_145 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_68)),is_safe_56) else fail-any)) in
                                                    {6204}event Client_PSKChoosen(id_client_5,psk_146,safe_psk_33);
                                                    {6205}if valid_30 then
                                                    (
                                                        {6206}let gxy_62: element = catch-fail(dh_decap_fun(g_37,gy_31,x_415)) in
                                                        {6207}let v_1353: bool = not-caught-fail(gxy_62) in
                                                        {6208}new s_146[]: seed;
                                                        {6209}let gxy_63: element = (if v_1353 then gxy_62 else dh_f(s_146)) in
                                                        {6210}event Client_DH_gxy(id_client_5,gxy_63);
                                                        {6211}let l_364: label = tls13_derived in
                                                        {6212}let m_128: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {6213}let v_1354: bool = not-caught-fail(m_128) in
                                                        {6214}let h_343: bitstring = (if v_1354 then catch-fail(hash(@8_tls_h,m_128)) else caught-fail) in
                                                        {6215}let v_1355: bool = not-caught-fail(h_343) in
                                                        {6216}let x_417: bitstring = (if v_1355 then (l_364,h_343) else caught-fail) in
                                                        {6217}let extra_66: bitstring = catch-fail((if v_1354 then (if v_1355 then hmac(@8_tls_h,early_secret_98,x_417) else fail-any) else fail-any)) in
                                                        {6218}let v_1356: bool = not-caught-fail(extra_66) in
                                                        {6219}let handshake_secret_31: bitstring = (if v_1356 then hmac(@8_tls_h,extra_66,gxy_63) else fail-any) in
                                                        {6220}let l_365: label = tls13_derived in
                                                        {6221}let m_129: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {6222}let v_1357: bool = not-caught-fail(m_129) in
                                                        {6223}let h_344: bitstring = (if v_1357 then catch-fail(hash(@8_tls_h,m_129)) else caught-fail) in
                                                        {6224}let v_1358: bool = not-caught-fail(h_344) in
                                                        {6225}let x_418: bitstring = (if v_1358 then (l_365,h_344) else caught-fail) in
                                                        {6226}let extra_67: bitstring = catch-fail((if v_1357 then (if v_1358 then hmac(@8_tls_h,handshake_secret_31,x_418) else fail-any) else fail-any)) in
                                                        {6227}let v_1359: bool = not-caught-fail(extra_67) in
                                                        {6228}let k_145: bitstring = (if v_1359 then zero else caught-fail) in
                                                        {6229}let master_secret_69: bitstring = (if v_1359 then catch-fail(hmac(@8_tls_h,handshake_secret_31,k_145)) else caught-fail) in
                                                        {6230}let v_1360: bool = not-caught-fail(master_secret_69) in
                                                        {6231}let l_366: label = (if v_1360 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {6232}let h_345: bitstring = (if v_1360 then catch-fail(hash(@8_tls_h,cur_log2_64)) else caught-fail) in
                                                        {6233}let v_1361: bool = not-caught-fail(h_345) in
                                                        {6234}let x_419: bitstring = (if v_1361 then (l_366,h_345) else caught-fail) in
                                                        {6235}let client_hts_31: bitstring = (if v_1360 then catch-fail((if v_1361 then hmac(@8_tls_h,handshake_secret_31,x_419) else fail-any)) else caught-fail) in
                                                        {6236}let v_1362: bool = not-caught-fail(client_hts_31) in
                                                        {6237}let l_367: label = (if v_1362 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {6238}let h_346: bitstring = (if v_1362 then catch-fail(hash(@8_tls_h,cur_log2_64)) else caught-fail) in
                                                        {6239}let v_1363: bool = not-caught-fail(h_346) in
                                                        {6240}let x_420: bitstring = (if v_1363 then (l_367,h_346) else caught-fail) in
                                                        {6241}let server_hts_31: bitstring = (if v_1362 then catch-fail((if v_1363 then hmac(@8_tls_h,handshake_secret_31,x_420) else fail-any)) else caught-fail) in
                                                        {6242}let v_1364: bool = not-caught-fail(server_hts_31) in
                                                        {6243}let l_368: label = (if v_1364 then tls13_key else caught-fail) in
                                                        {6244}let h_347: bitstring = (if v_1364 then zero else caught-fail) in
                                                        {6245}let x_421: bitstring = (if v_1364 then (l_368,h_347) else caught-fail) in
                                                        {6246}let client_wkh_31: bitstring = (if v_1364 then catch-fail(hmac(@8_tls_h,client_hts_31,x_421)) else caught-fail) in
                                                        {6247}let v_1365: bool = not-caught-fail(client_wkh_31) in
                                                        {6248}let l_369: label = (if v_1365 then tls13_key else caught-fail) in
                                                        {6249}let h_348: bitstring = (if v_1365 then zero else caught-fail) in
                                                        {6250}let x_422: bitstring = (if v_1365 then (l_369,h_348) else caught-fail) in
                                                        {6251}let server_wkh_31: bitstring = (if v_1365 then catch-fail(hmac(@8_tls_h,server_hts_31,x_422)) else caught-fail) in
                                                        {6252}let v_1366: bool = not-caught-fail(server_wkh_31) in
                                                        {6253}let l_370: label = (if v_1366 then tls13_finished else caught-fail) in
                                                        {6254}let h_349: bitstring = (if v_1366 then zero else caught-fail) in
                                                        {6255}let x_423: bitstring = (if v_1366 then (l_370,h_349) else caught-fail) in
                                                        {6256}let client_fk_31: bitstring = (if v_1366 then catch-fail(hmac(@8_tls_h,client_hts_31,x_423)) else caught-fail) in
                                                        {6257}let v_1367: bool = not-caught-fail(client_fk_31) in
                                                        {6258}let l_371: label = (if v_1367 then tls13_finished else caught-fail) in
                                                        {6259}let h_350: bitstring = (if v_1367 then zero else caught-fail) in
                                                        {6260}let x_424: bitstring = (if v_1367 then (l_371,h_350) else caught-fail) in
                                                        {6261}let server_fk_31: bitstring = (if v_1367 then catch-fail(hmac(@8_tls_h,server_hts_31,x_424)) else caught-fail) in
                                                        {6262}let v_1368: bool = not-caught-fail(server_fk_31) in
                                                        {6263}let (master_secret_70: bitstring,chk_38: aead_key,shk_37: aead_key,cfin_38: mac_key,sfin_37: mac_key) = (if v_1359 then (if v_1360 then (if v_1362 then (if v_1364 then (if v_1365 then (if v_1366 then (if v_1367 then (if v_1368 then (master_secret_69,client_wkh_31,server_wkh_31,client_fk_31,server_fk_31) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {6264}event Client_chk(id_client_5,chk_38);
                                                        {6265}event Client_shk(id_client_5,shk_37);
                                                        {6266}event Client_cfin(id_client_5,cfin_38);
                                                        {6267}event Client_sfin(id_client_5,sfin_37);
                                                        {6268}in(io, enc_ee_msg_30: bitstring);
                                                        {6269}let ee_msg_35: msg = aead_dec(@8_tls_a,shk_37,0,zero,enc_ee_msg_30) in
                                                        {6270}let EE(ech_ee_30: echExt,extra_ee_30: extraExt) = ee_msg_35 in
                                                        {6271}let cur_log2_65: bitstring = (cur_log2_64,ee_msg_35) in
                                                        {6272}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_17,sr_38,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_146,safe_psk_33,@8_comp_psk,master_secret_70,chk_38,0,shk_37,1,cfin_38,sfin_37,cur_log2_65)))
                                                    )
                                                    else
                                                        {6273}out(io, illegal_parameter)
                                                )
                                                else
                                                    {6274}out(io, illegal_parameter)
                                        )
                                        else
                                            {6275}out(io, unexpected_message)
                                    )
                                    else
                                        {6425}get pre_shared_keys(c_dom'_10: domain,=o_dom_11,=@8_tls_h,id_67: identityPsk,psk_147: preSharedKey,idP_12: idProc,is_safe_57: bool) in
                                        {6276}event Selected_one_time_used_psk(id_client_5,psk_147,is_safe_57);
                                        {6277}event Selected_psk(c_dom_6,c_dom'_10,idP_12,is_safe_57);
                                        {6278}event Selected_psk_no_missmatch(id_client_5,o_dom_11,@8_tls_h,psk_147,id_67);
                                        {6279}event Selected_psk_with_ID(c_dom_6,c_dom'_10,id_67,idP_12,is_safe_57);
                                        {6280}let v_1369: bitstring = (id_67,psk_147,is_safe_57) in
                                        {6281}let v_1370: bool = success?(1-proj-3-tuple(v_1369)) in
                                        {6282}let is_safe_58: bool = (if v_1370 then 3-proj-3-tuple(v_1369) else caught-fail) in
                                        {6283}let psk_148: preSharedKey = (if v_1370 then 2-proj-3-tuple(v_1369) else caught-fail) in
                                        {6284}let id_68: identityPsk = (if v_1370 then 1-proj-3-tuple(v_1369) else caught-fail) in
                                        {6285}let offer_20: params = (if v_1370 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_9,SNI(o_dom_11),o_ech_ext_16,extra_65,trunc_client_psk_ext(id_68)) else caught-fail) in
                                        {6286}let cur_log'_20: bitstring = (if v_1370 then (cur_log_OU1_HRR_3,CH(o_cr_13,offer_20)) else caught-fail) in
                                        {6287}let s_147: bitstring = (if v_1370 then zero else caught-fail) in
                                        {6288}let k_146: bitstring = (if v_1370 then catch-fail(psk2b(psk_148)) else caught-fail) in
                                        {6289}let v_1371: bool = not-caught-fail(k_146) in
                                        {6290}let early_secret_99: bitstring = (if v_1370 then catch-fail((if v_1371 then hmac(@8_tls_h,s_147,k_146) else fail-any)) else caught-fail) in
                                        {6291}let v_1372: bool = not-caught-fail(early_secret_99) in
                                        {6292}let l_372: label = (if v_1372 then tls13_ext_res_binder else caught-fail) in
                                        {6293}let m_130: bitstring = (if v_1372 then zero else caught-fail) in
                                        {6294}let h_351: bitstring = (if v_1372 then catch-fail(hash(@8_tls_h,m_130)) else caught-fail) in
                                        {6295}let v_1373: bool = not-caught-fail(h_351) in
                                        {6296}let x_425: bitstring = (if v_1373 then (l_372,h_351) else caught-fail) in
                                        {6297}let binder_key_66: bitstring = (if v_1372 then catch-fail((if v_1373 then hmac(@8_tls_h,early_secret_99,x_425) else fail-any)) else caught-fail) in
                                        {6298}let v_1374: bool = not-caught-fail(binder_key_66) in
                                        {6299}let v_1375: bitstring = (if v_1370 then catch-fail((if v_1372 then (if v_1374 then (early_secret_99,binder_key_66) else fail-any) else fail-any)) else caught-fail) in
                                        {6300}let v_1376: bool = (not-caught-fail(v_1375) && success?(1-proj-2-tuple(v_1375))) in
                                        {6301}let kb_66: mac_key = (if v_1376 then 2-proj-2-tuple(v_1375) else caught-fail) in
                                        {6302}let es_97: bitstring = (if v_1376 then 1-proj-2-tuple(v_1375) else caught-fail) in
                                        {6303}let binders_19: bitstring = (if v_1376 then catch-fail(hmac(@8_tls_h,kb_66,cur_log'_20)) else caught-fail) in
                                        {6304}let v_1377: bool = not-caught-fail(binders_19) in
                                        {6305}let v_1378: bitstring = catch-fail((if v_1370 then (if v_1376 then (if v_1377 then (client_psk_ext(id_68,binders_19),(psk_148,id_68,es_97,is_safe_58)) else fail-any) else fail-any) else fail-any)) in
                                        {6306}let v_1379: bool = (not-caught-fail(v_1378) && success?(1-proj-2-tuple(v_1378))) in
                                        {6307}let psk_data_33: bitstring = (if v_1379 then 2-proj-2-tuple(v_1378) else caught-fail) in
                                        {6308}let psk_ext_69: preSharedKeyExt = (if v_1379 then 1-proj-2-tuple(v_1378) else caught-fail) in
                                        {6309}let o_offer_33: params = (if v_1379 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_9,SNI(o_dom_11),o_ech_ext_16,empty_extra_ext,psk_ext_69) else caught-fail) in
                                        {6310}let (client_hello'_16: msg,cr'_18: bytes32,kex_data'_13: bitstring,psk_data'_28: bitstring) = (if v_1379 then (CH(o_cr_13,o_offer_33),o_cr_13,kex_data_3,psk_data_33) else fail-any) in
                                        {6311}out(io, client_hello'_16);
                                        {6312}let cur_log_OU1_HRR_OU2_13: bitstring = (cur_log_OU1_HRR_3,client_hello'_16) in
                                        {6313}in(io, server_hello'_25: msg);
                                        {6314}let SH(sr'_13: bytes32,mode'_13: params) = server_hello'_25 in
                                        (
                                            {6315}if (sr'_13 = B32(HRR24,HRR8)) then
                                                {6316}out(io, unexpected_message)
                                            else
                                                {6317}let (x_426: bitstring,g_38: group) = kex_data'_13 in
                                                {6318}let (psk_offer_31: preSharedKey,id_offer_31: identityPsk,es_offer_31: bitstring,is_safe_offer_31: bool) = psk_data'_28 in
                                                {6319}event Client_PSKOffer(id_client_5,psk_offer_31,id_offer_31,is_safe_offer_31);
                                                {6320}event Client_Rand_client(id_client_5,cr'_18);
                                                {6321}event Client_DH_client(id_client_5,dh_pub(g_38,x_426));
                                                {6322}event Client_server_domain(id_client_5,o_dom_8);
                                                {6323}let SH(sr_39: bytes32,mode_35: params) = server_hello'_25 in
                                                {6324}event Client_Rand_server(id_client_5,sr_39);
                                                {6325}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_38,gy_32: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_70: preSharedKeyExt) = mode_35 in
                                                (
                                                    {6326}let cur_log2_66: bitstring = (cur_log_OU1_HRR_OU2_13,server_hello'_25) in
                                                    {6327}event Client_DH_server(id_client_5,gy_32);
                                                    {6328}let v_1380: bool = (psk_ext_70 = empty_psk_ext) in
                                                    {6329}let psk_149: preSharedKey = (if v_1380 then NoPsk else caught-fail) in
                                                    {6330}let s_148: bitstring = (if v_1380 then zero else caught-fail) in
                                                    {6331}let k_147: bitstring = (if v_1380 then catch-fail(psk2b(psk_149)) else caught-fail) in
                                                    {6332}let v_1381: bool = not-caught-fail(k_147) in
                                                    {6333}let early_secret_100: bitstring = (if v_1380 then catch-fail((if v_1381 then hmac(@8_tls_h,s_148,k_147) else fail-any)) else caught-fail) in
                                                    {6334}let v_1382: bool = not-caught-fail(early_secret_100) in
                                                    {6335}let l_373: label = (if v_1382 then tls13_ext_res_binder else caught-fail) in
                                                    {6336}let m_131: bitstring = (if v_1382 then zero else caught-fail) in
                                                    {6337}let h_352: bitstring = (if v_1382 then catch-fail(hash(@8_tls_h,m_131)) else caught-fail) in
                                                    {6338}let v_1383: bool = not-caught-fail(h_352) in
                                                    {6339}let x_427: bitstring = (if v_1383 then (l_373,h_352) else caught-fail) in
                                                    {6340}let binder_key_67: bitstring = (if v_1382 then catch-fail((if v_1383 then hmac(@8_tls_h,early_secret_100,x_427) else fail-any)) else caught-fail) in
                                                    {6341}let v_1384: bool = not-caught-fail(binder_key_67) in
                                                    {6342}let v_1385: bitstring = (if v_1380 then catch-fail((if v_1382 then (if v_1384 then (early_secret_100,binder_key_67) else fail-any) else fail-any)) else caught-fail) in
                                                    {6343}let v_1386: bool = (not-caught-fail(v_1385) && success?(1-proj-2-tuple(v_1385))) in
                                                    {6344}let kb_67: mac_key = (if v_1386 then 2-proj-2-tuple(v_1385) else caught-fail) in
                                                    {6345}let es_98: bitstring = (if v_1386 then 1-proj-2-tuple(v_1385) else caught-fail) in
                                                    {6346}let v_1387: bitstring = (if not(v_1380) then catch-fail(psk_data'_28) else caught-fail) in
                                                    {6347}let v_1388: bool = (not-caught-fail(v_1387) && success?(1-proj-4-tuple(v_1387))) in
                                                    {6348}let is_safe_59: bool = (if v_1388 then 4-proj-4-tuple(v_1387) else caught-fail) in
                                                    {6349}let es_99: bitstring = (if v_1388 then 3-proj-4-tuple(v_1387) else caught-fail) in
                                                    {6350}let id_69: identityPsk = (if v_1388 then 2-proj-4-tuple(v_1387) else caught-fail) in
                                                    {6351}let psk_150: preSharedKey = (if v_1388 then 1-proj-4-tuple(v_1387) else caught-fail) in
                                                    {6352}let (psk_151: preSharedKey,early_secret_101: bitstring,valid_31: bool,safe_psk_34: bool) = (if v_1380 then (if v_1386 then (NoPsk,es_98,true,false) else fail-any) else (if v_1388 then (psk_150,es_99,((psk_150 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_70)),is_safe_59) else fail-any)) in
                                                    {6353}event Client_PSKChoosen(id_client_5,psk_151,safe_psk_34);
                                                    {6354}if valid_31 then
                                                    (
                                                        {6355}let gxy_64: element = catch-fail(dh_decap_fun(g_38,gy_32,x_426)) in
                                                        {6356}let v_1389: bool = not-caught-fail(gxy_64) in
                                                        {6357}new s_149[]: seed;
                                                        {6358}let gxy_65: element = (if v_1389 then gxy_64 else dh_f(s_149)) in
                                                        {6359}event Client_DH_gxy(id_client_5,gxy_65);
                                                        {6360}let l_374: label = tls13_derived in
                                                        {6361}let m_132: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {6362}let v_1390: bool = not-caught-fail(m_132) in
                                                        {6363}let h_353: bitstring = (if v_1390 then catch-fail(hash(@8_tls_h,m_132)) else caught-fail) in
                                                        {6364}let v_1391: bool = not-caught-fail(h_353) in
                                                        {6365}let x_428: bitstring = (if v_1391 then (l_374,h_353) else caught-fail) in
                                                        {6366}let extra_68: bitstring = catch-fail((if v_1390 then (if v_1391 then hmac(@8_tls_h,early_secret_101,x_428) else fail-any) else fail-any)) in
                                                        {6367}let v_1392: bool = not-caught-fail(extra_68) in
                                                        {6368}let handshake_secret_32: bitstring = (if v_1392 then hmac(@8_tls_h,extra_68,gxy_65) else fail-any) in
                                                        {6369}let l_375: label = tls13_derived in
                                                        {6370}let m_133: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {6371}let v_1393: bool = not-caught-fail(m_133) in
                                                        {6372}let h_354: bitstring = (if v_1393 then catch-fail(hash(@8_tls_h,m_133)) else caught-fail) in
                                                        {6373}let v_1394: bool = not-caught-fail(h_354) in
                                                        {6374}let x_429: bitstring = (if v_1394 then (l_375,h_354) else caught-fail) in
                                                        {6375}let extra_69: bitstring = catch-fail((if v_1393 then (if v_1394 then hmac(@8_tls_h,handshake_secret_32,x_429) else fail-any) else fail-any)) in
                                                        {6376}let v_1395: bool = not-caught-fail(extra_69) in
                                                        {6377}let k_148: bitstring = (if v_1395 then zero else caught-fail) in
                                                        {6378}let master_secret_71: bitstring = (if v_1395 then catch-fail(hmac(@8_tls_h,handshake_secret_32,k_148)) else caught-fail) in
                                                        {6379}let v_1396: bool = not-caught-fail(master_secret_71) in
                                                        {6380}let l_376: label = (if v_1396 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {6381}let h_355: bitstring = (if v_1396 then catch-fail(hash(@8_tls_h,cur_log2_66)) else caught-fail) in
                                                        {6382}let v_1397: bool = not-caught-fail(h_355) in
                                                        {6383}let x_430: bitstring = (if v_1397 then (l_376,h_355) else caught-fail) in
                                                        {6384}let client_hts_32: bitstring = (if v_1396 then catch-fail((if v_1397 then hmac(@8_tls_h,handshake_secret_32,x_430) else fail-any)) else caught-fail) in
                                                        {6385}let v_1398: bool = not-caught-fail(client_hts_32) in
                                                        {6386}let l_377: label = (if v_1398 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {6387}let h_356: bitstring = (if v_1398 then catch-fail(hash(@8_tls_h,cur_log2_66)) else caught-fail) in
                                                        {6388}let v_1399: bool = not-caught-fail(h_356) in
                                                        {6389}let x_431: bitstring = (if v_1399 then (l_377,h_356) else caught-fail) in
                                                        {6390}let server_hts_32: bitstring = (if v_1398 then catch-fail((if v_1399 then hmac(@8_tls_h,handshake_secret_32,x_431) else fail-any)) else caught-fail) in
                                                        {6391}let v_1400: bool = not-caught-fail(server_hts_32) in
                                                        {6392}let l_378: label = (if v_1400 then tls13_key else caught-fail) in
                                                        {6393}let h_357: bitstring = (if v_1400 then zero else caught-fail) in
                                                        {6394}let x_432: bitstring = (if v_1400 then (l_378,h_357) else caught-fail) in
                                                        {6395}let client_wkh_32: bitstring = (if v_1400 then catch-fail(hmac(@8_tls_h,client_hts_32,x_432)) else caught-fail) in
                                                        {6396}let v_1401: bool = not-caught-fail(client_wkh_32) in
                                                        {6397}let l_379: label = (if v_1401 then tls13_key else caught-fail) in
                                                        {6398}let h_358: bitstring = (if v_1401 then zero else caught-fail) in
                                                        {6399}let x_433: bitstring = (if v_1401 then (l_379,h_358) else caught-fail) in
                                                        {6400}let server_wkh_32: bitstring = (if v_1401 then catch-fail(hmac(@8_tls_h,server_hts_32,x_433)) else caught-fail) in
                                                        {6401}let v_1402: bool = not-caught-fail(server_wkh_32) in
                                                        {6402}let l_380: label = (if v_1402 then tls13_finished else caught-fail) in
                                                        {6403}let h_359: bitstring = (if v_1402 then zero else caught-fail) in
                                                        {6404}let x_434: bitstring = (if v_1402 then (l_380,h_359) else caught-fail) in
                                                        {6405}let client_fk_32: bitstring = (if v_1402 then catch-fail(hmac(@8_tls_h,client_hts_32,x_434)) else caught-fail) in
                                                        {6406}let v_1403: bool = not-caught-fail(client_fk_32) in
                                                        {6407}let l_381: label = (if v_1403 then tls13_finished else caught-fail) in
                                                        {6408}let h_360: bitstring = (if v_1403 then zero else caught-fail) in
                                                        {6409}let x_435: bitstring = (if v_1403 then (l_381,h_360) else caught-fail) in
                                                        {6410}let server_fk_32: bitstring = (if v_1403 then catch-fail(hmac(@8_tls_h,server_hts_32,x_435)) else caught-fail) in
                                                        {6411}let v_1404: bool = not-caught-fail(server_fk_32) in
                                                        {6412}let (master_secret_72: bitstring,chk_39: aead_key,shk_38: aead_key,cfin_39: mac_key,sfin_38: mac_key) = (if v_1395 then (if v_1396 then (if v_1398 then (if v_1400 then (if v_1401 then (if v_1402 then (if v_1403 then (if v_1404 then (master_secret_71,client_wkh_32,server_wkh_32,client_fk_32,server_fk_32) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {6413}event Client_chk(id_client_5,chk_39);
                                                        {6414}event Client_shk(id_client_5,shk_38);
                                                        {6415}event Client_cfin(id_client_5,cfin_39);
                                                        {6416}event Client_sfin(id_client_5,sfin_38);
                                                        {6417}in(io, enc_ee_msg_31: bitstring);
                                                        {6418}let ee_msg_36: msg = aead_dec(@8_tls_a,shk_38,0,zero,enc_ee_msg_31) in
                                                        {6419}let EE(ech_ee_31: echExt,extra_ee_31: extraExt) = ee_msg_36 in
                                                        {6420}let cur_log2_67: bitstring = (cur_log2_66,ee_msg_36) in
                                                        {6421}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_18,sr_39,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_151,safe_psk_34,@8_comp_psk,master_secret_72,chk_39,0,shk_38,1,cfin_39,sfin_38,cur_log2_67)))
                                                    )
                                                    else
                                                        {6422}out(io, illegal_parameter)
                                                )
                                                else
                                                    {6423}out(io, illegal_parameter)
                                        )
                                        else
                                            {6424}out(io, unexpected_message)
                                )
                                else
                                    {6426}let psk_152: preSharedKey = NoPsk in
                                    {6427}let s_150: bitstring = zero in
                                    {6428}let k_149: bitstring = catch-fail(psk2b(psk_152)) in
                                    {6429}let v_1405: bool = not-caught-fail(k_149) in
                                    {6430}let early_secret_102: bitstring = catch-fail((if v_1405 then hmac(@8_tls_h,s_150,k_149) else fail-any)) in
                                    {6431}let v_1406: bool = not-caught-fail(early_secret_102) in
                                    {6432}let l_382: label = (if v_1406 then tls13_ext_res_binder else caught-fail) in
                                    {6433}let m_134: bitstring = (if v_1406 then zero else caught-fail) in
                                    {6434}let h_361: bitstring = (if v_1406 then catch-fail(hash(@8_tls_h,m_134)) else caught-fail) in
                                    {6435}let v_1407: bool = not-caught-fail(h_361) in
                                    {6436}let x_436: bitstring = (if v_1407 then (l_382,h_361) else caught-fail) in
                                    {6437}let binder_key_68: bitstring = (if v_1406 then catch-fail((if v_1407 then hmac(@8_tls_h,early_secret_102,x_436) else fail-any)) else caught-fail) in
                                    {6438}let v_1408: bool = not-caught-fail(binder_key_68) in
                                    {6439}let v_1409: bitstring = catch-fail((if v_1406 then (if v_1408 then (early_secret_102,binder_key_68) else fail-any) else fail-any)) in
                                    {6440}let v_1410: bool = (not-caught-fail(v_1409) && success?(1-proj-2-tuple(v_1409))) in
                                    {6441}let kb_68: mac_key = (if v_1410 then 2-proj-2-tuple(v_1409) else caught-fail) in
                                    {6442}let es_100: bitstring = (if v_1410 then 1-proj-2-tuple(v_1409) else caught-fail) in
                                    {6443}let v_1411: bitstring = catch-fail((if v_1410 then (empty_psk_ext,(NoPsk,zero,es_100,false)) else fail-any)) in
                                    {6444}let v_1412: bool = (not-caught-fail(v_1411) && success?(1-proj-2-tuple(v_1411))) in
                                    {6445}let psk_data_34: bitstring = (if v_1412 then 2-proj-2-tuple(v_1411) else caught-fail) in
                                    {6446}let psk_ext_71: preSharedKeyExt = (if v_1412 then 1-proj-2-tuple(v_1411) else caught-fail) in
                                    {6447}let o_offer_34: params = (if v_1412 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_9,SNI(o_dom_11),o_ech_ext_16,empty_extra_ext,psk_ext_71) else caught-fail) in
                                    {6448}let (client_hello'_17: msg,cr'_19: bytes32,kex_data'_14: bitstring,psk_data'_29: bitstring) = (if v_1412 then (CH(o_cr_13,o_offer_34),o_cr_13,kex_data_3,psk_data_34) else fail-any) in
                                    {6449}out(io, client_hello'_17);
                                    {6450}let cur_log_OU1_HRR_OU2_14: bitstring = (cur_log_OU1_HRR_3,client_hello'_17) in
                                    {6451}in(io, server_hello'_26: msg);
                                    {6452}let SH(sr'_14: bytes32,mode'_14: params) = server_hello'_26 in
                                    (
                                        {6453}if (sr'_14 = B32(HRR24,HRR8)) then
                                            {6454}out(io, unexpected_message)
                                        else
                                            {6455}let (x_437: bitstring,g_39: group) = kex_data'_14 in
                                            {6456}let (psk_offer_32: preSharedKey,id_offer_32: identityPsk,es_offer_32: bitstring,is_safe_offer_32: bool) = psk_data'_29 in
                                            {6457}event Client_PSKOffer(id_client_5,psk_offer_32,id_offer_32,is_safe_offer_32);
                                            {6458}event Client_Rand_client(id_client_5,cr'_19);
                                            {6459}event Client_DH_client(id_client_5,dh_pub(g_39,x_437));
                                            {6460}event Client_server_domain(id_client_5,o_dom_8);
                                            {6461}let SH(sr_40: bytes32,mode_36: params) = server_hello'_26 in
                                            {6462}event Client_Rand_server(id_client_5,sr_40);
                                            {6463}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_39,gy_33: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_72: preSharedKeyExt) = mode_36 in
                                            (
                                                {6464}let cur_log2_68: bitstring = (cur_log_OU1_HRR_OU2_14,server_hello'_26) in
                                                {6465}event Client_DH_server(id_client_5,gy_33);
                                                {6466}let v_1413: bool = (psk_ext_72 = empty_psk_ext) in
                                                {6467}let psk_153: preSharedKey = (if v_1413 then NoPsk else caught-fail) in
                                                {6468}let s_151: bitstring = (if v_1413 then zero else caught-fail) in
                                                {6469}let k_150: bitstring = (if v_1413 then catch-fail(psk2b(psk_153)) else caught-fail) in
                                                {6470}let v_1414: bool = not-caught-fail(k_150) in
                                                {6471}let early_secret_103: bitstring = (if v_1413 then catch-fail((if v_1414 then hmac(@8_tls_h,s_151,k_150) else fail-any)) else caught-fail) in
                                                {6472}let v_1415: bool = not-caught-fail(early_secret_103) in
                                                {6473}let l_383: label = (if v_1415 then tls13_ext_res_binder else caught-fail) in
                                                {6474}let m_135: bitstring = (if v_1415 then zero else caught-fail) in
                                                {6475}let h_362: bitstring = (if v_1415 then catch-fail(hash(@8_tls_h,m_135)) else caught-fail) in
                                                {6476}let v_1416: bool = not-caught-fail(h_362) in
                                                {6477}let x_438: bitstring = (if v_1416 then (l_383,h_362) else caught-fail) in
                                                {6478}let binder_key_69: bitstring = (if v_1415 then catch-fail((if v_1416 then hmac(@8_tls_h,early_secret_103,x_438) else fail-any)) else caught-fail) in
                                                {6479}let v_1417: bool = not-caught-fail(binder_key_69) in
                                                {6480}let v_1418: bitstring = (if v_1413 then catch-fail((if v_1415 then (if v_1417 then (early_secret_103,binder_key_69) else fail-any) else fail-any)) else caught-fail) in
                                                {6481}let v_1419: bool = (not-caught-fail(v_1418) && success?(1-proj-2-tuple(v_1418))) in
                                                {6482}let kb_69: mac_key = (if v_1419 then 2-proj-2-tuple(v_1418) else caught-fail) in
                                                {6483}let es_101: bitstring = (if v_1419 then 1-proj-2-tuple(v_1418) else caught-fail) in
                                                {6484}let v_1420: bitstring = (if not(v_1413) then catch-fail(psk_data'_29) else caught-fail) in
                                                {6485}let v_1421: bool = (not-caught-fail(v_1420) && success?(1-proj-4-tuple(v_1420))) in
                                                {6486}let is_safe_60: bool = (if v_1421 then 4-proj-4-tuple(v_1420) else caught-fail) in
                                                {6487}let es_102: bitstring = (if v_1421 then 3-proj-4-tuple(v_1420) else caught-fail) in
                                                {6488}let id_70: identityPsk = (if v_1421 then 2-proj-4-tuple(v_1420) else caught-fail) in
                                                {6489}let psk_154: preSharedKey = (if v_1421 then 1-proj-4-tuple(v_1420) else caught-fail) in
                                                {6490}let (psk_155: preSharedKey,early_secret_104: bitstring,valid_32: bool,safe_psk_35: bool) = (if v_1413 then (if v_1419 then (NoPsk,es_101,true,false) else fail-any) else (if v_1421 then (psk_154,es_102,((psk_154 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_72)),is_safe_60) else fail-any)) in
                                                {6491}event Client_PSKChoosen(id_client_5,psk_155,safe_psk_35);
                                                {6492}if valid_32 then
                                                (
                                                    {6493}let gxy_66: element = catch-fail(dh_decap_fun(g_39,gy_33,x_437)) in
                                                    {6494}let v_1422: bool = not-caught-fail(gxy_66) in
                                                    {6495}new s_152[]: seed;
                                                    {6496}let gxy_67: element = (if v_1422 then gxy_66 else dh_f(s_152)) in
                                                    {6497}event Client_DH_gxy(id_client_5,gxy_67);
                                                    {6498}let l_384: label = tls13_derived in
                                                    {6499}let m_136: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {6500}let v_1423: bool = not-caught-fail(m_136) in
                                                    {6501}let h_363: bitstring = (if v_1423 then catch-fail(hash(@8_tls_h,m_136)) else caught-fail) in
                                                    {6502}let v_1424: bool = not-caught-fail(h_363) in
                                                    {6503}let x_439: bitstring = (if v_1424 then (l_384,h_363) else caught-fail) in
                                                    {6504}let extra_70: bitstring = catch-fail((if v_1423 then (if v_1424 then hmac(@8_tls_h,early_secret_104,x_439) else fail-any) else fail-any)) in
                                                    {6505}let v_1425: bool = not-caught-fail(extra_70) in
                                                    {6506}let handshake_secret_33: bitstring = (if v_1425 then hmac(@8_tls_h,extra_70,gxy_67) else fail-any) in
                                                    {6507}let l_385: label = tls13_derived in
                                                    {6508}let m_137: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {6509}let v_1426: bool = not-caught-fail(m_137) in
                                                    {6510}let h_364: bitstring = (if v_1426 then catch-fail(hash(@8_tls_h,m_137)) else caught-fail) in
                                                    {6511}let v_1427: bool = not-caught-fail(h_364) in
                                                    {6512}let x_440: bitstring = (if v_1427 then (l_385,h_364) else caught-fail) in
                                                    {6513}let extra_71: bitstring = catch-fail((if v_1426 then (if v_1427 then hmac(@8_tls_h,handshake_secret_33,x_440) else fail-any) else fail-any)) in
                                                    {6514}let v_1428: bool = not-caught-fail(extra_71) in
                                                    {6515}let k_151: bitstring = (if v_1428 then zero else caught-fail) in
                                                    {6516}let master_secret_73: bitstring = (if v_1428 then catch-fail(hmac(@8_tls_h,handshake_secret_33,k_151)) else caught-fail) in
                                                    {6517}let v_1429: bool = not-caught-fail(master_secret_73) in
                                                    {6518}let l_386: label = (if v_1429 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {6519}let h_365: bitstring = (if v_1429 then catch-fail(hash(@8_tls_h,cur_log2_68)) else caught-fail) in
                                                    {6520}let v_1430: bool = not-caught-fail(h_365) in
                                                    {6521}let x_441: bitstring = (if v_1430 then (l_386,h_365) else caught-fail) in
                                                    {6522}let client_hts_33: bitstring = (if v_1429 then catch-fail((if v_1430 then hmac(@8_tls_h,handshake_secret_33,x_441) else fail-any)) else caught-fail) in
                                                    {6523}let v_1431: bool = not-caught-fail(client_hts_33) in
                                                    {6524}let l_387: label = (if v_1431 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {6525}let h_366: bitstring = (if v_1431 then catch-fail(hash(@8_tls_h,cur_log2_68)) else caught-fail) in
                                                    {6526}let v_1432: bool = not-caught-fail(h_366) in
                                                    {6527}let x_442: bitstring = (if v_1432 then (l_387,h_366) else caught-fail) in
                                                    {6528}let server_hts_33: bitstring = (if v_1431 then catch-fail((if v_1432 then hmac(@8_tls_h,handshake_secret_33,x_442) else fail-any)) else caught-fail) in
                                                    {6529}let v_1433: bool = not-caught-fail(server_hts_33) in
                                                    {6530}let l_388: label = (if v_1433 then tls13_key else caught-fail) in
                                                    {6531}let h_367: bitstring = (if v_1433 then zero else caught-fail) in
                                                    {6532}let x_443: bitstring = (if v_1433 then (l_388,h_367) else caught-fail) in
                                                    {6533}let client_wkh_33: bitstring = (if v_1433 then catch-fail(hmac(@8_tls_h,client_hts_33,x_443)) else caught-fail) in
                                                    {6534}let v_1434: bool = not-caught-fail(client_wkh_33) in
                                                    {6535}let l_389: label = (if v_1434 then tls13_key else caught-fail) in
                                                    {6536}let h_368: bitstring = (if v_1434 then zero else caught-fail) in
                                                    {6537}let x_444: bitstring = (if v_1434 then (l_389,h_368) else caught-fail) in
                                                    {6538}let server_wkh_33: bitstring = (if v_1434 then catch-fail(hmac(@8_tls_h,server_hts_33,x_444)) else caught-fail) in
                                                    {6539}let v_1435: bool = not-caught-fail(server_wkh_33) in
                                                    {6540}let l_390: label = (if v_1435 then tls13_finished else caught-fail) in
                                                    {6541}let h_369: bitstring = (if v_1435 then zero else caught-fail) in
                                                    {6542}let x_445: bitstring = (if v_1435 then (l_390,h_369) else caught-fail) in
                                                    {6543}let client_fk_33: bitstring = (if v_1435 then catch-fail(hmac(@8_tls_h,client_hts_33,x_445)) else caught-fail) in
                                                    {6544}let v_1436: bool = not-caught-fail(client_fk_33) in
                                                    {6545}let l_391: label = (if v_1436 then tls13_finished else caught-fail) in
                                                    {6546}let h_370: bitstring = (if v_1436 then zero else caught-fail) in
                                                    {6547}let x_446: bitstring = (if v_1436 then (l_391,h_370) else caught-fail) in
                                                    {6548}let server_fk_33: bitstring = (if v_1436 then catch-fail(hmac(@8_tls_h,server_hts_33,x_446)) else caught-fail) in
                                                    {6549}let v_1437: bool = not-caught-fail(server_fk_33) in
                                                    {6550}let (master_secret_74: bitstring,chk_40: aead_key,shk_39: aead_key,cfin_40: mac_key,sfin_39: mac_key) = (if v_1428 then (if v_1429 then (if v_1431 then (if v_1433 then (if v_1434 then (if v_1435 then (if v_1436 then (if v_1437 then (master_secret_73,client_wkh_33,server_wkh_33,client_fk_33,server_fk_33) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {6551}event Client_chk(id_client_5,chk_40);
                                                    {6552}event Client_shk(id_client_5,shk_39);
                                                    {6553}event Client_cfin(id_client_5,cfin_40);
                                                    {6554}event Client_sfin(id_client_5,sfin_39);
                                                    {6555}in(io, enc_ee_msg_32: bitstring);
                                                    {6556}let ee_msg_37: msg = aead_dec(@8_tls_a,shk_39,0,zero,enc_ee_msg_32) in
                                                    {6557}let EE(ech_ee_32: echExt,extra_ee_32: extraExt) = ee_msg_37 in
                                                    {6558}let cur_log2_69: bitstring = (cur_log2_68,ee_msg_37) in
                                                    {6559}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_19,sr_40,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_155,safe_psk_35,@8_comp_psk,master_secret_74,chk_40,0,shk_39,1,cfin_40,sfin_39,cur_log2_69)))
                                                )
                                                else
                                                    {6560}out(io, illegal_parameter)
                                            )
                                            else
                                                {6561}out(io, illegal_parameter)
                                    )
                                    else
                                        {6562}out(io, unexpected_message)
                            )
                            else
                                {6563}let psk_156: preSharedKey = NoPsk in
                                {6564}let s_153: bitstring = zero in
                                {6565}let k_152: bitstring = catch-fail(psk2b(psk_156)) in
                                {6566}let v_1438: bool = not-caught-fail(k_152) in
                                {6567}let early_secret_105: bitstring = catch-fail((if v_1438 then hmac(@8_tls_h,s_153,k_152) else fail-any)) in
                                {6568}let v_1439: bool = not-caught-fail(early_secret_105) in
                                {6569}let l_392: label = (if v_1439 then tls13_ext_res_binder else caught-fail) in
                                {6570}let m_138: bitstring = (if v_1439 then zero else caught-fail) in
                                {6571}let h_371: bitstring = (if v_1439 then catch-fail(hash(@8_tls_h,m_138)) else caught-fail) in
                                {6572}let v_1440: bool = not-caught-fail(h_371) in
                                {6573}let x_447: bitstring = (if v_1440 then (l_392,h_371) else caught-fail) in
                                {6574}let binder_key_70: bitstring = (if v_1439 then catch-fail((if v_1440 then hmac(@8_tls_h,early_secret_105,x_447) else fail-any)) else caught-fail) in
                                {6575}let v_1441: bool = not-caught-fail(binder_key_70) in
                                {6576}let v_1442: bitstring = catch-fail((if v_1439 then (if v_1441 then (early_secret_105,binder_key_70) else fail-any) else fail-any)) in
                                {6577}let v_1443: bool = (not-caught-fail(v_1442) && success?(1-proj-2-tuple(v_1442))) in
                                {6578}let kb_70: mac_key = (if v_1443 then 2-proj-2-tuple(v_1442) else caught-fail) in
                                {6579}let es_103: bitstring = (if v_1443 then 1-proj-2-tuple(v_1442) else caught-fail) in
                                {6580}let v_1444: preSharedKeyExt = (if v_1443 then catch-fail(o_psk_ext_16) else caught-fail) in
                                {6581}let v_1445: bool = (not-caught-fail(v_1444) && success?(1-proj-client_psk_ext(v_1444))) in
                                {6582}let fake_binder_19: bitstring = (if v_1445 then 2-proj-client_psk_ext(v_1444) else caught-fail) in
                                {6583}let fake_id_19: identityPsk = (if v_1445 then 1-proj-client_psk_ext(v_1444) else caught-fail) in
                                {6584}new fake_binder'_3[]: bitstring;
                                {6585}let v_1446: bitstring = catch-fail((if v_1443 then (if v_1445 then (client_psk_ext(fake_id_19,fake_binder'_3),(NoPsk,zero,es_103,false)) else (empty_psk_ext,(NoPsk,zero,es_103,false))) else fail-any)) in
                                {6586}let v_1447: bool = (not-caught-fail(v_1446) && success?(1-proj-2-tuple(v_1446))) in
                                {6587}let psk_data_35: bitstring = (if v_1447 then 2-proj-2-tuple(v_1446) else caught-fail) in
                                {6588}let psk_ext_73: preSharedKeyExt = (if v_1447 then 1-proj-2-tuple(v_1446) else caught-fail) in
                                {6589}let o_offer_35: params = (if v_1447 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_9,SNI(o_dom_11),o_ech_ext_16,empty_extra_ext,psk_ext_73) else caught-fail) in
                                {6590}let (client_hello'_18: msg,cr'_20: bytes32,kex_data'_15: bitstring,psk_data'_30: bitstring) = (if v_1447 then (CH(o_cr_13,o_offer_35),o_cr_13,kex_data_3,psk_data_35) else fail-any) in
                                {6591}out(io, client_hello'_18);
                                {6592}let cur_log_OU1_HRR_OU2_15: bitstring = (cur_log_OU1_HRR_3,client_hello'_18) in
                                {6593}in(io, server_hello'_27: msg);
                                {6594}let SH(sr'_15: bytes32,mode'_15: params) = server_hello'_27 in
                                (
                                    {6595}if (sr'_15 = B32(HRR24,HRR8)) then
                                        {6596}out(io, unexpected_message)
                                    else
                                        {6597}let (x_448: bitstring,g_40: group) = kex_data'_15 in
                                        {6598}let (psk_offer_33: preSharedKey,id_offer_33: identityPsk,es_offer_33: bitstring,is_safe_offer_33: bool) = psk_data'_30 in
                                        {6599}event Client_PSKOffer(id_client_5,psk_offer_33,id_offer_33,is_safe_offer_33);
                                        {6600}event Client_Rand_client(id_client_5,cr'_20);
                                        {6601}event Client_DH_client(id_client_5,dh_pub(g_40,x_448));
                                        {6602}event Client_server_domain(id_client_5,o_dom_8);
                                        {6603}let SH(sr_41: bytes32,mode_37: params) = server_hello'_27 in
                                        {6604}event Client_Rand_server(id_client_5,sr_41);
                                        {6605}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_40,gy_34: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_74: preSharedKeyExt) = mode_37 in
                                        (
                                            {6606}let cur_log2_70: bitstring = (cur_log_OU1_HRR_OU2_15,server_hello'_27) in
                                            {6607}event Client_DH_server(id_client_5,gy_34);
                                            {6608}let v_1448: bool = (psk_ext_74 = empty_psk_ext) in
                                            {6609}let psk_157: preSharedKey = (if v_1448 then NoPsk else caught-fail) in
                                            {6610}let s_154: bitstring = (if v_1448 then zero else caught-fail) in
                                            {6611}let k_153: bitstring = (if v_1448 then catch-fail(psk2b(psk_157)) else caught-fail) in
                                            {6612}let v_1449: bool = not-caught-fail(k_153) in
                                            {6613}let early_secret_106: bitstring = (if v_1448 then catch-fail((if v_1449 then hmac(@8_tls_h,s_154,k_153) else fail-any)) else caught-fail) in
                                            {6614}let v_1450: bool = not-caught-fail(early_secret_106) in
                                            {6615}let l_393: label = (if v_1450 then tls13_ext_res_binder else caught-fail) in
                                            {6616}let m_139: bitstring = (if v_1450 then zero else caught-fail) in
                                            {6617}let h_372: bitstring = (if v_1450 then catch-fail(hash(@8_tls_h,m_139)) else caught-fail) in
                                            {6618}let v_1451: bool = not-caught-fail(h_372) in
                                            {6619}let x_449: bitstring = (if v_1451 then (l_393,h_372) else caught-fail) in
                                            {6620}let binder_key_71: bitstring = (if v_1450 then catch-fail((if v_1451 then hmac(@8_tls_h,early_secret_106,x_449) else fail-any)) else caught-fail) in
                                            {6621}let v_1452: bool = not-caught-fail(binder_key_71) in
                                            {6622}let v_1453: bitstring = (if v_1448 then catch-fail((if v_1450 then (if v_1452 then (early_secret_106,binder_key_71) else fail-any) else fail-any)) else caught-fail) in
                                            {6623}let v_1454: bool = (not-caught-fail(v_1453) && success?(1-proj-2-tuple(v_1453))) in
                                            {6624}let kb_71: mac_key = (if v_1454 then 2-proj-2-tuple(v_1453) else caught-fail) in
                                            {6625}let es_104: bitstring = (if v_1454 then 1-proj-2-tuple(v_1453) else caught-fail) in
                                            {6626}let v_1455: bitstring = (if not(v_1448) then catch-fail(psk_data'_30) else caught-fail) in
                                            {6627}let v_1456: bool = (not-caught-fail(v_1455) && success?(1-proj-4-tuple(v_1455))) in
                                            {6628}let is_safe_61: bool = (if v_1456 then 4-proj-4-tuple(v_1455) else caught-fail) in
                                            {6629}let es_105: bitstring = (if v_1456 then 3-proj-4-tuple(v_1455) else caught-fail) in
                                            {6630}let id_71: identityPsk = (if v_1456 then 2-proj-4-tuple(v_1455) else caught-fail) in
                                            {6631}let psk_158: preSharedKey = (if v_1456 then 1-proj-4-tuple(v_1455) else caught-fail) in
                                            {6632}let (psk_159: preSharedKey,early_secret_107: bitstring,valid_33: bool,safe_psk_36: bool) = (if v_1448 then (if v_1454 then (NoPsk,es_104,true,false) else fail-any) else (if v_1456 then (psk_158,es_105,((psk_158 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_74)),is_safe_61) else fail-any)) in
                                            {6633}event Client_PSKChoosen(id_client_5,psk_159,safe_psk_36);
                                            {6634}if valid_33 then
                                            (
                                                {6635}let gxy_68: element = catch-fail(dh_decap_fun(g_40,gy_34,x_448)) in
                                                {6636}let v_1457: bool = not-caught-fail(gxy_68) in
                                                {6637}new s_155[]: seed;
                                                {6638}let gxy_69: element = (if v_1457 then gxy_68 else dh_f(s_155)) in
                                                {6639}event Client_DH_gxy(id_client_5,gxy_69);
                                                {6640}let l_394: label = tls13_derived in
                                                {6641}let m_140: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                {6642}let v_1458: bool = not-caught-fail(m_140) in
                                                {6643}let h_373: bitstring = (if v_1458 then catch-fail(hash(@8_tls_h,m_140)) else caught-fail) in
                                                {6644}let v_1459: bool = not-caught-fail(h_373) in
                                                {6645}let x_450: bitstring = (if v_1459 then (l_394,h_373) else caught-fail) in
                                                {6646}let extra_72: bitstring = catch-fail((if v_1458 then (if v_1459 then hmac(@8_tls_h,early_secret_107,x_450) else fail-any) else fail-any)) in
                                                {6647}let v_1460: bool = not-caught-fail(extra_72) in
                                                {6648}let handshake_secret_34: bitstring = (if v_1460 then hmac(@8_tls_h,extra_72,gxy_69) else fail-any) in
                                                {6649}let l_395: label = tls13_derived in
                                                {6650}let m_141: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                {6651}let v_1461: bool = not-caught-fail(m_141) in
                                                {6652}let h_374: bitstring = (if v_1461 then catch-fail(hash(@8_tls_h,m_141)) else caught-fail) in
                                                {6653}let v_1462: bool = not-caught-fail(h_374) in
                                                {6654}let x_451: bitstring = (if v_1462 then (l_395,h_374) else caught-fail) in
                                                {6655}let extra_73: bitstring = catch-fail((if v_1461 then (if v_1462 then hmac(@8_tls_h,handshake_secret_34,x_451) else fail-any) else fail-any)) in
                                                {6656}let v_1463: bool = not-caught-fail(extra_73) in
                                                {6657}let k_154: bitstring = (if v_1463 then zero else caught-fail) in
                                                {6658}let master_secret_75: bitstring = (if v_1463 then catch-fail(hmac(@8_tls_h,handshake_secret_34,k_154)) else caught-fail) in
                                                {6659}let v_1464: bool = not-caught-fail(master_secret_75) in
                                                {6660}let l_396: label = (if v_1464 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {6661}let h_375: bitstring = (if v_1464 then catch-fail(hash(@8_tls_h,cur_log2_70)) else caught-fail) in
                                                {6662}let v_1465: bool = not-caught-fail(h_375) in
                                                {6663}let x_452: bitstring = (if v_1465 then (l_396,h_375) else caught-fail) in
                                                {6664}let client_hts_34: bitstring = (if v_1464 then catch-fail((if v_1465 then hmac(@8_tls_h,handshake_secret_34,x_452) else fail-any)) else caught-fail) in
                                                {6665}let v_1466: bool = not-caught-fail(client_hts_34) in
                                                {6666}let l_397: label = (if v_1466 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {6667}let h_376: bitstring = (if v_1466 then catch-fail(hash(@8_tls_h,cur_log2_70)) else caught-fail) in
                                                {6668}let v_1467: bool = not-caught-fail(h_376) in
                                                {6669}let x_453: bitstring = (if v_1467 then (l_397,h_376) else caught-fail) in
                                                {6670}let server_hts_34: bitstring = (if v_1466 then catch-fail((if v_1467 then hmac(@8_tls_h,handshake_secret_34,x_453) else fail-any)) else caught-fail) in
                                                {6671}let v_1468: bool = not-caught-fail(server_hts_34) in
                                                {6672}let l_398: label = (if v_1468 then tls13_key else caught-fail) in
                                                {6673}let h_377: bitstring = (if v_1468 then zero else caught-fail) in
                                                {6674}let x_454: bitstring = (if v_1468 then (l_398,h_377) else caught-fail) in
                                                {6675}let client_wkh_34: bitstring = (if v_1468 then catch-fail(hmac(@8_tls_h,client_hts_34,x_454)) else caught-fail) in
                                                {6676}let v_1469: bool = not-caught-fail(client_wkh_34) in
                                                {6677}let l_399: label = (if v_1469 then tls13_key else caught-fail) in
                                                {6678}let h_378: bitstring = (if v_1469 then zero else caught-fail) in
                                                {6679}let x_455: bitstring = (if v_1469 then (l_399,h_378) else caught-fail) in
                                                {6680}let server_wkh_34: bitstring = (if v_1469 then catch-fail(hmac(@8_tls_h,server_hts_34,x_455)) else caught-fail) in
                                                {6681}let v_1470: bool = not-caught-fail(server_wkh_34) in
                                                {6682}let l_400: label = (if v_1470 then tls13_finished else caught-fail) in
                                                {6683}let h_379: bitstring = (if v_1470 then zero else caught-fail) in
                                                {6684}let x_456: bitstring = (if v_1470 then (l_400,h_379) else caught-fail) in
                                                {6685}let client_fk_34: bitstring = (if v_1470 then catch-fail(hmac(@8_tls_h,client_hts_34,x_456)) else caught-fail) in
                                                {6686}let v_1471: bool = not-caught-fail(client_fk_34) in
                                                {6687}let l_401: label = (if v_1471 then tls13_finished else caught-fail) in
                                                {6688}let h_380: bitstring = (if v_1471 then zero else caught-fail) in
                                                {6689}let x_457: bitstring = (if v_1471 then (l_401,h_380) else caught-fail) in
                                                {6690}let server_fk_34: bitstring = (if v_1471 then catch-fail(hmac(@8_tls_h,server_hts_34,x_457)) else caught-fail) in
                                                {6691}let v_1472: bool = not-caught-fail(server_fk_34) in
                                                {6692}let (master_secret_76: bitstring,chk_41: aead_key,shk_40: aead_key,cfin_41: mac_key,sfin_40: mac_key) = (if v_1463 then (if v_1464 then (if v_1466 then (if v_1468 then (if v_1469 then (if v_1470 then (if v_1471 then (if v_1472 then (master_secret_75,client_wkh_34,server_wkh_34,client_fk_34,server_fk_34) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {6693}event Client_chk(id_client_5,chk_41);
                                                {6694}event Client_shk(id_client_5,shk_40);
                                                {6695}event Client_cfin(id_client_5,cfin_41);
                                                {6696}event Client_sfin(id_client_5,sfin_40);
                                                {6697}in(io, enc_ee_msg_33: bitstring);
                                                {6698}let ee_msg_38: msg = aead_dec(@8_tls_a,shk_40,0,zero,enc_ee_msg_33) in
                                                {6699}let EE(ech_ee_33: echExt,extra_ee_33: extraExt) = ee_msg_38 in
                                                {6700}let cur_log2_71: bitstring = (cur_log2_70,ee_msg_38) in
                                                {6701}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_20,sr_41,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_159,safe_psk_36,@8_comp_psk,master_secret_76,chk_41,0,shk_40,1,cfin_41,sfin_40,cur_log2_71)))
                                            )
                                            else
                                                {6702}out(io, illegal_parameter)
                                        )
                                        else
                                            {6703}out(io, illegal_parameter)
                                )
                                else
                                    {6704}out(io, unexpected_message)
                    )
                    else
                        {6705}let cur_log_24: bitstring = (zero,i_client_hello_17) in
                        {6706}let sh_modified_16: msg = SH(B32(sr24_5,zero8),mode_30) in
                        {6707}let cur_log_sh_16: bitstring = (cur_log_24,sh_modified_16) in
                        {6708}let transcript_ech_conf_16: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_16)) in
                        {6709}let v_1473: bool = not-caught-fail(transcript_ech_conf_16) in
                        {6710}let s_156: bitstring = (if v_1473 then zero else caught-fail) in
                        {6711}let k_155: bitstring = (if v_1473 then catch-fail(b32_2_b(get_random(i_client_hello_17))) else caught-fail) in
                        {6712}let v_1474: bool = not-caught-fail(k_155) in
                        {6713}let k_156: bitstring = (if v_1473 then catch-fail((if v_1474 then hmac(@8_backend_h,s_156,k_155) else fail-any)) else caught-fail) in
                        {6714}let v_1475: bool = not-caught-fail(k_156) in
                        {6715}let l_402: label = (if v_1475 then ech_accept_confirmation else caught-fail) in
                        {6716}let x_458: bitstring = (if v_1475 then (l_402,cur_log_sh_16) else caught-fail) in
                        {6717}let sr8_20: bytes8 = (if v_1473 then catch-fail(crop_into_bytes8((if v_1475 then hmac(@8_backend_h,k_156,x_458) else fail-any))) else caught-fail) in
                        {6718}let v_1476: bool = not-caught-fail(sr8_20) in
                        {6719}if (B32(sr24_5,sr8_16) = (if v_1473 then (if v_1476 then B32(sr24_5,sr8_20) else fail-any) else fail-any)) then
                        (
                            {6720}event ClientEchAcceptance(id_client_5,true);
                            {6721}let cur_log_25: bitstring = (zero,i_client_hello_17) in
                            {6722}let (x_459: bitstring,g_41: group) = i_kex_data_8 in
                            {6723}let (psk_offer_34: preSharedKey,id_offer_34: identityPsk,es_offer_34: bitstring,is_safe_offer_34: bool) = psk_data_28 in
                            {6724}event Client_PSKOffer(id_client_5,psk_offer_34,id_offer_34,is_safe_offer_34);
                            {6725}event Client_Rand_client(id_client_5,i_cr_9);
                            {6726}event Client_DH_client(id_client_5,dh_pub(g_41,x_459));
                            {6727}event Client_server_domain(id_client_5,backend_dom_1);
                            {6728}let SH(sr_42: bytes32,mode_38: params) = server_hello_4 in
                            {6729}event Client_Rand_server(id_client_5,sr_42);
                            {6730}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_41,gy_35: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_75: preSharedKeyExt) = mode_38 in
                            (
                                {6731}let cur_log2_72: bitstring = (cur_log_25,server_hello_4) in
                                {6732}event Client_DH_server(id_client_5,gy_35);
                                {6733}let v_1477: bool = (psk_ext_75 = empty_psk_ext) in
                                {6734}let psk_160: preSharedKey = (if v_1477 then NoPsk else caught-fail) in
                                {6735}let s_157: bitstring = (if v_1477 then zero else caught-fail) in
                                {6736}let k_157: bitstring = (if v_1477 then catch-fail(psk2b(psk_160)) else caught-fail) in
                                {6737}let v_1478: bool = not-caught-fail(k_157) in
                                {6738}let early_secret_108: bitstring = (if v_1477 then catch-fail((if v_1478 then hmac(@8_backend_h,s_157,k_157) else fail-any)) else caught-fail) in
                                {6739}let v_1479: bool = not-caught-fail(early_secret_108) in
                                {6740}let l_403: label = (if v_1479 then tls13_ext_res_binder else caught-fail) in
                                {6741}let m_142: bitstring = (if v_1479 then zero else caught-fail) in
                                {6742}let h_381: bitstring = (if v_1479 then catch-fail(hash(@8_backend_h,m_142)) else caught-fail) in
                                {6743}let v_1480: bool = not-caught-fail(h_381) in
                                {6744}let x_460: bitstring = (if v_1480 then (l_403,h_381) else caught-fail) in
                                {6745}let binder_key_72: bitstring = (if v_1479 then catch-fail((if v_1480 then hmac(@8_backend_h,early_secret_108,x_460) else fail-any)) else caught-fail) in
                                {6746}let v_1481: bool = not-caught-fail(binder_key_72) in
                                {6747}let v_1482: bitstring = (if v_1477 then catch-fail((if v_1479 then (if v_1481 then (early_secret_108,binder_key_72) else fail-any) else fail-any)) else caught-fail) in
                                {6748}let v_1483: bool = (not-caught-fail(v_1482) && success?(1-proj-2-tuple(v_1482))) in
                                {6749}let kb_72: mac_key = (if v_1483 then 2-proj-2-tuple(v_1482) else caught-fail) in
                                {6750}let es_106: bitstring = (if v_1483 then 1-proj-2-tuple(v_1482) else caught-fail) in
                                {6751}let v_1484: bitstring = (if not(v_1477) then catch-fail(psk_data_28) else caught-fail) in
                                {6752}let v_1485: bool = (not-caught-fail(v_1484) && success?(1-proj-4-tuple(v_1484))) in
                                {6753}let is_safe_62: bool = (if v_1485 then 4-proj-4-tuple(v_1484) else caught-fail) in
                                {6754}let es_107: bitstring = (if v_1485 then 3-proj-4-tuple(v_1484) else caught-fail) in
                                {6755}let id_72: identityPsk = (if v_1485 then 2-proj-4-tuple(v_1484) else caught-fail) in
                                {6756}let psk_161: preSharedKey = (if v_1485 then 1-proj-4-tuple(v_1484) else caught-fail) in
                                {6757}let (psk_162: preSharedKey,early_secret_109: bitstring,valid_34: bool,safe_psk_37: bool) = (if v_1477 then (if v_1483 then (NoPsk,es_106,true,false) else fail-any) else (if v_1485 then (psk_161,es_107,((psk_161 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_75)),is_safe_62) else fail-any)) in
                                {6758}event Client_PSKChoosen(id_client_5,psk_162,safe_psk_37);
                                {6759}if valid_34 then
                                (
                                    {6760}let gxy_70: element = catch-fail(dh_decap_fun(g_41,gy_35,x_459)) in
                                    {6761}let v_1486: bool = not-caught-fail(gxy_70) in
                                    {6762}new s_158[]: seed;
                                    {6763}let gxy_71: element = (if v_1486 then gxy_70 else dh_f(s_158)) in
                                    {6764}event Client_DH_gxy(id_client_5,gxy_71);
                                    {6765}let l_404: label = tls13_derived in
                                    {6766}let m_143: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                    {6767}let v_1487: bool = not-caught-fail(m_143) in
                                    {6768}let h_382: bitstring = (if v_1487 then catch-fail(hash(@8_backend_h,m_143)) else caught-fail) in
                                    {6769}let v_1488: bool = not-caught-fail(h_382) in
                                    {6770}let x_461: bitstring = (if v_1488 then (l_404,h_382) else caught-fail) in
                                    {6771}let extra_74: bitstring = catch-fail((if v_1487 then (if v_1488 then hmac(@8_backend_h,early_secret_109,x_461) else fail-any) else fail-any)) in
                                    {6772}let v_1489: bool = not-caught-fail(extra_74) in
                                    {6773}let handshake_secret_35: bitstring = (if v_1489 then hmac(@8_backend_h,extra_74,gxy_71) else fail-any) in
                                    {6774}let l_405: label = tls13_derived in
                                    {6775}let m_144: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                    {6776}let v_1490: bool = not-caught-fail(m_144) in
                                    {6777}let h_383: bitstring = (if v_1490 then catch-fail(hash(@8_backend_h,m_144)) else caught-fail) in
                                    {6778}let v_1491: bool = not-caught-fail(h_383) in
                                    {6779}let x_462: bitstring = (if v_1491 then (l_405,h_383) else caught-fail) in
                                    {6780}let extra_75: bitstring = catch-fail((if v_1490 then (if v_1491 then hmac(@8_backend_h,handshake_secret_35,x_462) else fail-any) else fail-any)) in
                                    {6781}let v_1492: bool = not-caught-fail(extra_75) in
                                    {6782}let k_158: bitstring = (if v_1492 then zero else caught-fail) in
                                    {6783}let master_secret_77: bitstring = (if v_1492 then catch-fail(hmac(@8_backend_h,handshake_secret_35,k_158)) else caught-fail) in
                                    {6784}let v_1493: bool = not-caught-fail(master_secret_77) in
                                    {6785}let l_406: label = (if v_1493 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {6786}let h_384: bitstring = (if v_1493 then catch-fail(hash(@8_backend_h,cur_log2_72)) else caught-fail) in
                                    {6787}let v_1494: bool = not-caught-fail(h_384) in
                                    {6788}let x_463: bitstring = (if v_1494 then (l_406,h_384) else caught-fail) in
                                    {6789}let client_hts_35: bitstring = (if v_1493 then catch-fail((if v_1494 then hmac(@8_backend_h,handshake_secret_35,x_463) else fail-any)) else caught-fail) in
                                    {6790}let v_1495: bool = not-caught-fail(client_hts_35) in
                                    {6791}let l_407: label = (if v_1495 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {6792}let h_385: bitstring = (if v_1495 then catch-fail(hash(@8_backend_h,cur_log2_72)) else caught-fail) in
                                    {6793}let v_1496: bool = not-caught-fail(h_385) in
                                    {6794}let x_464: bitstring = (if v_1496 then (l_407,h_385) else caught-fail) in
                                    {6795}let server_hts_35: bitstring = (if v_1495 then catch-fail((if v_1496 then hmac(@8_backend_h,handshake_secret_35,x_464) else fail-any)) else caught-fail) in
                                    {6796}let v_1497: bool = not-caught-fail(server_hts_35) in
                                    {6797}let l_408: label = (if v_1497 then tls13_key else caught-fail) in
                                    {6798}let h_386: bitstring = (if v_1497 then zero else caught-fail) in
                                    {6799}let x_465: bitstring = (if v_1497 then (l_408,h_386) else caught-fail) in
                                    {6800}let client_wkh_35: bitstring = (if v_1497 then catch-fail(hmac(@8_backend_h,client_hts_35,x_465)) else caught-fail) in
                                    {6801}let v_1498: bool = not-caught-fail(client_wkh_35) in
                                    {6802}let l_409: label = (if v_1498 then tls13_key else caught-fail) in
                                    {6803}let h_387: bitstring = (if v_1498 then zero else caught-fail) in
                                    {6804}let x_466: bitstring = (if v_1498 then (l_409,h_387) else caught-fail) in
                                    {6805}let server_wkh_35: bitstring = (if v_1498 then catch-fail(hmac(@8_backend_h,server_hts_35,x_466)) else caught-fail) in
                                    {6806}let v_1499: bool = not-caught-fail(server_wkh_35) in
                                    {6807}let l_410: label = (if v_1499 then tls13_finished else caught-fail) in
                                    {6808}let h_388: bitstring = (if v_1499 then zero else caught-fail) in
                                    {6809}let x_467: bitstring = (if v_1499 then (l_410,h_388) else caught-fail) in
                                    {6810}let client_fk_35: bitstring = (if v_1499 then catch-fail(hmac(@8_backend_h,client_hts_35,x_467)) else caught-fail) in
                                    {6811}let v_1500: bool = not-caught-fail(client_fk_35) in
                                    {6812}let l_411: label = (if v_1500 then tls13_finished else caught-fail) in
                                    {6813}let h_389: bitstring = (if v_1500 then zero else caught-fail) in
                                    {6814}let x_468: bitstring = (if v_1500 then (l_411,h_389) else caught-fail) in
                                    {6815}let server_fk_35: bitstring = (if v_1500 then catch-fail(hmac(@8_backend_h,server_hts_35,x_468)) else caught-fail) in
                                    {6816}let v_1501: bool = not-caught-fail(server_fk_35) in
                                    {6817}let (master_secret_78: bitstring,chk_42: aead_key,shk_41: aead_key,cfin_42: mac_key,sfin_41: mac_key) = (if v_1492 then (if v_1493 then (if v_1495 then (if v_1497 then (if v_1498 then (if v_1499 then (if v_1500 then (if v_1501 then (master_secret_77,client_wkh_35,server_wkh_35,client_fk_35,server_fk_35) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {6818}event Client_chk(id_client_5,chk_42);
                                    {6819}event Client_shk(id_client_5,shk_41);
                                    {6820}event Client_cfin(id_client_5,cfin_42);
                                    {6821}event Client_sfin(id_client_5,sfin_41);
                                    {6822}in(io, enc_ee_msg_34: bitstring);
                                    {6823}let ee_msg_39: msg = aead_dec(@8_backend_a,shk_41,0,zero,enc_ee_msg_34) in
                                    {6824}let EE(ech_ee_34: echExt,extra_ee_34: extraExt) = ee_msg_39 in
                                    {6825}let cur_log2_73: bitstring = (cur_log2_72,ee_msg_39) in
                                    {6826}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr_9,sr_42,@8_backend_h,@8_backend_a,c_dom_6,backend_dom_1,psk_162,safe_psk_37,@8_comp_psk,master_secret_78,chk_42,0,shk_41,1,cfin_42,sfin_41,cur_log2_73)))
                                )
                                else
                                    {6827}out(io, illegal_parameter)
                            )
                            else
                                {6828}out(io, illegal_parameter)
                        )
                        else
                            {6829}event ClientEchAcceptance(id_client_5,false);
                            {6830}let v_1502: bool = @8_use_grease in
                            {6831}let psk_163: preSharedKey = (if not(v_1502) then NoPsk else caught-fail) in
                            {6832}let s_159: bitstring = (if not(v_1502) then zero else caught-fail) in
                            {6833}let k_159: bitstring = (if not(v_1502) then catch-fail(psk2b(psk_163)) else caught-fail) in
                            {6834}let v_1503: bool = not-caught-fail(k_159) in
                            {6835}let early_secret_110: bitstring = (if not(v_1502) then catch-fail((if v_1503 then hmac(@8_tls_h,s_159,k_159) else fail-any)) else caught-fail) in
                            {6836}let v_1504: bool = not-caught-fail(early_secret_110) in
                            {6837}let l_412: label = (if v_1504 then tls13_ext_res_binder else caught-fail) in
                            {6838}let m_145: bitstring = (if v_1504 then zero else caught-fail) in
                            {6839}let h_390: bitstring = (if v_1504 then catch-fail(hash(@8_tls_h,m_145)) else caught-fail) in
                            {6840}let v_1505: bool = not-caught-fail(h_390) in
                            {6841}let x_469: bitstring = (if v_1505 then (l_412,h_390) else caught-fail) in
                            {6842}let binder_key_73: bitstring = (if v_1504 then catch-fail((if v_1505 then hmac(@8_tls_h,early_secret_110,x_469) else fail-any)) else caught-fail) in
                            {6843}let v_1506: bool = not-caught-fail(binder_key_73) in
                            {6844}let v_1507: bitstring = (if not(v_1502) then catch-fail((if v_1504 then (if v_1506 then (early_secret_110,binder_key_73) else fail-any) else fail-any)) else caught-fail) in
                            {6845}let v_1508: bool = (not-caught-fail(v_1507) && success?(1-proj-2-tuple(v_1507))) in
                            {6846}let kb_73: mac_key = (if v_1508 then 2-proj-2-tuple(v_1507) else caught-fail) in
                            {6847}let es'_3: bitstring = (if v_1508 then 1-proj-2-tuple(v_1507) else caught-fail) in
                            {6848}let psk_data'_31: bitstring = (if v_1502 then psk_data_28 else (if v_1508 then (NoPsk,zero,es'_3,false) else fail-any)) in
                            {6849}let cur_log_26: bitstring = (zero,o_client_hello_5) in
                            {6850}let (x_470: bitstring,g_42: group) = o_kex_data_8 in
                            {6851}let (psk_offer_35: preSharedKey,id_offer_35: identityPsk,es_offer_35: bitstring,is_safe_offer_35: bool) = psk_data'_31 in
                            {6852}event Client_PSKOffer(id_client_5,psk_offer_35,id_offer_35,is_safe_offer_35);
                            {6853}event Client_Rand_client(id_client_5,o_cr_11);
                            {6854}event Client_DH_client(id_client_5,dh_pub(g_42,x_470));
                            {6855}event Client_server_domain(id_client_5,o_dom_8);
                            {6856}let SH(sr_43: bytes32,mode_39: params) = server_hello_4 in
                            {6857}event Client_Rand_server(id_client_5,sr_43);
                            {6858}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_42,gy_36: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_76: preSharedKeyExt) = mode_39 in
                            (
                                {6859}let cur_log2_74: bitstring = (cur_log_26,server_hello_4) in
                                {6860}event Client_DH_server(id_client_5,gy_36);
                                {6861}let v_1509: bool = (psk_ext_76 = empty_psk_ext) in
                                {6862}let psk_164: preSharedKey = (if v_1509 then NoPsk else caught-fail) in
                                {6863}let s_160: bitstring = (if v_1509 then zero else caught-fail) in
                                {6864}let k_160: bitstring = (if v_1509 then catch-fail(psk2b(psk_164)) else caught-fail) in
                                {6865}let v_1510: bool = not-caught-fail(k_160) in
                                {6866}let early_secret_111: bitstring = (if v_1509 then catch-fail((if v_1510 then hmac(@8_tls_h,s_160,k_160) else fail-any)) else caught-fail) in
                                {6867}let v_1511: bool = not-caught-fail(early_secret_111) in
                                {6868}let l_413: label = (if v_1511 then tls13_ext_res_binder else caught-fail) in
                                {6869}let m_146: bitstring = (if v_1511 then zero else caught-fail) in
                                {6870}let h_391: bitstring = (if v_1511 then catch-fail(hash(@8_tls_h,m_146)) else caught-fail) in
                                {6871}let v_1512: bool = not-caught-fail(h_391) in
                                {6872}let x_471: bitstring = (if v_1512 then (l_413,h_391) else caught-fail) in
                                {6873}let binder_key_74: bitstring = (if v_1511 then catch-fail((if v_1512 then hmac(@8_tls_h,early_secret_111,x_471) else fail-any)) else caught-fail) in
                                {6874}let v_1513: bool = not-caught-fail(binder_key_74) in
                                {6875}let v_1514: bitstring = (if v_1509 then catch-fail((if v_1511 then (if v_1513 then (early_secret_111,binder_key_74) else fail-any) else fail-any)) else caught-fail) in
                                {6876}let v_1515: bool = (not-caught-fail(v_1514) && success?(1-proj-2-tuple(v_1514))) in
                                {6877}let kb_74: mac_key = (if v_1515 then 2-proj-2-tuple(v_1514) else caught-fail) in
                                {6878}let es_108: bitstring = (if v_1515 then 1-proj-2-tuple(v_1514) else caught-fail) in
                                {6879}let v_1516: bitstring = (if not(v_1509) then catch-fail(psk_data'_31) else caught-fail) in
                                {6880}let v_1517: bool = (not-caught-fail(v_1516) && success?(1-proj-4-tuple(v_1516))) in
                                {6881}let is_safe_63: bool = (if v_1517 then 4-proj-4-tuple(v_1516) else caught-fail) in
                                {6882}let es_109: bitstring = (if v_1517 then 3-proj-4-tuple(v_1516) else caught-fail) in
                                {6883}let id_73: identityPsk = (if v_1517 then 2-proj-4-tuple(v_1516) else caught-fail) in
                                {6884}let psk_165: preSharedKey = (if v_1517 then 1-proj-4-tuple(v_1516) else caught-fail) in
                                {6885}let (psk_166: preSharedKey,early_secret_112: bitstring,valid_35: bool,safe_psk_38: bool) = (if v_1509 then (if v_1515 then (NoPsk,es_108,true,false) else fail-any) else (if v_1517 then (psk_165,es_109,((psk_165 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_76)),is_safe_63) else fail-any)) in
                                {6886}event Client_PSKChoosen(id_client_5,psk_166,safe_psk_38);
                                {6887}if valid_35 then
                                (
                                    {6888}let gxy_72: element = catch-fail(dh_decap_fun(g_42,gy_36,x_470)) in
                                    {6889}let v_1518: bool = not-caught-fail(gxy_72) in
                                    {6890}new s_161[]: seed;
                                    {6891}let gxy_73: element = (if v_1518 then gxy_72 else dh_f(s_161)) in
                                    {6892}event Client_DH_gxy(id_client_5,gxy_73);
                                    {6893}let l_414: label = tls13_derived in
                                    {6894}let m_147: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                    {6895}let v_1519: bool = not-caught-fail(m_147) in
                                    {6896}let h_392: bitstring = (if v_1519 then catch-fail(hash(@8_tls_h,m_147)) else caught-fail) in
                                    {6897}let v_1520: bool = not-caught-fail(h_392) in
                                    {6898}let x_472: bitstring = (if v_1520 then (l_414,h_392) else caught-fail) in
                                    {6899}let extra_76: bitstring = catch-fail((if v_1519 then (if v_1520 then hmac(@8_tls_h,early_secret_112,x_472) else fail-any) else fail-any)) in
                                    {6900}let v_1521: bool = not-caught-fail(extra_76) in
                                    {6901}let handshake_secret_36: bitstring = (if v_1521 then hmac(@8_tls_h,extra_76,gxy_73) else fail-any) in
                                    {6902}let l_415: label = tls13_derived in
                                    {6903}let m_148: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                    {6904}let v_1522: bool = not-caught-fail(m_148) in
                                    {6905}let h_393: bitstring = (if v_1522 then catch-fail(hash(@8_tls_h,m_148)) else caught-fail) in
                                    {6906}let v_1523: bool = not-caught-fail(h_393) in
                                    {6907}let x_473: bitstring = (if v_1523 then (l_415,h_393) else caught-fail) in
                                    {6908}let extra_77: bitstring = catch-fail((if v_1522 then (if v_1523 then hmac(@8_tls_h,handshake_secret_36,x_473) else fail-any) else fail-any)) in
                                    {6909}let v_1524: bool = not-caught-fail(extra_77) in
                                    {6910}let k_161: bitstring = (if v_1524 then zero else caught-fail) in
                                    {6911}let master_secret_79: bitstring = (if v_1524 then catch-fail(hmac(@8_tls_h,handshake_secret_36,k_161)) else caught-fail) in
                                    {6912}let v_1525: bool = not-caught-fail(master_secret_79) in
                                    {6913}let l_416: label = (if v_1525 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {6914}let h_394: bitstring = (if v_1525 then catch-fail(hash(@8_tls_h,cur_log2_74)) else caught-fail) in
                                    {6915}let v_1526: bool = not-caught-fail(h_394) in
                                    {6916}let x_474: bitstring = (if v_1526 then (l_416,h_394) else caught-fail) in
                                    {6917}let client_hts_36: bitstring = (if v_1525 then catch-fail((if v_1526 then hmac(@8_tls_h,handshake_secret_36,x_474) else fail-any)) else caught-fail) in
                                    {6918}let v_1527: bool = not-caught-fail(client_hts_36) in
                                    {6919}let l_417: label = (if v_1527 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {6920}let h_395: bitstring = (if v_1527 then catch-fail(hash(@8_tls_h,cur_log2_74)) else caught-fail) in
                                    {6921}let v_1528: bool = not-caught-fail(h_395) in
                                    {6922}let x_475: bitstring = (if v_1528 then (l_417,h_395) else caught-fail) in
                                    {6923}let server_hts_36: bitstring = (if v_1527 then catch-fail((if v_1528 then hmac(@8_tls_h,handshake_secret_36,x_475) else fail-any)) else caught-fail) in
                                    {6924}let v_1529: bool = not-caught-fail(server_hts_36) in
                                    {6925}let l_418: label = (if v_1529 then tls13_key else caught-fail) in
                                    {6926}let h_396: bitstring = (if v_1529 then zero else caught-fail) in
                                    {6927}let x_476: bitstring = (if v_1529 then (l_418,h_396) else caught-fail) in
                                    {6928}let client_wkh_36: bitstring = (if v_1529 then catch-fail(hmac(@8_tls_h,client_hts_36,x_476)) else caught-fail) in
                                    {6929}let v_1530: bool = not-caught-fail(client_wkh_36) in
                                    {6930}let l_419: label = (if v_1530 then tls13_key else caught-fail) in
                                    {6931}let h_397: bitstring = (if v_1530 then zero else caught-fail) in
                                    {6932}let x_477: bitstring = (if v_1530 then (l_419,h_397) else caught-fail) in
                                    {6933}let server_wkh_36: bitstring = (if v_1530 then catch-fail(hmac(@8_tls_h,server_hts_36,x_477)) else caught-fail) in
                                    {6934}let v_1531: bool = not-caught-fail(server_wkh_36) in
                                    {6935}let l_420: label = (if v_1531 then tls13_finished else caught-fail) in
                                    {6936}let h_398: bitstring = (if v_1531 then zero else caught-fail) in
                                    {6937}let x_478: bitstring = (if v_1531 then (l_420,h_398) else caught-fail) in
                                    {6938}let client_fk_36: bitstring = (if v_1531 then catch-fail(hmac(@8_tls_h,client_hts_36,x_478)) else caught-fail) in
                                    {6939}let v_1532: bool = not-caught-fail(client_fk_36) in
                                    {6940}let l_421: label = (if v_1532 then tls13_finished else caught-fail) in
                                    {6941}let h_399: bitstring = (if v_1532 then zero else caught-fail) in
                                    {6942}let x_479: bitstring = (if v_1532 then (l_421,h_399) else caught-fail) in
                                    {6943}let server_fk_36: bitstring = (if v_1532 then catch-fail(hmac(@8_tls_h,server_hts_36,x_479)) else caught-fail) in
                                    {6944}let v_1533: bool = not-caught-fail(server_fk_36) in
                                    {6945}let (master_secret_80: bitstring,chk_43: aead_key,shk_42: aead_key,cfin_43: mac_key,sfin_42: mac_key) = (if v_1524 then (if v_1525 then (if v_1527 then (if v_1529 then (if v_1530 then (if v_1531 then (if v_1532 then (if v_1533 then (master_secret_79,client_wkh_36,server_wkh_36,client_fk_36,server_fk_36) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {6946}event Client_chk(id_client_5,chk_43);
                                    {6947}event Client_shk(id_client_5,shk_42);
                                    {6948}event Client_cfin(id_client_5,cfin_43);
                                    {6949}event Client_sfin(id_client_5,sfin_42);
                                    {6950}in(io, enc_ee_msg_35: bitstring);
                                    {6951}let ee_msg_40: msg = aead_dec(@8_tls_a,shk_42,0,zero,enc_ee_msg_35) in
                                    {6952}let EE(ech_ee_35: echExt,extra_ee_35: extraExt) = ee_msg_40 in
                                    {6953}let cur_log2_75: bitstring = (cur_log2_74,ee_msg_40) in
                                    {6954}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(o_cr_11,sr_43,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_166,safe_psk_38,@8_comp_psk,master_secret_80,chk_43,0,shk_42,1,cfin_43,sfin_42,cur_log2_75)))
                                )
                                else
                                    {6955}out(io, illegal_parameter)
                            )
                            else
                                {6956}out(io, illegal_parameter)
                )
                else
                    {6957}out(io, unexpected_message)
            )
        )
        else
            {8440}get pre_shared_keys(c_dom'_11: domain,=dom_psk_1,=h_psk_1,id_74: identityPsk,psk_167: preSharedKey,idP_13: idProc,is_safe_64: bool) in
            {6958}event Selected_one_time_used_psk(id_client_5,psk_167,is_safe_64);
            {6959}event Selected_psk(c_dom_6,c_dom'_11,idP_13,is_safe_64);
            {6960}event Selected_psk_no_missmatch(id_client_5,dom_psk_1,h_psk_1,psk_167,id_74);
            {6961}event Selected_psk_with_ID(c_dom_6,c_dom'_11,id_74,idP_13,is_safe_64);
            {6962}let v_1534: bitstring = (id_74,psk_167,is_safe_64) in
            {6963}let v_1535: bool = success?(1-proj-3-tuple(v_1534)) in
            {6964}let is_safe_65: bool = (if v_1535 then 3-proj-3-tuple(v_1534) else caught-fail) in
            {6965}let psk_168: preSharedKey = (if v_1535 then 2-proj-3-tuple(v_1534) else caught-fail) in
            {6966}let id_75: identityPsk = (if v_1535 then 1-proj-3-tuple(v_1534) else caught-fail) in
            {6967}let offer_21: params = (if v_1535 then nego(TLS13,h_psk_1,a_psk_1,kex_ext_psk_1,SNI(dom_psk_1),ech_inner_or_grease_1,extra_psk_1,trunc_client_psk_ext(id_75)) else caught-fail) in
            {6968}let cur_log'_21: bitstring = (if v_1535 then (cur_log_22,CH(cr_psk_1,offer_21)) else caught-fail) in
            {6969}let s_162: bitstring = (if v_1535 then zero else caught-fail) in
            {6970}let k_162: bitstring = (if v_1535 then catch-fail(psk2b(psk_168)) else caught-fail) in
            {6971}let v_1536: bool = not-caught-fail(k_162) in
            {6972}let early_secret_113: bitstring = (if v_1535 then catch-fail((if v_1536 then hmac(h_psk_1,s_162,k_162) else fail-any)) else caught-fail) in
            {6973}let v_1537: bool = not-caught-fail(early_secret_113) in
            {6974}let l_422: label = (if v_1537 then tls13_ext_res_binder else caught-fail) in
            {6975}let m_149: bitstring = (if v_1537 then zero else caught-fail) in
            {6976}let h_400: bitstring = (if v_1537 then catch-fail(hash(h_psk_1,m_149)) else caught-fail) in
            {6977}let v_1538: bool = not-caught-fail(h_400) in
            {6978}let x_480: bitstring = (if v_1538 then (l_422,h_400) else caught-fail) in
            {6979}let binder_key_75: bitstring = (if v_1537 then catch-fail((if v_1538 then hmac(h_psk_1,early_secret_113,x_480) else fail-any)) else caught-fail) in
            {6980}let v_1539: bool = not-caught-fail(binder_key_75) in
            {6981}let v_1540: bitstring = (if v_1535 then catch-fail((if v_1537 then (if v_1539 then (early_secret_113,binder_key_75) else fail-any) else fail-any)) else caught-fail) in
            {6982}let v_1541: bool = (not-caught-fail(v_1540) && success?(1-proj-2-tuple(v_1540))) in
            {6983}let kb_75: mac_key = (if v_1541 then 2-proj-2-tuple(v_1540) else caught-fail) in
            {6984}let es_110: bitstring = (if v_1541 then 1-proj-2-tuple(v_1540) else caught-fail) in
            {6985}let binders_20: bitstring = (if v_1541 then catch-fail(hmac(h_psk_1,kb_75,cur_log'_21)) else caught-fail) in
            {6986}let v_1542: bool = not-caught-fail(binders_20) in
            {6987}let v_1543: bitstring = catch-fail((if v_1535 then (if v_1541 then (if v_1542 then (client_psk_ext(id_75,binders_20),(psk_168,id_75,es_110,is_safe_65)) else fail-any) else fail-any) else fail-any)) in
            {6988}let v_1544: bool = (not-caught-fail(v_1543) && success?(1-proj-2-tuple(v_1543))) in
            {6989}let psk_data_36: bitstring = (if v_1544 then 2-proj-2-tuple(v_1543) else caught-fail) in
            {6990}let psk_ext_77: preSharedKeyExt = (if v_1544 then 1-proj-2-tuple(v_1543) else caught-fail) in
            {6991}let i_offer_16: params = (if v_1544 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_5,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_77) else caught-fail) in
            {6992}let i_client_hello_21: msg = (if v_1544 then CH(i_cr_8,i_offer_16) else caught-fail) in
            {6993}let v_1545: bool = (if v_1544 then catch-fail(@8_use_grease) else caught-fail) in
            {6994}let o_offer_36: params = (if v_1545 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),ech_inner_or_grease_1,empty_extra_ext,psk_ext_77) else caught-fail) in
            {6995}new fake_id_20[]: identityPsk;
            {6996}new fake_binder_20[]: bitstring;
            {6997}let o_psk_ext_20: preSharedKeyExt = (if is-false(v_1545) then (if @8_use_psk then client_psk_ext(fake_id_20,fake_binder_20) else empty_psk_ext) else caught-fail) in
            {6998}let o_ech_ext_ADD_16: echExt = (if is-false(v_1545) then ECHClientHelloOuter(ech_h_13,ech_a_13,config_id_13,enc_6,zero) else caught-fail) in
            {6999}let o_offer_ADD_16: params = (if is-false(v_1545) then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),o_ech_ext_ADD_16,empty_extra_ext,o_psk_ext_20) else caught-fail) in
            {7000}let o_client_hello_ADD_16: msg = (if is-false(v_1545) then CH(o_cr_10,o_offer_ADD_16) else caught-fail) in
            {7001}let n_18: nat = (if is-false(v_1545) then 1 else caught-fail) in
            {7002}let v_1546: hpkeContext = (if is-false(v_1545) then catch-fail(context_2) else caught-fail) in
            {7003}let v_1547: bool = (not-caught-fail(v_1546) && ((S =nf 1-proj-hpke_context(v_1546)) && success?(1-proj-hpke_context(v_1546)))) in
            {7004}let base_nonce_21: bitstring = (if v_1547 then 3-proj-hpke_context(v_1546) else caught-fail) in
            {7005}let key_21: aead_key = (if v_1547 then 2-proj-hpke_context(v_1546) else caught-fail) in
            {7006}let payload_22: bitstring = (if is-false(v_1545) then catch-fail((if v_1547 then aead_enc(ech_a_13,key_21,(base_nonce_21,n_18),o_client_hello_ADD_16,i_client_hello_21) else fail-any)) else caught-fail) in
            {7007}let v_1548: bool = not-caught-fail(payload_22) in
            {7008}let o_ech_ext_20: echExt = (if v_1548 then ECHClientHelloOuter(ech_h_13,ech_a_13,config_id_13,enc_6,payload_22) else caught-fail) in
            {7009}let o_offer_37: params = (if v_1548 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),o_ech_ext_20,empty_extra_ext,o_psk_ext_20) else caught-fail) in
            {7010}let (o_client_hello_6: msg,i_client_hello_22: msg,o_cr_14: bytes32,i_cr_11: bytes32,o_kex_data_10: bitstring,i_kex_data_10: bitstring,o_psk_ext_21: preSharedKeyExt,psk_data_37: bitstring,o_ech_ext_21: echExt) = (if v_1544 then (if undo-catch-fail(v_1545) then (CH(o_cr_10,o_offer_36),CH(o_cr_10,o_offer_36),o_cr_10,o_cr_10,o_kex_data_7,o_kex_data_7,psk_ext_77,psk_data_36,ech_inner_or_grease_1) else (if v_1548 then (CH(o_cr_10,o_offer_37),i_client_hello_21,o_cr_10,i_cr_8,o_kex_data_7,i_kex_data_7,o_psk_ext_20,psk_data_36,o_ech_ext_20) else fail-any)) else fail-any) in
            {7011}out(io, o_client_hello_6);
            {7012}let (psk_169: preSharedKey,id_76: identityPsk,es_111: bitstring,safe_4: bool) = psk_data_37 in
            (
                {7013}if (false && (not(@8_use_grease) && (psk_169 ≠ NoPsk))) then
                {7014}let client_hello_5: bitstring = (zero,i_client_hello_22) in
                {7015}let l_423: label = tls13_client_early_traffic_secret in
                {7016}let h_401: bitstring = catch-fail(hash(@8_backend_h,client_hello_5)) in
                {7017}let v_1549: bool = not-caught-fail(h_401) in
                {7018}let x_481: bitstring = (if v_1549 then (l_423,h_401) else caught-fail) in
                {7019}let atsc0_5: bitstring = catch-fail((if v_1549 then hmac(@8_backend_h,es_111,x_481) else fail-any)) in
                {7020}let v_1550: bool = not-caught-fail(atsc0_5) in
                {7021}let l_424: label = (if v_1550 then tls13_key else caught-fail) in
                {7022}let h_402: bitstring = (if v_1550 then zero else caught-fail) in
                {7023}let x_482: bitstring = (if v_1550 then (l_424,h_402) else caught-fail) in
                {7024}let kc0_5: bitstring = (if v_1550 then catch-fail(hmac(@8_backend_h,atsc0_5,x_482)) else caught-fail) in
                {7025}let v_1551: bool = not-caught-fail(kc0_5) in
                {7026}let l_425: label = (if v_1551 then tls13_early_exporter_master_secret else caught-fail) in
                {7027}let h_403: bitstring = (if v_1551 then catch-fail(hash(@8_backend_h,client_hello_5)) else caught-fail) in
                {7028}let v_1552: bool = not-caught-fail(h_403) in
                {7029}let x_483: bitstring = (if v_1552 then (l_425,h_403) else caught-fail) in
                {7030}let ems0_10: bitstring = (if v_1551 then catch-fail((if v_1552 then hmac(@8_backend_h,es_111,x_483) else fail-any)) else caught-fail) in
                {7031}let v_1553: bool = not-caught-fail(ems0_10) in
                {7032}let (wkc0_5: aead_key,ems0_11: bitstring) = (if v_1550 then (if v_1551 then (if v_1553 then (kc0_5,ems0_10) else fail-any) else fail-any) else fail-any) in
                {7033}!
                {7034}in(io, (i_5: nat,ad_5: bitstring));
                {7035}if is_nat(i_5) then
                {7036}new msg_ed_4[]: bitstring;
                {7037}let enc_ed_4: bitstring = aead_enc(@8_backend_a,wkc0_5,i_5,ad_5,msg_ed_4) in
                {7038}new st_14: stamp;
                {7039}event ClientSequenceClient0RTTDataWriteKey(id_client_5,st_14,i_5);
                {7040}event ClientSends0(id_client_5,i_cr_11,psk_169,i_5,ad_5,msg_ed_4);
                {7041}out(io, enc_ed_4)
            ) | (
                {7042}in(io, server_hello_5: msg);
                {7043}let SH(B32(sr24_6: bytes24,sr8_21: bytes8),mode_40: params) = server_hello_5 in
                (
                    {7044}if (false && (B32(sr24_6,sr8_21) = B32(HRR24,HRR8))) then
                    (
                        {7045}if (send_kex_1 ≠ true) then
                        {7046}let nego(=TLS13,h_alg_19: hash_alg,a_alg_17: aead_alg,hrr_kex_ext(g_43: group),=empty_sni_ext,ech_ext_17: echExt,=empty_extra_ext,=empty_psk_ext) = mode_40 in
                        {7047}let v_1554: bool = (ech_ext_17 = empty_ech_ext) in
                        {7048}let hrr_mode_9: params = (if not(v_1554) then nego(TLS13,@8_backend_h,@8_backend_a,hrr_kex_ext(@8_backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) else caught-fail) in
                        {7049}let hrr_5: msg = (if not(v_1554) then SH(B32(HRR24,HRR8),hrr_mode_9) else caught-fail) in
                        {7050}let cur_log_27: bitstring = (if not(v_1554) then ((zero,i_client_hello_22),hrr_5) else caught-fail) in
                        {7051}let transcript_hrr_ech_conf_5: bitstring = (if not(v_1554) then catch-fail(hash(@8_backend_h,cur_log_27)) else caught-fail) in
                        {7052}let v_1555: bool = not-caught-fail(transcript_hrr_ech_conf_5) in
                        {7053}let s_163: bitstring = (if v_1555 then zero else caught-fail) in
                        {7054}let k_163: bitstring = (if v_1555 then catch-fail(b32_2_b(get_random(i_client_hello_22))) else caught-fail) in
                        {7055}let v_1556: bool = not-caught-fail(k_163) in
                        {7056}let k_164: bitstring = (if v_1555 then catch-fail((if v_1556 then hmac(@8_backend_h,s_163,k_163) else fail-any)) else caught-fail) in
                        {7057}let v_1557: bool = not-caught-fail(k_164) in
                        {7058}let l_426: label = (if v_1557 then hrr_ech_accept_confirmation else caught-fail) in
                        {7059}let x_484: bitstring = (if v_1557 then (l_426,cur_log_27) else caught-fail) in
                        {7060}let is_ech_accepted_4: bool = (if v_1554 then false else (if (ech_ext_17 = ECHHelloRetryRequest((if v_1555 then crop_into_bytes8((if v_1557 then hmac(@8_backend_h,k_164,x_484) else fail-any)) else fail-any))) then true else false)) in
                        {7061}event ClientEchAcceptance(id_client_5,is_ech_accepted_4);
                        {7062}if is_ech_accepted_4 then
                        (
                            {7063}let cur_log_IN1_HRR_4: bitstring = ((zero,i_client_hello_22),server_hello_5) in
                            {7064}let ech_config(config_id_16: configId,ech_g_16: group,pkR_18: element,o_dom_12: domain,ech_h_16: hash_alg,ech_a_16: aead_alg) = ech_conf_2 in
                            {7065}let send_key_share_12: bool = true in
                            {7066}new s_164[]: seed;
                            {7067}let gx_41: element = dh_pub(@8_backend_g,dh_k(s_164)) in
                            {7068}let v_1558: bitstring = (dh_k(s_164),gx_41) in
                            {7069}let v_1559: bool = success?(1-proj-2-tuple(v_1558)) in
                            {7070}let gx_42: element = (if v_1559 then 2-proj-2-tuple(v_1558) else caught-fail) in
                            {7071}let x_485: bitstring = (if v_1559 then 1-proj-2-tuple(v_1558) else caught-fail) in
                            {7072}let kex_16: kex_alg = (if v_1559 then (if send_key_share_12 then DHE_kex(@8_backend_g,gx_42) else DHE_group(@8_backend_g)) else caught-fail) in
                            {7073}let (i_kex_ext_7: keyShareExt,i_kex_data_11: bitstring) = (if v_1559 then (client_kex_ext(kex_16),(x_485,@8_backend_g)) else fail-any) in
                            {7074}let send_key_share_13: bool = true in
                            {7075}new s_165[]: seed;
                            {7076}let gx_43: element = dh_pub(@8_tls_g,dh_k(s_165)) in
                            {7077}let v_1560: bitstring = (dh_k(s_165),gx_43) in
                            {7078}let v_1561: bool = success?(1-proj-2-tuple(v_1560)) in
                            {7079}let gx_44: element = (if v_1561 then 2-proj-2-tuple(v_1560) else caught-fail) in
                            {7080}let x_486: bitstring = (if v_1561 then 1-proj-2-tuple(v_1560) else caught-fail) in
                            {7081}let kex_17: kex_alg = (if v_1561 then (if send_key_share_13 then DHE_kex(@8_tls_g,gx_44) else DHE_group(@8_tls_g)) else caught-fail) in
                            {7082}let (o_kex_ext_10: keyShareExt,o_kex_data_11: bitstring) = (if v_1561 then (client_kex_ext(kex_17),(x_486,@8_tls_g)) else fail-any) in
                            {7083}new rand24_17[]: bytes24;
                            {7084}new rand8_17[]: bytes8;
                            {7085}let i_cr_12: bytes32 = B32(rand24_17,rand8_17) in
                            {7086}new rand24_18[]: bytes24;
                            {7087}new rand8_18[]: bytes8;
                            {7088}let o_cr_15: bytes32 = B32(rand24_18,rand8_18) in
                            {7089}let ech_ext_18: echExt = ECHClientHelloInner in
                            {7090}if @8_use_psk then
                            (
                                {7091}let (psk_170: preSharedKey,id_77: identityPsk,old_es_10: bitstring,is_safe_66: bool) = psk_data_37 in
                                (
                                    {7092}let offer_22: params = nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_7,SNI(backend_dom_1),ech_ext_18,@8_i_extra_ext,trunc_client_psk_ext(id_77)) in
                                    {7093}let cur_log'_22: bitstring = (cur_log_IN1_HRR_4,CH(i_cr_12,offer_22)) in
                                    {7094}let s_166: bitstring = zero in
                                    {7095}let k_165: bitstring = catch-fail(psk2b(psk_170)) in
                                    {7096}let v_1562: bool = not-caught-fail(k_165) in
                                    {7097}let early_secret_114: bitstring = catch-fail((if v_1562 then hmac(@8_backend_h,s_166,k_165) else fail-any)) in
                                    {7098}let v_1563: bool = not-caught-fail(early_secret_114) in
                                    {7099}let l_427: label = (if v_1563 then tls13_ext_res_binder else caught-fail) in
                                    {7100}let m_150: bitstring = (if v_1563 then zero else caught-fail) in
                                    {7101}let h_404: bitstring = (if v_1563 then catch-fail(hash(@8_backend_h,m_150)) else caught-fail) in
                                    {7102}let v_1564: bool = not-caught-fail(h_404) in
                                    {7103}let x_487: bitstring = (if v_1564 then (l_427,h_404) else caught-fail) in
                                    {7104}let binder_key_76: bitstring = (if v_1563 then catch-fail((if v_1564 then hmac(@8_backend_h,early_secret_114,x_487) else fail-any)) else caught-fail) in
                                    {7105}let v_1565: bool = not-caught-fail(binder_key_76) in
                                    {7106}let v_1566: bitstring = catch-fail((if v_1563 then (if v_1565 then (early_secret_114,binder_key_76) else fail-any) else fail-any)) in
                                    {7107}let v_1567: bool = (not-caught-fail(v_1566) && success?(1-proj-2-tuple(v_1566))) in
                                    {7108}let kb_76: mac_key = (if v_1567 then 2-proj-2-tuple(v_1566) else caught-fail) in
                                    {7109}let es_112: bitstring = (if v_1567 then 1-proj-2-tuple(v_1566) else caught-fail) in
                                    {7110}let binders_21: bitstring = (if v_1567 then catch-fail(hmac(@8_backend_h,kb_76,cur_log'_22)) else caught-fail) in
                                    {7111}let v_1568: bool = not-caught-fail(binders_21) in
                                    {7112}let v_1569: bitstring = catch-fail((if v_1567 then (if v_1568 then (client_psk_ext(id_77,binders_21),(psk_170,id_77,es_112,is_safe_66)) else fail-any) else fail-any)) in
                                    {7113}let v_1570: bool = (not-caught-fail(v_1569) && success?(1-proj-2-tuple(v_1569))) in
                                    {7114}let psk_data_38: bitstring = (if v_1570 then 2-proj-2-tuple(v_1569) else caught-fail) in
                                    {7115}let psk_ext_78: preSharedKeyExt = (if v_1570 then 1-proj-2-tuple(v_1569) else caught-fail) in
                                    {7116}let i_offer_17: params = (if v_1570 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_7,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_78) else caught-fail) in
                                    {7117}let i_client_hello_23: msg = (if v_1570 then CH(i_cr_12,i_offer_17) else caught-fail) in
                                    {7118}new fake_id_21[]: identityPsk;
                                    {7119}new fake_binder_21[]: bitstring;
                                    {7120}let o_psk_ext_22: preSharedKeyExt = (if v_1570 then (if @8_use_psk then client_psk_ext(fake_id_21,fake_binder_21) else empty_psk_ext) else caught-fail) in
                                    {7121}let o_ech_ext_ADD_17: echExt = (if v_1570 then ECHClientHelloOuter(ech_h_16,ech_a_16,config_id_16,zero,zero) else caught-fail) in
                                    {7122}let o_offer_ADD_17: params = (if v_1570 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_10,SNI(o_dom_12),o_ech_ext_ADD_17,empty_extra_ext,o_psk_ext_22) else caught-fail) in
                                    {7123}let o_client_hello_ADD_17: msg = (if v_1570 then CH(o_cr_15,o_offer_ADD_17) else caught-fail) in
                                    {7124}let n_19: nat = (if v_1570 then 2 else caught-fail) in
                                    {7125}let v_1571: hpkeContext = (if v_1570 then catch-fail(context_2) else caught-fail) in
                                    {7126}let v_1572: bool = (not-caught-fail(v_1571) && ((S =nf 1-proj-hpke_context(v_1571)) && success?(1-proj-hpke_context(v_1571)))) in
                                    {7127}let base_nonce_22: bitstring = (if v_1572 then 3-proj-hpke_context(v_1571) else caught-fail) in
                                    {7128}let key_22: aead_key = (if v_1572 then 2-proj-hpke_context(v_1571) else caught-fail) in
                                    {7129}let payload_23: bitstring = (if v_1570 then catch-fail((if v_1572 then aead_enc(ech_a_16,key_22,(base_nonce_22,n_19),o_client_hello_ADD_17,i_client_hello_23) else fail-any)) else caught-fail) in
                                    {7130}let v_1573: bool = not-caught-fail(payload_23) in
                                    {7131}let o_ech_ext_22: echExt = (if v_1573 then ECHClientHelloOuter(ech_h_16,ech_a_16,config_id_16,zero,payload_23) else caught-fail) in
                                    {7132}let o_offer_38: params = (if v_1573 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_10,SNI(o_dom_12),o_ech_ext_22,empty_extra_ext,o_psk_ext_22) else caught-fail) in
                                    {7133}let (o_client_hello'_12: msg,i_client_hello'_13: msg,i_cr'_12: bytes32,i_kex_data'_12: bitstring,psk_data'_32: bitstring) = (if v_1570 then (if v_1573 then (CH(o_cr_15,o_offer_38),i_client_hello_23,i_cr_12,i_kex_data_11,psk_data_38) else fail-any) else fail-any) in
                                    {7134}out(io, o_client_hello'_12);
                                    {7135}in(io, server_hello'_28: msg);
                                    {7136}let SH(B32(sr24'_12: bytes24,sr8'_12: bytes8),params'_12: params) = server_hello'_28 in
                                    {7137}let cur_log_IN1_HRR_IN2_12: bitstring = (cur_log_IN1_HRR_4,i_client_hello'_13) in
                                    {7138}let sh_modified_17: msg = SH(B32(sr24'_12,zero8),params'_12) in
                                    {7139}let cur_log_sh_17: bitstring = (cur_log_IN1_HRR_IN2_12,sh_modified_17) in
                                    {7140}let transcript_ech_conf_17: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_17)) in
                                    {7141}let v_1574: bool = not-caught-fail(transcript_ech_conf_17) in
                                    {7142}let s_167: bitstring = (if v_1574 then zero else caught-fail) in
                                    {7143}let k_166: bitstring = (if v_1574 then catch-fail(b32_2_b(get_random(i_client_hello'_13))) else caught-fail) in
                                    {7144}let v_1575: bool = not-caught-fail(k_166) in
                                    {7145}let k_167: bitstring = (if v_1574 then catch-fail((if v_1575 then hmac(@8_backend_h,s_167,k_166) else fail-any)) else caught-fail) in
                                    {7146}let v_1576: bool = not-caught-fail(k_167) in
                                    {7147}let l_428: label = (if v_1576 then ech_accept_confirmation else caught-fail) in
                                    {7148}let x_488: bitstring = (if v_1576 then (l_428,cur_log_sh_17) else caught-fail) in
                                    {7149}let sr8_22: bytes8 = (if v_1574 then catch-fail(crop_into_bytes8((if v_1576 then hmac(@8_backend_h,k_167,x_488) else fail-any))) else caught-fail) in
                                    {7150}let v_1577: bool = not-caught-fail(sr8_22) in
                                    {7151}if (B32(sr24'_12,sr8'_12) = (if v_1574 then (if v_1577 then B32(sr24'_12,sr8_22) else fail-any) else fail-any)) then
                                    {7152}let (x_489: bitstring,g_44: group) = i_kex_data'_12 in
                                    {7153}let (psk_offer_36: preSharedKey,id_offer_36: identityPsk,es_offer_36: bitstring,is_safe_offer_36: bool) = psk_data'_32 in
                                    {7154}event Client_PSKOffer(id_client_5,psk_offer_36,id_offer_36,is_safe_offer_36);
                                    {7155}event Client_Rand_client(id_client_5,i_cr'_12);
                                    {7156}event Client_DH_client(id_client_5,dh_pub(g_44,x_489));
                                    {7157}event Client_server_domain(id_client_5,backend_dom_1);
                                    {7158}let SH(sr_44: bytes32,mode_41: params) = server_hello'_28 in
                                    {7159}event Client_Rand_server(id_client_5,sr_44);
                                    {7160}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_44,gy_37: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_79: preSharedKeyExt) = mode_41 in
                                    (
                                        {7161}let cur_log2_76: bitstring = (cur_log_IN1_HRR_IN2_12,server_hello'_28) in
                                        {7162}event Client_DH_server(id_client_5,gy_37);
                                        {7163}let v_1578: bool = (psk_ext_79 = empty_psk_ext) in
                                        {7164}let psk_171: preSharedKey = (if v_1578 then NoPsk else caught-fail) in
                                        {7165}let s_168: bitstring = (if v_1578 then zero else caught-fail) in
                                        {7166}let k_168: bitstring = (if v_1578 then catch-fail(psk2b(psk_171)) else caught-fail) in
                                        {7167}let v_1579: bool = not-caught-fail(k_168) in
                                        {7168}let early_secret_115: bitstring = (if v_1578 then catch-fail((if v_1579 then hmac(@8_backend_h,s_168,k_168) else fail-any)) else caught-fail) in
                                        {7169}let v_1580: bool = not-caught-fail(early_secret_115) in
                                        {7170}let l_429: label = (if v_1580 then tls13_ext_res_binder else caught-fail) in
                                        {7171}let m_151: bitstring = (if v_1580 then zero else caught-fail) in
                                        {7172}let h_405: bitstring = (if v_1580 then catch-fail(hash(@8_backend_h,m_151)) else caught-fail) in
                                        {7173}let v_1581: bool = not-caught-fail(h_405) in
                                        {7174}let x_490: bitstring = (if v_1581 then (l_429,h_405) else caught-fail) in
                                        {7175}let binder_key_77: bitstring = (if v_1580 then catch-fail((if v_1581 then hmac(@8_backend_h,early_secret_115,x_490) else fail-any)) else caught-fail) in
                                        {7176}let v_1582: bool = not-caught-fail(binder_key_77) in
                                        {7177}let v_1583: bitstring = (if v_1578 then catch-fail((if v_1580 then (if v_1582 then (early_secret_115,binder_key_77) else fail-any) else fail-any)) else caught-fail) in
                                        {7178}let v_1584: bool = (not-caught-fail(v_1583) && success?(1-proj-2-tuple(v_1583))) in
                                        {7179}let kb_77: mac_key = (if v_1584 then 2-proj-2-tuple(v_1583) else caught-fail) in
                                        {7180}let es_113: bitstring = (if v_1584 then 1-proj-2-tuple(v_1583) else caught-fail) in
                                        {7181}let v_1585: bitstring = (if not(v_1578) then catch-fail(psk_data'_32) else caught-fail) in
                                        {7182}let v_1586: bool = (not-caught-fail(v_1585) && success?(1-proj-4-tuple(v_1585))) in
                                        {7183}let is_safe_67: bool = (if v_1586 then 4-proj-4-tuple(v_1585) else caught-fail) in
                                        {7184}let es_114: bitstring = (if v_1586 then 3-proj-4-tuple(v_1585) else caught-fail) in
                                        {7185}let id_78: identityPsk = (if v_1586 then 2-proj-4-tuple(v_1585) else caught-fail) in
                                        {7186}let psk_172: preSharedKey = (if v_1586 then 1-proj-4-tuple(v_1585) else caught-fail) in
                                        {7187}let (psk_173: preSharedKey,early_secret_116: bitstring,valid_36: bool,safe_psk_39: bool) = (if v_1578 then (if v_1584 then (NoPsk,es_113,true,false) else fail-any) else (if v_1586 then (psk_172,es_114,((psk_172 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_79)),is_safe_67) else fail-any)) in
                                        {7188}event Client_PSKChoosen(id_client_5,psk_173,safe_psk_39);
                                        {7189}if valid_36 then
                                        (
                                            {7190}let gxy_74: element = catch-fail(dh_decap_fun(g_44,gy_37,x_489)) in
                                            {7191}let v_1587: bool = not-caught-fail(gxy_74) in
                                            {7192}new s_169[]: seed;
                                            {7193}let gxy_75: element = (if v_1587 then gxy_74 else dh_f(s_169)) in
                                            {7194}event Client_DH_gxy(id_client_5,gxy_75);
                                            {7195}let l_430: label = tls13_derived in
                                            {7196}let m_152: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {7197}let v_1588: bool = not-caught-fail(m_152) in
                                            {7198}let h_406: bitstring = (if v_1588 then catch-fail(hash(@8_backend_h,m_152)) else caught-fail) in
                                            {7199}let v_1589: bool = not-caught-fail(h_406) in
                                            {7200}let x_491: bitstring = (if v_1589 then (l_430,h_406) else caught-fail) in
                                            {7201}let extra_78: bitstring = catch-fail((if v_1588 then (if v_1589 then hmac(@8_backend_h,early_secret_116,x_491) else fail-any) else fail-any)) in
                                            {7202}let v_1590: bool = not-caught-fail(extra_78) in
                                            {7203}let handshake_secret_37: bitstring = (if v_1590 then hmac(@8_backend_h,extra_78,gxy_75) else fail-any) in
                                            {7204}let l_431: label = tls13_derived in
                                            {7205}let m_153: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {7206}let v_1591: bool = not-caught-fail(m_153) in
                                            {7207}let h_407: bitstring = (if v_1591 then catch-fail(hash(@8_backend_h,m_153)) else caught-fail) in
                                            {7208}let v_1592: bool = not-caught-fail(h_407) in
                                            {7209}let x_492: bitstring = (if v_1592 then (l_431,h_407) else caught-fail) in
                                            {7210}let extra_79: bitstring = catch-fail((if v_1591 then (if v_1592 then hmac(@8_backend_h,handshake_secret_37,x_492) else fail-any) else fail-any)) in
                                            {7211}let v_1593: bool = not-caught-fail(extra_79) in
                                            {7212}let k_169: bitstring = (if v_1593 then zero else caught-fail) in
                                            {7213}let master_secret_81: bitstring = (if v_1593 then catch-fail(hmac(@8_backend_h,handshake_secret_37,k_169)) else caught-fail) in
                                            {7214}let v_1594: bool = not-caught-fail(master_secret_81) in
                                            {7215}let l_432: label = (if v_1594 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {7216}let h_408: bitstring = (if v_1594 then catch-fail(hash(@8_backend_h,cur_log2_76)) else caught-fail) in
                                            {7217}let v_1595: bool = not-caught-fail(h_408) in
                                            {7218}let x_493: bitstring = (if v_1595 then (l_432,h_408) else caught-fail) in
                                            {7219}let client_hts_37: bitstring = (if v_1594 then catch-fail((if v_1595 then hmac(@8_backend_h,handshake_secret_37,x_493) else fail-any)) else caught-fail) in
                                            {7220}let v_1596: bool = not-caught-fail(client_hts_37) in
                                            {7221}let l_433: label = (if v_1596 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {7222}let h_409: bitstring = (if v_1596 then catch-fail(hash(@8_backend_h,cur_log2_76)) else caught-fail) in
                                            {7223}let v_1597: bool = not-caught-fail(h_409) in
                                            {7224}let x_494: bitstring = (if v_1597 then (l_433,h_409) else caught-fail) in
                                            {7225}let server_hts_37: bitstring = (if v_1596 then catch-fail((if v_1597 then hmac(@8_backend_h,handshake_secret_37,x_494) else fail-any)) else caught-fail) in
                                            {7226}let v_1598: bool = not-caught-fail(server_hts_37) in
                                            {7227}let l_434: label = (if v_1598 then tls13_key else caught-fail) in
                                            {7228}let h_410: bitstring = (if v_1598 then zero else caught-fail) in
                                            {7229}let x_495: bitstring = (if v_1598 then (l_434,h_410) else caught-fail) in
                                            {7230}let client_wkh_37: bitstring = (if v_1598 then catch-fail(hmac(@8_backend_h,client_hts_37,x_495)) else caught-fail) in
                                            {7231}let v_1599: bool = not-caught-fail(client_wkh_37) in
                                            {7232}let l_435: label = (if v_1599 then tls13_key else caught-fail) in
                                            {7233}let h_411: bitstring = (if v_1599 then zero else caught-fail) in
                                            {7234}let x_496: bitstring = (if v_1599 then (l_435,h_411) else caught-fail) in
                                            {7235}let server_wkh_37: bitstring = (if v_1599 then catch-fail(hmac(@8_backend_h,server_hts_37,x_496)) else caught-fail) in
                                            {7236}let v_1600: bool = not-caught-fail(server_wkh_37) in
                                            {7237}let l_436: label = (if v_1600 then tls13_finished else caught-fail) in
                                            {7238}let h_412: bitstring = (if v_1600 then zero else caught-fail) in
                                            {7239}let x_497: bitstring = (if v_1600 then (l_436,h_412) else caught-fail) in
                                            {7240}let client_fk_37: bitstring = (if v_1600 then catch-fail(hmac(@8_backend_h,client_hts_37,x_497)) else caught-fail) in
                                            {7241}let v_1601: bool = not-caught-fail(client_fk_37) in
                                            {7242}let l_437: label = (if v_1601 then tls13_finished else caught-fail) in
                                            {7243}let h_413: bitstring = (if v_1601 then zero else caught-fail) in
                                            {7244}let x_498: bitstring = (if v_1601 then (l_437,h_413) else caught-fail) in
                                            {7245}let server_fk_37: bitstring = (if v_1601 then catch-fail(hmac(@8_backend_h,server_hts_37,x_498)) else caught-fail) in
                                            {7246}let v_1602: bool = not-caught-fail(server_fk_37) in
                                            {7247}let (master_secret_82: bitstring,chk_44: aead_key,shk_43: aead_key,cfin_44: mac_key,sfin_43: mac_key) = (if v_1593 then (if v_1594 then (if v_1596 then (if v_1598 then (if v_1599 then (if v_1600 then (if v_1601 then (if v_1602 then (master_secret_81,client_wkh_37,server_wkh_37,client_fk_37,server_fk_37) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {7248}event Client_chk(id_client_5,chk_44);
                                            {7249}event Client_shk(id_client_5,shk_43);
                                            {7250}event Client_cfin(id_client_5,cfin_44);
                                            {7251}event Client_sfin(id_client_5,sfin_43);
                                            {7252}in(io, enc_ee_msg_36: bitstring);
                                            {7253}let ee_msg_41: msg = aead_dec(@8_backend_a,shk_43,0,zero,enc_ee_msg_36) in
                                            {7254}let EE(ech_ee_36: echExt,extra_ee_36: extraExt) = ee_msg_41 in
                                            {7255}let cur_log2_77: bitstring = (cur_log2_76,ee_msg_41) in
                                            {7256}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_12,sr_44,@8_backend_h,@8_backend_a,c_dom_6,backend_dom_1,psk_173,safe_psk_39,@8_comp_psk,master_secret_82,chk_44,0,shk_43,1,cfin_44,sfin_43,cur_log2_77)))
                                        )
                                        else
                                            {7257}out(io, illegal_parameter)
                                    )
                                    else
                                        {7258}out(io, illegal_parameter)
                                )
                                else
                                    {7435}get pre_shared_keys(c_dom'_12: domain,=backend_dom_1,=@8_backend_h,id_79: identityPsk,psk_174: preSharedKey,idP_14: idProc,is_safe_68: bool) in
                                    {7259}event Selected_one_time_used_psk(id_client_5,psk_174,is_safe_68);
                                    {7260}event Selected_psk(c_dom_6,c_dom'_12,idP_14,is_safe_68);
                                    {7261}event Selected_psk_no_missmatch(id_client_5,backend_dom_1,@8_backend_h,psk_174,id_79);
                                    {7262}event Selected_psk_with_ID(c_dom_6,c_dom'_12,id_79,idP_14,is_safe_68);
                                    {7263}let v_1603: bitstring = (id_79,psk_174,is_safe_68) in
                                    {7264}let v_1604: bool = success?(1-proj-3-tuple(v_1603)) in
                                    {7265}let is_safe_69: bool = (if v_1604 then 3-proj-3-tuple(v_1603) else caught-fail) in
                                    {7266}let psk_175: preSharedKey = (if v_1604 then 2-proj-3-tuple(v_1603) else caught-fail) in
                                    {7267}let id_80: identityPsk = (if v_1604 then 1-proj-3-tuple(v_1603) else caught-fail) in
                                    {7268}let offer_23: params = (if v_1604 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_7,SNI(backend_dom_1),ech_ext_18,@8_i_extra_ext,trunc_client_psk_ext(id_80)) else caught-fail) in
                                    {7269}let cur_log'_23: bitstring = (if v_1604 then (cur_log_IN1_HRR_4,CH(i_cr_12,offer_23)) else caught-fail) in
                                    {7270}let s_170: bitstring = (if v_1604 then zero else caught-fail) in
                                    {7271}let k_170: bitstring = (if v_1604 then catch-fail(psk2b(psk_175)) else caught-fail) in
                                    {7272}let v_1605: bool = not-caught-fail(k_170) in
                                    {7273}let early_secret_117: bitstring = (if v_1604 then catch-fail((if v_1605 then hmac(@8_backend_h,s_170,k_170) else fail-any)) else caught-fail) in
                                    {7274}let v_1606: bool = not-caught-fail(early_secret_117) in
                                    {7275}let l_438: label = (if v_1606 then tls13_ext_res_binder else caught-fail) in
                                    {7276}let m_154: bitstring = (if v_1606 then zero else caught-fail) in
                                    {7277}let h_414: bitstring = (if v_1606 then catch-fail(hash(@8_backend_h,m_154)) else caught-fail) in
                                    {7278}let v_1607: bool = not-caught-fail(h_414) in
                                    {7279}let x_499: bitstring = (if v_1607 then (l_438,h_414) else caught-fail) in
                                    {7280}let binder_key_78: bitstring = (if v_1606 then catch-fail((if v_1607 then hmac(@8_backend_h,early_secret_117,x_499) else fail-any)) else caught-fail) in
                                    {7281}let v_1608: bool = not-caught-fail(binder_key_78) in
                                    {7282}let v_1609: bitstring = (if v_1604 then catch-fail((if v_1606 then (if v_1608 then (early_secret_117,binder_key_78) else fail-any) else fail-any)) else caught-fail) in
                                    {7283}let v_1610: bool = (not-caught-fail(v_1609) && success?(1-proj-2-tuple(v_1609))) in
                                    {7284}let kb_78: mac_key = (if v_1610 then 2-proj-2-tuple(v_1609) else caught-fail) in
                                    {7285}let es_115: bitstring = (if v_1610 then 1-proj-2-tuple(v_1609) else caught-fail) in
                                    {7286}let binders_22: bitstring = (if v_1610 then catch-fail(hmac(@8_backend_h,kb_78,cur_log'_23)) else caught-fail) in
                                    {7287}let v_1611: bool = not-caught-fail(binders_22) in
                                    {7288}let v_1612: bitstring = catch-fail((if v_1604 then (if v_1610 then (if v_1611 then (client_psk_ext(id_80,binders_22),(psk_175,id_80,es_115,is_safe_69)) else fail-any) else fail-any) else fail-any)) in
                                    {7289}let v_1613: bool = (not-caught-fail(v_1612) && success?(1-proj-2-tuple(v_1612))) in
                                    {7290}let psk_data_39: bitstring = (if v_1613 then 2-proj-2-tuple(v_1612) else caught-fail) in
                                    {7291}let psk_ext_80: preSharedKeyExt = (if v_1613 then 1-proj-2-tuple(v_1612) else caught-fail) in
                                    {7292}let i_offer_18: params = (if v_1613 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_7,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_80) else caught-fail) in
                                    {7293}let i_client_hello_24: msg = (if v_1613 then CH(i_cr_12,i_offer_18) else caught-fail) in
                                    {7294}new fake_id_22[]: identityPsk;
                                    {7295}new fake_binder_22[]: bitstring;
                                    {7296}let o_psk_ext_23: preSharedKeyExt = (if v_1613 then (if @8_use_psk then client_psk_ext(fake_id_22,fake_binder_22) else empty_psk_ext) else caught-fail) in
                                    {7297}let o_ech_ext_ADD_18: echExt = (if v_1613 then ECHClientHelloOuter(ech_h_16,ech_a_16,config_id_16,zero,zero) else caught-fail) in
                                    {7298}let o_offer_ADD_18: params = (if v_1613 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_10,SNI(o_dom_12),o_ech_ext_ADD_18,empty_extra_ext,o_psk_ext_23) else caught-fail) in
                                    {7299}let o_client_hello_ADD_18: msg = (if v_1613 then CH(o_cr_15,o_offer_ADD_18) else caught-fail) in
                                    {7300}let n_20: nat = (if v_1613 then 2 else caught-fail) in
                                    {7301}let v_1614: hpkeContext = (if v_1613 then catch-fail(context_2) else caught-fail) in
                                    {7302}let v_1615: bool = (not-caught-fail(v_1614) && ((S =nf 1-proj-hpke_context(v_1614)) && success?(1-proj-hpke_context(v_1614)))) in
                                    {7303}let base_nonce_23: bitstring = (if v_1615 then 3-proj-hpke_context(v_1614) else caught-fail) in
                                    {7304}let key_23: aead_key = (if v_1615 then 2-proj-hpke_context(v_1614) else caught-fail) in
                                    {7305}let payload_24: bitstring = (if v_1613 then catch-fail((if v_1615 then aead_enc(ech_a_16,key_23,(base_nonce_23,n_20),o_client_hello_ADD_18,i_client_hello_24) else fail-any)) else caught-fail) in
                                    {7306}let v_1616: bool = not-caught-fail(payload_24) in
                                    {7307}let o_ech_ext_23: echExt = (if v_1616 then ECHClientHelloOuter(ech_h_16,ech_a_16,config_id_16,zero,payload_24) else caught-fail) in
                                    {7308}let o_offer_39: params = (if v_1616 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_10,SNI(o_dom_12),o_ech_ext_23,empty_extra_ext,o_psk_ext_23) else caught-fail) in
                                    {7309}let (o_client_hello'_13: msg,i_client_hello'_14: msg,i_cr'_13: bytes32,i_kex_data'_13: bitstring,psk_data'_33: bitstring) = (if v_1613 then (if v_1616 then (CH(o_cr_15,o_offer_39),i_client_hello_24,i_cr_12,i_kex_data_11,psk_data_39) else fail-any) else fail-any) in
                                    {7310}out(io, o_client_hello'_13);
                                    {7311}in(io, server_hello'_29: msg);
                                    {7312}let SH(B32(sr24'_13: bytes24,sr8'_13: bytes8),params'_13: params) = server_hello'_29 in
                                    {7313}let cur_log_IN1_HRR_IN2_13: bitstring = (cur_log_IN1_HRR_4,i_client_hello'_14) in
                                    {7314}let sh_modified_18: msg = SH(B32(sr24'_13,zero8),params'_13) in
                                    {7315}let cur_log_sh_18: bitstring = (cur_log_IN1_HRR_IN2_13,sh_modified_18) in
                                    {7316}let transcript_ech_conf_18: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_18)) in
                                    {7317}let v_1617: bool = not-caught-fail(transcript_ech_conf_18) in
                                    {7318}let s_171: bitstring = (if v_1617 then zero else caught-fail) in
                                    {7319}let k_171: bitstring = (if v_1617 then catch-fail(b32_2_b(get_random(i_client_hello'_14))) else caught-fail) in
                                    {7320}let v_1618: bool = not-caught-fail(k_171) in
                                    {7321}let k_172: bitstring = (if v_1617 then catch-fail((if v_1618 then hmac(@8_backend_h,s_171,k_171) else fail-any)) else caught-fail) in
                                    {7322}let v_1619: bool = not-caught-fail(k_172) in
                                    {7323}let l_439: label = (if v_1619 then ech_accept_confirmation else caught-fail) in
                                    {7324}let x_500: bitstring = (if v_1619 then (l_439,cur_log_sh_18) else caught-fail) in
                                    {7325}let sr8_23: bytes8 = (if v_1617 then catch-fail(crop_into_bytes8((if v_1619 then hmac(@8_backend_h,k_172,x_500) else fail-any))) else caught-fail) in
                                    {7326}let v_1620: bool = not-caught-fail(sr8_23) in
                                    {7327}if (B32(sr24'_13,sr8'_13) = (if v_1617 then (if v_1620 then B32(sr24'_13,sr8_23) else fail-any) else fail-any)) then
                                    {7328}let (x_501: bitstring,g_45: group) = i_kex_data'_13 in
                                    {7329}let (psk_offer_37: preSharedKey,id_offer_37: identityPsk,es_offer_37: bitstring,is_safe_offer_37: bool) = psk_data'_33 in
                                    {7330}event Client_PSKOffer(id_client_5,psk_offer_37,id_offer_37,is_safe_offer_37);
                                    {7331}event Client_Rand_client(id_client_5,i_cr'_13);
                                    {7332}event Client_DH_client(id_client_5,dh_pub(g_45,x_501));
                                    {7333}event Client_server_domain(id_client_5,backend_dom_1);
                                    {7334}let SH(sr_45: bytes32,mode_42: params) = server_hello'_29 in
                                    {7335}event Client_Rand_server(id_client_5,sr_45);
                                    {7336}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_45,gy_38: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_81: preSharedKeyExt) = mode_42 in
                                    (
                                        {7337}let cur_log2_78: bitstring = (cur_log_IN1_HRR_IN2_13,server_hello'_29) in
                                        {7338}event Client_DH_server(id_client_5,gy_38);
                                        {7339}let v_1621: bool = (psk_ext_81 = empty_psk_ext) in
                                        {7340}let psk_176: preSharedKey = (if v_1621 then NoPsk else caught-fail) in
                                        {7341}let s_172: bitstring = (if v_1621 then zero else caught-fail) in
                                        {7342}let k_173: bitstring = (if v_1621 then catch-fail(psk2b(psk_176)) else caught-fail) in
                                        {7343}let v_1622: bool = not-caught-fail(k_173) in
                                        {7344}let early_secret_118: bitstring = (if v_1621 then catch-fail((if v_1622 then hmac(@8_backend_h,s_172,k_173) else fail-any)) else caught-fail) in
                                        {7345}let v_1623: bool = not-caught-fail(early_secret_118) in
                                        {7346}let l_440: label = (if v_1623 then tls13_ext_res_binder else caught-fail) in
                                        {7347}let m_155: bitstring = (if v_1623 then zero else caught-fail) in
                                        {7348}let h_415: bitstring = (if v_1623 then catch-fail(hash(@8_backend_h,m_155)) else caught-fail) in
                                        {7349}let v_1624: bool = not-caught-fail(h_415) in
                                        {7350}let x_502: bitstring = (if v_1624 then (l_440,h_415) else caught-fail) in
                                        {7351}let binder_key_79: bitstring = (if v_1623 then catch-fail((if v_1624 then hmac(@8_backend_h,early_secret_118,x_502) else fail-any)) else caught-fail) in
                                        {7352}let v_1625: bool = not-caught-fail(binder_key_79) in
                                        {7353}let v_1626: bitstring = (if v_1621 then catch-fail((if v_1623 then (if v_1625 then (early_secret_118,binder_key_79) else fail-any) else fail-any)) else caught-fail) in
                                        {7354}let v_1627: bool = (not-caught-fail(v_1626) && success?(1-proj-2-tuple(v_1626))) in
                                        {7355}let kb_79: mac_key = (if v_1627 then 2-proj-2-tuple(v_1626) else caught-fail) in
                                        {7356}let es_116: bitstring = (if v_1627 then 1-proj-2-tuple(v_1626) else caught-fail) in
                                        {7357}let v_1628: bitstring = (if not(v_1621) then catch-fail(psk_data'_33) else caught-fail) in
                                        {7358}let v_1629: bool = (not-caught-fail(v_1628) && success?(1-proj-4-tuple(v_1628))) in
                                        {7359}let is_safe_70: bool = (if v_1629 then 4-proj-4-tuple(v_1628) else caught-fail) in
                                        {7360}let es_117: bitstring = (if v_1629 then 3-proj-4-tuple(v_1628) else caught-fail) in
                                        {7361}let id_81: identityPsk = (if v_1629 then 2-proj-4-tuple(v_1628) else caught-fail) in
                                        {7362}let psk_177: preSharedKey = (if v_1629 then 1-proj-4-tuple(v_1628) else caught-fail) in
                                        {7363}let (psk_178: preSharedKey,early_secret_119: bitstring,valid_37: bool,safe_psk_40: bool) = (if v_1621 then (if v_1627 then (NoPsk,es_116,true,false) else fail-any) else (if v_1629 then (psk_177,es_117,((psk_177 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_81)),is_safe_70) else fail-any)) in
                                        {7364}event Client_PSKChoosen(id_client_5,psk_178,safe_psk_40);
                                        {7365}if valid_37 then
                                        (
                                            {7366}let gxy_76: element = catch-fail(dh_decap_fun(g_45,gy_38,x_501)) in
                                            {7367}let v_1630: bool = not-caught-fail(gxy_76) in
                                            {7368}new s_173[]: seed;
                                            {7369}let gxy_77: element = (if v_1630 then gxy_76 else dh_f(s_173)) in
                                            {7370}event Client_DH_gxy(id_client_5,gxy_77);
                                            {7371}let l_441: label = tls13_derived in
                                            {7372}let m_156: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {7373}let v_1631: bool = not-caught-fail(m_156) in
                                            {7374}let h_416: bitstring = (if v_1631 then catch-fail(hash(@8_backend_h,m_156)) else caught-fail) in
                                            {7375}let v_1632: bool = not-caught-fail(h_416) in
                                            {7376}let x_503: bitstring = (if v_1632 then (l_441,h_416) else caught-fail) in
                                            {7377}let extra_80: bitstring = catch-fail((if v_1631 then (if v_1632 then hmac(@8_backend_h,early_secret_119,x_503) else fail-any) else fail-any)) in
                                            {7378}let v_1633: bool = not-caught-fail(extra_80) in
                                            {7379}let handshake_secret_38: bitstring = (if v_1633 then hmac(@8_backend_h,extra_80,gxy_77) else fail-any) in
                                            {7380}let l_442: label = tls13_derived in
                                            {7381}let m_157: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {7382}let v_1634: bool = not-caught-fail(m_157) in
                                            {7383}let h_417: bitstring = (if v_1634 then catch-fail(hash(@8_backend_h,m_157)) else caught-fail) in
                                            {7384}let v_1635: bool = not-caught-fail(h_417) in
                                            {7385}let x_504: bitstring = (if v_1635 then (l_442,h_417) else caught-fail) in
                                            {7386}let extra_81: bitstring = catch-fail((if v_1634 then (if v_1635 then hmac(@8_backend_h,handshake_secret_38,x_504) else fail-any) else fail-any)) in
                                            {7387}let v_1636: bool = not-caught-fail(extra_81) in
                                            {7388}let k_174: bitstring = (if v_1636 then zero else caught-fail) in
                                            {7389}let master_secret_83: bitstring = (if v_1636 then catch-fail(hmac(@8_backend_h,handshake_secret_38,k_174)) else caught-fail) in
                                            {7390}let v_1637: bool = not-caught-fail(master_secret_83) in
                                            {7391}let l_443: label = (if v_1637 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {7392}let h_418: bitstring = (if v_1637 then catch-fail(hash(@8_backend_h,cur_log2_78)) else caught-fail) in
                                            {7393}let v_1638: bool = not-caught-fail(h_418) in
                                            {7394}let x_505: bitstring = (if v_1638 then (l_443,h_418) else caught-fail) in
                                            {7395}let client_hts_38: bitstring = (if v_1637 then catch-fail((if v_1638 then hmac(@8_backend_h,handshake_secret_38,x_505) else fail-any)) else caught-fail) in
                                            {7396}let v_1639: bool = not-caught-fail(client_hts_38) in
                                            {7397}let l_444: label = (if v_1639 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {7398}let h_419: bitstring = (if v_1639 then catch-fail(hash(@8_backend_h,cur_log2_78)) else caught-fail) in
                                            {7399}let v_1640: bool = not-caught-fail(h_419) in
                                            {7400}let x_506: bitstring = (if v_1640 then (l_444,h_419) else caught-fail) in
                                            {7401}let server_hts_38: bitstring = (if v_1639 then catch-fail((if v_1640 then hmac(@8_backend_h,handshake_secret_38,x_506) else fail-any)) else caught-fail) in
                                            {7402}let v_1641: bool = not-caught-fail(server_hts_38) in
                                            {7403}let l_445: label = (if v_1641 then tls13_key else caught-fail) in
                                            {7404}let h_420: bitstring = (if v_1641 then zero else caught-fail) in
                                            {7405}let x_507: bitstring = (if v_1641 then (l_445,h_420) else caught-fail) in
                                            {7406}let client_wkh_38: bitstring = (if v_1641 then catch-fail(hmac(@8_backend_h,client_hts_38,x_507)) else caught-fail) in
                                            {7407}let v_1642: bool = not-caught-fail(client_wkh_38) in
                                            {7408}let l_446: label = (if v_1642 then tls13_key else caught-fail) in
                                            {7409}let h_421: bitstring = (if v_1642 then zero else caught-fail) in
                                            {7410}let x_508: bitstring = (if v_1642 then (l_446,h_421) else caught-fail) in
                                            {7411}let server_wkh_38: bitstring = (if v_1642 then catch-fail(hmac(@8_backend_h,server_hts_38,x_508)) else caught-fail) in
                                            {7412}let v_1643: bool = not-caught-fail(server_wkh_38) in
                                            {7413}let l_447: label = (if v_1643 then tls13_finished else caught-fail) in
                                            {7414}let h_422: bitstring = (if v_1643 then zero else caught-fail) in
                                            {7415}let x_509: bitstring = (if v_1643 then (l_447,h_422) else caught-fail) in
                                            {7416}let client_fk_38: bitstring = (if v_1643 then catch-fail(hmac(@8_backend_h,client_hts_38,x_509)) else caught-fail) in
                                            {7417}let v_1644: bool = not-caught-fail(client_fk_38) in
                                            {7418}let l_448: label = (if v_1644 then tls13_finished else caught-fail) in
                                            {7419}let h_423: bitstring = (if v_1644 then zero else caught-fail) in
                                            {7420}let x_510: bitstring = (if v_1644 then (l_448,h_423) else caught-fail) in
                                            {7421}let server_fk_38: bitstring = (if v_1644 then catch-fail(hmac(@8_backend_h,server_hts_38,x_510)) else caught-fail) in
                                            {7422}let v_1645: bool = not-caught-fail(server_fk_38) in
                                            {7423}let (master_secret_84: bitstring,chk_45: aead_key,shk_44: aead_key,cfin_45: mac_key,sfin_44: mac_key) = (if v_1636 then (if v_1637 then (if v_1639 then (if v_1641 then (if v_1642 then (if v_1643 then (if v_1644 then (if v_1645 then (master_secret_83,client_wkh_38,server_wkh_38,client_fk_38,server_fk_38) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {7424}event Client_chk(id_client_5,chk_45);
                                            {7425}event Client_shk(id_client_5,shk_44);
                                            {7426}event Client_cfin(id_client_5,cfin_45);
                                            {7427}event Client_sfin(id_client_5,sfin_44);
                                            {7428}in(io, enc_ee_msg_37: bitstring);
                                            {7429}let ee_msg_42: msg = aead_dec(@8_backend_a,shk_44,0,zero,enc_ee_msg_37) in
                                            {7430}let EE(ech_ee_37: echExt,extra_ee_37: extraExt) = ee_msg_42 in
                                            {7431}let cur_log2_79: bitstring = (cur_log2_78,ee_msg_42) in
                                            {7432}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_13,sr_45,@8_backend_h,@8_backend_a,c_dom_6,backend_dom_1,psk_178,safe_psk_40,@8_comp_psk,master_secret_84,chk_45,0,shk_44,1,cfin_45,sfin_44,cur_log2_79)))
                                        )
                                        else
                                            {7433}out(io, illegal_parameter)
                                    )
                                    else
                                        {7434}out(io, illegal_parameter)
                            )
                            else
                                {7436}let psk_179: preSharedKey = NoPsk in
                                {7437}let s_174: bitstring = zero in
                                {7438}let k_175: bitstring = catch-fail(psk2b(psk_179)) in
                                {7439}let v_1646: bool = not-caught-fail(k_175) in
                                {7440}let early_secret_120: bitstring = catch-fail((if v_1646 then hmac(@8_backend_h,s_174,k_175) else fail-any)) in
                                {7441}let v_1647: bool = not-caught-fail(early_secret_120) in
                                {7442}let l_449: label = (if v_1647 then tls13_ext_res_binder else caught-fail) in
                                {7443}let m_158: bitstring = (if v_1647 then zero else caught-fail) in
                                {7444}let h_424: bitstring = (if v_1647 then catch-fail(hash(@8_backend_h,m_158)) else caught-fail) in
                                {7445}let v_1648: bool = not-caught-fail(h_424) in
                                {7446}let x_511: bitstring = (if v_1648 then (l_449,h_424) else caught-fail) in
                                {7447}let binder_key_80: bitstring = (if v_1647 then catch-fail((if v_1648 then hmac(@8_backend_h,early_secret_120,x_511) else fail-any)) else caught-fail) in
                                {7448}let v_1649: bool = not-caught-fail(binder_key_80) in
                                {7449}let v_1650: bitstring = catch-fail((if v_1647 then (if v_1649 then (early_secret_120,binder_key_80) else fail-any) else fail-any)) in
                                {7450}let v_1651: bool = (not-caught-fail(v_1650) && success?(1-proj-2-tuple(v_1650))) in
                                {7451}let kb_80: mac_key = (if v_1651 then 2-proj-2-tuple(v_1650) else caught-fail) in
                                {7452}let es_118: bitstring = (if v_1651 then 1-proj-2-tuple(v_1650) else caught-fail) in
                                {7453}let v_1652: bitstring = catch-fail((if v_1651 then (empty_psk_ext,(NoPsk,zero,es_118,false)) else fail-any)) in
                                {7454}let v_1653: bool = (not-caught-fail(v_1652) && success?(1-proj-2-tuple(v_1652))) in
                                {7455}let psk_data_40: bitstring = (if v_1653 then 2-proj-2-tuple(v_1652) else caught-fail) in
                                {7456}let psk_ext_82: preSharedKeyExt = (if v_1653 then 1-proj-2-tuple(v_1652) else caught-fail) in
                                {7457}let i_offer_19: params = (if v_1653 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_7,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_82) else caught-fail) in
                                {7458}let i_client_hello_25: msg = (if v_1653 then CH(i_cr_12,i_offer_19) else caught-fail) in
                                {7459}new fake_id_23[]: identityPsk;
                                {7460}new fake_binder_23[]: bitstring;
                                {7461}let o_psk_ext_24: preSharedKeyExt = (if v_1653 then (if @8_use_psk then client_psk_ext(fake_id_23,fake_binder_23) else empty_psk_ext) else caught-fail) in
                                {7462}let o_ech_ext_ADD_19: echExt = (if v_1653 then ECHClientHelloOuter(ech_h_16,ech_a_16,config_id_16,zero,zero) else caught-fail) in
                                {7463}let o_offer_ADD_19: params = (if v_1653 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_10,SNI(o_dom_12),o_ech_ext_ADD_19,empty_extra_ext,o_psk_ext_24) else caught-fail) in
                                {7464}let o_client_hello_ADD_19: msg = (if v_1653 then CH(o_cr_15,o_offer_ADD_19) else caught-fail) in
                                {7465}let n_21: nat = (if v_1653 then 2 else caught-fail) in
                                {7466}let v_1654: hpkeContext = (if v_1653 then catch-fail(context_2) else caught-fail) in
                                {7467}let v_1655: bool = (not-caught-fail(v_1654) && ((S =nf 1-proj-hpke_context(v_1654)) && success?(1-proj-hpke_context(v_1654)))) in
                                {7468}let base_nonce_24: bitstring = (if v_1655 then 3-proj-hpke_context(v_1654) else caught-fail) in
                                {7469}let key_24: aead_key = (if v_1655 then 2-proj-hpke_context(v_1654) else caught-fail) in
                                {7470}let payload_25: bitstring = (if v_1653 then catch-fail((if v_1655 then aead_enc(ech_a_16,key_24,(base_nonce_24,n_21),o_client_hello_ADD_19,i_client_hello_25) else fail-any)) else caught-fail) in
                                {7471}let v_1656: bool = not-caught-fail(payload_25) in
                                {7472}let o_ech_ext_24: echExt = (if v_1656 then ECHClientHelloOuter(ech_h_16,ech_a_16,config_id_16,zero,payload_25) else caught-fail) in
                                {7473}let o_offer_40: params = (if v_1656 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_10,SNI(o_dom_12),o_ech_ext_24,empty_extra_ext,o_psk_ext_24) else caught-fail) in
                                {7474}let (o_client_hello'_14: msg,i_client_hello'_15: msg,i_cr'_14: bytes32,i_kex_data'_14: bitstring,psk_data'_34: bitstring) = (if v_1653 then (if v_1656 then (CH(o_cr_15,o_offer_40),i_client_hello_25,i_cr_12,i_kex_data_11,psk_data_40) else fail-any) else fail-any) in
                                {7475}out(io, o_client_hello'_14);
                                {7476}in(io, server_hello'_30: msg);
                                {7477}let SH(B32(sr24'_14: bytes24,sr8'_14: bytes8),params'_14: params) = server_hello'_30 in
                                {7478}let cur_log_IN1_HRR_IN2_14: bitstring = (cur_log_IN1_HRR_4,i_client_hello'_15) in
                                {7479}let sh_modified_19: msg = SH(B32(sr24'_14,zero8),params'_14) in
                                {7480}let cur_log_sh_19: bitstring = (cur_log_IN1_HRR_IN2_14,sh_modified_19) in
                                {7481}let transcript_ech_conf_19: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_19)) in
                                {7482}let v_1657: bool = not-caught-fail(transcript_ech_conf_19) in
                                {7483}let s_175: bitstring = (if v_1657 then zero else caught-fail) in
                                {7484}let k_176: bitstring = (if v_1657 then catch-fail(b32_2_b(get_random(i_client_hello'_15))) else caught-fail) in
                                {7485}let v_1658: bool = not-caught-fail(k_176) in
                                {7486}let k_177: bitstring = (if v_1657 then catch-fail((if v_1658 then hmac(@8_backend_h,s_175,k_176) else fail-any)) else caught-fail) in
                                {7487}let v_1659: bool = not-caught-fail(k_177) in
                                {7488}let l_450: label = (if v_1659 then ech_accept_confirmation else caught-fail) in
                                {7489}let x_512: bitstring = (if v_1659 then (l_450,cur_log_sh_19) else caught-fail) in
                                {7490}let sr8_24: bytes8 = (if v_1657 then catch-fail(crop_into_bytes8((if v_1659 then hmac(@8_backend_h,k_177,x_512) else fail-any))) else caught-fail) in
                                {7491}let v_1660: bool = not-caught-fail(sr8_24) in
                                {7492}if (B32(sr24'_14,sr8'_14) = (if v_1657 then (if v_1660 then B32(sr24'_14,sr8_24) else fail-any) else fail-any)) then
                                {7493}let (x_513: bitstring,g_46: group) = i_kex_data'_14 in
                                {7494}let (psk_offer_38: preSharedKey,id_offer_38: identityPsk,es_offer_38: bitstring,is_safe_offer_38: bool) = psk_data'_34 in
                                {7495}event Client_PSKOffer(id_client_5,psk_offer_38,id_offer_38,is_safe_offer_38);
                                {7496}event Client_Rand_client(id_client_5,i_cr'_14);
                                {7497}event Client_DH_client(id_client_5,dh_pub(g_46,x_513));
                                {7498}event Client_server_domain(id_client_5,backend_dom_1);
                                {7499}let SH(sr_46: bytes32,mode_43: params) = server_hello'_30 in
                                {7500}event Client_Rand_server(id_client_5,sr_46);
                                {7501}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_46,gy_39: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_83: preSharedKeyExt) = mode_43 in
                                (
                                    {7502}let cur_log2_80: bitstring = (cur_log_IN1_HRR_IN2_14,server_hello'_30) in
                                    {7503}event Client_DH_server(id_client_5,gy_39);
                                    {7504}let v_1661: bool = (psk_ext_83 = empty_psk_ext) in
                                    {7505}let psk_180: preSharedKey = (if v_1661 then NoPsk else caught-fail) in
                                    {7506}let s_176: bitstring = (if v_1661 then zero else caught-fail) in
                                    {7507}let k_178: bitstring = (if v_1661 then catch-fail(psk2b(psk_180)) else caught-fail) in
                                    {7508}let v_1662: bool = not-caught-fail(k_178) in
                                    {7509}let early_secret_121: bitstring = (if v_1661 then catch-fail((if v_1662 then hmac(@8_backend_h,s_176,k_178) else fail-any)) else caught-fail) in
                                    {7510}let v_1663: bool = not-caught-fail(early_secret_121) in
                                    {7511}let l_451: label = (if v_1663 then tls13_ext_res_binder else caught-fail) in
                                    {7512}let m_159: bitstring = (if v_1663 then zero else caught-fail) in
                                    {7513}let h_425: bitstring = (if v_1663 then catch-fail(hash(@8_backend_h,m_159)) else caught-fail) in
                                    {7514}let v_1664: bool = not-caught-fail(h_425) in
                                    {7515}let x_514: bitstring = (if v_1664 then (l_451,h_425) else caught-fail) in
                                    {7516}let binder_key_81: bitstring = (if v_1663 then catch-fail((if v_1664 then hmac(@8_backend_h,early_secret_121,x_514) else fail-any)) else caught-fail) in
                                    {7517}let v_1665: bool = not-caught-fail(binder_key_81) in
                                    {7518}let v_1666: bitstring = (if v_1661 then catch-fail((if v_1663 then (if v_1665 then (early_secret_121,binder_key_81) else fail-any) else fail-any)) else caught-fail) in
                                    {7519}let v_1667: bool = (not-caught-fail(v_1666) && success?(1-proj-2-tuple(v_1666))) in
                                    {7520}let kb_81: mac_key = (if v_1667 then 2-proj-2-tuple(v_1666) else caught-fail) in
                                    {7521}let es_119: bitstring = (if v_1667 then 1-proj-2-tuple(v_1666) else caught-fail) in
                                    {7522}let v_1668: bitstring = (if not(v_1661) then catch-fail(psk_data'_34) else caught-fail) in
                                    {7523}let v_1669: bool = (not-caught-fail(v_1668) && success?(1-proj-4-tuple(v_1668))) in
                                    {7524}let is_safe_71: bool = (if v_1669 then 4-proj-4-tuple(v_1668) else caught-fail) in
                                    {7525}let es_120: bitstring = (if v_1669 then 3-proj-4-tuple(v_1668) else caught-fail) in
                                    {7526}let id_82: identityPsk = (if v_1669 then 2-proj-4-tuple(v_1668) else caught-fail) in
                                    {7527}let psk_181: preSharedKey = (if v_1669 then 1-proj-4-tuple(v_1668) else caught-fail) in
                                    {7528}let (psk_182: preSharedKey,early_secret_122: bitstring,valid_38: bool,safe_psk_41: bool) = (if v_1661 then (if v_1667 then (NoPsk,es_119,true,false) else fail-any) else (if v_1669 then (psk_181,es_120,((psk_181 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_83)),is_safe_71) else fail-any)) in
                                    {7529}event Client_PSKChoosen(id_client_5,psk_182,safe_psk_41);
                                    {7530}if valid_38 then
                                    (
                                        {7531}let gxy_78: element = catch-fail(dh_decap_fun(g_46,gy_39,x_513)) in
                                        {7532}let v_1670: bool = not-caught-fail(gxy_78) in
                                        {7533}new s_177[]: seed;
                                        {7534}let gxy_79: element = (if v_1670 then gxy_78 else dh_f(s_177)) in
                                        {7535}event Client_DH_gxy(id_client_5,gxy_79);
                                        {7536}let l_452: label = tls13_derived in
                                        {7537}let m_160: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {7538}let v_1671: bool = not-caught-fail(m_160) in
                                        {7539}let h_426: bitstring = (if v_1671 then catch-fail(hash(@8_backend_h,m_160)) else caught-fail) in
                                        {7540}let v_1672: bool = not-caught-fail(h_426) in
                                        {7541}let x_515: bitstring = (if v_1672 then (l_452,h_426) else caught-fail) in
                                        {7542}let extra_82: bitstring = catch-fail((if v_1671 then (if v_1672 then hmac(@8_backend_h,early_secret_122,x_515) else fail-any) else fail-any)) in
                                        {7543}let v_1673: bool = not-caught-fail(extra_82) in
                                        {7544}let handshake_secret_39: bitstring = (if v_1673 then hmac(@8_backend_h,extra_82,gxy_79) else fail-any) in
                                        {7545}let l_453: label = tls13_derived in
                                        {7546}let m_161: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {7547}let v_1674: bool = not-caught-fail(m_161) in
                                        {7548}let h_427: bitstring = (if v_1674 then catch-fail(hash(@8_backend_h,m_161)) else caught-fail) in
                                        {7549}let v_1675: bool = not-caught-fail(h_427) in
                                        {7550}let x_516: bitstring = (if v_1675 then (l_453,h_427) else caught-fail) in
                                        {7551}let extra_83: bitstring = catch-fail((if v_1674 then (if v_1675 then hmac(@8_backend_h,handshake_secret_39,x_516) else fail-any) else fail-any)) in
                                        {7552}let v_1676: bool = not-caught-fail(extra_83) in
                                        {7553}let k_179: bitstring = (if v_1676 then zero else caught-fail) in
                                        {7554}let master_secret_85: bitstring = (if v_1676 then catch-fail(hmac(@8_backend_h,handshake_secret_39,k_179)) else caught-fail) in
                                        {7555}let v_1677: bool = not-caught-fail(master_secret_85) in
                                        {7556}let l_454: label = (if v_1677 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {7557}let h_428: bitstring = (if v_1677 then catch-fail(hash(@8_backend_h,cur_log2_80)) else caught-fail) in
                                        {7558}let v_1678: bool = not-caught-fail(h_428) in
                                        {7559}let x_517: bitstring = (if v_1678 then (l_454,h_428) else caught-fail) in
                                        {7560}let client_hts_39: bitstring = (if v_1677 then catch-fail((if v_1678 then hmac(@8_backend_h,handshake_secret_39,x_517) else fail-any)) else caught-fail) in
                                        {7561}let v_1679: bool = not-caught-fail(client_hts_39) in
                                        {7562}let l_455: label = (if v_1679 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {7563}let h_429: bitstring = (if v_1679 then catch-fail(hash(@8_backend_h,cur_log2_80)) else caught-fail) in
                                        {7564}let v_1680: bool = not-caught-fail(h_429) in
                                        {7565}let x_518: bitstring = (if v_1680 then (l_455,h_429) else caught-fail) in
                                        {7566}let server_hts_39: bitstring = (if v_1679 then catch-fail((if v_1680 then hmac(@8_backend_h,handshake_secret_39,x_518) else fail-any)) else caught-fail) in
                                        {7567}let v_1681: bool = not-caught-fail(server_hts_39) in
                                        {7568}let l_456: label = (if v_1681 then tls13_key else caught-fail) in
                                        {7569}let h_430: bitstring = (if v_1681 then zero else caught-fail) in
                                        {7570}let x_519: bitstring = (if v_1681 then (l_456,h_430) else caught-fail) in
                                        {7571}let client_wkh_39: bitstring = (if v_1681 then catch-fail(hmac(@8_backend_h,client_hts_39,x_519)) else caught-fail) in
                                        {7572}let v_1682: bool = not-caught-fail(client_wkh_39) in
                                        {7573}let l_457: label = (if v_1682 then tls13_key else caught-fail) in
                                        {7574}let h_431: bitstring = (if v_1682 then zero else caught-fail) in
                                        {7575}let x_520: bitstring = (if v_1682 then (l_457,h_431) else caught-fail) in
                                        {7576}let server_wkh_39: bitstring = (if v_1682 then catch-fail(hmac(@8_backend_h,server_hts_39,x_520)) else caught-fail) in
                                        {7577}let v_1683: bool = not-caught-fail(server_wkh_39) in
                                        {7578}let l_458: label = (if v_1683 then tls13_finished else caught-fail) in
                                        {7579}let h_432: bitstring = (if v_1683 then zero else caught-fail) in
                                        {7580}let x_521: bitstring = (if v_1683 then (l_458,h_432) else caught-fail) in
                                        {7581}let client_fk_39: bitstring = (if v_1683 then catch-fail(hmac(@8_backend_h,client_hts_39,x_521)) else caught-fail) in
                                        {7582}let v_1684: bool = not-caught-fail(client_fk_39) in
                                        {7583}let l_459: label = (if v_1684 then tls13_finished else caught-fail) in
                                        {7584}let h_433: bitstring = (if v_1684 then zero else caught-fail) in
                                        {7585}let x_522: bitstring = (if v_1684 then (l_459,h_433) else caught-fail) in
                                        {7586}let server_fk_39: bitstring = (if v_1684 then catch-fail(hmac(@8_backend_h,server_hts_39,x_522)) else caught-fail) in
                                        {7587}let v_1685: bool = not-caught-fail(server_fk_39) in
                                        {7588}let (master_secret_86: bitstring,chk_46: aead_key,shk_45: aead_key,cfin_46: mac_key,sfin_45: mac_key) = (if v_1676 then (if v_1677 then (if v_1679 then (if v_1681 then (if v_1682 then (if v_1683 then (if v_1684 then (if v_1685 then (master_secret_85,client_wkh_39,server_wkh_39,client_fk_39,server_fk_39) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {7589}event Client_chk(id_client_5,chk_46);
                                        {7590}event Client_shk(id_client_5,shk_45);
                                        {7591}event Client_cfin(id_client_5,cfin_46);
                                        {7592}event Client_sfin(id_client_5,sfin_45);
                                        {7593}in(io, enc_ee_msg_38: bitstring);
                                        {7594}let ee_msg_43: msg = aead_dec(@8_backend_a,shk_45,0,zero,enc_ee_msg_38) in
                                        {7595}let EE(ech_ee_38: echExt,extra_ee_38: extraExt) = ee_msg_43 in
                                        {7596}let cur_log2_81: bitstring = (cur_log2_80,ee_msg_43) in
                                        {7597}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_14,sr_46,@8_backend_h,@8_backend_a,c_dom_6,backend_dom_1,psk_182,safe_psk_41,@8_comp_psk,master_secret_86,chk_46,0,shk_45,1,cfin_46,sfin_45,cur_log2_81)))
                                    )
                                    else
                                        {7598}out(io, illegal_parameter)
                                )
                                else
                                    {7599}out(io, illegal_parameter)
                        )
                        else
                            {7600}let cur_log_OU1_HRR_4: bitstring = ((zero,o_client_hello_6),server_hello_5) in
                            {7601}let ech_config(config_id_17: configId,ech_g_17: group,pkR_19: element,o_dom_13: domain,ech_h_17: hash_alg,ech_a_17: aead_alg) = ech_conf_2 in
                            {7602}new rand24_19[]: bytes24;
                            {7603}new rand8_19[]: bytes8;
                            {7604}let o_cr_16: bytes32 = B32(rand24_19,rand8_19) in
                            {7605}let send_key_share_14: bool = true in
                            {7606}new s_178[]: seed;
                            {7607}let gx_45: element = dh_pub(@8_tls_g,dh_k(s_178)) in
                            {7608}let v_1686: bitstring = (dh_k(s_178),gx_45) in
                            {7609}let v_1687: bool = success?(1-proj-2-tuple(v_1686)) in
                            {7610}let gx_46: element = (if v_1687 then 2-proj-2-tuple(v_1686) else caught-fail) in
                            {7611}let x_523: bitstring = (if v_1687 then 1-proj-2-tuple(v_1686) else caught-fail) in
                            {7612}let kex_18: kex_alg = (if v_1687 then (if send_key_share_14 then DHE_kex(@8_tls_g,gx_46) else DHE_group(@8_tls_g)) else caught-fail) in
                            {7613}let (o_kex_ext_11: keyShareExt,kex_data_4: bitstring) = (if v_1687 then (client_kex_ext(kex_18),(x_523,@8_tls_g)) else fail-any) in
                            {7614}if @8_use_grease then
                            (
                                {7615}let extra_84: extraExt = empty_extra_ext in
                                {7616}if @8_use_psk then
                                (
                                    {7617}let (psk_183: preSharedKey,id_83: identityPsk,old_es_11: bitstring,is_safe_72: bool) = psk_data_37 in
                                    (
                                        {7618}let offer_24: params = nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_11,SNI(o_dom_13),o_ech_ext_21,extra_84,trunc_client_psk_ext(id_83)) in
                                        {7619}let cur_log'_24: bitstring = (cur_log_OU1_HRR_4,CH(o_cr_16,offer_24)) in
                                        {7620}let s_179: bitstring = zero in
                                        {7621}let k_180: bitstring = catch-fail(psk2b(psk_183)) in
                                        {7622}let v_1688: bool = not-caught-fail(k_180) in
                                        {7623}let early_secret_123: bitstring = catch-fail((if v_1688 then hmac(@8_tls_h,s_179,k_180) else fail-any)) in
                                        {7624}let v_1689: bool = not-caught-fail(early_secret_123) in
                                        {7625}let l_460: label = (if v_1689 then tls13_ext_res_binder else caught-fail) in
                                        {7626}let m_162: bitstring = (if v_1689 then zero else caught-fail) in
                                        {7627}let h_434: bitstring = (if v_1689 then catch-fail(hash(@8_tls_h,m_162)) else caught-fail) in
                                        {7628}let v_1690: bool = not-caught-fail(h_434) in
                                        {7629}let x_524: bitstring = (if v_1690 then (l_460,h_434) else caught-fail) in
                                        {7630}let binder_key_82: bitstring = (if v_1689 then catch-fail((if v_1690 then hmac(@8_tls_h,early_secret_123,x_524) else fail-any)) else caught-fail) in
                                        {7631}let v_1691: bool = not-caught-fail(binder_key_82) in
                                        {7632}let v_1692: bitstring = catch-fail((if v_1689 then (if v_1691 then (early_secret_123,binder_key_82) else fail-any) else fail-any)) in
                                        {7633}let v_1693: bool = (not-caught-fail(v_1692) && success?(1-proj-2-tuple(v_1692))) in
                                        {7634}let kb_82: mac_key = (if v_1693 then 2-proj-2-tuple(v_1692) else caught-fail) in
                                        {7635}let es_121: bitstring = (if v_1693 then 1-proj-2-tuple(v_1692) else caught-fail) in
                                        {7636}let binders_23: bitstring = (if v_1693 then catch-fail(hmac(@8_tls_h,kb_82,cur_log'_24)) else caught-fail) in
                                        {7637}let v_1694: bool = not-caught-fail(binders_23) in
                                        {7638}let v_1695: bitstring = catch-fail((if v_1693 then (if v_1694 then (client_psk_ext(id_83,binders_23),(psk_183,id_83,es_121,is_safe_72)) else fail-any) else fail-any)) in
                                        {7639}let v_1696: bool = (not-caught-fail(v_1695) && success?(1-proj-2-tuple(v_1695))) in
                                        {7640}let psk_data_41: bitstring = (if v_1696 then 2-proj-2-tuple(v_1695) else caught-fail) in
                                        {7641}let psk_ext_84: preSharedKeyExt = (if v_1696 then 1-proj-2-tuple(v_1695) else caught-fail) in
                                        {7642}let o_offer_41: params = (if v_1696 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_11,SNI(o_dom_13),o_ech_ext_21,empty_extra_ext,psk_ext_84) else caught-fail) in
                                        {7643}let (client_hello'_19: msg,cr'_21: bytes32,kex_data'_16: bitstring,psk_data'_35: bitstring) = (if v_1696 then (CH(o_cr_16,o_offer_41),o_cr_16,kex_data_4,psk_data_41) else fail-any) in
                                        {7644}out(io, client_hello'_19);
                                        {7645}let cur_log_OU1_HRR_OU2_16: bitstring = (cur_log_OU1_HRR_4,client_hello'_19) in
                                        {7646}in(io, server_hello'_31: msg);
                                        {7647}let SH(sr'_16: bytes32,mode'_16: params) = server_hello'_31 in
                                        (
                                            {7648}if (sr'_16 = B32(HRR24,HRR8)) then
                                                {7649}out(io, unexpected_message)
                                            else
                                                {7650}let (x_525: bitstring,g_47: group) = kex_data'_16 in
                                                {7651}let (psk_offer_39: preSharedKey,id_offer_39: identityPsk,es_offer_39: bitstring,is_safe_offer_39: bool) = psk_data'_35 in
                                                {7652}event Client_PSKOffer(id_client_5,psk_offer_39,id_offer_39,is_safe_offer_39);
                                                {7653}event Client_Rand_client(id_client_5,cr'_21);
                                                {7654}event Client_DH_client(id_client_5,dh_pub(g_47,x_525));
                                                {7655}event Client_server_domain(id_client_5,o_dom_8);
                                                {7656}let SH(sr_47: bytes32,mode_44: params) = server_hello'_31 in
                                                {7657}event Client_Rand_server(id_client_5,sr_47);
                                                {7658}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_47,gy_40: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_85: preSharedKeyExt) = mode_44 in
                                                (
                                                    {7659}let cur_log2_82: bitstring = (cur_log_OU1_HRR_OU2_16,server_hello'_31) in
                                                    {7660}event Client_DH_server(id_client_5,gy_40);
                                                    {7661}let v_1697: bool = (psk_ext_85 = empty_psk_ext) in
                                                    {7662}let psk_184: preSharedKey = (if v_1697 then NoPsk else caught-fail) in
                                                    {7663}let s_180: bitstring = (if v_1697 then zero else caught-fail) in
                                                    {7664}let k_181: bitstring = (if v_1697 then catch-fail(psk2b(psk_184)) else caught-fail) in
                                                    {7665}let v_1698: bool = not-caught-fail(k_181) in
                                                    {7666}let early_secret_124: bitstring = (if v_1697 then catch-fail((if v_1698 then hmac(@8_tls_h,s_180,k_181) else fail-any)) else caught-fail) in
                                                    {7667}let v_1699: bool = not-caught-fail(early_secret_124) in
                                                    {7668}let l_461: label = (if v_1699 then tls13_ext_res_binder else caught-fail) in
                                                    {7669}let m_163: bitstring = (if v_1699 then zero else caught-fail) in
                                                    {7670}let h_435: bitstring = (if v_1699 then catch-fail(hash(@8_tls_h,m_163)) else caught-fail) in
                                                    {7671}let v_1700: bool = not-caught-fail(h_435) in
                                                    {7672}let x_526: bitstring = (if v_1700 then (l_461,h_435) else caught-fail) in
                                                    {7673}let binder_key_83: bitstring = (if v_1699 then catch-fail((if v_1700 then hmac(@8_tls_h,early_secret_124,x_526) else fail-any)) else caught-fail) in
                                                    {7674}let v_1701: bool = not-caught-fail(binder_key_83) in
                                                    {7675}let v_1702: bitstring = (if v_1697 then catch-fail((if v_1699 then (if v_1701 then (early_secret_124,binder_key_83) else fail-any) else fail-any)) else caught-fail) in
                                                    {7676}let v_1703: bool = (not-caught-fail(v_1702) && success?(1-proj-2-tuple(v_1702))) in
                                                    {7677}let kb_83: mac_key = (if v_1703 then 2-proj-2-tuple(v_1702) else caught-fail) in
                                                    {7678}let es_122: bitstring = (if v_1703 then 1-proj-2-tuple(v_1702) else caught-fail) in
                                                    {7679}let v_1704: bitstring = (if not(v_1697) then catch-fail(psk_data'_35) else caught-fail) in
                                                    {7680}let v_1705: bool = (not-caught-fail(v_1704) && success?(1-proj-4-tuple(v_1704))) in
                                                    {7681}let is_safe_73: bool = (if v_1705 then 4-proj-4-tuple(v_1704) else caught-fail) in
                                                    {7682}let es_123: bitstring = (if v_1705 then 3-proj-4-tuple(v_1704) else caught-fail) in
                                                    {7683}let id_84: identityPsk = (if v_1705 then 2-proj-4-tuple(v_1704) else caught-fail) in
                                                    {7684}let psk_185: preSharedKey = (if v_1705 then 1-proj-4-tuple(v_1704) else caught-fail) in
                                                    {7685}let (psk_186: preSharedKey,early_secret_125: bitstring,valid_39: bool,safe_psk_42: bool) = (if v_1697 then (if v_1703 then (NoPsk,es_122,true,false) else fail-any) else (if v_1705 then (psk_185,es_123,((psk_185 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_85)),is_safe_73) else fail-any)) in
                                                    {7686}event Client_PSKChoosen(id_client_5,psk_186,safe_psk_42);
                                                    {7687}if valid_39 then
                                                    (
                                                        {7688}let gxy_80: element = catch-fail(dh_decap_fun(g_47,gy_40,x_525)) in
                                                        {7689}let v_1706: bool = not-caught-fail(gxy_80) in
                                                        {7690}new s_181[]: seed;
                                                        {7691}let gxy_81: element = (if v_1706 then gxy_80 else dh_f(s_181)) in
                                                        {7692}event Client_DH_gxy(id_client_5,gxy_81);
                                                        {7693}let l_462: label = tls13_derived in
                                                        {7694}let m_164: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {7695}let v_1707: bool = not-caught-fail(m_164) in
                                                        {7696}let h_436: bitstring = (if v_1707 then catch-fail(hash(@8_tls_h,m_164)) else caught-fail) in
                                                        {7697}let v_1708: bool = not-caught-fail(h_436) in
                                                        {7698}let x_527: bitstring = (if v_1708 then (l_462,h_436) else caught-fail) in
                                                        {7699}let extra_85: bitstring = catch-fail((if v_1707 then (if v_1708 then hmac(@8_tls_h,early_secret_125,x_527) else fail-any) else fail-any)) in
                                                        {7700}let v_1709: bool = not-caught-fail(extra_85) in
                                                        {7701}let handshake_secret_40: bitstring = (if v_1709 then hmac(@8_tls_h,extra_85,gxy_81) else fail-any) in
                                                        {7702}let l_463: label = tls13_derived in
                                                        {7703}let m_165: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {7704}let v_1710: bool = not-caught-fail(m_165) in
                                                        {7705}let h_437: bitstring = (if v_1710 then catch-fail(hash(@8_tls_h,m_165)) else caught-fail) in
                                                        {7706}let v_1711: bool = not-caught-fail(h_437) in
                                                        {7707}let x_528: bitstring = (if v_1711 then (l_463,h_437) else caught-fail) in
                                                        {7708}let extra_86: bitstring = catch-fail((if v_1710 then (if v_1711 then hmac(@8_tls_h,handshake_secret_40,x_528) else fail-any) else fail-any)) in
                                                        {7709}let v_1712: bool = not-caught-fail(extra_86) in
                                                        {7710}let k_182: bitstring = (if v_1712 then zero else caught-fail) in
                                                        {7711}let master_secret_87: bitstring = (if v_1712 then catch-fail(hmac(@8_tls_h,handshake_secret_40,k_182)) else caught-fail) in
                                                        {7712}let v_1713: bool = not-caught-fail(master_secret_87) in
                                                        {7713}let l_464: label = (if v_1713 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {7714}let h_438: bitstring = (if v_1713 then catch-fail(hash(@8_tls_h,cur_log2_82)) else caught-fail) in
                                                        {7715}let v_1714: bool = not-caught-fail(h_438) in
                                                        {7716}let x_529: bitstring = (if v_1714 then (l_464,h_438) else caught-fail) in
                                                        {7717}let client_hts_40: bitstring = (if v_1713 then catch-fail((if v_1714 then hmac(@8_tls_h,handshake_secret_40,x_529) else fail-any)) else caught-fail) in
                                                        {7718}let v_1715: bool = not-caught-fail(client_hts_40) in
                                                        {7719}let l_465: label = (if v_1715 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {7720}let h_439: bitstring = (if v_1715 then catch-fail(hash(@8_tls_h,cur_log2_82)) else caught-fail) in
                                                        {7721}let v_1716: bool = not-caught-fail(h_439) in
                                                        {7722}let x_530: bitstring = (if v_1716 then (l_465,h_439) else caught-fail) in
                                                        {7723}let server_hts_40: bitstring = (if v_1715 then catch-fail((if v_1716 then hmac(@8_tls_h,handshake_secret_40,x_530) else fail-any)) else caught-fail) in
                                                        {7724}let v_1717: bool = not-caught-fail(server_hts_40) in
                                                        {7725}let l_466: label = (if v_1717 then tls13_key else caught-fail) in
                                                        {7726}let h_440: bitstring = (if v_1717 then zero else caught-fail) in
                                                        {7727}let x_531: bitstring = (if v_1717 then (l_466,h_440) else caught-fail) in
                                                        {7728}let client_wkh_40: bitstring = (if v_1717 then catch-fail(hmac(@8_tls_h,client_hts_40,x_531)) else caught-fail) in
                                                        {7729}let v_1718: bool = not-caught-fail(client_wkh_40) in
                                                        {7730}let l_467: label = (if v_1718 then tls13_key else caught-fail) in
                                                        {7731}let h_441: bitstring = (if v_1718 then zero else caught-fail) in
                                                        {7732}let x_532: bitstring = (if v_1718 then (l_467,h_441) else caught-fail) in
                                                        {7733}let server_wkh_40: bitstring = (if v_1718 then catch-fail(hmac(@8_tls_h,server_hts_40,x_532)) else caught-fail) in
                                                        {7734}let v_1719: bool = not-caught-fail(server_wkh_40) in
                                                        {7735}let l_468: label = (if v_1719 then tls13_finished else caught-fail) in
                                                        {7736}let h_442: bitstring = (if v_1719 then zero else caught-fail) in
                                                        {7737}let x_533: bitstring = (if v_1719 then (l_468,h_442) else caught-fail) in
                                                        {7738}let client_fk_40: bitstring = (if v_1719 then catch-fail(hmac(@8_tls_h,client_hts_40,x_533)) else caught-fail) in
                                                        {7739}let v_1720: bool = not-caught-fail(client_fk_40) in
                                                        {7740}let l_469: label = (if v_1720 then tls13_finished else caught-fail) in
                                                        {7741}let h_443: bitstring = (if v_1720 then zero else caught-fail) in
                                                        {7742}let x_534: bitstring = (if v_1720 then (l_469,h_443) else caught-fail) in
                                                        {7743}let server_fk_40: bitstring = (if v_1720 then catch-fail(hmac(@8_tls_h,server_hts_40,x_534)) else caught-fail) in
                                                        {7744}let v_1721: bool = not-caught-fail(server_fk_40) in
                                                        {7745}let (master_secret_88: bitstring,chk_47: aead_key,shk_46: aead_key,cfin_47: mac_key,sfin_46: mac_key) = (if v_1712 then (if v_1713 then (if v_1715 then (if v_1717 then (if v_1718 then (if v_1719 then (if v_1720 then (if v_1721 then (master_secret_87,client_wkh_40,server_wkh_40,client_fk_40,server_fk_40) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {7746}event Client_chk(id_client_5,chk_47);
                                                        {7747}event Client_shk(id_client_5,shk_46);
                                                        {7748}event Client_cfin(id_client_5,cfin_47);
                                                        {7749}event Client_sfin(id_client_5,sfin_46);
                                                        {7750}in(io, enc_ee_msg_39: bitstring);
                                                        {7751}let ee_msg_44: msg = aead_dec(@8_tls_a,shk_46,0,zero,enc_ee_msg_39) in
                                                        {7752}let EE(ech_ee_39: echExt,extra_ee_39: extraExt) = ee_msg_44 in
                                                        {7753}let cur_log2_83: bitstring = (cur_log2_82,ee_msg_44) in
                                                        {7754}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_21,sr_47,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_186,safe_psk_42,@8_comp_psk,master_secret_88,chk_47,0,shk_46,1,cfin_47,sfin_46,cur_log2_83)))
                                                    )
                                                    else
                                                        {7755}out(io, illegal_parameter)
                                                )
                                                else
                                                    {7756}out(io, illegal_parameter)
                                        )
                                        else
                                            {7757}out(io, unexpected_message)
                                    )
                                    else
                                        {7907}get pre_shared_keys(c_dom'_13: domain,=o_dom_13,=@8_tls_h,id_85: identityPsk,psk_187: preSharedKey,idP_15: idProc,is_safe_74: bool) in
                                        {7758}event Selected_one_time_used_psk(id_client_5,psk_187,is_safe_74);
                                        {7759}event Selected_psk(c_dom_6,c_dom'_13,idP_15,is_safe_74);
                                        {7760}event Selected_psk_no_missmatch(id_client_5,o_dom_13,@8_tls_h,psk_187,id_85);
                                        {7761}event Selected_psk_with_ID(c_dom_6,c_dom'_13,id_85,idP_15,is_safe_74);
                                        {7762}let v_1722: bitstring = (id_85,psk_187,is_safe_74) in
                                        {7763}let v_1723: bool = success?(1-proj-3-tuple(v_1722)) in
                                        {7764}let is_safe_75: bool = (if v_1723 then 3-proj-3-tuple(v_1722) else caught-fail) in
                                        {7765}let psk_188: preSharedKey = (if v_1723 then 2-proj-3-tuple(v_1722) else caught-fail) in
                                        {7766}let id_86: identityPsk = (if v_1723 then 1-proj-3-tuple(v_1722) else caught-fail) in
                                        {7767}let offer_25: params = (if v_1723 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_11,SNI(o_dom_13),o_ech_ext_21,extra_84,trunc_client_psk_ext(id_86)) else caught-fail) in
                                        {7768}let cur_log'_25: bitstring = (if v_1723 then (cur_log_OU1_HRR_4,CH(o_cr_16,offer_25)) else caught-fail) in
                                        {7769}let s_182: bitstring = (if v_1723 then zero else caught-fail) in
                                        {7770}let k_183: bitstring = (if v_1723 then catch-fail(psk2b(psk_188)) else caught-fail) in
                                        {7771}let v_1724: bool = not-caught-fail(k_183) in
                                        {7772}let early_secret_126: bitstring = (if v_1723 then catch-fail((if v_1724 then hmac(@8_tls_h,s_182,k_183) else fail-any)) else caught-fail) in
                                        {7773}let v_1725: bool = not-caught-fail(early_secret_126) in
                                        {7774}let l_470: label = (if v_1725 then tls13_ext_res_binder else caught-fail) in
                                        {7775}let m_166: bitstring = (if v_1725 then zero else caught-fail) in
                                        {7776}let h_444: bitstring = (if v_1725 then catch-fail(hash(@8_tls_h,m_166)) else caught-fail) in
                                        {7777}let v_1726: bool = not-caught-fail(h_444) in
                                        {7778}let x_535: bitstring = (if v_1726 then (l_470,h_444) else caught-fail) in
                                        {7779}let binder_key_84: bitstring = (if v_1725 then catch-fail((if v_1726 then hmac(@8_tls_h,early_secret_126,x_535) else fail-any)) else caught-fail) in
                                        {7780}let v_1727: bool = not-caught-fail(binder_key_84) in
                                        {7781}let v_1728: bitstring = (if v_1723 then catch-fail((if v_1725 then (if v_1727 then (early_secret_126,binder_key_84) else fail-any) else fail-any)) else caught-fail) in
                                        {7782}let v_1729: bool = (not-caught-fail(v_1728) && success?(1-proj-2-tuple(v_1728))) in
                                        {7783}let kb_84: mac_key = (if v_1729 then 2-proj-2-tuple(v_1728) else caught-fail) in
                                        {7784}let es_124: bitstring = (if v_1729 then 1-proj-2-tuple(v_1728) else caught-fail) in
                                        {7785}let binders_24: bitstring = (if v_1729 then catch-fail(hmac(@8_tls_h,kb_84,cur_log'_25)) else caught-fail) in
                                        {7786}let v_1730: bool = not-caught-fail(binders_24) in
                                        {7787}let v_1731: bitstring = catch-fail((if v_1723 then (if v_1729 then (if v_1730 then (client_psk_ext(id_86,binders_24),(psk_188,id_86,es_124,is_safe_75)) else fail-any) else fail-any) else fail-any)) in
                                        {7788}let v_1732: bool = (not-caught-fail(v_1731) && success?(1-proj-2-tuple(v_1731))) in
                                        {7789}let psk_data_42: bitstring = (if v_1732 then 2-proj-2-tuple(v_1731) else caught-fail) in
                                        {7790}let psk_ext_86: preSharedKeyExt = (if v_1732 then 1-proj-2-tuple(v_1731) else caught-fail) in
                                        {7791}let o_offer_42: params = (if v_1732 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_11,SNI(o_dom_13),o_ech_ext_21,empty_extra_ext,psk_ext_86) else caught-fail) in
                                        {7792}let (client_hello'_20: msg,cr'_22: bytes32,kex_data'_17: bitstring,psk_data'_36: bitstring) = (if v_1732 then (CH(o_cr_16,o_offer_42),o_cr_16,kex_data_4,psk_data_42) else fail-any) in
                                        {7793}out(io, client_hello'_20);
                                        {7794}let cur_log_OU1_HRR_OU2_17: bitstring = (cur_log_OU1_HRR_4,client_hello'_20) in
                                        {7795}in(io, server_hello'_32: msg);
                                        {7796}let SH(sr'_17: bytes32,mode'_17: params) = server_hello'_32 in
                                        (
                                            {7797}if (sr'_17 = B32(HRR24,HRR8)) then
                                                {7798}out(io, unexpected_message)
                                            else
                                                {7799}let (x_536: bitstring,g_48: group) = kex_data'_17 in
                                                {7800}let (psk_offer_40: preSharedKey,id_offer_40: identityPsk,es_offer_40: bitstring,is_safe_offer_40: bool) = psk_data'_36 in
                                                {7801}event Client_PSKOffer(id_client_5,psk_offer_40,id_offer_40,is_safe_offer_40);
                                                {7802}event Client_Rand_client(id_client_5,cr'_22);
                                                {7803}event Client_DH_client(id_client_5,dh_pub(g_48,x_536));
                                                {7804}event Client_server_domain(id_client_5,o_dom_8);
                                                {7805}let SH(sr_48: bytes32,mode_45: params) = server_hello'_32 in
                                                {7806}event Client_Rand_server(id_client_5,sr_48);
                                                {7807}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_48,gy_41: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_87: preSharedKeyExt) = mode_45 in
                                                (
                                                    {7808}let cur_log2_84: bitstring = (cur_log_OU1_HRR_OU2_17,server_hello'_32) in
                                                    {7809}event Client_DH_server(id_client_5,gy_41);
                                                    {7810}let v_1733: bool = (psk_ext_87 = empty_psk_ext) in
                                                    {7811}let psk_189: preSharedKey = (if v_1733 then NoPsk else caught-fail) in
                                                    {7812}let s_183: bitstring = (if v_1733 then zero else caught-fail) in
                                                    {7813}let k_184: bitstring = (if v_1733 then catch-fail(psk2b(psk_189)) else caught-fail) in
                                                    {7814}let v_1734: bool = not-caught-fail(k_184) in
                                                    {7815}let early_secret_127: bitstring = (if v_1733 then catch-fail((if v_1734 then hmac(@8_tls_h,s_183,k_184) else fail-any)) else caught-fail) in
                                                    {7816}let v_1735: bool = not-caught-fail(early_secret_127) in
                                                    {7817}let l_471: label = (if v_1735 then tls13_ext_res_binder else caught-fail) in
                                                    {7818}let m_167: bitstring = (if v_1735 then zero else caught-fail) in
                                                    {7819}let h_445: bitstring = (if v_1735 then catch-fail(hash(@8_tls_h,m_167)) else caught-fail) in
                                                    {7820}let v_1736: bool = not-caught-fail(h_445) in
                                                    {7821}let x_537: bitstring = (if v_1736 then (l_471,h_445) else caught-fail) in
                                                    {7822}let binder_key_85: bitstring = (if v_1735 then catch-fail((if v_1736 then hmac(@8_tls_h,early_secret_127,x_537) else fail-any)) else caught-fail) in
                                                    {7823}let v_1737: bool = not-caught-fail(binder_key_85) in
                                                    {7824}let v_1738: bitstring = (if v_1733 then catch-fail((if v_1735 then (if v_1737 then (early_secret_127,binder_key_85) else fail-any) else fail-any)) else caught-fail) in
                                                    {7825}let v_1739: bool = (not-caught-fail(v_1738) && success?(1-proj-2-tuple(v_1738))) in
                                                    {7826}let kb_85: mac_key = (if v_1739 then 2-proj-2-tuple(v_1738) else caught-fail) in
                                                    {7827}let es_125: bitstring = (if v_1739 then 1-proj-2-tuple(v_1738) else caught-fail) in
                                                    {7828}let v_1740: bitstring = (if not(v_1733) then catch-fail(psk_data'_36) else caught-fail) in
                                                    {7829}let v_1741: bool = (not-caught-fail(v_1740) && success?(1-proj-4-tuple(v_1740))) in
                                                    {7830}let is_safe_76: bool = (if v_1741 then 4-proj-4-tuple(v_1740) else caught-fail) in
                                                    {7831}let es_126: bitstring = (if v_1741 then 3-proj-4-tuple(v_1740) else caught-fail) in
                                                    {7832}let id_87: identityPsk = (if v_1741 then 2-proj-4-tuple(v_1740) else caught-fail) in
                                                    {7833}let psk_190: preSharedKey = (if v_1741 then 1-proj-4-tuple(v_1740) else caught-fail) in
                                                    {7834}let (psk_191: preSharedKey,early_secret_128: bitstring,valid_40: bool,safe_psk_43: bool) = (if v_1733 then (if v_1739 then (NoPsk,es_125,true,false) else fail-any) else (if v_1741 then (psk_190,es_126,((psk_190 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_87)),is_safe_76) else fail-any)) in
                                                    {7835}event Client_PSKChoosen(id_client_5,psk_191,safe_psk_43);
                                                    {7836}if valid_40 then
                                                    (
                                                        {7837}let gxy_82: element = catch-fail(dh_decap_fun(g_48,gy_41,x_536)) in
                                                        {7838}let v_1742: bool = not-caught-fail(gxy_82) in
                                                        {7839}new s_184[]: seed;
                                                        {7840}let gxy_83: element = (if v_1742 then gxy_82 else dh_f(s_184)) in
                                                        {7841}event Client_DH_gxy(id_client_5,gxy_83);
                                                        {7842}let l_472: label = tls13_derived in
                                                        {7843}let m_168: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {7844}let v_1743: bool = not-caught-fail(m_168) in
                                                        {7845}let h_446: bitstring = (if v_1743 then catch-fail(hash(@8_tls_h,m_168)) else caught-fail) in
                                                        {7846}let v_1744: bool = not-caught-fail(h_446) in
                                                        {7847}let x_538: bitstring = (if v_1744 then (l_472,h_446) else caught-fail) in
                                                        {7848}let extra_87: bitstring = catch-fail((if v_1743 then (if v_1744 then hmac(@8_tls_h,early_secret_128,x_538) else fail-any) else fail-any)) in
                                                        {7849}let v_1745: bool = not-caught-fail(extra_87) in
                                                        {7850}let handshake_secret_41: bitstring = (if v_1745 then hmac(@8_tls_h,extra_87,gxy_83) else fail-any) in
                                                        {7851}let l_473: label = tls13_derived in
                                                        {7852}let m_169: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {7853}let v_1746: bool = not-caught-fail(m_169) in
                                                        {7854}let h_447: bitstring = (if v_1746 then catch-fail(hash(@8_tls_h,m_169)) else caught-fail) in
                                                        {7855}let v_1747: bool = not-caught-fail(h_447) in
                                                        {7856}let x_539: bitstring = (if v_1747 then (l_473,h_447) else caught-fail) in
                                                        {7857}let extra_88: bitstring = catch-fail((if v_1746 then (if v_1747 then hmac(@8_tls_h,handshake_secret_41,x_539) else fail-any) else fail-any)) in
                                                        {7858}let v_1748: bool = not-caught-fail(extra_88) in
                                                        {7859}let k_185: bitstring = (if v_1748 then zero else caught-fail) in
                                                        {7860}let master_secret_89: bitstring = (if v_1748 then catch-fail(hmac(@8_tls_h,handshake_secret_41,k_185)) else caught-fail) in
                                                        {7861}let v_1749: bool = not-caught-fail(master_secret_89) in
                                                        {7862}let l_474: label = (if v_1749 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {7863}let h_448: bitstring = (if v_1749 then catch-fail(hash(@8_tls_h,cur_log2_84)) else caught-fail) in
                                                        {7864}let v_1750: bool = not-caught-fail(h_448) in
                                                        {7865}let x_540: bitstring = (if v_1750 then (l_474,h_448) else caught-fail) in
                                                        {7866}let client_hts_41: bitstring = (if v_1749 then catch-fail((if v_1750 then hmac(@8_tls_h,handshake_secret_41,x_540) else fail-any)) else caught-fail) in
                                                        {7867}let v_1751: bool = not-caught-fail(client_hts_41) in
                                                        {7868}let l_475: label = (if v_1751 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {7869}let h_449: bitstring = (if v_1751 then catch-fail(hash(@8_tls_h,cur_log2_84)) else caught-fail) in
                                                        {7870}let v_1752: bool = not-caught-fail(h_449) in
                                                        {7871}let x_541: bitstring = (if v_1752 then (l_475,h_449) else caught-fail) in
                                                        {7872}let server_hts_41: bitstring = (if v_1751 then catch-fail((if v_1752 then hmac(@8_tls_h,handshake_secret_41,x_541) else fail-any)) else caught-fail) in
                                                        {7873}let v_1753: bool = not-caught-fail(server_hts_41) in
                                                        {7874}let l_476: label = (if v_1753 then tls13_key else caught-fail) in
                                                        {7875}let h_450: bitstring = (if v_1753 then zero else caught-fail) in
                                                        {7876}let x_542: bitstring = (if v_1753 then (l_476,h_450) else caught-fail) in
                                                        {7877}let client_wkh_41: bitstring = (if v_1753 then catch-fail(hmac(@8_tls_h,client_hts_41,x_542)) else caught-fail) in
                                                        {7878}let v_1754: bool = not-caught-fail(client_wkh_41) in
                                                        {7879}let l_477: label = (if v_1754 then tls13_key else caught-fail) in
                                                        {7880}let h_451: bitstring = (if v_1754 then zero else caught-fail) in
                                                        {7881}let x_543: bitstring = (if v_1754 then (l_477,h_451) else caught-fail) in
                                                        {7882}let server_wkh_41: bitstring = (if v_1754 then catch-fail(hmac(@8_tls_h,server_hts_41,x_543)) else caught-fail) in
                                                        {7883}let v_1755: bool = not-caught-fail(server_wkh_41) in
                                                        {7884}let l_478: label = (if v_1755 then tls13_finished else caught-fail) in
                                                        {7885}let h_452: bitstring = (if v_1755 then zero else caught-fail) in
                                                        {7886}let x_544: bitstring = (if v_1755 then (l_478,h_452) else caught-fail) in
                                                        {7887}let client_fk_41: bitstring = (if v_1755 then catch-fail(hmac(@8_tls_h,client_hts_41,x_544)) else caught-fail) in
                                                        {7888}let v_1756: bool = not-caught-fail(client_fk_41) in
                                                        {7889}let l_479: label = (if v_1756 then tls13_finished else caught-fail) in
                                                        {7890}let h_453: bitstring = (if v_1756 then zero else caught-fail) in
                                                        {7891}let x_545: bitstring = (if v_1756 then (l_479,h_453) else caught-fail) in
                                                        {7892}let server_fk_41: bitstring = (if v_1756 then catch-fail(hmac(@8_tls_h,server_hts_41,x_545)) else caught-fail) in
                                                        {7893}let v_1757: bool = not-caught-fail(server_fk_41) in
                                                        {7894}let (master_secret_90: bitstring,chk_48: aead_key,shk_47: aead_key,cfin_48: mac_key,sfin_47: mac_key) = (if v_1748 then (if v_1749 then (if v_1751 then (if v_1753 then (if v_1754 then (if v_1755 then (if v_1756 then (if v_1757 then (master_secret_89,client_wkh_41,server_wkh_41,client_fk_41,server_fk_41) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {7895}event Client_chk(id_client_5,chk_48);
                                                        {7896}event Client_shk(id_client_5,shk_47);
                                                        {7897}event Client_cfin(id_client_5,cfin_48);
                                                        {7898}event Client_sfin(id_client_5,sfin_47);
                                                        {7899}in(io, enc_ee_msg_40: bitstring);
                                                        {7900}let ee_msg_45: msg = aead_dec(@8_tls_a,shk_47,0,zero,enc_ee_msg_40) in
                                                        {7901}let EE(ech_ee_40: echExt,extra_ee_40: extraExt) = ee_msg_45 in
                                                        {7902}let cur_log2_85: bitstring = (cur_log2_84,ee_msg_45) in
                                                        {7903}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_22,sr_48,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_191,safe_psk_43,@8_comp_psk,master_secret_90,chk_48,0,shk_47,1,cfin_48,sfin_47,cur_log2_85)))
                                                    )
                                                    else
                                                        {7904}out(io, illegal_parameter)
                                                )
                                                else
                                                    {7905}out(io, illegal_parameter)
                                        )
                                        else
                                            {7906}out(io, unexpected_message)
                                )
                                else
                                    {7908}let psk_192: preSharedKey = NoPsk in
                                    {7909}let s_185: bitstring = zero in
                                    {7910}let k_186: bitstring = catch-fail(psk2b(psk_192)) in
                                    {7911}let v_1758: bool = not-caught-fail(k_186) in
                                    {7912}let early_secret_129: bitstring = catch-fail((if v_1758 then hmac(@8_tls_h,s_185,k_186) else fail-any)) in
                                    {7913}let v_1759: bool = not-caught-fail(early_secret_129) in
                                    {7914}let l_480: label = (if v_1759 then tls13_ext_res_binder else caught-fail) in
                                    {7915}let m_170: bitstring = (if v_1759 then zero else caught-fail) in
                                    {7916}let h_454: bitstring = (if v_1759 then catch-fail(hash(@8_tls_h,m_170)) else caught-fail) in
                                    {7917}let v_1760: bool = not-caught-fail(h_454) in
                                    {7918}let x_546: bitstring = (if v_1760 then (l_480,h_454) else caught-fail) in
                                    {7919}let binder_key_86: bitstring = (if v_1759 then catch-fail((if v_1760 then hmac(@8_tls_h,early_secret_129,x_546) else fail-any)) else caught-fail) in
                                    {7920}let v_1761: bool = not-caught-fail(binder_key_86) in
                                    {7921}let v_1762: bitstring = catch-fail((if v_1759 then (if v_1761 then (early_secret_129,binder_key_86) else fail-any) else fail-any)) in
                                    {7922}let v_1763: bool = (not-caught-fail(v_1762) && success?(1-proj-2-tuple(v_1762))) in
                                    {7923}let kb_86: mac_key = (if v_1763 then 2-proj-2-tuple(v_1762) else caught-fail) in
                                    {7924}let es_127: bitstring = (if v_1763 then 1-proj-2-tuple(v_1762) else caught-fail) in
                                    {7925}let v_1764: bitstring = catch-fail((if v_1763 then (empty_psk_ext,(NoPsk,zero,es_127,false)) else fail-any)) in
                                    {7926}let v_1765: bool = (not-caught-fail(v_1764) && success?(1-proj-2-tuple(v_1764))) in
                                    {7927}let psk_data_43: bitstring = (if v_1765 then 2-proj-2-tuple(v_1764) else caught-fail) in
                                    {7928}let psk_ext_88: preSharedKeyExt = (if v_1765 then 1-proj-2-tuple(v_1764) else caught-fail) in
                                    {7929}let o_offer_43: params = (if v_1765 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_11,SNI(o_dom_13),o_ech_ext_21,empty_extra_ext,psk_ext_88) else caught-fail) in
                                    {7930}let (client_hello'_21: msg,cr'_23: bytes32,kex_data'_18: bitstring,psk_data'_37: bitstring) = (if v_1765 then (CH(o_cr_16,o_offer_43),o_cr_16,kex_data_4,psk_data_43) else fail-any) in
                                    {7931}out(io, client_hello'_21);
                                    {7932}let cur_log_OU1_HRR_OU2_18: bitstring = (cur_log_OU1_HRR_4,client_hello'_21) in
                                    {7933}in(io, server_hello'_33: msg);
                                    {7934}let SH(sr'_18: bytes32,mode'_18: params) = server_hello'_33 in
                                    (
                                        {7935}if (sr'_18 = B32(HRR24,HRR8)) then
                                            {7936}out(io, unexpected_message)
                                        else
                                            {7937}let (x_547: bitstring,g_49: group) = kex_data'_18 in
                                            {7938}let (psk_offer_41: preSharedKey,id_offer_41: identityPsk,es_offer_41: bitstring,is_safe_offer_41: bool) = psk_data'_37 in
                                            {7939}event Client_PSKOffer(id_client_5,psk_offer_41,id_offer_41,is_safe_offer_41);
                                            {7940}event Client_Rand_client(id_client_5,cr'_23);
                                            {7941}event Client_DH_client(id_client_5,dh_pub(g_49,x_547));
                                            {7942}event Client_server_domain(id_client_5,o_dom_8);
                                            {7943}let SH(sr_49: bytes32,mode_46: params) = server_hello'_33 in
                                            {7944}event Client_Rand_server(id_client_5,sr_49);
                                            {7945}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_49,gy_42: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_89: preSharedKeyExt) = mode_46 in
                                            (
                                                {7946}let cur_log2_86: bitstring = (cur_log_OU1_HRR_OU2_18,server_hello'_33) in
                                                {7947}event Client_DH_server(id_client_5,gy_42);
                                                {7948}let v_1766: bool = (psk_ext_89 = empty_psk_ext) in
                                                {7949}let psk_193: preSharedKey = (if v_1766 then NoPsk else caught-fail) in
                                                {7950}let s_186: bitstring = (if v_1766 then zero else caught-fail) in
                                                {7951}let k_187: bitstring = (if v_1766 then catch-fail(psk2b(psk_193)) else caught-fail) in
                                                {7952}let v_1767: bool = not-caught-fail(k_187) in
                                                {7953}let early_secret_130: bitstring = (if v_1766 then catch-fail((if v_1767 then hmac(@8_tls_h,s_186,k_187) else fail-any)) else caught-fail) in
                                                {7954}let v_1768: bool = not-caught-fail(early_secret_130) in
                                                {7955}let l_481: label = (if v_1768 then tls13_ext_res_binder else caught-fail) in
                                                {7956}let m_171: bitstring = (if v_1768 then zero else caught-fail) in
                                                {7957}let h_455: bitstring = (if v_1768 then catch-fail(hash(@8_tls_h,m_171)) else caught-fail) in
                                                {7958}let v_1769: bool = not-caught-fail(h_455) in
                                                {7959}let x_548: bitstring = (if v_1769 then (l_481,h_455) else caught-fail) in
                                                {7960}let binder_key_87: bitstring = (if v_1768 then catch-fail((if v_1769 then hmac(@8_tls_h,early_secret_130,x_548) else fail-any)) else caught-fail) in
                                                {7961}let v_1770: bool = not-caught-fail(binder_key_87) in
                                                {7962}let v_1771: bitstring = (if v_1766 then catch-fail((if v_1768 then (if v_1770 then (early_secret_130,binder_key_87) else fail-any) else fail-any)) else caught-fail) in
                                                {7963}let v_1772: bool = (not-caught-fail(v_1771) && success?(1-proj-2-tuple(v_1771))) in
                                                {7964}let kb_87: mac_key = (if v_1772 then 2-proj-2-tuple(v_1771) else caught-fail) in
                                                {7965}let es_128: bitstring = (if v_1772 then 1-proj-2-tuple(v_1771) else caught-fail) in
                                                {7966}let v_1773: bitstring = (if not(v_1766) then catch-fail(psk_data'_37) else caught-fail) in
                                                {7967}let v_1774: bool = (not-caught-fail(v_1773) && success?(1-proj-4-tuple(v_1773))) in
                                                {7968}let is_safe_77: bool = (if v_1774 then 4-proj-4-tuple(v_1773) else caught-fail) in
                                                {7969}let es_129: bitstring = (if v_1774 then 3-proj-4-tuple(v_1773) else caught-fail) in
                                                {7970}let id_88: identityPsk = (if v_1774 then 2-proj-4-tuple(v_1773) else caught-fail) in
                                                {7971}let psk_194: preSharedKey = (if v_1774 then 1-proj-4-tuple(v_1773) else caught-fail) in
                                                {7972}let (psk_195: preSharedKey,early_secret_131: bitstring,valid_41: bool,safe_psk_44: bool) = (if v_1766 then (if v_1772 then (NoPsk,es_128,true,false) else fail-any) else (if v_1774 then (psk_194,es_129,((psk_194 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_89)),is_safe_77) else fail-any)) in
                                                {7973}event Client_PSKChoosen(id_client_5,psk_195,safe_psk_44);
                                                {7974}if valid_41 then
                                                (
                                                    {7975}let gxy_84: element = catch-fail(dh_decap_fun(g_49,gy_42,x_547)) in
                                                    {7976}let v_1775: bool = not-caught-fail(gxy_84) in
                                                    {7977}new s_187[]: seed;
                                                    {7978}let gxy_85: element = (if v_1775 then gxy_84 else dh_f(s_187)) in
                                                    {7979}event Client_DH_gxy(id_client_5,gxy_85);
                                                    {7980}let l_482: label = tls13_derived in
                                                    {7981}let m_172: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {7982}let v_1776: bool = not-caught-fail(m_172) in
                                                    {7983}let h_456: bitstring = (if v_1776 then catch-fail(hash(@8_tls_h,m_172)) else caught-fail) in
                                                    {7984}let v_1777: bool = not-caught-fail(h_456) in
                                                    {7985}let x_549: bitstring = (if v_1777 then (l_482,h_456) else caught-fail) in
                                                    {7986}let extra_89: bitstring = catch-fail((if v_1776 then (if v_1777 then hmac(@8_tls_h,early_secret_131,x_549) else fail-any) else fail-any)) in
                                                    {7987}let v_1778: bool = not-caught-fail(extra_89) in
                                                    {7988}let handshake_secret_42: bitstring = (if v_1778 then hmac(@8_tls_h,extra_89,gxy_85) else fail-any) in
                                                    {7989}let l_483: label = tls13_derived in
                                                    {7990}let m_173: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {7991}let v_1779: bool = not-caught-fail(m_173) in
                                                    {7992}let h_457: bitstring = (if v_1779 then catch-fail(hash(@8_tls_h,m_173)) else caught-fail) in
                                                    {7993}let v_1780: bool = not-caught-fail(h_457) in
                                                    {7994}let x_550: bitstring = (if v_1780 then (l_483,h_457) else caught-fail) in
                                                    {7995}let extra_90: bitstring = catch-fail((if v_1779 then (if v_1780 then hmac(@8_tls_h,handshake_secret_42,x_550) else fail-any) else fail-any)) in
                                                    {7996}let v_1781: bool = not-caught-fail(extra_90) in
                                                    {7997}let k_188: bitstring = (if v_1781 then zero else caught-fail) in
                                                    {7998}let master_secret_91: bitstring = (if v_1781 then catch-fail(hmac(@8_tls_h,handshake_secret_42,k_188)) else caught-fail) in
                                                    {7999}let v_1782: bool = not-caught-fail(master_secret_91) in
                                                    {8000}let l_484: label = (if v_1782 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {8001}let h_458: bitstring = (if v_1782 then catch-fail(hash(@8_tls_h,cur_log2_86)) else caught-fail) in
                                                    {8002}let v_1783: bool = not-caught-fail(h_458) in
                                                    {8003}let x_551: bitstring = (if v_1783 then (l_484,h_458) else caught-fail) in
                                                    {8004}let client_hts_42: bitstring = (if v_1782 then catch-fail((if v_1783 then hmac(@8_tls_h,handshake_secret_42,x_551) else fail-any)) else caught-fail) in
                                                    {8005}let v_1784: bool = not-caught-fail(client_hts_42) in
                                                    {8006}let l_485: label = (if v_1784 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {8007}let h_459: bitstring = (if v_1784 then catch-fail(hash(@8_tls_h,cur_log2_86)) else caught-fail) in
                                                    {8008}let v_1785: bool = not-caught-fail(h_459) in
                                                    {8009}let x_552: bitstring = (if v_1785 then (l_485,h_459) else caught-fail) in
                                                    {8010}let server_hts_42: bitstring = (if v_1784 then catch-fail((if v_1785 then hmac(@8_tls_h,handshake_secret_42,x_552) else fail-any)) else caught-fail) in
                                                    {8011}let v_1786: bool = not-caught-fail(server_hts_42) in
                                                    {8012}let l_486: label = (if v_1786 then tls13_key else caught-fail) in
                                                    {8013}let h_460: bitstring = (if v_1786 then zero else caught-fail) in
                                                    {8014}let x_553: bitstring = (if v_1786 then (l_486,h_460) else caught-fail) in
                                                    {8015}let client_wkh_42: bitstring = (if v_1786 then catch-fail(hmac(@8_tls_h,client_hts_42,x_553)) else caught-fail) in
                                                    {8016}let v_1787: bool = not-caught-fail(client_wkh_42) in
                                                    {8017}let l_487: label = (if v_1787 then tls13_key else caught-fail) in
                                                    {8018}let h_461: bitstring = (if v_1787 then zero else caught-fail) in
                                                    {8019}let x_554: bitstring = (if v_1787 then (l_487,h_461) else caught-fail) in
                                                    {8020}let server_wkh_42: bitstring = (if v_1787 then catch-fail(hmac(@8_tls_h,server_hts_42,x_554)) else caught-fail) in
                                                    {8021}let v_1788: bool = not-caught-fail(server_wkh_42) in
                                                    {8022}let l_488: label = (if v_1788 then tls13_finished else caught-fail) in
                                                    {8023}let h_462: bitstring = (if v_1788 then zero else caught-fail) in
                                                    {8024}let x_555: bitstring = (if v_1788 then (l_488,h_462) else caught-fail) in
                                                    {8025}let client_fk_42: bitstring = (if v_1788 then catch-fail(hmac(@8_tls_h,client_hts_42,x_555)) else caught-fail) in
                                                    {8026}let v_1789: bool = not-caught-fail(client_fk_42) in
                                                    {8027}let l_489: label = (if v_1789 then tls13_finished else caught-fail) in
                                                    {8028}let h_463: bitstring = (if v_1789 then zero else caught-fail) in
                                                    {8029}let x_556: bitstring = (if v_1789 then (l_489,h_463) else caught-fail) in
                                                    {8030}let server_fk_42: bitstring = (if v_1789 then catch-fail(hmac(@8_tls_h,server_hts_42,x_556)) else caught-fail) in
                                                    {8031}let v_1790: bool = not-caught-fail(server_fk_42) in
                                                    {8032}let (master_secret_92: bitstring,chk_49: aead_key,shk_48: aead_key,cfin_49: mac_key,sfin_48: mac_key) = (if v_1781 then (if v_1782 then (if v_1784 then (if v_1786 then (if v_1787 then (if v_1788 then (if v_1789 then (if v_1790 then (master_secret_91,client_wkh_42,server_wkh_42,client_fk_42,server_fk_42) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {8033}event Client_chk(id_client_5,chk_49);
                                                    {8034}event Client_shk(id_client_5,shk_48);
                                                    {8035}event Client_cfin(id_client_5,cfin_49);
                                                    {8036}event Client_sfin(id_client_5,sfin_48);
                                                    {8037}in(io, enc_ee_msg_41: bitstring);
                                                    {8038}let ee_msg_46: msg = aead_dec(@8_tls_a,shk_48,0,zero,enc_ee_msg_41) in
                                                    {8039}let EE(ech_ee_41: echExt,extra_ee_41: extraExt) = ee_msg_46 in
                                                    {8040}let cur_log2_87: bitstring = (cur_log2_86,ee_msg_46) in
                                                    {8041}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_23,sr_49,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_195,safe_psk_44,@8_comp_psk,master_secret_92,chk_49,0,shk_48,1,cfin_49,sfin_48,cur_log2_87)))
                                                )
                                                else
                                                    {8042}out(io, illegal_parameter)
                                            )
                                            else
                                                {8043}out(io, illegal_parameter)
                                    )
                                    else
                                        {8044}out(io, unexpected_message)
                            )
                            else
                                {8045}let psk_196: preSharedKey = NoPsk in
                                {8046}let s_188: bitstring = zero in
                                {8047}let k_189: bitstring = catch-fail(psk2b(psk_196)) in
                                {8048}let v_1791: bool = not-caught-fail(k_189) in
                                {8049}let early_secret_132: bitstring = catch-fail((if v_1791 then hmac(@8_tls_h,s_188,k_189) else fail-any)) in
                                {8050}let v_1792: bool = not-caught-fail(early_secret_132) in
                                {8051}let l_490: label = (if v_1792 then tls13_ext_res_binder else caught-fail) in
                                {8052}let m_174: bitstring = (if v_1792 then zero else caught-fail) in
                                {8053}let h_464: bitstring = (if v_1792 then catch-fail(hash(@8_tls_h,m_174)) else caught-fail) in
                                {8054}let v_1793: bool = not-caught-fail(h_464) in
                                {8055}let x_557: bitstring = (if v_1793 then (l_490,h_464) else caught-fail) in
                                {8056}let binder_key_88: bitstring = (if v_1792 then catch-fail((if v_1793 then hmac(@8_tls_h,early_secret_132,x_557) else fail-any)) else caught-fail) in
                                {8057}let v_1794: bool = not-caught-fail(binder_key_88) in
                                {8058}let v_1795: bitstring = catch-fail((if v_1792 then (if v_1794 then (early_secret_132,binder_key_88) else fail-any) else fail-any)) in
                                {8059}let v_1796: bool = (not-caught-fail(v_1795) && success?(1-proj-2-tuple(v_1795))) in
                                {8060}let kb_88: mac_key = (if v_1796 then 2-proj-2-tuple(v_1795) else caught-fail) in
                                {8061}let es_130: bitstring = (if v_1796 then 1-proj-2-tuple(v_1795) else caught-fail) in
                                {8062}let v_1797: preSharedKeyExt = (if v_1796 then catch-fail(o_psk_ext_21) else caught-fail) in
                                {8063}let v_1798: bool = (not-caught-fail(v_1797) && success?(1-proj-client_psk_ext(v_1797))) in
                                {8064}let fake_binder_24: bitstring = (if v_1798 then 2-proj-client_psk_ext(v_1797) else caught-fail) in
                                {8065}let fake_id_24: identityPsk = (if v_1798 then 1-proj-client_psk_ext(v_1797) else caught-fail) in
                                {8066}new fake_binder'_4[]: bitstring;
                                {8067}let v_1799: bitstring = catch-fail((if v_1796 then (if v_1798 then (client_psk_ext(fake_id_24,fake_binder'_4),(NoPsk,zero,es_130,false)) else (empty_psk_ext,(NoPsk,zero,es_130,false))) else fail-any)) in
                                {8068}let v_1800: bool = (not-caught-fail(v_1799) && success?(1-proj-2-tuple(v_1799))) in
                                {8069}let psk_data_44: bitstring = (if v_1800 then 2-proj-2-tuple(v_1799) else caught-fail) in
                                {8070}let psk_ext_90: preSharedKeyExt = (if v_1800 then 1-proj-2-tuple(v_1799) else caught-fail) in
                                {8071}let o_offer_44: params = (if v_1800 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_11,SNI(o_dom_13),o_ech_ext_21,empty_extra_ext,psk_ext_90) else caught-fail) in
                                {8072}let (client_hello'_22: msg,cr'_24: bytes32,kex_data'_19: bitstring,psk_data'_38: bitstring) = (if v_1800 then (CH(o_cr_16,o_offer_44),o_cr_16,kex_data_4,psk_data_44) else fail-any) in
                                {8073}out(io, client_hello'_22);
                                {8074}let cur_log_OU1_HRR_OU2_19: bitstring = (cur_log_OU1_HRR_4,client_hello'_22) in
                                {8075}in(io, server_hello'_34: msg);
                                {8076}let SH(sr'_19: bytes32,mode'_19: params) = server_hello'_34 in
                                (
                                    {8077}if (sr'_19 = B32(HRR24,HRR8)) then
                                        {8078}out(io, unexpected_message)
                                    else
                                        {8079}let (x_558: bitstring,g_50: group) = kex_data'_19 in
                                        {8080}let (psk_offer_42: preSharedKey,id_offer_42: identityPsk,es_offer_42: bitstring,is_safe_offer_42: bool) = psk_data'_38 in
                                        {8081}event Client_PSKOffer(id_client_5,psk_offer_42,id_offer_42,is_safe_offer_42);
                                        {8082}event Client_Rand_client(id_client_5,cr'_24);
                                        {8083}event Client_DH_client(id_client_5,dh_pub(g_50,x_558));
                                        {8084}event Client_server_domain(id_client_5,o_dom_8);
                                        {8085}let SH(sr_50: bytes32,mode_47: params) = server_hello'_34 in
                                        {8086}event Client_Rand_server(id_client_5,sr_50);
                                        {8087}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_50,gy_43: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_91: preSharedKeyExt) = mode_47 in
                                        (
                                            {8088}let cur_log2_88: bitstring = (cur_log_OU1_HRR_OU2_19,server_hello'_34) in
                                            {8089}event Client_DH_server(id_client_5,gy_43);
                                            {8090}let v_1801: bool = (psk_ext_91 = empty_psk_ext) in
                                            {8091}let psk_197: preSharedKey = (if v_1801 then NoPsk else caught-fail) in
                                            {8092}let s_189: bitstring = (if v_1801 then zero else caught-fail) in
                                            {8093}let k_190: bitstring = (if v_1801 then catch-fail(psk2b(psk_197)) else caught-fail) in
                                            {8094}let v_1802: bool = not-caught-fail(k_190) in
                                            {8095}let early_secret_133: bitstring = (if v_1801 then catch-fail((if v_1802 then hmac(@8_tls_h,s_189,k_190) else fail-any)) else caught-fail) in
                                            {8096}let v_1803: bool = not-caught-fail(early_secret_133) in
                                            {8097}let l_491: label = (if v_1803 then tls13_ext_res_binder else caught-fail) in
                                            {8098}let m_175: bitstring = (if v_1803 then zero else caught-fail) in
                                            {8099}let h_465: bitstring = (if v_1803 then catch-fail(hash(@8_tls_h,m_175)) else caught-fail) in
                                            {8100}let v_1804: bool = not-caught-fail(h_465) in
                                            {8101}let x_559: bitstring = (if v_1804 then (l_491,h_465) else caught-fail) in
                                            {8102}let binder_key_89: bitstring = (if v_1803 then catch-fail((if v_1804 then hmac(@8_tls_h,early_secret_133,x_559) else fail-any)) else caught-fail) in
                                            {8103}let v_1805: bool = not-caught-fail(binder_key_89) in
                                            {8104}let v_1806: bitstring = (if v_1801 then catch-fail((if v_1803 then (if v_1805 then (early_secret_133,binder_key_89) else fail-any) else fail-any)) else caught-fail) in
                                            {8105}let v_1807: bool = (not-caught-fail(v_1806) && success?(1-proj-2-tuple(v_1806))) in
                                            {8106}let kb_89: mac_key = (if v_1807 then 2-proj-2-tuple(v_1806) else caught-fail) in
                                            {8107}let es_131: bitstring = (if v_1807 then 1-proj-2-tuple(v_1806) else caught-fail) in
                                            {8108}let v_1808: bitstring = (if not(v_1801) then catch-fail(psk_data'_38) else caught-fail) in
                                            {8109}let v_1809: bool = (not-caught-fail(v_1808) && success?(1-proj-4-tuple(v_1808))) in
                                            {8110}let is_safe_78: bool = (if v_1809 then 4-proj-4-tuple(v_1808) else caught-fail) in
                                            {8111}let es_132: bitstring = (if v_1809 then 3-proj-4-tuple(v_1808) else caught-fail) in
                                            {8112}let id_89: identityPsk = (if v_1809 then 2-proj-4-tuple(v_1808) else caught-fail) in
                                            {8113}let psk_198: preSharedKey = (if v_1809 then 1-proj-4-tuple(v_1808) else caught-fail) in
                                            {8114}let (psk_199: preSharedKey,early_secret_134: bitstring,valid_42: bool,safe_psk_45: bool) = (if v_1801 then (if v_1807 then (NoPsk,es_131,true,false) else fail-any) else (if v_1809 then (psk_198,es_132,((psk_198 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_91)),is_safe_78) else fail-any)) in
                                            {8115}event Client_PSKChoosen(id_client_5,psk_199,safe_psk_45);
                                            {8116}if valid_42 then
                                            (
                                                {8117}let gxy_86: element = catch-fail(dh_decap_fun(g_50,gy_43,x_558)) in
                                                {8118}let v_1810: bool = not-caught-fail(gxy_86) in
                                                {8119}new s_190[]: seed;
                                                {8120}let gxy_87: element = (if v_1810 then gxy_86 else dh_f(s_190)) in
                                                {8121}event Client_DH_gxy(id_client_5,gxy_87);
                                                {8122}let l_492: label = tls13_derived in
                                                {8123}let m_176: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                {8124}let v_1811: bool = not-caught-fail(m_176) in
                                                {8125}let h_466: bitstring = (if v_1811 then catch-fail(hash(@8_tls_h,m_176)) else caught-fail) in
                                                {8126}let v_1812: bool = not-caught-fail(h_466) in
                                                {8127}let x_560: bitstring = (if v_1812 then (l_492,h_466) else caught-fail) in
                                                {8128}let extra_91: bitstring = catch-fail((if v_1811 then (if v_1812 then hmac(@8_tls_h,early_secret_134,x_560) else fail-any) else fail-any)) in
                                                {8129}let v_1813: bool = not-caught-fail(extra_91) in
                                                {8130}let handshake_secret_43: bitstring = (if v_1813 then hmac(@8_tls_h,extra_91,gxy_87) else fail-any) in
                                                {8131}let l_493: label = tls13_derived in
                                                {8132}let m_177: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                {8133}let v_1814: bool = not-caught-fail(m_177) in
                                                {8134}let h_467: bitstring = (if v_1814 then catch-fail(hash(@8_tls_h,m_177)) else caught-fail) in
                                                {8135}let v_1815: bool = not-caught-fail(h_467) in
                                                {8136}let x_561: bitstring = (if v_1815 then (l_493,h_467) else caught-fail) in
                                                {8137}let extra_92: bitstring = catch-fail((if v_1814 then (if v_1815 then hmac(@8_tls_h,handshake_secret_43,x_561) else fail-any) else fail-any)) in
                                                {8138}let v_1816: bool = not-caught-fail(extra_92) in
                                                {8139}let k_191: bitstring = (if v_1816 then zero else caught-fail) in
                                                {8140}let master_secret_93: bitstring = (if v_1816 then catch-fail(hmac(@8_tls_h,handshake_secret_43,k_191)) else caught-fail) in
                                                {8141}let v_1817: bool = not-caught-fail(master_secret_93) in
                                                {8142}let l_494: label = (if v_1817 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {8143}let h_468: bitstring = (if v_1817 then catch-fail(hash(@8_tls_h,cur_log2_88)) else caught-fail) in
                                                {8144}let v_1818: bool = not-caught-fail(h_468) in
                                                {8145}let x_562: bitstring = (if v_1818 then (l_494,h_468) else caught-fail) in
                                                {8146}let client_hts_43: bitstring = (if v_1817 then catch-fail((if v_1818 then hmac(@8_tls_h,handshake_secret_43,x_562) else fail-any)) else caught-fail) in
                                                {8147}let v_1819: bool = not-caught-fail(client_hts_43) in
                                                {8148}let l_495: label = (if v_1819 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {8149}let h_469: bitstring = (if v_1819 then catch-fail(hash(@8_tls_h,cur_log2_88)) else caught-fail) in
                                                {8150}let v_1820: bool = not-caught-fail(h_469) in
                                                {8151}let x_563: bitstring = (if v_1820 then (l_495,h_469) else caught-fail) in
                                                {8152}let server_hts_43: bitstring = (if v_1819 then catch-fail((if v_1820 then hmac(@8_tls_h,handshake_secret_43,x_563) else fail-any)) else caught-fail) in
                                                {8153}let v_1821: bool = not-caught-fail(server_hts_43) in
                                                {8154}let l_496: label = (if v_1821 then tls13_key else caught-fail) in
                                                {8155}let h_470: bitstring = (if v_1821 then zero else caught-fail) in
                                                {8156}let x_564: bitstring = (if v_1821 then (l_496,h_470) else caught-fail) in
                                                {8157}let client_wkh_43: bitstring = (if v_1821 then catch-fail(hmac(@8_tls_h,client_hts_43,x_564)) else caught-fail) in
                                                {8158}let v_1822: bool = not-caught-fail(client_wkh_43) in
                                                {8159}let l_497: label = (if v_1822 then tls13_key else caught-fail) in
                                                {8160}let h_471: bitstring = (if v_1822 then zero else caught-fail) in
                                                {8161}let x_565: bitstring = (if v_1822 then (l_497,h_471) else caught-fail) in
                                                {8162}let server_wkh_43: bitstring = (if v_1822 then catch-fail(hmac(@8_tls_h,server_hts_43,x_565)) else caught-fail) in
                                                {8163}let v_1823: bool = not-caught-fail(server_wkh_43) in
                                                {8164}let l_498: label = (if v_1823 then tls13_finished else caught-fail) in
                                                {8165}let h_472: bitstring = (if v_1823 then zero else caught-fail) in
                                                {8166}let x_566: bitstring = (if v_1823 then (l_498,h_472) else caught-fail) in
                                                {8167}let client_fk_43: bitstring = (if v_1823 then catch-fail(hmac(@8_tls_h,client_hts_43,x_566)) else caught-fail) in
                                                {8168}let v_1824: bool = not-caught-fail(client_fk_43) in
                                                {8169}let l_499: label = (if v_1824 then tls13_finished else caught-fail) in
                                                {8170}let h_473: bitstring = (if v_1824 then zero else caught-fail) in
                                                {8171}let x_567: bitstring = (if v_1824 then (l_499,h_473) else caught-fail) in
                                                {8172}let server_fk_43: bitstring = (if v_1824 then catch-fail(hmac(@8_tls_h,server_hts_43,x_567)) else caught-fail) in
                                                {8173}let v_1825: bool = not-caught-fail(server_fk_43) in
                                                {8174}let (master_secret_94: bitstring,chk_50: aead_key,shk_49: aead_key,cfin_50: mac_key,sfin_49: mac_key) = (if v_1816 then (if v_1817 then (if v_1819 then (if v_1821 then (if v_1822 then (if v_1823 then (if v_1824 then (if v_1825 then (master_secret_93,client_wkh_43,server_wkh_43,client_fk_43,server_fk_43) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {8175}event Client_chk(id_client_5,chk_50);
                                                {8176}event Client_shk(id_client_5,shk_49);
                                                {8177}event Client_cfin(id_client_5,cfin_50);
                                                {8178}event Client_sfin(id_client_5,sfin_49);
                                                {8179}in(io, enc_ee_msg_42: bitstring);
                                                {8180}let ee_msg_47: msg = aead_dec(@8_tls_a,shk_49,0,zero,enc_ee_msg_42) in
                                                {8181}let EE(ech_ee_42: echExt,extra_ee_42: extraExt) = ee_msg_47 in
                                                {8182}let cur_log2_89: bitstring = (cur_log2_88,ee_msg_47) in
                                                {8183}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_24,sr_50,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_199,safe_psk_45,@8_comp_psk,master_secret_94,chk_50,0,shk_49,1,cfin_50,sfin_49,cur_log2_89)))
                                            )
                                            else
                                                {8184}out(io, illegal_parameter)
                                        )
                                        else
                                            {8185}out(io, illegal_parameter)
                                )
                                else
                                    {8186}out(io, unexpected_message)
                    )
                    else
                        {8187}let cur_log_28: bitstring = (zero,i_client_hello_22) in
                        {8188}let sh_modified_20: msg = SH(B32(sr24_6,zero8),mode_40) in
                        {8189}let cur_log_sh_20: bitstring = (cur_log_28,sh_modified_20) in
                        {8190}let transcript_ech_conf_20: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_20)) in
                        {8191}let v_1826: bool = not-caught-fail(transcript_ech_conf_20) in
                        {8192}let s_191: bitstring = (if v_1826 then zero else caught-fail) in
                        {8193}let k_192: bitstring = (if v_1826 then catch-fail(b32_2_b(get_random(i_client_hello_22))) else caught-fail) in
                        {8194}let v_1827: bool = not-caught-fail(k_192) in
                        {8195}let k_193: bitstring = (if v_1826 then catch-fail((if v_1827 then hmac(@8_backend_h,s_191,k_192) else fail-any)) else caught-fail) in
                        {8196}let v_1828: bool = not-caught-fail(k_193) in
                        {8197}let l_500: label = (if v_1828 then ech_accept_confirmation else caught-fail) in
                        {8198}let x_568: bitstring = (if v_1828 then (l_500,cur_log_sh_20) else caught-fail) in
                        {8199}let sr8_25: bytes8 = (if v_1826 then catch-fail(crop_into_bytes8((if v_1828 then hmac(@8_backend_h,k_193,x_568) else fail-any))) else caught-fail) in
                        {8200}let v_1829: bool = not-caught-fail(sr8_25) in
                        {8201}if (B32(sr24_6,sr8_21) = (if v_1826 then (if v_1829 then B32(sr24_6,sr8_25) else fail-any) else fail-any)) then
                        (
                            {8202}event ClientEchAcceptance(id_client_5,true);
                            {8203}let cur_log_29: bitstring = (zero,i_client_hello_22) in
                            {8204}let (x_569: bitstring,g_51: group) = i_kex_data_10 in
                            {8205}let (psk_offer_43: preSharedKey,id_offer_43: identityPsk,es_offer_43: bitstring,is_safe_offer_43: bool) = psk_data_37 in
                            {8206}event Client_PSKOffer(id_client_5,psk_offer_43,id_offer_43,is_safe_offer_43);
                            {8207}event Client_Rand_client(id_client_5,i_cr_11);
                            {8208}event Client_DH_client(id_client_5,dh_pub(g_51,x_569));
                            {8209}event Client_server_domain(id_client_5,backend_dom_1);
                            {8210}let SH(sr_51: bytes32,mode_48: params) = server_hello_5 in
                            {8211}event Client_Rand_server(id_client_5,sr_51);
                            {8212}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_51,gy_44: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_92: preSharedKeyExt) = mode_48 in
                            (
                                {8213}let cur_log2_90: bitstring = (cur_log_29,server_hello_5) in
                                {8214}event Client_DH_server(id_client_5,gy_44);
                                {8215}let v_1830: bool = (psk_ext_92 = empty_psk_ext) in
                                {8216}let psk_200: preSharedKey = (if v_1830 then NoPsk else caught-fail) in
                                {8217}let s_192: bitstring = (if v_1830 then zero else caught-fail) in
                                {8218}let k_194: bitstring = (if v_1830 then catch-fail(psk2b(psk_200)) else caught-fail) in
                                {8219}let v_1831: bool = not-caught-fail(k_194) in
                                {8220}let early_secret_135: bitstring = (if v_1830 then catch-fail((if v_1831 then hmac(@8_backend_h,s_192,k_194) else fail-any)) else caught-fail) in
                                {8221}let v_1832: bool = not-caught-fail(early_secret_135) in
                                {8222}let l_501: label = (if v_1832 then tls13_ext_res_binder else caught-fail) in
                                {8223}let m_178: bitstring = (if v_1832 then zero else caught-fail) in
                                {8224}let h_474: bitstring = (if v_1832 then catch-fail(hash(@8_backend_h,m_178)) else caught-fail) in
                                {8225}let v_1833: bool = not-caught-fail(h_474) in
                                {8226}let x_570: bitstring = (if v_1833 then (l_501,h_474) else caught-fail) in
                                {8227}let binder_key_90: bitstring = (if v_1832 then catch-fail((if v_1833 then hmac(@8_backend_h,early_secret_135,x_570) else fail-any)) else caught-fail) in
                                {8228}let v_1834: bool = not-caught-fail(binder_key_90) in
                                {8229}let v_1835: bitstring = (if v_1830 then catch-fail((if v_1832 then (if v_1834 then (early_secret_135,binder_key_90) else fail-any) else fail-any)) else caught-fail) in
                                {8230}let v_1836: bool = (not-caught-fail(v_1835) && success?(1-proj-2-tuple(v_1835))) in
                                {8231}let kb_90: mac_key = (if v_1836 then 2-proj-2-tuple(v_1835) else caught-fail) in
                                {8232}let es_133: bitstring = (if v_1836 then 1-proj-2-tuple(v_1835) else caught-fail) in
                                {8233}let v_1837: bitstring = (if not(v_1830) then catch-fail(psk_data_37) else caught-fail) in
                                {8234}let v_1838: bool = (not-caught-fail(v_1837) && success?(1-proj-4-tuple(v_1837))) in
                                {8235}let is_safe_79: bool = (if v_1838 then 4-proj-4-tuple(v_1837) else caught-fail) in
                                {8236}let es_134: bitstring = (if v_1838 then 3-proj-4-tuple(v_1837) else caught-fail) in
                                {8237}let id_90: identityPsk = (if v_1838 then 2-proj-4-tuple(v_1837) else caught-fail) in
                                {8238}let psk_201: preSharedKey = (if v_1838 then 1-proj-4-tuple(v_1837) else caught-fail) in
                                {8239}let (psk_202: preSharedKey,early_secret_136: bitstring,valid_43: bool,safe_psk_46: bool) = (if v_1830 then (if v_1836 then (NoPsk,es_133,true,false) else fail-any) else (if v_1838 then (psk_201,es_134,((psk_201 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_92)),is_safe_79) else fail-any)) in
                                {8240}event Client_PSKChoosen(id_client_5,psk_202,safe_psk_46);
                                {8241}if valid_43 then
                                (
                                    {8242}let gxy_88: element = catch-fail(dh_decap_fun(g_51,gy_44,x_569)) in
                                    {8243}let v_1839: bool = not-caught-fail(gxy_88) in
                                    {8244}new s_193[]: seed;
                                    {8245}let gxy_89: element = (if v_1839 then gxy_88 else dh_f(s_193)) in
                                    {8246}event Client_DH_gxy(id_client_5,gxy_89);
                                    {8247}let l_502: label = tls13_derived in
                                    {8248}let m_179: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                    {8249}let v_1840: bool = not-caught-fail(m_179) in
                                    {8250}let h_475: bitstring = (if v_1840 then catch-fail(hash(@8_backend_h,m_179)) else caught-fail) in
                                    {8251}let v_1841: bool = not-caught-fail(h_475) in
                                    {8252}let x_571: bitstring = (if v_1841 then (l_502,h_475) else caught-fail) in
                                    {8253}let extra_93: bitstring = catch-fail((if v_1840 then (if v_1841 then hmac(@8_backend_h,early_secret_136,x_571) else fail-any) else fail-any)) in
                                    {8254}let v_1842: bool = not-caught-fail(extra_93) in
                                    {8255}let handshake_secret_44: bitstring = (if v_1842 then hmac(@8_backend_h,extra_93,gxy_89) else fail-any) in
                                    {8256}let l_503: label = tls13_derived in
                                    {8257}let m_180: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                    {8258}let v_1843: bool = not-caught-fail(m_180) in
                                    {8259}let h_476: bitstring = (if v_1843 then catch-fail(hash(@8_backend_h,m_180)) else caught-fail) in
                                    {8260}let v_1844: bool = not-caught-fail(h_476) in
                                    {8261}let x_572: bitstring = (if v_1844 then (l_503,h_476) else caught-fail) in
                                    {8262}let extra_94: bitstring = catch-fail((if v_1843 then (if v_1844 then hmac(@8_backend_h,handshake_secret_44,x_572) else fail-any) else fail-any)) in
                                    {8263}let v_1845: bool = not-caught-fail(extra_94) in
                                    {8264}let k_195: bitstring = (if v_1845 then zero else caught-fail) in
                                    {8265}let master_secret_95: bitstring = (if v_1845 then catch-fail(hmac(@8_backend_h,handshake_secret_44,k_195)) else caught-fail) in
                                    {8266}let v_1846: bool = not-caught-fail(master_secret_95) in
                                    {8267}let l_504: label = (if v_1846 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {8268}let h_477: bitstring = (if v_1846 then catch-fail(hash(@8_backend_h,cur_log2_90)) else caught-fail) in
                                    {8269}let v_1847: bool = not-caught-fail(h_477) in
                                    {8270}let x_573: bitstring = (if v_1847 then (l_504,h_477) else caught-fail) in
                                    {8271}let client_hts_44: bitstring = (if v_1846 then catch-fail((if v_1847 then hmac(@8_backend_h,handshake_secret_44,x_573) else fail-any)) else caught-fail) in
                                    {8272}let v_1848: bool = not-caught-fail(client_hts_44) in
                                    {8273}let l_505: label = (if v_1848 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {8274}let h_478: bitstring = (if v_1848 then catch-fail(hash(@8_backend_h,cur_log2_90)) else caught-fail) in
                                    {8275}let v_1849: bool = not-caught-fail(h_478) in
                                    {8276}let x_574: bitstring = (if v_1849 then (l_505,h_478) else caught-fail) in
                                    {8277}let server_hts_44: bitstring = (if v_1848 then catch-fail((if v_1849 then hmac(@8_backend_h,handshake_secret_44,x_574) else fail-any)) else caught-fail) in
                                    {8278}let v_1850: bool = not-caught-fail(server_hts_44) in
                                    {8279}let l_506: label = (if v_1850 then tls13_key else caught-fail) in
                                    {8280}let h_479: bitstring = (if v_1850 then zero else caught-fail) in
                                    {8281}let x_575: bitstring = (if v_1850 then (l_506,h_479) else caught-fail) in
                                    {8282}let client_wkh_44: bitstring = (if v_1850 then catch-fail(hmac(@8_backend_h,client_hts_44,x_575)) else caught-fail) in
                                    {8283}let v_1851: bool = not-caught-fail(client_wkh_44) in
                                    {8284}let l_507: label = (if v_1851 then tls13_key else caught-fail) in
                                    {8285}let h_480: bitstring = (if v_1851 then zero else caught-fail) in
                                    {8286}let x_576: bitstring = (if v_1851 then (l_507,h_480) else caught-fail) in
                                    {8287}let server_wkh_44: bitstring = (if v_1851 then catch-fail(hmac(@8_backend_h,server_hts_44,x_576)) else caught-fail) in
                                    {8288}let v_1852: bool = not-caught-fail(server_wkh_44) in
                                    {8289}let l_508: label = (if v_1852 then tls13_finished else caught-fail) in
                                    {8290}let h_481: bitstring = (if v_1852 then zero else caught-fail) in
                                    {8291}let x_577: bitstring = (if v_1852 then (l_508,h_481) else caught-fail) in
                                    {8292}let client_fk_44: bitstring = (if v_1852 then catch-fail(hmac(@8_backend_h,client_hts_44,x_577)) else caught-fail) in
                                    {8293}let v_1853: bool = not-caught-fail(client_fk_44) in
                                    {8294}let l_509: label = (if v_1853 then tls13_finished else caught-fail) in
                                    {8295}let h_482: bitstring = (if v_1853 then zero else caught-fail) in
                                    {8296}let x_578: bitstring = (if v_1853 then (l_509,h_482) else caught-fail) in
                                    {8297}let server_fk_44: bitstring = (if v_1853 then catch-fail(hmac(@8_backend_h,server_hts_44,x_578)) else caught-fail) in
                                    {8298}let v_1854: bool = not-caught-fail(server_fk_44) in
                                    {8299}let (master_secret_96: bitstring,chk_51: aead_key,shk_50: aead_key,cfin_51: mac_key,sfin_50: mac_key) = (if v_1845 then (if v_1846 then (if v_1848 then (if v_1850 then (if v_1851 then (if v_1852 then (if v_1853 then (if v_1854 then (master_secret_95,client_wkh_44,server_wkh_44,client_fk_44,server_fk_44) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {8300}event Client_chk(id_client_5,chk_51);
                                    {8301}event Client_shk(id_client_5,shk_50);
                                    {8302}event Client_cfin(id_client_5,cfin_51);
                                    {8303}event Client_sfin(id_client_5,sfin_50);
                                    {8304}in(io, enc_ee_msg_43: bitstring);
                                    {8305}let ee_msg_48: msg = aead_dec(@8_backend_a,shk_50,0,zero,enc_ee_msg_43) in
                                    {8306}let EE(ech_ee_43: echExt,extra_ee_43: extraExt) = ee_msg_48 in
                                    {8307}let cur_log2_91: bitstring = (cur_log2_90,ee_msg_48) in
                                    {8308}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr_11,sr_51,@8_backend_h,@8_backend_a,c_dom_6,backend_dom_1,psk_202,safe_psk_46,@8_comp_psk,master_secret_96,chk_51,0,shk_50,1,cfin_51,sfin_50,cur_log2_91)))
                                )
                                else
                                    {8309}out(io, illegal_parameter)
                            )
                            else
                                {8310}out(io, illegal_parameter)
                        )
                        else
                            {8311}event ClientEchAcceptance(id_client_5,false);
                            {8312}let v_1855: bool = @8_use_grease in
                            {8313}let psk_203: preSharedKey = (if not(v_1855) then NoPsk else caught-fail) in
                            {8314}let s_194: bitstring = (if not(v_1855) then zero else caught-fail) in
                            {8315}let k_196: bitstring = (if not(v_1855) then catch-fail(psk2b(psk_203)) else caught-fail) in
                            {8316}let v_1856: bool = not-caught-fail(k_196) in
                            {8317}let early_secret_137: bitstring = (if not(v_1855) then catch-fail((if v_1856 then hmac(@8_tls_h,s_194,k_196) else fail-any)) else caught-fail) in
                            {8318}let v_1857: bool = not-caught-fail(early_secret_137) in
                            {8319}let l_510: label = (if v_1857 then tls13_ext_res_binder else caught-fail) in
                            {8320}let m_181: bitstring = (if v_1857 then zero else caught-fail) in
                            {8321}let h_483: bitstring = (if v_1857 then catch-fail(hash(@8_tls_h,m_181)) else caught-fail) in
                            {8322}let v_1858: bool = not-caught-fail(h_483) in
                            {8323}let x_579: bitstring = (if v_1858 then (l_510,h_483) else caught-fail) in
                            {8324}let binder_key_91: bitstring = (if v_1857 then catch-fail((if v_1858 then hmac(@8_tls_h,early_secret_137,x_579) else fail-any)) else caught-fail) in
                            {8325}let v_1859: bool = not-caught-fail(binder_key_91) in
                            {8326}let v_1860: bitstring = (if not(v_1855) then catch-fail((if v_1857 then (if v_1859 then (early_secret_137,binder_key_91) else fail-any) else fail-any)) else caught-fail) in
                            {8327}let v_1861: bool = (not-caught-fail(v_1860) && success?(1-proj-2-tuple(v_1860))) in
                            {8328}let kb_91: mac_key = (if v_1861 then 2-proj-2-tuple(v_1860) else caught-fail) in
                            {8329}let es'_4: bitstring = (if v_1861 then 1-proj-2-tuple(v_1860) else caught-fail) in
                            {8330}let psk_data'_39: bitstring = (if v_1855 then psk_data_37 else (if v_1861 then (NoPsk,zero,es'_4,false) else fail-any)) in
                            {8331}let cur_log_30: bitstring = (zero,o_client_hello_6) in
                            {8332}let (x_580: bitstring,g_52: group) = o_kex_data_10 in
                            {8333}let (psk_offer_44: preSharedKey,id_offer_44: identityPsk,es_offer_44: bitstring,is_safe_offer_44: bool) = psk_data'_39 in
                            {8334}event Client_PSKOffer(id_client_5,psk_offer_44,id_offer_44,is_safe_offer_44);
                            {8335}event Client_Rand_client(id_client_5,o_cr_14);
                            {8336}event Client_DH_client(id_client_5,dh_pub(g_52,x_580));
                            {8337}event Client_server_domain(id_client_5,o_dom_8);
                            {8338}let SH(sr_52: bytes32,mode_49: params) = server_hello_5 in
                            {8339}event Client_Rand_server(id_client_5,sr_52);
                            {8340}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_52,gy_45: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_93: preSharedKeyExt) = mode_49 in
                            (
                                {8341}let cur_log2_92: bitstring = (cur_log_30,server_hello_5) in
                                {8342}event Client_DH_server(id_client_5,gy_45);
                                {8343}let v_1862: bool = (psk_ext_93 = empty_psk_ext) in
                                {8344}let psk_204: preSharedKey = (if v_1862 then NoPsk else caught-fail) in
                                {8345}let s_195: bitstring = (if v_1862 then zero else caught-fail) in
                                {8346}let k_197: bitstring = (if v_1862 then catch-fail(psk2b(psk_204)) else caught-fail) in
                                {8347}let v_1863: bool = not-caught-fail(k_197) in
                                {8348}let early_secret_138: bitstring = (if v_1862 then catch-fail((if v_1863 then hmac(@8_tls_h,s_195,k_197) else fail-any)) else caught-fail) in
                                {8349}let v_1864: bool = not-caught-fail(early_secret_138) in
                                {8350}let l_511: label = (if v_1864 then tls13_ext_res_binder else caught-fail) in
                                {8351}let m_182: bitstring = (if v_1864 then zero else caught-fail) in
                                {8352}let h_484: bitstring = (if v_1864 then catch-fail(hash(@8_tls_h,m_182)) else caught-fail) in
                                {8353}let v_1865: bool = not-caught-fail(h_484) in
                                {8354}let x_581: bitstring = (if v_1865 then (l_511,h_484) else caught-fail) in
                                {8355}let binder_key_92: bitstring = (if v_1864 then catch-fail((if v_1865 then hmac(@8_tls_h,early_secret_138,x_581) else fail-any)) else caught-fail) in
                                {8356}let v_1866: bool = not-caught-fail(binder_key_92) in
                                {8357}let v_1867: bitstring = (if v_1862 then catch-fail((if v_1864 then (if v_1866 then (early_secret_138,binder_key_92) else fail-any) else fail-any)) else caught-fail) in
                                {8358}let v_1868: bool = (not-caught-fail(v_1867) && success?(1-proj-2-tuple(v_1867))) in
                                {8359}let kb_92: mac_key = (if v_1868 then 2-proj-2-tuple(v_1867) else caught-fail) in
                                {8360}let es_135: bitstring = (if v_1868 then 1-proj-2-tuple(v_1867) else caught-fail) in
                                {8361}let v_1869: bitstring = (if not(v_1862) then catch-fail(psk_data'_39) else caught-fail) in
                                {8362}let v_1870: bool = (not-caught-fail(v_1869) && success?(1-proj-4-tuple(v_1869))) in
                                {8363}let is_safe_80: bool = (if v_1870 then 4-proj-4-tuple(v_1869) else caught-fail) in
                                {8364}let es_136: bitstring = (if v_1870 then 3-proj-4-tuple(v_1869) else caught-fail) in
                                {8365}let id_91: identityPsk = (if v_1870 then 2-proj-4-tuple(v_1869) else caught-fail) in
                                {8366}let psk_205: preSharedKey = (if v_1870 then 1-proj-4-tuple(v_1869) else caught-fail) in
                                {8367}let (psk_206: preSharedKey,early_secret_139: bitstring,valid_44: bool,safe_psk_47: bool) = (if v_1862 then (if v_1868 then (NoPsk,es_135,true,false) else fail-any) else (if v_1870 then (psk_205,es_136,((psk_205 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_93)),is_safe_80) else fail-any)) in
                                {8368}event Client_PSKChoosen(id_client_5,psk_206,safe_psk_47);
                                {8369}if valid_44 then
                                (
                                    {8370}let gxy_90: element = catch-fail(dh_decap_fun(g_52,gy_45,x_580)) in
                                    {8371}let v_1871: bool = not-caught-fail(gxy_90) in
                                    {8372}new s_196[]: seed;
                                    {8373}let gxy_91: element = (if v_1871 then gxy_90 else dh_f(s_196)) in
                                    {8374}event Client_DH_gxy(id_client_5,gxy_91);
                                    {8375}let l_512: label = tls13_derived in
                                    {8376}let m_183: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                    {8377}let v_1872: bool = not-caught-fail(m_183) in
                                    {8378}let h_485: bitstring = (if v_1872 then catch-fail(hash(@8_tls_h,m_183)) else caught-fail) in
                                    {8379}let v_1873: bool = not-caught-fail(h_485) in
                                    {8380}let x_582: bitstring = (if v_1873 then (l_512,h_485) else caught-fail) in
                                    {8381}let extra_95: bitstring = catch-fail((if v_1872 then (if v_1873 then hmac(@8_tls_h,early_secret_139,x_582) else fail-any) else fail-any)) in
                                    {8382}let v_1874: bool = not-caught-fail(extra_95) in
                                    {8383}let handshake_secret_45: bitstring = (if v_1874 then hmac(@8_tls_h,extra_95,gxy_91) else fail-any) in
                                    {8384}let l_513: label = tls13_derived in
                                    {8385}let m_184: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                    {8386}let v_1875: bool = not-caught-fail(m_184) in
                                    {8387}let h_486: bitstring = (if v_1875 then catch-fail(hash(@8_tls_h,m_184)) else caught-fail) in
                                    {8388}let v_1876: bool = not-caught-fail(h_486) in
                                    {8389}let x_583: bitstring = (if v_1876 then (l_513,h_486) else caught-fail) in
                                    {8390}let extra_96: bitstring = catch-fail((if v_1875 then (if v_1876 then hmac(@8_tls_h,handshake_secret_45,x_583) else fail-any) else fail-any)) in
                                    {8391}let v_1877: bool = not-caught-fail(extra_96) in
                                    {8392}let k_198: bitstring = (if v_1877 then zero else caught-fail) in
                                    {8393}let master_secret_97: bitstring = (if v_1877 then catch-fail(hmac(@8_tls_h,handshake_secret_45,k_198)) else caught-fail) in
                                    {8394}let v_1878: bool = not-caught-fail(master_secret_97) in
                                    {8395}let l_514: label = (if v_1878 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {8396}let h_487: bitstring = (if v_1878 then catch-fail(hash(@8_tls_h,cur_log2_92)) else caught-fail) in
                                    {8397}let v_1879: bool = not-caught-fail(h_487) in
                                    {8398}let x_584: bitstring = (if v_1879 then (l_514,h_487) else caught-fail) in
                                    {8399}let client_hts_45: bitstring = (if v_1878 then catch-fail((if v_1879 then hmac(@8_tls_h,handshake_secret_45,x_584) else fail-any)) else caught-fail) in
                                    {8400}let v_1880: bool = not-caught-fail(client_hts_45) in
                                    {8401}let l_515: label = (if v_1880 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {8402}let h_488: bitstring = (if v_1880 then catch-fail(hash(@8_tls_h,cur_log2_92)) else caught-fail) in
                                    {8403}let v_1881: bool = not-caught-fail(h_488) in
                                    {8404}let x_585: bitstring = (if v_1881 then (l_515,h_488) else caught-fail) in
                                    {8405}let server_hts_45: bitstring = (if v_1880 then catch-fail((if v_1881 then hmac(@8_tls_h,handshake_secret_45,x_585) else fail-any)) else caught-fail) in
                                    {8406}let v_1882: bool = not-caught-fail(server_hts_45) in
                                    {8407}let l_516: label = (if v_1882 then tls13_key else caught-fail) in
                                    {8408}let h_489: bitstring = (if v_1882 then zero else caught-fail) in
                                    {8409}let x_586: bitstring = (if v_1882 then (l_516,h_489) else caught-fail) in
                                    {8410}let client_wkh_45: bitstring = (if v_1882 then catch-fail(hmac(@8_tls_h,client_hts_45,x_586)) else caught-fail) in
                                    {8411}let v_1883: bool = not-caught-fail(client_wkh_45) in
                                    {8412}let l_517: label = (if v_1883 then tls13_key else caught-fail) in
                                    {8413}let h_490: bitstring = (if v_1883 then zero else caught-fail) in
                                    {8414}let x_587: bitstring = (if v_1883 then (l_517,h_490) else caught-fail) in
                                    {8415}let server_wkh_45: bitstring = (if v_1883 then catch-fail(hmac(@8_tls_h,server_hts_45,x_587)) else caught-fail) in
                                    {8416}let v_1884: bool = not-caught-fail(server_wkh_45) in
                                    {8417}let l_518: label = (if v_1884 then tls13_finished else caught-fail) in
                                    {8418}let h_491: bitstring = (if v_1884 then zero else caught-fail) in
                                    {8419}let x_588: bitstring = (if v_1884 then (l_518,h_491) else caught-fail) in
                                    {8420}let client_fk_45: bitstring = (if v_1884 then catch-fail(hmac(@8_tls_h,client_hts_45,x_588)) else caught-fail) in
                                    {8421}let v_1885: bool = not-caught-fail(client_fk_45) in
                                    {8422}let l_519: label = (if v_1885 then tls13_finished else caught-fail) in
                                    {8423}let h_492: bitstring = (if v_1885 then zero else caught-fail) in
                                    {8424}let x_589: bitstring = (if v_1885 then (l_519,h_492) else caught-fail) in
                                    {8425}let server_fk_45: bitstring = (if v_1885 then catch-fail(hmac(@8_tls_h,server_hts_45,x_589)) else caught-fail) in
                                    {8426}let v_1886: bool = not-caught-fail(server_fk_45) in
                                    {8427}let (master_secret_98: bitstring,chk_52: aead_key,shk_51: aead_key,cfin_52: mac_key,sfin_51: mac_key) = (if v_1877 then (if v_1878 then (if v_1880 then (if v_1882 then (if v_1883 then (if v_1884 then (if v_1885 then (if v_1886 then (master_secret_97,client_wkh_45,server_wkh_45,client_fk_45,server_fk_45) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {8428}event Client_chk(id_client_5,chk_52);
                                    {8429}event Client_shk(id_client_5,shk_51);
                                    {8430}event Client_cfin(id_client_5,cfin_52);
                                    {8431}event Client_sfin(id_client_5,sfin_51);
                                    {8432}in(io, enc_ee_msg_44: bitstring);
                                    {8433}let ee_msg_49: msg = aead_dec(@8_tls_a,shk_51,0,zero,enc_ee_msg_44) in
                                    {8434}let EE(ech_ee_44: echExt,extra_ee_44: extraExt) = ee_msg_49 in
                                    {8435}let cur_log2_93: bitstring = (cur_log2_92,ee_msg_49) in
                                    {8436}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(o_cr_14,sr_52,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_206,safe_psk_47,@8_comp_psk,master_secret_98,chk_52,0,shk_51,1,cfin_52,sfin_51,cur_log2_93)))
                                )
                                else
                                    {8437}out(io, illegal_parameter)
                            )
                            else
                                {8438}out(io, illegal_parameter)
                )
                else
                    {8439}out(io, unexpected_message)
            )
    )
    else
        {8441}let psk_207: preSharedKey = NoPsk in
        {8442}let s_197: bitstring = zero in
        {8443}let k_199: bitstring = catch-fail(psk2b(psk_207)) in
        {8444}let v_1887: bool = not-caught-fail(k_199) in
        {8445}let early_secret_140: bitstring = catch-fail((if v_1887 then hmac(h_psk_1,s_197,k_199) else fail-any)) in
        {8446}let v_1888: bool = not-caught-fail(early_secret_140) in
        {8447}let l_520: label = (if v_1888 then tls13_ext_res_binder else caught-fail) in
        {8448}let m_185: bitstring = (if v_1888 then zero else caught-fail) in
        {8449}let h_493: bitstring = (if v_1888 then catch-fail(hash(h_psk_1,m_185)) else caught-fail) in
        {8450}let v_1889: bool = not-caught-fail(h_493) in
        {8451}let x_590: bitstring = (if v_1889 then (l_520,h_493) else caught-fail) in
        {8452}let binder_key_93: bitstring = (if v_1888 then catch-fail((if v_1889 then hmac(h_psk_1,early_secret_140,x_590) else fail-any)) else caught-fail) in
        {8453}let v_1890: bool = not-caught-fail(binder_key_93) in
        {8454}let v_1891: bitstring = catch-fail((if v_1888 then (if v_1890 then (early_secret_140,binder_key_93) else fail-any) else fail-any)) in
        {8455}let v_1892: bool = (not-caught-fail(v_1891) && success?(1-proj-2-tuple(v_1891))) in
        {8456}let kb_93: mac_key = (if v_1892 then 2-proj-2-tuple(v_1891) else caught-fail) in
        {8457}let es_137: bitstring = (if v_1892 then 1-proj-2-tuple(v_1891) else caught-fail) in
        {8458}let v_1893: bitstring = catch-fail((if v_1892 then (empty_psk_ext,(NoPsk,zero,es_137,false)) else fail-any)) in
        {8459}let v_1894: bool = (not-caught-fail(v_1893) && success?(1-proj-2-tuple(v_1893))) in
        {8460}let psk_data_45: bitstring = (if v_1894 then 2-proj-2-tuple(v_1893) else caught-fail) in
        {8461}let psk_ext_94: preSharedKeyExt = (if v_1894 then 1-proj-2-tuple(v_1893) else caught-fail) in
        {8462}let i_offer_20: params = (if v_1894 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_5,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_94) else caught-fail) in
        {8463}let i_client_hello_26: msg = (if v_1894 then CH(i_cr_8,i_offer_20) else caught-fail) in
        {8464}let v_1895: bool = (if v_1894 then catch-fail(@8_use_grease) else caught-fail) in
        {8465}let o_offer_45: params = (if v_1895 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),ech_inner_or_grease_1,empty_extra_ext,psk_ext_94) else caught-fail) in
        {8466}new fake_id_25[]: identityPsk;
        {8467}new fake_binder_25[]: bitstring;
        {8468}let o_psk_ext_25: preSharedKeyExt = (if is-false(v_1895) then (if @8_use_psk then client_psk_ext(fake_id_25,fake_binder_25) else empty_psk_ext) else caught-fail) in
        {8469}let o_ech_ext_ADD_20: echExt = (if is-false(v_1895) then ECHClientHelloOuter(ech_h_13,ech_a_13,config_id_13,enc_6,zero) else caught-fail) in
        {8470}let o_offer_ADD_20: params = (if is-false(v_1895) then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),o_ech_ext_ADD_20,empty_extra_ext,o_psk_ext_25) else caught-fail) in
        {8471}let o_client_hello_ADD_20: msg = (if is-false(v_1895) then CH(o_cr_10,o_offer_ADD_20) else caught-fail) in
        {8472}let n_22: nat = (if is-false(v_1895) then 1 else caught-fail) in
        {8473}let v_1896: hpkeContext = (if is-false(v_1895) then catch-fail(context_2) else caught-fail) in
        {8474}let v_1897: bool = (not-caught-fail(v_1896) && ((S =nf 1-proj-hpke_context(v_1896)) && success?(1-proj-hpke_context(v_1896)))) in
        {8475}let base_nonce_25: bitstring = (if v_1897 then 3-proj-hpke_context(v_1896) else caught-fail) in
        {8476}let key_25: aead_key = (if v_1897 then 2-proj-hpke_context(v_1896) else caught-fail) in
        {8477}let payload_26: bitstring = (if is-false(v_1895) then catch-fail((if v_1897 then aead_enc(ech_a_13,key_25,(base_nonce_25,n_22),o_client_hello_ADD_20,i_client_hello_26) else fail-any)) else caught-fail) in
        {8478}let v_1898: bool = not-caught-fail(payload_26) in
        {8479}let o_ech_ext_25: echExt = (if v_1898 then ECHClientHelloOuter(ech_h_13,ech_a_13,config_id_13,enc_6,payload_26) else caught-fail) in
        {8480}let o_offer_46: params = (if v_1898 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),o_ech_ext_25,empty_extra_ext,o_psk_ext_25) else caught-fail) in
        {8481}let (o_client_hello_7: msg,i_client_hello_27: msg,o_cr_17: bytes32,i_cr_13: bytes32,o_kex_data_12: bitstring,i_kex_data_12: bitstring,o_psk_ext_26: preSharedKeyExt,psk_data_46: bitstring,o_ech_ext_26: echExt) = (if v_1894 then (if undo-catch-fail(v_1895) then (CH(o_cr_10,o_offer_45),CH(o_cr_10,o_offer_45),o_cr_10,o_cr_10,o_kex_data_7,o_kex_data_7,psk_ext_94,psk_data_45,ech_inner_or_grease_1) else (if v_1898 then (CH(o_cr_10,o_offer_46),i_client_hello_26,o_cr_10,i_cr_8,o_kex_data_7,i_kex_data_7,o_psk_ext_25,psk_data_45,o_ech_ext_25) else fail-any)) else fail-any) in
        {8482}out(io, o_client_hello_7);
        {8483}let (psk_208: preSharedKey,id_92: identityPsk,es_138: bitstring,safe_5: bool) = psk_data_46 in
        (
            {8484}if (false && (not(@8_use_grease) && (psk_208 ≠ NoPsk))) then
            {8485}let client_hello_6: bitstring = (zero,i_client_hello_27) in
            {8486}let l_521: label = tls13_client_early_traffic_secret in
            {8487}let h_494: bitstring = catch-fail(hash(@8_backend_h,client_hello_6)) in
            {8488}let v_1899: bool = not-caught-fail(h_494) in
            {8489}let x_591: bitstring = (if v_1899 then (l_521,h_494) else caught-fail) in
            {8490}let atsc0_6: bitstring = catch-fail((if v_1899 then hmac(@8_backend_h,es_138,x_591) else fail-any)) in
            {8491}let v_1900: bool = not-caught-fail(atsc0_6) in
            {8492}let l_522: label = (if v_1900 then tls13_key else caught-fail) in
            {8493}let h_495: bitstring = (if v_1900 then zero else caught-fail) in
            {8494}let x_592: bitstring = (if v_1900 then (l_522,h_495) else caught-fail) in
            {8495}let kc0_6: bitstring = (if v_1900 then catch-fail(hmac(@8_backend_h,atsc0_6,x_592)) else caught-fail) in
            {8496}let v_1901: bool = not-caught-fail(kc0_6) in
            {8497}let l_523: label = (if v_1901 then tls13_early_exporter_master_secret else caught-fail) in
            {8498}let h_496: bitstring = (if v_1901 then catch-fail(hash(@8_backend_h,client_hello_6)) else caught-fail) in
            {8499}let v_1902: bool = not-caught-fail(h_496) in
            {8500}let x_593: bitstring = (if v_1902 then (l_523,h_496) else caught-fail) in
            {8501}let ems0_12: bitstring = (if v_1901 then catch-fail((if v_1902 then hmac(@8_backend_h,es_138,x_593) else fail-any)) else caught-fail) in
            {8502}let v_1903: bool = not-caught-fail(ems0_12) in
            {8503}let (wkc0_6: aead_key,ems0_13: bitstring) = (if v_1900 then (if v_1901 then (if v_1903 then (kc0_6,ems0_12) else fail-any) else fail-any) else fail-any) in
            {8504}!
            {8505}in(io, (i_6: nat,ad_6: bitstring));
            {8506}if is_nat(i_6) then
            {8507}new msg_ed_5[]: bitstring;
            {8508}let enc_ed_5: bitstring = aead_enc(@8_backend_a,wkc0_6,i_6,ad_6,msg_ed_5) in
            {8509}new st_15: stamp;
            {8510}event ClientSequenceClient0RTTDataWriteKey(id_client_5,st_15,i_6);
            {8511}event ClientSends0(id_client_5,i_cr_13,psk_208,i_6,ad_6,msg_ed_5);
            {8512}out(io, enc_ed_5)
        ) | (
            {8513}in(io, server_hello_6: msg);
            {8514}let SH(B32(sr24_7: bytes24,sr8_26: bytes8),mode_50: params) = server_hello_6 in
            (
                {8515}if (false && (B32(sr24_7,sr8_26) = B32(HRR24,HRR8))) then
                (
                    {8516}if (send_kex_1 ≠ true) then
                    {8517}let nego(=TLS13,h_alg_20: hash_alg,a_alg_18: aead_alg,hrr_kex_ext(g_53: group),=empty_sni_ext,ech_ext_19: echExt,=empty_extra_ext,=empty_psk_ext) = mode_50 in
                    {8518}let v_1904: bool = (ech_ext_19 = empty_ech_ext) in
                    {8519}let hrr_mode_10: params = (if not(v_1904) then nego(TLS13,@8_backend_h,@8_backend_a,hrr_kex_ext(@8_backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) else caught-fail) in
                    {8520}let hrr_6: msg = (if not(v_1904) then SH(B32(HRR24,HRR8),hrr_mode_10) else caught-fail) in
                    {8521}let cur_log_31: bitstring = (if not(v_1904) then ((zero,i_client_hello_27),hrr_6) else caught-fail) in
                    {8522}let transcript_hrr_ech_conf_6: bitstring = (if not(v_1904) then catch-fail(hash(@8_backend_h,cur_log_31)) else caught-fail) in
                    {8523}let v_1905: bool = not-caught-fail(transcript_hrr_ech_conf_6) in
                    {8524}let s_198: bitstring = (if v_1905 then zero else caught-fail) in
                    {8525}let k_200: bitstring = (if v_1905 then catch-fail(b32_2_b(get_random(i_client_hello_27))) else caught-fail) in
                    {8526}let v_1906: bool = not-caught-fail(k_200) in
                    {8527}let k_201: bitstring = (if v_1905 then catch-fail((if v_1906 then hmac(@8_backend_h,s_198,k_200) else fail-any)) else caught-fail) in
                    {8528}let v_1907: bool = not-caught-fail(k_201) in
                    {8529}let l_524: label = (if v_1907 then hrr_ech_accept_confirmation else caught-fail) in
                    {8530}let x_594: bitstring = (if v_1907 then (l_524,cur_log_31) else caught-fail) in
                    {8531}let is_ech_accepted_5: bool = (if v_1904 then false else (if (ech_ext_19 = ECHHelloRetryRequest((if v_1905 then crop_into_bytes8((if v_1907 then hmac(@8_backend_h,k_201,x_594) else fail-any)) else fail-any))) then true else false)) in
                    {8532}event ClientEchAcceptance(id_client_5,is_ech_accepted_5);
                    {8533}if is_ech_accepted_5 then
                    (
                        {8534}let cur_log_IN1_HRR_5: bitstring = ((zero,i_client_hello_27),server_hello_6) in
                        {8535}let ech_config(config_id_18: configId,ech_g_18: group,pkR_20: element,o_dom_14: domain,ech_h_18: hash_alg,ech_a_18: aead_alg) = ech_conf_2 in
                        {8536}let send_key_share_15: bool = true in
                        {8537}new s_199[]: seed;
                        {8538}let gx_47: element = dh_pub(@8_backend_g,dh_k(s_199)) in
                        {8539}let v_1908: bitstring = (dh_k(s_199),gx_47) in
                        {8540}let v_1909: bool = success?(1-proj-2-tuple(v_1908)) in
                        {8541}let gx_48: element = (if v_1909 then 2-proj-2-tuple(v_1908) else caught-fail) in
                        {8542}let x_595: bitstring = (if v_1909 then 1-proj-2-tuple(v_1908) else caught-fail) in
                        {8543}let kex_19: kex_alg = (if v_1909 then (if send_key_share_15 then DHE_kex(@8_backend_g,gx_48) else DHE_group(@8_backend_g)) else caught-fail) in
                        {8544}let (i_kex_ext_8: keyShareExt,i_kex_data_13: bitstring) = (if v_1909 then (client_kex_ext(kex_19),(x_595,@8_backend_g)) else fail-any) in
                        {8545}let send_key_share_16: bool = true in
                        {8546}new s_200[]: seed;
                        {8547}let gx_49: element = dh_pub(@8_tls_g,dh_k(s_200)) in
                        {8548}let v_1910: bitstring = (dh_k(s_200),gx_49) in
                        {8549}let v_1911: bool = success?(1-proj-2-tuple(v_1910)) in
                        {8550}let gx_50: element = (if v_1911 then 2-proj-2-tuple(v_1910) else caught-fail) in
                        {8551}let x_596: bitstring = (if v_1911 then 1-proj-2-tuple(v_1910) else caught-fail) in
                        {8552}let kex_20: kex_alg = (if v_1911 then (if send_key_share_16 then DHE_kex(@8_tls_g,gx_50) else DHE_group(@8_tls_g)) else caught-fail) in
                        {8553}let (o_kex_ext_12: keyShareExt,o_kex_data_13: bitstring) = (if v_1911 then (client_kex_ext(kex_20),(x_596,@8_tls_g)) else fail-any) in
                        {8554}new rand24_20[]: bytes24;
                        {8555}new rand8_20[]: bytes8;
                        {8556}let i_cr_14: bytes32 = B32(rand24_20,rand8_20) in
                        {8557}new rand24_21[]: bytes24;
                        {8558}new rand8_21[]: bytes8;
                        {8559}let o_cr_18: bytes32 = B32(rand24_21,rand8_21) in
                        {8560}let ech_ext_20: echExt = ECHClientHelloInner in
                        {8561}if @8_use_psk then
                        (
                            {8562}let (psk_209: preSharedKey,id_93: identityPsk,old_es_12: bitstring,is_safe_81: bool) = psk_data_46 in
                            (
                                {8563}let offer_26: params = nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_8,SNI(backend_dom_1),ech_ext_20,@8_i_extra_ext,trunc_client_psk_ext(id_93)) in
                                {8564}let cur_log'_26: bitstring = (cur_log_IN1_HRR_5,CH(i_cr_14,offer_26)) in
                                {8565}let s_201: bitstring = zero in
                                {8566}let k_202: bitstring = catch-fail(psk2b(psk_209)) in
                                {8567}let v_1912: bool = not-caught-fail(k_202) in
                                {8568}let early_secret_141: bitstring = catch-fail((if v_1912 then hmac(@8_backend_h,s_201,k_202) else fail-any)) in
                                {8569}let v_1913: bool = not-caught-fail(early_secret_141) in
                                {8570}let l_525: label = (if v_1913 then tls13_ext_res_binder else caught-fail) in
                                {8571}let m_186: bitstring = (if v_1913 then zero else caught-fail) in
                                {8572}let h_497: bitstring = (if v_1913 then catch-fail(hash(@8_backend_h,m_186)) else caught-fail) in
                                {8573}let v_1914: bool = not-caught-fail(h_497) in
                                {8574}let x_597: bitstring = (if v_1914 then (l_525,h_497) else caught-fail) in
                                {8575}let binder_key_94: bitstring = (if v_1913 then catch-fail((if v_1914 then hmac(@8_backend_h,early_secret_141,x_597) else fail-any)) else caught-fail) in
                                {8576}let v_1915: bool = not-caught-fail(binder_key_94) in
                                {8577}let v_1916: bitstring = catch-fail((if v_1913 then (if v_1915 then (early_secret_141,binder_key_94) else fail-any) else fail-any)) in
                                {8578}let v_1917: bool = (not-caught-fail(v_1916) && success?(1-proj-2-tuple(v_1916))) in
                                {8579}let kb_94: mac_key = (if v_1917 then 2-proj-2-tuple(v_1916) else caught-fail) in
                                {8580}let es_139: bitstring = (if v_1917 then 1-proj-2-tuple(v_1916) else caught-fail) in
                                {8581}let binders_25: bitstring = (if v_1917 then catch-fail(hmac(@8_backend_h,kb_94,cur_log'_26)) else caught-fail) in
                                {8582}let v_1918: bool = not-caught-fail(binders_25) in
                                {8583}let v_1919: bitstring = catch-fail((if v_1917 then (if v_1918 then (client_psk_ext(id_93,binders_25),(psk_209,id_93,es_139,is_safe_81)) else fail-any) else fail-any)) in
                                {8584}let v_1920: bool = (not-caught-fail(v_1919) && success?(1-proj-2-tuple(v_1919))) in
                                {8585}let psk_data_47: bitstring = (if v_1920 then 2-proj-2-tuple(v_1919) else caught-fail) in
                                {8586}let psk_ext_95: preSharedKeyExt = (if v_1920 then 1-proj-2-tuple(v_1919) else caught-fail) in
                                {8587}let i_offer_21: params = (if v_1920 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_8,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_95) else caught-fail) in
                                {8588}let i_client_hello_28: msg = (if v_1920 then CH(i_cr_14,i_offer_21) else caught-fail) in
                                {8589}new fake_id_26[]: identityPsk;
                                {8590}new fake_binder_26[]: bitstring;
                                {8591}let o_psk_ext_27: preSharedKeyExt = (if v_1920 then (if @8_use_psk then client_psk_ext(fake_id_26,fake_binder_26) else empty_psk_ext) else caught-fail) in
                                {8592}let o_ech_ext_ADD_21: echExt = (if v_1920 then ECHClientHelloOuter(ech_h_18,ech_a_18,config_id_18,zero,zero) else caught-fail) in
                                {8593}let o_offer_ADD_21: params = (if v_1920 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_12,SNI(o_dom_14),o_ech_ext_ADD_21,empty_extra_ext,o_psk_ext_27) else caught-fail) in
                                {8594}let o_client_hello_ADD_21: msg = (if v_1920 then CH(o_cr_18,o_offer_ADD_21) else caught-fail) in
                                {8595}let n_23: nat = (if v_1920 then 2 else caught-fail) in
                                {8596}let v_1921: hpkeContext = (if v_1920 then catch-fail(context_2) else caught-fail) in
                                {8597}let v_1922: bool = (not-caught-fail(v_1921) && ((S =nf 1-proj-hpke_context(v_1921)) && success?(1-proj-hpke_context(v_1921)))) in
                                {8598}let base_nonce_26: bitstring = (if v_1922 then 3-proj-hpke_context(v_1921) else caught-fail) in
                                {8599}let key_26: aead_key = (if v_1922 then 2-proj-hpke_context(v_1921) else caught-fail) in
                                {8600}let payload_27: bitstring = (if v_1920 then catch-fail((if v_1922 then aead_enc(ech_a_18,key_26,(base_nonce_26,n_23),o_client_hello_ADD_21,i_client_hello_28) else fail-any)) else caught-fail) in
                                {8601}let v_1923: bool = not-caught-fail(payload_27) in
                                {8602}let o_ech_ext_27: echExt = (if v_1923 then ECHClientHelloOuter(ech_h_18,ech_a_18,config_id_18,zero,payload_27) else caught-fail) in
                                {8603}let o_offer_47: params = (if v_1923 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_12,SNI(o_dom_14),o_ech_ext_27,empty_extra_ext,o_psk_ext_27) else caught-fail) in
                                {8604}let (o_client_hello'_15: msg,i_client_hello'_16: msg,i_cr'_15: bytes32,i_kex_data'_15: bitstring,psk_data'_40: bitstring) = (if v_1920 then (if v_1923 then (CH(o_cr_18,o_offer_47),i_client_hello_28,i_cr_14,i_kex_data_13,psk_data_47) else fail-any) else fail-any) in
                                {8605}out(io, o_client_hello'_15);
                                {8606}in(io, server_hello'_35: msg);
                                {8607}let SH(B32(sr24'_15: bytes24,sr8'_15: bytes8),params'_15: params) = server_hello'_35 in
                                {8608}let cur_log_IN1_HRR_IN2_15: bitstring = (cur_log_IN1_HRR_5,i_client_hello'_16) in
                                {8609}let sh_modified_21: msg = SH(B32(sr24'_15,zero8),params'_15) in
                                {8610}let cur_log_sh_21: bitstring = (cur_log_IN1_HRR_IN2_15,sh_modified_21) in
                                {8611}let transcript_ech_conf_21: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_21)) in
                                {8612}let v_1924: bool = not-caught-fail(transcript_ech_conf_21) in
                                {8613}let s_202: bitstring = (if v_1924 then zero else caught-fail) in
                                {8614}let k_203: bitstring = (if v_1924 then catch-fail(b32_2_b(get_random(i_client_hello'_16))) else caught-fail) in
                                {8615}let v_1925: bool = not-caught-fail(k_203) in
                                {8616}let k_204: bitstring = (if v_1924 then catch-fail((if v_1925 then hmac(@8_backend_h,s_202,k_203) else fail-any)) else caught-fail) in
                                {8617}let v_1926: bool = not-caught-fail(k_204) in
                                {8618}let l_526: label = (if v_1926 then ech_accept_confirmation else caught-fail) in
                                {8619}let x_598: bitstring = (if v_1926 then (l_526,cur_log_sh_21) else caught-fail) in
                                {8620}let sr8_27: bytes8 = (if v_1924 then catch-fail(crop_into_bytes8((if v_1926 then hmac(@8_backend_h,k_204,x_598) else fail-any))) else caught-fail) in
                                {8621}let v_1927: bool = not-caught-fail(sr8_27) in
                                {8622}if (B32(sr24'_15,sr8'_15) = (if v_1924 then (if v_1927 then B32(sr24'_15,sr8_27) else fail-any) else fail-any)) then
                                {8623}let (x_599: bitstring,g_54: group) = i_kex_data'_15 in
                                {8624}let (psk_offer_45: preSharedKey,id_offer_45: identityPsk,es_offer_45: bitstring,is_safe_offer_45: bool) = psk_data'_40 in
                                {8625}event Client_PSKOffer(id_client_5,psk_offer_45,id_offer_45,is_safe_offer_45);
                                {8626}event Client_Rand_client(id_client_5,i_cr'_15);
                                {8627}event Client_DH_client(id_client_5,dh_pub(g_54,x_599));
                                {8628}event Client_server_domain(id_client_5,backend_dom_1);
                                {8629}let SH(sr_53: bytes32,mode_51: params) = server_hello'_35 in
                                {8630}event Client_Rand_server(id_client_5,sr_53);
                                {8631}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_54,gy_46: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_96: preSharedKeyExt) = mode_51 in
                                (
                                    {8632}let cur_log2_94: bitstring = (cur_log_IN1_HRR_IN2_15,server_hello'_35) in
                                    {8633}event Client_DH_server(id_client_5,gy_46);
                                    {8634}let v_1928: bool = (psk_ext_96 = empty_psk_ext) in
                                    {8635}let psk_210: preSharedKey = (if v_1928 then NoPsk else caught-fail) in
                                    {8636}let s_203: bitstring = (if v_1928 then zero else caught-fail) in
                                    {8637}let k_205: bitstring = (if v_1928 then catch-fail(psk2b(psk_210)) else caught-fail) in
                                    {8638}let v_1929: bool = not-caught-fail(k_205) in
                                    {8639}let early_secret_142: bitstring = (if v_1928 then catch-fail((if v_1929 then hmac(@8_backend_h,s_203,k_205) else fail-any)) else caught-fail) in
                                    {8640}let v_1930: bool = not-caught-fail(early_secret_142) in
                                    {8641}let l_527: label = (if v_1930 then tls13_ext_res_binder else caught-fail) in
                                    {8642}let m_187: bitstring = (if v_1930 then zero else caught-fail) in
                                    {8643}let h_498: bitstring = (if v_1930 then catch-fail(hash(@8_backend_h,m_187)) else caught-fail) in
                                    {8644}let v_1931: bool = not-caught-fail(h_498) in
                                    {8645}let x_600: bitstring = (if v_1931 then (l_527,h_498) else caught-fail) in
                                    {8646}let binder_key_95: bitstring = (if v_1930 then catch-fail((if v_1931 then hmac(@8_backend_h,early_secret_142,x_600) else fail-any)) else caught-fail) in
                                    {8647}let v_1932: bool = not-caught-fail(binder_key_95) in
                                    {8648}let v_1933: bitstring = (if v_1928 then catch-fail((if v_1930 then (if v_1932 then (early_secret_142,binder_key_95) else fail-any) else fail-any)) else caught-fail) in
                                    {8649}let v_1934: bool = (not-caught-fail(v_1933) && success?(1-proj-2-tuple(v_1933))) in
                                    {8650}let kb_95: mac_key = (if v_1934 then 2-proj-2-tuple(v_1933) else caught-fail) in
                                    {8651}let es_140: bitstring = (if v_1934 then 1-proj-2-tuple(v_1933) else caught-fail) in
                                    {8652}let v_1935: bitstring = (if not(v_1928) then catch-fail(psk_data'_40) else caught-fail) in
                                    {8653}let v_1936: bool = (not-caught-fail(v_1935) && success?(1-proj-4-tuple(v_1935))) in
                                    {8654}let is_safe_82: bool = (if v_1936 then 4-proj-4-tuple(v_1935) else caught-fail) in
                                    {8655}let es_141: bitstring = (if v_1936 then 3-proj-4-tuple(v_1935) else caught-fail) in
                                    {8656}let id_94: identityPsk = (if v_1936 then 2-proj-4-tuple(v_1935) else caught-fail) in
                                    {8657}let psk_211: preSharedKey = (if v_1936 then 1-proj-4-tuple(v_1935) else caught-fail) in
                                    {8658}let (psk_212: preSharedKey,early_secret_143: bitstring,valid_45: bool,safe_psk_48: bool) = (if v_1928 then (if v_1934 then (NoPsk,es_140,true,false) else fail-any) else (if v_1936 then (psk_211,es_141,((psk_211 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_96)),is_safe_82) else fail-any)) in
                                    {8659}event Client_PSKChoosen(id_client_5,psk_212,safe_psk_48);
                                    {8660}if valid_45 then
                                    (
                                        {8661}let gxy_92: element = catch-fail(dh_decap_fun(g_54,gy_46,x_599)) in
                                        {8662}let v_1937: bool = not-caught-fail(gxy_92) in
                                        {8663}new s_204[]: seed;
                                        {8664}let gxy_93: element = (if v_1937 then gxy_92 else dh_f(s_204)) in
                                        {8665}event Client_DH_gxy(id_client_5,gxy_93);
                                        {8666}let l_528: label = tls13_derived in
                                        {8667}let m_188: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {8668}let v_1938: bool = not-caught-fail(m_188) in
                                        {8669}let h_499: bitstring = (if v_1938 then catch-fail(hash(@8_backend_h,m_188)) else caught-fail) in
                                        {8670}let v_1939: bool = not-caught-fail(h_499) in
                                        {8671}let x_601: bitstring = (if v_1939 then (l_528,h_499) else caught-fail) in
                                        {8672}let extra_97: bitstring = catch-fail((if v_1938 then (if v_1939 then hmac(@8_backend_h,early_secret_143,x_601) else fail-any) else fail-any)) in
                                        {8673}let v_1940: bool = not-caught-fail(extra_97) in
                                        {8674}let handshake_secret_46: bitstring = (if v_1940 then hmac(@8_backend_h,extra_97,gxy_93) else fail-any) in
                                        {8675}let l_529: label = tls13_derived in
                                        {8676}let m_189: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {8677}let v_1941: bool = not-caught-fail(m_189) in
                                        {8678}let h_500: bitstring = (if v_1941 then catch-fail(hash(@8_backend_h,m_189)) else caught-fail) in
                                        {8679}let v_1942: bool = not-caught-fail(h_500) in
                                        {8680}let x_602: bitstring = (if v_1942 then (l_529,h_500) else caught-fail) in
                                        {8681}let extra_98: bitstring = catch-fail((if v_1941 then (if v_1942 then hmac(@8_backend_h,handshake_secret_46,x_602) else fail-any) else fail-any)) in
                                        {8682}let v_1943: bool = not-caught-fail(extra_98) in
                                        {8683}let k_206: bitstring = (if v_1943 then zero else caught-fail) in
                                        {8684}let master_secret_99: bitstring = (if v_1943 then catch-fail(hmac(@8_backend_h,handshake_secret_46,k_206)) else caught-fail) in
                                        {8685}let v_1944: bool = not-caught-fail(master_secret_99) in
                                        {8686}let l_530: label = (if v_1944 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {8687}let h_501: bitstring = (if v_1944 then catch-fail(hash(@8_backend_h,cur_log2_94)) else caught-fail) in
                                        {8688}let v_1945: bool = not-caught-fail(h_501) in
                                        {8689}let x_603: bitstring = (if v_1945 then (l_530,h_501) else caught-fail) in
                                        {8690}let client_hts_46: bitstring = (if v_1944 then catch-fail((if v_1945 then hmac(@8_backend_h,handshake_secret_46,x_603) else fail-any)) else caught-fail) in
                                        {8691}let v_1946: bool = not-caught-fail(client_hts_46) in
                                        {8692}let l_531: label = (if v_1946 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {8693}let h_502: bitstring = (if v_1946 then catch-fail(hash(@8_backend_h,cur_log2_94)) else caught-fail) in
                                        {8694}let v_1947: bool = not-caught-fail(h_502) in
                                        {8695}let x_604: bitstring = (if v_1947 then (l_531,h_502) else caught-fail) in
                                        {8696}let server_hts_46: bitstring = (if v_1946 then catch-fail((if v_1947 then hmac(@8_backend_h,handshake_secret_46,x_604) else fail-any)) else caught-fail) in
                                        {8697}let v_1948: bool = not-caught-fail(server_hts_46) in
                                        {8698}let l_532: label = (if v_1948 then tls13_key else caught-fail) in
                                        {8699}let h_503: bitstring = (if v_1948 then zero else caught-fail) in
                                        {8700}let x_605: bitstring = (if v_1948 then (l_532,h_503) else caught-fail) in
                                        {8701}let client_wkh_46: bitstring = (if v_1948 then catch-fail(hmac(@8_backend_h,client_hts_46,x_605)) else caught-fail) in
                                        {8702}let v_1949: bool = not-caught-fail(client_wkh_46) in
                                        {8703}let l_533: label = (if v_1949 then tls13_key else caught-fail) in
                                        {8704}let h_504: bitstring = (if v_1949 then zero else caught-fail) in
                                        {8705}let x_606: bitstring = (if v_1949 then (l_533,h_504) else caught-fail) in
                                        {8706}let server_wkh_46: bitstring = (if v_1949 then catch-fail(hmac(@8_backend_h,server_hts_46,x_606)) else caught-fail) in
                                        {8707}let v_1950: bool = not-caught-fail(server_wkh_46) in
                                        {8708}let l_534: label = (if v_1950 then tls13_finished else caught-fail) in
                                        {8709}let h_505: bitstring = (if v_1950 then zero else caught-fail) in
                                        {8710}let x_607: bitstring = (if v_1950 then (l_534,h_505) else caught-fail) in
                                        {8711}let client_fk_46: bitstring = (if v_1950 then catch-fail(hmac(@8_backend_h,client_hts_46,x_607)) else caught-fail) in
                                        {8712}let v_1951: bool = not-caught-fail(client_fk_46) in
                                        {8713}let l_535: label = (if v_1951 then tls13_finished else caught-fail) in
                                        {8714}let h_506: bitstring = (if v_1951 then zero else caught-fail) in
                                        {8715}let x_608: bitstring = (if v_1951 then (l_535,h_506) else caught-fail) in
                                        {8716}let server_fk_46: bitstring = (if v_1951 then catch-fail(hmac(@8_backend_h,server_hts_46,x_608)) else caught-fail) in
                                        {8717}let v_1952: bool = not-caught-fail(server_fk_46) in
                                        {8718}let (master_secret_100: bitstring,chk_53: aead_key,shk_52: aead_key,cfin_53: mac_key,sfin_52: mac_key) = (if v_1943 then (if v_1944 then (if v_1946 then (if v_1948 then (if v_1949 then (if v_1950 then (if v_1951 then (if v_1952 then (master_secret_99,client_wkh_46,server_wkh_46,client_fk_46,server_fk_46) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {8719}event Client_chk(id_client_5,chk_53);
                                        {8720}event Client_shk(id_client_5,shk_52);
                                        {8721}event Client_cfin(id_client_5,cfin_53);
                                        {8722}event Client_sfin(id_client_5,sfin_52);
                                        {8723}in(io, enc_ee_msg_45: bitstring);
                                        {8724}let ee_msg_50: msg = aead_dec(@8_backend_a,shk_52,0,zero,enc_ee_msg_45) in
                                        {8725}let EE(ech_ee_45: echExt,extra_ee_45: extraExt) = ee_msg_50 in
                                        {8726}let cur_log2_95: bitstring = (cur_log2_94,ee_msg_50) in
                                        {8727}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_15,sr_53,@8_backend_h,@8_backend_a,c_dom_6,backend_dom_1,psk_212,safe_psk_48,@8_comp_psk,master_secret_100,chk_53,0,shk_52,1,cfin_53,sfin_52,cur_log2_95)))
                                    )
                                    else
                                        {8728}out(io, illegal_parameter)
                                )
                                else
                                    {8729}out(io, illegal_parameter)
                            )
                            else
                                {8906}get pre_shared_keys(c_dom'_14: domain,=backend_dom_1,=@8_backend_h,id_95: identityPsk,psk_213: preSharedKey,idP_16: idProc,is_safe_83: bool) in
                                {8730}event Selected_one_time_used_psk(id_client_5,psk_213,is_safe_83);
                                {8731}event Selected_psk(c_dom_6,c_dom'_14,idP_16,is_safe_83);
                                {8732}event Selected_psk_no_missmatch(id_client_5,backend_dom_1,@8_backend_h,psk_213,id_95);
                                {8733}event Selected_psk_with_ID(c_dom_6,c_dom'_14,id_95,idP_16,is_safe_83);
                                {8734}let v_1953: bitstring = (id_95,psk_213,is_safe_83) in
                                {8735}let v_1954: bool = success?(1-proj-3-tuple(v_1953)) in
                                {8736}let is_safe_84: bool = (if v_1954 then 3-proj-3-tuple(v_1953) else caught-fail) in
                                {8737}let psk_214: preSharedKey = (if v_1954 then 2-proj-3-tuple(v_1953) else caught-fail) in
                                {8738}let id_96: identityPsk = (if v_1954 then 1-proj-3-tuple(v_1953) else caught-fail) in
                                {8739}let offer_27: params = (if v_1954 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_8,SNI(backend_dom_1),ech_ext_20,@8_i_extra_ext,trunc_client_psk_ext(id_96)) else caught-fail) in
                                {8740}let cur_log'_27: bitstring = (if v_1954 then (cur_log_IN1_HRR_5,CH(i_cr_14,offer_27)) else caught-fail) in
                                {8741}let s_205: bitstring = (if v_1954 then zero else caught-fail) in
                                {8742}let k_207: bitstring = (if v_1954 then catch-fail(psk2b(psk_214)) else caught-fail) in
                                {8743}let v_1955: bool = not-caught-fail(k_207) in
                                {8744}let early_secret_144: bitstring = (if v_1954 then catch-fail((if v_1955 then hmac(@8_backend_h,s_205,k_207) else fail-any)) else caught-fail) in
                                {8745}let v_1956: bool = not-caught-fail(early_secret_144) in
                                {8746}let l_536: label = (if v_1956 then tls13_ext_res_binder else caught-fail) in
                                {8747}let m_190: bitstring = (if v_1956 then zero else caught-fail) in
                                {8748}let h_507: bitstring = (if v_1956 then catch-fail(hash(@8_backend_h,m_190)) else caught-fail) in
                                {8749}let v_1957: bool = not-caught-fail(h_507) in
                                {8750}let x_609: bitstring = (if v_1957 then (l_536,h_507) else caught-fail) in
                                {8751}let binder_key_96: bitstring = (if v_1956 then catch-fail((if v_1957 then hmac(@8_backend_h,early_secret_144,x_609) else fail-any)) else caught-fail) in
                                {8752}let v_1958: bool = not-caught-fail(binder_key_96) in
                                {8753}let v_1959: bitstring = (if v_1954 then catch-fail((if v_1956 then (if v_1958 then (early_secret_144,binder_key_96) else fail-any) else fail-any)) else caught-fail) in
                                {8754}let v_1960: bool = (not-caught-fail(v_1959) && success?(1-proj-2-tuple(v_1959))) in
                                {8755}let kb_96: mac_key = (if v_1960 then 2-proj-2-tuple(v_1959) else caught-fail) in
                                {8756}let es_142: bitstring = (if v_1960 then 1-proj-2-tuple(v_1959) else caught-fail) in
                                {8757}let binders_26: bitstring = (if v_1960 then catch-fail(hmac(@8_backend_h,kb_96,cur_log'_27)) else caught-fail) in
                                {8758}let v_1961: bool = not-caught-fail(binders_26) in
                                {8759}let v_1962: bitstring = catch-fail((if v_1954 then (if v_1960 then (if v_1961 then (client_psk_ext(id_96,binders_26),(psk_214,id_96,es_142,is_safe_84)) else fail-any) else fail-any) else fail-any)) in
                                {8760}let v_1963: bool = (not-caught-fail(v_1962) && success?(1-proj-2-tuple(v_1962))) in
                                {8761}let psk_data_48: bitstring = (if v_1963 then 2-proj-2-tuple(v_1962) else caught-fail) in
                                {8762}let psk_ext_97: preSharedKeyExt = (if v_1963 then 1-proj-2-tuple(v_1962) else caught-fail) in
                                {8763}let i_offer_22: params = (if v_1963 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_8,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_97) else caught-fail) in
                                {8764}let i_client_hello_29: msg = (if v_1963 then CH(i_cr_14,i_offer_22) else caught-fail) in
                                {8765}new fake_id_27[]: identityPsk;
                                {8766}new fake_binder_27[]: bitstring;
                                {8767}let o_psk_ext_28: preSharedKeyExt = (if v_1963 then (if @8_use_psk then client_psk_ext(fake_id_27,fake_binder_27) else empty_psk_ext) else caught-fail) in
                                {8768}let o_ech_ext_ADD_22: echExt = (if v_1963 then ECHClientHelloOuter(ech_h_18,ech_a_18,config_id_18,zero,zero) else caught-fail) in
                                {8769}let o_offer_ADD_22: params = (if v_1963 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_12,SNI(o_dom_14),o_ech_ext_ADD_22,empty_extra_ext,o_psk_ext_28) else caught-fail) in
                                {8770}let o_client_hello_ADD_22: msg = (if v_1963 then CH(o_cr_18,o_offer_ADD_22) else caught-fail) in
                                {8771}let n_24: nat = (if v_1963 then 2 else caught-fail) in
                                {8772}let v_1964: hpkeContext = (if v_1963 then catch-fail(context_2) else caught-fail) in
                                {8773}let v_1965: bool = (not-caught-fail(v_1964) && ((S =nf 1-proj-hpke_context(v_1964)) && success?(1-proj-hpke_context(v_1964)))) in
                                {8774}let base_nonce_27: bitstring = (if v_1965 then 3-proj-hpke_context(v_1964) else caught-fail) in
                                {8775}let key_27: aead_key = (if v_1965 then 2-proj-hpke_context(v_1964) else caught-fail) in
                                {8776}let payload_28: bitstring = (if v_1963 then catch-fail((if v_1965 then aead_enc(ech_a_18,key_27,(base_nonce_27,n_24),o_client_hello_ADD_22,i_client_hello_29) else fail-any)) else caught-fail) in
                                {8777}let v_1966: bool = not-caught-fail(payload_28) in
                                {8778}let o_ech_ext_28: echExt = (if v_1966 then ECHClientHelloOuter(ech_h_18,ech_a_18,config_id_18,zero,payload_28) else caught-fail) in
                                {8779}let o_offer_48: params = (if v_1966 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_12,SNI(o_dom_14),o_ech_ext_28,empty_extra_ext,o_psk_ext_28) else caught-fail) in
                                {8780}let (o_client_hello'_16: msg,i_client_hello'_17: msg,i_cr'_16: bytes32,i_kex_data'_16: bitstring,psk_data'_41: bitstring) = (if v_1963 then (if v_1966 then (CH(o_cr_18,o_offer_48),i_client_hello_29,i_cr_14,i_kex_data_13,psk_data_48) else fail-any) else fail-any) in
                                {8781}out(io, o_client_hello'_16);
                                {8782}in(io, server_hello'_36: msg);
                                {8783}let SH(B32(sr24'_16: bytes24,sr8'_16: bytes8),params'_16: params) = server_hello'_36 in
                                {8784}let cur_log_IN1_HRR_IN2_16: bitstring = (cur_log_IN1_HRR_5,i_client_hello'_17) in
                                {8785}let sh_modified_22: msg = SH(B32(sr24'_16,zero8),params'_16) in
                                {8786}let cur_log_sh_22: bitstring = (cur_log_IN1_HRR_IN2_16,sh_modified_22) in
                                {8787}let transcript_ech_conf_22: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_22)) in
                                {8788}let v_1967: bool = not-caught-fail(transcript_ech_conf_22) in
                                {8789}let s_206: bitstring = (if v_1967 then zero else caught-fail) in
                                {8790}let k_208: bitstring = (if v_1967 then catch-fail(b32_2_b(get_random(i_client_hello'_17))) else caught-fail) in
                                {8791}let v_1968: bool = not-caught-fail(k_208) in
                                {8792}let k_209: bitstring = (if v_1967 then catch-fail((if v_1968 then hmac(@8_backend_h,s_206,k_208) else fail-any)) else caught-fail) in
                                {8793}let v_1969: bool = not-caught-fail(k_209) in
                                {8794}let l_537: label = (if v_1969 then ech_accept_confirmation else caught-fail) in
                                {8795}let x_610: bitstring = (if v_1969 then (l_537,cur_log_sh_22) else caught-fail) in
                                {8796}let sr8_28: bytes8 = (if v_1967 then catch-fail(crop_into_bytes8((if v_1969 then hmac(@8_backend_h,k_209,x_610) else fail-any))) else caught-fail) in
                                {8797}let v_1970: bool = not-caught-fail(sr8_28) in
                                {8798}if (B32(sr24'_16,sr8'_16) = (if v_1967 then (if v_1970 then B32(sr24'_16,sr8_28) else fail-any) else fail-any)) then
                                {8799}let (x_611: bitstring,g_55: group) = i_kex_data'_16 in
                                {8800}let (psk_offer_46: preSharedKey,id_offer_46: identityPsk,es_offer_46: bitstring,is_safe_offer_46: bool) = psk_data'_41 in
                                {8801}event Client_PSKOffer(id_client_5,psk_offer_46,id_offer_46,is_safe_offer_46);
                                {8802}event Client_Rand_client(id_client_5,i_cr'_16);
                                {8803}event Client_DH_client(id_client_5,dh_pub(g_55,x_611));
                                {8804}event Client_server_domain(id_client_5,backend_dom_1);
                                {8805}let SH(sr_54: bytes32,mode_52: params) = server_hello'_36 in
                                {8806}event Client_Rand_server(id_client_5,sr_54);
                                {8807}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_55,gy_47: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_98: preSharedKeyExt) = mode_52 in
                                (
                                    {8808}let cur_log2_96: bitstring = (cur_log_IN1_HRR_IN2_16,server_hello'_36) in
                                    {8809}event Client_DH_server(id_client_5,gy_47);
                                    {8810}let v_1971: bool = (psk_ext_98 = empty_psk_ext) in
                                    {8811}let psk_215: preSharedKey = (if v_1971 then NoPsk else caught-fail) in
                                    {8812}let s_207: bitstring = (if v_1971 then zero else caught-fail) in
                                    {8813}let k_210: bitstring = (if v_1971 then catch-fail(psk2b(psk_215)) else caught-fail) in
                                    {8814}let v_1972: bool = not-caught-fail(k_210) in
                                    {8815}let early_secret_145: bitstring = (if v_1971 then catch-fail((if v_1972 then hmac(@8_backend_h,s_207,k_210) else fail-any)) else caught-fail) in
                                    {8816}let v_1973: bool = not-caught-fail(early_secret_145) in
                                    {8817}let l_538: label = (if v_1973 then tls13_ext_res_binder else caught-fail) in
                                    {8818}let m_191: bitstring = (if v_1973 then zero else caught-fail) in
                                    {8819}let h_508: bitstring = (if v_1973 then catch-fail(hash(@8_backend_h,m_191)) else caught-fail) in
                                    {8820}let v_1974: bool = not-caught-fail(h_508) in
                                    {8821}let x_612: bitstring = (if v_1974 then (l_538,h_508) else caught-fail) in
                                    {8822}let binder_key_97: bitstring = (if v_1973 then catch-fail((if v_1974 then hmac(@8_backend_h,early_secret_145,x_612) else fail-any)) else caught-fail) in
                                    {8823}let v_1975: bool = not-caught-fail(binder_key_97) in
                                    {8824}let v_1976: bitstring = (if v_1971 then catch-fail((if v_1973 then (if v_1975 then (early_secret_145,binder_key_97) else fail-any) else fail-any)) else caught-fail) in
                                    {8825}let v_1977: bool = (not-caught-fail(v_1976) && success?(1-proj-2-tuple(v_1976))) in
                                    {8826}let kb_97: mac_key = (if v_1977 then 2-proj-2-tuple(v_1976) else caught-fail) in
                                    {8827}let es_143: bitstring = (if v_1977 then 1-proj-2-tuple(v_1976) else caught-fail) in
                                    {8828}let v_1978: bitstring = (if not(v_1971) then catch-fail(psk_data'_41) else caught-fail) in
                                    {8829}let v_1979: bool = (not-caught-fail(v_1978) && success?(1-proj-4-tuple(v_1978))) in
                                    {8830}let is_safe_85: bool = (if v_1979 then 4-proj-4-tuple(v_1978) else caught-fail) in
                                    {8831}let es_144: bitstring = (if v_1979 then 3-proj-4-tuple(v_1978) else caught-fail) in
                                    {8832}let id_97: identityPsk = (if v_1979 then 2-proj-4-tuple(v_1978) else caught-fail) in
                                    {8833}let psk_216: preSharedKey = (if v_1979 then 1-proj-4-tuple(v_1978) else caught-fail) in
                                    {8834}let (psk_217: preSharedKey,early_secret_146: bitstring,valid_46: bool,safe_psk_49: bool) = (if v_1971 then (if v_1977 then (NoPsk,es_143,true,false) else fail-any) else (if v_1979 then (psk_216,es_144,((psk_216 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_98)),is_safe_85) else fail-any)) in
                                    {8835}event Client_PSKChoosen(id_client_5,psk_217,safe_psk_49);
                                    {8836}if valid_46 then
                                    (
                                        {8837}let gxy_94: element = catch-fail(dh_decap_fun(g_55,gy_47,x_611)) in
                                        {8838}let v_1980: bool = not-caught-fail(gxy_94) in
                                        {8839}new s_208[]: seed;
                                        {8840}let gxy_95: element = (if v_1980 then gxy_94 else dh_f(s_208)) in
                                        {8841}event Client_DH_gxy(id_client_5,gxy_95);
                                        {8842}let l_539: label = tls13_derived in
                                        {8843}let m_192: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {8844}let v_1981: bool = not-caught-fail(m_192) in
                                        {8845}let h_509: bitstring = (if v_1981 then catch-fail(hash(@8_backend_h,m_192)) else caught-fail) in
                                        {8846}let v_1982: bool = not-caught-fail(h_509) in
                                        {8847}let x_613: bitstring = (if v_1982 then (l_539,h_509) else caught-fail) in
                                        {8848}let extra_99: bitstring = catch-fail((if v_1981 then (if v_1982 then hmac(@8_backend_h,early_secret_146,x_613) else fail-any) else fail-any)) in
                                        {8849}let v_1983: bool = not-caught-fail(extra_99) in
                                        {8850}let handshake_secret_47: bitstring = (if v_1983 then hmac(@8_backend_h,extra_99,gxy_95) else fail-any) in
                                        {8851}let l_540: label = tls13_derived in
                                        {8852}let m_193: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {8853}let v_1984: bool = not-caught-fail(m_193) in
                                        {8854}let h_510: bitstring = (if v_1984 then catch-fail(hash(@8_backend_h,m_193)) else caught-fail) in
                                        {8855}let v_1985: bool = not-caught-fail(h_510) in
                                        {8856}let x_614: bitstring = (if v_1985 then (l_540,h_510) else caught-fail) in
                                        {8857}let extra_100: bitstring = catch-fail((if v_1984 then (if v_1985 then hmac(@8_backend_h,handshake_secret_47,x_614) else fail-any) else fail-any)) in
                                        {8858}let v_1986: bool = not-caught-fail(extra_100) in
                                        {8859}let k_211: bitstring = (if v_1986 then zero else caught-fail) in
                                        {8860}let master_secret_101: bitstring = (if v_1986 then catch-fail(hmac(@8_backend_h,handshake_secret_47,k_211)) else caught-fail) in
                                        {8861}let v_1987: bool = not-caught-fail(master_secret_101) in
                                        {8862}let l_541: label = (if v_1987 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {8863}let h_511: bitstring = (if v_1987 then catch-fail(hash(@8_backend_h,cur_log2_96)) else caught-fail) in
                                        {8864}let v_1988: bool = not-caught-fail(h_511) in
                                        {8865}let x_615: bitstring = (if v_1988 then (l_541,h_511) else caught-fail) in
                                        {8866}let client_hts_47: bitstring = (if v_1987 then catch-fail((if v_1988 then hmac(@8_backend_h,handshake_secret_47,x_615) else fail-any)) else caught-fail) in
                                        {8867}let v_1989: bool = not-caught-fail(client_hts_47) in
                                        {8868}let l_542: label = (if v_1989 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {8869}let h_512: bitstring = (if v_1989 then catch-fail(hash(@8_backend_h,cur_log2_96)) else caught-fail) in
                                        {8870}let v_1990: bool = not-caught-fail(h_512) in
                                        {8871}let x_616: bitstring = (if v_1990 then (l_542,h_512) else caught-fail) in
                                        {8872}let server_hts_47: bitstring = (if v_1989 then catch-fail((if v_1990 then hmac(@8_backend_h,handshake_secret_47,x_616) else fail-any)) else caught-fail) in
                                        {8873}let v_1991: bool = not-caught-fail(server_hts_47) in
                                        {8874}let l_543: label = (if v_1991 then tls13_key else caught-fail) in
                                        {8875}let h_513: bitstring = (if v_1991 then zero else caught-fail) in
                                        {8876}let x_617: bitstring = (if v_1991 then (l_543,h_513) else caught-fail) in
                                        {8877}let client_wkh_47: bitstring = (if v_1991 then catch-fail(hmac(@8_backend_h,client_hts_47,x_617)) else caught-fail) in
                                        {8878}let v_1992: bool = not-caught-fail(client_wkh_47) in
                                        {8879}let l_544: label = (if v_1992 then tls13_key else caught-fail) in
                                        {8880}let h_514: bitstring = (if v_1992 then zero else caught-fail) in
                                        {8881}let x_618: bitstring = (if v_1992 then (l_544,h_514) else caught-fail) in
                                        {8882}let server_wkh_47: bitstring = (if v_1992 then catch-fail(hmac(@8_backend_h,server_hts_47,x_618)) else caught-fail) in
                                        {8883}let v_1993: bool = not-caught-fail(server_wkh_47) in
                                        {8884}let l_545: label = (if v_1993 then tls13_finished else caught-fail) in
                                        {8885}let h_515: bitstring = (if v_1993 then zero else caught-fail) in
                                        {8886}let x_619: bitstring = (if v_1993 then (l_545,h_515) else caught-fail) in
                                        {8887}let client_fk_47: bitstring = (if v_1993 then catch-fail(hmac(@8_backend_h,client_hts_47,x_619)) else caught-fail) in
                                        {8888}let v_1994: bool = not-caught-fail(client_fk_47) in
                                        {8889}let l_546: label = (if v_1994 then tls13_finished else caught-fail) in
                                        {8890}let h_516: bitstring = (if v_1994 then zero else caught-fail) in
                                        {8891}let x_620: bitstring = (if v_1994 then (l_546,h_516) else caught-fail) in
                                        {8892}let server_fk_47: bitstring = (if v_1994 then catch-fail(hmac(@8_backend_h,server_hts_47,x_620)) else caught-fail) in
                                        {8893}let v_1995: bool = not-caught-fail(server_fk_47) in
                                        {8894}let (master_secret_102: bitstring,chk_54: aead_key,shk_53: aead_key,cfin_54: mac_key,sfin_53: mac_key) = (if v_1986 then (if v_1987 then (if v_1989 then (if v_1991 then (if v_1992 then (if v_1993 then (if v_1994 then (if v_1995 then (master_secret_101,client_wkh_47,server_wkh_47,client_fk_47,server_fk_47) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {8895}event Client_chk(id_client_5,chk_54);
                                        {8896}event Client_shk(id_client_5,shk_53);
                                        {8897}event Client_cfin(id_client_5,cfin_54);
                                        {8898}event Client_sfin(id_client_5,sfin_53);
                                        {8899}in(io, enc_ee_msg_46: bitstring);
                                        {8900}let ee_msg_51: msg = aead_dec(@8_backend_a,shk_53,0,zero,enc_ee_msg_46) in
                                        {8901}let EE(ech_ee_46: echExt,extra_ee_46: extraExt) = ee_msg_51 in
                                        {8902}let cur_log2_97: bitstring = (cur_log2_96,ee_msg_51) in
                                        {8903}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_16,sr_54,@8_backend_h,@8_backend_a,c_dom_6,backend_dom_1,psk_217,safe_psk_49,@8_comp_psk,master_secret_102,chk_54,0,shk_53,1,cfin_54,sfin_53,cur_log2_97)))
                                    )
                                    else
                                        {8904}out(io, illegal_parameter)
                                )
                                else
                                    {8905}out(io, illegal_parameter)
                        )
                        else
                            {8907}let psk_218: preSharedKey = NoPsk in
                            {8908}let s_209: bitstring = zero in
                            {8909}let k_212: bitstring = catch-fail(psk2b(psk_218)) in
                            {8910}let v_1996: bool = not-caught-fail(k_212) in
                            {8911}let early_secret_147: bitstring = catch-fail((if v_1996 then hmac(@8_backend_h,s_209,k_212) else fail-any)) in
                            {8912}let v_1997: bool = not-caught-fail(early_secret_147) in
                            {8913}let l_547: label = (if v_1997 then tls13_ext_res_binder else caught-fail) in
                            {8914}let m_194: bitstring = (if v_1997 then zero else caught-fail) in
                            {8915}let h_517: bitstring = (if v_1997 then catch-fail(hash(@8_backend_h,m_194)) else caught-fail) in
                            {8916}let v_1998: bool = not-caught-fail(h_517) in
                            {8917}let x_621: bitstring = (if v_1998 then (l_547,h_517) else caught-fail) in
                            {8918}let binder_key_98: bitstring = (if v_1997 then catch-fail((if v_1998 then hmac(@8_backend_h,early_secret_147,x_621) else fail-any)) else caught-fail) in
                            {8919}let v_1999: bool = not-caught-fail(binder_key_98) in
                            {8920}let v_2000: bitstring = catch-fail((if v_1997 then (if v_1999 then (early_secret_147,binder_key_98) else fail-any) else fail-any)) in
                            {8921}let v_2001: bool = (not-caught-fail(v_2000) && success?(1-proj-2-tuple(v_2000))) in
                            {8922}let kb_98: mac_key = (if v_2001 then 2-proj-2-tuple(v_2000) else caught-fail) in
                            {8923}let es_145: bitstring = (if v_2001 then 1-proj-2-tuple(v_2000) else caught-fail) in
                            {8924}let v_2002: bitstring = catch-fail((if v_2001 then (empty_psk_ext,(NoPsk,zero,es_145,false)) else fail-any)) in
                            {8925}let v_2003: bool = (not-caught-fail(v_2002) && success?(1-proj-2-tuple(v_2002))) in
                            {8926}let psk_data_49: bitstring = (if v_2003 then 2-proj-2-tuple(v_2002) else caught-fail) in
                            {8927}let psk_ext_99: preSharedKeyExt = (if v_2003 then 1-proj-2-tuple(v_2002) else caught-fail) in
                            {8928}let i_offer_23: params = (if v_2003 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_8,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_99) else caught-fail) in
                            {8929}let i_client_hello_30: msg = (if v_2003 then CH(i_cr_14,i_offer_23) else caught-fail) in
                            {8930}new fake_id_28[]: identityPsk;
                            {8931}new fake_binder_28[]: bitstring;
                            {8932}let o_psk_ext_29: preSharedKeyExt = (if v_2003 then (if @8_use_psk then client_psk_ext(fake_id_28,fake_binder_28) else empty_psk_ext) else caught-fail) in
                            {8933}let o_ech_ext_ADD_23: echExt = (if v_2003 then ECHClientHelloOuter(ech_h_18,ech_a_18,config_id_18,zero,zero) else caught-fail) in
                            {8934}let o_offer_ADD_23: params = (if v_2003 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_12,SNI(o_dom_14),o_ech_ext_ADD_23,empty_extra_ext,o_psk_ext_29) else caught-fail) in
                            {8935}let o_client_hello_ADD_23: msg = (if v_2003 then CH(o_cr_18,o_offer_ADD_23) else caught-fail) in
                            {8936}let n_25: nat = (if v_2003 then 2 else caught-fail) in
                            {8937}let v_2004: hpkeContext = (if v_2003 then catch-fail(context_2) else caught-fail) in
                            {8938}let v_2005: bool = (not-caught-fail(v_2004) && ((S =nf 1-proj-hpke_context(v_2004)) && success?(1-proj-hpke_context(v_2004)))) in
                            {8939}let base_nonce_28: bitstring = (if v_2005 then 3-proj-hpke_context(v_2004) else caught-fail) in
                            {8940}let key_28: aead_key = (if v_2005 then 2-proj-hpke_context(v_2004) else caught-fail) in
                            {8941}let payload_29: bitstring = (if v_2003 then catch-fail((if v_2005 then aead_enc(ech_a_18,key_28,(base_nonce_28,n_25),o_client_hello_ADD_23,i_client_hello_30) else fail-any)) else caught-fail) in
                            {8942}let v_2006: bool = not-caught-fail(payload_29) in
                            {8943}let o_ech_ext_29: echExt = (if v_2006 then ECHClientHelloOuter(ech_h_18,ech_a_18,config_id_18,zero,payload_29) else caught-fail) in
                            {8944}let o_offer_49: params = (if v_2006 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_12,SNI(o_dom_14),o_ech_ext_29,empty_extra_ext,o_psk_ext_29) else caught-fail) in
                            {8945}let (o_client_hello'_17: msg,i_client_hello'_18: msg,i_cr'_17: bytes32,i_kex_data'_17: bitstring,psk_data'_42: bitstring) = (if v_2003 then (if v_2006 then (CH(o_cr_18,o_offer_49),i_client_hello_30,i_cr_14,i_kex_data_13,psk_data_49) else fail-any) else fail-any) in
                            {8946}out(io, o_client_hello'_17);
                            {8947}in(io, server_hello'_37: msg);
                            {8948}let SH(B32(sr24'_17: bytes24,sr8'_17: bytes8),params'_17: params) = server_hello'_37 in
                            {8949}let cur_log_IN1_HRR_IN2_17: bitstring = (cur_log_IN1_HRR_5,i_client_hello'_18) in
                            {8950}let sh_modified_23: msg = SH(B32(sr24'_17,zero8),params'_17) in
                            {8951}let cur_log_sh_23: bitstring = (cur_log_IN1_HRR_IN2_17,sh_modified_23) in
                            {8952}let transcript_ech_conf_23: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_23)) in
                            {8953}let v_2007: bool = not-caught-fail(transcript_ech_conf_23) in
                            {8954}let s_210: bitstring = (if v_2007 then zero else caught-fail) in
                            {8955}let k_213: bitstring = (if v_2007 then catch-fail(b32_2_b(get_random(i_client_hello'_18))) else caught-fail) in
                            {8956}let v_2008: bool = not-caught-fail(k_213) in
                            {8957}let k_214: bitstring = (if v_2007 then catch-fail((if v_2008 then hmac(@8_backend_h,s_210,k_213) else fail-any)) else caught-fail) in
                            {8958}let v_2009: bool = not-caught-fail(k_214) in
                            {8959}let l_548: label = (if v_2009 then ech_accept_confirmation else caught-fail) in
                            {8960}let x_622: bitstring = (if v_2009 then (l_548,cur_log_sh_23) else caught-fail) in
                            {8961}let sr8_29: bytes8 = (if v_2007 then catch-fail(crop_into_bytes8((if v_2009 then hmac(@8_backend_h,k_214,x_622) else fail-any))) else caught-fail) in
                            {8962}let v_2010: bool = not-caught-fail(sr8_29) in
                            {8963}if (B32(sr24'_17,sr8'_17) = (if v_2007 then (if v_2010 then B32(sr24'_17,sr8_29) else fail-any) else fail-any)) then
                            {8964}let (x_623: bitstring,g_56: group) = i_kex_data'_17 in
                            {8965}let (psk_offer_47: preSharedKey,id_offer_47: identityPsk,es_offer_47: bitstring,is_safe_offer_47: bool) = psk_data'_42 in
                            {8966}event Client_PSKOffer(id_client_5,psk_offer_47,id_offer_47,is_safe_offer_47);
                            {8967}event Client_Rand_client(id_client_5,i_cr'_17);
                            {8968}event Client_DH_client(id_client_5,dh_pub(g_56,x_623));
                            {8969}event Client_server_domain(id_client_5,backend_dom_1);
                            {8970}let SH(sr_55: bytes32,mode_53: params) = server_hello'_37 in
                            {8971}event Client_Rand_server(id_client_5,sr_55);
                            {8972}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_56,gy_48: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_100: preSharedKeyExt) = mode_53 in
                            (
                                {8973}let cur_log2_98: bitstring = (cur_log_IN1_HRR_IN2_17,server_hello'_37) in
                                {8974}event Client_DH_server(id_client_5,gy_48);
                                {8975}let v_2011: bool = (psk_ext_100 = empty_psk_ext) in
                                {8976}let psk_219: preSharedKey = (if v_2011 then NoPsk else caught-fail) in
                                {8977}let s_211: bitstring = (if v_2011 then zero else caught-fail) in
                                {8978}let k_215: bitstring = (if v_2011 then catch-fail(psk2b(psk_219)) else caught-fail) in
                                {8979}let v_2012: bool = not-caught-fail(k_215) in
                                {8980}let early_secret_148: bitstring = (if v_2011 then catch-fail((if v_2012 then hmac(@8_backend_h,s_211,k_215) else fail-any)) else caught-fail) in
                                {8981}let v_2013: bool = not-caught-fail(early_secret_148) in
                                {8982}let l_549: label = (if v_2013 then tls13_ext_res_binder else caught-fail) in
                                {8983}let m_195: bitstring = (if v_2013 then zero else caught-fail) in
                                {8984}let h_518: bitstring = (if v_2013 then catch-fail(hash(@8_backend_h,m_195)) else caught-fail) in
                                {8985}let v_2014: bool = not-caught-fail(h_518) in
                                {8986}let x_624: bitstring = (if v_2014 then (l_549,h_518) else caught-fail) in
                                {8987}let binder_key_99: bitstring = (if v_2013 then catch-fail((if v_2014 then hmac(@8_backend_h,early_secret_148,x_624) else fail-any)) else caught-fail) in
                                {8988}let v_2015: bool = not-caught-fail(binder_key_99) in
                                {8989}let v_2016: bitstring = (if v_2011 then catch-fail((if v_2013 then (if v_2015 then (early_secret_148,binder_key_99) else fail-any) else fail-any)) else caught-fail) in
                                {8990}let v_2017: bool = (not-caught-fail(v_2016) && success?(1-proj-2-tuple(v_2016))) in
                                {8991}let kb_99: mac_key = (if v_2017 then 2-proj-2-tuple(v_2016) else caught-fail) in
                                {8992}let es_146: bitstring = (if v_2017 then 1-proj-2-tuple(v_2016) else caught-fail) in
                                {8993}let v_2018: bitstring = (if not(v_2011) then catch-fail(psk_data'_42) else caught-fail) in
                                {8994}let v_2019: bool = (not-caught-fail(v_2018) && success?(1-proj-4-tuple(v_2018))) in
                                {8995}let is_safe_86: bool = (if v_2019 then 4-proj-4-tuple(v_2018) else caught-fail) in
                                {8996}let es_147: bitstring = (if v_2019 then 3-proj-4-tuple(v_2018) else caught-fail) in
                                {8997}let id_98: identityPsk = (if v_2019 then 2-proj-4-tuple(v_2018) else caught-fail) in
                                {8998}let psk_220: preSharedKey = (if v_2019 then 1-proj-4-tuple(v_2018) else caught-fail) in
                                {8999}let (psk_221: preSharedKey,early_secret_149: bitstring,valid_47: bool,safe_psk_50: bool) = (if v_2011 then (if v_2017 then (NoPsk,es_146,true,false) else fail-any) else (if v_2019 then (psk_220,es_147,((psk_220 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_100)),is_safe_86) else fail-any)) in
                                {9000}event Client_PSKChoosen(id_client_5,psk_221,safe_psk_50);
                                {9001}if valid_47 then
                                (
                                    {9002}let gxy_96: element = catch-fail(dh_decap_fun(g_56,gy_48,x_623)) in
                                    {9003}let v_2020: bool = not-caught-fail(gxy_96) in
                                    {9004}new s_212[]: seed;
                                    {9005}let gxy_97: element = (if v_2020 then gxy_96 else dh_f(s_212)) in
                                    {9006}event Client_DH_gxy(id_client_5,gxy_97);
                                    {9007}let l_550: label = tls13_derived in
                                    {9008}let m_196: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                    {9009}let v_2021: bool = not-caught-fail(m_196) in
                                    {9010}let h_519: bitstring = (if v_2021 then catch-fail(hash(@8_backend_h,m_196)) else caught-fail) in
                                    {9011}let v_2022: bool = not-caught-fail(h_519) in
                                    {9012}let x_625: bitstring = (if v_2022 then (l_550,h_519) else caught-fail) in
                                    {9013}let extra_101: bitstring = catch-fail((if v_2021 then (if v_2022 then hmac(@8_backend_h,early_secret_149,x_625) else fail-any) else fail-any)) in
                                    {9014}let v_2023: bool = not-caught-fail(extra_101) in
                                    {9015}let handshake_secret_48: bitstring = (if v_2023 then hmac(@8_backend_h,extra_101,gxy_97) else fail-any) in
                                    {9016}let l_551: label = tls13_derived in
                                    {9017}let m_197: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                    {9018}let v_2024: bool = not-caught-fail(m_197) in
                                    {9019}let h_520: bitstring = (if v_2024 then catch-fail(hash(@8_backend_h,m_197)) else caught-fail) in
                                    {9020}let v_2025: bool = not-caught-fail(h_520) in
                                    {9021}let x_626: bitstring = (if v_2025 then (l_551,h_520) else caught-fail) in
                                    {9022}let extra_102: bitstring = catch-fail((if v_2024 then (if v_2025 then hmac(@8_backend_h,handshake_secret_48,x_626) else fail-any) else fail-any)) in
                                    {9023}let v_2026: bool = not-caught-fail(extra_102) in
                                    {9024}let k_216: bitstring = (if v_2026 then zero else caught-fail) in
                                    {9025}let master_secret_103: bitstring = (if v_2026 then catch-fail(hmac(@8_backend_h,handshake_secret_48,k_216)) else caught-fail) in
                                    {9026}let v_2027: bool = not-caught-fail(master_secret_103) in
                                    {9027}let l_552: label = (if v_2027 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {9028}let h_521: bitstring = (if v_2027 then catch-fail(hash(@8_backend_h,cur_log2_98)) else caught-fail) in
                                    {9029}let v_2028: bool = not-caught-fail(h_521) in
                                    {9030}let x_627: bitstring = (if v_2028 then (l_552,h_521) else caught-fail) in
                                    {9031}let client_hts_48: bitstring = (if v_2027 then catch-fail((if v_2028 then hmac(@8_backend_h,handshake_secret_48,x_627) else fail-any)) else caught-fail) in
                                    {9032}let v_2029: bool = not-caught-fail(client_hts_48) in
                                    {9033}let l_553: label = (if v_2029 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {9034}let h_522: bitstring = (if v_2029 then catch-fail(hash(@8_backend_h,cur_log2_98)) else caught-fail) in
                                    {9035}let v_2030: bool = not-caught-fail(h_522) in
                                    {9036}let x_628: bitstring = (if v_2030 then (l_553,h_522) else caught-fail) in
                                    {9037}let server_hts_48: bitstring = (if v_2029 then catch-fail((if v_2030 then hmac(@8_backend_h,handshake_secret_48,x_628) else fail-any)) else caught-fail) in
                                    {9038}let v_2031: bool = not-caught-fail(server_hts_48) in
                                    {9039}let l_554: label = (if v_2031 then tls13_key else caught-fail) in
                                    {9040}let h_523: bitstring = (if v_2031 then zero else caught-fail) in
                                    {9041}let x_629: bitstring = (if v_2031 then (l_554,h_523) else caught-fail) in
                                    {9042}let client_wkh_48: bitstring = (if v_2031 then catch-fail(hmac(@8_backend_h,client_hts_48,x_629)) else caught-fail) in
                                    {9043}let v_2032: bool = not-caught-fail(client_wkh_48) in
                                    {9044}let l_555: label = (if v_2032 then tls13_key else caught-fail) in
                                    {9045}let h_524: bitstring = (if v_2032 then zero else caught-fail) in
                                    {9046}let x_630: bitstring = (if v_2032 then (l_555,h_524) else caught-fail) in
                                    {9047}let server_wkh_48: bitstring = (if v_2032 then catch-fail(hmac(@8_backend_h,server_hts_48,x_630)) else caught-fail) in
                                    {9048}let v_2033: bool = not-caught-fail(server_wkh_48) in
                                    {9049}let l_556: label = (if v_2033 then tls13_finished else caught-fail) in
                                    {9050}let h_525: bitstring = (if v_2033 then zero else caught-fail) in
                                    {9051}let x_631: bitstring = (if v_2033 then (l_556,h_525) else caught-fail) in
                                    {9052}let client_fk_48: bitstring = (if v_2033 then catch-fail(hmac(@8_backend_h,client_hts_48,x_631)) else caught-fail) in
                                    {9053}let v_2034: bool = not-caught-fail(client_fk_48) in
                                    {9054}let l_557: label = (if v_2034 then tls13_finished else caught-fail) in
                                    {9055}let h_526: bitstring = (if v_2034 then zero else caught-fail) in
                                    {9056}let x_632: bitstring = (if v_2034 then (l_557,h_526) else caught-fail) in
                                    {9057}let server_fk_48: bitstring = (if v_2034 then catch-fail(hmac(@8_backend_h,server_hts_48,x_632)) else caught-fail) in
                                    {9058}let v_2035: bool = not-caught-fail(server_fk_48) in
                                    {9059}let (master_secret_104: bitstring,chk_55: aead_key,shk_54: aead_key,cfin_55: mac_key,sfin_54: mac_key) = (if v_2026 then (if v_2027 then (if v_2029 then (if v_2031 then (if v_2032 then (if v_2033 then (if v_2034 then (if v_2035 then (master_secret_103,client_wkh_48,server_wkh_48,client_fk_48,server_fk_48) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {9060}event Client_chk(id_client_5,chk_55);
                                    {9061}event Client_shk(id_client_5,shk_54);
                                    {9062}event Client_cfin(id_client_5,cfin_55);
                                    {9063}event Client_sfin(id_client_5,sfin_54);
                                    {9064}in(io, enc_ee_msg_47: bitstring);
                                    {9065}let ee_msg_52: msg = aead_dec(@8_backend_a,shk_54,0,zero,enc_ee_msg_47) in
                                    {9066}let EE(ech_ee_47: echExt,extra_ee_47: extraExt) = ee_msg_52 in
                                    {9067}let cur_log2_99: bitstring = (cur_log2_98,ee_msg_52) in
                                    {9068}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_17,sr_55,@8_backend_h,@8_backend_a,c_dom_6,backend_dom_1,psk_221,safe_psk_50,@8_comp_psk,master_secret_104,chk_55,0,shk_54,1,cfin_55,sfin_54,cur_log2_99)))
                                )
                                else
                                    {9069}out(io, illegal_parameter)
                            )
                            else
                                {9070}out(io, illegal_parameter)
                    )
                    else
                        {9071}let cur_log_OU1_HRR_5: bitstring = ((zero,o_client_hello_7),server_hello_6) in
                        {9072}let ech_config(config_id_19: configId,ech_g_19: group,pkR_21: element,o_dom_15: domain,ech_h_19: hash_alg,ech_a_19: aead_alg) = ech_conf_2 in
                        {9073}new rand24_22[]: bytes24;
                        {9074}new rand8_22[]: bytes8;
                        {9075}let o_cr_19: bytes32 = B32(rand24_22,rand8_22) in
                        {9076}let send_key_share_17: bool = true in
                        {9077}new s_213[]: seed;
                        {9078}let gx_51: element = dh_pub(@8_tls_g,dh_k(s_213)) in
                        {9079}let v_2036: bitstring = (dh_k(s_213),gx_51) in
                        {9080}let v_2037: bool = success?(1-proj-2-tuple(v_2036)) in
                        {9081}let gx_52: element = (if v_2037 then 2-proj-2-tuple(v_2036) else caught-fail) in
                        {9082}let x_633: bitstring = (if v_2037 then 1-proj-2-tuple(v_2036) else caught-fail) in
                        {9083}let kex_21: kex_alg = (if v_2037 then (if send_key_share_17 then DHE_kex(@8_tls_g,gx_52) else DHE_group(@8_tls_g)) else caught-fail) in
                        {9084}let (o_kex_ext_13: keyShareExt,kex_data_5: bitstring) = (if v_2037 then (client_kex_ext(kex_21),(x_633,@8_tls_g)) else fail-any) in
                        {9085}if @8_use_grease then
                        (
                            {9086}let extra_103: extraExt = empty_extra_ext in
                            {9087}if @8_use_psk then
                            (
                                {9088}let (psk_222: preSharedKey,id_99: identityPsk,old_es_13: bitstring,is_safe_87: bool) = psk_data_46 in
                                (
                                    {9089}let offer_28: params = nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_13,SNI(o_dom_15),o_ech_ext_26,extra_103,trunc_client_psk_ext(id_99)) in
                                    {9090}let cur_log'_28: bitstring = (cur_log_OU1_HRR_5,CH(o_cr_19,offer_28)) in
                                    {9091}let s_214: bitstring = zero in
                                    {9092}let k_217: bitstring = catch-fail(psk2b(psk_222)) in
                                    {9093}let v_2038: bool = not-caught-fail(k_217) in
                                    {9094}let early_secret_150: bitstring = catch-fail((if v_2038 then hmac(@8_tls_h,s_214,k_217) else fail-any)) in
                                    {9095}let v_2039: bool = not-caught-fail(early_secret_150) in
                                    {9096}let l_558: label = (if v_2039 then tls13_ext_res_binder else caught-fail) in
                                    {9097}let m_198: bitstring = (if v_2039 then zero else caught-fail) in
                                    {9098}let h_527: bitstring = (if v_2039 then catch-fail(hash(@8_tls_h,m_198)) else caught-fail) in
                                    {9099}let v_2040: bool = not-caught-fail(h_527) in
                                    {9100}let x_634: bitstring = (if v_2040 then (l_558,h_527) else caught-fail) in
                                    {9101}let binder_key_100: bitstring = (if v_2039 then catch-fail((if v_2040 then hmac(@8_tls_h,early_secret_150,x_634) else fail-any)) else caught-fail) in
                                    {9102}let v_2041: bool = not-caught-fail(binder_key_100) in
                                    {9103}let v_2042: bitstring = catch-fail((if v_2039 then (if v_2041 then (early_secret_150,binder_key_100) else fail-any) else fail-any)) in
                                    {9104}let v_2043: bool = (not-caught-fail(v_2042) && success?(1-proj-2-tuple(v_2042))) in
                                    {9105}let kb_100: mac_key = (if v_2043 then 2-proj-2-tuple(v_2042) else caught-fail) in
                                    {9106}let es_148: bitstring = (if v_2043 then 1-proj-2-tuple(v_2042) else caught-fail) in
                                    {9107}let binders_27: bitstring = (if v_2043 then catch-fail(hmac(@8_tls_h,kb_100,cur_log'_28)) else caught-fail) in
                                    {9108}let v_2044: bool = not-caught-fail(binders_27) in
                                    {9109}let v_2045: bitstring = catch-fail((if v_2043 then (if v_2044 then (client_psk_ext(id_99,binders_27),(psk_222,id_99,es_148,is_safe_87)) else fail-any) else fail-any)) in
                                    {9110}let v_2046: bool = (not-caught-fail(v_2045) && success?(1-proj-2-tuple(v_2045))) in
                                    {9111}let psk_data_50: bitstring = (if v_2046 then 2-proj-2-tuple(v_2045) else caught-fail) in
                                    {9112}let psk_ext_101: preSharedKeyExt = (if v_2046 then 1-proj-2-tuple(v_2045) else caught-fail) in
                                    {9113}let o_offer_50: params = (if v_2046 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_13,SNI(o_dom_15),o_ech_ext_26,empty_extra_ext,psk_ext_101) else caught-fail) in
                                    {9114}let (client_hello'_23: msg,cr'_25: bytes32,kex_data'_20: bitstring,psk_data'_43: bitstring) = (if v_2046 then (CH(o_cr_19,o_offer_50),o_cr_19,kex_data_5,psk_data_50) else fail-any) in
                                    {9115}out(io, client_hello'_23);
                                    {9116}let cur_log_OU1_HRR_OU2_20: bitstring = (cur_log_OU1_HRR_5,client_hello'_23) in
                                    {9117}in(io, server_hello'_38: msg);
                                    {9118}let SH(sr'_20: bytes32,mode'_20: params) = server_hello'_38 in
                                    (
                                        {9119}if (sr'_20 = B32(HRR24,HRR8)) then
                                            {9120}out(io, unexpected_message)
                                        else
                                            {9121}let (x_635: bitstring,g_57: group) = kex_data'_20 in
                                            {9122}let (psk_offer_48: preSharedKey,id_offer_48: identityPsk,es_offer_48: bitstring,is_safe_offer_48: bool) = psk_data'_43 in
                                            {9123}event Client_PSKOffer(id_client_5,psk_offer_48,id_offer_48,is_safe_offer_48);
                                            {9124}event Client_Rand_client(id_client_5,cr'_25);
                                            {9125}event Client_DH_client(id_client_5,dh_pub(g_57,x_635));
                                            {9126}event Client_server_domain(id_client_5,o_dom_8);
                                            {9127}let SH(sr_56: bytes32,mode_54: params) = server_hello'_38 in
                                            {9128}event Client_Rand_server(id_client_5,sr_56);
                                            {9129}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_57,gy_49: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_102: preSharedKeyExt) = mode_54 in
                                            (
                                                {9130}let cur_log2_100: bitstring = (cur_log_OU1_HRR_OU2_20,server_hello'_38) in
                                                {9131}event Client_DH_server(id_client_5,gy_49);
                                                {9132}let v_2047: bool = (psk_ext_102 = empty_psk_ext) in
                                                {9133}let psk_223: preSharedKey = (if v_2047 then NoPsk else caught-fail) in
                                                {9134}let s_215: bitstring = (if v_2047 then zero else caught-fail) in
                                                {9135}let k_218: bitstring = (if v_2047 then catch-fail(psk2b(psk_223)) else caught-fail) in
                                                {9136}let v_2048: bool = not-caught-fail(k_218) in
                                                {9137}let early_secret_151: bitstring = (if v_2047 then catch-fail((if v_2048 then hmac(@8_tls_h,s_215,k_218) else fail-any)) else caught-fail) in
                                                {9138}let v_2049: bool = not-caught-fail(early_secret_151) in
                                                {9139}let l_559: label = (if v_2049 then tls13_ext_res_binder else caught-fail) in
                                                {9140}let m_199: bitstring = (if v_2049 then zero else caught-fail) in
                                                {9141}let h_528: bitstring = (if v_2049 then catch-fail(hash(@8_tls_h,m_199)) else caught-fail) in
                                                {9142}let v_2050: bool = not-caught-fail(h_528) in
                                                {9143}let x_636: bitstring = (if v_2050 then (l_559,h_528) else caught-fail) in
                                                {9144}let binder_key_101: bitstring = (if v_2049 then catch-fail((if v_2050 then hmac(@8_tls_h,early_secret_151,x_636) else fail-any)) else caught-fail) in
                                                {9145}let v_2051: bool = not-caught-fail(binder_key_101) in
                                                {9146}let v_2052: bitstring = (if v_2047 then catch-fail((if v_2049 then (if v_2051 then (early_secret_151,binder_key_101) else fail-any) else fail-any)) else caught-fail) in
                                                {9147}let v_2053: bool = (not-caught-fail(v_2052) && success?(1-proj-2-tuple(v_2052))) in
                                                {9148}let kb_101: mac_key = (if v_2053 then 2-proj-2-tuple(v_2052) else caught-fail) in
                                                {9149}let es_149: bitstring = (if v_2053 then 1-proj-2-tuple(v_2052) else caught-fail) in
                                                {9150}let v_2054: bitstring = (if not(v_2047) then catch-fail(psk_data'_43) else caught-fail) in
                                                {9151}let v_2055: bool = (not-caught-fail(v_2054) && success?(1-proj-4-tuple(v_2054))) in
                                                {9152}let is_safe_88: bool = (if v_2055 then 4-proj-4-tuple(v_2054) else caught-fail) in
                                                {9153}let es_150: bitstring = (if v_2055 then 3-proj-4-tuple(v_2054) else caught-fail) in
                                                {9154}let id_100: identityPsk = (if v_2055 then 2-proj-4-tuple(v_2054) else caught-fail) in
                                                {9155}let psk_224: preSharedKey = (if v_2055 then 1-proj-4-tuple(v_2054) else caught-fail) in
                                                {9156}let (psk_225: preSharedKey,early_secret_152: bitstring,valid_48: bool,safe_psk_51: bool) = (if v_2047 then (if v_2053 then (NoPsk,es_149,true,false) else fail-any) else (if v_2055 then (psk_224,es_150,((psk_224 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_102)),is_safe_88) else fail-any)) in
                                                {9157}event Client_PSKChoosen(id_client_5,psk_225,safe_psk_51);
                                                {9158}if valid_48 then
                                                (
                                                    {9159}let gxy_98: element = catch-fail(dh_decap_fun(g_57,gy_49,x_635)) in
                                                    {9160}let v_2056: bool = not-caught-fail(gxy_98) in
                                                    {9161}new s_216[]: seed;
                                                    {9162}let gxy_99: element = (if v_2056 then gxy_98 else dh_f(s_216)) in
                                                    {9163}event Client_DH_gxy(id_client_5,gxy_99);
                                                    {9164}let l_560: label = tls13_derived in
                                                    {9165}let m_200: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {9166}let v_2057: bool = not-caught-fail(m_200) in
                                                    {9167}let h_529: bitstring = (if v_2057 then catch-fail(hash(@8_tls_h,m_200)) else caught-fail) in
                                                    {9168}let v_2058: bool = not-caught-fail(h_529) in
                                                    {9169}let x_637: bitstring = (if v_2058 then (l_560,h_529) else caught-fail) in
                                                    {9170}let extra_104: bitstring = catch-fail((if v_2057 then (if v_2058 then hmac(@8_tls_h,early_secret_152,x_637) else fail-any) else fail-any)) in
                                                    {9171}let v_2059: bool = not-caught-fail(extra_104) in
                                                    {9172}let handshake_secret_49: bitstring = (if v_2059 then hmac(@8_tls_h,extra_104,gxy_99) else fail-any) in
                                                    {9173}let l_561: label = tls13_derived in
                                                    {9174}let m_201: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {9175}let v_2060: bool = not-caught-fail(m_201) in
                                                    {9176}let h_530: bitstring = (if v_2060 then catch-fail(hash(@8_tls_h,m_201)) else caught-fail) in
                                                    {9177}let v_2061: bool = not-caught-fail(h_530) in
                                                    {9178}let x_638: bitstring = (if v_2061 then (l_561,h_530) else caught-fail) in
                                                    {9179}let extra_105: bitstring = catch-fail((if v_2060 then (if v_2061 then hmac(@8_tls_h,handshake_secret_49,x_638) else fail-any) else fail-any)) in
                                                    {9180}let v_2062: bool = not-caught-fail(extra_105) in
                                                    {9181}let k_219: bitstring = (if v_2062 then zero else caught-fail) in
                                                    {9182}let master_secret_105: bitstring = (if v_2062 then catch-fail(hmac(@8_tls_h,handshake_secret_49,k_219)) else caught-fail) in
                                                    {9183}let v_2063: bool = not-caught-fail(master_secret_105) in
                                                    {9184}let l_562: label = (if v_2063 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {9185}let h_531: bitstring = (if v_2063 then catch-fail(hash(@8_tls_h,cur_log2_100)) else caught-fail) in
                                                    {9186}let v_2064: bool = not-caught-fail(h_531) in
                                                    {9187}let x_639: bitstring = (if v_2064 then (l_562,h_531) else caught-fail) in
                                                    {9188}let client_hts_49: bitstring = (if v_2063 then catch-fail((if v_2064 then hmac(@8_tls_h,handshake_secret_49,x_639) else fail-any)) else caught-fail) in
                                                    {9189}let v_2065: bool = not-caught-fail(client_hts_49) in
                                                    {9190}let l_563: label = (if v_2065 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {9191}let h_532: bitstring = (if v_2065 then catch-fail(hash(@8_tls_h,cur_log2_100)) else caught-fail) in
                                                    {9192}let v_2066: bool = not-caught-fail(h_532) in
                                                    {9193}let x_640: bitstring = (if v_2066 then (l_563,h_532) else caught-fail) in
                                                    {9194}let server_hts_49: bitstring = (if v_2065 then catch-fail((if v_2066 then hmac(@8_tls_h,handshake_secret_49,x_640) else fail-any)) else caught-fail) in
                                                    {9195}let v_2067: bool = not-caught-fail(server_hts_49) in
                                                    {9196}let l_564: label = (if v_2067 then tls13_key else caught-fail) in
                                                    {9197}let h_533: bitstring = (if v_2067 then zero else caught-fail) in
                                                    {9198}let x_641: bitstring = (if v_2067 then (l_564,h_533) else caught-fail) in
                                                    {9199}let client_wkh_49: bitstring = (if v_2067 then catch-fail(hmac(@8_tls_h,client_hts_49,x_641)) else caught-fail) in
                                                    {9200}let v_2068: bool = not-caught-fail(client_wkh_49) in
                                                    {9201}let l_565: label = (if v_2068 then tls13_key else caught-fail) in
                                                    {9202}let h_534: bitstring = (if v_2068 then zero else caught-fail) in
                                                    {9203}let x_642: bitstring = (if v_2068 then (l_565,h_534) else caught-fail) in
                                                    {9204}let server_wkh_49: bitstring = (if v_2068 then catch-fail(hmac(@8_tls_h,server_hts_49,x_642)) else caught-fail) in
                                                    {9205}let v_2069: bool = not-caught-fail(server_wkh_49) in
                                                    {9206}let l_566: label = (if v_2069 then tls13_finished else caught-fail) in
                                                    {9207}let h_535: bitstring = (if v_2069 then zero else caught-fail) in
                                                    {9208}let x_643: bitstring = (if v_2069 then (l_566,h_535) else caught-fail) in
                                                    {9209}let client_fk_49: bitstring = (if v_2069 then catch-fail(hmac(@8_tls_h,client_hts_49,x_643)) else caught-fail) in
                                                    {9210}let v_2070: bool = not-caught-fail(client_fk_49) in
                                                    {9211}let l_567: label = (if v_2070 then tls13_finished else caught-fail) in
                                                    {9212}let h_536: bitstring = (if v_2070 then zero else caught-fail) in
                                                    {9213}let x_644: bitstring = (if v_2070 then (l_567,h_536) else caught-fail) in
                                                    {9214}let server_fk_49: bitstring = (if v_2070 then catch-fail(hmac(@8_tls_h,server_hts_49,x_644)) else caught-fail) in
                                                    {9215}let v_2071: bool = not-caught-fail(server_fk_49) in
                                                    {9216}let (master_secret_106: bitstring,chk_56: aead_key,shk_55: aead_key,cfin_56: mac_key,sfin_55: mac_key) = (if v_2062 then (if v_2063 then (if v_2065 then (if v_2067 then (if v_2068 then (if v_2069 then (if v_2070 then (if v_2071 then (master_secret_105,client_wkh_49,server_wkh_49,client_fk_49,server_fk_49) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {9217}event Client_chk(id_client_5,chk_56);
                                                    {9218}event Client_shk(id_client_5,shk_55);
                                                    {9219}event Client_cfin(id_client_5,cfin_56);
                                                    {9220}event Client_sfin(id_client_5,sfin_55);
                                                    {9221}in(io, enc_ee_msg_48: bitstring);
                                                    {9222}let ee_msg_53: msg = aead_dec(@8_tls_a,shk_55,0,zero,enc_ee_msg_48) in
                                                    {9223}let EE(ech_ee_48: echExt,extra_ee_48: extraExt) = ee_msg_53 in
                                                    {9224}let cur_log2_101: bitstring = (cur_log2_100,ee_msg_53) in
                                                    {9225}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_25,sr_56,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_225,safe_psk_51,@8_comp_psk,master_secret_106,chk_56,0,shk_55,1,cfin_56,sfin_55,cur_log2_101)))
                                                )
                                                else
                                                    {9226}out(io, illegal_parameter)
                                            )
                                            else
                                                {9227}out(io, illegal_parameter)
                                    )
                                    else
                                        {9228}out(io, unexpected_message)
                                )
                                else
                                    {9378}get pre_shared_keys(c_dom'_15: domain,=o_dom_15,=@8_tls_h,id_101: identityPsk,psk_226: preSharedKey,idP_17: idProc,is_safe_89: bool) in
                                    {9229}event Selected_one_time_used_psk(id_client_5,psk_226,is_safe_89);
                                    {9230}event Selected_psk(c_dom_6,c_dom'_15,idP_17,is_safe_89);
                                    {9231}event Selected_psk_no_missmatch(id_client_5,o_dom_15,@8_tls_h,psk_226,id_101);
                                    {9232}event Selected_psk_with_ID(c_dom_6,c_dom'_15,id_101,idP_17,is_safe_89);
                                    {9233}let v_2072: bitstring = (id_101,psk_226,is_safe_89) in
                                    {9234}let v_2073: bool = success?(1-proj-3-tuple(v_2072)) in
                                    {9235}let is_safe_90: bool = (if v_2073 then 3-proj-3-tuple(v_2072) else caught-fail) in
                                    {9236}let psk_227: preSharedKey = (if v_2073 then 2-proj-3-tuple(v_2072) else caught-fail) in
                                    {9237}let id_102: identityPsk = (if v_2073 then 1-proj-3-tuple(v_2072) else caught-fail) in
                                    {9238}let offer_29: params = (if v_2073 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_13,SNI(o_dom_15),o_ech_ext_26,extra_103,trunc_client_psk_ext(id_102)) else caught-fail) in
                                    {9239}let cur_log'_29: bitstring = (if v_2073 then (cur_log_OU1_HRR_5,CH(o_cr_19,offer_29)) else caught-fail) in
                                    {9240}let s_217: bitstring = (if v_2073 then zero else caught-fail) in
                                    {9241}let k_220: bitstring = (if v_2073 then catch-fail(psk2b(psk_227)) else caught-fail) in
                                    {9242}let v_2074: bool = not-caught-fail(k_220) in
                                    {9243}let early_secret_153: bitstring = (if v_2073 then catch-fail((if v_2074 then hmac(@8_tls_h,s_217,k_220) else fail-any)) else caught-fail) in
                                    {9244}let v_2075: bool = not-caught-fail(early_secret_153) in
                                    {9245}let l_568: label = (if v_2075 then tls13_ext_res_binder else caught-fail) in
                                    {9246}let m_202: bitstring = (if v_2075 then zero else caught-fail) in
                                    {9247}let h_537: bitstring = (if v_2075 then catch-fail(hash(@8_tls_h,m_202)) else caught-fail) in
                                    {9248}let v_2076: bool = not-caught-fail(h_537) in
                                    {9249}let x_645: bitstring = (if v_2076 then (l_568,h_537) else caught-fail) in
                                    {9250}let binder_key_102: bitstring = (if v_2075 then catch-fail((if v_2076 then hmac(@8_tls_h,early_secret_153,x_645) else fail-any)) else caught-fail) in
                                    {9251}let v_2077: bool = not-caught-fail(binder_key_102) in
                                    {9252}let v_2078: bitstring = (if v_2073 then catch-fail((if v_2075 then (if v_2077 then (early_secret_153,binder_key_102) else fail-any) else fail-any)) else caught-fail) in
                                    {9253}let v_2079: bool = (not-caught-fail(v_2078) && success?(1-proj-2-tuple(v_2078))) in
                                    {9254}let kb_102: mac_key = (if v_2079 then 2-proj-2-tuple(v_2078) else caught-fail) in
                                    {9255}let es_151: bitstring = (if v_2079 then 1-proj-2-tuple(v_2078) else caught-fail) in
                                    {9256}let binders_28: bitstring = (if v_2079 then catch-fail(hmac(@8_tls_h,kb_102,cur_log'_29)) else caught-fail) in
                                    {9257}let v_2080: bool = not-caught-fail(binders_28) in
                                    {9258}let v_2081: bitstring = catch-fail((if v_2073 then (if v_2079 then (if v_2080 then (client_psk_ext(id_102,binders_28),(psk_227,id_102,es_151,is_safe_90)) else fail-any) else fail-any) else fail-any)) in
                                    {9259}let v_2082: bool = (not-caught-fail(v_2081) && success?(1-proj-2-tuple(v_2081))) in
                                    {9260}let psk_data_51: bitstring = (if v_2082 then 2-proj-2-tuple(v_2081) else caught-fail) in
                                    {9261}let psk_ext_103: preSharedKeyExt = (if v_2082 then 1-proj-2-tuple(v_2081) else caught-fail) in
                                    {9262}let o_offer_51: params = (if v_2082 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_13,SNI(o_dom_15),o_ech_ext_26,empty_extra_ext,psk_ext_103) else caught-fail) in
                                    {9263}let (client_hello'_24: msg,cr'_26: bytes32,kex_data'_21: bitstring,psk_data'_44: bitstring) = (if v_2082 then (CH(o_cr_19,o_offer_51),o_cr_19,kex_data_5,psk_data_51) else fail-any) in
                                    {9264}out(io, client_hello'_24);
                                    {9265}let cur_log_OU1_HRR_OU2_21: bitstring = (cur_log_OU1_HRR_5,client_hello'_24) in
                                    {9266}in(io, server_hello'_39: msg);
                                    {9267}let SH(sr'_21: bytes32,mode'_21: params) = server_hello'_39 in
                                    (
                                        {9268}if (sr'_21 = B32(HRR24,HRR8)) then
                                            {9269}out(io, unexpected_message)
                                        else
                                            {9270}let (x_646: bitstring,g_58: group) = kex_data'_21 in
                                            {9271}let (psk_offer_49: preSharedKey,id_offer_49: identityPsk,es_offer_49: bitstring,is_safe_offer_49: bool) = psk_data'_44 in
                                            {9272}event Client_PSKOffer(id_client_5,psk_offer_49,id_offer_49,is_safe_offer_49);
                                            {9273}event Client_Rand_client(id_client_5,cr'_26);
                                            {9274}event Client_DH_client(id_client_5,dh_pub(g_58,x_646));
                                            {9275}event Client_server_domain(id_client_5,o_dom_8);
                                            {9276}let SH(sr_57: bytes32,mode_55: params) = server_hello'_39 in
                                            {9277}event Client_Rand_server(id_client_5,sr_57);
                                            {9278}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_58,gy_50: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_104: preSharedKeyExt) = mode_55 in
                                            (
                                                {9279}let cur_log2_102: bitstring = (cur_log_OU1_HRR_OU2_21,server_hello'_39) in
                                                {9280}event Client_DH_server(id_client_5,gy_50);
                                                {9281}let v_2083: bool = (psk_ext_104 = empty_psk_ext) in
                                                {9282}let psk_228: preSharedKey = (if v_2083 then NoPsk else caught-fail) in
                                                {9283}let s_218: bitstring = (if v_2083 then zero else caught-fail) in
                                                {9284}let k_221: bitstring = (if v_2083 then catch-fail(psk2b(psk_228)) else caught-fail) in
                                                {9285}let v_2084: bool = not-caught-fail(k_221) in
                                                {9286}let early_secret_154: bitstring = (if v_2083 then catch-fail((if v_2084 then hmac(@8_tls_h,s_218,k_221) else fail-any)) else caught-fail) in
                                                {9287}let v_2085: bool = not-caught-fail(early_secret_154) in
                                                {9288}let l_569: label = (if v_2085 then tls13_ext_res_binder else caught-fail) in
                                                {9289}let m_203: bitstring = (if v_2085 then zero else caught-fail) in
                                                {9290}let h_538: bitstring = (if v_2085 then catch-fail(hash(@8_tls_h,m_203)) else caught-fail) in
                                                {9291}let v_2086: bool = not-caught-fail(h_538) in
                                                {9292}let x_647: bitstring = (if v_2086 then (l_569,h_538) else caught-fail) in
                                                {9293}let binder_key_103: bitstring = (if v_2085 then catch-fail((if v_2086 then hmac(@8_tls_h,early_secret_154,x_647) else fail-any)) else caught-fail) in
                                                {9294}let v_2087: bool = not-caught-fail(binder_key_103) in
                                                {9295}let v_2088: bitstring = (if v_2083 then catch-fail((if v_2085 then (if v_2087 then (early_secret_154,binder_key_103) else fail-any) else fail-any)) else caught-fail) in
                                                {9296}let v_2089: bool = (not-caught-fail(v_2088) && success?(1-proj-2-tuple(v_2088))) in
                                                {9297}let kb_103: mac_key = (if v_2089 then 2-proj-2-tuple(v_2088) else caught-fail) in
                                                {9298}let es_152: bitstring = (if v_2089 then 1-proj-2-tuple(v_2088) else caught-fail) in
                                                {9299}let v_2090: bitstring = (if not(v_2083) then catch-fail(psk_data'_44) else caught-fail) in
                                                {9300}let v_2091: bool = (not-caught-fail(v_2090) && success?(1-proj-4-tuple(v_2090))) in
                                                {9301}let is_safe_91: bool = (if v_2091 then 4-proj-4-tuple(v_2090) else caught-fail) in
                                                {9302}let es_153: bitstring = (if v_2091 then 3-proj-4-tuple(v_2090) else caught-fail) in
                                                {9303}let id_103: identityPsk = (if v_2091 then 2-proj-4-tuple(v_2090) else caught-fail) in
                                                {9304}let psk_229: preSharedKey = (if v_2091 then 1-proj-4-tuple(v_2090) else caught-fail) in
                                                {9305}let (psk_230: preSharedKey,early_secret_155: bitstring,valid_49: bool,safe_psk_52: bool) = (if v_2083 then (if v_2089 then (NoPsk,es_152,true,false) else fail-any) else (if v_2091 then (psk_229,es_153,((psk_229 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_104)),is_safe_91) else fail-any)) in
                                                {9306}event Client_PSKChoosen(id_client_5,psk_230,safe_psk_52);
                                                {9307}if valid_49 then
                                                (
                                                    {9308}let gxy_100: element = catch-fail(dh_decap_fun(g_58,gy_50,x_646)) in
                                                    {9309}let v_2092: bool = not-caught-fail(gxy_100) in
                                                    {9310}new s_219[]: seed;
                                                    {9311}let gxy_101: element = (if v_2092 then gxy_100 else dh_f(s_219)) in
                                                    {9312}event Client_DH_gxy(id_client_5,gxy_101);
                                                    {9313}let l_570: label = tls13_derived in
                                                    {9314}let m_204: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {9315}let v_2093: bool = not-caught-fail(m_204) in
                                                    {9316}let h_539: bitstring = (if v_2093 then catch-fail(hash(@8_tls_h,m_204)) else caught-fail) in
                                                    {9317}let v_2094: bool = not-caught-fail(h_539) in
                                                    {9318}let x_648: bitstring = (if v_2094 then (l_570,h_539) else caught-fail) in
                                                    {9319}let extra_106: bitstring = catch-fail((if v_2093 then (if v_2094 then hmac(@8_tls_h,early_secret_155,x_648) else fail-any) else fail-any)) in
                                                    {9320}let v_2095: bool = not-caught-fail(extra_106) in
                                                    {9321}let handshake_secret_50: bitstring = (if v_2095 then hmac(@8_tls_h,extra_106,gxy_101) else fail-any) in
                                                    {9322}let l_571: label = tls13_derived in
                                                    {9323}let m_205: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {9324}let v_2096: bool = not-caught-fail(m_205) in
                                                    {9325}let h_540: bitstring = (if v_2096 then catch-fail(hash(@8_tls_h,m_205)) else caught-fail) in
                                                    {9326}let v_2097: bool = not-caught-fail(h_540) in
                                                    {9327}let x_649: bitstring = (if v_2097 then (l_571,h_540) else caught-fail) in
                                                    {9328}let extra_107: bitstring = catch-fail((if v_2096 then (if v_2097 then hmac(@8_tls_h,handshake_secret_50,x_649) else fail-any) else fail-any)) in
                                                    {9329}let v_2098: bool = not-caught-fail(extra_107) in
                                                    {9330}let k_222: bitstring = (if v_2098 then zero else caught-fail) in
                                                    {9331}let master_secret_107: bitstring = (if v_2098 then catch-fail(hmac(@8_tls_h,handshake_secret_50,k_222)) else caught-fail) in
                                                    {9332}let v_2099: bool = not-caught-fail(master_secret_107) in
                                                    {9333}let l_572: label = (if v_2099 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {9334}let h_541: bitstring = (if v_2099 then catch-fail(hash(@8_tls_h,cur_log2_102)) else caught-fail) in
                                                    {9335}let v_2100: bool = not-caught-fail(h_541) in
                                                    {9336}let x_650: bitstring = (if v_2100 then (l_572,h_541) else caught-fail) in
                                                    {9337}let client_hts_50: bitstring = (if v_2099 then catch-fail((if v_2100 then hmac(@8_tls_h,handshake_secret_50,x_650) else fail-any)) else caught-fail) in
                                                    {9338}let v_2101: bool = not-caught-fail(client_hts_50) in
                                                    {9339}let l_573: label = (if v_2101 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {9340}let h_542: bitstring = (if v_2101 then catch-fail(hash(@8_tls_h,cur_log2_102)) else caught-fail) in
                                                    {9341}let v_2102: bool = not-caught-fail(h_542) in
                                                    {9342}let x_651: bitstring = (if v_2102 then (l_573,h_542) else caught-fail) in
                                                    {9343}let server_hts_50: bitstring = (if v_2101 then catch-fail((if v_2102 then hmac(@8_tls_h,handshake_secret_50,x_651) else fail-any)) else caught-fail) in
                                                    {9344}let v_2103: bool = not-caught-fail(server_hts_50) in
                                                    {9345}let l_574: label = (if v_2103 then tls13_key else caught-fail) in
                                                    {9346}let h_543: bitstring = (if v_2103 then zero else caught-fail) in
                                                    {9347}let x_652: bitstring = (if v_2103 then (l_574,h_543) else caught-fail) in
                                                    {9348}let client_wkh_50: bitstring = (if v_2103 then catch-fail(hmac(@8_tls_h,client_hts_50,x_652)) else caught-fail) in
                                                    {9349}let v_2104: bool = not-caught-fail(client_wkh_50) in
                                                    {9350}let l_575: label = (if v_2104 then tls13_key else caught-fail) in
                                                    {9351}let h_544: bitstring = (if v_2104 then zero else caught-fail) in
                                                    {9352}let x_653: bitstring = (if v_2104 then (l_575,h_544) else caught-fail) in
                                                    {9353}let server_wkh_50: bitstring = (if v_2104 then catch-fail(hmac(@8_tls_h,server_hts_50,x_653)) else caught-fail) in
                                                    {9354}let v_2105: bool = not-caught-fail(server_wkh_50) in
                                                    {9355}let l_576: label = (if v_2105 then tls13_finished else caught-fail) in
                                                    {9356}let h_545: bitstring = (if v_2105 then zero else caught-fail) in
                                                    {9357}let x_654: bitstring = (if v_2105 then (l_576,h_545) else caught-fail) in
                                                    {9358}let client_fk_50: bitstring = (if v_2105 then catch-fail(hmac(@8_tls_h,client_hts_50,x_654)) else caught-fail) in
                                                    {9359}let v_2106: bool = not-caught-fail(client_fk_50) in
                                                    {9360}let l_577: label = (if v_2106 then tls13_finished else caught-fail) in
                                                    {9361}let h_546: bitstring = (if v_2106 then zero else caught-fail) in
                                                    {9362}let x_655: bitstring = (if v_2106 then (l_577,h_546) else caught-fail) in
                                                    {9363}let server_fk_50: bitstring = (if v_2106 then catch-fail(hmac(@8_tls_h,server_hts_50,x_655)) else caught-fail) in
                                                    {9364}let v_2107: bool = not-caught-fail(server_fk_50) in
                                                    {9365}let (master_secret_108: bitstring,chk_57: aead_key,shk_56: aead_key,cfin_57: mac_key,sfin_56: mac_key) = (if v_2098 then (if v_2099 then (if v_2101 then (if v_2103 then (if v_2104 then (if v_2105 then (if v_2106 then (if v_2107 then (master_secret_107,client_wkh_50,server_wkh_50,client_fk_50,server_fk_50) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {9366}event Client_chk(id_client_5,chk_57);
                                                    {9367}event Client_shk(id_client_5,shk_56);
                                                    {9368}event Client_cfin(id_client_5,cfin_57);
                                                    {9369}event Client_sfin(id_client_5,sfin_56);
                                                    {9370}in(io, enc_ee_msg_49: bitstring);
                                                    {9371}let ee_msg_54: msg = aead_dec(@8_tls_a,shk_56,0,zero,enc_ee_msg_49) in
                                                    {9372}let EE(ech_ee_49: echExt,extra_ee_49: extraExt) = ee_msg_54 in
                                                    {9373}let cur_log2_103: bitstring = (cur_log2_102,ee_msg_54) in
                                                    {9374}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_26,sr_57,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_230,safe_psk_52,@8_comp_psk,master_secret_108,chk_57,0,shk_56,1,cfin_57,sfin_56,cur_log2_103)))
                                                )
                                                else
                                                    {9375}out(io, illegal_parameter)
                                            )
                                            else
                                                {9376}out(io, illegal_parameter)
                                    )
                                    else
                                        {9377}out(io, unexpected_message)
                            )
                            else
                                {9379}let psk_231: preSharedKey = NoPsk in
                                {9380}let s_220: bitstring = zero in
                                {9381}let k_223: bitstring = catch-fail(psk2b(psk_231)) in
                                {9382}let v_2108: bool = not-caught-fail(k_223) in
                                {9383}let early_secret_156: bitstring = catch-fail((if v_2108 then hmac(@8_tls_h,s_220,k_223) else fail-any)) in
                                {9384}let v_2109: bool = not-caught-fail(early_secret_156) in
                                {9385}let l_578: label = (if v_2109 then tls13_ext_res_binder else caught-fail) in
                                {9386}let m_206: bitstring = (if v_2109 then zero else caught-fail) in
                                {9387}let h_547: bitstring = (if v_2109 then catch-fail(hash(@8_tls_h,m_206)) else caught-fail) in
                                {9388}let v_2110: bool = not-caught-fail(h_547) in
                                {9389}let x_656: bitstring = (if v_2110 then (l_578,h_547) else caught-fail) in
                                {9390}let binder_key_104: bitstring = (if v_2109 then catch-fail((if v_2110 then hmac(@8_tls_h,early_secret_156,x_656) else fail-any)) else caught-fail) in
                                {9391}let v_2111: bool = not-caught-fail(binder_key_104) in
                                {9392}let v_2112: bitstring = catch-fail((if v_2109 then (if v_2111 then (early_secret_156,binder_key_104) else fail-any) else fail-any)) in
                                {9393}let v_2113: bool = (not-caught-fail(v_2112) && success?(1-proj-2-tuple(v_2112))) in
                                {9394}let kb_104: mac_key = (if v_2113 then 2-proj-2-tuple(v_2112) else caught-fail) in
                                {9395}let es_154: bitstring = (if v_2113 then 1-proj-2-tuple(v_2112) else caught-fail) in
                                {9396}let v_2114: bitstring = catch-fail((if v_2113 then (empty_psk_ext,(NoPsk,zero,es_154,false)) else fail-any)) in
                                {9397}let v_2115: bool = (not-caught-fail(v_2114) && success?(1-proj-2-tuple(v_2114))) in
                                {9398}let psk_data_52: bitstring = (if v_2115 then 2-proj-2-tuple(v_2114) else caught-fail) in
                                {9399}let psk_ext_105: preSharedKeyExt = (if v_2115 then 1-proj-2-tuple(v_2114) else caught-fail) in
                                {9400}let o_offer_52: params = (if v_2115 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_13,SNI(o_dom_15),o_ech_ext_26,empty_extra_ext,psk_ext_105) else caught-fail) in
                                {9401}let (client_hello'_25: msg,cr'_27: bytes32,kex_data'_22: bitstring,psk_data'_45: bitstring) = (if v_2115 then (CH(o_cr_19,o_offer_52),o_cr_19,kex_data_5,psk_data_52) else fail-any) in
                                {9402}out(io, client_hello'_25);
                                {9403}let cur_log_OU1_HRR_OU2_22: bitstring = (cur_log_OU1_HRR_5,client_hello'_25) in
                                {9404}in(io, server_hello'_40: msg);
                                {9405}let SH(sr'_22: bytes32,mode'_22: params) = server_hello'_40 in
                                (
                                    {9406}if (sr'_22 = B32(HRR24,HRR8)) then
                                        {9407}out(io, unexpected_message)
                                    else
                                        {9408}let (x_657: bitstring,g_59: group) = kex_data'_22 in
                                        {9409}let (psk_offer_50: preSharedKey,id_offer_50: identityPsk,es_offer_50: bitstring,is_safe_offer_50: bool) = psk_data'_45 in
                                        {9410}event Client_PSKOffer(id_client_5,psk_offer_50,id_offer_50,is_safe_offer_50);
                                        {9411}event Client_Rand_client(id_client_5,cr'_27);
                                        {9412}event Client_DH_client(id_client_5,dh_pub(g_59,x_657));
                                        {9413}event Client_server_domain(id_client_5,o_dom_8);
                                        {9414}let SH(sr_58: bytes32,mode_56: params) = server_hello'_40 in
                                        {9415}event Client_Rand_server(id_client_5,sr_58);
                                        {9416}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_59,gy_51: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_106: preSharedKeyExt) = mode_56 in
                                        (
                                            {9417}let cur_log2_104: bitstring = (cur_log_OU1_HRR_OU2_22,server_hello'_40) in
                                            {9418}event Client_DH_server(id_client_5,gy_51);
                                            {9419}let v_2116: bool = (psk_ext_106 = empty_psk_ext) in
                                            {9420}let psk_232: preSharedKey = (if v_2116 then NoPsk else caught-fail) in
                                            {9421}let s_221: bitstring = (if v_2116 then zero else caught-fail) in
                                            {9422}let k_224: bitstring = (if v_2116 then catch-fail(psk2b(psk_232)) else caught-fail) in
                                            {9423}let v_2117: bool = not-caught-fail(k_224) in
                                            {9424}let early_secret_157: bitstring = (if v_2116 then catch-fail((if v_2117 then hmac(@8_tls_h,s_221,k_224) else fail-any)) else caught-fail) in
                                            {9425}let v_2118: bool = not-caught-fail(early_secret_157) in
                                            {9426}let l_579: label = (if v_2118 then tls13_ext_res_binder else caught-fail) in
                                            {9427}let m_207: bitstring = (if v_2118 then zero else caught-fail) in
                                            {9428}let h_548: bitstring = (if v_2118 then catch-fail(hash(@8_tls_h,m_207)) else caught-fail) in
                                            {9429}let v_2119: bool = not-caught-fail(h_548) in
                                            {9430}let x_658: bitstring = (if v_2119 then (l_579,h_548) else caught-fail) in
                                            {9431}let binder_key_105: bitstring = (if v_2118 then catch-fail((if v_2119 then hmac(@8_tls_h,early_secret_157,x_658) else fail-any)) else caught-fail) in
                                            {9432}let v_2120: bool = not-caught-fail(binder_key_105) in
                                            {9433}let v_2121: bitstring = (if v_2116 then catch-fail((if v_2118 then (if v_2120 then (early_secret_157,binder_key_105) else fail-any) else fail-any)) else caught-fail) in
                                            {9434}let v_2122: bool = (not-caught-fail(v_2121) && success?(1-proj-2-tuple(v_2121))) in
                                            {9435}let kb_105: mac_key = (if v_2122 then 2-proj-2-tuple(v_2121) else caught-fail) in
                                            {9436}let es_155: bitstring = (if v_2122 then 1-proj-2-tuple(v_2121) else caught-fail) in
                                            {9437}let v_2123: bitstring = (if not(v_2116) then catch-fail(psk_data'_45) else caught-fail) in
                                            {9438}let v_2124: bool = (not-caught-fail(v_2123) && success?(1-proj-4-tuple(v_2123))) in
                                            {9439}let is_safe_92: bool = (if v_2124 then 4-proj-4-tuple(v_2123) else caught-fail) in
                                            {9440}let es_156: bitstring = (if v_2124 then 3-proj-4-tuple(v_2123) else caught-fail) in
                                            {9441}let id_104: identityPsk = (if v_2124 then 2-proj-4-tuple(v_2123) else caught-fail) in
                                            {9442}let psk_233: preSharedKey = (if v_2124 then 1-proj-4-tuple(v_2123) else caught-fail) in
                                            {9443}let (psk_234: preSharedKey,early_secret_158: bitstring,valid_50: bool,safe_psk_53: bool) = (if v_2116 then (if v_2122 then (NoPsk,es_155,true,false) else fail-any) else (if v_2124 then (psk_233,es_156,((psk_233 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_106)),is_safe_92) else fail-any)) in
                                            {9444}event Client_PSKChoosen(id_client_5,psk_234,safe_psk_53);
                                            {9445}if valid_50 then
                                            (
                                                {9446}let gxy_102: element = catch-fail(dh_decap_fun(g_59,gy_51,x_657)) in
                                                {9447}let v_2125: bool = not-caught-fail(gxy_102) in
                                                {9448}new s_222[]: seed;
                                                {9449}let gxy_103: element = (if v_2125 then gxy_102 else dh_f(s_222)) in
                                                {9450}event Client_DH_gxy(id_client_5,gxy_103);
                                                {9451}let l_580: label = tls13_derived in
                                                {9452}let m_208: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                {9453}let v_2126: bool = not-caught-fail(m_208) in
                                                {9454}let h_549: bitstring = (if v_2126 then catch-fail(hash(@8_tls_h,m_208)) else caught-fail) in
                                                {9455}let v_2127: bool = not-caught-fail(h_549) in
                                                {9456}let x_659: bitstring = (if v_2127 then (l_580,h_549) else caught-fail) in
                                                {9457}let extra_108: bitstring = catch-fail((if v_2126 then (if v_2127 then hmac(@8_tls_h,early_secret_158,x_659) else fail-any) else fail-any)) in
                                                {9458}let v_2128: bool = not-caught-fail(extra_108) in
                                                {9459}let handshake_secret_51: bitstring = (if v_2128 then hmac(@8_tls_h,extra_108,gxy_103) else fail-any) in
                                                {9460}let l_581: label = tls13_derived in
                                                {9461}let m_209: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                {9462}let v_2129: bool = not-caught-fail(m_209) in
                                                {9463}let h_550: bitstring = (if v_2129 then catch-fail(hash(@8_tls_h,m_209)) else caught-fail) in
                                                {9464}let v_2130: bool = not-caught-fail(h_550) in
                                                {9465}let x_660: bitstring = (if v_2130 then (l_581,h_550) else caught-fail) in
                                                {9466}let extra_109: bitstring = catch-fail((if v_2129 then (if v_2130 then hmac(@8_tls_h,handshake_secret_51,x_660) else fail-any) else fail-any)) in
                                                {9467}let v_2131: bool = not-caught-fail(extra_109) in
                                                {9468}let k_225: bitstring = (if v_2131 then zero else caught-fail) in
                                                {9469}let master_secret_109: bitstring = (if v_2131 then catch-fail(hmac(@8_tls_h,handshake_secret_51,k_225)) else caught-fail) in
                                                {9470}let v_2132: bool = not-caught-fail(master_secret_109) in
                                                {9471}let l_582: label = (if v_2132 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {9472}let h_551: bitstring = (if v_2132 then catch-fail(hash(@8_tls_h,cur_log2_104)) else caught-fail) in
                                                {9473}let v_2133: bool = not-caught-fail(h_551) in
                                                {9474}let x_661: bitstring = (if v_2133 then (l_582,h_551) else caught-fail) in
                                                {9475}let client_hts_51: bitstring = (if v_2132 then catch-fail((if v_2133 then hmac(@8_tls_h,handshake_secret_51,x_661) else fail-any)) else caught-fail) in
                                                {9476}let v_2134: bool = not-caught-fail(client_hts_51) in
                                                {9477}let l_583: label = (if v_2134 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {9478}let h_552: bitstring = (if v_2134 then catch-fail(hash(@8_tls_h,cur_log2_104)) else caught-fail) in
                                                {9479}let v_2135: bool = not-caught-fail(h_552) in
                                                {9480}let x_662: bitstring = (if v_2135 then (l_583,h_552) else caught-fail) in
                                                {9481}let server_hts_51: bitstring = (if v_2134 then catch-fail((if v_2135 then hmac(@8_tls_h,handshake_secret_51,x_662) else fail-any)) else caught-fail) in
                                                {9482}let v_2136: bool = not-caught-fail(server_hts_51) in
                                                {9483}let l_584: label = (if v_2136 then tls13_key else caught-fail) in
                                                {9484}let h_553: bitstring = (if v_2136 then zero else caught-fail) in
                                                {9485}let x_663: bitstring = (if v_2136 then (l_584,h_553) else caught-fail) in
                                                {9486}let client_wkh_51: bitstring = (if v_2136 then catch-fail(hmac(@8_tls_h,client_hts_51,x_663)) else caught-fail) in
                                                {9487}let v_2137: bool = not-caught-fail(client_wkh_51) in
                                                {9488}let l_585: label = (if v_2137 then tls13_key else caught-fail) in
                                                {9489}let h_554: bitstring = (if v_2137 then zero else caught-fail) in
                                                {9490}let x_664: bitstring = (if v_2137 then (l_585,h_554) else caught-fail) in
                                                {9491}let server_wkh_51: bitstring = (if v_2137 then catch-fail(hmac(@8_tls_h,server_hts_51,x_664)) else caught-fail) in
                                                {9492}let v_2138: bool = not-caught-fail(server_wkh_51) in
                                                {9493}let l_586: label = (if v_2138 then tls13_finished else caught-fail) in
                                                {9494}let h_555: bitstring = (if v_2138 then zero else caught-fail) in
                                                {9495}let x_665: bitstring = (if v_2138 then (l_586,h_555) else caught-fail) in
                                                {9496}let client_fk_51: bitstring = (if v_2138 then catch-fail(hmac(@8_tls_h,client_hts_51,x_665)) else caught-fail) in
                                                {9497}let v_2139: bool = not-caught-fail(client_fk_51) in
                                                {9498}let l_587: label = (if v_2139 then tls13_finished else caught-fail) in
                                                {9499}let h_556: bitstring = (if v_2139 then zero else caught-fail) in
                                                {9500}let x_666: bitstring = (if v_2139 then (l_587,h_556) else caught-fail) in
                                                {9501}let server_fk_51: bitstring = (if v_2139 then catch-fail(hmac(@8_tls_h,server_hts_51,x_666)) else caught-fail) in
                                                {9502}let v_2140: bool = not-caught-fail(server_fk_51) in
                                                {9503}let (master_secret_110: bitstring,chk_58: aead_key,shk_57: aead_key,cfin_58: mac_key,sfin_57: mac_key) = (if v_2131 then (if v_2132 then (if v_2134 then (if v_2136 then (if v_2137 then (if v_2138 then (if v_2139 then (if v_2140 then (master_secret_109,client_wkh_51,server_wkh_51,client_fk_51,server_fk_51) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {9504}event Client_chk(id_client_5,chk_58);
                                                {9505}event Client_shk(id_client_5,shk_57);
                                                {9506}event Client_cfin(id_client_5,cfin_58);
                                                {9507}event Client_sfin(id_client_5,sfin_57);
                                                {9508}in(io, enc_ee_msg_50: bitstring);
                                                {9509}let ee_msg_55: msg = aead_dec(@8_tls_a,shk_57,0,zero,enc_ee_msg_50) in
                                                {9510}let EE(ech_ee_50: echExt,extra_ee_50: extraExt) = ee_msg_55 in
                                                {9511}let cur_log2_105: bitstring = (cur_log2_104,ee_msg_55) in
                                                {9512}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_27,sr_58,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_234,safe_psk_53,@8_comp_psk,master_secret_110,chk_58,0,shk_57,1,cfin_58,sfin_57,cur_log2_105)))
                                            )
                                            else
                                                {9513}out(io, illegal_parameter)
                                        )
                                        else
                                            {9514}out(io, illegal_parameter)
                                )
                                else
                                    {9515}out(io, unexpected_message)
                        )
                        else
                            {9516}let psk_235: preSharedKey = NoPsk in
                            {9517}let s_223: bitstring = zero in
                            {9518}let k_226: bitstring = catch-fail(psk2b(psk_235)) in
                            {9519}let v_2141: bool = not-caught-fail(k_226) in
                            {9520}let early_secret_159: bitstring = catch-fail((if v_2141 then hmac(@8_tls_h,s_223,k_226) else fail-any)) in
                            {9521}let v_2142: bool = not-caught-fail(early_secret_159) in
                            {9522}let l_588: label = (if v_2142 then tls13_ext_res_binder else caught-fail) in
                            {9523}let m_210: bitstring = (if v_2142 then zero else caught-fail) in
                            {9524}let h_557: bitstring = (if v_2142 then catch-fail(hash(@8_tls_h,m_210)) else caught-fail) in
                            {9525}let v_2143: bool = not-caught-fail(h_557) in
                            {9526}let x_667: bitstring = (if v_2143 then (l_588,h_557) else caught-fail) in
                            {9527}let binder_key_106: bitstring = (if v_2142 then catch-fail((if v_2143 then hmac(@8_tls_h,early_secret_159,x_667) else fail-any)) else caught-fail) in
                            {9528}let v_2144: bool = not-caught-fail(binder_key_106) in
                            {9529}let v_2145: bitstring = catch-fail((if v_2142 then (if v_2144 then (early_secret_159,binder_key_106) else fail-any) else fail-any)) in
                            {9530}let v_2146: bool = (not-caught-fail(v_2145) && success?(1-proj-2-tuple(v_2145))) in
                            {9531}let kb_106: mac_key = (if v_2146 then 2-proj-2-tuple(v_2145) else caught-fail) in
                            {9532}let es_157: bitstring = (if v_2146 then 1-proj-2-tuple(v_2145) else caught-fail) in
                            {9533}let v_2147: preSharedKeyExt = (if v_2146 then catch-fail(o_psk_ext_26) else caught-fail) in
                            {9534}let v_2148: bool = (not-caught-fail(v_2147) && success?(1-proj-client_psk_ext(v_2147))) in
                            {9535}let fake_binder_29: bitstring = (if v_2148 then 2-proj-client_psk_ext(v_2147) else caught-fail) in
                            {9536}let fake_id_29: identityPsk = (if v_2148 then 1-proj-client_psk_ext(v_2147) else caught-fail) in
                            {9537}new fake_binder'_5[]: bitstring;
                            {9538}let v_2149: bitstring = catch-fail((if v_2146 then (if v_2148 then (client_psk_ext(fake_id_29,fake_binder'_5),(NoPsk,zero,es_157,false)) else (empty_psk_ext,(NoPsk,zero,es_157,false))) else fail-any)) in
                            {9539}let v_2150: bool = (not-caught-fail(v_2149) && success?(1-proj-2-tuple(v_2149))) in
                            {9540}let psk_data_53: bitstring = (if v_2150 then 2-proj-2-tuple(v_2149) else caught-fail) in
                            {9541}let psk_ext_107: preSharedKeyExt = (if v_2150 then 1-proj-2-tuple(v_2149) else caught-fail) in
                            {9542}let o_offer_53: params = (if v_2150 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_13,SNI(o_dom_15),o_ech_ext_26,empty_extra_ext,psk_ext_107) else caught-fail) in
                            {9543}let (client_hello'_26: msg,cr'_28: bytes32,kex_data'_23: bitstring,psk_data'_46: bitstring) = (if v_2150 then (CH(o_cr_19,o_offer_53),o_cr_19,kex_data_5,psk_data_53) else fail-any) in
                            {9544}out(io, client_hello'_26);
                            {9545}let cur_log_OU1_HRR_OU2_23: bitstring = (cur_log_OU1_HRR_5,client_hello'_26) in
                            {9546}in(io, server_hello'_41: msg);
                            {9547}let SH(sr'_23: bytes32,mode'_23: params) = server_hello'_41 in
                            (
                                {9548}if (sr'_23 = B32(HRR24,HRR8)) then
                                    {9549}out(io, unexpected_message)
                                else
                                    {9550}let (x_668: bitstring,g_60: group) = kex_data'_23 in
                                    {9551}let (psk_offer_51: preSharedKey,id_offer_51: identityPsk,es_offer_51: bitstring,is_safe_offer_51: bool) = psk_data'_46 in
                                    {9552}event Client_PSKOffer(id_client_5,psk_offer_51,id_offer_51,is_safe_offer_51);
                                    {9553}event Client_Rand_client(id_client_5,cr'_28);
                                    {9554}event Client_DH_client(id_client_5,dh_pub(g_60,x_668));
                                    {9555}event Client_server_domain(id_client_5,o_dom_8);
                                    {9556}let SH(sr_59: bytes32,mode_57: params) = server_hello'_41 in
                                    {9557}event Client_Rand_server(id_client_5,sr_59);
                                    {9558}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_60,gy_52: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_108: preSharedKeyExt) = mode_57 in
                                    (
                                        {9559}let cur_log2_106: bitstring = (cur_log_OU1_HRR_OU2_23,server_hello'_41) in
                                        {9560}event Client_DH_server(id_client_5,gy_52);
                                        {9561}let v_2151: bool = (psk_ext_108 = empty_psk_ext) in
                                        {9562}let psk_236: preSharedKey = (if v_2151 then NoPsk else caught-fail) in
                                        {9563}let s_224: bitstring = (if v_2151 then zero else caught-fail) in
                                        {9564}let k_227: bitstring = (if v_2151 then catch-fail(psk2b(psk_236)) else caught-fail) in
                                        {9565}let v_2152: bool = not-caught-fail(k_227) in
                                        {9566}let early_secret_160: bitstring = (if v_2151 then catch-fail((if v_2152 then hmac(@8_tls_h,s_224,k_227) else fail-any)) else caught-fail) in
                                        {9567}let v_2153: bool = not-caught-fail(early_secret_160) in
                                        {9568}let l_589: label = (if v_2153 then tls13_ext_res_binder else caught-fail) in
                                        {9569}let m_211: bitstring = (if v_2153 then zero else caught-fail) in
                                        {9570}let h_558: bitstring = (if v_2153 then catch-fail(hash(@8_tls_h,m_211)) else caught-fail) in
                                        {9571}let v_2154: bool = not-caught-fail(h_558) in
                                        {9572}let x_669: bitstring = (if v_2154 then (l_589,h_558) else caught-fail) in
                                        {9573}let binder_key_107: bitstring = (if v_2153 then catch-fail((if v_2154 then hmac(@8_tls_h,early_secret_160,x_669) else fail-any)) else caught-fail) in
                                        {9574}let v_2155: bool = not-caught-fail(binder_key_107) in
                                        {9575}let v_2156: bitstring = (if v_2151 then catch-fail((if v_2153 then (if v_2155 then (early_secret_160,binder_key_107) else fail-any) else fail-any)) else caught-fail) in
                                        {9576}let v_2157: bool = (not-caught-fail(v_2156) && success?(1-proj-2-tuple(v_2156))) in
                                        {9577}let kb_107: mac_key = (if v_2157 then 2-proj-2-tuple(v_2156) else caught-fail) in
                                        {9578}let es_158: bitstring = (if v_2157 then 1-proj-2-tuple(v_2156) else caught-fail) in
                                        {9579}let v_2158: bitstring = (if not(v_2151) then catch-fail(psk_data'_46) else caught-fail) in
                                        {9580}let v_2159: bool = (not-caught-fail(v_2158) && success?(1-proj-4-tuple(v_2158))) in
                                        {9581}let is_safe_93: bool = (if v_2159 then 4-proj-4-tuple(v_2158) else caught-fail) in
                                        {9582}let es_159: bitstring = (if v_2159 then 3-proj-4-tuple(v_2158) else caught-fail) in
                                        {9583}let id_105: identityPsk = (if v_2159 then 2-proj-4-tuple(v_2158) else caught-fail) in
                                        {9584}let psk_237: preSharedKey = (if v_2159 then 1-proj-4-tuple(v_2158) else caught-fail) in
                                        {9585}let (psk_238: preSharedKey,early_secret_161: bitstring,valid_51: bool,safe_psk_54: bool) = (if v_2151 then (if v_2157 then (NoPsk,es_158,true,false) else fail-any) else (if v_2159 then (psk_237,es_159,((psk_237 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_108)),is_safe_93) else fail-any)) in
                                        {9586}event Client_PSKChoosen(id_client_5,psk_238,safe_psk_54);
                                        {9587}if valid_51 then
                                        (
                                            {9588}let gxy_104: element = catch-fail(dh_decap_fun(g_60,gy_52,x_668)) in
                                            {9589}let v_2160: bool = not-caught-fail(gxy_104) in
                                            {9590}new s_225[]: seed;
                                            {9591}let gxy_105: element = (if v_2160 then gxy_104 else dh_f(s_225)) in
                                            {9592}event Client_DH_gxy(id_client_5,gxy_105);
                                            {9593}let l_590: label = tls13_derived in
                                            {9594}let m_212: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                            {9595}let v_2161: bool = not-caught-fail(m_212) in
                                            {9596}let h_559: bitstring = (if v_2161 then catch-fail(hash(@8_tls_h,m_212)) else caught-fail) in
                                            {9597}let v_2162: bool = not-caught-fail(h_559) in
                                            {9598}let x_670: bitstring = (if v_2162 then (l_590,h_559) else caught-fail) in
                                            {9599}let extra_110: bitstring = catch-fail((if v_2161 then (if v_2162 then hmac(@8_tls_h,early_secret_161,x_670) else fail-any) else fail-any)) in
                                            {9600}let v_2163: bool = not-caught-fail(extra_110) in
                                            {9601}let handshake_secret_52: bitstring = (if v_2163 then hmac(@8_tls_h,extra_110,gxy_105) else fail-any) in
                                            {9602}let l_591: label = tls13_derived in
                                            {9603}let m_213: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                            {9604}let v_2164: bool = not-caught-fail(m_213) in
                                            {9605}let h_560: bitstring = (if v_2164 then catch-fail(hash(@8_tls_h,m_213)) else caught-fail) in
                                            {9606}let v_2165: bool = not-caught-fail(h_560) in
                                            {9607}let x_671: bitstring = (if v_2165 then (l_591,h_560) else caught-fail) in
                                            {9608}let extra_111: bitstring = catch-fail((if v_2164 then (if v_2165 then hmac(@8_tls_h,handshake_secret_52,x_671) else fail-any) else fail-any)) in
                                            {9609}let v_2166: bool = not-caught-fail(extra_111) in
                                            {9610}let k_228: bitstring = (if v_2166 then zero else caught-fail) in
                                            {9611}let master_secret_111: bitstring = (if v_2166 then catch-fail(hmac(@8_tls_h,handshake_secret_52,k_228)) else caught-fail) in
                                            {9612}let v_2167: bool = not-caught-fail(master_secret_111) in
                                            {9613}let l_592: label = (if v_2167 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {9614}let h_561: bitstring = (if v_2167 then catch-fail(hash(@8_tls_h,cur_log2_106)) else caught-fail) in
                                            {9615}let v_2168: bool = not-caught-fail(h_561) in
                                            {9616}let x_672: bitstring = (if v_2168 then (l_592,h_561) else caught-fail) in
                                            {9617}let client_hts_52: bitstring = (if v_2167 then catch-fail((if v_2168 then hmac(@8_tls_h,handshake_secret_52,x_672) else fail-any)) else caught-fail) in
                                            {9618}let v_2169: bool = not-caught-fail(client_hts_52) in
                                            {9619}let l_593: label = (if v_2169 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {9620}let h_562: bitstring = (if v_2169 then catch-fail(hash(@8_tls_h,cur_log2_106)) else caught-fail) in
                                            {9621}let v_2170: bool = not-caught-fail(h_562) in
                                            {9622}let x_673: bitstring = (if v_2170 then (l_593,h_562) else caught-fail) in
                                            {9623}let server_hts_52: bitstring = (if v_2169 then catch-fail((if v_2170 then hmac(@8_tls_h,handshake_secret_52,x_673) else fail-any)) else caught-fail) in
                                            {9624}let v_2171: bool = not-caught-fail(server_hts_52) in
                                            {9625}let l_594: label = (if v_2171 then tls13_key else caught-fail) in
                                            {9626}let h_563: bitstring = (if v_2171 then zero else caught-fail) in
                                            {9627}let x_674: bitstring = (if v_2171 then (l_594,h_563) else caught-fail) in
                                            {9628}let client_wkh_52: bitstring = (if v_2171 then catch-fail(hmac(@8_tls_h,client_hts_52,x_674)) else caught-fail) in
                                            {9629}let v_2172: bool = not-caught-fail(client_wkh_52) in
                                            {9630}let l_595: label = (if v_2172 then tls13_key else caught-fail) in
                                            {9631}let h_564: bitstring = (if v_2172 then zero else caught-fail) in
                                            {9632}let x_675: bitstring = (if v_2172 then (l_595,h_564) else caught-fail) in
                                            {9633}let server_wkh_52: bitstring = (if v_2172 then catch-fail(hmac(@8_tls_h,server_hts_52,x_675)) else caught-fail) in
                                            {9634}let v_2173: bool = not-caught-fail(server_wkh_52) in
                                            {9635}let l_596: label = (if v_2173 then tls13_finished else caught-fail) in
                                            {9636}let h_565: bitstring = (if v_2173 then zero else caught-fail) in
                                            {9637}let x_676: bitstring = (if v_2173 then (l_596,h_565) else caught-fail) in
                                            {9638}let client_fk_52: bitstring = (if v_2173 then catch-fail(hmac(@8_tls_h,client_hts_52,x_676)) else caught-fail) in
                                            {9639}let v_2174: bool = not-caught-fail(client_fk_52) in
                                            {9640}let l_597: label = (if v_2174 then tls13_finished else caught-fail) in
                                            {9641}let h_566: bitstring = (if v_2174 then zero else caught-fail) in
                                            {9642}let x_677: bitstring = (if v_2174 then (l_597,h_566) else caught-fail) in
                                            {9643}let server_fk_52: bitstring = (if v_2174 then catch-fail(hmac(@8_tls_h,server_hts_52,x_677)) else caught-fail) in
                                            {9644}let v_2175: bool = not-caught-fail(server_fk_52) in
                                            {9645}let (master_secret_112: bitstring,chk_59: aead_key,shk_58: aead_key,cfin_59: mac_key,sfin_58: mac_key) = (if v_2166 then (if v_2167 then (if v_2169 then (if v_2171 then (if v_2172 then (if v_2173 then (if v_2174 then (if v_2175 then (master_secret_111,client_wkh_52,server_wkh_52,client_fk_52,server_fk_52) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {9646}event Client_chk(id_client_5,chk_59);
                                            {9647}event Client_shk(id_client_5,shk_58);
                                            {9648}event Client_cfin(id_client_5,cfin_59);
                                            {9649}event Client_sfin(id_client_5,sfin_58);
                                            {9650}in(io, enc_ee_msg_51: bitstring);
                                            {9651}let ee_msg_56: msg = aead_dec(@8_tls_a,shk_58,0,zero,enc_ee_msg_51) in
                                            {9652}let EE(ech_ee_51: echExt,extra_ee_51: extraExt) = ee_msg_56 in
                                            {9653}let cur_log2_107: bitstring = (cur_log2_106,ee_msg_56) in
                                            {9654}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_28,sr_59,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_238,safe_psk_54,@8_comp_psk,master_secret_112,chk_59,0,shk_58,1,cfin_59,sfin_58,cur_log2_107)))
                                        )
                                        else
                                            {9655}out(io, illegal_parameter)
                                    )
                                    else
                                        {9656}out(io, illegal_parameter)
                            )
                            else
                                {9657}out(io, unexpected_message)
                )
                else
                    {9658}let cur_log_32: bitstring = (zero,i_client_hello_27) in
                    {9659}let sh_modified_24: msg = SH(B32(sr24_7,zero8),mode_50) in
                    {9660}let cur_log_sh_24: bitstring = (cur_log_32,sh_modified_24) in
                    {9661}let transcript_ech_conf_24: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_24)) in
                    {9662}let v_2176: bool = not-caught-fail(transcript_ech_conf_24) in
                    {9663}let s_226: bitstring = (if v_2176 then zero else caught-fail) in
                    {9664}let k_229: bitstring = (if v_2176 then catch-fail(b32_2_b(get_random(i_client_hello_27))) else caught-fail) in
                    {9665}let v_2177: bool = not-caught-fail(k_229) in
                    {9666}let k_230: bitstring = (if v_2176 then catch-fail((if v_2177 then hmac(@8_backend_h,s_226,k_229) else fail-any)) else caught-fail) in
                    {9667}let v_2178: bool = not-caught-fail(k_230) in
                    {9668}let l_598: label = (if v_2178 then ech_accept_confirmation else caught-fail) in
                    {9669}let x_678: bitstring = (if v_2178 then (l_598,cur_log_sh_24) else caught-fail) in
                    {9670}let sr8_30: bytes8 = (if v_2176 then catch-fail(crop_into_bytes8((if v_2178 then hmac(@8_backend_h,k_230,x_678) else fail-any))) else caught-fail) in
                    {9671}let v_2179: bool = not-caught-fail(sr8_30) in
                    {9672}if (B32(sr24_7,sr8_26) = (if v_2176 then (if v_2179 then B32(sr24_7,sr8_30) else fail-any) else fail-any)) then
                    (
                        {9673}event ClientEchAcceptance(id_client_5,true);
                        {9674}let cur_log_33: bitstring = (zero,i_client_hello_27) in
                        {9675}let (x_679: bitstring,g_61: group) = i_kex_data_12 in
                        {9676}let (psk_offer_52: preSharedKey,id_offer_52: identityPsk,es_offer_52: bitstring,is_safe_offer_52: bool) = psk_data_46 in
                        {9677}event Client_PSKOffer(id_client_5,psk_offer_52,id_offer_52,is_safe_offer_52);
                        {9678}event Client_Rand_client(id_client_5,i_cr_13);
                        {9679}event Client_DH_client(id_client_5,dh_pub(g_61,x_679));
                        {9680}event Client_server_domain(id_client_5,backend_dom_1);
                        {9681}let SH(sr_60: bytes32,mode_58: params) = server_hello_6 in
                        {9682}event Client_Rand_server(id_client_5,sr_60);
                        {9683}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_61,gy_53: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_109: preSharedKeyExt) = mode_58 in
                        (
                            {9684}let cur_log2_108: bitstring = (cur_log_33,server_hello_6) in
                            {9685}event Client_DH_server(id_client_5,gy_53);
                            {9686}let v_2180: bool = (psk_ext_109 = empty_psk_ext) in
                            {9687}let psk_239: preSharedKey = (if v_2180 then NoPsk else caught-fail) in
                            {9688}let s_227: bitstring = (if v_2180 then zero else caught-fail) in
                            {9689}let k_231: bitstring = (if v_2180 then catch-fail(psk2b(psk_239)) else caught-fail) in
                            {9690}let v_2181: bool = not-caught-fail(k_231) in
                            {9691}let early_secret_162: bitstring = (if v_2180 then catch-fail((if v_2181 then hmac(@8_backend_h,s_227,k_231) else fail-any)) else caught-fail) in
                            {9692}let v_2182: bool = not-caught-fail(early_secret_162) in
                            {9693}let l_599: label = (if v_2182 then tls13_ext_res_binder else caught-fail) in
                            {9694}let m_214: bitstring = (if v_2182 then zero else caught-fail) in
                            {9695}let h_567: bitstring = (if v_2182 then catch-fail(hash(@8_backend_h,m_214)) else caught-fail) in
                            {9696}let v_2183: bool = not-caught-fail(h_567) in
                            {9697}let x_680: bitstring = (if v_2183 then (l_599,h_567) else caught-fail) in
                            {9698}let binder_key_108: bitstring = (if v_2182 then catch-fail((if v_2183 then hmac(@8_backend_h,early_secret_162,x_680) else fail-any)) else caught-fail) in
                            {9699}let v_2184: bool = not-caught-fail(binder_key_108) in
                            {9700}let v_2185: bitstring = (if v_2180 then catch-fail((if v_2182 then (if v_2184 then (early_secret_162,binder_key_108) else fail-any) else fail-any)) else caught-fail) in
                            {9701}let v_2186: bool = (not-caught-fail(v_2185) && success?(1-proj-2-tuple(v_2185))) in
                            {9702}let kb_108: mac_key = (if v_2186 then 2-proj-2-tuple(v_2185) else caught-fail) in
                            {9703}let es_160: bitstring = (if v_2186 then 1-proj-2-tuple(v_2185) else caught-fail) in
                            {9704}let v_2187: bitstring = (if not(v_2180) then catch-fail(psk_data_46) else caught-fail) in
                            {9705}let v_2188: bool = (not-caught-fail(v_2187) && success?(1-proj-4-tuple(v_2187))) in
                            {9706}let is_safe_94: bool = (if v_2188 then 4-proj-4-tuple(v_2187) else caught-fail) in
                            {9707}let es_161: bitstring = (if v_2188 then 3-proj-4-tuple(v_2187) else caught-fail) in
                            {9708}let id_106: identityPsk = (if v_2188 then 2-proj-4-tuple(v_2187) else caught-fail) in
                            {9709}let psk_240: preSharedKey = (if v_2188 then 1-proj-4-tuple(v_2187) else caught-fail) in
                            {9710}let (psk_241: preSharedKey,early_secret_163: bitstring,valid_52: bool,safe_psk_55: bool) = (if v_2180 then (if v_2186 then (NoPsk,es_160,true,false) else fail-any) else (if v_2188 then (psk_240,es_161,((psk_240 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_109)),is_safe_94) else fail-any)) in
                            {9711}event Client_PSKChoosen(id_client_5,psk_241,safe_psk_55);
                            {9712}if valid_52 then
                            (
                                {9713}let gxy_106: element = catch-fail(dh_decap_fun(g_61,gy_53,x_679)) in
                                {9714}let v_2189: bool = not-caught-fail(gxy_106) in
                                {9715}new s_228[]: seed;
                                {9716}let gxy_107: element = (if v_2189 then gxy_106 else dh_f(s_228)) in
                                {9717}event Client_DH_gxy(id_client_5,gxy_107);
                                {9718}let l_600: label = tls13_derived in
                                {9719}let m_215: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                {9720}let v_2190: bool = not-caught-fail(m_215) in
                                {9721}let h_568: bitstring = (if v_2190 then catch-fail(hash(@8_backend_h,m_215)) else caught-fail) in
                                {9722}let v_2191: bool = not-caught-fail(h_568) in
                                {9723}let x_681: bitstring = (if v_2191 then (l_600,h_568) else caught-fail) in
                                {9724}let extra_112: bitstring = catch-fail((if v_2190 then (if v_2191 then hmac(@8_backend_h,early_secret_163,x_681) else fail-any) else fail-any)) in
                                {9725}let v_2192: bool = not-caught-fail(extra_112) in
                                {9726}let handshake_secret_53: bitstring = (if v_2192 then hmac(@8_backend_h,extra_112,gxy_107) else fail-any) in
                                {9727}let l_601: label = tls13_derived in
                                {9728}let m_216: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                {9729}let v_2193: bool = not-caught-fail(m_216) in
                                {9730}let h_569: bitstring = (if v_2193 then catch-fail(hash(@8_backend_h,m_216)) else caught-fail) in
                                {9731}let v_2194: bool = not-caught-fail(h_569) in
                                {9732}let x_682: bitstring = (if v_2194 then (l_601,h_569) else caught-fail) in
                                {9733}let extra_113: bitstring = catch-fail((if v_2193 then (if v_2194 then hmac(@8_backend_h,handshake_secret_53,x_682) else fail-any) else fail-any)) in
                                {9734}let v_2195: bool = not-caught-fail(extra_113) in
                                {9735}let k_232: bitstring = (if v_2195 then zero else caught-fail) in
                                {9736}let master_secret_113: bitstring = (if v_2195 then catch-fail(hmac(@8_backend_h,handshake_secret_53,k_232)) else caught-fail) in
                                {9737}let v_2196: bool = not-caught-fail(master_secret_113) in
                                {9738}let l_602: label = (if v_2196 then tls13_client_handshake_traffic_secret else caught-fail) in
                                {9739}let h_570: bitstring = (if v_2196 then catch-fail(hash(@8_backend_h,cur_log2_108)) else caught-fail) in
                                {9740}let v_2197: bool = not-caught-fail(h_570) in
                                {9741}let x_683: bitstring = (if v_2197 then (l_602,h_570) else caught-fail) in
                                {9742}let client_hts_53: bitstring = (if v_2196 then catch-fail((if v_2197 then hmac(@8_backend_h,handshake_secret_53,x_683) else fail-any)) else caught-fail) in
                                {9743}let v_2198: bool = not-caught-fail(client_hts_53) in
                                {9744}let l_603: label = (if v_2198 then tls13_server_handshake_traffic_secret else caught-fail) in
                                {9745}let h_571: bitstring = (if v_2198 then catch-fail(hash(@8_backend_h,cur_log2_108)) else caught-fail) in
                                {9746}let v_2199: bool = not-caught-fail(h_571) in
                                {9747}let x_684: bitstring = (if v_2199 then (l_603,h_571) else caught-fail) in
                                {9748}let server_hts_53: bitstring = (if v_2198 then catch-fail((if v_2199 then hmac(@8_backend_h,handshake_secret_53,x_684) else fail-any)) else caught-fail) in
                                {9749}let v_2200: bool = not-caught-fail(server_hts_53) in
                                {9750}let l_604: label = (if v_2200 then tls13_key else caught-fail) in
                                {9751}let h_572: bitstring = (if v_2200 then zero else caught-fail) in
                                {9752}let x_685: bitstring = (if v_2200 then (l_604,h_572) else caught-fail) in
                                {9753}let client_wkh_53: bitstring = (if v_2200 then catch-fail(hmac(@8_backend_h,client_hts_53,x_685)) else caught-fail) in
                                {9754}let v_2201: bool = not-caught-fail(client_wkh_53) in
                                {9755}let l_605: label = (if v_2201 then tls13_key else caught-fail) in
                                {9756}let h_573: bitstring = (if v_2201 then zero else caught-fail) in
                                {9757}let x_686: bitstring = (if v_2201 then (l_605,h_573) else caught-fail) in
                                {9758}let server_wkh_53: bitstring = (if v_2201 then catch-fail(hmac(@8_backend_h,server_hts_53,x_686)) else caught-fail) in
                                {9759}let v_2202: bool = not-caught-fail(server_wkh_53) in
                                {9760}let l_606: label = (if v_2202 then tls13_finished else caught-fail) in
                                {9761}let h_574: bitstring = (if v_2202 then zero else caught-fail) in
                                {9762}let x_687: bitstring = (if v_2202 then (l_606,h_574) else caught-fail) in
                                {9763}let client_fk_53: bitstring = (if v_2202 then catch-fail(hmac(@8_backend_h,client_hts_53,x_687)) else caught-fail) in
                                {9764}let v_2203: bool = not-caught-fail(client_fk_53) in
                                {9765}let l_607: label = (if v_2203 then tls13_finished else caught-fail) in
                                {9766}let h_575: bitstring = (if v_2203 then zero else caught-fail) in
                                {9767}let x_688: bitstring = (if v_2203 then (l_607,h_575) else caught-fail) in
                                {9768}let server_fk_53: bitstring = (if v_2203 then catch-fail(hmac(@8_backend_h,server_hts_53,x_688)) else caught-fail) in
                                {9769}let v_2204: bool = not-caught-fail(server_fk_53) in
                                {9770}let (master_secret_114: bitstring,chk_60: aead_key,shk_59: aead_key,cfin_60: mac_key,sfin_59: mac_key) = (if v_2195 then (if v_2196 then (if v_2198 then (if v_2200 then (if v_2201 then (if v_2202 then (if v_2203 then (if v_2204 then (master_secret_113,client_wkh_53,server_wkh_53,client_fk_53,server_fk_53) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                {9771}event Client_chk(id_client_5,chk_60);
                                {9772}event Client_shk(id_client_5,shk_59);
                                {9773}event Client_cfin(id_client_5,cfin_60);
                                {9774}event Client_sfin(id_client_5,sfin_59);
                                {9775}in(io, enc_ee_msg_52: bitstring);
                                {9776}let ee_msg_57: msg = aead_dec(@8_backend_a,shk_59,0,zero,enc_ee_msg_52) in
                                {9777}let EE(ech_ee_52: echExt,extra_ee_52: extraExt) = ee_msg_57 in
                                {9778}let cur_log2_109: bitstring = (cur_log2_108,ee_msg_57) in
                                {9779}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr_13,sr_60,@8_backend_h,@8_backend_a,c_dom_6,backend_dom_1,psk_241,safe_psk_55,@8_comp_psk,master_secret_114,chk_60,0,shk_59,1,cfin_60,sfin_59,cur_log2_109)))
                            )
                            else
                                {9780}out(io, illegal_parameter)
                        )
                        else
                            {9781}out(io, illegal_parameter)
                    )
                    else
                        {9782}event ClientEchAcceptance(id_client_5,false);
                        {9783}let v_2205: bool = @8_use_grease in
                        {9784}let psk_242: preSharedKey = (if not(v_2205) then NoPsk else caught-fail) in
                        {9785}let s_229: bitstring = (if not(v_2205) then zero else caught-fail) in
                        {9786}let k_233: bitstring = (if not(v_2205) then catch-fail(psk2b(psk_242)) else caught-fail) in
                        {9787}let v_2206: bool = not-caught-fail(k_233) in
                        {9788}let early_secret_164: bitstring = (if not(v_2205) then catch-fail((if v_2206 then hmac(@8_tls_h,s_229,k_233) else fail-any)) else caught-fail) in
                        {9789}let v_2207: bool = not-caught-fail(early_secret_164) in
                        {9790}let l_608: label = (if v_2207 then tls13_ext_res_binder else caught-fail) in
                        {9791}let m_217: bitstring = (if v_2207 then zero else caught-fail) in
                        {9792}let h_576: bitstring = (if v_2207 then catch-fail(hash(@8_tls_h,m_217)) else caught-fail) in
                        {9793}let v_2208: bool = not-caught-fail(h_576) in
                        {9794}let x_689: bitstring = (if v_2208 then (l_608,h_576) else caught-fail) in
                        {9795}let binder_key_109: bitstring = (if v_2207 then catch-fail((if v_2208 then hmac(@8_tls_h,early_secret_164,x_689) else fail-any)) else caught-fail) in
                        {9796}let v_2209: bool = not-caught-fail(binder_key_109) in
                        {9797}let v_2210: bitstring = (if not(v_2205) then catch-fail((if v_2207 then (if v_2209 then (early_secret_164,binder_key_109) else fail-any) else fail-any)) else caught-fail) in
                        {9798}let v_2211: bool = (not-caught-fail(v_2210) && success?(1-proj-2-tuple(v_2210))) in
                        {9799}let kb_109: mac_key = (if v_2211 then 2-proj-2-tuple(v_2210) else caught-fail) in
                        {9800}let es'_5: bitstring = (if v_2211 then 1-proj-2-tuple(v_2210) else caught-fail) in
                        {9801}let psk_data'_47: bitstring = (if v_2205 then psk_data_46 else (if v_2211 then (NoPsk,zero,es'_5,false) else fail-any)) in
                        {9802}let cur_log_34: bitstring = (zero,o_client_hello_7) in
                        {9803}let (x_690: bitstring,g_62: group) = o_kex_data_12 in
                        {9804}let (psk_offer_53: preSharedKey,id_offer_53: identityPsk,es_offer_53: bitstring,is_safe_offer_53: bool) = psk_data'_47 in
                        {9805}event Client_PSKOffer(id_client_5,psk_offer_53,id_offer_53,is_safe_offer_53);
                        {9806}event Client_Rand_client(id_client_5,o_cr_17);
                        {9807}event Client_DH_client(id_client_5,dh_pub(g_62,x_690));
                        {9808}event Client_server_domain(id_client_5,o_dom_8);
                        {9809}let SH(sr_61: bytes32,mode_59: params) = server_hello_6 in
                        {9810}event Client_Rand_server(id_client_5,sr_61);
                        {9811}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_62,gy_54: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_110: preSharedKeyExt) = mode_59 in
                        (
                            {9812}let cur_log2_110: bitstring = (cur_log_34,server_hello_6) in
                            {9813}event Client_DH_server(id_client_5,gy_54);
                            {9814}let v_2212: bool = (psk_ext_110 = empty_psk_ext) in
                            {9815}let psk_243: preSharedKey = (if v_2212 then NoPsk else caught-fail) in
                            {9816}let s_230: bitstring = (if v_2212 then zero else caught-fail) in
                            {9817}let k_234: bitstring = (if v_2212 then catch-fail(psk2b(psk_243)) else caught-fail) in
                            {9818}let v_2213: bool = not-caught-fail(k_234) in
                            {9819}let early_secret_165: bitstring = (if v_2212 then catch-fail((if v_2213 then hmac(@8_tls_h,s_230,k_234) else fail-any)) else caught-fail) in
                            {9820}let v_2214: bool = not-caught-fail(early_secret_165) in
                            {9821}let l_609: label = (if v_2214 then tls13_ext_res_binder else caught-fail) in
                            {9822}let m_218: bitstring = (if v_2214 then zero else caught-fail) in
                            {9823}let h_577: bitstring = (if v_2214 then catch-fail(hash(@8_tls_h,m_218)) else caught-fail) in
                            {9824}let v_2215: bool = not-caught-fail(h_577) in
                            {9825}let x_691: bitstring = (if v_2215 then (l_609,h_577) else caught-fail) in
                            {9826}let binder_key_110: bitstring = (if v_2214 then catch-fail((if v_2215 then hmac(@8_tls_h,early_secret_165,x_691) else fail-any)) else caught-fail) in
                            {9827}let v_2216: bool = not-caught-fail(binder_key_110) in
                            {9828}let v_2217: bitstring = (if v_2212 then catch-fail((if v_2214 then (if v_2216 then (early_secret_165,binder_key_110) else fail-any) else fail-any)) else caught-fail) in
                            {9829}let v_2218: bool = (not-caught-fail(v_2217) && success?(1-proj-2-tuple(v_2217))) in
                            {9830}let kb_110: mac_key = (if v_2218 then 2-proj-2-tuple(v_2217) else caught-fail) in
                            {9831}let es_162: bitstring = (if v_2218 then 1-proj-2-tuple(v_2217) else caught-fail) in
                            {9832}let v_2219: bitstring = (if not(v_2212) then catch-fail(psk_data'_47) else caught-fail) in
                            {9833}let v_2220: bool = (not-caught-fail(v_2219) && success?(1-proj-4-tuple(v_2219))) in
                            {9834}let is_safe_95: bool = (if v_2220 then 4-proj-4-tuple(v_2219) else caught-fail) in
                            {9835}let es_163: bitstring = (if v_2220 then 3-proj-4-tuple(v_2219) else caught-fail) in
                            {9836}let id_107: identityPsk = (if v_2220 then 2-proj-4-tuple(v_2219) else caught-fail) in
                            {9837}let psk_244: preSharedKey = (if v_2220 then 1-proj-4-tuple(v_2219) else caught-fail) in
                            {9838}let (psk_245: preSharedKey,early_secret_166: bitstring,valid_53: bool,safe_psk_56: bool) = (if v_2212 then (if v_2218 then (NoPsk,es_162,true,false) else fail-any) else (if v_2220 then (psk_244,es_163,((psk_244 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_110)),is_safe_95) else fail-any)) in
                            {9839}event Client_PSKChoosen(id_client_5,psk_245,safe_psk_56);
                            {9840}if valid_53 then
                            (
                                {9841}let gxy_108: element = catch-fail(dh_decap_fun(g_62,gy_54,x_690)) in
                                {9842}let v_2221: bool = not-caught-fail(gxy_108) in
                                {9843}new s_231[]: seed;
                                {9844}let gxy_109: element = (if v_2221 then gxy_108 else dh_f(s_231)) in
                                {9845}event Client_DH_gxy(id_client_5,gxy_109);
                                {9846}let l_610: label = tls13_derived in
                                {9847}let m_219: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                {9848}let v_2222: bool = not-caught-fail(m_219) in
                                {9849}let h_578: bitstring = (if v_2222 then catch-fail(hash(@8_tls_h,m_219)) else caught-fail) in
                                {9850}let v_2223: bool = not-caught-fail(h_578) in
                                {9851}let x_692: bitstring = (if v_2223 then (l_610,h_578) else caught-fail) in
                                {9852}let extra_114: bitstring = catch-fail((if v_2222 then (if v_2223 then hmac(@8_tls_h,early_secret_166,x_692) else fail-any) else fail-any)) in
                                {9853}let v_2224: bool = not-caught-fail(extra_114) in
                                {9854}let handshake_secret_54: bitstring = (if v_2224 then hmac(@8_tls_h,extra_114,gxy_109) else fail-any) in
                                {9855}let l_611: label = tls13_derived in
                                {9856}let m_220: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                {9857}let v_2225: bool = not-caught-fail(m_220) in
                                {9858}let h_579: bitstring = (if v_2225 then catch-fail(hash(@8_tls_h,m_220)) else caught-fail) in
                                {9859}let v_2226: bool = not-caught-fail(h_579) in
                                {9860}let x_693: bitstring = (if v_2226 then (l_611,h_579) else caught-fail) in
                                {9861}let extra_115: bitstring = catch-fail((if v_2225 then (if v_2226 then hmac(@8_tls_h,handshake_secret_54,x_693) else fail-any) else fail-any)) in
                                {9862}let v_2227: bool = not-caught-fail(extra_115) in
                                {9863}let k_235: bitstring = (if v_2227 then zero else caught-fail) in
                                {9864}let master_secret_115: bitstring = (if v_2227 then catch-fail(hmac(@8_tls_h,handshake_secret_54,k_235)) else caught-fail) in
                                {9865}let v_2228: bool = not-caught-fail(master_secret_115) in
                                {9866}let l_612: label = (if v_2228 then tls13_client_handshake_traffic_secret else caught-fail) in
                                {9867}let h_580: bitstring = (if v_2228 then catch-fail(hash(@8_tls_h,cur_log2_110)) else caught-fail) in
                                {9868}let v_2229: bool = not-caught-fail(h_580) in
                                {9869}let x_694: bitstring = (if v_2229 then (l_612,h_580) else caught-fail) in
                                {9870}let client_hts_54: bitstring = (if v_2228 then catch-fail((if v_2229 then hmac(@8_tls_h,handshake_secret_54,x_694) else fail-any)) else caught-fail) in
                                {9871}let v_2230: bool = not-caught-fail(client_hts_54) in
                                {9872}let l_613: label = (if v_2230 then tls13_server_handshake_traffic_secret else caught-fail) in
                                {9873}let h_581: bitstring = (if v_2230 then catch-fail(hash(@8_tls_h,cur_log2_110)) else caught-fail) in
                                {9874}let v_2231: bool = not-caught-fail(h_581) in
                                {9875}let x_695: bitstring = (if v_2231 then (l_613,h_581) else caught-fail) in
                                {9876}let server_hts_54: bitstring = (if v_2230 then catch-fail((if v_2231 then hmac(@8_tls_h,handshake_secret_54,x_695) else fail-any)) else caught-fail) in
                                {9877}let v_2232: bool = not-caught-fail(server_hts_54) in
                                {9878}let l_614: label = (if v_2232 then tls13_key else caught-fail) in
                                {9879}let h_582: bitstring = (if v_2232 then zero else caught-fail) in
                                {9880}let x_696: bitstring = (if v_2232 then (l_614,h_582) else caught-fail) in
                                {9881}let client_wkh_54: bitstring = (if v_2232 then catch-fail(hmac(@8_tls_h,client_hts_54,x_696)) else caught-fail) in
                                {9882}let v_2233: bool = not-caught-fail(client_wkh_54) in
                                {9883}let l_615: label = (if v_2233 then tls13_key else caught-fail) in
                                {9884}let h_583: bitstring = (if v_2233 then zero else caught-fail) in
                                {9885}let x_697: bitstring = (if v_2233 then (l_615,h_583) else caught-fail) in
                                {9886}let server_wkh_54: bitstring = (if v_2233 then catch-fail(hmac(@8_tls_h,server_hts_54,x_697)) else caught-fail) in
                                {9887}let v_2234: bool = not-caught-fail(server_wkh_54) in
                                {9888}let l_616: label = (if v_2234 then tls13_finished else caught-fail) in
                                {9889}let h_584: bitstring = (if v_2234 then zero else caught-fail) in
                                {9890}let x_698: bitstring = (if v_2234 then (l_616,h_584) else caught-fail) in
                                {9891}let client_fk_54: bitstring = (if v_2234 then catch-fail(hmac(@8_tls_h,client_hts_54,x_698)) else caught-fail) in
                                {9892}let v_2235: bool = not-caught-fail(client_fk_54) in
                                {9893}let l_617: label = (if v_2235 then tls13_finished else caught-fail) in
                                {9894}let h_585: bitstring = (if v_2235 then zero else caught-fail) in
                                {9895}let x_699: bitstring = (if v_2235 then (l_617,h_585) else caught-fail) in
                                {9896}let server_fk_54: bitstring = (if v_2235 then catch-fail(hmac(@8_tls_h,server_hts_54,x_699)) else caught-fail) in
                                {9897}let v_2236: bool = not-caught-fail(server_fk_54) in
                                {9898}let (master_secret_116: bitstring,chk_61: aead_key,shk_60: aead_key,cfin_61: mac_key,sfin_60: mac_key) = (if v_2227 then (if v_2228 then (if v_2230 then (if v_2232 then (if v_2233 then (if v_2234 then (if v_2235 then (if v_2236 then (master_secret_115,client_wkh_54,server_wkh_54,client_fk_54,server_fk_54) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                {9899}event Client_chk(id_client_5,chk_61);
                                {9900}event Client_shk(id_client_5,shk_60);
                                {9901}event Client_cfin(id_client_5,cfin_61);
                                {9902}event Client_sfin(id_client_5,sfin_60);
                                {9903}in(io, enc_ee_msg_53: bitstring);
                                {9904}let ee_msg_58: msg = aead_dec(@8_tls_a,shk_60,0,zero,enc_ee_msg_53) in
                                {9905}let EE(ech_ee_53: echExt,extra_ee_53: extraExt) = ee_msg_58 in
                                {9906}let cur_log2_111: bitstring = (cur_log2_110,ee_msg_58) in
                                {9907}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(o_cr_17,sr_61,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_245,safe_psk_56,@8_comp_psk,master_secret_116,chk_61,0,shk_60,1,cfin_61,sfin_60,cur_log2_111)))
                            )
                            else
                                {9908}out(io, illegal_parameter)
                        )
                        else
                            {9909}out(io, illegal_parameter)
            )
            else
                {9910}out(io, unexpected_message)
        )
)

--  Biprocess 1 (that is, biprocess 0, with let moved downwards):
(
    {1}!
    {2}in(io, a: domain);
    {3}new lgt_id: idProc;
    {4}event Same(a);
    {5}new s: seed;
    {6}let sk_h: privkey = uc_privkey(s) in
    {7}let crt: certificate = valid_cert(a,pk(sk_h)) in
    {8}insert long_term_keys(a,sk_h,pk(sk_h),crt,lgt_id);
    {9}out(io, crt)
) | (
    {10}!
    {11}in(io, (c_dom: domain,s_dom: domain));
    {13}new psk_id: idProc;
    {14}event Same(c_dom);
    {15}event Same(s_dom);
    {16}new s_1: seed;
    {17}let psk: preSharedKey = uc_psk(s_1) in
    {12}let h_alg: hash_alg = id_hash(StrongHash,1) in
    {18}let id: identityPsk = mk_idpsk(s_dom,h_alg,psk) in
    {19}insert pre_shared_keys(c_dom,s_dom,h_alg,id,psk,psk_id,true)
) | (
    {20}!
    {21}in(io, s_dom_1: domain);
    {25}event Same(s_dom_1);
    {26}new id_1: configId;
    {27}new s_2[]: seed;
    {24}let ech_g: group = id_g(StrongDH,2) in
    {28}let gx: element = dh_pub(ech_g,dh_k(s_2)) in
    {29}let (skR: bitstring,pkR: element) = (dh_k(s_2),gx) in
    {23}let ech_a: aead_alg = id_aead(StrongAE,2) in
    {22}let ech_h: hash_alg = id_hash(StrongHash,2) in
    {30}let config: echConfig = ech_config(id_1,ech_g,pkR,s_dom_1,ech_h,ech_a) in
    {31}insert ech_configurations(config,skR);
    {32}out(io, config)
) | (
    {33}!
    {34}in(io, a_1: domain);
    {35}new idP: idProc;
    {36}new sk_d: privkey;
    {37}event CompromisedLtkForEquiv(pk(sk_d));
    {38}event Same(a_1);
    {39}let crt_1: certificate = valid_cert(a_1,pk(sk_d)) in
    {40}insert long_term_keys(a_1,sk_d,pk(sk_d),crt_1,idP);
    {41}event CompromisedLtk(pk(sk_d));
    {42}out(io, (sk_d,crt_1))
) | (
    0
) | (
    {43}!
    {44}in(io, s_dom_2: domain);
    {48}event Same(s_dom_2);
    {49}new id_2: configId;
    {50}new skR_d: bitstring;
    {47}let ech_g_1: group = id_g(StrongDH,2) in
    {51}let pkR_d: element = dh_pub(ech_g_1,skR_d) in
    {46}let ech_a_1: aead_alg = id_aead(StrongAE,2) in
    {45}let ech_h_1: hash_alg = id_hash(StrongHash,2) in
    {52}let config_1: echConfig = ech_config(id_2,ech_g_1,pkR_d,s_dom_2,ech_h_1,ech_a_1) in
    {53}event CompromisedEchKeyForEquiv(config_1);
    {54}insert ech_configurations(config_1,skR_d);
    {55}out(io, config_1);
    {56}event CompromisedEchKey(config_1);
    {57}out(io, skR_d)
) | (
    {58}!
    {59}in(ch_server_CFIN, (id_server: idProc,ArgsServerCFIN(cr: bytes32,sr: bytes32,h_alg_1: hash_alg,a_alg: aead_alg,s_dom_3: domain,s_pkey: pubkey,c_pkey: pubkey,psk_1: preSharedKey,master_secret: bitstring,chk: aead_key,c_seq: nat,cfin: mac_key,cur_log: bitstring)));
    {60}new st[]: stamp;
    {61}event PreciseIdProcess(ch_server_CFIN,id_server,st);
    {62}event Server_Rand_client(id_server,cr);
    {63}event Server_Rand_server(id_server,sr);
    {64}event Server_PSKChoosen(id_server,psk_1);
    {65}event Server_chk(id_server,chk);
    {66}event Server_cfin(id_server,cfin);
    {67}event Server_Cert_server(id_server,s_pkey);
    {68}event Server_Cert_client(id_server,c_pkey);
    {69}new st1[]: stamp;
    {70}event PreciseMess(ch_server_CFIN,id_server,st1,(chk,cfin,master_secret));
    {71}in(io, enc_fin: bitstring);
    {72}let fin_msg: msg = aead_dec(a_alg,chk,c_seq,zero,enc_fin) in
    {73}let FIN(hash_msg: bitstring) = fin_msg in
    {74}if (hash_msg = hmac(h_alg_1,cfin,cur_log)) then
    {76}let h: bitstring = catch-fail(hash(h_alg_1,cur_log)) in
    {77}let v: bool = not-caught-fail(h) in
    {75}let l: label = tls13_client_application_traffic_secret in
    {78}let x: bitstring = (if v then (l,h) else caught-fail) in
    {79}let client_ats: bitstring = catch-fail((if v then hmac(h_alg_1,master_secret,x) else fail-any)) in
    {80}let v_1: bool = not-caught-fail(client_ats) in
    {82}let h_1: bitstring = (if v_1 then catch-fail(hash(h_alg_1,cur_log)) else caught-fail) in
    {83}let v_2: bool = not-caught-fail(h_1) in
    {81}let l_1: label = (if v_1 then tls13_server_application_traffic_secret else caught-fail) in
    {84}let x_1: bitstring = (if v_2 then (l_1,h_1) else caught-fail) in
    {85}let server_ats: bitstring = (if v_1 then catch-fail((if v_2 then hmac(h_alg_1,master_secret,x_1) else fail-any)) else caught-fail) in
    {86}let v_3: bool = not-caught-fail(server_ats) in
    {88}let h_2: bitstring = (if v_3 then catch-fail(hash(h_alg_1,cur_log)) else caught-fail) in
    {89}let v_4: bool = not-caught-fail(h_2) in
    {87}let l_2: label = (if v_3 then tls13_exporter_master_secret else caught-fail) in
    {90}let x_2: bitstring = (if v_4 then (l_2,h_2) else caught-fail) in
    {91}let ems: bitstring = (if v_3 then catch-fail((if v_4 then hmac(h_alg_1,master_secret,x_2) else fail-any)) else caught-fail) in
    {92}let v_5: bool = not-caught-fail(ems) in
    {94}let h_3: bitstring = (if v_5 then zero else caught-fail) in
    {93}let l_3: label = (if v_5 then tls13_key else caught-fail) in
    {95}let x_3: bitstring = (if v_5 then (l_3,h_3) else caught-fail) in
    {96}let client_wkad: bitstring = (if v_5 then catch-fail(hmac(h_alg_1,client_ats,x_3)) else caught-fail) in
    {97}let v_6: bool = not-caught-fail(client_wkad) in
    {99}let h_4: bitstring = (if v_6 then zero else caught-fail) in
    {98}let l_4: label = (if v_6 then tls13_key else caught-fail) in
    {100}let x_4: bitstring = (if v_6 then (l_4,h_4) else caught-fail) in
    {101}let server_wkad: bitstring = (if v_6 then catch-fail(hmac(h_alg_1,server_ats,x_4)) else caught-fail) in
    {102}let v_7: bool = not-caught-fail(server_wkad) in
    {104}let h_5: bitstring = (if v_7 then zero else caught-fail) in
    {103}let l_5: label = (if v_7 then tls13_finished else caught-fail) in
    {105}let x_5: bitstring = (if v_7 then (l_5,h_5) else caught-fail) in
    {106}let client_fkad: bitstring = (if v_7 then catch-fail(hmac(h_alg_1,client_ats,x_5)) else caught-fail) in
    {107}let v_8: bool = not-caught-fail(client_fkad) in
    {108}let (cak: aead_key,sak: aead_key,cfkad: mac_key,ems_1: bitstring) = (if v_1 then (if v_3 then (if v_5 then (if v_6 then (if v_7 then (if v_8 then (client_wkad,server_wkad,client_fkad,ems) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
    {109}let cur_log_CFIN: bitstring = (cur_log,fin_msg) in
    {111}let h_6: bitstring = catch-fail(hash(h_alg_1,cur_log_CFIN)) in
    {112}let v_9: bool = not-caught-fail(h_6) in
    {110}let l_6: label = tls13_resumption_master_secret in
    {113}let x_6: bitstring = (if v_9 then (l_6,h_6) else caught-fail) in
    {114}let rms: bitstring = (if v_9 then hmac(h_alg_1,master_secret,x_6) else fail-any) in
    {115}event Server_cak(id_server,cak);
    {116}event Server_sak(id_server,sak);
    {117}event Server_cfkad(id_server,cfkad);
    {118}event Server_rms(id_server,rms);
    {119}event ServerFinished(id_server,cr,sr,psk_1,s_pkey,c_pkey,cak,sak,ems_1,rms);
    (
        0
    ) | (
        0
    ) | (
        {120}!
        {121}in(io, (seq_srv: nat,seq_client: nat));
        {122}if (is_nat(seq_srv) && is_nat(seq_client)) then
        {123}new req_rand: bitstring;
        {124}event ServerRequestPH(id_server,cr,sr,psk_1,s_pkey,c_pkey,req_rand);
        {127}new st_1[]: stamp;
        {128}event ServerSequenceServerDataWriteKey(id_server,st_1,seq_srv);
        {125}let crtr_msg: msg = CRTR(req_rand) in
        {129}event ServerSends(id_server,cr,sr,psk_1,s_pkey,c_pkey,seq_srv,zero,crtr_msg);
        {126}let enc_crt: bitstring = aead_enc(a_alg,sak,seq_srv,zero,crtr_msg) in
        {130}out(io, enc_crt);
        {132}in(io, enc_cert_msg: bitstring);
        {133}let cert_msg: msg = aead_dec(a_alg,cak,seq_client,zero,enc_cert_msg) in
        {134}new st1_1[]: stamp;
        {135}event ServerSequenceClientDataWriteKey(id_server,st1_1,seq_client);
        {136}event ServerReceives(id_server,cr,sr,psk_1,s_pkey,c_pkey,seq_client,zero,cert_msg);
        {137}let CRT(=req_rand,crt_2: certificate) = cert_msg in
        {139}in(io, enc_cert_verif_msg: bitstring);
        {140}let cert_verify_msg: msg = aead_dec(a_alg,cak,seq_client + 1,zero,enc_cert_verif_msg) in
        {141}new st2[]: stamp;
        {142}event ServerSequenceClientDataWriteKey(id_server,st2,seq_client + 1);
        {143}event ServerReceives(id_server,cr,sr,psk_1,s_pkey,c_pkey,seq_client + 1,zero,cert_verify_msg);
        {144}let CV(signed_log: bitstring) = cert_verify_msg in
        {131}let cur_log_CRTR: bitstring = (cur_log_CFIN,crtr_msg) in
        {138}let cur_log_CRT: bitstring = (cur_log_CRTR,cert_msg) in
        {145}if (verify(get_pkey(crt_2),hash(h_alg_1,cur_log_CRT),signed_log) && verify_cert(crt_2)) then
        {146}let c_pkey': pubkey = get_pkey(crt_2) in
        {148}in(io, enc_fin_1: bitstring);
        {149}let fin_msg_1: msg = aead_dec(a_alg,cak,seq_client + 2,zero,enc_fin_1) in
        {150}new st3[]: stamp;
        {151}event ServerSequenceClientDataWriteKey(id_server,st3,seq_client + 2);
        {152}event ServerReceives(id_server,cr,sr,psk_1,s_pkey,c_pkey,seq_client + 2,zero,fin_msg_1);
        {153}let FIN(hash_msg_1: bitstring) = fin_msg_1 in
        {147}let cur_log_CV: bitstring = (cur_log_CRT,cert_verify_msg) in
        {154}if (hash_msg_1 = hmac(h_alg_1,cfkad,cur_log_CV)) then
            {155}event ServerFinishedPH(id_server,cr,sr,psk_1,s_pkey,c_pkey,req_rand,c_pkey')
        else
            {156}out(io, handshake_failure)
    )
) | (
    {157}!
    {158}in(ch_server_FIN, (id_server_1: idProc,ArgsServerFIN(cr_1: bytes32,sr_1: bytes32,h_alg_2: hash_alg,a_alg_1: aead_alg,s_dom_4: domain,s_pkey_1: pubkey,req_cert: bool,psk_2: preSharedKey,master_secret_1: bitstring,chk_1: aead_key,c_seq_1: nat,shk: aead_key,s_seq: nat,cfin_1: mac_key,sfin: mac_key,cur_log_1: bitstring)));
    {159}new st_2[]: stamp;
    {160}event PreciseIdProcess(ch_server_FIN,id_server_1,st_2);
    {161}event Server_Rand_client(id_server_1,cr_1);
    {162}event Server_Rand_server(id_server_1,sr_1);
    {163}event Server_PSKChoosen(id_server_1,psk_2);
    {164}event Server_chk(id_server_1,chk_1);
    {165}event Server_shk(id_server_1,shk);
    {166}event Server_cfin(id_server_1,cfin_1);
    {167}event Server_sfin(id_server_1,sfin);
    {168}event Server_Cert_server(id_server_1,s_pkey_1);
    {169}new st1_2[]: stamp;
    {170}event PreciseMess(ch_server_FIN,id_server_1,st1_2,(chk_1,shk,master_secret_1));
    {171}let hash_msg_2: bitstring = hmac(h_alg_2,sfin,cur_log_1) in
    {174}event PreServerFinished(id_server_1,cr_1,sr_1,psk_2,s_pkey_1);
    {172}let finished_msg: msg = FIN(hash_msg_2) in
    {173}let enc_finished: bitstring = aead_enc(a_alg_1,shk,s_seq,zero,finished_msg) in
    {175}out(io, enc_finished);
    {176}let cur_log_FIN: bitstring = (cur_log_1,finished_msg) in
    {177}if (req_cert && (psk_2 = NoPsk)) then
    (
        {178}in(io, enc_cert_msg_1: bitstring);
        {179}let cert_msg_1: msg = aead_dec(a_alg_1,chk_1,c_seq_1,zero,enc_cert_msg_1) in
        {180}let CRT(=zero,crt_3: certificate) = cert_msg_1 in
        {182}in(io, enc_cert_verif_msg_1: bitstring);
        {183}let cert_verify_msg_1: msg = aead_dec(a_alg_1,chk_1,c_seq_1 + 1,zero,enc_cert_verif_msg_1) in
        {184}let CV(signed_log_1: bitstring) = cert_verify_msg_1 in
        {181}let cur_log_CRT_1: bitstring = (cur_log_FIN,cert_msg_1) in
        {185}if (verify(get_pkey(crt_3),hash(h_alg_2,cur_log_CRT_1),signed_log_1) && verify_cert(crt_3)) then
        {186}let c_pkey_1: pubkey = get_pkey(crt_3) in
        {188}event Server_Cert_client(id_server_1,c_pkey_1);
        {187}let cur_log_CV_1: bitstring = (cur_log_CRT_1,cert_verify_msg_1) in
        {189}out(ch_server_CFIN, (id_server_1,ArgsServerCFIN(cr_1,sr_1,h_alg_2,a_alg_1,s_dom_4,s_pkey_1,c_pkey_1,psk_2,master_secret_1,chk_1,c_seq_1 + 2,cfin_1,cur_log_CV_1)))
    )
    else
        {190}event Server_Cert_client(id_server_1,NoPubKey);
        {191}out(ch_server_CFIN, (id_server_1,ArgsServerCFIN(cr_1,sr_1,h_alg_2,a_alg_1,s_dom_4,s_pkey_1,NoPubKey,psk_2,master_secret_1,chk_1,c_seq_1,cfin_1,cur_log_FIN)))
) | (
    {192}!
    {193}in(ch_server_CRT, (id_server_2: idProc,ArgsServerCRT(cr_2: bytes32,sr_2: bytes32,h_alg_3: hash_alg,a_alg_2: aead_alg,s_dom_5: domain,req_cert_1: bool,master_secret_2: bitstring,chk_2: aead_key,c_seq_2: nat,shk_1: aead_key,s_seq_1: nat,cfin_2: mac_key,sfin_1: mac_key,cur_log_2: bitstring)));
    {194}new st_3[]: stamp;
    {195}event PreciseIdProcess(ch_server_CRT,id_server_2,st_3);
    {196}event Server_Rand_client(id_server_2,cr_2);
    {197}event Server_Rand_server(id_server_2,sr_2);
    {198}event Server_PSKChoosen(id_server_2,NoPsk);
    {199}event Server_chk(id_server_2,chk_2);
    {200}event Server_shk(id_server_2,shk_1);
    {201}event Server_cfin(id_server_2,cfin_2);
    {202}event Server_sfin(id_server_2,sfin_1);
    {203}new st1_3[]: stamp;
    {204}event PreciseMess(ch_server_CRT,id_server_2,st1_3,(master_secret_2,chk_2,shk_1));
    {222}get long_term_keys(s_dom': domain,sk: privkey,s_pkey_2: pubkey,crt_4: certificate,idP_1: idProc) in
    {206}new @3_st[]: stamp;
    {205}let @3_x: bitstring = (s_dom',sk,s_pkey_2,crt_4,idP_1) in
    {207}event PreciseInput(@3_st,@3_x);
    {208}let () = () in
    {209}event Selected_ltk(s_dom_5,s_dom',idP_1);
    {210}let (sk_1: privkey,s_pkey_3: pubkey,crt_5: certificate) = (sk,s_pkey_2,crt_4) in
    {211}event Server_Cert_server(id_server_2,s_pkey_3);
    {212}let certificate_msg: msg = CRT(zero,crt_5) in
    {213}let encrypted_certificate_msg: bitstring = aead_enc(a_alg_2,shk_1,s_seq_1,zero,certificate_msg) in
    {214}out(io, encrypted_certificate_msg);
    {215}let cur_log_CRT_2: bitstring = (cur_log_2,certificate_msg) in
    {216}let signed_log_2: bitstring = sign(sk_1,hash(h_alg_3,cur_log_CRT_2)) in
    {217}let certificate_verify_msg: msg = CV(signed_log_2) in
    {218}let encrypted_certificate_verify_msg: bitstring = aead_enc(a_alg_2,shk_1,s_seq_1 + 1,zero,certificate_verify_msg) in
    {219}out(io, encrypted_certificate_verify_msg);
    {220}let cur_log_CV_2: bitstring = (cur_log_CRT_2,certificate_verify_msg) in
    {221}out(ch_server_FIN, (id_server_2,ArgsServerFIN(cr_2,sr_2,h_alg_3,a_alg_2,s_dom_5,s_pkey_3,req_cert_1,NoPsk,master_secret_2,chk_2,c_seq_2,shk_1,s_seq_1 + 2,cfin_2,sfin_1,cur_log_CV_2)))
) | (
    {223}!
    {224}in(ch_server_SH, (id_server_3: idProc,ArgsServerSH(tls_g: group,tls_h: hash_alg,tls_a: aead_alg,s_dom_6: domain,req_cert_2: bool,is_backend: bool,use_psk: bool,no_HRR: bool,ee_msg: msg,client_hello: msg,cur_log_3: bitstring)));
    {225}new st_4[]: stamp;
    {226}event PreciseMess(ch_server_SH,id_server_3,st_4,(use_psk,client_hello));
    {227}let CH(cr_3: bytes32,offer: params) = client_hello in
    {228}event Server_Rand_client(id_server_3,cr_3);
    {229}let nego(=TLS13,=tls_h,=tls_a,client_kex_ext(DHE_kex(=tls_g,gx_1: element)),sni_ext: sniExt,ech_ext: echExt,extra_ext: extraExt,psk_ext: preSharedKeyExt) = offer in
    (
        {230}if (sni_ext = SNI(s_dom_6)) then
        (
            {231}event Server_DH_client(id_server_3,gx_1);
            {232}let v_10: msg = client_hello in
            {233}let v_11: bool = (((TLS13 =nf 1-proj-nego(2-proj-CH(v_10))) && success?(1-proj-nego(2-proj-CH(v_10)))) && success?(1-proj-CH(v_10))) in
            {234}let psk_ext_1: preSharedKeyExt = (if v_11 then 8-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {235}let extra_ext_1: extraExt = (if v_11 then 7-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {236}let ech_ext_1: echExt = (if v_11 then 6-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {237}let sni_ext_1: sniExt = (if v_11 then 5-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {238}let kex_ext: keyShareExt = (if v_11 then 4-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {239}let a_alg_3: aead_alg = (if v_11 then 3-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {240}let h_alg_4: hash_alg = (if v_11 then 2-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {241}let cr_4: bytes32 = (if v_11 then 1-proj-CH(v_10) else caught-fail) in
            {242}let v_12: bitstring = (if v_11 then catch-fail((use_psk,psk_ext_1)) else caught-fail) in
            {243}let v_13: bool = (not-caught-fail(v_12) && (((true =nf 1-proj-2-tuple(v_12)) && success?(1-proj-client_psk_ext(2-proj-2-tuple(v_12)))) && success?(1-proj-2-tuple(v_12)))) in
            {244}let binders: bitstring = (if v_13 then 2-proj-client_psk_ext(2-proj-2-tuple(v_12)) else caught-fail) in
            {245}let id_3: identityPsk = (if v_13 then 1-proj-client_psk_ext(2-proj-2-tuple(v_12)) else caught-fail) in
            {246}let v_14: bitstring = (if v_13 then catch-fail((get_server_psk(id_3),get_hash_psk(id_3))) else caught-fail) in
            {247}let v_15: bool = (not-caught-fail(v_14) && (((s_dom_6 =nf 1-proj-2-tuple(v_14)) && (h_alg_4 =nf 2-proj-2-tuple(v_14))) && success?(1-proj-2-tuple(v_14)))) in
            {248}let psk_3: preSharedKey = (if v_15 then catch-fail(get_psk(id_3)) else caught-fail) in
            {249}let v_16: bool = not-caught-fail(psk_3) in
            {251}let k: bitstring = (if v_16 then catch-fail(psk2b(psk_3)) else caught-fail) in
            {252}let v_17: bool = not-caught-fail(k) in
            {250}let s_3: bitstring = (if v_16 then zero else caught-fail) in
            {253}let early_secret: bitstring = (if v_16 then catch-fail((if v_17 then hmac(h_alg_4,s_3,k) else fail-any)) else caught-fail) in
            {254}let v_18: bool = not-caught-fail(early_secret) in
            {256}let m: bitstring = (if v_18 then zero else caught-fail) in
            {257}let h_7: bitstring = (if v_18 then catch-fail(hash(h_alg_4,m)) else caught-fail) in
            {258}let v_19: bool = not-caught-fail(h_7) in
            {255}let l_7: label = (if v_18 then tls13_ext_res_binder else caught-fail) in
            {259}let x_7: bitstring = (if v_19 then (l_7,h_7) else caught-fail) in
            {260}let binder_key: bitstring = (if v_18 then catch-fail((if v_19 then hmac(h_alg_4,early_secret,x_7) else fail-any)) else caught-fail) in
            {261}let v_20: bool = not-caught-fail(binder_key) in
            {262}let v_21: bitstring = (if v_16 then catch-fail((if v_18 then (if v_20 then (early_secret,binder_key) else fail-any) else fail-any)) else caught-fail) in
            {263}let v_22: bool = (not-caught-fail(v_21) && success?(1-proj-2-tuple(v_21))) in
            {264}let kb: mac_key = (if v_22 then 2-proj-2-tuple(v_21) else caught-fail) in
            {265}let early_secret_1: bitstring = (if v_22 then 1-proj-2-tuple(v_21) else caught-fail) in
            {268}let v_23: bool = (v_13 && not(v_15)) in
            {269}let psk_4: preSharedKey = (if v_23 then NoPsk else caught-fail) in
            {271}let k_1: bitstring = (if v_23 then catch-fail(psk2b(psk_4)) else caught-fail) in
            {272}let v_24: bool = not-caught-fail(k_1) in
            {270}let s_4: bitstring = (if v_23 then zero else caught-fail) in
            {273}let early_secret_2: bitstring = (if v_23 then catch-fail((if v_24 then hmac(h_alg_4,s_4,k_1) else fail-any)) else caught-fail) in
            {274}let v_25: bool = not-caught-fail(early_secret_2) in
            {276}let m_1: bitstring = (if v_25 then zero else caught-fail) in
            {277}let h_8: bitstring = (if v_25 then catch-fail(hash(h_alg_4,m_1)) else caught-fail) in
            {278}let v_26: bool = not-caught-fail(h_8) in
            {275}let l_8: label = (if v_25 then tls13_ext_res_binder else caught-fail) in
            {279}let x_8: bitstring = (if v_26 then (l_8,h_8) else caught-fail) in
            {280}let binder_key_1: bitstring = (if v_25 then catch-fail((if v_26 then hmac(h_alg_4,early_secret_2,x_8) else fail-any)) else caught-fail) in
            {281}let v_27: bool = not-caught-fail(binder_key_1) in
            {282}let v_28: bitstring = (if v_23 then catch-fail((if v_25 then (if v_27 then (early_secret_2,binder_key_1) else fail-any) else fail-any)) else caught-fail) in
            {283}let v_29: bool = (not-caught-fail(v_28) && success?(1-proj-2-tuple(v_28))) in
            {284}let kb_1: mac_key = (if v_29 then 2-proj-2-tuple(v_28) else caught-fail) in
            {285}let es: bitstring = (if v_29 then 1-proj-2-tuple(v_28) else caught-fail) in
            {286}let v_30: bool = (v_11 && not(v_13)) in
            {287}let psk_5: preSharedKey = (if v_30 then NoPsk else caught-fail) in
            {289}let k_2: bitstring = (if v_30 then catch-fail(psk2b(psk_5)) else caught-fail) in
            {290}let v_31: bool = not-caught-fail(k_2) in
            {288}let s_5: bitstring = (if v_30 then zero else caught-fail) in
            {291}let early_secret_3: bitstring = (if v_30 then catch-fail((if v_31 then hmac(h_alg_4,s_5,k_2) else fail-any)) else caught-fail) in
            {292}let v_32: bool = not-caught-fail(early_secret_3) in
            {294}let m_2: bitstring = (if v_32 then zero else caught-fail) in
            {295}let h_9: bitstring = (if v_32 then catch-fail(hash(h_alg_4,m_2)) else caught-fail) in
            {296}let v_33: bool = not-caught-fail(h_9) in
            {293}let l_9: label = (if v_32 then tls13_ext_res_binder else caught-fail) in
            {297}let x_9: bitstring = (if v_33 then (l_9,h_9) else caught-fail) in
            {298}let binder_key_2: bitstring = (if v_32 then catch-fail((if v_33 then hmac(h_alg_4,early_secret_3,x_9) else fail-any)) else caught-fail) in
            {299}let v_34: bool = not-caught-fail(binder_key_2) in
            {300}let v_35: bitstring = (if v_30 then catch-fail((if v_32 then (if v_34 then (early_secret_3,binder_key_2) else fail-any) else fail-any)) else caught-fail) in
            {301}let v_36: bool = (not-caught-fail(v_35) && success?(1-proj-2-tuple(v_35))) in
            {302}let kb_2: mac_key = (if v_36 then 2-proj-2-tuple(v_35) else caught-fail) in
            {303}let es_1: bitstring = (if v_36 then 1-proj-2-tuple(v_35) else caught-fail) in
            {266}let offer_1: params = (if v_22 then nego(TLS13,h_alg_4,a_alg_3,kex_ext,sni_ext_1,ech_ext_1,extra_ext_1,trunc_client_psk_ext(id_3)) else caught-fail) in
            {267}let cur_log': bitstring = (if v_22 then (cur_log_3,CH(cr_4,offer_1)) else caught-fail) in
            {304}let (early_secret_4: bitstring,s_psk_ext: preSharedKeyExt,psk_6: preSharedKey) = (if v_11 then (if v_13 then (if v_15 then (if v_16 then (if v_22 then (if (binders = hmac(h_alg_4,kb,cur_log')) then (early_secret_1,server_psk_ext(1),psk_3) else fail-any) else fail-any) else fail-any) else (if v_29 then (es,empty_psk_ext,NoPsk) else fail-any)) else (if v_36 then (es_1,empty_psk_ext,NoPsk) else fail-any)) else fail-any) in
            {305}event Server_PSKChoosen(id_server_3,psk_6);
            {306}let cur_log_CH: bitstring = (cur_log_3,client_hello) in
            (
                {307}if (false && (no_HRR && (psk_6 ≠ NoPsk))) then
                {308}!
                {309}in(io, (i: nat,ad: bitstring,enc_early_data: bitstring));
                {311}let h_10: bitstring = catch-fail(hash(tls_h,cur_log_CH)) in
                {312}let v_37: bool = not-caught-fail(h_10) in
                {310}let l_10: label = tls13_client_early_traffic_secret in
                {313}let x_10: bitstring = (if v_37 then (l_10,h_10) else caught-fail) in
                {314}let atsc0: bitstring = catch-fail((if v_37 then hmac(tls_h,early_secret_4,x_10) else fail-any)) in
                {315}let v_38: bool = not-caught-fail(atsc0) in
                {317}let h_11: bitstring = (if v_38 then zero else caught-fail) in
                {316}let l_11: label = (if v_38 then tls13_key else caught-fail) in
                {318}let x_11: bitstring = (if v_38 then (l_11,h_11) else caught-fail) in
                {319}let kc0: bitstring = (if v_38 then catch-fail(hmac(tls_h,atsc0,x_11)) else caught-fail) in
                {320}let v_39: bool = not-caught-fail(kc0) in
                {322}let h_12: bitstring = (if v_39 then catch-fail(hash(tls_h,cur_log_CH)) else caught-fail) in
                {323}let v_40: bool = not-caught-fail(h_12) in
                {321}let l_12: label = (if v_39 then tls13_early_exporter_master_secret else caught-fail) in
                {324}let x_12: bitstring = (if v_40 then (l_12,h_12) else caught-fail) in
                {325}let ems0: bitstring = (if v_39 then catch-fail((if v_40 then hmac(tls_h,early_secret_4,x_12) else fail-any)) else caught-fail) in
                {326}let v_41: bool = not-caught-fail(ems0) in
                {327}let (wkc0: aead_key,ems0_1: bitstring) = (if v_38 then (if v_39 then (if v_41 then (kc0,ems0) else fail-any) else fail-any) else fail-any) in
                {328}let early_data: bitstring = aead_dec(tls_a,wkc0,i,ad,enc_early_data) in
                    {329}new st1_4[]: stamp;
                    {330}event ServerSequenceClient0RTTDataWriteKey(id_server_3,st1_4,i);
                    {331}event ServerReceives0(id_server_3,s_dom_6,cr_3,psk_6,i,ad,early_data)
                else
                    {332}out(io, bad_record_mac)
            ) | (
                {333}new s_6[]: seed;
                {334}let (gxy: element,gy: element) = (dh_xy(s_6,client_hello),dh_encap_fun(tls_g,gx_1,dh_xy(s_6,client_hello))) in
                {335}event Server_DH_server(id_server_3,gy);
                {336}event Server_DH_gxy(id_server_3,gxy);
                {338}let m_3: bitstring = catch-fail(hash(tls_h,zero)) in
                {339}let v_42: bool = not-caught-fail(m_3) in
                {340}let h_13: bitstring = (if v_42 then catch-fail(hash(tls_h,m_3)) else caught-fail) in
                {341}let v_43: bool = not-caught-fail(h_13) in
                {337}let l_13: label = tls13_derived in
                {342}let x_13: bitstring = (if v_43 then (l_13,h_13) else caught-fail) in
                {343}let extra: bitstring = catch-fail((if v_42 then (if v_43 then hmac(tls_h,early_secret_4,x_13) else fail-any) else fail-any)) in
                {344}let v_44: bool = not-caught-fail(extra) in
                {345}let handshake_secret: bitstring = (if v_44 then hmac(tls_h,extra,gxy) else fail-any) in
                {348}new sr24[]: bytes24;
                {363}new rand24[]: bytes24;
                {364}new rand8[]: bytes8;
                {347}let v_45: bool = is_backend in
                {349}let sr24_1: bytes24 = (if v_45 then sr24 else caught-fail) in
                {346}let s_offer: params = nego(TLS13,tls_h,tls_a,server_kex_ext(DHE_kex(tls_g,gy)),empty_sni_ext,empty_ech_ext,empty_extra_ext,s_psk_ext) in
                {350}let sh_modified: msg = (if v_45 then SH(B32(sr24_1,zero8),s_offer) else caught-fail) in
                {351}let cur_log_sh: bitstring = (if v_45 then (cur_log_CH,sh_modified) else caught-fail) in
                {352}let transcript_ech_conf: bitstring = (if v_45 then catch-fail(hash(tls_h,cur_log_sh)) else caught-fail) in
                {353}let v_46: bool = not-caught-fail(transcript_ech_conf) in
                {355}let k_3: bitstring = (if v_46 then catch-fail(b32_2_b(get_random(client_hello))) else caught-fail) in
                {356}let v_47: bool = not-caught-fail(k_3) in
                {354}let s_7: bitstring = (if v_46 then zero else caught-fail) in
                {357}let k_4: bitstring = (if v_46 then catch-fail((if v_47 then hmac(tls_h,s_7,k_3) else fail-any)) else caught-fail) in
                {358}let v_48: bool = not-caught-fail(k_4) in
                {359}let l_14: label = (if v_48 then ech_accept_confirmation else caught-fail) in
                {360}let x_14: bitstring = (if v_48 then (l_14,cur_log_sh) else caught-fail) in
                {361}let sr8: bytes8 = (if v_46 then catch-fail(crop_into_bytes8((if v_48 then hmac(tls_h,k_4,x_14) else fail-any))) else caught-fail) in
                {362}let v_49: bool = not-caught-fail(sr8) in
                {365}let sr_3: bytes32 = (if v_45 then (if v_46 then (if v_49 then B32(sr24_1,sr8) else fail-any) else fail-any) else B32(rand24,rand8)) in
                {367}event Server_Rand_server(id_server_3,sr_3);
                {368}event ServerChoosesGroup(id_server_3,tls_g);
                {369}event ServerChoosesHash(cr_3,sr_3,tls_h);
                {370}event ServerChoosesAead(cr_3,sr_3,tls_a);
                {366}let server_hello: msg = SH(sr_3,s_offer) in
                {371}out(io, server_hello);
                {374}let m_4: bitstring = catch-fail(hash(tls_h,zero)) in
                {375}let v_50: bool = not-caught-fail(m_4) in
                {376}let h_14: bitstring = (if v_50 then catch-fail(hash(tls_h,m_4)) else caught-fail) in
                {377}let v_51: bool = not-caught-fail(h_14) in
                {373}let l_15: label = tls13_derived in
                {378}let x_15: bitstring = (if v_51 then (l_15,h_14) else caught-fail) in
                {379}let extra_1: bitstring = catch-fail((if v_50 then (if v_51 then hmac(tls_h,handshake_secret,x_15) else fail-any) else fail-any)) in
                {380}let v_52: bool = not-caught-fail(extra_1) in
                {381}let k_5: bitstring = (if v_52 then zero else caught-fail) in
                {382}let master_secret_3: bitstring = (if v_52 then catch-fail(hmac(tls_h,handshake_secret,k_5)) else caught-fail) in
                {383}let v_53: bool = not-caught-fail(master_secret_3) in
                {372}let cur_log_SH: bitstring = (cur_log_CH,server_hello) in
                {385}let h_15: bitstring = (if v_53 then catch-fail(hash(tls_h,cur_log_SH)) else caught-fail) in
                {386}let v_54: bool = not-caught-fail(h_15) in
                {384}let l_16: label = (if v_53 then tls13_client_handshake_traffic_secret else caught-fail) in
                {387}let x_16: bitstring = (if v_54 then (l_16,h_15) else caught-fail) in
                {388}let client_hts: bitstring = (if v_53 then catch-fail((if v_54 then hmac(tls_h,handshake_secret,x_16) else fail-any)) else caught-fail) in
                {389}let v_55: bool = not-caught-fail(client_hts) in
                {391}let h_16: bitstring = (if v_55 then catch-fail(hash(tls_h,cur_log_SH)) else caught-fail) in
                {392}let v_56: bool = not-caught-fail(h_16) in
                {390}let l_17: label = (if v_55 then tls13_server_handshake_traffic_secret else caught-fail) in
                {393}let x_17: bitstring = (if v_56 then (l_17,h_16) else caught-fail) in
                {394}let server_hts: bitstring = (if v_55 then catch-fail((if v_56 then hmac(tls_h,handshake_secret,x_17) else fail-any)) else caught-fail) in
                {395}let v_57: bool = not-caught-fail(server_hts) in
                {397}let h_17: bitstring = (if v_57 then zero else caught-fail) in
                {396}let l_18: label = (if v_57 then tls13_key else caught-fail) in
                {398}let x_18: bitstring = (if v_57 then (l_18,h_17) else caught-fail) in
                {399}let client_wkh: bitstring = (if v_57 then catch-fail(hmac(tls_h,client_hts,x_18)) else caught-fail) in
                {400}let v_58: bool = not-caught-fail(client_wkh) in
                {402}let h_18: bitstring = (if v_58 then zero else caught-fail) in
                {401}let l_19: label = (if v_58 then tls13_key else caught-fail) in
                {403}let x_19: bitstring = (if v_58 then (l_19,h_18) else caught-fail) in
                {404}let server_wkh: bitstring = (if v_58 then catch-fail(hmac(tls_h,server_hts,x_19)) else caught-fail) in
                {405}let v_59: bool = not-caught-fail(server_wkh) in
                {407}let h_19: bitstring = (if v_59 then zero else caught-fail) in
                {406}let l_20: label = (if v_59 then tls13_finished else caught-fail) in
                {408}let x_20: bitstring = (if v_59 then (l_20,h_19) else caught-fail) in
                {409}let client_fk: bitstring = (if v_59 then catch-fail(hmac(tls_h,client_hts,x_20)) else caught-fail) in
                {410}let v_60: bool = not-caught-fail(client_fk) in
                {412}let h_20: bitstring = (if v_60 then zero else caught-fail) in
                {411}let l_21: label = (if v_60 then tls13_finished else caught-fail) in
                {413}let x_21: bitstring = (if v_60 then (l_21,h_20) else caught-fail) in
                {414}let server_fk: bitstring = (if v_60 then catch-fail(hmac(tls_h,server_hts,x_21)) else caught-fail) in
                {415}let v_61: bool = not-caught-fail(server_fk) in
                {416}let (master_secret_4: bitstring,chk_3: aead_key,shk_2: aead_key,cfin_3: mac_key,sfin_2: mac_key) = (if v_52 then (if v_53 then (if v_55 then (if v_57 then (if v_58 then (if v_59 then (if v_60 then (if v_61 then (master_secret_3,client_wkh,server_wkh,client_fk,server_fk) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                {417}event Server_chk(id_server_3,chk_3);
                {418}event Server_shk(id_server_3,shk_2);
                {419}event Server_cfin(id_server_3,cfin_3);
                {420}event Server_sfin(id_server_3,sfin_2);
                {421}let enc_ee: bitstring = aead_enc(tls_a,shk_2,0,zero,ee_msg) in
                {422}out(io, enc_ee);
                {423}let cur_log_EE: bitstring = (cur_log_SH,ee_msg) in
                {424}if (psk_6 = NoPsk) then
                (
                    {425}if req_cert_2 then
                    (
                        {426}let crtr_msg_1: msg = CRTR(zero) in
                        {427}let enc_crt_1: bitstring = aead_enc(tls_a,shk_2,1,zero,crtr_msg_1) in
                        {428}out(io, enc_crt_1);
                        {429}let cur_log_CRTR_1: bitstring = (cur_log_EE,crtr_msg_1) in
                        {430}out(ch_server_CRT, (id_server_3,ArgsServerCRT(cr_3,sr_3,tls_h,tls_a,s_dom_6,req_cert_2,master_secret_4,chk_3,0,shk_2,2,cfin_3,sfin_2,cur_log_CRTR_1)))
                    )
                    else
                        {431}out(ch_server_CRT, (id_server_3,ArgsServerCRT(cr_3,sr_3,tls_h,tls_a,s_dom_6,req_cert_2,master_secret_4,chk_3,0,shk_2,1,cfin_3,sfin_2,cur_log_EE)))
                )
                else
                    {432}out(ch_server_FIN, (id_server_3,ArgsServerFIN(cr_3,sr_3,tls_h,tls_a,s_dom_6,NoPubKey,false,psk_6,master_secret_4,chk_3,0,shk_2,1,cfin_3,sfin_2,cur_log_EE)))
            )
        )
        else
            {433}out(io, illegal_parameter)
    )
    else
        {434}out(io, handshake_failure)
) | (
    {435}!
    {436}in(ch_client_CFIN, (id_client: idProc,ArgsClientCFIN(cr_5: bytes32,sr_4: bytes32,h_alg_5: hash_alg,a_alg_4: aead_alg,c_dom_1: domain,s_dom_7: domain,s_pkey_4: pubkey,c_pkey_2: pubkey,psk_7: preSharedKey,safe_psk: bool,comp_psk: bool,master_secret_5: bitstring,chk_4: aead_key,seq_client_1: nat,shk_3: aead_key,seq_srv_1: nat,cfin_4: mac_key,sfin_3: mac_key,cur_log_4: bitstring)));
    {437}new st_5[]: stamp;
    {438}event PreciseIdProcess(ch_client_CFIN,id_client,st_5);
    {439}event Client_server_domain(id_client,s_dom_7);
    {440}event Client_Rand_client(id_client,cr_5);
    {441}event Client_Rand_server(id_client,sr_4);
    {442}event Client_PSKChoosen(id_client,psk_7,safe_psk);
    {443}event Client_comp_psk(id_client,comp_psk);
    {444}event Client_chk(id_client,chk_4);
    {445}event Client_shk(id_client,shk_3);
    {446}event Client_cfin(id_client,cfin_4);
    {447}event Client_sfin(id_client,sfin_3);
    {448}event Client_Cert_server(id_client,s_pkey_4);
    {449}event Client_Cert_client(id_client,c_pkey_2);
    {450}new st1_5[]: stamp;
    {451}let args: bitstring = (c_dom_1,s_dom_7,psk_7,s_pkey_4,master_secret_5,safe_psk,comp_psk,cur_log_4) in
    {452}event PreciseMess(ch_client_CFIN,id_client,st1_5,args);
    {454}let h_21: bitstring = catch-fail(hash(h_alg_5,cur_log_4)) in
    {455}let v_62: bool = not-caught-fail(h_21) in
    {453}let l_22: label = tls13_client_application_traffic_secret in
    {456}let x_22: bitstring = (if v_62 then (l_22,h_21) else caught-fail) in
    {457}let client_ats_1: bitstring = catch-fail((if v_62 then hmac(h_alg_5,master_secret_5,x_22) else fail-any)) in
    {458}let v_63: bool = not-caught-fail(client_ats_1) in
    {460}let h_22: bitstring = (if v_63 then catch-fail(hash(h_alg_5,cur_log_4)) else caught-fail) in
    {461}let v_64: bool = not-caught-fail(h_22) in
    {459}let l_23: label = (if v_63 then tls13_server_application_traffic_secret else caught-fail) in
    {462}let x_23: bitstring = (if v_64 then (l_23,h_22) else caught-fail) in
    {463}let server_ats_1: bitstring = (if v_63 then catch-fail((if v_64 then hmac(h_alg_5,master_secret_5,x_23) else fail-any)) else caught-fail) in
    {464}let v_65: bool = not-caught-fail(server_ats_1) in
    {466}let h_23: bitstring = (if v_65 then catch-fail(hash(h_alg_5,cur_log_4)) else caught-fail) in
    {467}let v_66: bool = not-caught-fail(h_23) in
    {465}let l_24: label = (if v_65 then tls13_exporter_master_secret else caught-fail) in
    {468}let x_24: bitstring = (if v_66 then (l_24,h_23) else caught-fail) in
    {469}let ems_2: bitstring = (if v_65 then catch-fail((if v_66 then hmac(h_alg_5,master_secret_5,x_24) else fail-any)) else caught-fail) in
    {470}let v_67: bool = not-caught-fail(ems_2) in
    {472}let h_24: bitstring = (if v_67 then zero else caught-fail) in
    {471}let l_25: label = (if v_67 then tls13_key else caught-fail) in
    {473}let x_25: bitstring = (if v_67 then (l_25,h_24) else caught-fail) in
    {474}let client_wkad_1: bitstring = (if v_67 then catch-fail(hmac(h_alg_5,client_ats_1,x_25)) else caught-fail) in
    {475}let v_68: bool = not-caught-fail(client_wkad_1) in
    {477}let h_25: bitstring = (if v_68 then zero else caught-fail) in
    {476}let l_26: label = (if v_68 then tls13_key else caught-fail) in
    {478}let x_26: bitstring = (if v_68 then (l_26,h_25) else caught-fail) in
    {479}let server_wkad_1: bitstring = (if v_68 then catch-fail(hmac(h_alg_5,server_ats_1,x_26)) else caught-fail) in
    {480}let v_69: bool = not-caught-fail(server_wkad_1) in
    {482}let h_26: bitstring = (if v_69 then zero else caught-fail) in
    {481}let l_27: label = (if v_69 then tls13_finished else caught-fail) in
    {483}let x_27: bitstring = (if v_69 then (l_27,h_26) else caught-fail) in
    {484}let client_fkad_1: bitstring = (if v_69 then catch-fail(hmac(h_alg_5,client_ats_1,x_27)) else caught-fail) in
    {485}let v_70: bool = not-caught-fail(client_fkad_1) in
    {486}let (cak_1: aead_key,sak_1: aead_key,cfkad_1: mac_key,ems_3: bitstring) = (if v_63 then (if v_65 then (if v_67 then (if v_68 then (if v_69 then (if v_70 then (client_wkad_1,server_wkad_1,client_fkad_1,ems_2) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
    {487}event Client_cak(id_client,cak_1);
    {488}event Client_sak(id_client,sak_1);
    {489}event Client_cfkad(id_client,cfkad_1);
    {490}let client_hash_msg: bitstring = hmac(h_alg_5,cfin_4,cur_log_4) in
    {491}let client_finished_msg: msg = FIN(client_hash_msg) in
    {492}let cur_log'_1: bitstring = (cur_log_4,client_finished_msg) in
    {494}let h_27: bitstring = catch-fail(hash(h_alg_5,cur_log'_1)) in
    {495}let v_71: bool = not-caught-fail(h_27) in
    {493}let l_28: label = tls13_resumption_master_secret in
    {496}let x_28: bitstring = (if v_71 then (l_28,h_27) else caught-fail) in
    {497}let rms_1: bitstring = (if v_71 then hmac(h_alg_5,master_secret_5,x_28) else fail-any) in
    {498}event Client_rms(id_client,rms_1);
    {500}event ClientFinished(id_client,cr_5,sr_4,psk_7,s_pkey_4,c_pkey_2,cak_1,sak_1,ems_3,rms_1);
    {499}let enc_client_finished_msg: bitstring = aead_enc(a_alg_4,chk_4,seq_client_1,zero,client_finished_msg) in
    {501}out(io, enc_client_finished_msg);
    (
        0
    ) | (
        0
    ) | (
        {502}!
        {503}in(io, (seq_srv_2: nat,seq_client_2: nat));
        {504}if (is_nat(seq_srv_2) && is_nat(seq_client_2)) then
        {505}in(io, enc_msg: bitstring);
        {506}let CRTR(rand_crt: bitstring) = aead_dec(a_alg_4,sak_1,seq_srv_2,zero,enc_msg) in
        {507}new st_6[]: stamp;
        {508}event ClientSequenceServerDataWriteKey(id_client,st_6,seq_srv_2);
        {509}event ClientReceives(id_client,cr_5,sr_4,psk_7,s_pkey_4,c_pkey_2,seq_srv_2,zero,CRTR(rand_crt));
        {539}get long_term_keys(c_dom': domain,sk_2: privkey,c_pkey'_1: pubkey,crt_6: certificate,idP_2: idProc) in
        {512}new @1_st[]: stamp;
        {511}let @1_x: bitstring = (c_dom',sk_2,c_pkey'_1,crt_6,idP_2) in
        {513}event PreciseInput(@1_st,@1_x);
        {514}let () = () in
        {515}event Selected_ltk(c_dom_1,c_dom',idP_2);
        {516}let (sk_3: privkey,c_pkey'_2: pubkey,crt_7: certificate) = (sk_2,c_pkey'_1,crt_6) in
        {519}new st1_6[]: stamp;
        {520}event ClientSequenceClientDataWriteKey(id_client,st1_6,seq_client_2);
        {517}let certificate_msg_1: msg = CRT(rand_crt,crt_7) in
        {521}event ClientSends(id_client,cr_5,sr_4,psk_7,s_pkey_4,c_pkey_2,seq_client_2,zero,certificate_msg_1);
        {518}let encrypted_certificate_msg_1: bitstring = aead_enc(a_alg_4,cak_1,seq_client_2,zero,certificate_msg_1) in
        {522}out(io, encrypted_certificate_msg_1);
        {510}let cur_log_CRTR_2: bitstring = (cur_log'_1,CRTR(rand_crt)) in
        {523}let cur_log_CRT_3: bitstring = (cur_log_CRTR_2,certificate_msg_1) in
        {524}let signed_log_3: bitstring = sign(sk_3,hash(h_alg_5,cur_log_CRT_3)) in
        {527}new st2_1[]: stamp;
        {528}event ClientSequenceClientDataWriteKey(id_client,st2_1,seq_client_2 + 1);
        {525}let certificate_verify_msg_1: msg = CV(signed_log_3) in
        {529}event ClientSends(id_client,cr_5,sr_4,psk_7,s_pkey_4,c_pkey_2,seq_client_2 + 1,zero,certificate_verify_msg_1);
        {526}let enc_verify_msg: bitstring = aead_enc(a_alg_4,cak_1,seq_client_2 + 1,zero,certificate_verify_msg_1) in
        {530}out(io, enc_verify_msg);
        {531}let cur_log_CV_3: bitstring = (cur_log_CRT_3,certificate_verify_msg_1) in
        {532}let hash_msg_3: bitstring = hmac(h_alg_5,cfkad_1,cur_log_CV_3) in
        {534}new st3_1[]: stamp;
        {535}event ClientSequenceClientDataWriteKey(id_client,st3_1,seq_client_2 + 2);
        {536}event ClientSends(id_client,cr_5,sr_4,psk_7,s_pkey_4,c_pkey_2,seq_client_2 + 2,zero,FIN(hash_msg_3));
        {537}event ClientFinishedPH(id_client,cr_5,sr_4,psk_7,s_pkey_4,c_pkey_2,rand_crt,c_pkey'_2);
        {533}let enc_fin_2: bitstring = aead_enc(a_alg_4,cak_1,seq_client_2 + 2,zero,FIN(hash_msg_3)) in
        {538}out(io, enc_fin_2)
    )
) | (
    {540}!
    {541}in(ch_client_FIN, (id_client_1: idProc,ArgsClientFIN(cr_6: bytes32,sr_5: bytes32,h_alg_6: hash_alg,a_alg_5: aead_alg,c_dom_2: domain,s_dom_8: domain,s_pkey_5: pubkey,cert_req: bool,psk_8: preSharedKey,safe_psk_1: bool,comp_psk_1: bool,master_secret_6: bitstring,chk_5: aead_key,seq_client_3: nat,shk_4: aead_key,seq_srv_3: nat,cfin_5: mac_key,sfin_4: mac_key,cur_log_5: bitstring)));
    {542}new st_7[]: stamp;
    {543}event PreciseIdProcess(ch_client_FIN,id_client_1,st_7);
    {544}event Client_server_domain(id_client_1,s_dom_8);
    {545}event Client_Rand_client(id_client_1,cr_6);
    {546}event Client_Rand_server(id_client_1,sr_5);
    {547}event Client_PSKChoosen(id_client_1,psk_8,safe_psk_1);
    {548}event Client_comp_psk(id_client_1,comp_psk_1);
    {549}event Client_chk(id_client_1,chk_5);
    {550}event Client_shk(id_client_1,shk_4);
    {551}event Client_cfin(id_client_1,cfin_5);
    {552}event Client_sfin(id_client_1,sfin_4);
    {553}event Client_Cert_server(id_client_1,s_pkey_5);
    {554}new st1_7[]: stamp;
    {555}event PreciseMess(ch_client_FIN,id_client_1,st1_7,(master_secret_6,s_pkey_5,psk_8,safe_psk_1,comp_psk_1));
    {556}in(io, enc_finished_msg: bitstring);
    {557}let finished_msg_1: msg = aead_dec(a_alg_5,shk_4,seq_srv_3,zero,enc_finished_msg) in
    (
        {558}let FIN(hash_msg_4: bitstring) = finished_msg_1 in
        (
            {559}if (hash_msg_4 = hmac(h_alg_6,sfin_4,cur_log_5)) then
            {560}let cur_log2: bitstring = (cur_log_5,finished_msg_1) in
            {561}if cert_req then
            (
                {580}get long_term_keys(c_dom'_1: domain,sk_4: privkey,c_pkey_3: pubkey,crt_8: certificate,idP_3: idProc) in
                {564}new @2_st[]: stamp;
                {563}let @2_x: bitstring = (c_dom'_1,sk_4,c_pkey_3,crt_8,idP_3) in
                {565}event PreciseInput(@2_st,@2_x);
                {566}let () = () in
                {567}event Selected_ltk(c_dom_2,c_dom'_1,idP_3);
                {568}let (sk_5: privkey,c_pkey_4: pubkey,crt_9: certificate) = (sk_4,c_pkey_3,crt_8) in
                {569}event Client_Cert_client(id_client_1,c_pkey_4);
                {570}let certificate_msg_2: msg = CRT(zero,crt_9) in
                {571}let encrypted_certificate_msg_2: bitstring = aead_enc(a_alg_5,chk_5,seq_client_3,zero,certificate_msg_2) in
                {572}out(io, encrypted_certificate_msg_2);
                {573}let cur_log2_1: bitstring = (cur_log2,certificate_msg_2) in
                {574}let signed_log_4: bitstring = sign(sk_5,hash(h_alg_6,cur_log2_1)) in
                {575}let certificate_verify_msg_2: msg = CV(signed_log_4) in
                {576}let encrypted_certificate_verify_msg_1: bitstring = aead_enc(a_alg_5,chk_5,seq_client_3 + 1,zero,certificate_verify_msg_2) in
                {577}out(io, encrypted_certificate_verify_msg_1);
                {578}let cur_log3: bitstring = (cur_log2_1,certificate_verify_msg_2) in
                {562}let seq_srv_4: nat = seq_srv_3 + 1 in
                {579}out(ch_client_CFIN, (id_client_1,ArgsClientCFIN(cr_6,sr_5,h_alg_6,a_alg_5,c_dom_2,s_dom_8,s_pkey_5,c_pkey_4,NoPsk,false,comp_psk_1,master_secret_6,chk_5,seq_client_3 + 2,shk_4,seq_srv_4,cfin_5,sfin_4,cur_log3)))
            )
            else
                {581}event Client_Cert_client(id_client_1,NoPubKey);
                {582}out(ch_client_CFIN, (id_client_1,ArgsClientCFIN(cr_6,sr_5,h_alg_6,a_alg_5,c_dom_2,s_dom_8,s_pkey_5,NoPubKey,psk_8,safe_psk_1,comp_psk_1,master_secret_6,chk_5,seq_client_3,shk_4,seq_srv_3 + 1,cfin_5,sfin_4,cur_log2)))
        )
        else
            {583}out(io, unexpected_message)
    )
    else
        {584}out(io, bad_record_mac)
) | (
    {585}!
    {586}in(ch_client_CRT, (id_client_2: idProc,ArgsClientCRT(cr_7: bytes32,sr_6: bytes32,h_alg_7: hash_alg,a_alg_6: aead_alg,c_dom_3: domain,s_dom_9: domain,cert_req_1: bool,certificate_msg_3: msg,comp_psk_2: bool,master_secret_7: bitstring,chk_6: aead_key,seq_client_4: nat,shk_5: aead_key,seq_srv_5: nat,cfin_6: mac_key,sfin_5: mac_key,cur_log_6: bitstring)));
    {587}new st_8[]: stamp;
    {588}event PreciseIdProcess(ch_client_CRT,id_client_2,st_8);
    {589}event Client_server_domain(id_client_2,s_dom_9);
    {590}event Client_Rand_client(id_client_2,cr_7);
    {591}event Client_Rand_server(id_client_2,sr_6);
    {592}event Client_comp_psk(id_client_2,comp_psk_2);
    {593}event Client_chk(id_client_2,chk_6);
    {594}event Client_shk(id_client_2,shk_5);
    {595}event Client_cfin(id_client_2,cfin_6);
    {596}event Client_sfin(id_client_2,sfin_5);
    {597}let CRT(=zero,crt_10: certificate) = certificate_msg_3 in
    {599}in(io, enc_crt_verif_msg: bitstring);
    {600}let certificate_verify_msg_3: msg = aead_dec(a_alg_6,shk_5,seq_srv_5,zero,enc_crt_verif_msg) in
    {601}let CV(signed_log_5: bitstring) = certificate_verify_msg_3 in
    {598}let cur_log2_2: bitstring = (cur_log_6,certificate_msg_3) in
    {602}if (verify(get_pkey(crt_10),hash(h_alg_7,cur_log2_2),signed_log_5) && ((get_domain(crt_10) = s_dom_9) && verify_cert(crt_10))) then
    {603}let s_pkey_6: pubkey = get_pkey(crt_10) in
    {605}event Client_Cert_server(id_client_2,s_pkey_6);
    {604}let cur_log3_1: bitstring = (cur_log2_2,certificate_verify_msg_3) in
    {606}out(ch_client_FIN, (id_client_2,ArgsClientFIN(cr_7,sr_6,h_alg_7,a_alg_6,c_dom_3,s_dom_9,s_pkey_6,cert_req_1,NoPsk,false,comp_psk_2,master_secret_7,chk_6,seq_client_4,shk_5,seq_srv_5 + 1,cfin_6,sfin_5,cur_log3_1)))
) | (
    {607}!
    {608}in(ch_client_after_EE, (id_client_3: idProc,ArgsClientAfterEE(cr_8: bytes32,sr_7: bytes32,h_alg_8: hash_alg,a_alg_7: aead_alg,c_dom_4: domain,s_dom_10: domain,psk_9: preSharedKey,safe_psk_2: bool,comp_psk_3: bool,master_secret_8: bitstring,chk_7: aead_key,seq_client_5: nat,shk_6: aead_key,seq_srv_6: nat,cfin_7: mac_key,sfin_6: mac_key,cur_log_7: bitstring)));
    {609}new st_9[]: stamp;
    {610}event PreciseIdProcess(ch_client_after_EE,id_client_3,st_9);
    {611}event Client_server_domain(id_client_3,s_dom_10);
    {612}event Client_Rand_client(id_client_3,cr_8);
    {613}event Client_Rand_server(id_client_3,sr_7);
    {614}event Client_PSKChoosen(id_client_3,psk_9,safe_psk_2);
    {615}event Client_comp_psk(id_client_3,comp_psk_3);
    {616}event Client_chk(id_client_3,chk_7);
    {617}event Client_shk(id_client_3,shk_6);
    {618}event Client_cfin(id_client_3,cfin_7);
    {619}event Client_sfin(id_client_3,sfin_6);
    {620}new st1_8[]: stamp;
    {621}event PreciseMess(ch_client_after_EE,id_client_3,st1_8,master_secret_8);
    {622}if (psk_9 = NoPsk) then
    (
        {623}in(io, enc_msg_1: bitstring);
        {624}let msg': msg = aead_dec(a_alg_7,shk_6,seq_srv_6,zero,enc_msg_1) in
        {625}let CRTR(=zero) = msg' in
        (
            {627}in(io, enc_crt_msg: bitstring);
            {628}let certificate_msg_4: msg = aead_dec(a_alg_7,shk_6,seq_srv_6 + 1,zero,enc_crt_msg) in
            {626}let cur_log2_3: bitstring = (cur_log_7,msg') in
            {629}out(ch_client_CRT, (id_client_3,ArgsClientCRT(cr_8,sr_7,h_alg_8,a_alg_7,c_dom_4,s_dom_10,true,certificate_msg_4,comp_psk_3,master_secret_8,chk_7,seq_client_5,shk_6,seq_srv_6 + 2,cfin_7,sfin_6,cur_log2_3)))
        )
        else
            {630}let CRT(=zero,crt_11: certificate) = msg' in
                {631}out(ch_client_CRT, (id_client_3,ArgsClientCRT(cr_8,sr_7,h_alg_8,a_alg_7,c_dom_4,s_dom_10,false,msg',comp_psk_3,master_secret_8,chk_7,seq_client_5,shk_6,seq_srv_6 + 1,cfin_7,sfin_6,cur_log_7)))
            else
                {632}out(io, unexpected_message)
    )
    else
        {633}event Client_Cert_server(id_client_3,NoPubKey);
        {634}out(ch_client_FIN, (id_client_3,ArgsClientFIN(cr_8,sr_7,h_alg_8,a_alg_7,c_dom_4,s_dom_10,NoPubKey,false,psk_9,safe_psk_2,comp_psk_3,master_secret_8,chk_7,seq_client_5,shk_6,seq_srv_6,cfin_7,sfin_6,cur_log_7)))
) | (
    {635}!
    {641}get long_term_keys(dom1: domain,sk1: privkey,pk1: pubkey,cert1: certificate,idP1: idProc) in
    {636}event Same(idP1);
    {640}get long_term_keys(dom2: domain,sk2: privkey,pk2: pubkey,cert2: certificate,idP2: idProc) in
    {637}event Same(idP2);
    {638}insert long_term_keys(choice[dom1,dom2],choice[sk1,sk2],choice[pk1,pk2],choice[cert1,cert2],choice[idP1,idP2]);
    {639}insert long_term_keys(choice[dom2,dom1],choice[sk2,sk1],choice[pk2,pk1],choice[cert2,cert1],choice[idP2,idP1])
) | (
    {642}!
    {648}get pre_shared_keys(c_dom1: domain,s_dom_11: domain,h_alg_9: hash_alg,id1: identityPsk,psk1: preSharedKey,idP1_1: idProc,safe1: bool) in
    {643}event Same(idP1_1);
    {647}get pre_shared_keys(c_dom2: domain,=s_dom_11,=h_alg_9,id2: identityPsk,psk2: preSharedKey,idP2_1: idProc,safe2: bool) in
    {644}event Same(idP2_1);
    {645}insert pre_shared_keys(choice[c_dom1,c_dom2],s_dom_11,h_alg_9,choice[id1,id2],choice[psk1,psk2],choice[idP1_1,idP2_1],choice[safe1,safe2]);
    {646}insert pre_shared_keys(choice[c_dom2,c_dom1],s_dom_11,h_alg_9,choice[id2,id1],choice[psk2,psk1],choice[idP2_1,idP1_1],choice[safe2,safe1])
) | (
    0
) | (
    {649}!
    {650}new id_client_4: idProc;
    {651}in(io, backend_dom: domain);
    {652}event Same(backend_dom);
    {653}in(io, frontend_dom: domain);
    {654}event Same(frontend_dom);
    {655}in(io, c_dom_5: domain);
    {656}event Same(c_dom_5);
    {5170}get ech_configurations(ech_config(id_4: configId,g: group,pkR_1: element,=frontend_dom,h_alg_10: hash_alg,a_alg_8: aead_alg),skR_1: bitstring) in
    {668}in(io, @6_send_kex: bool);
    {669}let () = () in
    {670}event Same(@6_send_kex);
    {657}let ech_conf: echConfig = ech_config(id_4,g,pkR_1,frontend_dom,h_alg_10,a_alg_8) in
    {673}let ech_config(config_id: configId,ech_g_2: group,pkR_2: element,o_dom: domain,ech_h_2: hash_alg,ech_a_2: aead_alg) = ech_conf in
    {658}let @6_id_client: idProc = id_client_4 in
    {674}event ClientOffersEchConfig(@6_id_client,ech_conf);
    {676}new s_8[]: seed;
    {677}let v_72: bitstring = (dh_xy(s_8,pkR_2),dh_encap_fun(ech_g_2,pkR_2,dh_xy(s_8,pkR_2))) in
    {678}let v_73: bool = success?(1-proj-2-tuple(v_72)) in
    {679}let enc: element = (if v_73 then 2-proj-2-tuple(v_72) else caught-fail) in
    {680}let shared_secret: element = (if v_73 then 1-proj-2-tuple(v_72) else caught-fail) in
    {683}let label_1: label = (if v_73 then hpke_info_hash else caught-fail) in
    {675}let info: bitstring = (tls_ech_str,ech_conf) in
    {684}let k_6: bitstring = (if v_73 then (label_1,info) else caught-fail) in
    {682}let salt: bitstring = (if v_73 then zero else caught-fail) in
    {685}let info_hash: bitstring = (if v_73 then catch-fail(hmac(ech_h_2,salt,k_6)) else caught-fail) in
    {686}let v_74: bool = not-caught-fail(info_hash) in
    {688}let ikm: bitstring = (if v_74 then zero else caught-fail) in
    {687}let label_2: label = (if v_74 then hpke_secret else caught-fail) in
    {689}let k_7: bitstring = (if v_74 then (label_2,ikm) else caught-fail) in
    {690}let xsecret: bitstring = (if v_74 then catch-fail(hmac(ech_h_2,shared_secret,k_7)) else caught-fail) in
    {691}let v_75: bool = not-caught-fail(xsecret) in
    {692}let label_3: label = (if v_75 then hpke_key else caught-fail) in
    {693}let x_29: bitstring = (if v_75 then (label_3,info_hash) else caught-fail) in
    {694}let key: aead_key = (if v_75 then catch-fail(hmac(ech_h_2,xsecret,x_29)) else caught-fail) in
    {695}let v_76: bool = not-caught-fail(key) in
    {696}let label_4: label = (if v_76 then hpke_base_nonce else caught-fail) in
    {697}let x_30: bitstring = (if v_76 then (label_4,info_hash) else caught-fail) in
    {698}let base_nonce: bitstring = (if v_76 then catch-fail(hmac(ech_h_2,xsecret,x_30)) else caught-fail) in
    {699}let v_77: bool = not-caught-fail(base_nonce) in
    {681}let r: hpkeRole = (if v_73 then S else caught-fail) in
    {700}let (enc_1: element,context: hpkeContext) = (if v_73 then (enc,(if v_74 then (if v_75 then (if v_76 then (if v_77 then hpke_context(r,key,base_nonce) else fail-any) else fail-any) else fail-any) else fail-any)) else fail-any) in
    {701}let ech_config(config_id_1: configId,ech_g_3: group,pkR_3: element,o_dom_1: domain,ech_h_3: hash_alg,ech_a_3: aead_alg) = ech_conf in
    {702}new s_9[]: seed;
    {665}let @6_backend_g: group = id_g(StrongDH,1) in
    {703}let gx_2: element = dh_pub(@6_backend_g,dh_k(s_9)) in
    {704}let v_78: bitstring = (dh_k(s_9),gx_2) in
    {705}let v_79: bool = success?(1-proj-2-tuple(v_78)) in
    {706}let gx_3: element = (if v_79 then 2-proj-2-tuple(v_78) else caught-fail) in
    {707}let x_31: bitstring = (if v_79 then 1-proj-2-tuple(v_78) else caught-fail) in
    {672}let send_kex: bool = (not(false) || @6_send_kex) in
    {708}let kex: kex_alg = (if v_79 then (if send_kex then DHE_kex(@6_backend_g,gx_3) else DHE_group(@6_backend_g)) else caught-fail) in
    {709}let (i_kex_ext: keyShareExt,i_kex_data: bitstring) = (if v_79 then (client_kex_ext(kex),(x_31,@6_backend_g)) else fail-any) in
    {710}new s_10[]: seed;
    {662}let @6_tls_g: group = id_g(StrongDH,1) in
    {711}let gx_4: element = dh_pub(@6_tls_g,dh_k(s_10)) in
    {712}let v_80: bitstring = (dh_k(s_10),gx_4) in
    {713}let v_81: bool = success?(1-proj-2-tuple(v_80)) in
    {714}let gx_5: element = (if v_81 then 2-proj-2-tuple(v_80) else caught-fail) in
    {715}let x_32: bitstring = (if v_81 then 1-proj-2-tuple(v_80) else caught-fail) in
    {716}let kex_1: kex_alg = (if v_81 then (if send_kex then DHE_kex(@6_tls_g,gx_5) else DHE_group(@6_tls_g)) else caught-fail) in
    {717}let (o_kex_ext: keyShareExt,o_kex_data: bitstring) = (if v_81 then (client_kex_ext(kex_1),(x_32,@6_tls_g)) else fail-any) in
    {718}new rand24_1[]: bytes24;
    {719}new rand8_1[]: bytes8;
    {721}new rand24_2[]: bytes24;
    {722}new rand8_2[]: bytes8;
    {725}new payload[]: bitstring;
    {726}new configid[]: configId;
    {727}new s_11[]: seed;
    {671}let @6_use_grease: bool = false in
    {724}let v_82: bool = @6_use_grease in
    {728}let gx_6: element = (if v_82 then dh_pub(ech_g_3,dh_k(s_11)) else caught-fail) in
    {729}let v_83: bitstring = (if v_82 then catch-fail((dh_k(s_11),gx_6)) else caught-fail) in
    {730}let v_84: bool = (not-caught-fail(v_83) && success?(1-proj-2-tuple(v_83))) in
    {731}let gx_grease: element = (if v_84 then 2-proj-2-tuple(v_83) else caught-fail) in
    {732}let x_grease: bitstring = (if v_84 then 1-proj-2-tuple(v_83) else caught-fail) in
    {733}new s_12[]: seed;
    {734}let v_85: bitstring = (if v_84 then catch-fail((dh_xy(s_12,gx_grease),dh_encap_fun(ech_g_3,gx_grease,dh_xy(s_12,gx_grease)))) else caught-fail) in
    {735}let v_86: bool = (not-caught-fail(v_85) && success?(1-proj-2-tuple(v_85))) in
    {736}let enc_grease: element = (if v_86 then 2-proj-2-tuple(v_85) else caught-fail) in
    {737}let secret_grease: element = (if v_86 then 1-proj-2-tuple(v_85) else caught-fail) in
    {738}let ech_inner_or_grease: echExt = (if v_82 then (if v_84 then (if v_86 then ECHClientHelloOuter(ech_h_3,ech_a_3,configid,enc_grease,payload) else fail-any) else fail-any) else ECHClientHelloInner) in
    {723}let o_cr: bytes32 = B32(rand24_2,rand8_2) in
    {720}let i_cr: bytes32 = B32(rand24_1,rand8_1) in
    {664}let @6_backend_a: aead_alg = id_aead(StrongAE,1) in
    {663}let @6_backend_h: hash_alg = id_hash(StrongHash,1) in
    {661}let @6_tls_a: aead_alg = id_aead(StrongAE,1) in
    {660}let @6_tls_h: hash_alg = id_hash(StrongHash,1) in
    {659}let @6_i_extra_ext: extraExt = empty_extra_ext in
    {739}let (dom_psk: domain,cr_psk: bytes32,kex_ext_psk: keyShareExt,extra_psk: extraExt,h_psk: hash_alg,a_psk: aead_alg) = (if @6_use_grease then (o_dom_1,o_cr,o_kex_ext,empty_extra_ext,@6_tls_h,@6_tls_a) else (backend_dom,i_cr,i_kex_ext,@6_i_extra_ext,@6_backend_h,@6_backend_a)) in
    {667}let @6_comp_psk: bool = false in
    {666}let @6_use_psk: bool = false in
    {742}if @6_use_psk then
    (
        {741}let cur_log_8: bitstring = zero in
        {740}let old_psk_data: bitstring = zero in
        {743}let (psk_10: preSharedKey,id_5: identityPsk,old_es: bitstring,is_safe: bool) = old_psk_data in
        (
            {747}let k_8: bitstring = catch-fail(psk2b(psk_10)) in
            {748}let v_87: bool = not-caught-fail(k_8) in
            {746}let s_13: bitstring = zero in
            {749}let early_secret_5: bitstring = catch-fail((if v_87 then hmac(h_psk,s_13,k_8) else fail-any)) in
            {750}let v_88: bool = not-caught-fail(early_secret_5) in
            {752}let m_5: bitstring = (if v_88 then zero else caught-fail) in
            {753}let h_28: bitstring = (if v_88 then catch-fail(hash(h_psk,m_5)) else caught-fail) in
            {754}let v_89: bool = not-caught-fail(h_28) in
            {751}let l_29: label = (if v_88 then tls13_ext_res_binder else caught-fail) in
            {755}let x_33: bitstring = (if v_89 then (l_29,h_28) else caught-fail) in
            {756}let binder_key_3: bitstring = (if v_88 then catch-fail((if v_89 then hmac(h_psk,early_secret_5,x_33) else fail-any)) else caught-fail) in
            {757}let v_90: bool = not-caught-fail(binder_key_3) in
            {758}let v_91: bitstring = catch-fail((if v_88 then (if v_90 then (early_secret_5,binder_key_3) else fail-any) else fail-any)) in
            {759}let v_92: bool = (not-caught-fail(v_91) && success?(1-proj-2-tuple(v_91))) in
            {760}let kb_3: mac_key = (if v_92 then 2-proj-2-tuple(v_91) else caught-fail) in
            {761}let es_2: bitstring = (if v_92 then 1-proj-2-tuple(v_91) else caught-fail) in
            {744}let offer_2: params = nego(TLS13,h_psk,a_psk,kex_ext_psk,SNI(dom_psk),ech_inner_or_grease,extra_psk,trunc_client_psk_ext(id_5)) in
            {745}let cur_log'_2: bitstring = (cur_log_8,CH(cr_psk,offer_2)) in
            {762}let binders_1: bitstring = (if v_92 then catch-fail(hmac(h_psk,kb_3,cur_log'_2)) else caught-fail) in
            {763}let v_93: bool = not-caught-fail(binders_1) in
            {764}let v_94: bitstring = catch-fail((if v_92 then (if v_93 then (client_psk_ext(id_5,binders_1),(psk_10,id_5,es_2,is_safe)) else fail-any) else fail-any)) in
            {765}let v_95: bool = (not-caught-fail(v_94) && success?(1-proj-2-tuple(v_94))) in
            {766}let psk_data: bitstring = (if v_95 then 2-proj-2-tuple(v_94) else caught-fail) in
            {767}let psk_ext_2: preSharedKeyExt = (if v_95 then 1-proj-2-tuple(v_94) else caught-fail) in
            {772}new fake_id[]: identityPsk;
            {773}new fake_binder[]: bitstring;
            {770}let v_96: bool = (if v_95 then catch-fail(@6_use_grease) else caught-fail) in
            {779}let v_97: hpkeContext = (if is-false(v_96) then catch-fail(context) else caught-fail) in
            {780}let v_98: bool = (not-caught-fail(v_97) && ((S =nf 1-proj-hpke_context(v_97)) && success?(1-proj-hpke_context(v_97)))) in
            {781}let base_nonce_1: bitstring = (if v_98 then 3-proj-hpke_context(v_97) else caught-fail) in
            {782}let key_1: aead_key = (if v_98 then 2-proj-hpke_context(v_97) else caught-fail) in
            {778}let n: nat = (if is-false(v_96) then 1 else caught-fail) in
            {775}let o_ech_ext_ADD: echExt = (if is-false(v_96) then ECHClientHelloOuter(ech_h_3,ech_a_3,config_id_1,enc_1,zero) else caught-fail) in
            {774}let o_psk_ext: preSharedKeyExt = (if is-false(v_96) then (if @6_use_psk then client_psk_ext(fake_id,fake_binder) else empty_psk_ext) else caught-fail) in
            {776}let o_offer_ADD: params = (if is-false(v_96) then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),o_ech_ext_ADD,empty_extra_ext,o_psk_ext) else caught-fail) in
            {777}let o_client_hello_ADD: msg = (if is-false(v_96) then CH(o_cr,o_offer_ADD) else caught-fail) in
            {768}let i_offer: params = (if v_95 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_2) else caught-fail) in
            {769}let i_client_hello: msg = (if v_95 then CH(i_cr,i_offer) else caught-fail) in
            {783}let payload_1: bitstring = (if is-false(v_96) then catch-fail((if v_98 then aead_enc(ech_a_3,key_1,(base_nonce_1,n),o_client_hello_ADD,i_client_hello) else fail-any)) else caught-fail) in
            {784}let v_99: bool = not-caught-fail(payload_1) in
            {785}let o_ech_ext: echExt = (if v_99 then ECHClientHelloOuter(ech_h_3,ech_a_3,config_id_1,enc_1,payload_1) else caught-fail) in
            {786}let o_offer_1: params = (if v_99 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),o_ech_ext,empty_extra_ext,o_psk_ext) else caught-fail) in
            {771}let o_offer: params = (if v_96 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),ech_inner_or_grease,empty_extra_ext,psk_ext_2) else caught-fail) in
            {787}let (o_client_hello: msg,i_client_hello_1: msg,o_cr_1: bytes32,i_cr_1: bytes32,o_kex_data_1: bitstring,i_kex_data_1: bitstring,o_psk_ext_1: preSharedKeyExt,psk_data_1: bitstring,o_ech_ext_1: echExt) = (if v_95 then (if undo-catch-fail(v_96) then (CH(o_cr,o_offer),CH(o_cr,o_offer),o_cr,o_cr,o_kex_data,o_kex_data,psk_ext_2,psk_data,ech_inner_or_grease) else (if v_99 then (CH(o_cr,o_offer_1),i_client_hello,o_cr,i_cr,o_kex_data,i_kex_data,o_psk_ext,psk_data,o_ech_ext) else fail-any)) else fail-any) in
            {788}out(io, o_client_hello);
            {789}let (psk_11: preSharedKey,id_6: identityPsk,es_3: bitstring,safe: bool) = psk_data_1 in
            (
                {790}if (false && (not(@6_use_grease) && (psk_11 ≠ NoPsk))) then
                {791}let client_hello_1: bitstring = (zero,i_client_hello_1) in
                {793}let h_29: bitstring = catch-fail(hash(@6_backend_h,client_hello_1)) in
                {794}let v_100: bool = not-caught-fail(h_29) in
                {792}let l_30: label = tls13_client_early_traffic_secret in
                {795}let x_34: bitstring = (if v_100 then (l_30,h_29) else caught-fail) in
                {796}let atsc0_1: bitstring = catch-fail((if v_100 then hmac(@6_backend_h,es_3,x_34) else fail-any)) in
                {797}let v_101: bool = not-caught-fail(atsc0_1) in
                {799}let h_30: bitstring = (if v_101 then zero else caught-fail) in
                {798}let l_31: label = (if v_101 then tls13_key else caught-fail) in
                {800}let x_35: bitstring = (if v_101 then (l_31,h_30) else caught-fail) in
                {801}let kc0_1: bitstring = (if v_101 then catch-fail(hmac(@6_backend_h,atsc0_1,x_35)) else caught-fail) in
                {802}let v_102: bool = not-caught-fail(kc0_1) in
                {804}let h_31: bitstring = (if v_102 then catch-fail(hash(@6_backend_h,client_hello_1)) else caught-fail) in
                {805}let v_103: bool = not-caught-fail(h_31) in
                {803}let l_32: label = (if v_102 then tls13_early_exporter_master_secret else caught-fail) in
                {806}let x_36: bitstring = (if v_103 then (l_32,h_31) else caught-fail) in
                {807}let ems0_2: bitstring = (if v_102 then catch-fail((if v_103 then hmac(@6_backend_h,es_3,x_36) else fail-any)) else caught-fail) in
                {808}let v_104: bool = not-caught-fail(ems0_2) in
                {809}let (wkc0_1: aead_key,ems0_3: bitstring) = (if v_101 then (if v_102 then (if v_104 then (kc0_1,ems0_2) else fail-any) else fail-any) else fail-any) in
                {810}!
                {811}in(io, (i_1: nat,ad_1: bitstring));
                {812}if is_nat(i_1) then
                {813}new msg_ed[]: bitstring;
                {815}new st_10: stamp;
                {816}event ClientSequenceClient0RTTDataWriteKey(@6_id_client,st_10,i_1);
                {817}event ClientSends0(@6_id_client,i_cr_1,psk_11,i_1,ad_1,msg_ed);
                {814}let enc_ed: bitstring = aead_enc(@6_backend_a,wkc0_1,i_1,ad_1,msg_ed) in
                {818}out(io, enc_ed)
            ) | (
                {819}in(io, server_hello_1: msg);
                {820}let SH(B32(sr24_2: bytes24,sr8_1: bytes8),mode: params) = server_hello_1 in
                (
                    {821}if (false && (B32(sr24_2,sr8_1) = B32(HRR24,HRR8))) then
                    (
                        {822}if (send_kex ≠ true) then
                        {823}let nego(=TLS13,h_alg_11: hash_alg,a_alg_9: aead_alg,hrr_kex_ext(g_1: group),=empty_sni_ext,ech_ext_2: echExt,=empty_extra_ext,=empty_psk_ext) = mode in
                        {824}let v_105: bool = (ech_ext_2 = empty_ech_ext) in
                        {825}let hrr_mode: params = (if not(v_105) then nego(TLS13,@6_backend_h,@6_backend_a,hrr_kex_ext(@6_backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) else caught-fail) in
                        {826}let hrr: msg = (if not(v_105) then SH(B32(HRR24,HRR8),hrr_mode) else caught-fail) in
                        {827}let cur_log_9: bitstring = (if not(v_105) then ((zero,i_client_hello_1),hrr) else caught-fail) in
                        {828}let transcript_hrr_ech_conf: bitstring = (if not(v_105) then catch-fail(hash(@6_backend_h,cur_log_9)) else caught-fail) in
                        {829}let v_106: bool = not-caught-fail(transcript_hrr_ech_conf) in
                        {831}let k_9: bitstring = (if v_106 then catch-fail(b32_2_b(get_random(i_client_hello_1))) else caught-fail) in
                        {832}let v_107: bool = not-caught-fail(k_9) in
                        {830}let s_14: bitstring = (if v_106 then zero else caught-fail) in
                        {833}let k_10: bitstring = (if v_106 then catch-fail((if v_107 then hmac(@6_backend_h,s_14,k_9) else fail-any)) else caught-fail) in
                        {834}let v_108: bool = not-caught-fail(k_10) in
                        {835}let l_33: label = (if v_108 then hrr_ech_accept_confirmation else caught-fail) in
                        {836}let x_37: bitstring = (if v_108 then (l_33,cur_log_9) else caught-fail) in
                        {837}let is_ech_accepted: bool = (if v_105 then false else (if (ech_ext_2 = ECHHelloRetryRequest((if v_106 then crop_into_bytes8((if v_108 then hmac(@6_backend_h,k_10,x_37) else fail-any)) else fail-any))) then true else false)) in
                        {838}event ClientEchAcceptance(@6_id_client,is_ech_accepted);
                        {839}if is_ech_accepted then
                        (
                            {841}let ech_config(config_id_2: configId,ech_g_4: group,pkR_4: element,o_dom_2: domain,ech_h_4: hash_alg,ech_a_4: aead_alg) = ech_conf in
                            {843}new s_15[]: seed;
                            {844}let gx_7: element = dh_pub(@6_backend_g,dh_k(s_15)) in
                            {845}let v_109: bitstring = (dh_k(s_15),gx_7) in
                            {846}let v_110: bool = success?(1-proj-2-tuple(v_109)) in
                            {847}let gx_8: element = (if v_110 then 2-proj-2-tuple(v_109) else caught-fail) in
                            {848}let x_38: bitstring = (if v_110 then 1-proj-2-tuple(v_109) else caught-fail) in
                            {842}let send_key_share: bool = true in
                            {849}let kex_2: kex_alg = (if v_110 then (if send_key_share then DHE_kex(@6_backend_g,gx_8) else DHE_group(@6_backend_g)) else caught-fail) in
                            {850}let (i_kex_ext_1: keyShareExt,i_kex_data_2: bitstring) = (if v_110 then (client_kex_ext(kex_2),(x_38,@6_backend_g)) else fail-any) in
                            {852}new s_16[]: seed;
                            {853}let gx_9: element = dh_pub(@6_tls_g,dh_k(s_16)) in
                            {854}let v_111: bitstring = (dh_k(s_16),gx_9) in
                            {855}let v_112: bool = success?(1-proj-2-tuple(v_111)) in
                            {856}let gx_10: element = (if v_112 then 2-proj-2-tuple(v_111) else caught-fail) in
                            {857}let x_39: bitstring = (if v_112 then 1-proj-2-tuple(v_111) else caught-fail) in
                            {851}let send_key_share_1: bool = true in
                            {858}let kex_3: kex_alg = (if v_112 then (if send_key_share_1 then DHE_kex(@6_tls_g,gx_10) else DHE_group(@6_tls_g)) else caught-fail) in
                            {859}let (o_kex_ext_1: keyShareExt,o_kex_data_2: bitstring) = (if v_112 then (client_kex_ext(kex_3),(x_39,@6_tls_g)) else fail-any) in
                            {860}new rand24_3[]: bytes24;
                            {861}new rand8_3[]: bytes8;
                            {863}new rand24_4[]: bytes24;
                            {864}new rand8_4[]: bytes8;
                            {865}let o_cr_2: bytes32 = B32(rand24_4,rand8_4) in
                            {862}let i_cr_2: bytes32 = B32(rand24_3,rand8_3) in
                            {840}let cur_log_IN1_HRR: bitstring = ((zero,i_client_hello_1),server_hello_1) in
                            {867}if @6_use_psk then
                            (
                                {866}let ech_ext_3: echExt = ECHClientHelloInner in
                                {868}let (psk_12: preSharedKey,id_7: identityPsk,old_es_1: bitstring,is_safe_1: bool) = psk_data_1 in
                                (
                                    {872}let k_11: bitstring = catch-fail(psk2b(psk_12)) in
                                    {873}let v_113: bool = not-caught-fail(k_11) in
                                    {871}let s_17: bitstring = zero in
                                    {874}let early_secret_6: bitstring = catch-fail((if v_113 then hmac(@6_backend_h,s_17,k_11) else fail-any)) in
                                    {875}let v_114: bool = not-caught-fail(early_secret_6) in
                                    {877}let m_6: bitstring = (if v_114 then zero else caught-fail) in
                                    {878}let h_32: bitstring = (if v_114 then catch-fail(hash(@6_backend_h,m_6)) else caught-fail) in
                                    {879}let v_115: bool = not-caught-fail(h_32) in
                                    {876}let l_34: label = (if v_114 then tls13_ext_res_binder else caught-fail) in
                                    {880}let x_40: bitstring = (if v_115 then (l_34,h_32) else caught-fail) in
                                    {881}let binder_key_4: bitstring = (if v_114 then catch-fail((if v_115 then hmac(@6_backend_h,early_secret_6,x_40) else fail-any)) else caught-fail) in
                                    {882}let v_116: bool = not-caught-fail(binder_key_4) in
                                    {883}let v_117: bitstring = catch-fail((if v_114 then (if v_116 then (early_secret_6,binder_key_4) else fail-any) else fail-any)) in
                                    {884}let v_118: bool = (not-caught-fail(v_117) && success?(1-proj-2-tuple(v_117))) in
                                    {885}let kb_4: mac_key = (if v_118 then 2-proj-2-tuple(v_117) else caught-fail) in
                                    {886}let es_4: bitstring = (if v_118 then 1-proj-2-tuple(v_117) else caught-fail) in
                                    {869}let offer_3: params = nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_1,SNI(backend_dom),ech_ext_3,@6_i_extra_ext,trunc_client_psk_ext(id_7)) in
                                    {870}let cur_log'_3: bitstring = (cur_log_IN1_HRR,CH(i_cr_2,offer_3)) in
                                    {887}let binders_2: bitstring = (if v_118 then catch-fail(hmac(@6_backend_h,kb_4,cur_log'_3)) else caught-fail) in
                                    {888}let v_119: bool = not-caught-fail(binders_2) in
                                    {889}let v_120: bitstring = catch-fail((if v_118 then (if v_119 then (client_psk_ext(id_7,binders_2),(psk_12,id_7,es_4,is_safe_1)) else fail-any) else fail-any)) in
                                    {890}let v_121: bool = (not-caught-fail(v_120) && success?(1-proj-2-tuple(v_120))) in
                                    {891}let psk_data_2: bitstring = (if v_121 then 2-proj-2-tuple(v_120) else caught-fail) in
                                    {892}let psk_ext_3: preSharedKeyExt = (if v_121 then 1-proj-2-tuple(v_120) else caught-fail) in
                                    {895}new fake_id_1[]: identityPsk;
                                    {896}new fake_binder_1[]: bitstring;
                                    {902}let v_122: hpkeContext = (if v_121 then catch-fail(context) else caught-fail) in
                                    {903}let v_123: bool = (not-caught-fail(v_122) && ((S =nf 1-proj-hpke_context(v_122)) && success?(1-proj-hpke_context(v_122)))) in
                                    {904}let base_nonce_2: bitstring = (if v_123 then 3-proj-hpke_context(v_122) else caught-fail) in
                                    {905}let key_2: aead_key = (if v_123 then 2-proj-hpke_context(v_122) else caught-fail) in
                                    {901}let n_1: nat = (if v_121 then 2 else caught-fail) in
                                    {898}let o_ech_ext_ADD_1: echExt = (if v_121 then ECHClientHelloOuter(ech_h_4,ech_a_4,config_id_2,zero,zero) else caught-fail) in
                                    {897}let o_psk_ext_2: preSharedKeyExt = (if v_121 then (if @6_use_psk then client_psk_ext(fake_id_1,fake_binder_1) else empty_psk_ext) else caught-fail) in
                                    {899}let o_offer_ADD_1: params = (if v_121 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_1,SNI(o_dom_2),o_ech_ext_ADD_1,empty_extra_ext,o_psk_ext_2) else caught-fail) in
                                    {900}let o_client_hello_ADD_1: msg = (if v_121 then CH(o_cr_2,o_offer_ADD_1) else caught-fail) in
                                    {893}let i_offer_1: params = (if v_121 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_1,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_3) else caught-fail) in
                                    {894}let i_client_hello_2: msg = (if v_121 then CH(i_cr_2,i_offer_1) else caught-fail) in
                                    {906}let payload_2: bitstring = (if v_121 then catch-fail((if v_123 then aead_enc(ech_a_4,key_2,(base_nonce_2,n_1),o_client_hello_ADD_1,i_client_hello_2) else fail-any)) else caught-fail) in
                                    {907}let v_124: bool = not-caught-fail(payload_2) in
                                    {908}let o_ech_ext_2: echExt = (if v_124 then ECHClientHelloOuter(ech_h_4,ech_a_4,config_id_2,zero,payload_2) else caught-fail) in
                                    {909}let o_offer_2: params = (if v_124 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_1,SNI(o_dom_2),o_ech_ext_2,empty_extra_ext,o_psk_ext_2) else caught-fail) in
                                    {910}let (o_client_hello': msg,i_client_hello': msg,i_cr': bytes32,i_kex_data': bitstring,psk_data': bitstring) = (if v_121 then (if v_124 then (CH(o_cr_2,o_offer_2),i_client_hello_2,i_cr_2,i_kex_data_2,psk_data_2) else fail-any) else fail-any) in
                                    {911}out(io, o_client_hello');
                                    {912}in(io, server_hello': msg);
                                    {913}let SH(B32(sr24': bytes24,sr8': bytes8),params': params) = server_hello' in
                                    {915}let sh_modified_1: msg = SH(B32(sr24',zero8),params') in
                                    {914}let cur_log_IN1_HRR_IN2: bitstring = (cur_log_IN1_HRR,i_client_hello') in
                                    {916}let cur_log_sh_1: bitstring = (cur_log_IN1_HRR_IN2,sh_modified_1) in
                                    {917}let transcript_ech_conf_1: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_1)) in
                                    {918}let v_125: bool = not-caught-fail(transcript_ech_conf_1) in
                                    {920}let k_12: bitstring = (if v_125 then catch-fail(b32_2_b(get_random(i_client_hello'))) else caught-fail) in
                                    {921}let v_126: bool = not-caught-fail(k_12) in
                                    {919}let s_18: bitstring = (if v_125 then zero else caught-fail) in
                                    {922}let k_13: bitstring = (if v_125 then catch-fail((if v_126 then hmac(@6_backend_h,s_18,k_12) else fail-any)) else caught-fail) in
                                    {923}let v_127: bool = not-caught-fail(k_13) in
                                    {924}let l_35: label = (if v_127 then ech_accept_confirmation else caught-fail) in
                                    {925}let x_41: bitstring = (if v_127 then (l_35,cur_log_sh_1) else caught-fail) in
                                    {926}let sr8_2: bytes8 = (if v_125 then catch-fail(crop_into_bytes8((if v_127 then hmac(@6_backend_h,k_13,x_41) else fail-any))) else caught-fail) in
                                    {927}let v_128: bool = not-caught-fail(sr8_2) in
                                    {928}if (B32(sr24',sr8') = (if v_125 then (if v_128 then B32(sr24',sr8_2) else fail-any) else fail-any)) then
                                    {929}let (x_42: bitstring,g_2: group) = i_kex_data' in
                                    {930}let (psk_offer: preSharedKey,id_offer: identityPsk,es_offer: bitstring,is_safe_offer: bool) = psk_data' in
                                    {931}event Client_PSKOffer(@6_id_client,psk_offer,id_offer,is_safe_offer);
                                    {932}event Client_Rand_client(@6_id_client,i_cr');
                                    {933}event Client_DH_client(@6_id_client,dh_pub(g_2,x_42));
                                    {934}event Client_server_domain(@6_id_client,backend_dom);
                                    {935}let SH(sr_8: bytes32,mode_1: params) = server_hello' in
                                    {936}event Client_Rand_server(@6_id_client,sr_8);
                                    {937}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_2,gy_1: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_4: preSharedKeyExt) = mode_1 in
                                    (
                                        {939}event Client_DH_server(@6_id_client,gy_1);
                                        {940}let v_129: bool = (psk_ext_4 = empty_psk_ext) in
                                        {941}let psk_13: preSharedKey = (if v_129 then NoPsk else caught-fail) in
                                        {943}let k_14: bitstring = (if v_129 then catch-fail(psk2b(psk_13)) else caught-fail) in
                                        {944}let v_130: bool = not-caught-fail(k_14) in
                                        {942}let s_19: bitstring = (if v_129 then zero else caught-fail) in
                                        {945}let early_secret_7: bitstring = (if v_129 then catch-fail((if v_130 then hmac(@6_backend_h,s_19,k_14) else fail-any)) else caught-fail) in
                                        {946}let v_131: bool = not-caught-fail(early_secret_7) in
                                        {948}let m_7: bitstring = (if v_131 then zero else caught-fail) in
                                        {949}let h_33: bitstring = (if v_131 then catch-fail(hash(@6_backend_h,m_7)) else caught-fail) in
                                        {950}let v_132: bool = not-caught-fail(h_33) in
                                        {947}let l_36: label = (if v_131 then tls13_ext_res_binder else caught-fail) in
                                        {951}let x_43: bitstring = (if v_132 then (l_36,h_33) else caught-fail) in
                                        {952}let binder_key_5: bitstring = (if v_131 then catch-fail((if v_132 then hmac(@6_backend_h,early_secret_7,x_43) else fail-any)) else caught-fail) in
                                        {953}let v_133: bool = not-caught-fail(binder_key_5) in
                                        {954}let v_134: bitstring = (if v_129 then catch-fail((if v_131 then (if v_133 then (early_secret_7,binder_key_5) else fail-any) else fail-any)) else caught-fail) in
                                        {955}let v_135: bool = (not-caught-fail(v_134) && success?(1-proj-2-tuple(v_134))) in
                                        {956}let kb_5: mac_key = (if v_135 then 2-proj-2-tuple(v_134) else caught-fail) in
                                        {957}let es_5: bitstring = (if v_135 then 1-proj-2-tuple(v_134) else caught-fail) in
                                        {958}let v_136: bitstring = (if not(v_129) then catch-fail(psk_data') else caught-fail) in
                                        {959}let v_137: bool = (not-caught-fail(v_136) && success?(1-proj-4-tuple(v_136))) in
                                        {960}let is_safe_2: bool = (if v_137 then 4-proj-4-tuple(v_136) else caught-fail) in
                                        {961}let es_6: bitstring = (if v_137 then 3-proj-4-tuple(v_136) else caught-fail) in
                                        {962}let id_8: identityPsk = (if v_137 then 2-proj-4-tuple(v_136) else caught-fail) in
                                        {963}let psk_14: preSharedKey = (if v_137 then 1-proj-4-tuple(v_136) else caught-fail) in
                                        {964}let (psk_15: preSharedKey,early_secret_8: bitstring,valid: bool,safe_psk_3: bool) = (if v_129 then (if v_135 then (NoPsk,es_5,true,false) else fail-any) else (if v_137 then (psk_14,es_6,((psk_14 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_4)),is_safe_2) else fail-any)) in
                                        {965}event Client_PSKChoosen(@6_id_client,psk_15,safe_psk_3);
                                        {966}if valid then
                                        (
                                            {969}new s_20[]: seed;
                                            {967}let gxy_1: element = catch-fail(dh_decap_fun(g_2,gy_1,x_42)) in
                                            {968}let v_138: bool = not-caught-fail(gxy_1) in
                                            {970}let gxy_2: element = (if v_138 then gxy_1 else dh_f(s_20)) in
                                            {971}event Client_DH_gxy(@6_id_client,gxy_2);
                                            {973}let m_8: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {974}let v_139: bool = not-caught-fail(m_8) in
                                            {975}let h_34: bitstring = (if v_139 then catch-fail(hash(@6_backend_h,m_8)) else caught-fail) in
                                            {976}let v_140: bool = not-caught-fail(h_34) in
                                            {972}let l_37: label = tls13_derived in
                                            {977}let x_44: bitstring = (if v_140 then (l_37,h_34) else caught-fail) in
                                            {978}let extra_2: bitstring = catch-fail((if v_139 then (if v_140 then hmac(@6_backend_h,early_secret_8,x_44) else fail-any) else fail-any)) in
                                            {979}let v_141: bool = not-caught-fail(extra_2) in
                                            {980}let handshake_secret_1: bitstring = (if v_141 then hmac(@6_backend_h,extra_2,gxy_2) else fail-any) in
                                            {982}let m_9: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {983}let v_142: bool = not-caught-fail(m_9) in
                                            {984}let h_35: bitstring = (if v_142 then catch-fail(hash(@6_backend_h,m_9)) else caught-fail) in
                                            {985}let v_143: bool = not-caught-fail(h_35) in
                                            {981}let l_38: label = tls13_derived in
                                            {986}let x_45: bitstring = (if v_143 then (l_38,h_35) else caught-fail) in
                                            {987}let extra_3: bitstring = catch-fail((if v_142 then (if v_143 then hmac(@6_backend_h,handshake_secret_1,x_45) else fail-any) else fail-any)) in
                                            {988}let v_144: bool = not-caught-fail(extra_3) in
                                            {989}let k_15: bitstring = (if v_144 then zero else caught-fail) in
                                            {990}let master_secret_9: bitstring = (if v_144 then catch-fail(hmac(@6_backend_h,handshake_secret_1,k_15)) else caught-fail) in
                                            {991}let v_145: bool = not-caught-fail(master_secret_9) in
                                            {938}let cur_log2_4: bitstring = (cur_log_IN1_HRR_IN2,server_hello') in
                                            {993}let h_36: bitstring = (if v_145 then catch-fail(hash(@6_backend_h,cur_log2_4)) else caught-fail) in
                                            {994}let v_146: bool = not-caught-fail(h_36) in
                                            {992}let l_39: label = (if v_145 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {995}let x_46: bitstring = (if v_146 then (l_39,h_36) else caught-fail) in
                                            {996}let client_hts_1: bitstring = (if v_145 then catch-fail((if v_146 then hmac(@6_backend_h,handshake_secret_1,x_46) else fail-any)) else caught-fail) in
                                            {997}let v_147: bool = not-caught-fail(client_hts_1) in
                                            {999}let h_37: bitstring = (if v_147 then catch-fail(hash(@6_backend_h,cur_log2_4)) else caught-fail) in
                                            {1000}let v_148: bool = not-caught-fail(h_37) in
                                            {998}let l_40: label = (if v_147 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {1001}let x_47: bitstring = (if v_148 then (l_40,h_37) else caught-fail) in
                                            {1002}let server_hts_1: bitstring = (if v_147 then catch-fail((if v_148 then hmac(@6_backend_h,handshake_secret_1,x_47) else fail-any)) else caught-fail) in
                                            {1003}let v_149: bool = not-caught-fail(server_hts_1) in
                                            {1005}let h_38: bitstring = (if v_149 then zero else caught-fail) in
                                            {1004}let l_41: label = (if v_149 then tls13_key else caught-fail) in
                                            {1006}let x_48: bitstring = (if v_149 then (l_41,h_38) else caught-fail) in
                                            {1007}let client_wkh_1: bitstring = (if v_149 then catch-fail(hmac(@6_backend_h,client_hts_1,x_48)) else caught-fail) in
                                            {1008}let v_150: bool = not-caught-fail(client_wkh_1) in
                                            {1010}let h_39: bitstring = (if v_150 then zero else caught-fail) in
                                            {1009}let l_42: label = (if v_150 then tls13_key else caught-fail) in
                                            {1011}let x_49: bitstring = (if v_150 then (l_42,h_39) else caught-fail) in
                                            {1012}let server_wkh_1: bitstring = (if v_150 then catch-fail(hmac(@6_backend_h,server_hts_1,x_49)) else caught-fail) in
                                            {1013}let v_151: bool = not-caught-fail(server_wkh_1) in
                                            {1015}let h_40: bitstring = (if v_151 then zero else caught-fail) in
                                            {1014}let l_43: label = (if v_151 then tls13_finished else caught-fail) in
                                            {1016}let x_50: bitstring = (if v_151 then (l_43,h_40) else caught-fail) in
                                            {1017}let client_fk_1: bitstring = (if v_151 then catch-fail(hmac(@6_backend_h,client_hts_1,x_50)) else caught-fail) in
                                            {1018}let v_152: bool = not-caught-fail(client_fk_1) in
                                            {1020}let h_41: bitstring = (if v_152 then zero else caught-fail) in
                                            {1019}let l_44: label = (if v_152 then tls13_finished else caught-fail) in
                                            {1021}let x_51: bitstring = (if v_152 then (l_44,h_41) else caught-fail) in
                                            {1022}let server_fk_1: bitstring = (if v_152 then catch-fail(hmac(@6_backend_h,server_hts_1,x_51)) else caught-fail) in
                                            {1023}let v_153: bool = not-caught-fail(server_fk_1) in
                                            {1024}let (master_secret_10: bitstring,chk_8: aead_key,shk_7: aead_key,cfin_8: mac_key,sfin_7: mac_key) = (if v_144 then (if v_145 then (if v_147 then (if v_149 then (if v_150 then (if v_151 then (if v_152 then (if v_153 then (master_secret_9,client_wkh_1,server_wkh_1,client_fk_1,server_fk_1) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {1025}event Client_chk(@6_id_client,chk_8);
                                            {1026}event Client_shk(@6_id_client,shk_7);
                                            {1027}event Client_cfin(@6_id_client,cfin_8);
                                            {1028}event Client_sfin(@6_id_client,sfin_7);
                                            {1029}in(io, enc_ee_msg: bitstring);
                                            {1030}let ee_msg_1: msg = aead_dec(@6_backend_a,shk_7,0,zero,enc_ee_msg) in
                                            {1031}let EE(ech_ee: echExt,extra_ee: extraExt) = ee_msg_1 in
                                            {1032}let cur_log2_5: bitstring = (cur_log2_4,ee_msg_1) in
                                            {1033}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr',sr_8,@6_backend_h,@6_backend_a,c_dom_5,backend_dom,psk_15,safe_psk_3,@6_comp_psk,master_secret_10,chk_8,0,shk_7,1,cfin_8,sfin_7,cur_log2_5)))
                                        )
                                        else
                                            {1034}out(io, illegal_parameter)
                                    )
                                    else
                                        {1035}out(io, illegal_parameter)
                                )
                                else
                                    {1212}get pre_shared_keys(c_dom'_2: domain,=backend_dom,=@6_backend_h,id_9: identityPsk,psk_16: preSharedKey,idP_4: idProc,is_safe_3: bool) in
                                    {1036}event Selected_one_time_used_psk(@6_id_client,psk_16,is_safe_3);
                                    {1037}event Selected_psk(c_dom_5,c_dom'_2,idP_4,is_safe_3);
                                    {1038}event Selected_psk_no_missmatch(@6_id_client,backend_dom,@6_backend_h,psk_16,id_9);
                                    {1039}event Selected_psk_with_ID(c_dom_5,c_dom'_2,id_9,idP_4,is_safe_3);
                                    {1040}let v_154: bitstring = (id_9,psk_16,is_safe_3) in
                                    {1041}let v_155: bool = success?(1-proj-3-tuple(v_154)) in
                                    {1042}let is_safe_4: bool = (if v_155 then 3-proj-3-tuple(v_154) else caught-fail) in
                                    {1043}let psk_17: preSharedKey = (if v_155 then 2-proj-3-tuple(v_154) else caught-fail) in
                                    {1044}let id_10: identityPsk = (if v_155 then 1-proj-3-tuple(v_154) else caught-fail) in
                                    {1048}let k_16: bitstring = (if v_155 then catch-fail(psk2b(psk_17)) else caught-fail) in
                                    {1049}let v_156: bool = not-caught-fail(k_16) in
                                    {1047}let s_21: bitstring = (if v_155 then zero else caught-fail) in
                                    {1050}let early_secret_9: bitstring = (if v_155 then catch-fail((if v_156 then hmac(@6_backend_h,s_21,k_16) else fail-any)) else caught-fail) in
                                    {1051}let v_157: bool = not-caught-fail(early_secret_9) in
                                    {1053}let m_10: bitstring = (if v_157 then zero else caught-fail) in
                                    {1054}let h_42: bitstring = (if v_157 then catch-fail(hash(@6_backend_h,m_10)) else caught-fail) in
                                    {1055}let v_158: bool = not-caught-fail(h_42) in
                                    {1052}let l_45: label = (if v_157 then tls13_ext_res_binder else caught-fail) in
                                    {1056}let x_52: bitstring = (if v_158 then (l_45,h_42) else caught-fail) in
                                    {1057}let binder_key_6: bitstring = (if v_157 then catch-fail((if v_158 then hmac(@6_backend_h,early_secret_9,x_52) else fail-any)) else caught-fail) in
                                    {1058}let v_159: bool = not-caught-fail(binder_key_6) in
                                    {1059}let v_160: bitstring = (if v_155 then catch-fail((if v_157 then (if v_159 then (early_secret_9,binder_key_6) else fail-any) else fail-any)) else caught-fail) in
                                    {1060}let v_161: bool = (not-caught-fail(v_160) && success?(1-proj-2-tuple(v_160))) in
                                    {1061}let kb_6: mac_key = (if v_161 then 2-proj-2-tuple(v_160) else caught-fail) in
                                    {1062}let es_7: bitstring = (if v_161 then 1-proj-2-tuple(v_160) else caught-fail) in
                                    {1045}let offer_4: params = (if v_155 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_1,SNI(backend_dom),ech_ext_3,@6_i_extra_ext,trunc_client_psk_ext(id_10)) else caught-fail) in
                                    {1046}let cur_log'_4: bitstring = (if v_155 then (cur_log_IN1_HRR,CH(i_cr_2,offer_4)) else caught-fail) in
                                    {1063}let binders_3: bitstring = (if v_161 then catch-fail(hmac(@6_backend_h,kb_6,cur_log'_4)) else caught-fail) in
                                    {1064}let v_162: bool = not-caught-fail(binders_3) in
                                    {1065}let v_163: bitstring = catch-fail((if v_155 then (if v_161 then (if v_162 then (client_psk_ext(id_10,binders_3),(psk_17,id_10,es_7,is_safe_4)) else fail-any) else fail-any) else fail-any)) in
                                    {1066}let v_164: bool = (not-caught-fail(v_163) && success?(1-proj-2-tuple(v_163))) in
                                    {1067}let psk_data_3: bitstring = (if v_164 then 2-proj-2-tuple(v_163) else caught-fail) in
                                    {1068}let psk_ext_5: preSharedKeyExt = (if v_164 then 1-proj-2-tuple(v_163) else caught-fail) in
                                    {1071}new fake_id_2[]: identityPsk;
                                    {1072}new fake_binder_2[]: bitstring;
                                    {1078}let v_165: hpkeContext = (if v_164 then catch-fail(context) else caught-fail) in
                                    {1079}let v_166: bool = (not-caught-fail(v_165) && ((S =nf 1-proj-hpke_context(v_165)) && success?(1-proj-hpke_context(v_165)))) in
                                    {1080}let base_nonce_3: bitstring = (if v_166 then 3-proj-hpke_context(v_165) else caught-fail) in
                                    {1081}let key_3: aead_key = (if v_166 then 2-proj-hpke_context(v_165) else caught-fail) in
                                    {1077}let n_2: nat = (if v_164 then 2 else caught-fail) in
                                    {1074}let o_ech_ext_ADD_2: echExt = (if v_164 then ECHClientHelloOuter(ech_h_4,ech_a_4,config_id_2,zero,zero) else caught-fail) in
                                    {1073}let o_psk_ext_3: preSharedKeyExt = (if v_164 then (if @6_use_psk then client_psk_ext(fake_id_2,fake_binder_2) else empty_psk_ext) else caught-fail) in
                                    {1075}let o_offer_ADD_2: params = (if v_164 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_1,SNI(o_dom_2),o_ech_ext_ADD_2,empty_extra_ext,o_psk_ext_3) else caught-fail) in
                                    {1076}let o_client_hello_ADD_2: msg = (if v_164 then CH(o_cr_2,o_offer_ADD_2) else caught-fail) in
                                    {1069}let i_offer_2: params = (if v_164 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_1,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_5) else caught-fail) in
                                    {1070}let i_client_hello_3: msg = (if v_164 then CH(i_cr_2,i_offer_2) else caught-fail) in
                                    {1082}let payload_3: bitstring = (if v_164 then catch-fail((if v_166 then aead_enc(ech_a_4,key_3,(base_nonce_3,n_2),o_client_hello_ADD_2,i_client_hello_3) else fail-any)) else caught-fail) in
                                    {1083}let v_167: bool = not-caught-fail(payload_3) in
                                    {1084}let o_ech_ext_3: echExt = (if v_167 then ECHClientHelloOuter(ech_h_4,ech_a_4,config_id_2,zero,payload_3) else caught-fail) in
                                    {1085}let o_offer_3: params = (if v_167 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_1,SNI(o_dom_2),o_ech_ext_3,empty_extra_ext,o_psk_ext_3) else caught-fail) in
                                    {1086}let (o_client_hello'_1: msg,i_client_hello'_1: msg,i_cr'_1: bytes32,i_kex_data'_1: bitstring,psk_data'_1: bitstring) = (if v_164 then (if v_167 then (CH(o_cr_2,o_offer_3),i_client_hello_3,i_cr_2,i_kex_data_2,psk_data_3) else fail-any) else fail-any) in
                                    {1087}out(io, o_client_hello'_1);
                                    {1088}in(io, server_hello'_1: msg);
                                    {1089}let SH(B32(sr24'_1: bytes24,sr8'_1: bytes8),params'_1: params) = server_hello'_1 in
                                    {1091}let sh_modified_2: msg = SH(B32(sr24'_1,zero8),params'_1) in
                                    {1090}let cur_log_IN1_HRR_IN2_1: bitstring = (cur_log_IN1_HRR,i_client_hello'_1) in
                                    {1092}let cur_log_sh_2: bitstring = (cur_log_IN1_HRR_IN2_1,sh_modified_2) in
                                    {1093}let transcript_ech_conf_2: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_2)) in
                                    {1094}let v_168: bool = not-caught-fail(transcript_ech_conf_2) in
                                    {1096}let k_17: bitstring = (if v_168 then catch-fail(b32_2_b(get_random(i_client_hello'_1))) else caught-fail) in
                                    {1097}let v_169: bool = not-caught-fail(k_17) in
                                    {1095}let s_22: bitstring = (if v_168 then zero else caught-fail) in
                                    {1098}let k_18: bitstring = (if v_168 then catch-fail((if v_169 then hmac(@6_backend_h,s_22,k_17) else fail-any)) else caught-fail) in
                                    {1099}let v_170: bool = not-caught-fail(k_18) in
                                    {1100}let l_46: label = (if v_170 then ech_accept_confirmation else caught-fail) in
                                    {1101}let x_53: bitstring = (if v_170 then (l_46,cur_log_sh_2) else caught-fail) in
                                    {1102}let sr8_3: bytes8 = (if v_168 then catch-fail(crop_into_bytes8((if v_170 then hmac(@6_backend_h,k_18,x_53) else fail-any))) else caught-fail) in
                                    {1103}let v_171: bool = not-caught-fail(sr8_3) in
                                    {1104}if (B32(sr24'_1,sr8'_1) = (if v_168 then (if v_171 then B32(sr24'_1,sr8_3) else fail-any) else fail-any)) then
                                    {1105}let (x_54: bitstring,g_3: group) = i_kex_data'_1 in
                                    {1106}let (psk_offer_1: preSharedKey,id_offer_1: identityPsk,es_offer_1: bitstring,is_safe_offer_1: bool) = psk_data'_1 in
                                    {1107}event Client_PSKOffer(@6_id_client,psk_offer_1,id_offer_1,is_safe_offer_1);
                                    {1108}event Client_Rand_client(@6_id_client,i_cr'_1);
                                    {1109}event Client_DH_client(@6_id_client,dh_pub(g_3,x_54));
                                    {1110}event Client_server_domain(@6_id_client,backend_dom);
                                    {1111}let SH(sr_9: bytes32,mode_2: params) = server_hello'_1 in
                                    {1112}event Client_Rand_server(@6_id_client,sr_9);
                                    {1113}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_3,gy_2: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_6: preSharedKeyExt) = mode_2 in
                                    (
                                        {1115}event Client_DH_server(@6_id_client,gy_2);
                                        {1116}let v_172: bool = (psk_ext_6 = empty_psk_ext) in
                                        {1117}let psk_18: preSharedKey = (if v_172 then NoPsk else caught-fail) in
                                        {1119}let k_19: bitstring = (if v_172 then catch-fail(psk2b(psk_18)) else caught-fail) in
                                        {1120}let v_173: bool = not-caught-fail(k_19) in
                                        {1118}let s_23: bitstring = (if v_172 then zero else caught-fail) in
                                        {1121}let early_secret_10: bitstring = (if v_172 then catch-fail((if v_173 then hmac(@6_backend_h,s_23,k_19) else fail-any)) else caught-fail) in
                                        {1122}let v_174: bool = not-caught-fail(early_secret_10) in
                                        {1124}let m_11: bitstring = (if v_174 then zero else caught-fail) in
                                        {1125}let h_43: bitstring = (if v_174 then catch-fail(hash(@6_backend_h,m_11)) else caught-fail) in
                                        {1126}let v_175: bool = not-caught-fail(h_43) in
                                        {1123}let l_47: label = (if v_174 then tls13_ext_res_binder else caught-fail) in
                                        {1127}let x_55: bitstring = (if v_175 then (l_47,h_43) else caught-fail) in
                                        {1128}let binder_key_7: bitstring = (if v_174 then catch-fail((if v_175 then hmac(@6_backend_h,early_secret_10,x_55) else fail-any)) else caught-fail) in
                                        {1129}let v_176: bool = not-caught-fail(binder_key_7) in
                                        {1130}let v_177: bitstring = (if v_172 then catch-fail((if v_174 then (if v_176 then (early_secret_10,binder_key_7) else fail-any) else fail-any)) else caught-fail) in
                                        {1131}let v_178: bool = (not-caught-fail(v_177) && success?(1-proj-2-tuple(v_177))) in
                                        {1132}let kb_7: mac_key = (if v_178 then 2-proj-2-tuple(v_177) else caught-fail) in
                                        {1133}let es_8: bitstring = (if v_178 then 1-proj-2-tuple(v_177) else caught-fail) in
                                        {1134}let v_179: bitstring = (if not(v_172) then catch-fail(psk_data'_1) else caught-fail) in
                                        {1135}let v_180: bool = (not-caught-fail(v_179) && success?(1-proj-4-tuple(v_179))) in
                                        {1136}let is_safe_5: bool = (if v_180 then 4-proj-4-tuple(v_179) else caught-fail) in
                                        {1137}let es_9: bitstring = (if v_180 then 3-proj-4-tuple(v_179) else caught-fail) in
                                        {1138}let id_11: identityPsk = (if v_180 then 2-proj-4-tuple(v_179) else caught-fail) in
                                        {1139}let psk_19: preSharedKey = (if v_180 then 1-proj-4-tuple(v_179) else caught-fail) in
                                        {1140}let (psk_20: preSharedKey,early_secret_11: bitstring,valid_1: bool,safe_psk_4: bool) = (if v_172 then (if v_178 then (NoPsk,es_8,true,false) else fail-any) else (if v_180 then (psk_19,es_9,((psk_19 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_6)),is_safe_5) else fail-any)) in
                                        {1141}event Client_PSKChoosen(@6_id_client,psk_20,safe_psk_4);
                                        {1142}if valid_1 then
                                        (
                                            {1145}new s_24[]: seed;
                                            {1143}let gxy_3: element = catch-fail(dh_decap_fun(g_3,gy_2,x_54)) in
                                            {1144}let v_181: bool = not-caught-fail(gxy_3) in
                                            {1146}let gxy_4: element = (if v_181 then gxy_3 else dh_f(s_24)) in
                                            {1147}event Client_DH_gxy(@6_id_client,gxy_4);
                                            {1149}let m_12: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {1150}let v_182: bool = not-caught-fail(m_12) in
                                            {1151}let h_44: bitstring = (if v_182 then catch-fail(hash(@6_backend_h,m_12)) else caught-fail) in
                                            {1152}let v_183: bool = not-caught-fail(h_44) in
                                            {1148}let l_48: label = tls13_derived in
                                            {1153}let x_56: bitstring = (if v_183 then (l_48,h_44) else caught-fail) in
                                            {1154}let extra_4: bitstring = catch-fail((if v_182 then (if v_183 then hmac(@6_backend_h,early_secret_11,x_56) else fail-any) else fail-any)) in
                                            {1155}let v_184: bool = not-caught-fail(extra_4) in
                                            {1156}let handshake_secret_2: bitstring = (if v_184 then hmac(@6_backend_h,extra_4,gxy_4) else fail-any) in
                                            {1158}let m_13: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {1159}let v_185: bool = not-caught-fail(m_13) in
                                            {1160}let h_45: bitstring = (if v_185 then catch-fail(hash(@6_backend_h,m_13)) else caught-fail) in
                                            {1161}let v_186: bool = not-caught-fail(h_45) in
                                            {1157}let l_49: label = tls13_derived in
                                            {1162}let x_57: bitstring = (if v_186 then (l_49,h_45) else caught-fail) in
                                            {1163}let extra_5: bitstring = catch-fail((if v_185 then (if v_186 then hmac(@6_backend_h,handshake_secret_2,x_57) else fail-any) else fail-any)) in
                                            {1164}let v_187: bool = not-caught-fail(extra_5) in
                                            {1165}let k_20: bitstring = (if v_187 then zero else caught-fail) in
                                            {1166}let master_secret_11: bitstring = (if v_187 then catch-fail(hmac(@6_backend_h,handshake_secret_2,k_20)) else caught-fail) in
                                            {1167}let v_188: bool = not-caught-fail(master_secret_11) in
                                            {1114}let cur_log2_6: bitstring = (cur_log_IN1_HRR_IN2_1,server_hello'_1) in
                                            {1169}let h_46: bitstring = (if v_188 then catch-fail(hash(@6_backend_h,cur_log2_6)) else caught-fail) in
                                            {1170}let v_189: bool = not-caught-fail(h_46) in
                                            {1168}let l_50: label = (if v_188 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {1171}let x_58: bitstring = (if v_189 then (l_50,h_46) else caught-fail) in
                                            {1172}let client_hts_2: bitstring = (if v_188 then catch-fail((if v_189 then hmac(@6_backend_h,handshake_secret_2,x_58) else fail-any)) else caught-fail) in
                                            {1173}let v_190: bool = not-caught-fail(client_hts_2) in
                                            {1175}let h_47: bitstring = (if v_190 then catch-fail(hash(@6_backend_h,cur_log2_6)) else caught-fail) in
                                            {1176}let v_191: bool = not-caught-fail(h_47) in
                                            {1174}let l_51: label = (if v_190 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {1177}let x_59: bitstring = (if v_191 then (l_51,h_47) else caught-fail) in
                                            {1178}let server_hts_2: bitstring = (if v_190 then catch-fail((if v_191 then hmac(@6_backend_h,handshake_secret_2,x_59) else fail-any)) else caught-fail) in
                                            {1179}let v_192: bool = not-caught-fail(server_hts_2) in
                                            {1181}let h_48: bitstring = (if v_192 then zero else caught-fail) in
                                            {1180}let l_52: label = (if v_192 then tls13_key else caught-fail) in
                                            {1182}let x_60: bitstring = (if v_192 then (l_52,h_48) else caught-fail) in
                                            {1183}let client_wkh_2: bitstring = (if v_192 then catch-fail(hmac(@6_backend_h,client_hts_2,x_60)) else caught-fail) in
                                            {1184}let v_193: bool = not-caught-fail(client_wkh_2) in
                                            {1186}let h_49: bitstring = (if v_193 then zero else caught-fail) in
                                            {1185}let l_53: label = (if v_193 then tls13_key else caught-fail) in
                                            {1187}let x_61: bitstring = (if v_193 then (l_53,h_49) else caught-fail) in
                                            {1188}let server_wkh_2: bitstring = (if v_193 then catch-fail(hmac(@6_backend_h,server_hts_2,x_61)) else caught-fail) in
                                            {1189}let v_194: bool = not-caught-fail(server_wkh_2) in
                                            {1191}let h_50: bitstring = (if v_194 then zero else caught-fail) in
                                            {1190}let l_54: label = (if v_194 then tls13_finished else caught-fail) in
                                            {1192}let x_62: bitstring = (if v_194 then (l_54,h_50) else caught-fail) in
                                            {1193}let client_fk_2: bitstring = (if v_194 then catch-fail(hmac(@6_backend_h,client_hts_2,x_62)) else caught-fail) in
                                            {1194}let v_195: bool = not-caught-fail(client_fk_2) in
                                            {1196}let h_51: bitstring = (if v_195 then zero else caught-fail) in
                                            {1195}let l_55: label = (if v_195 then tls13_finished else caught-fail) in
                                            {1197}let x_63: bitstring = (if v_195 then (l_55,h_51) else caught-fail) in
                                            {1198}let server_fk_2: bitstring = (if v_195 then catch-fail(hmac(@6_backend_h,server_hts_2,x_63)) else caught-fail) in
                                            {1199}let v_196: bool = not-caught-fail(server_fk_2) in
                                            {1200}let (master_secret_12: bitstring,chk_9: aead_key,shk_8: aead_key,cfin_9: mac_key,sfin_8: mac_key) = (if v_187 then (if v_188 then (if v_190 then (if v_192 then (if v_193 then (if v_194 then (if v_195 then (if v_196 then (master_secret_11,client_wkh_2,server_wkh_2,client_fk_2,server_fk_2) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {1201}event Client_chk(@6_id_client,chk_9);
                                            {1202}event Client_shk(@6_id_client,shk_8);
                                            {1203}event Client_cfin(@6_id_client,cfin_9);
                                            {1204}event Client_sfin(@6_id_client,sfin_8);
                                            {1205}in(io, enc_ee_msg_1: bitstring);
                                            {1206}let ee_msg_2: msg = aead_dec(@6_backend_a,shk_8,0,zero,enc_ee_msg_1) in
                                            {1207}let EE(ech_ee_1: echExt,extra_ee_1: extraExt) = ee_msg_2 in
                                            {1208}let cur_log2_7: bitstring = (cur_log2_6,ee_msg_2) in
                                            {1209}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_1,sr_9,@6_backend_h,@6_backend_a,c_dom_5,backend_dom,psk_20,safe_psk_4,@6_comp_psk,master_secret_12,chk_9,0,shk_8,1,cfin_9,sfin_8,cur_log2_7)))
                                        )
                                        else
                                            {1210}out(io, illegal_parameter)
                                    )
                                    else
                                        {1211}out(io, illegal_parameter)
                            )
                            else
                                {1213}let psk_21: preSharedKey = NoPsk in
                                {1215}let k_21: bitstring = catch-fail(psk2b(psk_21)) in
                                {1216}let v_197: bool = not-caught-fail(k_21) in
                                {1214}let s_25: bitstring = zero in
                                {1217}let early_secret_12: bitstring = catch-fail((if v_197 then hmac(@6_backend_h,s_25,k_21) else fail-any)) in
                                {1218}let v_198: bool = not-caught-fail(early_secret_12) in
                                {1220}let m_14: bitstring = (if v_198 then zero else caught-fail) in
                                {1221}let h_52: bitstring = (if v_198 then catch-fail(hash(@6_backend_h,m_14)) else caught-fail) in
                                {1222}let v_199: bool = not-caught-fail(h_52) in
                                {1219}let l_56: label = (if v_198 then tls13_ext_res_binder else caught-fail) in
                                {1223}let x_64: bitstring = (if v_199 then (l_56,h_52) else caught-fail) in
                                {1224}let binder_key_8: bitstring = (if v_198 then catch-fail((if v_199 then hmac(@6_backend_h,early_secret_12,x_64) else fail-any)) else caught-fail) in
                                {1225}let v_200: bool = not-caught-fail(binder_key_8) in
                                {1226}let v_201: bitstring = catch-fail((if v_198 then (if v_200 then (early_secret_12,binder_key_8) else fail-any) else fail-any)) in
                                {1227}let v_202: bool = (not-caught-fail(v_201) && success?(1-proj-2-tuple(v_201))) in
                                {1228}let kb_8: mac_key = (if v_202 then 2-proj-2-tuple(v_201) else caught-fail) in
                                {1229}let es_10: bitstring = (if v_202 then 1-proj-2-tuple(v_201) else caught-fail) in
                                {1230}let v_203: bitstring = catch-fail((if v_202 then (empty_psk_ext,(NoPsk,zero,es_10,false)) else fail-any)) in
                                {1231}let v_204: bool = (not-caught-fail(v_203) && success?(1-proj-2-tuple(v_203))) in
                                {1232}let psk_data_4: bitstring = (if v_204 then 2-proj-2-tuple(v_203) else caught-fail) in
                                {1233}let psk_ext_7: preSharedKeyExt = (if v_204 then 1-proj-2-tuple(v_203) else caught-fail) in
                                {1236}new fake_id_3[]: identityPsk;
                                {1237}new fake_binder_3[]: bitstring;
                                {1243}let v_205: hpkeContext = (if v_204 then catch-fail(context) else caught-fail) in
                                {1244}let v_206: bool = (not-caught-fail(v_205) && ((S =nf 1-proj-hpke_context(v_205)) && success?(1-proj-hpke_context(v_205)))) in
                                {1245}let base_nonce_4: bitstring = (if v_206 then 3-proj-hpke_context(v_205) else caught-fail) in
                                {1246}let key_4: aead_key = (if v_206 then 2-proj-hpke_context(v_205) else caught-fail) in
                                {1242}let n_3: nat = (if v_204 then 2 else caught-fail) in
                                {1239}let o_ech_ext_ADD_3: echExt = (if v_204 then ECHClientHelloOuter(ech_h_4,ech_a_4,config_id_2,zero,zero) else caught-fail) in
                                {1238}let o_psk_ext_4: preSharedKeyExt = (if v_204 then (if @6_use_psk then client_psk_ext(fake_id_3,fake_binder_3) else empty_psk_ext) else caught-fail) in
                                {1240}let o_offer_ADD_3: params = (if v_204 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_1,SNI(o_dom_2),o_ech_ext_ADD_3,empty_extra_ext,o_psk_ext_4) else caught-fail) in
                                {1241}let o_client_hello_ADD_3: msg = (if v_204 then CH(o_cr_2,o_offer_ADD_3) else caught-fail) in
                                {1234}let i_offer_3: params = (if v_204 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_1,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_7) else caught-fail) in
                                {1235}let i_client_hello_4: msg = (if v_204 then CH(i_cr_2,i_offer_3) else caught-fail) in
                                {1247}let payload_4: bitstring = (if v_204 then catch-fail((if v_206 then aead_enc(ech_a_4,key_4,(base_nonce_4,n_3),o_client_hello_ADD_3,i_client_hello_4) else fail-any)) else caught-fail) in
                                {1248}let v_207: bool = not-caught-fail(payload_4) in
                                {1249}let o_ech_ext_4: echExt = (if v_207 then ECHClientHelloOuter(ech_h_4,ech_a_4,config_id_2,zero,payload_4) else caught-fail) in
                                {1250}let o_offer_4: params = (if v_207 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_1,SNI(o_dom_2),o_ech_ext_4,empty_extra_ext,o_psk_ext_4) else caught-fail) in
                                {1251}let (o_client_hello'_2: msg,i_client_hello'_2: msg,i_cr'_2: bytes32,i_kex_data'_2: bitstring,psk_data'_2: bitstring) = (if v_204 then (if v_207 then (CH(o_cr_2,o_offer_4),i_client_hello_4,i_cr_2,i_kex_data_2,psk_data_4) else fail-any) else fail-any) in
                                {1252}out(io, o_client_hello'_2);
                                {1253}in(io, server_hello'_2: msg);
                                {1254}let SH(B32(sr24'_2: bytes24,sr8'_2: bytes8),params'_2: params) = server_hello'_2 in
                                {1256}let sh_modified_3: msg = SH(B32(sr24'_2,zero8),params'_2) in
                                {1255}let cur_log_IN1_HRR_IN2_2: bitstring = (cur_log_IN1_HRR,i_client_hello'_2) in
                                {1257}let cur_log_sh_3: bitstring = (cur_log_IN1_HRR_IN2_2,sh_modified_3) in
                                {1258}let transcript_ech_conf_3: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_3)) in
                                {1259}let v_208: bool = not-caught-fail(transcript_ech_conf_3) in
                                {1261}let k_22: bitstring = (if v_208 then catch-fail(b32_2_b(get_random(i_client_hello'_2))) else caught-fail) in
                                {1262}let v_209: bool = not-caught-fail(k_22) in
                                {1260}let s_26: bitstring = (if v_208 then zero else caught-fail) in
                                {1263}let k_23: bitstring = (if v_208 then catch-fail((if v_209 then hmac(@6_backend_h,s_26,k_22) else fail-any)) else caught-fail) in
                                {1264}let v_210: bool = not-caught-fail(k_23) in
                                {1265}let l_57: label = (if v_210 then ech_accept_confirmation else caught-fail) in
                                {1266}let x_65: bitstring = (if v_210 then (l_57,cur_log_sh_3) else caught-fail) in
                                {1267}let sr8_4: bytes8 = (if v_208 then catch-fail(crop_into_bytes8((if v_210 then hmac(@6_backend_h,k_23,x_65) else fail-any))) else caught-fail) in
                                {1268}let v_211: bool = not-caught-fail(sr8_4) in
                                {1269}if (B32(sr24'_2,sr8'_2) = (if v_208 then (if v_211 then B32(sr24'_2,sr8_4) else fail-any) else fail-any)) then
                                {1270}let (x_66: bitstring,g_4: group) = i_kex_data'_2 in
                                {1271}let (psk_offer_2: preSharedKey,id_offer_2: identityPsk,es_offer_2: bitstring,is_safe_offer_2: bool) = psk_data'_2 in
                                {1272}event Client_PSKOffer(@6_id_client,psk_offer_2,id_offer_2,is_safe_offer_2);
                                {1273}event Client_Rand_client(@6_id_client,i_cr'_2);
                                {1274}event Client_DH_client(@6_id_client,dh_pub(g_4,x_66));
                                {1275}event Client_server_domain(@6_id_client,backend_dom);
                                {1276}let SH(sr_10: bytes32,mode_3: params) = server_hello'_2 in
                                {1277}event Client_Rand_server(@6_id_client,sr_10);
                                {1278}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_4,gy_3: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_8: preSharedKeyExt) = mode_3 in
                                (
                                    {1280}event Client_DH_server(@6_id_client,gy_3);
                                    {1281}let v_212: bool = (psk_ext_8 = empty_psk_ext) in
                                    {1282}let psk_22: preSharedKey = (if v_212 then NoPsk else caught-fail) in
                                    {1284}let k_24: bitstring = (if v_212 then catch-fail(psk2b(psk_22)) else caught-fail) in
                                    {1285}let v_213: bool = not-caught-fail(k_24) in
                                    {1283}let s_27: bitstring = (if v_212 then zero else caught-fail) in
                                    {1286}let early_secret_13: bitstring = (if v_212 then catch-fail((if v_213 then hmac(@6_backend_h,s_27,k_24) else fail-any)) else caught-fail) in
                                    {1287}let v_214: bool = not-caught-fail(early_secret_13) in
                                    {1289}let m_15: bitstring = (if v_214 then zero else caught-fail) in
                                    {1290}let h_53: bitstring = (if v_214 then catch-fail(hash(@6_backend_h,m_15)) else caught-fail) in
                                    {1291}let v_215: bool = not-caught-fail(h_53) in
                                    {1288}let l_58: label = (if v_214 then tls13_ext_res_binder else caught-fail) in
                                    {1292}let x_67: bitstring = (if v_215 then (l_58,h_53) else caught-fail) in
                                    {1293}let binder_key_9: bitstring = (if v_214 then catch-fail((if v_215 then hmac(@6_backend_h,early_secret_13,x_67) else fail-any)) else caught-fail) in
                                    {1294}let v_216: bool = not-caught-fail(binder_key_9) in
                                    {1295}let v_217: bitstring = (if v_212 then catch-fail((if v_214 then (if v_216 then (early_secret_13,binder_key_9) else fail-any) else fail-any)) else caught-fail) in
                                    {1296}let v_218: bool = (not-caught-fail(v_217) && success?(1-proj-2-tuple(v_217))) in
                                    {1297}let kb_9: mac_key = (if v_218 then 2-proj-2-tuple(v_217) else caught-fail) in
                                    {1298}let es_11: bitstring = (if v_218 then 1-proj-2-tuple(v_217) else caught-fail) in
                                    {1299}let v_219: bitstring = (if not(v_212) then catch-fail(psk_data'_2) else caught-fail) in
                                    {1300}let v_220: bool = (not-caught-fail(v_219) && success?(1-proj-4-tuple(v_219))) in
                                    {1301}let is_safe_6: bool = (if v_220 then 4-proj-4-tuple(v_219) else caught-fail) in
                                    {1302}let es_12: bitstring = (if v_220 then 3-proj-4-tuple(v_219) else caught-fail) in
                                    {1303}let id_12: identityPsk = (if v_220 then 2-proj-4-tuple(v_219) else caught-fail) in
                                    {1304}let psk_23: preSharedKey = (if v_220 then 1-proj-4-tuple(v_219) else caught-fail) in
                                    {1305}let (psk_24: preSharedKey,early_secret_14: bitstring,valid_2: bool,safe_psk_5: bool) = (if v_212 then (if v_218 then (NoPsk,es_11,true,false) else fail-any) else (if v_220 then (psk_23,es_12,((psk_23 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_8)),is_safe_6) else fail-any)) in
                                    {1306}event Client_PSKChoosen(@6_id_client,psk_24,safe_psk_5);
                                    {1307}if valid_2 then
                                    (
                                        {1310}new s_28[]: seed;
                                        {1308}let gxy_5: element = catch-fail(dh_decap_fun(g_4,gy_3,x_66)) in
                                        {1309}let v_221: bool = not-caught-fail(gxy_5) in
                                        {1311}let gxy_6: element = (if v_221 then gxy_5 else dh_f(s_28)) in
                                        {1312}event Client_DH_gxy(@6_id_client,gxy_6);
                                        {1314}let m_16: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {1315}let v_222: bool = not-caught-fail(m_16) in
                                        {1316}let h_54: bitstring = (if v_222 then catch-fail(hash(@6_backend_h,m_16)) else caught-fail) in
                                        {1317}let v_223: bool = not-caught-fail(h_54) in
                                        {1313}let l_59: label = tls13_derived in
                                        {1318}let x_68: bitstring = (if v_223 then (l_59,h_54) else caught-fail) in
                                        {1319}let extra_6: bitstring = catch-fail((if v_222 then (if v_223 then hmac(@6_backend_h,early_secret_14,x_68) else fail-any) else fail-any)) in
                                        {1320}let v_224: bool = not-caught-fail(extra_6) in
                                        {1321}let handshake_secret_3: bitstring = (if v_224 then hmac(@6_backend_h,extra_6,gxy_6) else fail-any) in
                                        {1323}let m_17: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {1324}let v_225: bool = not-caught-fail(m_17) in
                                        {1325}let h_55: bitstring = (if v_225 then catch-fail(hash(@6_backend_h,m_17)) else caught-fail) in
                                        {1326}let v_226: bool = not-caught-fail(h_55) in
                                        {1322}let l_60: label = tls13_derived in
                                        {1327}let x_69: bitstring = (if v_226 then (l_60,h_55) else caught-fail) in
                                        {1328}let extra_7: bitstring = catch-fail((if v_225 then (if v_226 then hmac(@6_backend_h,handshake_secret_3,x_69) else fail-any) else fail-any)) in
                                        {1329}let v_227: bool = not-caught-fail(extra_7) in
                                        {1330}let k_25: bitstring = (if v_227 then zero else caught-fail) in
                                        {1331}let master_secret_13: bitstring = (if v_227 then catch-fail(hmac(@6_backend_h,handshake_secret_3,k_25)) else caught-fail) in
                                        {1332}let v_228: bool = not-caught-fail(master_secret_13) in
                                        {1279}let cur_log2_8: bitstring = (cur_log_IN1_HRR_IN2_2,server_hello'_2) in
                                        {1334}let h_56: bitstring = (if v_228 then catch-fail(hash(@6_backend_h,cur_log2_8)) else caught-fail) in
                                        {1335}let v_229: bool = not-caught-fail(h_56) in
                                        {1333}let l_61: label = (if v_228 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {1336}let x_70: bitstring = (if v_229 then (l_61,h_56) else caught-fail) in
                                        {1337}let client_hts_3: bitstring = (if v_228 then catch-fail((if v_229 then hmac(@6_backend_h,handshake_secret_3,x_70) else fail-any)) else caught-fail) in
                                        {1338}let v_230: bool = not-caught-fail(client_hts_3) in
                                        {1340}let h_57: bitstring = (if v_230 then catch-fail(hash(@6_backend_h,cur_log2_8)) else caught-fail) in
                                        {1341}let v_231: bool = not-caught-fail(h_57) in
                                        {1339}let l_62: label = (if v_230 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {1342}let x_71: bitstring = (if v_231 then (l_62,h_57) else caught-fail) in
                                        {1343}let server_hts_3: bitstring = (if v_230 then catch-fail((if v_231 then hmac(@6_backend_h,handshake_secret_3,x_71) else fail-any)) else caught-fail) in
                                        {1344}let v_232: bool = not-caught-fail(server_hts_3) in
                                        {1346}let h_58: bitstring = (if v_232 then zero else caught-fail) in
                                        {1345}let l_63: label = (if v_232 then tls13_key else caught-fail) in
                                        {1347}let x_72: bitstring = (if v_232 then (l_63,h_58) else caught-fail) in
                                        {1348}let client_wkh_3: bitstring = (if v_232 then catch-fail(hmac(@6_backend_h,client_hts_3,x_72)) else caught-fail) in
                                        {1349}let v_233: bool = not-caught-fail(client_wkh_3) in
                                        {1351}let h_59: bitstring = (if v_233 then zero else caught-fail) in
                                        {1350}let l_64: label = (if v_233 then tls13_key else caught-fail) in
                                        {1352}let x_73: bitstring = (if v_233 then (l_64,h_59) else caught-fail) in
                                        {1353}let server_wkh_3: bitstring = (if v_233 then catch-fail(hmac(@6_backend_h,server_hts_3,x_73)) else caught-fail) in
                                        {1354}let v_234: bool = not-caught-fail(server_wkh_3) in
                                        {1356}let h_60: bitstring = (if v_234 then zero else caught-fail) in
                                        {1355}let l_65: label = (if v_234 then tls13_finished else caught-fail) in
                                        {1357}let x_74: bitstring = (if v_234 then (l_65,h_60) else caught-fail) in
                                        {1358}let client_fk_3: bitstring = (if v_234 then catch-fail(hmac(@6_backend_h,client_hts_3,x_74)) else caught-fail) in
                                        {1359}let v_235: bool = not-caught-fail(client_fk_3) in
                                        {1361}let h_61: bitstring = (if v_235 then zero else caught-fail) in
                                        {1360}let l_66: label = (if v_235 then tls13_finished else caught-fail) in
                                        {1362}let x_75: bitstring = (if v_235 then (l_66,h_61) else caught-fail) in
                                        {1363}let server_fk_3: bitstring = (if v_235 then catch-fail(hmac(@6_backend_h,server_hts_3,x_75)) else caught-fail) in
                                        {1364}let v_236: bool = not-caught-fail(server_fk_3) in
                                        {1365}let (master_secret_14: bitstring,chk_10: aead_key,shk_9: aead_key,cfin_10: mac_key,sfin_9: mac_key) = (if v_227 then (if v_228 then (if v_230 then (if v_232 then (if v_233 then (if v_234 then (if v_235 then (if v_236 then (master_secret_13,client_wkh_3,server_wkh_3,client_fk_3,server_fk_3) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {1366}event Client_chk(@6_id_client,chk_10);
                                        {1367}event Client_shk(@6_id_client,shk_9);
                                        {1368}event Client_cfin(@6_id_client,cfin_10);
                                        {1369}event Client_sfin(@6_id_client,sfin_9);
                                        {1370}in(io, enc_ee_msg_2: bitstring);
                                        {1371}let ee_msg_3: msg = aead_dec(@6_backend_a,shk_9,0,zero,enc_ee_msg_2) in
                                        {1372}let EE(ech_ee_2: echExt,extra_ee_2: extraExt) = ee_msg_3 in
                                        {1373}let cur_log2_9: bitstring = (cur_log2_8,ee_msg_3) in
                                        {1374}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_2,sr_10,@6_backend_h,@6_backend_a,c_dom_5,backend_dom,psk_24,safe_psk_5,@6_comp_psk,master_secret_14,chk_10,0,shk_9,1,cfin_10,sfin_9,cur_log2_9)))
                                    )
                                    else
                                        {1375}out(io, illegal_parameter)
                                )
                                else
                                    {1376}out(io, illegal_parameter)
                        )
                        else
                            {1378}let ech_config(config_id_3: configId,ech_g_5: group,pkR_5: element,o_dom_3: domain,ech_h_5: hash_alg,ech_a_5: aead_alg) = ech_conf in
                            {1379}new rand24_5[]: bytes24;
                            {1380}new rand8_5[]: bytes8;
                            {1383}new s_29[]: seed;
                            {1384}let gx_11: element = dh_pub(@6_tls_g,dh_k(s_29)) in
                            {1385}let v_237: bitstring = (dh_k(s_29),gx_11) in
                            {1386}let v_238: bool = success?(1-proj-2-tuple(v_237)) in
                            {1387}let gx_12: element = (if v_238 then 2-proj-2-tuple(v_237) else caught-fail) in
                            {1388}let x_76: bitstring = (if v_238 then 1-proj-2-tuple(v_237) else caught-fail) in
                            {1382}let send_key_share_2: bool = true in
                            {1389}let kex_4: kex_alg = (if v_238 then (if send_key_share_2 then DHE_kex(@6_tls_g,gx_12) else DHE_group(@6_tls_g)) else caught-fail) in
                            {1390}let (o_kex_ext_2: keyShareExt,kex_data: bitstring) = (if v_238 then (client_kex_ext(kex_4),(x_76,@6_tls_g)) else fail-any) in
                            {1381}let o_cr_3: bytes32 = B32(rand24_5,rand8_5) in
                            {1377}let cur_log_OU1_HRR: bitstring = ((zero,o_client_hello),server_hello_1) in
                            {1391}if @6_use_grease then
                            (
                                {1393}if @6_use_psk then
                                (
                                    {1392}let extra_8: extraExt = empty_extra_ext in
                                    {1394}let (psk_25: preSharedKey,id_13: identityPsk,old_es_2: bitstring,is_safe_7: bool) = psk_data_1 in
                                    (
                                        {1398}let k_26: bitstring = catch-fail(psk2b(psk_25)) in
                                        {1399}let v_239: bool = not-caught-fail(k_26) in
                                        {1397}let s_30: bitstring = zero in
                                        {1400}let early_secret_15: bitstring = catch-fail((if v_239 then hmac(@6_tls_h,s_30,k_26) else fail-any)) in
                                        {1401}let v_240: bool = not-caught-fail(early_secret_15) in
                                        {1403}let m_18: bitstring = (if v_240 then zero else caught-fail) in
                                        {1404}let h_62: bitstring = (if v_240 then catch-fail(hash(@6_tls_h,m_18)) else caught-fail) in
                                        {1405}let v_241: bool = not-caught-fail(h_62) in
                                        {1402}let l_67: label = (if v_240 then tls13_ext_res_binder else caught-fail) in
                                        {1406}let x_77: bitstring = (if v_241 then (l_67,h_62) else caught-fail) in
                                        {1407}let binder_key_10: bitstring = (if v_240 then catch-fail((if v_241 then hmac(@6_tls_h,early_secret_15,x_77) else fail-any)) else caught-fail) in
                                        {1408}let v_242: bool = not-caught-fail(binder_key_10) in
                                        {1409}let v_243: bitstring = catch-fail((if v_240 then (if v_242 then (early_secret_15,binder_key_10) else fail-any) else fail-any)) in
                                        {1410}let v_244: bool = (not-caught-fail(v_243) && success?(1-proj-2-tuple(v_243))) in
                                        {1411}let kb_10: mac_key = (if v_244 then 2-proj-2-tuple(v_243) else caught-fail) in
                                        {1412}let es_13: bitstring = (if v_244 then 1-proj-2-tuple(v_243) else caught-fail) in
                                        {1395}let offer_5: params = nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_2,SNI(o_dom_3),o_ech_ext_1,extra_8,trunc_client_psk_ext(id_13)) in
                                        {1396}let cur_log'_5: bitstring = (cur_log_OU1_HRR,CH(o_cr_3,offer_5)) in
                                        {1413}let binders_4: bitstring = (if v_244 then catch-fail(hmac(@6_tls_h,kb_10,cur_log'_5)) else caught-fail) in
                                        {1414}let v_245: bool = not-caught-fail(binders_4) in
                                        {1415}let v_246: bitstring = catch-fail((if v_244 then (if v_245 then (client_psk_ext(id_13,binders_4),(psk_25,id_13,es_13,is_safe_7)) else fail-any) else fail-any)) in
                                        {1416}let v_247: bool = (not-caught-fail(v_246) && success?(1-proj-2-tuple(v_246))) in
                                        {1417}let psk_data_5: bitstring = (if v_247 then 2-proj-2-tuple(v_246) else caught-fail) in
                                        {1418}let psk_ext_9: preSharedKeyExt = (if v_247 then 1-proj-2-tuple(v_246) else caught-fail) in
                                        {1419}let o_offer_5: params = (if v_247 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_2,SNI(o_dom_3),o_ech_ext_1,empty_extra_ext,psk_ext_9) else caught-fail) in
                                        {1420}let (client_hello': msg,cr': bytes32,kex_data': bitstring,psk_data'_3: bitstring) = (if v_247 then (CH(o_cr_3,o_offer_5),o_cr_3,kex_data,psk_data_5) else fail-any) in
                                        {1421}out(io, client_hello');
                                        {1423}in(io, server_hello'_3: msg);
                                        {1424}let SH(sr': bytes32,mode': params) = server_hello'_3 in
                                        (
                                            {1425}if (sr' = B32(HRR24,HRR8)) then
                                                {1426}out(io, unexpected_message)
                                            else
                                                {1427}let (x_78: bitstring,g_5: group) = kex_data' in
                                                {1428}let (psk_offer_3: preSharedKey,id_offer_3: identityPsk,es_offer_3: bitstring,is_safe_offer_3: bool) = psk_data'_3 in
                                                {1429}event Client_PSKOffer(@6_id_client,psk_offer_3,id_offer_3,is_safe_offer_3);
                                                {1430}event Client_Rand_client(@6_id_client,cr');
                                                {1431}event Client_DH_client(@6_id_client,dh_pub(g_5,x_78));
                                                {1432}event Client_server_domain(@6_id_client,o_dom);
                                                {1433}let SH(sr_11: bytes32,mode_4: params) = server_hello'_3 in
                                                {1434}event Client_Rand_server(@6_id_client,sr_11);
                                                {1435}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_5,gy_4: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_10: preSharedKeyExt) = mode_4 in
                                                (
                                                    {1437}event Client_DH_server(@6_id_client,gy_4);
                                                    {1438}let v_248: bool = (psk_ext_10 = empty_psk_ext) in
                                                    {1439}let psk_26: preSharedKey = (if v_248 then NoPsk else caught-fail) in
                                                    {1441}let k_27: bitstring = (if v_248 then catch-fail(psk2b(psk_26)) else caught-fail) in
                                                    {1442}let v_249: bool = not-caught-fail(k_27) in
                                                    {1440}let s_31: bitstring = (if v_248 then zero else caught-fail) in
                                                    {1443}let early_secret_16: bitstring = (if v_248 then catch-fail((if v_249 then hmac(@6_tls_h,s_31,k_27) else fail-any)) else caught-fail) in
                                                    {1444}let v_250: bool = not-caught-fail(early_secret_16) in
                                                    {1446}let m_19: bitstring = (if v_250 then zero else caught-fail) in
                                                    {1447}let h_63: bitstring = (if v_250 then catch-fail(hash(@6_tls_h,m_19)) else caught-fail) in
                                                    {1448}let v_251: bool = not-caught-fail(h_63) in
                                                    {1445}let l_68: label = (if v_250 then tls13_ext_res_binder else caught-fail) in
                                                    {1449}let x_79: bitstring = (if v_251 then (l_68,h_63) else caught-fail) in
                                                    {1450}let binder_key_11: bitstring = (if v_250 then catch-fail((if v_251 then hmac(@6_tls_h,early_secret_16,x_79) else fail-any)) else caught-fail) in
                                                    {1451}let v_252: bool = not-caught-fail(binder_key_11) in
                                                    {1452}let v_253: bitstring = (if v_248 then catch-fail((if v_250 then (if v_252 then (early_secret_16,binder_key_11) else fail-any) else fail-any)) else caught-fail) in
                                                    {1453}let v_254: bool = (not-caught-fail(v_253) && success?(1-proj-2-tuple(v_253))) in
                                                    {1454}let kb_11: mac_key = (if v_254 then 2-proj-2-tuple(v_253) else caught-fail) in
                                                    {1455}let es_14: bitstring = (if v_254 then 1-proj-2-tuple(v_253) else caught-fail) in
                                                    {1456}let v_255: bitstring = (if not(v_248) then catch-fail(psk_data'_3) else caught-fail) in
                                                    {1457}let v_256: bool = (not-caught-fail(v_255) && success?(1-proj-4-tuple(v_255))) in
                                                    {1458}let is_safe_8: bool = (if v_256 then 4-proj-4-tuple(v_255) else caught-fail) in
                                                    {1459}let es_15: bitstring = (if v_256 then 3-proj-4-tuple(v_255) else caught-fail) in
                                                    {1460}let id_14: identityPsk = (if v_256 then 2-proj-4-tuple(v_255) else caught-fail) in
                                                    {1461}let psk_27: preSharedKey = (if v_256 then 1-proj-4-tuple(v_255) else caught-fail) in
                                                    {1462}let (psk_28: preSharedKey,early_secret_17: bitstring,valid_3: bool,safe_psk_6: bool) = (if v_248 then (if v_254 then (NoPsk,es_14,true,false) else fail-any) else (if v_256 then (psk_27,es_15,((psk_27 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_10)),is_safe_8) else fail-any)) in
                                                    {1463}event Client_PSKChoosen(@6_id_client,psk_28,safe_psk_6);
                                                    {1464}if valid_3 then
                                                    (
                                                        {1467}new s_32[]: seed;
                                                        {1465}let gxy_7: element = catch-fail(dh_decap_fun(g_5,gy_4,x_78)) in
                                                        {1466}let v_257: bool = not-caught-fail(gxy_7) in
                                                        {1468}let gxy_8: element = (if v_257 then gxy_7 else dh_f(s_32)) in
                                                        {1469}event Client_DH_gxy(@6_id_client,gxy_8);
                                                        {1471}let m_20: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {1472}let v_258: bool = not-caught-fail(m_20) in
                                                        {1473}let h_64: bitstring = (if v_258 then catch-fail(hash(@6_tls_h,m_20)) else caught-fail) in
                                                        {1474}let v_259: bool = not-caught-fail(h_64) in
                                                        {1470}let l_69: label = tls13_derived in
                                                        {1475}let x_80: bitstring = (if v_259 then (l_69,h_64) else caught-fail) in
                                                        {1476}let extra_9: bitstring = catch-fail((if v_258 then (if v_259 then hmac(@6_tls_h,early_secret_17,x_80) else fail-any) else fail-any)) in
                                                        {1477}let v_260: bool = not-caught-fail(extra_9) in
                                                        {1478}let handshake_secret_4: bitstring = (if v_260 then hmac(@6_tls_h,extra_9,gxy_8) else fail-any) in
                                                        {1480}let m_21: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {1481}let v_261: bool = not-caught-fail(m_21) in
                                                        {1482}let h_65: bitstring = (if v_261 then catch-fail(hash(@6_tls_h,m_21)) else caught-fail) in
                                                        {1483}let v_262: bool = not-caught-fail(h_65) in
                                                        {1479}let l_70: label = tls13_derived in
                                                        {1484}let x_81: bitstring = (if v_262 then (l_70,h_65) else caught-fail) in
                                                        {1485}let extra_10: bitstring = catch-fail((if v_261 then (if v_262 then hmac(@6_tls_h,handshake_secret_4,x_81) else fail-any) else fail-any)) in
                                                        {1486}let v_263: bool = not-caught-fail(extra_10) in
                                                        {1487}let k_28: bitstring = (if v_263 then zero else caught-fail) in
                                                        {1488}let master_secret_15: bitstring = (if v_263 then catch-fail(hmac(@6_tls_h,handshake_secret_4,k_28)) else caught-fail) in
                                                        {1489}let v_264: bool = not-caught-fail(master_secret_15) in
                                                        {1422}let cur_log_OU1_HRR_OU2: bitstring = (cur_log_OU1_HRR,client_hello') in
                                                        {1436}let cur_log2_10: bitstring = (cur_log_OU1_HRR_OU2,server_hello'_3) in
                                                        {1491}let h_66: bitstring = (if v_264 then catch-fail(hash(@6_tls_h,cur_log2_10)) else caught-fail) in
                                                        {1492}let v_265: bool = not-caught-fail(h_66) in
                                                        {1490}let l_71: label = (if v_264 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {1493}let x_82: bitstring = (if v_265 then (l_71,h_66) else caught-fail) in
                                                        {1494}let client_hts_4: bitstring = (if v_264 then catch-fail((if v_265 then hmac(@6_tls_h,handshake_secret_4,x_82) else fail-any)) else caught-fail) in
                                                        {1495}let v_266: bool = not-caught-fail(client_hts_4) in
                                                        {1497}let h_67: bitstring = (if v_266 then catch-fail(hash(@6_tls_h,cur_log2_10)) else caught-fail) in
                                                        {1498}let v_267: bool = not-caught-fail(h_67) in
                                                        {1496}let l_72: label = (if v_266 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {1499}let x_83: bitstring = (if v_267 then (l_72,h_67) else caught-fail) in
                                                        {1500}let server_hts_4: bitstring = (if v_266 then catch-fail((if v_267 then hmac(@6_tls_h,handshake_secret_4,x_83) else fail-any)) else caught-fail) in
                                                        {1501}let v_268: bool = not-caught-fail(server_hts_4) in
                                                        {1503}let h_68: bitstring = (if v_268 then zero else caught-fail) in
                                                        {1502}let l_73: label = (if v_268 then tls13_key else caught-fail) in
                                                        {1504}let x_84: bitstring = (if v_268 then (l_73,h_68) else caught-fail) in
                                                        {1505}let client_wkh_4: bitstring = (if v_268 then catch-fail(hmac(@6_tls_h,client_hts_4,x_84)) else caught-fail) in
                                                        {1506}let v_269: bool = not-caught-fail(client_wkh_4) in
                                                        {1508}let h_69: bitstring = (if v_269 then zero else caught-fail) in
                                                        {1507}let l_74: label = (if v_269 then tls13_key else caught-fail) in
                                                        {1509}let x_85: bitstring = (if v_269 then (l_74,h_69) else caught-fail) in
                                                        {1510}let server_wkh_4: bitstring = (if v_269 then catch-fail(hmac(@6_tls_h,server_hts_4,x_85)) else caught-fail) in
                                                        {1511}let v_270: bool = not-caught-fail(server_wkh_4) in
                                                        {1513}let h_70: bitstring = (if v_270 then zero else caught-fail) in
                                                        {1512}let l_75: label = (if v_270 then tls13_finished else caught-fail) in
                                                        {1514}let x_86: bitstring = (if v_270 then (l_75,h_70) else caught-fail) in
                                                        {1515}let client_fk_4: bitstring = (if v_270 then catch-fail(hmac(@6_tls_h,client_hts_4,x_86)) else caught-fail) in
                                                        {1516}let v_271: bool = not-caught-fail(client_fk_4) in
                                                        {1518}let h_71: bitstring = (if v_271 then zero else caught-fail) in
                                                        {1517}let l_76: label = (if v_271 then tls13_finished else caught-fail) in
                                                        {1519}let x_87: bitstring = (if v_271 then (l_76,h_71) else caught-fail) in
                                                        {1520}let server_fk_4: bitstring = (if v_271 then catch-fail(hmac(@6_tls_h,server_hts_4,x_87)) else caught-fail) in
                                                        {1521}let v_272: bool = not-caught-fail(server_fk_4) in
                                                        {1522}let (master_secret_16: bitstring,chk_11: aead_key,shk_10: aead_key,cfin_11: mac_key,sfin_10: mac_key) = (if v_263 then (if v_264 then (if v_266 then (if v_268 then (if v_269 then (if v_270 then (if v_271 then (if v_272 then (master_secret_15,client_wkh_4,server_wkh_4,client_fk_4,server_fk_4) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {1523}event Client_chk(@6_id_client,chk_11);
                                                        {1524}event Client_shk(@6_id_client,shk_10);
                                                        {1525}event Client_cfin(@6_id_client,cfin_11);
                                                        {1526}event Client_sfin(@6_id_client,sfin_10);
                                                        {1527}in(io, enc_ee_msg_3: bitstring);
                                                        {1528}let ee_msg_4: msg = aead_dec(@6_tls_a,shk_10,0,zero,enc_ee_msg_3) in
                                                        {1529}let EE(ech_ee_3: echExt,extra_ee_3: extraExt) = ee_msg_4 in
                                                        {1530}let cur_log2_11: bitstring = (cur_log2_10,ee_msg_4) in
                                                        {1531}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr',sr_11,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_28,safe_psk_6,@6_comp_psk,master_secret_16,chk_11,0,shk_10,1,cfin_11,sfin_10,cur_log2_11)))
                                                    )
                                                    else
                                                        {1532}out(io, illegal_parameter)
                                                )
                                                else
                                                    {1533}out(io, illegal_parameter)
                                        )
                                        else
                                            {1534}out(io, unexpected_message)
                                    )
                                    else
                                        {1684}get pre_shared_keys(c_dom'_3: domain,=o_dom_3,=@6_tls_h,id_15: identityPsk,psk_29: preSharedKey,idP_5: idProc,is_safe_9: bool) in
                                        {1535}event Selected_one_time_used_psk(@6_id_client,psk_29,is_safe_9);
                                        {1536}event Selected_psk(c_dom_5,c_dom'_3,idP_5,is_safe_9);
                                        {1537}event Selected_psk_no_missmatch(@6_id_client,o_dom_3,@6_tls_h,psk_29,id_15);
                                        {1538}event Selected_psk_with_ID(c_dom_5,c_dom'_3,id_15,idP_5,is_safe_9);
                                        {1539}let v_273: bitstring = (id_15,psk_29,is_safe_9) in
                                        {1540}let v_274: bool = success?(1-proj-3-tuple(v_273)) in
                                        {1541}let is_safe_10: bool = (if v_274 then 3-proj-3-tuple(v_273) else caught-fail) in
                                        {1542}let psk_30: preSharedKey = (if v_274 then 2-proj-3-tuple(v_273) else caught-fail) in
                                        {1543}let id_16: identityPsk = (if v_274 then 1-proj-3-tuple(v_273) else caught-fail) in
                                        {1547}let k_29: bitstring = (if v_274 then catch-fail(psk2b(psk_30)) else caught-fail) in
                                        {1548}let v_275: bool = not-caught-fail(k_29) in
                                        {1546}let s_33: bitstring = (if v_274 then zero else caught-fail) in
                                        {1549}let early_secret_18: bitstring = (if v_274 then catch-fail((if v_275 then hmac(@6_tls_h,s_33,k_29) else fail-any)) else caught-fail) in
                                        {1550}let v_276: bool = not-caught-fail(early_secret_18) in
                                        {1552}let m_22: bitstring = (if v_276 then zero else caught-fail) in
                                        {1553}let h_72: bitstring = (if v_276 then catch-fail(hash(@6_tls_h,m_22)) else caught-fail) in
                                        {1554}let v_277: bool = not-caught-fail(h_72) in
                                        {1551}let l_77: label = (if v_276 then tls13_ext_res_binder else caught-fail) in
                                        {1555}let x_88: bitstring = (if v_277 then (l_77,h_72) else caught-fail) in
                                        {1556}let binder_key_12: bitstring = (if v_276 then catch-fail((if v_277 then hmac(@6_tls_h,early_secret_18,x_88) else fail-any)) else caught-fail) in
                                        {1557}let v_278: bool = not-caught-fail(binder_key_12) in
                                        {1558}let v_279: bitstring = (if v_274 then catch-fail((if v_276 then (if v_278 then (early_secret_18,binder_key_12) else fail-any) else fail-any)) else caught-fail) in
                                        {1559}let v_280: bool = (not-caught-fail(v_279) && success?(1-proj-2-tuple(v_279))) in
                                        {1560}let kb_12: mac_key = (if v_280 then 2-proj-2-tuple(v_279) else caught-fail) in
                                        {1561}let es_16: bitstring = (if v_280 then 1-proj-2-tuple(v_279) else caught-fail) in
                                        {1544}let offer_6: params = (if v_274 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_2,SNI(o_dom_3),o_ech_ext_1,extra_8,trunc_client_psk_ext(id_16)) else caught-fail) in
                                        {1545}let cur_log'_6: bitstring = (if v_274 then (cur_log_OU1_HRR,CH(o_cr_3,offer_6)) else caught-fail) in
                                        {1562}let binders_5: bitstring = (if v_280 then catch-fail(hmac(@6_tls_h,kb_12,cur_log'_6)) else caught-fail) in
                                        {1563}let v_281: bool = not-caught-fail(binders_5) in
                                        {1564}let v_282: bitstring = catch-fail((if v_274 then (if v_280 then (if v_281 then (client_psk_ext(id_16,binders_5),(psk_30,id_16,es_16,is_safe_10)) else fail-any) else fail-any) else fail-any)) in
                                        {1565}let v_283: bool = (not-caught-fail(v_282) && success?(1-proj-2-tuple(v_282))) in
                                        {1566}let psk_data_6: bitstring = (if v_283 then 2-proj-2-tuple(v_282) else caught-fail) in
                                        {1567}let psk_ext_11: preSharedKeyExt = (if v_283 then 1-proj-2-tuple(v_282) else caught-fail) in
                                        {1568}let o_offer_6: params = (if v_283 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_2,SNI(o_dom_3),o_ech_ext_1,empty_extra_ext,psk_ext_11) else caught-fail) in
                                        {1569}let (client_hello'_1: msg,cr'_1: bytes32,kex_data'_1: bitstring,psk_data'_4: bitstring) = (if v_283 then (CH(o_cr_3,o_offer_6),o_cr_3,kex_data,psk_data_6) else fail-any) in
                                        {1570}out(io, client_hello'_1);
                                        {1572}in(io, server_hello'_4: msg);
                                        {1573}let SH(sr'_1: bytes32,mode'_1: params) = server_hello'_4 in
                                        (
                                            {1574}if (sr'_1 = B32(HRR24,HRR8)) then
                                                {1575}out(io, unexpected_message)
                                            else
                                                {1576}let (x_89: bitstring,g_6: group) = kex_data'_1 in
                                                {1577}let (psk_offer_4: preSharedKey,id_offer_4: identityPsk,es_offer_4: bitstring,is_safe_offer_4: bool) = psk_data'_4 in
                                                {1578}event Client_PSKOffer(@6_id_client,psk_offer_4,id_offer_4,is_safe_offer_4);
                                                {1579}event Client_Rand_client(@6_id_client,cr'_1);
                                                {1580}event Client_DH_client(@6_id_client,dh_pub(g_6,x_89));
                                                {1581}event Client_server_domain(@6_id_client,o_dom);
                                                {1582}let SH(sr_12: bytes32,mode_5: params) = server_hello'_4 in
                                                {1583}event Client_Rand_server(@6_id_client,sr_12);
                                                {1584}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_6,gy_5: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_12: preSharedKeyExt) = mode_5 in
                                                (
                                                    {1586}event Client_DH_server(@6_id_client,gy_5);
                                                    {1587}let v_284: bool = (psk_ext_12 = empty_psk_ext) in
                                                    {1588}let psk_31: preSharedKey = (if v_284 then NoPsk else caught-fail) in
                                                    {1590}let k_30: bitstring = (if v_284 then catch-fail(psk2b(psk_31)) else caught-fail) in
                                                    {1591}let v_285: bool = not-caught-fail(k_30) in
                                                    {1589}let s_34: bitstring = (if v_284 then zero else caught-fail) in
                                                    {1592}let early_secret_19: bitstring = (if v_284 then catch-fail((if v_285 then hmac(@6_tls_h,s_34,k_30) else fail-any)) else caught-fail) in
                                                    {1593}let v_286: bool = not-caught-fail(early_secret_19) in
                                                    {1595}let m_23: bitstring = (if v_286 then zero else caught-fail) in
                                                    {1596}let h_73: bitstring = (if v_286 then catch-fail(hash(@6_tls_h,m_23)) else caught-fail) in
                                                    {1597}let v_287: bool = not-caught-fail(h_73) in
                                                    {1594}let l_78: label = (if v_286 then tls13_ext_res_binder else caught-fail) in
                                                    {1598}let x_90: bitstring = (if v_287 then (l_78,h_73) else caught-fail) in
                                                    {1599}let binder_key_13: bitstring = (if v_286 then catch-fail((if v_287 then hmac(@6_tls_h,early_secret_19,x_90) else fail-any)) else caught-fail) in
                                                    {1600}let v_288: bool = not-caught-fail(binder_key_13) in
                                                    {1601}let v_289: bitstring = (if v_284 then catch-fail((if v_286 then (if v_288 then (early_secret_19,binder_key_13) else fail-any) else fail-any)) else caught-fail) in
                                                    {1602}let v_290: bool = (not-caught-fail(v_289) && success?(1-proj-2-tuple(v_289))) in
                                                    {1603}let kb_13: mac_key = (if v_290 then 2-proj-2-tuple(v_289) else caught-fail) in
                                                    {1604}let es_17: bitstring = (if v_290 then 1-proj-2-tuple(v_289) else caught-fail) in
                                                    {1605}let v_291: bitstring = (if not(v_284) then catch-fail(psk_data'_4) else caught-fail) in
                                                    {1606}let v_292: bool = (not-caught-fail(v_291) && success?(1-proj-4-tuple(v_291))) in
                                                    {1607}let is_safe_11: bool = (if v_292 then 4-proj-4-tuple(v_291) else caught-fail) in
                                                    {1608}let es_18: bitstring = (if v_292 then 3-proj-4-tuple(v_291) else caught-fail) in
                                                    {1609}let id_17: identityPsk = (if v_292 then 2-proj-4-tuple(v_291) else caught-fail) in
                                                    {1610}let psk_32: preSharedKey = (if v_292 then 1-proj-4-tuple(v_291) else caught-fail) in
                                                    {1611}let (psk_33: preSharedKey,early_secret_20: bitstring,valid_4: bool,safe_psk_7: bool) = (if v_284 then (if v_290 then (NoPsk,es_17,true,false) else fail-any) else (if v_292 then (psk_32,es_18,((psk_32 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_12)),is_safe_11) else fail-any)) in
                                                    {1612}event Client_PSKChoosen(@6_id_client,psk_33,safe_psk_7);
                                                    {1613}if valid_4 then
                                                    (
                                                        {1616}new s_35[]: seed;
                                                        {1614}let gxy_9: element = catch-fail(dh_decap_fun(g_6,gy_5,x_89)) in
                                                        {1615}let v_293: bool = not-caught-fail(gxy_9) in
                                                        {1617}let gxy_10: element = (if v_293 then gxy_9 else dh_f(s_35)) in
                                                        {1618}event Client_DH_gxy(@6_id_client,gxy_10);
                                                        {1620}let m_24: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {1621}let v_294: bool = not-caught-fail(m_24) in
                                                        {1622}let h_74: bitstring = (if v_294 then catch-fail(hash(@6_tls_h,m_24)) else caught-fail) in
                                                        {1623}let v_295: bool = not-caught-fail(h_74) in
                                                        {1619}let l_79: label = tls13_derived in
                                                        {1624}let x_91: bitstring = (if v_295 then (l_79,h_74) else caught-fail) in
                                                        {1625}let extra_11: bitstring = catch-fail((if v_294 then (if v_295 then hmac(@6_tls_h,early_secret_20,x_91) else fail-any) else fail-any)) in
                                                        {1626}let v_296: bool = not-caught-fail(extra_11) in
                                                        {1627}let handshake_secret_5: bitstring = (if v_296 then hmac(@6_tls_h,extra_11,gxy_10) else fail-any) in
                                                        {1629}let m_25: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {1630}let v_297: bool = not-caught-fail(m_25) in
                                                        {1631}let h_75: bitstring = (if v_297 then catch-fail(hash(@6_tls_h,m_25)) else caught-fail) in
                                                        {1632}let v_298: bool = not-caught-fail(h_75) in
                                                        {1628}let l_80: label = tls13_derived in
                                                        {1633}let x_92: bitstring = (if v_298 then (l_80,h_75) else caught-fail) in
                                                        {1634}let extra_12: bitstring = catch-fail((if v_297 then (if v_298 then hmac(@6_tls_h,handshake_secret_5,x_92) else fail-any) else fail-any)) in
                                                        {1635}let v_299: bool = not-caught-fail(extra_12) in
                                                        {1636}let k_31: bitstring = (if v_299 then zero else caught-fail) in
                                                        {1637}let master_secret_17: bitstring = (if v_299 then catch-fail(hmac(@6_tls_h,handshake_secret_5,k_31)) else caught-fail) in
                                                        {1638}let v_300: bool = not-caught-fail(master_secret_17) in
                                                        {1571}let cur_log_OU1_HRR_OU2_1: bitstring = (cur_log_OU1_HRR,client_hello'_1) in
                                                        {1585}let cur_log2_12: bitstring = (cur_log_OU1_HRR_OU2_1,server_hello'_4) in
                                                        {1640}let h_76: bitstring = (if v_300 then catch-fail(hash(@6_tls_h,cur_log2_12)) else caught-fail) in
                                                        {1641}let v_301: bool = not-caught-fail(h_76) in
                                                        {1639}let l_81: label = (if v_300 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {1642}let x_93: bitstring = (if v_301 then (l_81,h_76) else caught-fail) in
                                                        {1643}let client_hts_5: bitstring = (if v_300 then catch-fail((if v_301 then hmac(@6_tls_h,handshake_secret_5,x_93) else fail-any)) else caught-fail) in
                                                        {1644}let v_302: bool = not-caught-fail(client_hts_5) in
                                                        {1646}let h_77: bitstring = (if v_302 then catch-fail(hash(@6_tls_h,cur_log2_12)) else caught-fail) in
                                                        {1647}let v_303: bool = not-caught-fail(h_77) in
                                                        {1645}let l_82: label = (if v_302 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {1648}let x_94: bitstring = (if v_303 then (l_82,h_77) else caught-fail) in
                                                        {1649}let server_hts_5: bitstring = (if v_302 then catch-fail((if v_303 then hmac(@6_tls_h,handshake_secret_5,x_94) else fail-any)) else caught-fail) in
                                                        {1650}let v_304: bool = not-caught-fail(server_hts_5) in
                                                        {1652}let h_78: bitstring = (if v_304 then zero else caught-fail) in
                                                        {1651}let l_83: label = (if v_304 then tls13_key else caught-fail) in
                                                        {1653}let x_95: bitstring = (if v_304 then (l_83,h_78) else caught-fail) in
                                                        {1654}let client_wkh_5: bitstring = (if v_304 then catch-fail(hmac(@6_tls_h,client_hts_5,x_95)) else caught-fail) in
                                                        {1655}let v_305: bool = not-caught-fail(client_wkh_5) in
                                                        {1657}let h_79: bitstring = (if v_305 then zero else caught-fail) in
                                                        {1656}let l_84: label = (if v_305 then tls13_key else caught-fail) in
                                                        {1658}let x_96: bitstring = (if v_305 then (l_84,h_79) else caught-fail) in
                                                        {1659}let server_wkh_5: bitstring = (if v_305 then catch-fail(hmac(@6_tls_h,server_hts_5,x_96)) else caught-fail) in
                                                        {1660}let v_306: bool = not-caught-fail(server_wkh_5) in
                                                        {1662}let h_80: bitstring = (if v_306 then zero else caught-fail) in
                                                        {1661}let l_85: label = (if v_306 then tls13_finished else caught-fail) in
                                                        {1663}let x_97: bitstring = (if v_306 then (l_85,h_80) else caught-fail) in
                                                        {1664}let client_fk_5: bitstring = (if v_306 then catch-fail(hmac(@6_tls_h,client_hts_5,x_97)) else caught-fail) in
                                                        {1665}let v_307: bool = not-caught-fail(client_fk_5) in
                                                        {1667}let h_81: bitstring = (if v_307 then zero else caught-fail) in
                                                        {1666}let l_86: label = (if v_307 then tls13_finished else caught-fail) in
                                                        {1668}let x_98: bitstring = (if v_307 then (l_86,h_81) else caught-fail) in
                                                        {1669}let server_fk_5: bitstring = (if v_307 then catch-fail(hmac(@6_tls_h,server_hts_5,x_98)) else caught-fail) in
                                                        {1670}let v_308: bool = not-caught-fail(server_fk_5) in
                                                        {1671}let (master_secret_18: bitstring,chk_12: aead_key,shk_11: aead_key,cfin_12: mac_key,sfin_11: mac_key) = (if v_299 then (if v_300 then (if v_302 then (if v_304 then (if v_305 then (if v_306 then (if v_307 then (if v_308 then (master_secret_17,client_wkh_5,server_wkh_5,client_fk_5,server_fk_5) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {1672}event Client_chk(@6_id_client,chk_12);
                                                        {1673}event Client_shk(@6_id_client,shk_11);
                                                        {1674}event Client_cfin(@6_id_client,cfin_12);
                                                        {1675}event Client_sfin(@6_id_client,sfin_11);
                                                        {1676}in(io, enc_ee_msg_4: bitstring);
                                                        {1677}let ee_msg_5: msg = aead_dec(@6_tls_a,shk_11,0,zero,enc_ee_msg_4) in
                                                        {1678}let EE(ech_ee_4: echExt,extra_ee_4: extraExt) = ee_msg_5 in
                                                        {1679}let cur_log2_13: bitstring = (cur_log2_12,ee_msg_5) in
                                                        {1680}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_1,sr_12,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_33,safe_psk_7,@6_comp_psk,master_secret_18,chk_12,0,shk_11,1,cfin_12,sfin_11,cur_log2_13)))
                                                    )
                                                    else
                                                        {1681}out(io, illegal_parameter)
                                                )
                                                else
                                                    {1682}out(io, illegal_parameter)
                                        )
                                        else
                                            {1683}out(io, unexpected_message)
                                )
                                else
                                    {1685}let psk_34: preSharedKey = NoPsk in
                                    {1687}let k_32: bitstring = catch-fail(psk2b(psk_34)) in
                                    {1688}let v_309: bool = not-caught-fail(k_32) in
                                    {1686}let s_36: bitstring = zero in
                                    {1689}let early_secret_21: bitstring = catch-fail((if v_309 then hmac(@6_tls_h,s_36,k_32) else fail-any)) in
                                    {1690}let v_310: bool = not-caught-fail(early_secret_21) in
                                    {1692}let m_26: bitstring = (if v_310 then zero else caught-fail) in
                                    {1693}let h_82: bitstring = (if v_310 then catch-fail(hash(@6_tls_h,m_26)) else caught-fail) in
                                    {1694}let v_311: bool = not-caught-fail(h_82) in
                                    {1691}let l_87: label = (if v_310 then tls13_ext_res_binder else caught-fail) in
                                    {1695}let x_99: bitstring = (if v_311 then (l_87,h_82) else caught-fail) in
                                    {1696}let binder_key_14: bitstring = (if v_310 then catch-fail((if v_311 then hmac(@6_tls_h,early_secret_21,x_99) else fail-any)) else caught-fail) in
                                    {1697}let v_312: bool = not-caught-fail(binder_key_14) in
                                    {1698}let v_313: bitstring = catch-fail((if v_310 then (if v_312 then (early_secret_21,binder_key_14) else fail-any) else fail-any)) in
                                    {1699}let v_314: bool = (not-caught-fail(v_313) && success?(1-proj-2-tuple(v_313))) in
                                    {1700}let kb_14: mac_key = (if v_314 then 2-proj-2-tuple(v_313) else caught-fail) in
                                    {1701}let es_19: bitstring = (if v_314 then 1-proj-2-tuple(v_313) else caught-fail) in
                                    {1702}let v_315: bitstring = catch-fail((if v_314 then (empty_psk_ext,(NoPsk,zero,es_19,false)) else fail-any)) in
                                    {1703}let v_316: bool = (not-caught-fail(v_315) && success?(1-proj-2-tuple(v_315))) in
                                    {1704}let psk_data_7: bitstring = (if v_316 then 2-proj-2-tuple(v_315) else caught-fail) in
                                    {1705}let psk_ext_13: preSharedKeyExt = (if v_316 then 1-proj-2-tuple(v_315) else caught-fail) in
                                    {1706}let o_offer_7: params = (if v_316 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_2,SNI(o_dom_3),o_ech_ext_1,empty_extra_ext,psk_ext_13) else caught-fail) in
                                    {1707}let (client_hello'_2: msg,cr'_2: bytes32,kex_data'_2: bitstring,psk_data'_5: bitstring) = (if v_316 then (CH(o_cr_3,o_offer_7),o_cr_3,kex_data,psk_data_7) else fail-any) in
                                    {1708}out(io, client_hello'_2);
                                    {1710}in(io, server_hello'_5: msg);
                                    {1711}let SH(sr'_2: bytes32,mode'_2: params) = server_hello'_5 in
                                    (
                                        {1712}if (sr'_2 = B32(HRR24,HRR8)) then
                                            {1713}out(io, unexpected_message)
                                        else
                                            {1714}let (x_100: bitstring,g_7: group) = kex_data'_2 in
                                            {1715}let (psk_offer_5: preSharedKey,id_offer_5: identityPsk,es_offer_5: bitstring,is_safe_offer_5: bool) = psk_data'_5 in
                                            {1716}event Client_PSKOffer(@6_id_client,psk_offer_5,id_offer_5,is_safe_offer_5);
                                            {1717}event Client_Rand_client(@6_id_client,cr'_2);
                                            {1718}event Client_DH_client(@6_id_client,dh_pub(g_7,x_100));
                                            {1719}event Client_server_domain(@6_id_client,o_dom);
                                            {1720}let SH(sr_13: bytes32,mode_6: params) = server_hello'_5 in
                                            {1721}event Client_Rand_server(@6_id_client,sr_13);
                                            {1722}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_7,gy_6: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_14: preSharedKeyExt) = mode_6 in
                                            (
                                                {1724}event Client_DH_server(@6_id_client,gy_6);
                                                {1725}let v_317: bool = (psk_ext_14 = empty_psk_ext) in
                                                {1726}let psk_35: preSharedKey = (if v_317 then NoPsk else caught-fail) in
                                                {1728}let k_33: bitstring = (if v_317 then catch-fail(psk2b(psk_35)) else caught-fail) in
                                                {1729}let v_318: bool = not-caught-fail(k_33) in
                                                {1727}let s_37: bitstring = (if v_317 then zero else caught-fail) in
                                                {1730}let early_secret_22: bitstring = (if v_317 then catch-fail((if v_318 then hmac(@6_tls_h,s_37,k_33) else fail-any)) else caught-fail) in
                                                {1731}let v_319: bool = not-caught-fail(early_secret_22) in
                                                {1733}let m_27: bitstring = (if v_319 then zero else caught-fail) in
                                                {1734}let h_83: bitstring = (if v_319 then catch-fail(hash(@6_tls_h,m_27)) else caught-fail) in
                                                {1735}let v_320: bool = not-caught-fail(h_83) in
                                                {1732}let l_88: label = (if v_319 then tls13_ext_res_binder else caught-fail) in
                                                {1736}let x_101: bitstring = (if v_320 then (l_88,h_83) else caught-fail) in
                                                {1737}let binder_key_15: bitstring = (if v_319 then catch-fail((if v_320 then hmac(@6_tls_h,early_secret_22,x_101) else fail-any)) else caught-fail) in
                                                {1738}let v_321: bool = not-caught-fail(binder_key_15) in
                                                {1739}let v_322: bitstring = (if v_317 then catch-fail((if v_319 then (if v_321 then (early_secret_22,binder_key_15) else fail-any) else fail-any)) else caught-fail) in
                                                {1740}let v_323: bool = (not-caught-fail(v_322) && success?(1-proj-2-tuple(v_322))) in
                                                {1741}let kb_15: mac_key = (if v_323 then 2-proj-2-tuple(v_322) else caught-fail) in
                                                {1742}let es_20: bitstring = (if v_323 then 1-proj-2-tuple(v_322) else caught-fail) in
                                                {1743}let v_324: bitstring = (if not(v_317) then catch-fail(psk_data'_5) else caught-fail) in
                                                {1744}let v_325: bool = (not-caught-fail(v_324) && success?(1-proj-4-tuple(v_324))) in
                                                {1745}let is_safe_12: bool = (if v_325 then 4-proj-4-tuple(v_324) else caught-fail) in
                                                {1746}let es_21: bitstring = (if v_325 then 3-proj-4-tuple(v_324) else caught-fail) in
                                                {1747}let id_18: identityPsk = (if v_325 then 2-proj-4-tuple(v_324) else caught-fail) in
                                                {1748}let psk_36: preSharedKey = (if v_325 then 1-proj-4-tuple(v_324) else caught-fail) in
                                                {1749}let (psk_37: preSharedKey,early_secret_23: bitstring,valid_5: bool,safe_psk_8: bool) = (if v_317 then (if v_323 then (NoPsk,es_20,true,false) else fail-any) else (if v_325 then (psk_36,es_21,((psk_36 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_14)),is_safe_12) else fail-any)) in
                                                {1750}event Client_PSKChoosen(@6_id_client,psk_37,safe_psk_8);
                                                {1751}if valid_5 then
                                                (
                                                    {1754}new s_38[]: seed;
                                                    {1752}let gxy_11: element = catch-fail(dh_decap_fun(g_7,gy_6,x_100)) in
                                                    {1753}let v_326: bool = not-caught-fail(gxy_11) in
                                                    {1755}let gxy_12: element = (if v_326 then gxy_11 else dh_f(s_38)) in
                                                    {1756}event Client_DH_gxy(@6_id_client,gxy_12);
                                                    {1758}let m_28: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {1759}let v_327: bool = not-caught-fail(m_28) in
                                                    {1760}let h_84: bitstring = (if v_327 then catch-fail(hash(@6_tls_h,m_28)) else caught-fail) in
                                                    {1761}let v_328: bool = not-caught-fail(h_84) in
                                                    {1757}let l_89: label = tls13_derived in
                                                    {1762}let x_102: bitstring = (if v_328 then (l_89,h_84) else caught-fail) in
                                                    {1763}let extra_13: bitstring = catch-fail((if v_327 then (if v_328 then hmac(@6_tls_h,early_secret_23,x_102) else fail-any) else fail-any)) in
                                                    {1764}let v_329: bool = not-caught-fail(extra_13) in
                                                    {1765}let handshake_secret_6: bitstring = (if v_329 then hmac(@6_tls_h,extra_13,gxy_12) else fail-any) in
                                                    {1767}let m_29: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {1768}let v_330: bool = not-caught-fail(m_29) in
                                                    {1769}let h_85: bitstring = (if v_330 then catch-fail(hash(@6_tls_h,m_29)) else caught-fail) in
                                                    {1770}let v_331: bool = not-caught-fail(h_85) in
                                                    {1766}let l_90: label = tls13_derived in
                                                    {1771}let x_103: bitstring = (if v_331 then (l_90,h_85) else caught-fail) in
                                                    {1772}let extra_14: bitstring = catch-fail((if v_330 then (if v_331 then hmac(@6_tls_h,handshake_secret_6,x_103) else fail-any) else fail-any)) in
                                                    {1773}let v_332: bool = not-caught-fail(extra_14) in
                                                    {1774}let k_34: bitstring = (if v_332 then zero else caught-fail) in
                                                    {1775}let master_secret_19: bitstring = (if v_332 then catch-fail(hmac(@6_tls_h,handshake_secret_6,k_34)) else caught-fail) in
                                                    {1776}let v_333: bool = not-caught-fail(master_secret_19) in
                                                    {1709}let cur_log_OU1_HRR_OU2_2: bitstring = (cur_log_OU1_HRR,client_hello'_2) in
                                                    {1723}let cur_log2_14: bitstring = (cur_log_OU1_HRR_OU2_2,server_hello'_5) in
                                                    {1778}let h_86: bitstring = (if v_333 then catch-fail(hash(@6_tls_h,cur_log2_14)) else caught-fail) in
                                                    {1779}let v_334: bool = not-caught-fail(h_86) in
                                                    {1777}let l_91: label = (if v_333 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {1780}let x_104: bitstring = (if v_334 then (l_91,h_86) else caught-fail) in
                                                    {1781}let client_hts_6: bitstring = (if v_333 then catch-fail((if v_334 then hmac(@6_tls_h,handshake_secret_6,x_104) else fail-any)) else caught-fail) in
                                                    {1782}let v_335: bool = not-caught-fail(client_hts_6) in
                                                    {1784}let h_87: bitstring = (if v_335 then catch-fail(hash(@6_tls_h,cur_log2_14)) else caught-fail) in
                                                    {1785}let v_336: bool = not-caught-fail(h_87) in
                                                    {1783}let l_92: label = (if v_335 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {1786}let x_105: bitstring = (if v_336 then (l_92,h_87) else caught-fail) in
                                                    {1787}let server_hts_6: bitstring = (if v_335 then catch-fail((if v_336 then hmac(@6_tls_h,handshake_secret_6,x_105) else fail-any)) else caught-fail) in
                                                    {1788}let v_337: bool = not-caught-fail(server_hts_6) in
                                                    {1790}let h_88: bitstring = (if v_337 then zero else caught-fail) in
                                                    {1789}let l_93: label = (if v_337 then tls13_key else caught-fail) in
                                                    {1791}let x_106: bitstring = (if v_337 then (l_93,h_88) else caught-fail) in
                                                    {1792}let client_wkh_6: bitstring = (if v_337 then catch-fail(hmac(@6_tls_h,client_hts_6,x_106)) else caught-fail) in
                                                    {1793}let v_338: bool = not-caught-fail(client_wkh_6) in
                                                    {1795}let h_89: bitstring = (if v_338 then zero else caught-fail) in
                                                    {1794}let l_94: label = (if v_338 then tls13_key else caught-fail) in
                                                    {1796}let x_107: bitstring = (if v_338 then (l_94,h_89) else caught-fail) in
                                                    {1797}let server_wkh_6: bitstring = (if v_338 then catch-fail(hmac(@6_tls_h,server_hts_6,x_107)) else caught-fail) in
                                                    {1798}let v_339: bool = not-caught-fail(server_wkh_6) in
                                                    {1800}let h_90: bitstring = (if v_339 then zero else caught-fail) in
                                                    {1799}let l_95: label = (if v_339 then tls13_finished else caught-fail) in
                                                    {1801}let x_108: bitstring = (if v_339 then (l_95,h_90) else caught-fail) in
                                                    {1802}let client_fk_6: bitstring = (if v_339 then catch-fail(hmac(@6_tls_h,client_hts_6,x_108)) else caught-fail) in
                                                    {1803}let v_340: bool = not-caught-fail(client_fk_6) in
                                                    {1805}let h_91: bitstring = (if v_340 then zero else caught-fail) in
                                                    {1804}let l_96: label = (if v_340 then tls13_finished else caught-fail) in
                                                    {1806}let x_109: bitstring = (if v_340 then (l_96,h_91) else caught-fail) in
                                                    {1807}let server_fk_6: bitstring = (if v_340 then catch-fail(hmac(@6_tls_h,server_hts_6,x_109)) else caught-fail) in
                                                    {1808}let v_341: bool = not-caught-fail(server_fk_6) in
                                                    {1809}let (master_secret_20: bitstring,chk_13: aead_key,shk_12: aead_key,cfin_13: mac_key,sfin_12: mac_key) = (if v_332 then (if v_333 then (if v_335 then (if v_337 then (if v_338 then (if v_339 then (if v_340 then (if v_341 then (master_secret_19,client_wkh_6,server_wkh_6,client_fk_6,server_fk_6) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {1810}event Client_chk(@6_id_client,chk_13);
                                                    {1811}event Client_shk(@6_id_client,shk_12);
                                                    {1812}event Client_cfin(@6_id_client,cfin_13);
                                                    {1813}event Client_sfin(@6_id_client,sfin_12);
                                                    {1814}in(io, enc_ee_msg_5: bitstring);
                                                    {1815}let ee_msg_6: msg = aead_dec(@6_tls_a,shk_12,0,zero,enc_ee_msg_5) in
                                                    {1816}let EE(ech_ee_5: echExt,extra_ee_5: extraExt) = ee_msg_6 in
                                                    {1817}let cur_log2_15: bitstring = (cur_log2_14,ee_msg_6) in
                                                    {1818}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_2,sr_13,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_37,safe_psk_8,@6_comp_psk,master_secret_20,chk_13,0,shk_12,1,cfin_13,sfin_12,cur_log2_15)))
                                                )
                                                else
                                                    {1819}out(io, illegal_parameter)
                                            )
                                            else
                                                {1820}out(io, illegal_parameter)
                                    )
                                    else
                                        {1821}out(io, unexpected_message)
                            )
                            else
                                {1822}let psk_38: preSharedKey = NoPsk in
                                {1824}let k_35: bitstring = catch-fail(psk2b(psk_38)) in
                                {1825}let v_342: bool = not-caught-fail(k_35) in
                                {1823}let s_39: bitstring = zero in
                                {1826}let early_secret_24: bitstring = catch-fail((if v_342 then hmac(@6_tls_h,s_39,k_35) else fail-any)) in
                                {1827}let v_343: bool = not-caught-fail(early_secret_24) in
                                {1829}let m_30: bitstring = (if v_343 then zero else caught-fail) in
                                {1830}let h_92: bitstring = (if v_343 then catch-fail(hash(@6_tls_h,m_30)) else caught-fail) in
                                {1831}let v_344: bool = not-caught-fail(h_92) in
                                {1828}let l_97: label = (if v_343 then tls13_ext_res_binder else caught-fail) in
                                {1832}let x_110: bitstring = (if v_344 then (l_97,h_92) else caught-fail) in
                                {1833}let binder_key_16: bitstring = (if v_343 then catch-fail((if v_344 then hmac(@6_tls_h,early_secret_24,x_110) else fail-any)) else caught-fail) in
                                {1834}let v_345: bool = not-caught-fail(binder_key_16) in
                                {1835}let v_346: bitstring = catch-fail((if v_343 then (if v_345 then (early_secret_24,binder_key_16) else fail-any) else fail-any)) in
                                {1836}let v_347: bool = (not-caught-fail(v_346) && success?(1-proj-2-tuple(v_346))) in
                                {1837}let kb_16: mac_key = (if v_347 then 2-proj-2-tuple(v_346) else caught-fail) in
                                {1838}let es_22: bitstring = (if v_347 then 1-proj-2-tuple(v_346) else caught-fail) in
                                {1839}let v_348: preSharedKeyExt = (if v_347 then catch-fail(o_psk_ext_1) else caught-fail) in
                                {1840}let v_349: bool = (not-caught-fail(v_348) && success?(1-proj-client_psk_ext(v_348))) in
                                {1841}let fake_binder_4: bitstring = (if v_349 then 2-proj-client_psk_ext(v_348) else caught-fail) in
                                {1842}let fake_id_4: identityPsk = (if v_349 then 1-proj-client_psk_ext(v_348) else caught-fail) in
                                {1843}new fake_binder'[]: bitstring;
                                {1844}let v_350: bitstring = catch-fail((if v_347 then (if v_349 then (client_psk_ext(fake_id_4,fake_binder'),(NoPsk,zero,es_22,false)) else (empty_psk_ext,(NoPsk,zero,es_22,false))) else fail-any)) in
                                {1845}let v_351: bool = (not-caught-fail(v_350) && success?(1-proj-2-tuple(v_350))) in
                                {1846}let psk_data_8: bitstring = (if v_351 then 2-proj-2-tuple(v_350) else caught-fail) in
                                {1847}let psk_ext_15: preSharedKeyExt = (if v_351 then 1-proj-2-tuple(v_350) else caught-fail) in
                                {1848}let o_offer_8: params = (if v_351 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_2,SNI(o_dom_3),o_ech_ext_1,empty_extra_ext,psk_ext_15) else caught-fail) in
                                {1849}let (client_hello'_3: msg,cr'_3: bytes32,kex_data'_3: bitstring,psk_data'_6: bitstring) = (if v_351 then (CH(o_cr_3,o_offer_8),o_cr_3,kex_data,psk_data_8) else fail-any) in
                                {1850}out(io, client_hello'_3);
                                {1852}in(io, server_hello'_6: msg);
                                {1853}let SH(sr'_3: bytes32,mode'_3: params) = server_hello'_6 in
                                (
                                    {1854}if (sr'_3 = B32(HRR24,HRR8)) then
                                        {1855}out(io, unexpected_message)
                                    else
                                        {1856}let (x_111: bitstring,g_8: group) = kex_data'_3 in
                                        {1857}let (psk_offer_6: preSharedKey,id_offer_6: identityPsk,es_offer_6: bitstring,is_safe_offer_6: bool) = psk_data'_6 in
                                        {1858}event Client_PSKOffer(@6_id_client,psk_offer_6,id_offer_6,is_safe_offer_6);
                                        {1859}event Client_Rand_client(@6_id_client,cr'_3);
                                        {1860}event Client_DH_client(@6_id_client,dh_pub(g_8,x_111));
                                        {1861}event Client_server_domain(@6_id_client,o_dom);
                                        {1862}let SH(sr_14: bytes32,mode_7: params) = server_hello'_6 in
                                        {1863}event Client_Rand_server(@6_id_client,sr_14);
                                        {1864}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_8,gy_7: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_16: preSharedKeyExt) = mode_7 in
                                        (
                                            {1866}event Client_DH_server(@6_id_client,gy_7);
                                            {1867}let v_352: bool = (psk_ext_16 = empty_psk_ext) in
                                            {1868}let psk_39: preSharedKey = (if v_352 then NoPsk else caught-fail) in
                                            {1870}let k_36: bitstring = (if v_352 then catch-fail(psk2b(psk_39)) else caught-fail) in
                                            {1871}let v_353: bool = not-caught-fail(k_36) in
                                            {1869}let s_40: bitstring = (if v_352 then zero else caught-fail) in
                                            {1872}let early_secret_25: bitstring = (if v_352 then catch-fail((if v_353 then hmac(@6_tls_h,s_40,k_36) else fail-any)) else caught-fail) in
                                            {1873}let v_354: bool = not-caught-fail(early_secret_25) in
                                            {1875}let m_31: bitstring = (if v_354 then zero else caught-fail) in
                                            {1876}let h_93: bitstring = (if v_354 then catch-fail(hash(@6_tls_h,m_31)) else caught-fail) in
                                            {1877}let v_355: bool = not-caught-fail(h_93) in
                                            {1874}let l_98: label = (if v_354 then tls13_ext_res_binder else caught-fail) in
                                            {1878}let x_112: bitstring = (if v_355 then (l_98,h_93) else caught-fail) in
                                            {1879}let binder_key_17: bitstring = (if v_354 then catch-fail((if v_355 then hmac(@6_tls_h,early_secret_25,x_112) else fail-any)) else caught-fail) in
                                            {1880}let v_356: bool = not-caught-fail(binder_key_17) in
                                            {1881}let v_357: bitstring = (if v_352 then catch-fail((if v_354 then (if v_356 then (early_secret_25,binder_key_17) else fail-any) else fail-any)) else caught-fail) in
                                            {1882}let v_358: bool = (not-caught-fail(v_357) && success?(1-proj-2-tuple(v_357))) in
                                            {1883}let kb_17: mac_key = (if v_358 then 2-proj-2-tuple(v_357) else caught-fail) in
                                            {1884}let es_23: bitstring = (if v_358 then 1-proj-2-tuple(v_357) else caught-fail) in
                                            {1885}let v_359: bitstring = (if not(v_352) then catch-fail(psk_data'_6) else caught-fail) in
                                            {1886}let v_360: bool = (not-caught-fail(v_359) && success?(1-proj-4-tuple(v_359))) in
                                            {1887}let is_safe_13: bool = (if v_360 then 4-proj-4-tuple(v_359) else caught-fail) in
                                            {1888}let es_24: bitstring = (if v_360 then 3-proj-4-tuple(v_359) else caught-fail) in
                                            {1889}let id_19: identityPsk = (if v_360 then 2-proj-4-tuple(v_359) else caught-fail) in
                                            {1890}let psk_40: preSharedKey = (if v_360 then 1-proj-4-tuple(v_359) else caught-fail) in
                                            {1891}let (psk_41: preSharedKey,early_secret_26: bitstring,valid_6: bool,safe_psk_9: bool) = (if v_352 then (if v_358 then (NoPsk,es_23,true,false) else fail-any) else (if v_360 then (psk_40,es_24,((psk_40 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_16)),is_safe_13) else fail-any)) in
                                            {1892}event Client_PSKChoosen(@6_id_client,psk_41,safe_psk_9);
                                            {1893}if valid_6 then
                                            (
                                                {1896}new s_41[]: seed;
                                                {1894}let gxy_13: element = catch-fail(dh_decap_fun(g_8,gy_7,x_111)) in
                                                {1895}let v_361: bool = not-caught-fail(gxy_13) in
                                                {1897}let gxy_14: element = (if v_361 then gxy_13 else dh_f(s_41)) in
                                                {1898}event Client_DH_gxy(@6_id_client,gxy_14);
                                                {1900}let m_32: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                {1901}let v_362: bool = not-caught-fail(m_32) in
                                                {1902}let h_94: bitstring = (if v_362 then catch-fail(hash(@6_tls_h,m_32)) else caught-fail) in
                                                {1903}let v_363: bool = not-caught-fail(h_94) in
                                                {1899}let l_99: label = tls13_derived in
                                                {1904}let x_113: bitstring = (if v_363 then (l_99,h_94) else caught-fail) in
                                                {1905}let extra_15: bitstring = catch-fail((if v_362 then (if v_363 then hmac(@6_tls_h,early_secret_26,x_113) else fail-any) else fail-any)) in
                                                {1906}let v_364: bool = not-caught-fail(extra_15) in
                                                {1907}let handshake_secret_7: bitstring = (if v_364 then hmac(@6_tls_h,extra_15,gxy_14) else fail-any) in
                                                {1909}let m_33: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                {1910}let v_365: bool = not-caught-fail(m_33) in
                                                {1911}let h_95: bitstring = (if v_365 then catch-fail(hash(@6_tls_h,m_33)) else caught-fail) in
                                                {1912}let v_366: bool = not-caught-fail(h_95) in
                                                {1908}let l_100: label = tls13_derived in
                                                {1913}let x_114: bitstring = (if v_366 then (l_100,h_95) else caught-fail) in
                                                {1914}let extra_16: bitstring = catch-fail((if v_365 then (if v_366 then hmac(@6_tls_h,handshake_secret_7,x_114) else fail-any) else fail-any)) in
                                                {1915}let v_367: bool = not-caught-fail(extra_16) in
                                                {1916}let k_37: bitstring = (if v_367 then zero else caught-fail) in
                                                {1917}let master_secret_21: bitstring = (if v_367 then catch-fail(hmac(@6_tls_h,handshake_secret_7,k_37)) else caught-fail) in
                                                {1918}let v_368: bool = not-caught-fail(master_secret_21) in
                                                {1851}let cur_log_OU1_HRR_OU2_3: bitstring = (cur_log_OU1_HRR,client_hello'_3) in
                                                {1865}let cur_log2_16: bitstring = (cur_log_OU1_HRR_OU2_3,server_hello'_6) in
                                                {1920}let h_96: bitstring = (if v_368 then catch-fail(hash(@6_tls_h,cur_log2_16)) else caught-fail) in
                                                {1921}let v_369: bool = not-caught-fail(h_96) in
                                                {1919}let l_101: label = (if v_368 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {1922}let x_115: bitstring = (if v_369 then (l_101,h_96) else caught-fail) in
                                                {1923}let client_hts_7: bitstring = (if v_368 then catch-fail((if v_369 then hmac(@6_tls_h,handshake_secret_7,x_115) else fail-any)) else caught-fail) in
                                                {1924}let v_370: bool = not-caught-fail(client_hts_7) in
                                                {1926}let h_97: bitstring = (if v_370 then catch-fail(hash(@6_tls_h,cur_log2_16)) else caught-fail) in
                                                {1927}let v_371: bool = not-caught-fail(h_97) in
                                                {1925}let l_102: label = (if v_370 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {1928}let x_116: bitstring = (if v_371 then (l_102,h_97) else caught-fail) in
                                                {1929}let server_hts_7: bitstring = (if v_370 then catch-fail((if v_371 then hmac(@6_tls_h,handshake_secret_7,x_116) else fail-any)) else caught-fail) in
                                                {1930}let v_372: bool = not-caught-fail(server_hts_7) in
                                                {1932}let h_98: bitstring = (if v_372 then zero else caught-fail) in
                                                {1931}let l_103: label = (if v_372 then tls13_key else caught-fail) in
                                                {1933}let x_117: bitstring = (if v_372 then (l_103,h_98) else caught-fail) in
                                                {1934}let client_wkh_7: bitstring = (if v_372 then catch-fail(hmac(@6_tls_h,client_hts_7,x_117)) else caught-fail) in
                                                {1935}let v_373: bool = not-caught-fail(client_wkh_7) in
                                                {1937}let h_99: bitstring = (if v_373 then zero else caught-fail) in
                                                {1936}let l_104: label = (if v_373 then tls13_key else caught-fail) in
                                                {1938}let x_118: bitstring = (if v_373 then (l_104,h_99) else caught-fail) in
                                                {1939}let server_wkh_7: bitstring = (if v_373 then catch-fail(hmac(@6_tls_h,server_hts_7,x_118)) else caught-fail) in
                                                {1940}let v_374: bool = not-caught-fail(server_wkh_7) in
                                                {1942}let h_100: bitstring = (if v_374 then zero else caught-fail) in
                                                {1941}let l_105: label = (if v_374 then tls13_finished else caught-fail) in
                                                {1943}let x_119: bitstring = (if v_374 then (l_105,h_100) else caught-fail) in
                                                {1944}let client_fk_7: bitstring = (if v_374 then catch-fail(hmac(@6_tls_h,client_hts_7,x_119)) else caught-fail) in
                                                {1945}let v_375: bool = not-caught-fail(client_fk_7) in
                                                {1947}let h_101: bitstring = (if v_375 then zero else caught-fail) in
                                                {1946}let l_106: label = (if v_375 then tls13_finished else caught-fail) in
                                                {1948}let x_120: bitstring = (if v_375 then (l_106,h_101) else caught-fail) in
                                                {1949}let server_fk_7: bitstring = (if v_375 then catch-fail(hmac(@6_tls_h,server_hts_7,x_120)) else caught-fail) in
                                                {1950}let v_376: bool = not-caught-fail(server_fk_7) in
                                                {1951}let (master_secret_22: bitstring,chk_14: aead_key,shk_13: aead_key,cfin_14: mac_key,sfin_13: mac_key) = (if v_367 then (if v_368 then (if v_370 then (if v_372 then (if v_373 then (if v_374 then (if v_375 then (if v_376 then (master_secret_21,client_wkh_7,server_wkh_7,client_fk_7,server_fk_7) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {1952}event Client_chk(@6_id_client,chk_14);
                                                {1953}event Client_shk(@6_id_client,shk_13);
                                                {1954}event Client_cfin(@6_id_client,cfin_14);
                                                {1955}event Client_sfin(@6_id_client,sfin_13);
                                                {1956}in(io, enc_ee_msg_6: bitstring);
                                                {1957}let ee_msg_7: msg = aead_dec(@6_tls_a,shk_13,0,zero,enc_ee_msg_6) in
                                                {1958}let EE(ech_ee_6: echExt,extra_ee_6: extraExt) = ee_msg_7 in
                                                {1959}let cur_log2_17: bitstring = (cur_log2_16,ee_msg_7) in
                                                {1960}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_3,sr_14,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_41,safe_psk_9,@6_comp_psk,master_secret_22,chk_14,0,shk_13,1,cfin_14,sfin_13,cur_log2_17)))
                                            )
                                            else
                                                {1961}out(io, illegal_parameter)
                                        )
                                        else
                                            {1962}out(io, illegal_parameter)
                                )
                                else
                                    {1963}out(io, unexpected_message)
                    )
                    else
                        {1965}let sh_modified_4: msg = SH(B32(sr24_2,zero8),mode) in
                        {1964}let cur_log_10: bitstring = (zero,i_client_hello_1) in
                        {1966}let cur_log_sh_4: bitstring = (cur_log_10,sh_modified_4) in
                        {1967}let transcript_ech_conf_4: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_4)) in
                        {1968}let v_377: bool = not-caught-fail(transcript_ech_conf_4) in
                        {1970}let k_38: bitstring = (if v_377 then catch-fail(b32_2_b(get_random(i_client_hello_1))) else caught-fail) in
                        {1971}let v_378: bool = not-caught-fail(k_38) in
                        {1969}let s_42: bitstring = (if v_377 then zero else caught-fail) in
                        {1972}let k_39: bitstring = (if v_377 then catch-fail((if v_378 then hmac(@6_backend_h,s_42,k_38) else fail-any)) else caught-fail) in
                        {1973}let v_379: bool = not-caught-fail(k_39) in
                        {1974}let l_107: label = (if v_379 then ech_accept_confirmation else caught-fail) in
                        {1975}let x_121: bitstring = (if v_379 then (l_107,cur_log_sh_4) else caught-fail) in
                        {1976}let sr8_5: bytes8 = (if v_377 then catch-fail(crop_into_bytes8((if v_379 then hmac(@6_backend_h,k_39,x_121) else fail-any))) else caught-fail) in
                        {1977}let v_380: bool = not-caught-fail(sr8_5) in
                        {1978}if (B32(sr24_2,sr8_1) = (if v_377 then (if v_380 then B32(sr24_2,sr8_5) else fail-any) else fail-any)) then
                        (
                            {1979}event ClientEchAcceptance(@6_id_client,true);
                            {1981}let (x_122: bitstring,g_9: group) = i_kex_data_1 in
                            {1982}let (psk_offer_7: preSharedKey,id_offer_7: identityPsk,es_offer_7: bitstring,is_safe_offer_7: bool) = psk_data_1 in
                            {1983}event Client_PSKOffer(@6_id_client,psk_offer_7,id_offer_7,is_safe_offer_7);
                            {1984}event Client_Rand_client(@6_id_client,i_cr_1);
                            {1985}event Client_DH_client(@6_id_client,dh_pub(g_9,x_122));
                            {1986}event Client_server_domain(@6_id_client,backend_dom);
                            {1987}let SH(sr_15: bytes32,mode_8: params) = server_hello_1 in
                            {1988}event Client_Rand_server(@6_id_client,sr_15);
                            {1989}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_9,gy_8: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_17: preSharedKeyExt) = mode_8 in
                            (
                                {1991}event Client_DH_server(@6_id_client,gy_8);
                                {1992}let v_381: bool = (psk_ext_17 = empty_psk_ext) in
                                {1993}let psk_42: preSharedKey = (if v_381 then NoPsk else caught-fail) in
                                {1995}let k_40: bitstring = (if v_381 then catch-fail(psk2b(psk_42)) else caught-fail) in
                                {1996}let v_382: bool = not-caught-fail(k_40) in
                                {1994}let s_43: bitstring = (if v_381 then zero else caught-fail) in
                                {1997}let early_secret_27: bitstring = (if v_381 then catch-fail((if v_382 then hmac(@6_backend_h,s_43,k_40) else fail-any)) else caught-fail) in
                                {1998}let v_383: bool = not-caught-fail(early_secret_27) in
                                {2000}let m_34: bitstring = (if v_383 then zero else caught-fail) in
                                {2001}let h_102: bitstring = (if v_383 then catch-fail(hash(@6_backend_h,m_34)) else caught-fail) in
                                {2002}let v_384: bool = not-caught-fail(h_102) in
                                {1999}let l_108: label = (if v_383 then tls13_ext_res_binder else caught-fail) in
                                {2003}let x_123: bitstring = (if v_384 then (l_108,h_102) else caught-fail) in
                                {2004}let binder_key_18: bitstring = (if v_383 then catch-fail((if v_384 then hmac(@6_backend_h,early_secret_27,x_123) else fail-any)) else caught-fail) in
                                {2005}let v_385: bool = not-caught-fail(binder_key_18) in
                                {2006}let v_386: bitstring = (if v_381 then catch-fail((if v_383 then (if v_385 then (early_secret_27,binder_key_18) else fail-any) else fail-any)) else caught-fail) in
                                {2007}let v_387: bool = (not-caught-fail(v_386) && success?(1-proj-2-tuple(v_386))) in
                                {2008}let kb_18: mac_key = (if v_387 then 2-proj-2-tuple(v_386) else caught-fail) in
                                {2009}let es_25: bitstring = (if v_387 then 1-proj-2-tuple(v_386) else caught-fail) in
                                {2010}let v_388: bitstring = (if not(v_381) then catch-fail(psk_data_1) else caught-fail) in
                                {2011}let v_389: bool = (not-caught-fail(v_388) && success?(1-proj-4-tuple(v_388))) in
                                {2012}let is_safe_14: bool = (if v_389 then 4-proj-4-tuple(v_388) else caught-fail) in
                                {2013}let es_26: bitstring = (if v_389 then 3-proj-4-tuple(v_388) else caught-fail) in
                                {2014}let id_20: identityPsk = (if v_389 then 2-proj-4-tuple(v_388) else caught-fail) in
                                {2015}let psk_43: preSharedKey = (if v_389 then 1-proj-4-tuple(v_388) else caught-fail) in
                                {2016}let (psk_44: preSharedKey,early_secret_28: bitstring,valid_7: bool,safe_psk_10: bool) = (if v_381 then (if v_387 then (NoPsk,es_25,true,false) else fail-any) else (if v_389 then (psk_43,es_26,((psk_43 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_17)),is_safe_14) else fail-any)) in
                                {2017}event Client_PSKChoosen(@6_id_client,psk_44,safe_psk_10);
                                {2018}if valid_7 then
                                (
                                    {2021}new s_44[]: seed;
                                    {2019}let gxy_15: element = catch-fail(dh_decap_fun(g_9,gy_8,x_122)) in
                                    {2020}let v_390: bool = not-caught-fail(gxy_15) in
                                    {2022}let gxy_16: element = (if v_390 then gxy_15 else dh_f(s_44)) in
                                    {2023}event Client_DH_gxy(@6_id_client,gxy_16);
                                    {2025}let m_35: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                    {2026}let v_391: bool = not-caught-fail(m_35) in
                                    {2027}let h_103: bitstring = (if v_391 then catch-fail(hash(@6_backend_h,m_35)) else caught-fail) in
                                    {2028}let v_392: bool = not-caught-fail(h_103) in
                                    {2024}let l_109: label = tls13_derived in
                                    {2029}let x_124: bitstring = (if v_392 then (l_109,h_103) else caught-fail) in
                                    {2030}let extra_17: bitstring = catch-fail((if v_391 then (if v_392 then hmac(@6_backend_h,early_secret_28,x_124) else fail-any) else fail-any)) in
                                    {2031}let v_393: bool = not-caught-fail(extra_17) in
                                    {2032}let handshake_secret_8: bitstring = (if v_393 then hmac(@6_backend_h,extra_17,gxy_16) else fail-any) in
                                    {2034}let m_36: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                    {2035}let v_394: bool = not-caught-fail(m_36) in
                                    {2036}let h_104: bitstring = (if v_394 then catch-fail(hash(@6_backend_h,m_36)) else caught-fail) in
                                    {2037}let v_395: bool = not-caught-fail(h_104) in
                                    {2033}let l_110: label = tls13_derived in
                                    {2038}let x_125: bitstring = (if v_395 then (l_110,h_104) else caught-fail) in
                                    {2039}let extra_18: bitstring = catch-fail((if v_394 then (if v_395 then hmac(@6_backend_h,handshake_secret_8,x_125) else fail-any) else fail-any)) in
                                    {2040}let v_396: bool = not-caught-fail(extra_18) in
                                    {2041}let k_41: bitstring = (if v_396 then zero else caught-fail) in
                                    {2042}let master_secret_23: bitstring = (if v_396 then catch-fail(hmac(@6_backend_h,handshake_secret_8,k_41)) else caught-fail) in
                                    {2043}let v_397: bool = not-caught-fail(master_secret_23) in
                                    {1980}let cur_log_11: bitstring = (zero,i_client_hello_1) in
                                    {1990}let cur_log2_18: bitstring = (cur_log_11,server_hello_1) in
                                    {2045}let h_105: bitstring = (if v_397 then catch-fail(hash(@6_backend_h,cur_log2_18)) else caught-fail) in
                                    {2046}let v_398: bool = not-caught-fail(h_105) in
                                    {2044}let l_111: label = (if v_397 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {2047}let x_126: bitstring = (if v_398 then (l_111,h_105) else caught-fail) in
                                    {2048}let client_hts_8: bitstring = (if v_397 then catch-fail((if v_398 then hmac(@6_backend_h,handshake_secret_8,x_126) else fail-any)) else caught-fail) in
                                    {2049}let v_399: bool = not-caught-fail(client_hts_8) in
                                    {2051}let h_106: bitstring = (if v_399 then catch-fail(hash(@6_backend_h,cur_log2_18)) else caught-fail) in
                                    {2052}let v_400: bool = not-caught-fail(h_106) in
                                    {2050}let l_112: label = (if v_399 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {2053}let x_127: bitstring = (if v_400 then (l_112,h_106) else caught-fail) in
                                    {2054}let server_hts_8: bitstring = (if v_399 then catch-fail((if v_400 then hmac(@6_backend_h,handshake_secret_8,x_127) else fail-any)) else caught-fail) in
                                    {2055}let v_401: bool = not-caught-fail(server_hts_8) in
                                    {2057}let h_107: bitstring = (if v_401 then zero else caught-fail) in
                                    {2056}let l_113: label = (if v_401 then tls13_key else caught-fail) in
                                    {2058}let x_128: bitstring = (if v_401 then (l_113,h_107) else caught-fail) in
                                    {2059}let client_wkh_8: bitstring = (if v_401 then catch-fail(hmac(@6_backend_h,client_hts_8,x_128)) else caught-fail) in
                                    {2060}let v_402: bool = not-caught-fail(client_wkh_8) in
                                    {2062}let h_108: bitstring = (if v_402 then zero else caught-fail) in
                                    {2061}let l_114: label = (if v_402 then tls13_key else caught-fail) in
                                    {2063}let x_129: bitstring = (if v_402 then (l_114,h_108) else caught-fail) in
                                    {2064}let server_wkh_8: bitstring = (if v_402 then catch-fail(hmac(@6_backend_h,server_hts_8,x_129)) else caught-fail) in
                                    {2065}let v_403: bool = not-caught-fail(server_wkh_8) in
                                    {2067}let h_109: bitstring = (if v_403 then zero else caught-fail) in
                                    {2066}let l_115: label = (if v_403 then tls13_finished else caught-fail) in
                                    {2068}let x_130: bitstring = (if v_403 then (l_115,h_109) else caught-fail) in
                                    {2069}let client_fk_8: bitstring = (if v_403 then catch-fail(hmac(@6_backend_h,client_hts_8,x_130)) else caught-fail) in
                                    {2070}let v_404: bool = not-caught-fail(client_fk_8) in
                                    {2072}let h_110: bitstring = (if v_404 then zero else caught-fail) in
                                    {2071}let l_116: label = (if v_404 then tls13_finished else caught-fail) in
                                    {2073}let x_131: bitstring = (if v_404 then (l_116,h_110) else caught-fail) in
                                    {2074}let server_fk_8: bitstring = (if v_404 then catch-fail(hmac(@6_backend_h,server_hts_8,x_131)) else caught-fail) in
                                    {2075}let v_405: bool = not-caught-fail(server_fk_8) in
                                    {2076}let (master_secret_24: bitstring,chk_15: aead_key,shk_14: aead_key,cfin_15: mac_key,sfin_14: mac_key) = (if v_396 then (if v_397 then (if v_399 then (if v_401 then (if v_402 then (if v_403 then (if v_404 then (if v_405 then (master_secret_23,client_wkh_8,server_wkh_8,client_fk_8,server_fk_8) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {2077}event Client_chk(@6_id_client,chk_15);
                                    {2078}event Client_shk(@6_id_client,shk_14);
                                    {2079}event Client_cfin(@6_id_client,cfin_15);
                                    {2080}event Client_sfin(@6_id_client,sfin_14);
                                    {2081}in(io, enc_ee_msg_7: bitstring);
                                    {2082}let ee_msg_8: msg = aead_dec(@6_backend_a,shk_14,0,zero,enc_ee_msg_7) in
                                    {2083}let EE(ech_ee_7: echExt,extra_ee_7: extraExt) = ee_msg_8 in
                                    {2084}let cur_log2_19: bitstring = (cur_log2_18,ee_msg_8) in
                                    {2085}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr_1,sr_15,@6_backend_h,@6_backend_a,c_dom_5,backend_dom,psk_44,safe_psk_10,@6_comp_psk,master_secret_24,chk_15,0,shk_14,1,cfin_15,sfin_14,cur_log2_19)))
                                )
                                else
                                    {2086}out(io, illegal_parameter)
                            )
                            else
                                {2087}out(io, illegal_parameter)
                        )
                        else
                            {2088}event ClientEchAcceptance(@6_id_client,false);
                            {2089}let v_406: bool = @6_use_grease in
                            {2090}let psk_45: preSharedKey = (if not(v_406) then NoPsk else caught-fail) in
                            {2092}let k_42: bitstring = (if not(v_406) then catch-fail(psk2b(psk_45)) else caught-fail) in
                            {2093}let v_407: bool = not-caught-fail(k_42) in
                            {2091}let s_45: bitstring = (if not(v_406) then zero else caught-fail) in
                            {2094}let early_secret_29: bitstring = (if not(v_406) then catch-fail((if v_407 then hmac(@6_tls_h,s_45,k_42) else fail-any)) else caught-fail) in
                            {2095}let v_408: bool = not-caught-fail(early_secret_29) in
                            {2097}let m_37: bitstring = (if v_408 then zero else caught-fail) in
                            {2098}let h_111: bitstring = (if v_408 then catch-fail(hash(@6_tls_h,m_37)) else caught-fail) in
                            {2099}let v_409: bool = not-caught-fail(h_111) in
                            {2096}let l_117: label = (if v_408 then tls13_ext_res_binder else caught-fail) in
                            {2100}let x_132: bitstring = (if v_409 then (l_117,h_111) else caught-fail) in
                            {2101}let binder_key_19: bitstring = (if v_408 then catch-fail((if v_409 then hmac(@6_tls_h,early_secret_29,x_132) else fail-any)) else caught-fail) in
                            {2102}let v_410: bool = not-caught-fail(binder_key_19) in
                            {2103}let v_411: bitstring = (if not(v_406) then catch-fail((if v_408 then (if v_410 then (early_secret_29,binder_key_19) else fail-any) else fail-any)) else caught-fail) in
                            {2104}let v_412: bool = (not-caught-fail(v_411) && success?(1-proj-2-tuple(v_411))) in
                            {2105}let kb_19: mac_key = (if v_412 then 2-proj-2-tuple(v_411) else caught-fail) in
                            {2106}let es': bitstring = (if v_412 then 1-proj-2-tuple(v_411) else caught-fail) in
                            {2107}let psk_data'_7: bitstring = (if v_406 then psk_data_1 else (if v_412 then (NoPsk,zero,es',false) else fail-any)) in
                            {2109}let (x_133: bitstring,g_10: group) = o_kex_data_1 in
                            {2110}let (psk_offer_8: preSharedKey,id_offer_8: identityPsk,es_offer_8: bitstring,is_safe_offer_8: bool) = psk_data'_7 in
                            {2111}event Client_PSKOffer(@6_id_client,psk_offer_8,id_offer_8,is_safe_offer_8);
                            {2112}event Client_Rand_client(@6_id_client,o_cr_1);
                            {2113}event Client_DH_client(@6_id_client,dh_pub(g_10,x_133));
                            {2114}event Client_server_domain(@6_id_client,o_dom);
                            {2115}let SH(sr_16: bytes32,mode_9: params) = server_hello_1 in
                            {2116}event Client_Rand_server(@6_id_client,sr_16);
                            {2117}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_10,gy_9: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_18: preSharedKeyExt) = mode_9 in
                            (
                                {2119}event Client_DH_server(@6_id_client,gy_9);
                                {2120}let v_413: bool = (psk_ext_18 = empty_psk_ext) in
                                {2121}let psk_46: preSharedKey = (if v_413 then NoPsk else caught-fail) in
                                {2123}let k_43: bitstring = (if v_413 then catch-fail(psk2b(psk_46)) else caught-fail) in
                                {2124}let v_414: bool = not-caught-fail(k_43) in
                                {2122}let s_46: bitstring = (if v_413 then zero else caught-fail) in
                                {2125}let early_secret_30: bitstring = (if v_413 then catch-fail((if v_414 then hmac(@6_tls_h,s_46,k_43) else fail-any)) else caught-fail) in
                                {2126}let v_415: bool = not-caught-fail(early_secret_30) in
                                {2128}let m_38: bitstring = (if v_415 then zero else caught-fail) in
                                {2129}let h_112: bitstring = (if v_415 then catch-fail(hash(@6_tls_h,m_38)) else caught-fail) in
                                {2130}let v_416: bool = not-caught-fail(h_112) in
                                {2127}let l_118: label = (if v_415 then tls13_ext_res_binder else caught-fail) in
                                {2131}let x_134: bitstring = (if v_416 then (l_118,h_112) else caught-fail) in
                                {2132}let binder_key_20: bitstring = (if v_415 then catch-fail((if v_416 then hmac(@6_tls_h,early_secret_30,x_134) else fail-any)) else caught-fail) in
                                {2133}let v_417: bool = not-caught-fail(binder_key_20) in
                                {2134}let v_418: bitstring = (if v_413 then catch-fail((if v_415 then (if v_417 then (early_secret_30,binder_key_20) else fail-any) else fail-any)) else caught-fail) in
                                {2135}let v_419: bool = (not-caught-fail(v_418) && success?(1-proj-2-tuple(v_418))) in
                                {2136}let kb_20: mac_key = (if v_419 then 2-proj-2-tuple(v_418) else caught-fail) in
                                {2137}let es_27: bitstring = (if v_419 then 1-proj-2-tuple(v_418) else caught-fail) in
                                {2138}let v_420: bitstring = (if not(v_413) then catch-fail(psk_data'_7) else caught-fail) in
                                {2139}let v_421: bool = (not-caught-fail(v_420) && success?(1-proj-4-tuple(v_420))) in
                                {2140}let is_safe_15: bool = (if v_421 then 4-proj-4-tuple(v_420) else caught-fail) in
                                {2141}let es_28: bitstring = (if v_421 then 3-proj-4-tuple(v_420) else caught-fail) in
                                {2142}let id_21: identityPsk = (if v_421 then 2-proj-4-tuple(v_420) else caught-fail) in
                                {2143}let psk_47: preSharedKey = (if v_421 then 1-proj-4-tuple(v_420) else caught-fail) in
                                {2144}let (psk_48: preSharedKey,early_secret_31: bitstring,valid_8: bool,safe_psk_11: bool) = (if v_413 then (if v_419 then (NoPsk,es_27,true,false) else fail-any) else (if v_421 then (psk_47,es_28,((psk_47 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_18)),is_safe_15) else fail-any)) in
                                {2145}event Client_PSKChoosen(@6_id_client,psk_48,safe_psk_11);
                                {2146}if valid_8 then
                                (
                                    {2149}new s_47[]: seed;
                                    {2147}let gxy_17: element = catch-fail(dh_decap_fun(g_10,gy_9,x_133)) in
                                    {2148}let v_422: bool = not-caught-fail(gxy_17) in
                                    {2150}let gxy_18: element = (if v_422 then gxy_17 else dh_f(s_47)) in
                                    {2151}event Client_DH_gxy(@6_id_client,gxy_18);
                                    {2153}let m_39: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                    {2154}let v_423: bool = not-caught-fail(m_39) in
                                    {2155}let h_113: bitstring = (if v_423 then catch-fail(hash(@6_tls_h,m_39)) else caught-fail) in
                                    {2156}let v_424: bool = not-caught-fail(h_113) in
                                    {2152}let l_119: label = tls13_derived in
                                    {2157}let x_135: bitstring = (if v_424 then (l_119,h_113) else caught-fail) in
                                    {2158}let extra_19: bitstring = catch-fail((if v_423 then (if v_424 then hmac(@6_tls_h,early_secret_31,x_135) else fail-any) else fail-any)) in
                                    {2159}let v_425: bool = not-caught-fail(extra_19) in
                                    {2160}let handshake_secret_9: bitstring = (if v_425 then hmac(@6_tls_h,extra_19,gxy_18) else fail-any) in
                                    {2162}let m_40: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                    {2163}let v_426: bool = not-caught-fail(m_40) in
                                    {2164}let h_114: bitstring = (if v_426 then catch-fail(hash(@6_tls_h,m_40)) else caught-fail) in
                                    {2165}let v_427: bool = not-caught-fail(h_114) in
                                    {2161}let l_120: label = tls13_derived in
                                    {2166}let x_136: bitstring = (if v_427 then (l_120,h_114) else caught-fail) in
                                    {2167}let extra_20: bitstring = catch-fail((if v_426 then (if v_427 then hmac(@6_tls_h,handshake_secret_9,x_136) else fail-any) else fail-any)) in
                                    {2168}let v_428: bool = not-caught-fail(extra_20) in
                                    {2169}let k_44: bitstring = (if v_428 then zero else caught-fail) in
                                    {2170}let master_secret_25: bitstring = (if v_428 then catch-fail(hmac(@6_tls_h,handshake_secret_9,k_44)) else caught-fail) in
                                    {2171}let v_429: bool = not-caught-fail(master_secret_25) in
                                    {2108}let cur_log_12: bitstring = (zero,o_client_hello) in
                                    {2118}let cur_log2_20: bitstring = (cur_log_12,server_hello_1) in
                                    {2173}let h_115: bitstring = (if v_429 then catch-fail(hash(@6_tls_h,cur_log2_20)) else caught-fail) in
                                    {2174}let v_430: bool = not-caught-fail(h_115) in
                                    {2172}let l_121: label = (if v_429 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {2175}let x_137: bitstring = (if v_430 then (l_121,h_115) else caught-fail) in
                                    {2176}let client_hts_9: bitstring = (if v_429 then catch-fail((if v_430 then hmac(@6_tls_h,handshake_secret_9,x_137) else fail-any)) else caught-fail) in
                                    {2177}let v_431: bool = not-caught-fail(client_hts_9) in
                                    {2179}let h_116: bitstring = (if v_431 then catch-fail(hash(@6_tls_h,cur_log2_20)) else caught-fail) in
                                    {2180}let v_432: bool = not-caught-fail(h_116) in
                                    {2178}let l_122: label = (if v_431 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {2181}let x_138: bitstring = (if v_432 then (l_122,h_116) else caught-fail) in
                                    {2182}let server_hts_9: bitstring = (if v_431 then catch-fail((if v_432 then hmac(@6_tls_h,handshake_secret_9,x_138) else fail-any)) else caught-fail) in
                                    {2183}let v_433: bool = not-caught-fail(server_hts_9) in
                                    {2185}let h_117: bitstring = (if v_433 then zero else caught-fail) in
                                    {2184}let l_123: label = (if v_433 then tls13_key else caught-fail) in
                                    {2186}let x_139: bitstring = (if v_433 then (l_123,h_117) else caught-fail) in
                                    {2187}let client_wkh_9: bitstring = (if v_433 then catch-fail(hmac(@6_tls_h,client_hts_9,x_139)) else caught-fail) in
                                    {2188}let v_434: bool = not-caught-fail(client_wkh_9) in
                                    {2190}let h_118: bitstring = (if v_434 then zero else caught-fail) in
                                    {2189}let l_124: label = (if v_434 then tls13_key else caught-fail) in
                                    {2191}let x_140: bitstring = (if v_434 then (l_124,h_118) else caught-fail) in
                                    {2192}let server_wkh_9: bitstring = (if v_434 then catch-fail(hmac(@6_tls_h,server_hts_9,x_140)) else caught-fail) in
                                    {2193}let v_435: bool = not-caught-fail(server_wkh_9) in
                                    {2195}let h_119: bitstring = (if v_435 then zero else caught-fail) in
                                    {2194}let l_125: label = (if v_435 then tls13_finished else caught-fail) in
                                    {2196}let x_141: bitstring = (if v_435 then (l_125,h_119) else caught-fail) in
                                    {2197}let client_fk_9: bitstring = (if v_435 then catch-fail(hmac(@6_tls_h,client_hts_9,x_141)) else caught-fail) in
                                    {2198}let v_436: bool = not-caught-fail(client_fk_9) in
                                    {2200}let h_120: bitstring = (if v_436 then zero else caught-fail) in
                                    {2199}let l_126: label = (if v_436 then tls13_finished else caught-fail) in
                                    {2201}let x_142: bitstring = (if v_436 then (l_126,h_120) else caught-fail) in
                                    {2202}let server_fk_9: bitstring = (if v_436 then catch-fail(hmac(@6_tls_h,server_hts_9,x_142)) else caught-fail) in
                                    {2203}let v_437: bool = not-caught-fail(server_fk_9) in
                                    {2204}let (master_secret_26: bitstring,chk_16: aead_key,shk_15: aead_key,cfin_16: mac_key,sfin_15: mac_key) = (if v_428 then (if v_429 then (if v_431 then (if v_433 then (if v_434 then (if v_435 then (if v_436 then (if v_437 then (master_secret_25,client_wkh_9,server_wkh_9,client_fk_9,server_fk_9) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {2205}event Client_chk(@6_id_client,chk_16);
                                    {2206}event Client_shk(@6_id_client,shk_15);
                                    {2207}event Client_cfin(@6_id_client,cfin_16);
                                    {2208}event Client_sfin(@6_id_client,sfin_15);
                                    {2209}in(io, enc_ee_msg_8: bitstring);
                                    {2210}let ee_msg_9: msg = aead_dec(@6_tls_a,shk_15,0,zero,enc_ee_msg_8) in
                                    {2211}let EE(ech_ee_8: echExt,extra_ee_8: extraExt) = ee_msg_9 in
                                    {2212}let cur_log2_21: bitstring = (cur_log2_20,ee_msg_9) in
                                    {2213}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(o_cr_1,sr_16,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_48,safe_psk_11,@6_comp_psk,master_secret_26,chk_16,0,shk_15,1,cfin_16,sfin_15,cur_log2_21)))
                                )
                                else
                                    {2214}out(io, illegal_parameter)
                            )
                            else
                                {2215}out(io, illegal_parameter)
                )
                else
                    {2216}out(io, unexpected_message)
            )
        )
        else
            {3699}get pre_shared_keys(c_dom'_4: domain,=dom_psk,=h_psk,id_22: identityPsk,psk_49: preSharedKey,idP_6: idProc,is_safe_16: bool) in
            {2217}event Selected_one_time_used_psk(@6_id_client,psk_49,is_safe_16);
            {2218}event Selected_psk(c_dom_5,c_dom'_4,idP_6,is_safe_16);
            {2219}event Selected_psk_no_missmatch(@6_id_client,dom_psk,h_psk,psk_49,id_22);
            {2220}event Selected_psk_with_ID(c_dom_5,c_dom'_4,id_22,idP_6,is_safe_16);
            {2221}let v_438: bitstring = (id_22,psk_49,is_safe_16) in
            {2222}let v_439: bool = success?(1-proj-3-tuple(v_438)) in
            {2223}let is_safe_17: bool = (if v_439 then 3-proj-3-tuple(v_438) else caught-fail) in
            {2224}let psk_50: preSharedKey = (if v_439 then 2-proj-3-tuple(v_438) else caught-fail) in
            {2225}let id_23: identityPsk = (if v_439 then 1-proj-3-tuple(v_438) else caught-fail) in
            {2229}let k_45: bitstring = (if v_439 then catch-fail(psk2b(psk_50)) else caught-fail) in
            {2230}let v_440: bool = not-caught-fail(k_45) in
            {2228}let s_48: bitstring = (if v_439 then zero else caught-fail) in
            {2231}let early_secret_32: bitstring = (if v_439 then catch-fail((if v_440 then hmac(h_psk,s_48,k_45) else fail-any)) else caught-fail) in
            {2232}let v_441: bool = not-caught-fail(early_secret_32) in
            {2234}let m_41: bitstring = (if v_441 then zero else caught-fail) in
            {2235}let h_121: bitstring = (if v_441 then catch-fail(hash(h_psk,m_41)) else caught-fail) in
            {2236}let v_442: bool = not-caught-fail(h_121) in
            {2233}let l_127: label = (if v_441 then tls13_ext_res_binder else caught-fail) in
            {2237}let x_143: bitstring = (if v_442 then (l_127,h_121) else caught-fail) in
            {2238}let binder_key_21: bitstring = (if v_441 then catch-fail((if v_442 then hmac(h_psk,early_secret_32,x_143) else fail-any)) else caught-fail) in
            {2239}let v_443: bool = not-caught-fail(binder_key_21) in
            {2240}let v_444: bitstring = (if v_439 then catch-fail((if v_441 then (if v_443 then (early_secret_32,binder_key_21) else fail-any) else fail-any)) else caught-fail) in
            {2241}let v_445: bool = (not-caught-fail(v_444) && success?(1-proj-2-tuple(v_444))) in
            {2242}let kb_21: mac_key = (if v_445 then 2-proj-2-tuple(v_444) else caught-fail) in
            {2243}let es_29: bitstring = (if v_445 then 1-proj-2-tuple(v_444) else caught-fail) in
            {2226}let offer_7: params = (if v_439 then nego(TLS13,h_psk,a_psk,kex_ext_psk,SNI(dom_psk),ech_inner_or_grease,extra_psk,trunc_client_psk_ext(id_23)) else caught-fail) in
            {2227}let cur_log'_7: bitstring = (if v_439 then (cur_log_8,CH(cr_psk,offer_7)) else caught-fail) in
            {2244}let binders_6: bitstring = (if v_445 then catch-fail(hmac(h_psk,kb_21,cur_log'_7)) else caught-fail) in
            {2245}let v_446: bool = not-caught-fail(binders_6) in
            {2246}let v_447: bitstring = catch-fail((if v_439 then (if v_445 then (if v_446 then (client_psk_ext(id_23,binders_6),(psk_50,id_23,es_29,is_safe_17)) else fail-any) else fail-any) else fail-any)) in
            {2247}let v_448: bool = (not-caught-fail(v_447) && success?(1-proj-2-tuple(v_447))) in
            {2248}let psk_data_9: bitstring = (if v_448 then 2-proj-2-tuple(v_447) else caught-fail) in
            {2249}let psk_ext_19: preSharedKeyExt = (if v_448 then 1-proj-2-tuple(v_447) else caught-fail) in
            {2254}new fake_id_5[]: identityPsk;
            {2255}new fake_binder_5[]: bitstring;
            {2252}let v_449: bool = (if v_448 then catch-fail(@6_use_grease) else caught-fail) in
            {2261}let v_450: hpkeContext = (if is-false(v_449) then catch-fail(context) else caught-fail) in
            {2262}let v_451: bool = (not-caught-fail(v_450) && ((S =nf 1-proj-hpke_context(v_450)) && success?(1-proj-hpke_context(v_450)))) in
            {2263}let base_nonce_5: bitstring = (if v_451 then 3-proj-hpke_context(v_450) else caught-fail) in
            {2264}let key_5: aead_key = (if v_451 then 2-proj-hpke_context(v_450) else caught-fail) in
            {2260}let n_4: nat = (if is-false(v_449) then 1 else caught-fail) in
            {2257}let o_ech_ext_ADD_4: echExt = (if is-false(v_449) then ECHClientHelloOuter(ech_h_3,ech_a_3,config_id_1,enc_1,zero) else caught-fail) in
            {2256}let o_psk_ext_5: preSharedKeyExt = (if is-false(v_449) then (if @6_use_psk then client_psk_ext(fake_id_5,fake_binder_5) else empty_psk_ext) else caught-fail) in
            {2258}let o_offer_ADD_4: params = (if is-false(v_449) then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),o_ech_ext_ADD_4,empty_extra_ext,o_psk_ext_5) else caught-fail) in
            {2259}let o_client_hello_ADD_4: msg = (if is-false(v_449) then CH(o_cr,o_offer_ADD_4) else caught-fail) in
            {2250}let i_offer_4: params = (if v_448 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_19) else caught-fail) in
            {2251}let i_client_hello_5: msg = (if v_448 then CH(i_cr,i_offer_4) else caught-fail) in
            {2265}let payload_5: bitstring = (if is-false(v_449) then catch-fail((if v_451 then aead_enc(ech_a_3,key_5,(base_nonce_5,n_4),o_client_hello_ADD_4,i_client_hello_5) else fail-any)) else caught-fail) in
            {2266}let v_452: bool = not-caught-fail(payload_5) in
            {2267}let o_ech_ext_5: echExt = (if v_452 then ECHClientHelloOuter(ech_h_3,ech_a_3,config_id_1,enc_1,payload_5) else caught-fail) in
            {2268}let o_offer_10: params = (if v_452 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),o_ech_ext_5,empty_extra_ext,o_psk_ext_5) else caught-fail) in
            {2253}let o_offer_9: params = (if v_449 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),ech_inner_or_grease,empty_extra_ext,psk_ext_19) else caught-fail) in
            {2269}let (o_client_hello_1: msg,i_client_hello_6: msg,o_cr_4: bytes32,i_cr_3: bytes32,o_kex_data_3: bitstring,i_kex_data_3: bitstring,o_psk_ext_6: preSharedKeyExt,psk_data_10: bitstring,o_ech_ext_6: echExt) = (if v_448 then (if undo-catch-fail(v_449) then (CH(o_cr,o_offer_9),CH(o_cr,o_offer_9),o_cr,o_cr,o_kex_data,o_kex_data,psk_ext_19,psk_data_9,ech_inner_or_grease) else (if v_452 then (CH(o_cr,o_offer_10),i_client_hello_5,o_cr,i_cr,o_kex_data,i_kex_data,o_psk_ext_5,psk_data_9,o_ech_ext_5) else fail-any)) else fail-any) in
            {2270}out(io, o_client_hello_1);
            {2271}let (psk_51: preSharedKey,id_24: identityPsk,es_30: bitstring,safe_1: bool) = psk_data_10 in
            (
                {2272}if (false && (not(@6_use_grease) && (psk_51 ≠ NoPsk))) then
                {2273}let client_hello_2: bitstring = (zero,i_client_hello_6) in
                {2275}let h_122: bitstring = catch-fail(hash(@6_backend_h,client_hello_2)) in
                {2276}let v_453: bool = not-caught-fail(h_122) in
                {2274}let l_128: label = tls13_client_early_traffic_secret in
                {2277}let x_144: bitstring = (if v_453 then (l_128,h_122) else caught-fail) in
                {2278}let atsc0_2: bitstring = catch-fail((if v_453 then hmac(@6_backend_h,es_30,x_144) else fail-any)) in
                {2279}let v_454: bool = not-caught-fail(atsc0_2) in
                {2281}let h_123: bitstring = (if v_454 then zero else caught-fail) in
                {2280}let l_129: label = (if v_454 then tls13_key else caught-fail) in
                {2282}let x_145: bitstring = (if v_454 then (l_129,h_123) else caught-fail) in
                {2283}let kc0_2: bitstring = (if v_454 then catch-fail(hmac(@6_backend_h,atsc0_2,x_145)) else caught-fail) in
                {2284}let v_455: bool = not-caught-fail(kc0_2) in
                {2286}let h_124: bitstring = (if v_455 then catch-fail(hash(@6_backend_h,client_hello_2)) else caught-fail) in
                {2287}let v_456: bool = not-caught-fail(h_124) in
                {2285}let l_130: label = (if v_455 then tls13_early_exporter_master_secret else caught-fail) in
                {2288}let x_146: bitstring = (if v_456 then (l_130,h_124) else caught-fail) in
                {2289}let ems0_4: bitstring = (if v_455 then catch-fail((if v_456 then hmac(@6_backend_h,es_30,x_146) else fail-any)) else caught-fail) in
                {2290}let v_457: bool = not-caught-fail(ems0_4) in
                {2291}let (wkc0_2: aead_key,ems0_5: bitstring) = (if v_454 then (if v_455 then (if v_457 then (kc0_2,ems0_4) else fail-any) else fail-any) else fail-any) in
                {2292}!
                {2293}in(io, (i_2: nat,ad_2: bitstring));
                {2294}if is_nat(i_2) then
                {2295}new msg_ed_1[]: bitstring;
                {2297}new st_11: stamp;
                {2298}event ClientSequenceClient0RTTDataWriteKey(@6_id_client,st_11,i_2);
                {2299}event ClientSends0(@6_id_client,i_cr_3,psk_51,i_2,ad_2,msg_ed_1);
                {2296}let enc_ed_1: bitstring = aead_enc(@6_backend_a,wkc0_2,i_2,ad_2,msg_ed_1) in
                {2300}out(io, enc_ed_1)
            ) | (
                {2301}in(io, server_hello_2: msg);
                {2302}let SH(B32(sr24_3: bytes24,sr8_6: bytes8),mode_10: params) = server_hello_2 in
                (
                    {2303}if (false && (B32(sr24_3,sr8_6) = B32(HRR24,HRR8))) then
                    (
                        {2304}if (send_kex ≠ true) then
                        {2305}let nego(=TLS13,h_alg_12: hash_alg,a_alg_10: aead_alg,hrr_kex_ext(g_11: group),=empty_sni_ext,ech_ext_4: echExt,=empty_extra_ext,=empty_psk_ext) = mode_10 in
                        {2306}let v_458: bool = (ech_ext_4 = empty_ech_ext) in
                        {2307}let hrr_mode_1: params = (if not(v_458) then nego(TLS13,@6_backend_h,@6_backend_a,hrr_kex_ext(@6_backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) else caught-fail) in
                        {2308}let hrr_1: msg = (if not(v_458) then SH(B32(HRR24,HRR8),hrr_mode_1) else caught-fail) in
                        {2309}let cur_log_13: bitstring = (if not(v_458) then ((zero,i_client_hello_6),hrr_1) else caught-fail) in
                        {2310}let transcript_hrr_ech_conf_1: bitstring = (if not(v_458) then catch-fail(hash(@6_backend_h,cur_log_13)) else caught-fail) in
                        {2311}let v_459: bool = not-caught-fail(transcript_hrr_ech_conf_1) in
                        {2313}let k_46: bitstring = (if v_459 then catch-fail(b32_2_b(get_random(i_client_hello_6))) else caught-fail) in
                        {2314}let v_460: bool = not-caught-fail(k_46) in
                        {2312}let s_49: bitstring = (if v_459 then zero else caught-fail) in
                        {2315}let k_47: bitstring = (if v_459 then catch-fail((if v_460 then hmac(@6_backend_h,s_49,k_46) else fail-any)) else caught-fail) in
                        {2316}let v_461: bool = not-caught-fail(k_47) in
                        {2317}let l_131: label = (if v_461 then hrr_ech_accept_confirmation else caught-fail) in
                        {2318}let x_147: bitstring = (if v_461 then (l_131,cur_log_13) else caught-fail) in
                        {2319}let is_ech_accepted_1: bool = (if v_458 then false else (if (ech_ext_4 = ECHHelloRetryRequest((if v_459 then crop_into_bytes8((if v_461 then hmac(@6_backend_h,k_47,x_147) else fail-any)) else fail-any))) then true else false)) in
                        {2320}event ClientEchAcceptance(@6_id_client,is_ech_accepted_1);
                        {2321}if is_ech_accepted_1 then
                        (
                            {2323}let ech_config(config_id_4: configId,ech_g_6: group,pkR_6: element,o_dom_4: domain,ech_h_6: hash_alg,ech_a_6: aead_alg) = ech_conf in
                            {2325}new s_50[]: seed;
                            {2326}let gx_13: element = dh_pub(@6_backend_g,dh_k(s_50)) in
                            {2327}let v_462: bitstring = (dh_k(s_50),gx_13) in
                            {2328}let v_463: bool = success?(1-proj-2-tuple(v_462)) in
                            {2329}let gx_14: element = (if v_463 then 2-proj-2-tuple(v_462) else caught-fail) in
                            {2330}let x_148: bitstring = (if v_463 then 1-proj-2-tuple(v_462) else caught-fail) in
                            {2324}let send_key_share_3: bool = true in
                            {2331}let kex_5: kex_alg = (if v_463 then (if send_key_share_3 then DHE_kex(@6_backend_g,gx_14) else DHE_group(@6_backend_g)) else caught-fail) in
                            {2332}let (i_kex_ext_2: keyShareExt,i_kex_data_4: bitstring) = (if v_463 then (client_kex_ext(kex_5),(x_148,@6_backend_g)) else fail-any) in
                            {2334}new s_51[]: seed;
                            {2335}let gx_15: element = dh_pub(@6_tls_g,dh_k(s_51)) in
                            {2336}let v_464: bitstring = (dh_k(s_51),gx_15) in
                            {2337}let v_465: bool = success?(1-proj-2-tuple(v_464)) in
                            {2338}let gx_16: element = (if v_465 then 2-proj-2-tuple(v_464) else caught-fail) in
                            {2339}let x_149: bitstring = (if v_465 then 1-proj-2-tuple(v_464) else caught-fail) in
                            {2333}let send_key_share_4: bool = true in
                            {2340}let kex_6: kex_alg = (if v_465 then (if send_key_share_4 then DHE_kex(@6_tls_g,gx_16) else DHE_group(@6_tls_g)) else caught-fail) in
                            {2341}let (o_kex_ext_3: keyShareExt,o_kex_data_4: bitstring) = (if v_465 then (client_kex_ext(kex_6),(x_149,@6_tls_g)) else fail-any) in
                            {2342}new rand24_6[]: bytes24;
                            {2343}new rand8_6[]: bytes8;
                            {2345}new rand24_7[]: bytes24;
                            {2346}new rand8_7[]: bytes8;
                            {2347}let o_cr_5: bytes32 = B32(rand24_7,rand8_7) in
                            {2344}let i_cr_4: bytes32 = B32(rand24_6,rand8_6) in
                            {2322}let cur_log_IN1_HRR_1: bitstring = ((zero,i_client_hello_6),server_hello_2) in
                            {2349}if @6_use_psk then
                            (
                                {2348}let ech_ext_5: echExt = ECHClientHelloInner in
                                {2350}let (psk_52: preSharedKey,id_25: identityPsk,old_es_3: bitstring,is_safe_18: bool) = psk_data_10 in
                                (
                                    {2354}let k_48: bitstring = catch-fail(psk2b(psk_52)) in
                                    {2355}let v_466: bool = not-caught-fail(k_48) in
                                    {2353}let s_52: bitstring = zero in
                                    {2356}let early_secret_33: bitstring = catch-fail((if v_466 then hmac(@6_backend_h,s_52,k_48) else fail-any)) in
                                    {2357}let v_467: bool = not-caught-fail(early_secret_33) in
                                    {2359}let m_42: bitstring = (if v_467 then zero else caught-fail) in
                                    {2360}let h_125: bitstring = (if v_467 then catch-fail(hash(@6_backend_h,m_42)) else caught-fail) in
                                    {2361}let v_468: bool = not-caught-fail(h_125) in
                                    {2358}let l_132: label = (if v_467 then tls13_ext_res_binder else caught-fail) in
                                    {2362}let x_150: bitstring = (if v_468 then (l_132,h_125) else caught-fail) in
                                    {2363}let binder_key_22: bitstring = (if v_467 then catch-fail((if v_468 then hmac(@6_backend_h,early_secret_33,x_150) else fail-any)) else caught-fail) in
                                    {2364}let v_469: bool = not-caught-fail(binder_key_22) in
                                    {2365}let v_470: bitstring = catch-fail((if v_467 then (if v_469 then (early_secret_33,binder_key_22) else fail-any) else fail-any)) in
                                    {2366}let v_471: bool = (not-caught-fail(v_470) && success?(1-proj-2-tuple(v_470))) in
                                    {2367}let kb_22: mac_key = (if v_471 then 2-proj-2-tuple(v_470) else caught-fail) in
                                    {2368}let es_31: bitstring = (if v_471 then 1-proj-2-tuple(v_470) else caught-fail) in
                                    {2351}let offer_8: params = nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_2,SNI(backend_dom),ech_ext_5,@6_i_extra_ext,trunc_client_psk_ext(id_25)) in
                                    {2352}let cur_log'_8: bitstring = (cur_log_IN1_HRR_1,CH(i_cr_4,offer_8)) in
                                    {2369}let binders_7: bitstring = (if v_471 then catch-fail(hmac(@6_backend_h,kb_22,cur_log'_8)) else caught-fail) in
                                    {2370}let v_472: bool = not-caught-fail(binders_7) in
                                    {2371}let v_473: bitstring = catch-fail((if v_471 then (if v_472 then (client_psk_ext(id_25,binders_7),(psk_52,id_25,es_31,is_safe_18)) else fail-any) else fail-any)) in
                                    {2372}let v_474: bool = (not-caught-fail(v_473) && success?(1-proj-2-tuple(v_473))) in
                                    {2373}let psk_data_11: bitstring = (if v_474 then 2-proj-2-tuple(v_473) else caught-fail) in
                                    {2374}let psk_ext_20: preSharedKeyExt = (if v_474 then 1-proj-2-tuple(v_473) else caught-fail) in
                                    {2377}new fake_id_6[]: identityPsk;
                                    {2378}new fake_binder_6[]: bitstring;
                                    {2384}let v_475: hpkeContext = (if v_474 then catch-fail(context) else caught-fail) in
                                    {2385}let v_476: bool = (not-caught-fail(v_475) && ((S =nf 1-proj-hpke_context(v_475)) && success?(1-proj-hpke_context(v_475)))) in
                                    {2386}let base_nonce_6: bitstring = (if v_476 then 3-proj-hpke_context(v_475) else caught-fail) in
                                    {2387}let key_6: aead_key = (if v_476 then 2-proj-hpke_context(v_475) else caught-fail) in
                                    {2383}let n_5: nat = (if v_474 then 2 else caught-fail) in
                                    {2380}let o_ech_ext_ADD_5: echExt = (if v_474 then ECHClientHelloOuter(ech_h_6,ech_a_6,config_id_4,zero,zero) else caught-fail) in
                                    {2379}let o_psk_ext_7: preSharedKeyExt = (if v_474 then (if @6_use_psk then client_psk_ext(fake_id_6,fake_binder_6) else empty_psk_ext) else caught-fail) in
                                    {2381}let o_offer_ADD_5: params = (if v_474 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_3,SNI(o_dom_4),o_ech_ext_ADD_5,empty_extra_ext,o_psk_ext_7) else caught-fail) in
                                    {2382}let o_client_hello_ADD_5: msg = (if v_474 then CH(o_cr_5,o_offer_ADD_5) else caught-fail) in
                                    {2375}let i_offer_5: params = (if v_474 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_2,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_20) else caught-fail) in
                                    {2376}let i_client_hello_7: msg = (if v_474 then CH(i_cr_4,i_offer_5) else caught-fail) in
                                    {2388}let payload_6: bitstring = (if v_474 then catch-fail((if v_476 then aead_enc(ech_a_6,key_6,(base_nonce_6,n_5),o_client_hello_ADD_5,i_client_hello_7) else fail-any)) else caught-fail) in
                                    {2389}let v_477: bool = not-caught-fail(payload_6) in
                                    {2390}let o_ech_ext_7: echExt = (if v_477 then ECHClientHelloOuter(ech_h_6,ech_a_6,config_id_4,zero,payload_6) else caught-fail) in
                                    {2391}let o_offer_11: params = (if v_477 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_3,SNI(o_dom_4),o_ech_ext_7,empty_extra_ext,o_psk_ext_7) else caught-fail) in
                                    {2392}let (o_client_hello'_3: msg,i_client_hello'_3: msg,i_cr'_3: bytes32,i_kex_data'_3: bitstring,psk_data'_8: bitstring) = (if v_474 then (if v_477 then (CH(o_cr_5,o_offer_11),i_client_hello_7,i_cr_4,i_kex_data_4,psk_data_11) else fail-any) else fail-any) in
                                    {2393}out(io, o_client_hello'_3);
                                    {2394}in(io, server_hello'_7: msg);
                                    {2395}let SH(B32(sr24'_3: bytes24,sr8'_3: bytes8),params'_3: params) = server_hello'_7 in
                                    {2397}let sh_modified_5: msg = SH(B32(sr24'_3,zero8),params'_3) in
                                    {2396}let cur_log_IN1_HRR_IN2_3: bitstring = (cur_log_IN1_HRR_1,i_client_hello'_3) in
                                    {2398}let cur_log_sh_5: bitstring = (cur_log_IN1_HRR_IN2_3,sh_modified_5) in
                                    {2399}let transcript_ech_conf_5: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_5)) in
                                    {2400}let v_478: bool = not-caught-fail(transcript_ech_conf_5) in
                                    {2402}let k_49: bitstring = (if v_478 then catch-fail(b32_2_b(get_random(i_client_hello'_3))) else caught-fail) in
                                    {2403}let v_479: bool = not-caught-fail(k_49) in
                                    {2401}let s_53: bitstring = (if v_478 then zero else caught-fail) in
                                    {2404}let k_50: bitstring = (if v_478 then catch-fail((if v_479 then hmac(@6_backend_h,s_53,k_49) else fail-any)) else caught-fail) in
                                    {2405}let v_480: bool = not-caught-fail(k_50) in
                                    {2406}let l_133: label = (if v_480 then ech_accept_confirmation else caught-fail) in
                                    {2407}let x_151: bitstring = (if v_480 then (l_133,cur_log_sh_5) else caught-fail) in
                                    {2408}let sr8_7: bytes8 = (if v_478 then catch-fail(crop_into_bytes8((if v_480 then hmac(@6_backend_h,k_50,x_151) else fail-any))) else caught-fail) in
                                    {2409}let v_481: bool = not-caught-fail(sr8_7) in
                                    {2410}if (B32(sr24'_3,sr8'_3) = (if v_478 then (if v_481 then B32(sr24'_3,sr8_7) else fail-any) else fail-any)) then
                                    {2411}let (x_152: bitstring,g_12: group) = i_kex_data'_3 in
                                    {2412}let (psk_offer_9: preSharedKey,id_offer_9: identityPsk,es_offer_9: bitstring,is_safe_offer_9: bool) = psk_data'_8 in
                                    {2413}event Client_PSKOffer(@6_id_client,psk_offer_9,id_offer_9,is_safe_offer_9);
                                    {2414}event Client_Rand_client(@6_id_client,i_cr'_3);
                                    {2415}event Client_DH_client(@6_id_client,dh_pub(g_12,x_152));
                                    {2416}event Client_server_domain(@6_id_client,backend_dom);
                                    {2417}let SH(sr_17: bytes32,mode_11: params) = server_hello'_7 in
                                    {2418}event Client_Rand_server(@6_id_client,sr_17);
                                    {2419}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_12,gy_10: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_21: preSharedKeyExt) = mode_11 in
                                    (
                                        {2421}event Client_DH_server(@6_id_client,gy_10);
                                        {2422}let v_482: bool = (psk_ext_21 = empty_psk_ext) in
                                        {2423}let psk_53: preSharedKey = (if v_482 then NoPsk else caught-fail) in
                                        {2425}let k_51: bitstring = (if v_482 then catch-fail(psk2b(psk_53)) else caught-fail) in
                                        {2426}let v_483: bool = not-caught-fail(k_51) in
                                        {2424}let s_54: bitstring = (if v_482 then zero else caught-fail) in
                                        {2427}let early_secret_34: bitstring = (if v_482 then catch-fail((if v_483 then hmac(@6_backend_h,s_54,k_51) else fail-any)) else caught-fail) in
                                        {2428}let v_484: bool = not-caught-fail(early_secret_34) in
                                        {2430}let m_43: bitstring = (if v_484 then zero else caught-fail) in
                                        {2431}let h_126: bitstring = (if v_484 then catch-fail(hash(@6_backend_h,m_43)) else caught-fail) in
                                        {2432}let v_485: bool = not-caught-fail(h_126) in
                                        {2429}let l_134: label = (if v_484 then tls13_ext_res_binder else caught-fail) in
                                        {2433}let x_153: bitstring = (if v_485 then (l_134,h_126) else caught-fail) in
                                        {2434}let binder_key_23: bitstring = (if v_484 then catch-fail((if v_485 then hmac(@6_backend_h,early_secret_34,x_153) else fail-any)) else caught-fail) in
                                        {2435}let v_486: bool = not-caught-fail(binder_key_23) in
                                        {2436}let v_487: bitstring = (if v_482 then catch-fail((if v_484 then (if v_486 then (early_secret_34,binder_key_23) else fail-any) else fail-any)) else caught-fail) in
                                        {2437}let v_488: bool = (not-caught-fail(v_487) && success?(1-proj-2-tuple(v_487))) in
                                        {2438}let kb_23: mac_key = (if v_488 then 2-proj-2-tuple(v_487) else caught-fail) in
                                        {2439}let es_32: bitstring = (if v_488 then 1-proj-2-tuple(v_487) else caught-fail) in
                                        {2440}let v_489: bitstring = (if not(v_482) then catch-fail(psk_data'_8) else caught-fail) in
                                        {2441}let v_490: bool = (not-caught-fail(v_489) && success?(1-proj-4-tuple(v_489))) in
                                        {2442}let is_safe_19: bool = (if v_490 then 4-proj-4-tuple(v_489) else caught-fail) in
                                        {2443}let es_33: bitstring = (if v_490 then 3-proj-4-tuple(v_489) else caught-fail) in
                                        {2444}let id_26: identityPsk = (if v_490 then 2-proj-4-tuple(v_489) else caught-fail) in
                                        {2445}let psk_54: preSharedKey = (if v_490 then 1-proj-4-tuple(v_489) else caught-fail) in
                                        {2446}let (psk_55: preSharedKey,early_secret_35: bitstring,valid_9: bool,safe_psk_12: bool) = (if v_482 then (if v_488 then (NoPsk,es_32,true,false) else fail-any) else (if v_490 then (psk_54,es_33,((psk_54 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_21)),is_safe_19) else fail-any)) in
                                        {2447}event Client_PSKChoosen(@6_id_client,psk_55,safe_psk_12);
                                        {2448}if valid_9 then
                                        (
                                            {2451}new s_55[]: seed;
                                            {2449}let gxy_19: element = catch-fail(dh_decap_fun(g_12,gy_10,x_152)) in
                                            {2450}let v_491: bool = not-caught-fail(gxy_19) in
                                            {2452}let gxy_20: element = (if v_491 then gxy_19 else dh_f(s_55)) in
                                            {2453}event Client_DH_gxy(@6_id_client,gxy_20);
                                            {2455}let m_44: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {2456}let v_492: bool = not-caught-fail(m_44) in
                                            {2457}let h_127: bitstring = (if v_492 then catch-fail(hash(@6_backend_h,m_44)) else caught-fail) in
                                            {2458}let v_493: bool = not-caught-fail(h_127) in
                                            {2454}let l_135: label = tls13_derived in
                                            {2459}let x_154: bitstring = (if v_493 then (l_135,h_127) else caught-fail) in
                                            {2460}let extra_21: bitstring = catch-fail((if v_492 then (if v_493 then hmac(@6_backend_h,early_secret_35,x_154) else fail-any) else fail-any)) in
                                            {2461}let v_494: bool = not-caught-fail(extra_21) in
                                            {2462}let handshake_secret_10: bitstring = (if v_494 then hmac(@6_backend_h,extra_21,gxy_20) else fail-any) in
                                            {2464}let m_45: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {2465}let v_495: bool = not-caught-fail(m_45) in
                                            {2466}let h_128: bitstring = (if v_495 then catch-fail(hash(@6_backend_h,m_45)) else caught-fail) in
                                            {2467}let v_496: bool = not-caught-fail(h_128) in
                                            {2463}let l_136: label = tls13_derived in
                                            {2468}let x_155: bitstring = (if v_496 then (l_136,h_128) else caught-fail) in
                                            {2469}let extra_22: bitstring = catch-fail((if v_495 then (if v_496 then hmac(@6_backend_h,handshake_secret_10,x_155) else fail-any) else fail-any)) in
                                            {2470}let v_497: bool = not-caught-fail(extra_22) in
                                            {2471}let k_52: bitstring = (if v_497 then zero else caught-fail) in
                                            {2472}let master_secret_27: bitstring = (if v_497 then catch-fail(hmac(@6_backend_h,handshake_secret_10,k_52)) else caught-fail) in
                                            {2473}let v_498: bool = not-caught-fail(master_secret_27) in
                                            {2420}let cur_log2_22: bitstring = (cur_log_IN1_HRR_IN2_3,server_hello'_7) in
                                            {2475}let h_129: bitstring = (if v_498 then catch-fail(hash(@6_backend_h,cur_log2_22)) else caught-fail) in
                                            {2476}let v_499: bool = not-caught-fail(h_129) in
                                            {2474}let l_137: label = (if v_498 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {2477}let x_156: bitstring = (if v_499 then (l_137,h_129) else caught-fail) in
                                            {2478}let client_hts_10: bitstring = (if v_498 then catch-fail((if v_499 then hmac(@6_backend_h,handshake_secret_10,x_156) else fail-any)) else caught-fail) in
                                            {2479}let v_500: bool = not-caught-fail(client_hts_10) in
                                            {2481}let h_130: bitstring = (if v_500 then catch-fail(hash(@6_backend_h,cur_log2_22)) else caught-fail) in
                                            {2482}let v_501: bool = not-caught-fail(h_130) in
                                            {2480}let l_138: label = (if v_500 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {2483}let x_157: bitstring = (if v_501 then (l_138,h_130) else caught-fail) in
                                            {2484}let server_hts_10: bitstring = (if v_500 then catch-fail((if v_501 then hmac(@6_backend_h,handshake_secret_10,x_157) else fail-any)) else caught-fail) in
                                            {2485}let v_502: bool = not-caught-fail(server_hts_10) in
                                            {2487}let h_131: bitstring = (if v_502 then zero else caught-fail) in
                                            {2486}let l_139: label = (if v_502 then tls13_key else caught-fail) in
                                            {2488}let x_158: bitstring = (if v_502 then (l_139,h_131) else caught-fail) in
                                            {2489}let client_wkh_10: bitstring = (if v_502 then catch-fail(hmac(@6_backend_h,client_hts_10,x_158)) else caught-fail) in
                                            {2490}let v_503: bool = not-caught-fail(client_wkh_10) in
                                            {2492}let h_132: bitstring = (if v_503 then zero else caught-fail) in
                                            {2491}let l_140: label = (if v_503 then tls13_key else caught-fail) in
                                            {2493}let x_159: bitstring = (if v_503 then (l_140,h_132) else caught-fail) in
                                            {2494}let server_wkh_10: bitstring = (if v_503 then catch-fail(hmac(@6_backend_h,server_hts_10,x_159)) else caught-fail) in
                                            {2495}let v_504: bool = not-caught-fail(server_wkh_10) in
                                            {2497}let h_133: bitstring = (if v_504 then zero else caught-fail) in
                                            {2496}let l_141: label = (if v_504 then tls13_finished else caught-fail) in
                                            {2498}let x_160: bitstring = (if v_504 then (l_141,h_133) else caught-fail) in
                                            {2499}let client_fk_10: bitstring = (if v_504 then catch-fail(hmac(@6_backend_h,client_hts_10,x_160)) else caught-fail) in
                                            {2500}let v_505: bool = not-caught-fail(client_fk_10) in
                                            {2502}let h_134: bitstring = (if v_505 then zero else caught-fail) in
                                            {2501}let l_142: label = (if v_505 then tls13_finished else caught-fail) in
                                            {2503}let x_161: bitstring = (if v_505 then (l_142,h_134) else caught-fail) in
                                            {2504}let server_fk_10: bitstring = (if v_505 then catch-fail(hmac(@6_backend_h,server_hts_10,x_161)) else caught-fail) in
                                            {2505}let v_506: bool = not-caught-fail(server_fk_10) in
                                            {2506}let (master_secret_28: bitstring,chk_17: aead_key,shk_16: aead_key,cfin_17: mac_key,sfin_16: mac_key) = (if v_497 then (if v_498 then (if v_500 then (if v_502 then (if v_503 then (if v_504 then (if v_505 then (if v_506 then (master_secret_27,client_wkh_10,server_wkh_10,client_fk_10,server_fk_10) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {2507}event Client_chk(@6_id_client,chk_17);
                                            {2508}event Client_shk(@6_id_client,shk_16);
                                            {2509}event Client_cfin(@6_id_client,cfin_17);
                                            {2510}event Client_sfin(@6_id_client,sfin_16);
                                            {2511}in(io, enc_ee_msg_9: bitstring);
                                            {2512}let ee_msg_10: msg = aead_dec(@6_backend_a,shk_16,0,zero,enc_ee_msg_9) in
                                            {2513}let EE(ech_ee_9: echExt,extra_ee_9: extraExt) = ee_msg_10 in
                                            {2514}let cur_log2_23: bitstring = (cur_log2_22,ee_msg_10) in
                                            {2515}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_3,sr_17,@6_backend_h,@6_backend_a,c_dom_5,backend_dom,psk_55,safe_psk_12,@6_comp_psk,master_secret_28,chk_17,0,shk_16,1,cfin_17,sfin_16,cur_log2_23)))
                                        )
                                        else
                                            {2516}out(io, illegal_parameter)
                                    )
                                    else
                                        {2517}out(io, illegal_parameter)
                                )
                                else
                                    {2694}get pre_shared_keys(c_dom'_5: domain,=backend_dom,=@6_backend_h,id_27: identityPsk,psk_56: preSharedKey,idP_7: idProc,is_safe_20: bool) in
                                    {2518}event Selected_one_time_used_psk(@6_id_client,psk_56,is_safe_20);
                                    {2519}event Selected_psk(c_dom_5,c_dom'_5,idP_7,is_safe_20);
                                    {2520}event Selected_psk_no_missmatch(@6_id_client,backend_dom,@6_backend_h,psk_56,id_27);
                                    {2521}event Selected_psk_with_ID(c_dom_5,c_dom'_5,id_27,idP_7,is_safe_20);
                                    {2522}let v_507: bitstring = (id_27,psk_56,is_safe_20) in
                                    {2523}let v_508: bool = success?(1-proj-3-tuple(v_507)) in
                                    {2524}let is_safe_21: bool = (if v_508 then 3-proj-3-tuple(v_507) else caught-fail) in
                                    {2525}let psk_57: preSharedKey = (if v_508 then 2-proj-3-tuple(v_507) else caught-fail) in
                                    {2526}let id_28: identityPsk = (if v_508 then 1-proj-3-tuple(v_507) else caught-fail) in
                                    {2530}let k_53: bitstring = (if v_508 then catch-fail(psk2b(psk_57)) else caught-fail) in
                                    {2531}let v_509: bool = not-caught-fail(k_53) in
                                    {2529}let s_56: bitstring = (if v_508 then zero else caught-fail) in
                                    {2532}let early_secret_36: bitstring = (if v_508 then catch-fail((if v_509 then hmac(@6_backend_h,s_56,k_53) else fail-any)) else caught-fail) in
                                    {2533}let v_510: bool = not-caught-fail(early_secret_36) in
                                    {2535}let m_46: bitstring = (if v_510 then zero else caught-fail) in
                                    {2536}let h_135: bitstring = (if v_510 then catch-fail(hash(@6_backend_h,m_46)) else caught-fail) in
                                    {2537}let v_511: bool = not-caught-fail(h_135) in
                                    {2534}let l_143: label = (if v_510 then tls13_ext_res_binder else caught-fail) in
                                    {2538}let x_162: bitstring = (if v_511 then (l_143,h_135) else caught-fail) in
                                    {2539}let binder_key_24: bitstring = (if v_510 then catch-fail((if v_511 then hmac(@6_backend_h,early_secret_36,x_162) else fail-any)) else caught-fail) in
                                    {2540}let v_512: bool = not-caught-fail(binder_key_24) in
                                    {2541}let v_513: bitstring = (if v_508 then catch-fail((if v_510 then (if v_512 then (early_secret_36,binder_key_24) else fail-any) else fail-any)) else caught-fail) in
                                    {2542}let v_514: bool = (not-caught-fail(v_513) && success?(1-proj-2-tuple(v_513))) in
                                    {2543}let kb_24: mac_key = (if v_514 then 2-proj-2-tuple(v_513) else caught-fail) in
                                    {2544}let es_34: bitstring = (if v_514 then 1-proj-2-tuple(v_513) else caught-fail) in
                                    {2527}let offer_9: params = (if v_508 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_2,SNI(backend_dom),ech_ext_5,@6_i_extra_ext,trunc_client_psk_ext(id_28)) else caught-fail) in
                                    {2528}let cur_log'_9: bitstring = (if v_508 then (cur_log_IN1_HRR_1,CH(i_cr_4,offer_9)) else caught-fail) in
                                    {2545}let binders_8: bitstring = (if v_514 then catch-fail(hmac(@6_backend_h,kb_24,cur_log'_9)) else caught-fail) in
                                    {2546}let v_515: bool = not-caught-fail(binders_8) in
                                    {2547}let v_516: bitstring = catch-fail((if v_508 then (if v_514 then (if v_515 then (client_psk_ext(id_28,binders_8),(psk_57,id_28,es_34,is_safe_21)) else fail-any) else fail-any) else fail-any)) in
                                    {2548}let v_517: bool = (not-caught-fail(v_516) && success?(1-proj-2-tuple(v_516))) in
                                    {2549}let psk_data_12: bitstring = (if v_517 then 2-proj-2-tuple(v_516) else caught-fail) in
                                    {2550}let psk_ext_22: preSharedKeyExt = (if v_517 then 1-proj-2-tuple(v_516) else caught-fail) in
                                    {2553}new fake_id_7[]: identityPsk;
                                    {2554}new fake_binder_7[]: bitstring;
                                    {2560}let v_518: hpkeContext = (if v_517 then catch-fail(context) else caught-fail) in
                                    {2561}let v_519: bool = (not-caught-fail(v_518) && ((S =nf 1-proj-hpke_context(v_518)) && success?(1-proj-hpke_context(v_518)))) in
                                    {2562}let base_nonce_7: bitstring = (if v_519 then 3-proj-hpke_context(v_518) else caught-fail) in
                                    {2563}let key_7: aead_key = (if v_519 then 2-proj-hpke_context(v_518) else caught-fail) in
                                    {2559}let n_6: nat = (if v_517 then 2 else caught-fail) in
                                    {2556}let o_ech_ext_ADD_6: echExt = (if v_517 then ECHClientHelloOuter(ech_h_6,ech_a_6,config_id_4,zero,zero) else caught-fail) in
                                    {2555}let o_psk_ext_8: preSharedKeyExt = (if v_517 then (if @6_use_psk then client_psk_ext(fake_id_7,fake_binder_7) else empty_psk_ext) else caught-fail) in
                                    {2557}let o_offer_ADD_6: params = (if v_517 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_3,SNI(o_dom_4),o_ech_ext_ADD_6,empty_extra_ext,o_psk_ext_8) else caught-fail) in
                                    {2558}let o_client_hello_ADD_6: msg = (if v_517 then CH(o_cr_5,o_offer_ADD_6) else caught-fail) in
                                    {2551}let i_offer_6: params = (if v_517 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_2,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_22) else caught-fail) in
                                    {2552}let i_client_hello_8: msg = (if v_517 then CH(i_cr_4,i_offer_6) else caught-fail) in
                                    {2564}let payload_7: bitstring = (if v_517 then catch-fail((if v_519 then aead_enc(ech_a_6,key_7,(base_nonce_7,n_6),o_client_hello_ADD_6,i_client_hello_8) else fail-any)) else caught-fail) in
                                    {2565}let v_520: bool = not-caught-fail(payload_7) in
                                    {2566}let o_ech_ext_8: echExt = (if v_520 then ECHClientHelloOuter(ech_h_6,ech_a_6,config_id_4,zero,payload_7) else caught-fail) in
                                    {2567}let o_offer_12: params = (if v_520 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_3,SNI(o_dom_4),o_ech_ext_8,empty_extra_ext,o_psk_ext_8) else caught-fail) in
                                    {2568}let (o_client_hello'_4: msg,i_client_hello'_4: msg,i_cr'_4: bytes32,i_kex_data'_4: bitstring,psk_data'_9: bitstring) = (if v_517 then (if v_520 then (CH(o_cr_5,o_offer_12),i_client_hello_8,i_cr_4,i_kex_data_4,psk_data_12) else fail-any) else fail-any) in
                                    {2569}out(io, o_client_hello'_4);
                                    {2570}in(io, server_hello'_8: msg);
                                    {2571}let SH(B32(sr24'_4: bytes24,sr8'_4: bytes8),params'_4: params) = server_hello'_8 in
                                    {2573}let sh_modified_6: msg = SH(B32(sr24'_4,zero8),params'_4) in
                                    {2572}let cur_log_IN1_HRR_IN2_4: bitstring = (cur_log_IN1_HRR_1,i_client_hello'_4) in
                                    {2574}let cur_log_sh_6: bitstring = (cur_log_IN1_HRR_IN2_4,sh_modified_6) in
                                    {2575}let transcript_ech_conf_6: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_6)) in
                                    {2576}let v_521: bool = not-caught-fail(transcript_ech_conf_6) in
                                    {2578}let k_54: bitstring = (if v_521 then catch-fail(b32_2_b(get_random(i_client_hello'_4))) else caught-fail) in
                                    {2579}let v_522: bool = not-caught-fail(k_54) in
                                    {2577}let s_57: bitstring = (if v_521 then zero else caught-fail) in
                                    {2580}let k_55: bitstring = (if v_521 then catch-fail((if v_522 then hmac(@6_backend_h,s_57,k_54) else fail-any)) else caught-fail) in
                                    {2581}let v_523: bool = not-caught-fail(k_55) in
                                    {2582}let l_144: label = (if v_523 then ech_accept_confirmation else caught-fail) in
                                    {2583}let x_163: bitstring = (if v_523 then (l_144,cur_log_sh_6) else caught-fail) in
                                    {2584}let sr8_8: bytes8 = (if v_521 then catch-fail(crop_into_bytes8((if v_523 then hmac(@6_backend_h,k_55,x_163) else fail-any))) else caught-fail) in
                                    {2585}let v_524: bool = not-caught-fail(sr8_8) in
                                    {2586}if (B32(sr24'_4,sr8'_4) = (if v_521 then (if v_524 then B32(sr24'_4,sr8_8) else fail-any) else fail-any)) then
                                    {2587}let (x_164: bitstring,g_13: group) = i_kex_data'_4 in
                                    {2588}let (psk_offer_10: preSharedKey,id_offer_10: identityPsk,es_offer_10: bitstring,is_safe_offer_10: bool) = psk_data'_9 in
                                    {2589}event Client_PSKOffer(@6_id_client,psk_offer_10,id_offer_10,is_safe_offer_10);
                                    {2590}event Client_Rand_client(@6_id_client,i_cr'_4);
                                    {2591}event Client_DH_client(@6_id_client,dh_pub(g_13,x_164));
                                    {2592}event Client_server_domain(@6_id_client,backend_dom);
                                    {2593}let SH(sr_18: bytes32,mode_12: params) = server_hello'_8 in
                                    {2594}event Client_Rand_server(@6_id_client,sr_18);
                                    {2595}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_13,gy_11: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_23: preSharedKeyExt) = mode_12 in
                                    (
                                        {2597}event Client_DH_server(@6_id_client,gy_11);
                                        {2598}let v_525: bool = (psk_ext_23 = empty_psk_ext) in
                                        {2599}let psk_58: preSharedKey = (if v_525 then NoPsk else caught-fail) in
                                        {2601}let k_56: bitstring = (if v_525 then catch-fail(psk2b(psk_58)) else caught-fail) in
                                        {2602}let v_526: bool = not-caught-fail(k_56) in
                                        {2600}let s_58: bitstring = (if v_525 then zero else caught-fail) in
                                        {2603}let early_secret_37: bitstring = (if v_525 then catch-fail((if v_526 then hmac(@6_backend_h,s_58,k_56) else fail-any)) else caught-fail) in
                                        {2604}let v_527: bool = not-caught-fail(early_secret_37) in
                                        {2606}let m_47: bitstring = (if v_527 then zero else caught-fail) in
                                        {2607}let h_136: bitstring = (if v_527 then catch-fail(hash(@6_backend_h,m_47)) else caught-fail) in
                                        {2608}let v_528: bool = not-caught-fail(h_136) in
                                        {2605}let l_145: label = (if v_527 then tls13_ext_res_binder else caught-fail) in
                                        {2609}let x_165: bitstring = (if v_528 then (l_145,h_136) else caught-fail) in
                                        {2610}let binder_key_25: bitstring = (if v_527 then catch-fail((if v_528 then hmac(@6_backend_h,early_secret_37,x_165) else fail-any)) else caught-fail) in
                                        {2611}let v_529: bool = not-caught-fail(binder_key_25) in
                                        {2612}let v_530: bitstring = (if v_525 then catch-fail((if v_527 then (if v_529 then (early_secret_37,binder_key_25) else fail-any) else fail-any)) else caught-fail) in
                                        {2613}let v_531: bool = (not-caught-fail(v_530) && success?(1-proj-2-tuple(v_530))) in
                                        {2614}let kb_25: mac_key = (if v_531 then 2-proj-2-tuple(v_530) else caught-fail) in
                                        {2615}let es_35: bitstring = (if v_531 then 1-proj-2-tuple(v_530) else caught-fail) in
                                        {2616}let v_532: bitstring = (if not(v_525) then catch-fail(psk_data'_9) else caught-fail) in
                                        {2617}let v_533: bool = (not-caught-fail(v_532) && success?(1-proj-4-tuple(v_532))) in
                                        {2618}let is_safe_22: bool = (if v_533 then 4-proj-4-tuple(v_532) else caught-fail) in
                                        {2619}let es_36: bitstring = (if v_533 then 3-proj-4-tuple(v_532) else caught-fail) in
                                        {2620}let id_29: identityPsk = (if v_533 then 2-proj-4-tuple(v_532) else caught-fail) in
                                        {2621}let psk_59: preSharedKey = (if v_533 then 1-proj-4-tuple(v_532) else caught-fail) in
                                        {2622}let (psk_60: preSharedKey,early_secret_38: bitstring,valid_10: bool,safe_psk_13: bool) = (if v_525 then (if v_531 then (NoPsk,es_35,true,false) else fail-any) else (if v_533 then (psk_59,es_36,((psk_59 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_23)),is_safe_22) else fail-any)) in
                                        {2623}event Client_PSKChoosen(@6_id_client,psk_60,safe_psk_13);
                                        {2624}if valid_10 then
                                        (
                                            {2627}new s_59[]: seed;
                                            {2625}let gxy_21: element = catch-fail(dh_decap_fun(g_13,gy_11,x_164)) in
                                            {2626}let v_534: bool = not-caught-fail(gxy_21) in
                                            {2628}let gxy_22: element = (if v_534 then gxy_21 else dh_f(s_59)) in
                                            {2629}event Client_DH_gxy(@6_id_client,gxy_22);
                                            {2631}let m_48: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {2632}let v_535: bool = not-caught-fail(m_48) in
                                            {2633}let h_137: bitstring = (if v_535 then catch-fail(hash(@6_backend_h,m_48)) else caught-fail) in
                                            {2634}let v_536: bool = not-caught-fail(h_137) in
                                            {2630}let l_146: label = tls13_derived in
                                            {2635}let x_166: bitstring = (if v_536 then (l_146,h_137) else caught-fail) in
                                            {2636}let extra_23: bitstring = catch-fail((if v_535 then (if v_536 then hmac(@6_backend_h,early_secret_38,x_166) else fail-any) else fail-any)) in
                                            {2637}let v_537: bool = not-caught-fail(extra_23) in
                                            {2638}let handshake_secret_11: bitstring = (if v_537 then hmac(@6_backend_h,extra_23,gxy_22) else fail-any) in
                                            {2640}let m_49: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {2641}let v_538: bool = not-caught-fail(m_49) in
                                            {2642}let h_138: bitstring = (if v_538 then catch-fail(hash(@6_backend_h,m_49)) else caught-fail) in
                                            {2643}let v_539: bool = not-caught-fail(h_138) in
                                            {2639}let l_147: label = tls13_derived in
                                            {2644}let x_167: bitstring = (if v_539 then (l_147,h_138) else caught-fail) in
                                            {2645}let extra_24: bitstring = catch-fail((if v_538 then (if v_539 then hmac(@6_backend_h,handshake_secret_11,x_167) else fail-any) else fail-any)) in
                                            {2646}let v_540: bool = not-caught-fail(extra_24) in
                                            {2647}let k_57: bitstring = (if v_540 then zero else caught-fail) in
                                            {2648}let master_secret_29: bitstring = (if v_540 then catch-fail(hmac(@6_backend_h,handshake_secret_11,k_57)) else caught-fail) in
                                            {2649}let v_541: bool = not-caught-fail(master_secret_29) in
                                            {2596}let cur_log2_24: bitstring = (cur_log_IN1_HRR_IN2_4,server_hello'_8) in
                                            {2651}let h_139: bitstring = (if v_541 then catch-fail(hash(@6_backend_h,cur_log2_24)) else caught-fail) in
                                            {2652}let v_542: bool = not-caught-fail(h_139) in
                                            {2650}let l_148: label = (if v_541 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {2653}let x_168: bitstring = (if v_542 then (l_148,h_139) else caught-fail) in
                                            {2654}let client_hts_11: bitstring = (if v_541 then catch-fail((if v_542 then hmac(@6_backend_h,handshake_secret_11,x_168) else fail-any)) else caught-fail) in
                                            {2655}let v_543: bool = not-caught-fail(client_hts_11) in
                                            {2657}let h_140: bitstring = (if v_543 then catch-fail(hash(@6_backend_h,cur_log2_24)) else caught-fail) in
                                            {2658}let v_544: bool = not-caught-fail(h_140) in
                                            {2656}let l_149: label = (if v_543 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {2659}let x_169: bitstring = (if v_544 then (l_149,h_140) else caught-fail) in
                                            {2660}let server_hts_11: bitstring = (if v_543 then catch-fail((if v_544 then hmac(@6_backend_h,handshake_secret_11,x_169) else fail-any)) else caught-fail) in
                                            {2661}let v_545: bool = not-caught-fail(server_hts_11) in
                                            {2663}let h_141: bitstring = (if v_545 then zero else caught-fail) in
                                            {2662}let l_150: label = (if v_545 then tls13_key else caught-fail) in
                                            {2664}let x_170: bitstring = (if v_545 then (l_150,h_141) else caught-fail) in
                                            {2665}let client_wkh_11: bitstring = (if v_545 then catch-fail(hmac(@6_backend_h,client_hts_11,x_170)) else caught-fail) in
                                            {2666}let v_546: bool = not-caught-fail(client_wkh_11) in
                                            {2668}let h_142: bitstring = (if v_546 then zero else caught-fail) in
                                            {2667}let l_151: label = (if v_546 then tls13_key else caught-fail) in
                                            {2669}let x_171: bitstring = (if v_546 then (l_151,h_142) else caught-fail) in
                                            {2670}let server_wkh_11: bitstring = (if v_546 then catch-fail(hmac(@6_backend_h,server_hts_11,x_171)) else caught-fail) in
                                            {2671}let v_547: bool = not-caught-fail(server_wkh_11) in
                                            {2673}let h_143: bitstring = (if v_547 then zero else caught-fail) in
                                            {2672}let l_152: label = (if v_547 then tls13_finished else caught-fail) in
                                            {2674}let x_172: bitstring = (if v_547 then (l_152,h_143) else caught-fail) in
                                            {2675}let client_fk_11: bitstring = (if v_547 then catch-fail(hmac(@6_backend_h,client_hts_11,x_172)) else caught-fail) in
                                            {2676}let v_548: bool = not-caught-fail(client_fk_11) in
                                            {2678}let h_144: bitstring = (if v_548 then zero else caught-fail) in
                                            {2677}let l_153: label = (if v_548 then tls13_finished else caught-fail) in
                                            {2679}let x_173: bitstring = (if v_548 then (l_153,h_144) else caught-fail) in
                                            {2680}let server_fk_11: bitstring = (if v_548 then catch-fail(hmac(@6_backend_h,server_hts_11,x_173)) else caught-fail) in
                                            {2681}let v_549: bool = not-caught-fail(server_fk_11) in
                                            {2682}let (master_secret_30: bitstring,chk_18: aead_key,shk_17: aead_key,cfin_18: mac_key,sfin_17: mac_key) = (if v_540 then (if v_541 then (if v_543 then (if v_545 then (if v_546 then (if v_547 then (if v_548 then (if v_549 then (master_secret_29,client_wkh_11,server_wkh_11,client_fk_11,server_fk_11) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {2683}event Client_chk(@6_id_client,chk_18);
                                            {2684}event Client_shk(@6_id_client,shk_17);
                                            {2685}event Client_cfin(@6_id_client,cfin_18);
                                            {2686}event Client_sfin(@6_id_client,sfin_17);
                                            {2687}in(io, enc_ee_msg_10: bitstring);
                                            {2688}let ee_msg_11: msg = aead_dec(@6_backend_a,shk_17,0,zero,enc_ee_msg_10) in
                                            {2689}let EE(ech_ee_10: echExt,extra_ee_10: extraExt) = ee_msg_11 in
                                            {2690}let cur_log2_25: bitstring = (cur_log2_24,ee_msg_11) in
                                            {2691}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_4,sr_18,@6_backend_h,@6_backend_a,c_dom_5,backend_dom,psk_60,safe_psk_13,@6_comp_psk,master_secret_30,chk_18,0,shk_17,1,cfin_18,sfin_17,cur_log2_25)))
                                        )
                                        else
                                            {2692}out(io, illegal_parameter)
                                    )
                                    else
                                        {2693}out(io, illegal_parameter)
                            )
                            else
                                {2695}let psk_61: preSharedKey = NoPsk in
                                {2697}let k_58: bitstring = catch-fail(psk2b(psk_61)) in
                                {2698}let v_550: bool = not-caught-fail(k_58) in
                                {2696}let s_60: bitstring = zero in
                                {2699}let early_secret_39: bitstring = catch-fail((if v_550 then hmac(@6_backend_h,s_60,k_58) else fail-any)) in
                                {2700}let v_551: bool = not-caught-fail(early_secret_39) in
                                {2702}let m_50: bitstring = (if v_551 then zero else caught-fail) in
                                {2703}let h_145: bitstring = (if v_551 then catch-fail(hash(@6_backend_h,m_50)) else caught-fail) in
                                {2704}let v_552: bool = not-caught-fail(h_145) in
                                {2701}let l_154: label = (if v_551 then tls13_ext_res_binder else caught-fail) in
                                {2705}let x_174: bitstring = (if v_552 then (l_154,h_145) else caught-fail) in
                                {2706}let binder_key_26: bitstring = (if v_551 then catch-fail((if v_552 then hmac(@6_backend_h,early_secret_39,x_174) else fail-any)) else caught-fail) in
                                {2707}let v_553: bool = not-caught-fail(binder_key_26) in
                                {2708}let v_554: bitstring = catch-fail((if v_551 then (if v_553 then (early_secret_39,binder_key_26) else fail-any) else fail-any)) in
                                {2709}let v_555: bool = (not-caught-fail(v_554) && success?(1-proj-2-tuple(v_554))) in
                                {2710}let kb_26: mac_key = (if v_555 then 2-proj-2-tuple(v_554) else caught-fail) in
                                {2711}let es_37: bitstring = (if v_555 then 1-proj-2-tuple(v_554) else caught-fail) in
                                {2712}let v_556: bitstring = catch-fail((if v_555 then (empty_psk_ext,(NoPsk,zero,es_37,false)) else fail-any)) in
                                {2713}let v_557: bool = (not-caught-fail(v_556) && success?(1-proj-2-tuple(v_556))) in
                                {2714}let psk_data_13: bitstring = (if v_557 then 2-proj-2-tuple(v_556) else caught-fail) in
                                {2715}let psk_ext_24: preSharedKeyExt = (if v_557 then 1-proj-2-tuple(v_556) else caught-fail) in
                                {2718}new fake_id_8[]: identityPsk;
                                {2719}new fake_binder_8[]: bitstring;
                                {2725}let v_558: hpkeContext = (if v_557 then catch-fail(context) else caught-fail) in
                                {2726}let v_559: bool = (not-caught-fail(v_558) && ((S =nf 1-proj-hpke_context(v_558)) && success?(1-proj-hpke_context(v_558)))) in
                                {2727}let base_nonce_8: bitstring = (if v_559 then 3-proj-hpke_context(v_558) else caught-fail) in
                                {2728}let key_8: aead_key = (if v_559 then 2-proj-hpke_context(v_558) else caught-fail) in
                                {2724}let n_7: nat = (if v_557 then 2 else caught-fail) in
                                {2721}let o_ech_ext_ADD_7: echExt = (if v_557 then ECHClientHelloOuter(ech_h_6,ech_a_6,config_id_4,zero,zero) else caught-fail) in
                                {2720}let o_psk_ext_9: preSharedKeyExt = (if v_557 then (if @6_use_psk then client_psk_ext(fake_id_8,fake_binder_8) else empty_psk_ext) else caught-fail) in
                                {2722}let o_offer_ADD_7: params = (if v_557 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_3,SNI(o_dom_4),o_ech_ext_ADD_7,empty_extra_ext,o_psk_ext_9) else caught-fail) in
                                {2723}let o_client_hello_ADD_7: msg = (if v_557 then CH(o_cr_5,o_offer_ADD_7) else caught-fail) in
                                {2716}let i_offer_7: params = (if v_557 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_2,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_24) else caught-fail) in
                                {2717}let i_client_hello_9: msg = (if v_557 then CH(i_cr_4,i_offer_7) else caught-fail) in
                                {2729}let payload_8: bitstring = (if v_557 then catch-fail((if v_559 then aead_enc(ech_a_6,key_8,(base_nonce_8,n_7),o_client_hello_ADD_7,i_client_hello_9) else fail-any)) else caught-fail) in
                                {2730}let v_560: bool = not-caught-fail(payload_8) in
                                {2731}let o_ech_ext_9: echExt = (if v_560 then ECHClientHelloOuter(ech_h_6,ech_a_6,config_id_4,zero,payload_8) else caught-fail) in
                                {2732}let o_offer_13: params = (if v_560 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_3,SNI(o_dom_4),o_ech_ext_9,empty_extra_ext,o_psk_ext_9) else caught-fail) in
                                {2733}let (o_client_hello'_5: msg,i_client_hello'_5: msg,i_cr'_5: bytes32,i_kex_data'_5: bitstring,psk_data'_10: bitstring) = (if v_557 then (if v_560 then (CH(o_cr_5,o_offer_13),i_client_hello_9,i_cr_4,i_kex_data_4,psk_data_13) else fail-any) else fail-any) in
                                {2734}out(io, o_client_hello'_5);
                                {2735}in(io, server_hello'_9: msg);
                                {2736}let SH(B32(sr24'_5: bytes24,sr8'_5: bytes8),params'_5: params) = server_hello'_9 in
                                {2738}let sh_modified_7: msg = SH(B32(sr24'_5,zero8),params'_5) in
                                {2737}let cur_log_IN1_HRR_IN2_5: bitstring = (cur_log_IN1_HRR_1,i_client_hello'_5) in
                                {2739}let cur_log_sh_7: bitstring = (cur_log_IN1_HRR_IN2_5,sh_modified_7) in
                                {2740}let transcript_ech_conf_7: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_7)) in
                                {2741}let v_561: bool = not-caught-fail(transcript_ech_conf_7) in
                                {2743}let k_59: bitstring = (if v_561 then catch-fail(b32_2_b(get_random(i_client_hello'_5))) else caught-fail) in
                                {2744}let v_562: bool = not-caught-fail(k_59) in
                                {2742}let s_61: bitstring = (if v_561 then zero else caught-fail) in
                                {2745}let k_60: bitstring = (if v_561 then catch-fail((if v_562 then hmac(@6_backend_h,s_61,k_59) else fail-any)) else caught-fail) in
                                {2746}let v_563: bool = not-caught-fail(k_60) in
                                {2747}let l_155: label = (if v_563 then ech_accept_confirmation else caught-fail) in
                                {2748}let x_175: bitstring = (if v_563 then (l_155,cur_log_sh_7) else caught-fail) in
                                {2749}let sr8_9: bytes8 = (if v_561 then catch-fail(crop_into_bytes8((if v_563 then hmac(@6_backend_h,k_60,x_175) else fail-any))) else caught-fail) in
                                {2750}let v_564: bool = not-caught-fail(sr8_9) in
                                {2751}if (B32(sr24'_5,sr8'_5) = (if v_561 then (if v_564 then B32(sr24'_5,sr8_9) else fail-any) else fail-any)) then
                                {2752}let (x_176: bitstring,g_14: group) = i_kex_data'_5 in
                                {2753}let (psk_offer_11: preSharedKey,id_offer_11: identityPsk,es_offer_11: bitstring,is_safe_offer_11: bool) = psk_data'_10 in
                                {2754}event Client_PSKOffer(@6_id_client,psk_offer_11,id_offer_11,is_safe_offer_11);
                                {2755}event Client_Rand_client(@6_id_client,i_cr'_5);
                                {2756}event Client_DH_client(@6_id_client,dh_pub(g_14,x_176));
                                {2757}event Client_server_domain(@6_id_client,backend_dom);
                                {2758}let SH(sr_19: bytes32,mode_13: params) = server_hello'_9 in
                                {2759}event Client_Rand_server(@6_id_client,sr_19);
                                {2760}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_14,gy_12: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_25: preSharedKeyExt) = mode_13 in
                                (
                                    {2762}event Client_DH_server(@6_id_client,gy_12);
                                    {2763}let v_565: bool = (psk_ext_25 = empty_psk_ext) in
                                    {2764}let psk_62: preSharedKey = (if v_565 then NoPsk else caught-fail) in
                                    {2766}let k_61: bitstring = (if v_565 then catch-fail(psk2b(psk_62)) else caught-fail) in
                                    {2767}let v_566: bool = not-caught-fail(k_61) in
                                    {2765}let s_62: bitstring = (if v_565 then zero else caught-fail) in
                                    {2768}let early_secret_40: bitstring = (if v_565 then catch-fail((if v_566 then hmac(@6_backend_h,s_62,k_61) else fail-any)) else caught-fail) in
                                    {2769}let v_567: bool = not-caught-fail(early_secret_40) in
                                    {2771}let m_51: bitstring = (if v_567 then zero else caught-fail) in
                                    {2772}let h_146: bitstring = (if v_567 then catch-fail(hash(@6_backend_h,m_51)) else caught-fail) in
                                    {2773}let v_568: bool = not-caught-fail(h_146) in
                                    {2770}let l_156: label = (if v_567 then tls13_ext_res_binder else caught-fail) in
                                    {2774}let x_177: bitstring = (if v_568 then (l_156,h_146) else caught-fail) in
                                    {2775}let binder_key_27: bitstring = (if v_567 then catch-fail((if v_568 then hmac(@6_backend_h,early_secret_40,x_177) else fail-any)) else caught-fail) in
                                    {2776}let v_569: bool = not-caught-fail(binder_key_27) in
                                    {2777}let v_570: bitstring = (if v_565 then catch-fail((if v_567 then (if v_569 then (early_secret_40,binder_key_27) else fail-any) else fail-any)) else caught-fail) in
                                    {2778}let v_571: bool = (not-caught-fail(v_570) && success?(1-proj-2-tuple(v_570))) in
                                    {2779}let kb_27: mac_key = (if v_571 then 2-proj-2-tuple(v_570) else caught-fail) in
                                    {2780}let es_38: bitstring = (if v_571 then 1-proj-2-tuple(v_570) else caught-fail) in
                                    {2781}let v_572: bitstring = (if not(v_565) then catch-fail(psk_data'_10) else caught-fail) in
                                    {2782}let v_573: bool = (not-caught-fail(v_572) && success?(1-proj-4-tuple(v_572))) in
                                    {2783}let is_safe_23: bool = (if v_573 then 4-proj-4-tuple(v_572) else caught-fail) in
                                    {2784}let es_39: bitstring = (if v_573 then 3-proj-4-tuple(v_572) else caught-fail) in
                                    {2785}let id_30: identityPsk = (if v_573 then 2-proj-4-tuple(v_572) else caught-fail) in
                                    {2786}let psk_63: preSharedKey = (if v_573 then 1-proj-4-tuple(v_572) else caught-fail) in
                                    {2787}let (psk_64: preSharedKey,early_secret_41: bitstring,valid_11: bool,safe_psk_14: bool) = (if v_565 then (if v_571 then (NoPsk,es_38,true,false) else fail-any) else (if v_573 then (psk_63,es_39,((psk_63 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_25)),is_safe_23) else fail-any)) in
                                    {2788}event Client_PSKChoosen(@6_id_client,psk_64,safe_psk_14);
                                    {2789}if valid_11 then
                                    (
                                        {2792}new s_63[]: seed;
                                        {2790}let gxy_23: element = catch-fail(dh_decap_fun(g_14,gy_12,x_176)) in
                                        {2791}let v_574: bool = not-caught-fail(gxy_23) in
                                        {2793}let gxy_24: element = (if v_574 then gxy_23 else dh_f(s_63)) in
                                        {2794}event Client_DH_gxy(@6_id_client,gxy_24);
                                        {2796}let m_52: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {2797}let v_575: bool = not-caught-fail(m_52) in
                                        {2798}let h_147: bitstring = (if v_575 then catch-fail(hash(@6_backend_h,m_52)) else caught-fail) in
                                        {2799}let v_576: bool = not-caught-fail(h_147) in
                                        {2795}let l_157: label = tls13_derived in
                                        {2800}let x_178: bitstring = (if v_576 then (l_157,h_147) else caught-fail) in
                                        {2801}let extra_25: bitstring = catch-fail((if v_575 then (if v_576 then hmac(@6_backend_h,early_secret_41,x_178) else fail-any) else fail-any)) in
                                        {2802}let v_577: bool = not-caught-fail(extra_25) in
                                        {2803}let handshake_secret_12: bitstring = (if v_577 then hmac(@6_backend_h,extra_25,gxy_24) else fail-any) in
                                        {2805}let m_53: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {2806}let v_578: bool = not-caught-fail(m_53) in
                                        {2807}let h_148: bitstring = (if v_578 then catch-fail(hash(@6_backend_h,m_53)) else caught-fail) in
                                        {2808}let v_579: bool = not-caught-fail(h_148) in
                                        {2804}let l_158: label = tls13_derived in
                                        {2809}let x_179: bitstring = (if v_579 then (l_158,h_148) else caught-fail) in
                                        {2810}let extra_26: bitstring = catch-fail((if v_578 then (if v_579 then hmac(@6_backend_h,handshake_secret_12,x_179) else fail-any) else fail-any)) in
                                        {2811}let v_580: bool = not-caught-fail(extra_26) in
                                        {2812}let k_62: bitstring = (if v_580 then zero else caught-fail) in
                                        {2813}let master_secret_31: bitstring = (if v_580 then catch-fail(hmac(@6_backend_h,handshake_secret_12,k_62)) else caught-fail) in
                                        {2814}let v_581: bool = not-caught-fail(master_secret_31) in
                                        {2761}let cur_log2_26: bitstring = (cur_log_IN1_HRR_IN2_5,server_hello'_9) in
                                        {2816}let h_149: bitstring = (if v_581 then catch-fail(hash(@6_backend_h,cur_log2_26)) else caught-fail) in
                                        {2817}let v_582: bool = not-caught-fail(h_149) in
                                        {2815}let l_159: label = (if v_581 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {2818}let x_180: bitstring = (if v_582 then (l_159,h_149) else caught-fail) in
                                        {2819}let client_hts_12: bitstring = (if v_581 then catch-fail((if v_582 then hmac(@6_backend_h,handshake_secret_12,x_180) else fail-any)) else caught-fail) in
                                        {2820}let v_583: bool = not-caught-fail(client_hts_12) in
                                        {2822}let h_150: bitstring = (if v_583 then catch-fail(hash(@6_backend_h,cur_log2_26)) else caught-fail) in
                                        {2823}let v_584: bool = not-caught-fail(h_150) in
                                        {2821}let l_160: label = (if v_583 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {2824}let x_181: bitstring = (if v_584 then (l_160,h_150) else caught-fail) in
                                        {2825}let server_hts_12: bitstring = (if v_583 then catch-fail((if v_584 then hmac(@6_backend_h,handshake_secret_12,x_181) else fail-any)) else caught-fail) in
                                        {2826}let v_585: bool = not-caught-fail(server_hts_12) in
                                        {2828}let h_151: bitstring = (if v_585 then zero else caught-fail) in
                                        {2827}let l_161: label = (if v_585 then tls13_key else caught-fail) in
                                        {2829}let x_182: bitstring = (if v_585 then (l_161,h_151) else caught-fail) in
                                        {2830}let client_wkh_12: bitstring = (if v_585 then catch-fail(hmac(@6_backend_h,client_hts_12,x_182)) else caught-fail) in
                                        {2831}let v_586: bool = not-caught-fail(client_wkh_12) in
                                        {2833}let h_152: bitstring = (if v_586 then zero else caught-fail) in
                                        {2832}let l_162: label = (if v_586 then tls13_key else caught-fail) in
                                        {2834}let x_183: bitstring = (if v_586 then (l_162,h_152) else caught-fail) in
                                        {2835}let server_wkh_12: bitstring = (if v_586 then catch-fail(hmac(@6_backend_h,server_hts_12,x_183)) else caught-fail) in
                                        {2836}let v_587: bool = not-caught-fail(server_wkh_12) in
                                        {2838}let h_153: bitstring = (if v_587 then zero else caught-fail) in
                                        {2837}let l_163: label = (if v_587 then tls13_finished else caught-fail) in
                                        {2839}let x_184: bitstring = (if v_587 then (l_163,h_153) else caught-fail) in
                                        {2840}let client_fk_12: bitstring = (if v_587 then catch-fail(hmac(@6_backend_h,client_hts_12,x_184)) else caught-fail) in
                                        {2841}let v_588: bool = not-caught-fail(client_fk_12) in
                                        {2843}let h_154: bitstring = (if v_588 then zero else caught-fail) in
                                        {2842}let l_164: label = (if v_588 then tls13_finished else caught-fail) in
                                        {2844}let x_185: bitstring = (if v_588 then (l_164,h_154) else caught-fail) in
                                        {2845}let server_fk_12: bitstring = (if v_588 then catch-fail(hmac(@6_backend_h,server_hts_12,x_185)) else caught-fail) in
                                        {2846}let v_589: bool = not-caught-fail(server_fk_12) in
                                        {2847}let (master_secret_32: bitstring,chk_19: aead_key,shk_18: aead_key,cfin_19: mac_key,sfin_18: mac_key) = (if v_580 then (if v_581 then (if v_583 then (if v_585 then (if v_586 then (if v_587 then (if v_588 then (if v_589 then (master_secret_31,client_wkh_12,server_wkh_12,client_fk_12,server_fk_12) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {2848}event Client_chk(@6_id_client,chk_19);
                                        {2849}event Client_shk(@6_id_client,shk_18);
                                        {2850}event Client_cfin(@6_id_client,cfin_19);
                                        {2851}event Client_sfin(@6_id_client,sfin_18);
                                        {2852}in(io, enc_ee_msg_11: bitstring);
                                        {2853}let ee_msg_12: msg = aead_dec(@6_backend_a,shk_18,0,zero,enc_ee_msg_11) in
                                        {2854}let EE(ech_ee_11: echExt,extra_ee_11: extraExt) = ee_msg_12 in
                                        {2855}let cur_log2_27: bitstring = (cur_log2_26,ee_msg_12) in
                                        {2856}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_5,sr_19,@6_backend_h,@6_backend_a,c_dom_5,backend_dom,psk_64,safe_psk_14,@6_comp_psk,master_secret_32,chk_19,0,shk_18,1,cfin_19,sfin_18,cur_log2_27)))
                                    )
                                    else
                                        {2857}out(io, illegal_parameter)
                                )
                                else
                                    {2858}out(io, illegal_parameter)
                        )
                        else
                            {2860}let ech_config(config_id_5: configId,ech_g_7: group,pkR_7: element,o_dom_5: domain,ech_h_7: hash_alg,ech_a_7: aead_alg) = ech_conf in
                            {2861}new rand24_8[]: bytes24;
                            {2862}new rand8_8[]: bytes8;
                            {2865}new s_64[]: seed;
                            {2866}let gx_17: element = dh_pub(@6_tls_g,dh_k(s_64)) in
                            {2867}let v_590: bitstring = (dh_k(s_64),gx_17) in
                            {2868}let v_591: bool = success?(1-proj-2-tuple(v_590)) in
                            {2869}let gx_18: element = (if v_591 then 2-proj-2-tuple(v_590) else caught-fail) in
                            {2870}let x_186: bitstring = (if v_591 then 1-proj-2-tuple(v_590) else caught-fail) in
                            {2864}let send_key_share_5: bool = true in
                            {2871}let kex_7: kex_alg = (if v_591 then (if send_key_share_5 then DHE_kex(@6_tls_g,gx_18) else DHE_group(@6_tls_g)) else caught-fail) in
                            {2872}let (o_kex_ext_4: keyShareExt,kex_data_1: bitstring) = (if v_591 then (client_kex_ext(kex_7),(x_186,@6_tls_g)) else fail-any) in
                            {2863}let o_cr_6: bytes32 = B32(rand24_8,rand8_8) in
                            {2859}let cur_log_OU1_HRR_1: bitstring = ((zero,o_client_hello_1),server_hello_2) in
                            {2873}if @6_use_grease then
                            (
                                {2875}if @6_use_psk then
                                (
                                    {2874}let extra_27: extraExt = empty_extra_ext in
                                    {2876}let (psk_65: preSharedKey,id_31: identityPsk,old_es_4: bitstring,is_safe_24: bool) = psk_data_10 in
                                    (
                                        {2880}let k_63: bitstring = catch-fail(psk2b(psk_65)) in
                                        {2881}let v_592: bool = not-caught-fail(k_63) in
                                        {2879}let s_65: bitstring = zero in
                                        {2882}let early_secret_42: bitstring = catch-fail((if v_592 then hmac(@6_tls_h,s_65,k_63) else fail-any)) in
                                        {2883}let v_593: bool = not-caught-fail(early_secret_42) in
                                        {2885}let m_54: bitstring = (if v_593 then zero else caught-fail) in
                                        {2886}let h_155: bitstring = (if v_593 then catch-fail(hash(@6_tls_h,m_54)) else caught-fail) in
                                        {2887}let v_594: bool = not-caught-fail(h_155) in
                                        {2884}let l_165: label = (if v_593 then tls13_ext_res_binder else caught-fail) in
                                        {2888}let x_187: bitstring = (if v_594 then (l_165,h_155) else caught-fail) in
                                        {2889}let binder_key_28: bitstring = (if v_593 then catch-fail((if v_594 then hmac(@6_tls_h,early_secret_42,x_187) else fail-any)) else caught-fail) in
                                        {2890}let v_595: bool = not-caught-fail(binder_key_28) in
                                        {2891}let v_596: bitstring = catch-fail((if v_593 then (if v_595 then (early_secret_42,binder_key_28) else fail-any) else fail-any)) in
                                        {2892}let v_597: bool = (not-caught-fail(v_596) && success?(1-proj-2-tuple(v_596))) in
                                        {2893}let kb_28: mac_key = (if v_597 then 2-proj-2-tuple(v_596) else caught-fail) in
                                        {2894}let es_40: bitstring = (if v_597 then 1-proj-2-tuple(v_596) else caught-fail) in
                                        {2877}let offer_10: params = nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_4,SNI(o_dom_5),o_ech_ext_6,extra_27,trunc_client_psk_ext(id_31)) in
                                        {2878}let cur_log'_10: bitstring = (cur_log_OU1_HRR_1,CH(o_cr_6,offer_10)) in
                                        {2895}let binders_9: bitstring = (if v_597 then catch-fail(hmac(@6_tls_h,kb_28,cur_log'_10)) else caught-fail) in
                                        {2896}let v_598: bool = not-caught-fail(binders_9) in
                                        {2897}let v_599: bitstring = catch-fail((if v_597 then (if v_598 then (client_psk_ext(id_31,binders_9),(psk_65,id_31,es_40,is_safe_24)) else fail-any) else fail-any)) in
                                        {2898}let v_600: bool = (not-caught-fail(v_599) && success?(1-proj-2-tuple(v_599))) in
                                        {2899}let psk_data_14: bitstring = (if v_600 then 2-proj-2-tuple(v_599) else caught-fail) in
                                        {2900}let psk_ext_26: preSharedKeyExt = (if v_600 then 1-proj-2-tuple(v_599) else caught-fail) in
                                        {2901}let o_offer_14: params = (if v_600 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_4,SNI(o_dom_5),o_ech_ext_6,empty_extra_ext,psk_ext_26) else caught-fail) in
                                        {2902}let (client_hello'_4: msg,cr'_4: bytes32,kex_data'_4: bitstring,psk_data'_11: bitstring) = (if v_600 then (CH(o_cr_6,o_offer_14),o_cr_6,kex_data_1,psk_data_14) else fail-any) in
                                        {2903}out(io, client_hello'_4);
                                        {2905}in(io, server_hello'_10: msg);
                                        {2906}let SH(sr'_4: bytes32,mode'_4: params) = server_hello'_10 in
                                        (
                                            {2907}if (sr'_4 = B32(HRR24,HRR8)) then
                                                {2908}out(io, unexpected_message)
                                            else
                                                {2909}let (x_188: bitstring,g_15: group) = kex_data'_4 in
                                                {2910}let (psk_offer_12: preSharedKey,id_offer_12: identityPsk,es_offer_12: bitstring,is_safe_offer_12: bool) = psk_data'_11 in
                                                {2911}event Client_PSKOffer(@6_id_client,psk_offer_12,id_offer_12,is_safe_offer_12);
                                                {2912}event Client_Rand_client(@6_id_client,cr'_4);
                                                {2913}event Client_DH_client(@6_id_client,dh_pub(g_15,x_188));
                                                {2914}event Client_server_domain(@6_id_client,o_dom);
                                                {2915}let SH(sr_20: bytes32,mode_14: params) = server_hello'_10 in
                                                {2916}event Client_Rand_server(@6_id_client,sr_20);
                                                {2917}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_15,gy_13: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_27: preSharedKeyExt) = mode_14 in
                                                (
                                                    {2919}event Client_DH_server(@6_id_client,gy_13);
                                                    {2920}let v_601: bool = (psk_ext_27 = empty_psk_ext) in
                                                    {2921}let psk_66: preSharedKey = (if v_601 then NoPsk else caught-fail) in
                                                    {2923}let k_64: bitstring = (if v_601 then catch-fail(psk2b(psk_66)) else caught-fail) in
                                                    {2924}let v_602: bool = not-caught-fail(k_64) in
                                                    {2922}let s_66: bitstring = (if v_601 then zero else caught-fail) in
                                                    {2925}let early_secret_43: bitstring = (if v_601 then catch-fail((if v_602 then hmac(@6_tls_h,s_66,k_64) else fail-any)) else caught-fail) in
                                                    {2926}let v_603: bool = not-caught-fail(early_secret_43) in
                                                    {2928}let m_55: bitstring = (if v_603 then zero else caught-fail) in
                                                    {2929}let h_156: bitstring = (if v_603 then catch-fail(hash(@6_tls_h,m_55)) else caught-fail) in
                                                    {2930}let v_604: bool = not-caught-fail(h_156) in
                                                    {2927}let l_166: label = (if v_603 then tls13_ext_res_binder else caught-fail) in
                                                    {2931}let x_189: bitstring = (if v_604 then (l_166,h_156) else caught-fail) in
                                                    {2932}let binder_key_29: bitstring = (if v_603 then catch-fail((if v_604 then hmac(@6_tls_h,early_secret_43,x_189) else fail-any)) else caught-fail) in
                                                    {2933}let v_605: bool = not-caught-fail(binder_key_29) in
                                                    {2934}let v_606: bitstring = (if v_601 then catch-fail((if v_603 then (if v_605 then (early_secret_43,binder_key_29) else fail-any) else fail-any)) else caught-fail) in
                                                    {2935}let v_607: bool = (not-caught-fail(v_606) && success?(1-proj-2-tuple(v_606))) in
                                                    {2936}let kb_29: mac_key = (if v_607 then 2-proj-2-tuple(v_606) else caught-fail) in
                                                    {2937}let es_41: bitstring = (if v_607 then 1-proj-2-tuple(v_606) else caught-fail) in
                                                    {2938}let v_608: bitstring = (if not(v_601) then catch-fail(psk_data'_11) else caught-fail) in
                                                    {2939}let v_609: bool = (not-caught-fail(v_608) && success?(1-proj-4-tuple(v_608))) in
                                                    {2940}let is_safe_25: bool = (if v_609 then 4-proj-4-tuple(v_608) else caught-fail) in
                                                    {2941}let es_42: bitstring = (if v_609 then 3-proj-4-tuple(v_608) else caught-fail) in
                                                    {2942}let id_32: identityPsk = (if v_609 then 2-proj-4-tuple(v_608) else caught-fail) in
                                                    {2943}let psk_67: preSharedKey = (if v_609 then 1-proj-4-tuple(v_608) else caught-fail) in
                                                    {2944}let (psk_68: preSharedKey,early_secret_44: bitstring,valid_12: bool,safe_psk_15: bool) = (if v_601 then (if v_607 then (NoPsk,es_41,true,false) else fail-any) else (if v_609 then (psk_67,es_42,((psk_67 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_27)),is_safe_25) else fail-any)) in
                                                    {2945}event Client_PSKChoosen(@6_id_client,psk_68,safe_psk_15);
                                                    {2946}if valid_12 then
                                                    (
                                                        {2949}new s_67[]: seed;
                                                        {2947}let gxy_25: element = catch-fail(dh_decap_fun(g_15,gy_13,x_188)) in
                                                        {2948}let v_610: bool = not-caught-fail(gxy_25) in
                                                        {2950}let gxy_26: element = (if v_610 then gxy_25 else dh_f(s_67)) in
                                                        {2951}event Client_DH_gxy(@6_id_client,gxy_26);
                                                        {2953}let m_56: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {2954}let v_611: bool = not-caught-fail(m_56) in
                                                        {2955}let h_157: bitstring = (if v_611 then catch-fail(hash(@6_tls_h,m_56)) else caught-fail) in
                                                        {2956}let v_612: bool = not-caught-fail(h_157) in
                                                        {2952}let l_167: label = tls13_derived in
                                                        {2957}let x_190: bitstring = (if v_612 then (l_167,h_157) else caught-fail) in
                                                        {2958}let extra_28: bitstring = catch-fail((if v_611 then (if v_612 then hmac(@6_tls_h,early_secret_44,x_190) else fail-any) else fail-any)) in
                                                        {2959}let v_613: bool = not-caught-fail(extra_28) in
                                                        {2960}let handshake_secret_13: bitstring = (if v_613 then hmac(@6_tls_h,extra_28,gxy_26) else fail-any) in
                                                        {2962}let m_57: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {2963}let v_614: bool = not-caught-fail(m_57) in
                                                        {2964}let h_158: bitstring = (if v_614 then catch-fail(hash(@6_tls_h,m_57)) else caught-fail) in
                                                        {2965}let v_615: bool = not-caught-fail(h_158) in
                                                        {2961}let l_168: label = tls13_derived in
                                                        {2966}let x_191: bitstring = (if v_615 then (l_168,h_158) else caught-fail) in
                                                        {2967}let extra_29: bitstring = catch-fail((if v_614 then (if v_615 then hmac(@6_tls_h,handshake_secret_13,x_191) else fail-any) else fail-any)) in
                                                        {2968}let v_616: bool = not-caught-fail(extra_29) in
                                                        {2969}let k_65: bitstring = (if v_616 then zero else caught-fail) in
                                                        {2970}let master_secret_33: bitstring = (if v_616 then catch-fail(hmac(@6_tls_h,handshake_secret_13,k_65)) else caught-fail) in
                                                        {2971}let v_617: bool = not-caught-fail(master_secret_33) in
                                                        {2904}let cur_log_OU1_HRR_OU2_4: bitstring = (cur_log_OU1_HRR_1,client_hello'_4) in
                                                        {2918}let cur_log2_28: bitstring = (cur_log_OU1_HRR_OU2_4,server_hello'_10) in
                                                        {2973}let h_159: bitstring = (if v_617 then catch-fail(hash(@6_tls_h,cur_log2_28)) else caught-fail) in
                                                        {2974}let v_618: bool = not-caught-fail(h_159) in
                                                        {2972}let l_169: label = (if v_617 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {2975}let x_192: bitstring = (if v_618 then (l_169,h_159) else caught-fail) in
                                                        {2976}let client_hts_13: bitstring = (if v_617 then catch-fail((if v_618 then hmac(@6_tls_h,handshake_secret_13,x_192) else fail-any)) else caught-fail) in
                                                        {2977}let v_619: bool = not-caught-fail(client_hts_13) in
                                                        {2979}let h_160: bitstring = (if v_619 then catch-fail(hash(@6_tls_h,cur_log2_28)) else caught-fail) in
                                                        {2980}let v_620: bool = not-caught-fail(h_160) in
                                                        {2978}let l_170: label = (if v_619 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {2981}let x_193: bitstring = (if v_620 then (l_170,h_160) else caught-fail) in
                                                        {2982}let server_hts_13: bitstring = (if v_619 then catch-fail((if v_620 then hmac(@6_tls_h,handshake_secret_13,x_193) else fail-any)) else caught-fail) in
                                                        {2983}let v_621: bool = not-caught-fail(server_hts_13) in
                                                        {2985}let h_161: bitstring = (if v_621 then zero else caught-fail) in
                                                        {2984}let l_171: label = (if v_621 then tls13_key else caught-fail) in
                                                        {2986}let x_194: bitstring = (if v_621 then (l_171,h_161) else caught-fail) in
                                                        {2987}let client_wkh_13: bitstring = (if v_621 then catch-fail(hmac(@6_tls_h,client_hts_13,x_194)) else caught-fail) in
                                                        {2988}let v_622: bool = not-caught-fail(client_wkh_13) in
                                                        {2990}let h_162: bitstring = (if v_622 then zero else caught-fail) in
                                                        {2989}let l_172: label = (if v_622 then tls13_key else caught-fail) in
                                                        {2991}let x_195: bitstring = (if v_622 then (l_172,h_162) else caught-fail) in
                                                        {2992}let server_wkh_13: bitstring = (if v_622 then catch-fail(hmac(@6_tls_h,server_hts_13,x_195)) else caught-fail) in
                                                        {2993}let v_623: bool = not-caught-fail(server_wkh_13) in
                                                        {2995}let h_163: bitstring = (if v_623 then zero else caught-fail) in
                                                        {2994}let l_173: label = (if v_623 then tls13_finished else caught-fail) in
                                                        {2996}let x_196: bitstring = (if v_623 then (l_173,h_163) else caught-fail) in
                                                        {2997}let client_fk_13: bitstring = (if v_623 then catch-fail(hmac(@6_tls_h,client_hts_13,x_196)) else caught-fail) in
                                                        {2998}let v_624: bool = not-caught-fail(client_fk_13) in
                                                        {3000}let h_164: bitstring = (if v_624 then zero else caught-fail) in
                                                        {2999}let l_174: label = (if v_624 then tls13_finished else caught-fail) in
                                                        {3001}let x_197: bitstring = (if v_624 then (l_174,h_164) else caught-fail) in
                                                        {3002}let server_fk_13: bitstring = (if v_624 then catch-fail(hmac(@6_tls_h,server_hts_13,x_197)) else caught-fail) in
                                                        {3003}let v_625: bool = not-caught-fail(server_fk_13) in
                                                        {3004}let (master_secret_34: bitstring,chk_20: aead_key,shk_19: aead_key,cfin_20: mac_key,sfin_19: mac_key) = (if v_616 then (if v_617 then (if v_619 then (if v_621 then (if v_622 then (if v_623 then (if v_624 then (if v_625 then (master_secret_33,client_wkh_13,server_wkh_13,client_fk_13,server_fk_13) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {3005}event Client_chk(@6_id_client,chk_20);
                                                        {3006}event Client_shk(@6_id_client,shk_19);
                                                        {3007}event Client_cfin(@6_id_client,cfin_20);
                                                        {3008}event Client_sfin(@6_id_client,sfin_19);
                                                        {3009}in(io, enc_ee_msg_12: bitstring);
                                                        {3010}let ee_msg_13: msg = aead_dec(@6_tls_a,shk_19,0,zero,enc_ee_msg_12) in
                                                        {3011}let EE(ech_ee_12: echExt,extra_ee_12: extraExt) = ee_msg_13 in
                                                        {3012}let cur_log2_29: bitstring = (cur_log2_28,ee_msg_13) in
                                                        {3013}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_4,sr_20,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_68,safe_psk_15,@6_comp_psk,master_secret_34,chk_20,0,shk_19,1,cfin_20,sfin_19,cur_log2_29)))
                                                    )
                                                    else
                                                        {3014}out(io, illegal_parameter)
                                                )
                                                else
                                                    {3015}out(io, illegal_parameter)
                                        )
                                        else
                                            {3016}out(io, unexpected_message)
                                    )
                                    else
                                        {3166}get pre_shared_keys(c_dom'_6: domain,=o_dom_5,=@6_tls_h,id_33: identityPsk,psk_69: preSharedKey,idP_8: idProc,is_safe_26: bool) in
                                        {3017}event Selected_one_time_used_psk(@6_id_client,psk_69,is_safe_26);
                                        {3018}event Selected_psk(c_dom_5,c_dom'_6,idP_8,is_safe_26);
                                        {3019}event Selected_psk_no_missmatch(@6_id_client,o_dom_5,@6_tls_h,psk_69,id_33);
                                        {3020}event Selected_psk_with_ID(c_dom_5,c_dom'_6,id_33,idP_8,is_safe_26);
                                        {3021}let v_626: bitstring = (id_33,psk_69,is_safe_26) in
                                        {3022}let v_627: bool = success?(1-proj-3-tuple(v_626)) in
                                        {3023}let is_safe_27: bool = (if v_627 then 3-proj-3-tuple(v_626) else caught-fail) in
                                        {3024}let psk_70: preSharedKey = (if v_627 then 2-proj-3-tuple(v_626) else caught-fail) in
                                        {3025}let id_34: identityPsk = (if v_627 then 1-proj-3-tuple(v_626) else caught-fail) in
                                        {3029}let k_66: bitstring = (if v_627 then catch-fail(psk2b(psk_70)) else caught-fail) in
                                        {3030}let v_628: bool = not-caught-fail(k_66) in
                                        {3028}let s_68: bitstring = (if v_627 then zero else caught-fail) in
                                        {3031}let early_secret_45: bitstring = (if v_627 then catch-fail((if v_628 then hmac(@6_tls_h,s_68,k_66) else fail-any)) else caught-fail) in
                                        {3032}let v_629: bool = not-caught-fail(early_secret_45) in
                                        {3034}let m_58: bitstring = (if v_629 then zero else caught-fail) in
                                        {3035}let h_165: bitstring = (if v_629 then catch-fail(hash(@6_tls_h,m_58)) else caught-fail) in
                                        {3036}let v_630: bool = not-caught-fail(h_165) in
                                        {3033}let l_175: label = (if v_629 then tls13_ext_res_binder else caught-fail) in
                                        {3037}let x_198: bitstring = (if v_630 then (l_175,h_165) else caught-fail) in
                                        {3038}let binder_key_30: bitstring = (if v_629 then catch-fail((if v_630 then hmac(@6_tls_h,early_secret_45,x_198) else fail-any)) else caught-fail) in
                                        {3039}let v_631: bool = not-caught-fail(binder_key_30) in
                                        {3040}let v_632: bitstring = (if v_627 then catch-fail((if v_629 then (if v_631 then (early_secret_45,binder_key_30) else fail-any) else fail-any)) else caught-fail) in
                                        {3041}let v_633: bool = (not-caught-fail(v_632) && success?(1-proj-2-tuple(v_632))) in
                                        {3042}let kb_30: mac_key = (if v_633 then 2-proj-2-tuple(v_632) else caught-fail) in
                                        {3043}let es_43: bitstring = (if v_633 then 1-proj-2-tuple(v_632) else caught-fail) in
                                        {3026}let offer_11: params = (if v_627 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_4,SNI(o_dom_5),o_ech_ext_6,extra_27,trunc_client_psk_ext(id_34)) else caught-fail) in
                                        {3027}let cur_log'_11: bitstring = (if v_627 then (cur_log_OU1_HRR_1,CH(o_cr_6,offer_11)) else caught-fail) in
                                        {3044}let binders_10: bitstring = (if v_633 then catch-fail(hmac(@6_tls_h,kb_30,cur_log'_11)) else caught-fail) in
                                        {3045}let v_634: bool = not-caught-fail(binders_10) in
                                        {3046}let v_635: bitstring = catch-fail((if v_627 then (if v_633 then (if v_634 then (client_psk_ext(id_34,binders_10),(psk_70,id_34,es_43,is_safe_27)) else fail-any) else fail-any) else fail-any)) in
                                        {3047}let v_636: bool = (not-caught-fail(v_635) && success?(1-proj-2-tuple(v_635))) in
                                        {3048}let psk_data_15: bitstring = (if v_636 then 2-proj-2-tuple(v_635) else caught-fail) in
                                        {3049}let psk_ext_28: preSharedKeyExt = (if v_636 then 1-proj-2-tuple(v_635) else caught-fail) in
                                        {3050}let o_offer_15: params = (if v_636 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_4,SNI(o_dom_5),o_ech_ext_6,empty_extra_ext,psk_ext_28) else caught-fail) in
                                        {3051}let (client_hello'_5: msg,cr'_5: bytes32,kex_data'_5: bitstring,psk_data'_12: bitstring) = (if v_636 then (CH(o_cr_6,o_offer_15),o_cr_6,kex_data_1,psk_data_15) else fail-any) in
                                        {3052}out(io, client_hello'_5);
                                        {3054}in(io, server_hello'_11: msg);
                                        {3055}let SH(sr'_5: bytes32,mode'_5: params) = server_hello'_11 in
                                        (
                                            {3056}if (sr'_5 = B32(HRR24,HRR8)) then
                                                {3057}out(io, unexpected_message)
                                            else
                                                {3058}let (x_199: bitstring,g_16: group) = kex_data'_5 in
                                                {3059}let (psk_offer_13: preSharedKey,id_offer_13: identityPsk,es_offer_13: bitstring,is_safe_offer_13: bool) = psk_data'_12 in
                                                {3060}event Client_PSKOffer(@6_id_client,psk_offer_13,id_offer_13,is_safe_offer_13);
                                                {3061}event Client_Rand_client(@6_id_client,cr'_5);
                                                {3062}event Client_DH_client(@6_id_client,dh_pub(g_16,x_199));
                                                {3063}event Client_server_domain(@6_id_client,o_dom);
                                                {3064}let SH(sr_21: bytes32,mode_15: params) = server_hello'_11 in
                                                {3065}event Client_Rand_server(@6_id_client,sr_21);
                                                {3066}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_16,gy_14: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_29: preSharedKeyExt) = mode_15 in
                                                (
                                                    {3068}event Client_DH_server(@6_id_client,gy_14);
                                                    {3069}let v_637: bool = (psk_ext_29 = empty_psk_ext) in
                                                    {3070}let psk_71: preSharedKey = (if v_637 then NoPsk else caught-fail) in
                                                    {3072}let k_67: bitstring = (if v_637 then catch-fail(psk2b(psk_71)) else caught-fail) in
                                                    {3073}let v_638: bool = not-caught-fail(k_67) in
                                                    {3071}let s_69: bitstring = (if v_637 then zero else caught-fail) in
                                                    {3074}let early_secret_46: bitstring = (if v_637 then catch-fail((if v_638 then hmac(@6_tls_h,s_69,k_67) else fail-any)) else caught-fail) in
                                                    {3075}let v_639: bool = not-caught-fail(early_secret_46) in
                                                    {3077}let m_59: bitstring = (if v_639 then zero else caught-fail) in
                                                    {3078}let h_166: bitstring = (if v_639 then catch-fail(hash(@6_tls_h,m_59)) else caught-fail) in
                                                    {3079}let v_640: bool = not-caught-fail(h_166) in
                                                    {3076}let l_176: label = (if v_639 then tls13_ext_res_binder else caught-fail) in
                                                    {3080}let x_200: bitstring = (if v_640 then (l_176,h_166) else caught-fail) in
                                                    {3081}let binder_key_31: bitstring = (if v_639 then catch-fail((if v_640 then hmac(@6_tls_h,early_secret_46,x_200) else fail-any)) else caught-fail) in
                                                    {3082}let v_641: bool = not-caught-fail(binder_key_31) in
                                                    {3083}let v_642: bitstring = (if v_637 then catch-fail((if v_639 then (if v_641 then (early_secret_46,binder_key_31) else fail-any) else fail-any)) else caught-fail) in
                                                    {3084}let v_643: bool = (not-caught-fail(v_642) && success?(1-proj-2-tuple(v_642))) in
                                                    {3085}let kb_31: mac_key = (if v_643 then 2-proj-2-tuple(v_642) else caught-fail) in
                                                    {3086}let es_44: bitstring = (if v_643 then 1-proj-2-tuple(v_642) else caught-fail) in
                                                    {3087}let v_644: bitstring = (if not(v_637) then catch-fail(psk_data'_12) else caught-fail) in
                                                    {3088}let v_645: bool = (not-caught-fail(v_644) && success?(1-proj-4-tuple(v_644))) in
                                                    {3089}let is_safe_28: bool = (if v_645 then 4-proj-4-tuple(v_644) else caught-fail) in
                                                    {3090}let es_45: bitstring = (if v_645 then 3-proj-4-tuple(v_644) else caught-fail) in
                                                    {3091}let id_35: identityPsk = (if v_645 then 2-proj-4-tuple(v_644) else caught-fail) in
                                                    {3092}let psk_72: preSharedKey = (if v_645 then 1-proj-4-tuple(v_644) else caught-fail) in
                                                    {3093}let (psk_73: preSharedKey,early_secret_47: bitstring,valid_13: bool,safe_psk_16: bool) = (if v_637 then (if v_643 then (NoPsk,es_44,true,false) else fail-any) else (if v_645 then (psk_72,es_45,((psk_72 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_29)),is_safe_28) else fail-any)) in
                                                    {3094}event Client_PSKChoosen(@6_id_client,psk_73,safe_psk_16);
                                                    {3095}if valid_13 then
                                                    (
                                                        {3098}new s_70[]: seed;
                                                        {3096}let gxy_27: element = catch-fail(dh_decap_fun(g_16,gy_14,x_199)) in
                                                        {3097}let v_646: bool = not-caught-fail(gxy_27) in
                                                        {3099}let gxy_28: element = (if v_646 then gxy_27 else dh_f(s_70)) in
                                                        {3100}event Client_DH_gxy(@6_id_client,gxy_28);
                                                        {3102}let m_60: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {3103}let v_647: bool = not-caught-fail(m_60) in
                                                        {3104}let h_167: bitstring = (if v_647 then catch-fail(hash(@6_tls_h,m_60)) else caught-fail) in
                                                        {3105}let v_648: bool = not-caught-fail(h_167) in
                                                        {3101}let l_177: label = tls13_derived in
                                                        {3106}let x_201: bitstring = (if v_648 then (l_177,h_167) else caught-fail) in
                                                        {3107}let extra_30: bitstring = catch-fail((if v_647 then (if v_648 then hmac(@6_tls_h,early_secret_47,x_201) else fail-any) else fail-any)) in
                                                        {3108}let v_649: bool = not-caught-fail(extra_30) in
                                                        {3109}let handshake_secret_14: bitstring = (if v_649 then hmac(@6_tls_h,extra_30,gxy_28) else fail-any) in
                                                        {3111}let m_61: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {3112}let v_650: bool = not-caught-fail(m_61) in
                                                        {3113}let h_168: bitstring = (if v_650 then catch-fail(hash(@6_tls_h,m_61)) else caught-fail) in
                                                        {3114}let v_651: bool = not-caught-fail(h_168) in
                                                        {3110}let l_178: label = tls13_derived in
                                                        {3115}let x_202: bitstring = (if v_651 then (l_178,h_168) else caught-fail) in
                                                        {3116}let extra_31: bitstring = catch-fail((if v_650 then (if v_651 then hmac(@6_tls_h,handshake_secret_14,x_202) else fail-any) else fail-any)) in
                                                        {3117}let v_652: bool = not-caught-fail(extra_31) in
                                                        {3118}let k_68: bitstring = (if v_652 then zero else caught-fail) in
                                                        {3119}let master_secret_35: bitstring = (if v_652 then catch-fail(hmac(@6_tls_h,handshake_secret_14,k_68)) else caught-fail) in
                                                        {3120}let v_653: bool = not-caught-fail(master_secret_35) in
                                                        {3053}let cur_log_OU1_HRR_OU2_5: bitstring = (cur_log_OU1_HRR_1,client_hello'_5) in
                                                        {3067}let cur_log2_30: bitstring = (cur_log_OU1_HRR_OU2_5,server_hello'_11) in
                                                        {3122}let h_169: bitstring = (if v_653 then catch-fail(hash(@6_tls_h,cur_log2_30)) else caught-fail) in
                                                        {3123}let v_654: bool = not-caught-fail(h_169) in
                                                        {3121}let l_179: label = (if v_653 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {3124}let x_203: bitstring = (if v_654 then (l_179,h_169) else caught-fail) in
                                                        {3125}let client_hts_14: bitstring = (if v_653 then catch-fail((if v_654 then hmac(@6_tls_h,handshake_secret_14,x_203) else fail-any)) else caught-fail) in
                                                        {3126}let v_655: bool = not-caught-fail(client_hts_14) in
                                                        {3128}let h_170: bitstring = (if v_655 then catch-fail(hash(@6_tls_h,cur_log2_30)) else caught-fail) in
                                                        {3129}let v_656: bool = not-caught-fail(h_170) in
                                                        {3127}let l_180: label = (if v_655 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {3130}let x_204: bitstring = (if v_656 then (l_180,h_170) else caught-fail) in
                                                        {3131}let server_hts_14: bitstring = (if v_655 then catch-fail((if v_656 then hmac(@6_tls_h,handshake_secret_14,x_204) else fail-any)) else caught-fail) in
                                                        {3132}let v_657: bool = not-caught-fail(server_hts_14) in
                                                        {3134}let h_171: bitstring = (if v_657 then zero else caught-fail) in
                                                        {3133}let l_181: label = (if v_657 then tls13_key else caught-fail) in
                                                        {3135}let x_205: bitstring = (if v_657 then (l_181,h_171) else caught-fail) in
                                                        {3136}let client_wkh_14: bitstring = (if v_657 then catch-fail(hmac(@6_tls_h,client_hts_14,x_205)) else caught-fail) in
                                                        {3137}let v_658: bool = not-caught-fail(client_wkh_14) in
                                                        {3139}let h_172: bitstring = (if v_658 then zero else caught-fail) in
                                                        {3138}let l_182: label = (if v_658 then tls13_key else caught-fail) in
                                                        {3140}let x_206: bitstring = (if v_658 then (l_182,h_172) else caught-fail) in
                                                        {3141}let server_wkh_14: bitstring = (if v_658 then catch-fail(hmac(@6_tls_h,server_hts_14,x_206)) else caught-fail) in
                                                        {3142}let v_659: bool = not-caught-fail(server_wkh_14) in
                                                        {3144}let h_173: bitstring = (if v_659 then zero else caught-fail) in
                                                        {3143}let l_183: label = (if v_659 then tls13_finished else caught-fail) in
                                                        {3145}let x_207: bitstring = (if v_659 then (l_183,h_173) else caught-fail) in
                                                        {3146}let client_fk_14: bitstring = (if v_659 then catch-fail(hmac(@6_tls_h,client_hts_14,x_207)) else caught-fail) in
                                                        {3147}let v_660: bool = not-caught-fail(client_fk_14) in
                                                        {3149}let h_174: bitstring = (if v_660 then zero else caught-fail) in
                                                        {3148}let l_184: label = (if v_660 then tls13_finished else caught-fail) in
                                                        {3150}let x_208: bitstring = (if v_660 then (l_184,h_174) else caught-fail) in
                                                        {3151}let server_fk_14: bitstring = (if v_660 then catch-fail(hmac(@6_tls_h,server_hts_14,x_208)) else caught-fail) in
                                                        {3152}let v_661: bool = not-caught-fail(server_fk_14) in
                                                        {3153}let (master_secret_36: bitstring,chk_21: aead_key,shk_20: aead_key,cfin_21: mac_key,sfin_20: mac_key) = (if v_652 then (if v_653 then (if v_655 then (if v_657 then (if v_658 then (if v_659 then (if v_660 then (if v_661 then (master_secret_35,client_wkh_14,server_wkh_14,client_fk_14,server_fk_14) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {3154}event Client_chk(@6_id_client,chk_21);
                                                        {3155}event Client_shk(@6_id_client,shk_20);
                                                        {3156}event Client_cfin(@6_id_client,cfin_21);
                                                        {3157}event Client_sfin(@6_id_client,sfin_20);
                                                        {3158}in(io, enc_ee_msg_13: bitstring);
                                                        {3159}let ee_msg_14: msg = aead_dec(@6_tls_a,shk_20,0,zero,enc_ee_msg_13) in
                                                        {3160}let EE(ech_ee_13: echExt,extra_ee_13: extraExt) = ee_msg_14 in
                                                        {3161}let cur_log2_31: bitstring = (cur_log2_30,ee_msg_14) in
                                                        {3162}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_5,sr_21,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_73,safe_psk_16,@6_comp_psk,master_secret_36,chk_21,0,shk_20,1,cfin_21,sfin_20,cur_log2_31)))
                                                    )
                                                    else
                                                        {3163}out(io, illegal_parameter)
                                                )
                                                else
                                                    {3164}out(io, illegal_parameter)
                                        )
                                        else
                                            {3165}out(io, unexpected_message)
                                )
                                else
                                    {3167}let psk_74: preSharedKey = NoPsk in
                                    {3169}let k_69: bitstring = catch-fail(psk2b(psk_74)) in
                                    {3170}let v_662: bool = not-caught-fail(k_69) in
                                    {3168}let s_71: bitstring = zero in
                                    {3171}let early_secret_48: bitstring = catch-fail((if v_662 then hmac(@6_tls_h,s_71,k_69) else fail-any)) in
                                    {3172}let v_663: bool = not-caught-fail(early_secret_48) in
                                    {3174}let m_62: bitstring = (if v_663 then zero else caught-fail) in
                                    {3175}let h_175: bitstring = (if v_663 then catch-fail(hash(@6_tls_h,m_62)) else caught-fail) in
                                    {3176}let v_664: bool = not-caught-fail(h_175) in
                                    {3173}let l_185: label = (if v_663 then tls13_ext_res_binder else caught-fail) in
                                    {3177}let x_209: bitstring = (if v_664 then (l_185,h_175) else caught-fail) in
                                    {3178}let binder_key_32: bitstring = (if v_663 then catch-fail((if v_664 then hmac(@6_tls_h,early_secret_48,x_209) else fail-any)) else caught-fail) in
                                    {3179}let v_665: bool = not-caught-fail(binder_key_32) in
                                    {3180}let v_666: bitstring = catch-fail((if v_663 then (if v_665 then (early_secret_48,binder_key_32) else fail-any) else fail-any)) in
                                    {3181}let v_667: bool = (not-caught-fail(v_666) && success?(1-proj-2-tuple(v_666))) in
                                    {3182}let kb_32: mac_key = (if v_667 then 2-proj-2-tuple(v_666) else caught-fail) in
                                    {3183}let es_46: bitstring = (if v_667 then 1-proj-2-tuple(v_666) else caught-fail) in
                                    {3184}let v_668: bitstring = catch-fail((if v_667 then (empty_psk_ext,(NoPsk,zero,es_46,false)) else fail-any)) in
                                    {3185}let v_669: bool = (not-caught-fail(v_668) && success?(1-proj-2-tuple(v_668))) in
                                    {3186}let psk_data_16: bitstring = (if v_669 then 2-proj-2-tuple(v_668) else caught-fail) in
                                    {3187}let psk_ext_30: preSharedKeyExt = (if v_669 then 1-proj-2-tuple(v_668) else caught-fail) in
                                    {3188}let o_offer_16: params = (if v_669 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_4,SNI(o_dom_5),o_ech_ext_6,empty_extra_ext,psk_ext_30) else caught-fail) in
                                    {3189}let (client_hello'_6: msg,cr'_6: bytes32,kex_data'_6: bitstring,psk_data'_13: bitstring) = (if v_669 then (CH(o_cr_6,o_offer_16),o_cr_6,kex_data_1,psk_data_16) else fail-any) in
                                    {3190}out(io, client_hello'_6);
                                    {3192}in(io, server_hello'_12: msg);
                                    {3193}let SH(sr'_6: bytes32,mode'_6: params) = server_hello'_12 in
                                    (
                                        {3194}if (sr'_6 = B32(HRR24,HRR8)) then
                                            {3195}out(io, unexpected_message)
                                        else
                                            {3196}let (x_210: bitstring,g_17: group) = kex_data'_6 in
                                            {3197}let (psk_offer_14: preSharedKey,id_offer_14: identityPsk,es_offer_14: bitstring,is_safe_offer_14: bool) = psk_data'_13 in
                                            {3198}event Client_PSKOffer(@6_id_client,psk_offer_14,id_offer_14,is_safe_offer_14);
                                            {3199}event Client_Rand_client(@6_id_client,cr'_6);
                                            {3200}event Client_DH_client(@6_id_client,dh_pub(g_17,x_210));
                                            {3201}event Client_server_domain(@6_id_client,o_dom);
                                            {3202}let SH(sr_22: bytes32,mode_16: params) = server_hello'_12 in
                                            {3203}event Client_Rand_server(@6_id_client,sr_22);
                                            {3204}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_17,gy_15: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_31: preSharedKeyExt) = mode_16 in
                                            (
                                                {3206}event Client_DH_server(@6_id_client,gy_15);
                                                {3207}let v_670: bool = (psk_ext_31 = empty_psk_ext) in
                                                {3208}let psk_75: preSharedKey = (if v_670 then NoPsk else caught-fail) in
                                                {3210}let k_70: bitstring = (if v_670 then catch-fail(psk2b(psk_75)) else caught-fail) in
                                                {3211}let v_671: bool = not-caught-fail(k_70) in
                                                {3209}let s_72: bitstring = (if v_670 then zero else caught-fail) in
                                                {3212}let early_secret_49: bitstring = (if v_670 then catch-fail((if v_671 then hmac(@6_tls_h,s_72,k_70) else fail-any)) else caught-fail) in
                                                {3213}let v_672: bool = not-caught-fail(early_secret_49) in
                                                {3215}let m_63: bitstring = (if v_672 then zero else caught-fail) in
                                                {3216}let h_176: bitstring = (if v_672 then catch-fail(hash(@6_tls_h,m_63)) else caught-fail) in
                                                {3217}let v_673: bool = not-caught-fail(h_176) in
                                                {3214}let l_186: label = (if v_672 then tls13_ext_res_binder else caught-fail) in
                                                {3218}let x_211: bitstring = (if v_673 then (l_186,h_176) else caught-fail) in
                                                {3219}let binder_key_33: bitstring = (if v_672 then catch-fail((if v_673 then hmac(@6_tls_h,early_secret_49,x_211) else fail-any)) else caught-fail) in
                                                {3220}let v_674: bool = not-caught-fail(binder_key_33) in
                                                {3221}let v_675: bitstring = (if v_670 then catch-fail((if v_672 then (if v_674 then (early_secret_49,binder_key_33) else fail-any) else fail-any)) else caught-fail) in
                                                {3222}let v_676: bool = (not-caught-fail(v_675) && success?(1-proj-2-tuple(v_675))) in
                                                {3223}let kb_33: mac_key = (if v_676 then 2-proj-2-tuple(v_675) else caught-fail) in
                                                {3224}let es_47: bitstring = (if v_676 then 1-proj-2-tuple(v_675) else caught-fail) in
                                                {3225}let v_677: bitstring = (if not(v_670) then catch-fail(psk_data'_13) else caught-fail) in
                                                {3226}let v_678: bool = (not-caught-fail(v_677) && success?(1-proj-4-tuple(v_677))) in
                                                {3227}let is_safe_29: bool = (if v_678 then 4-proj-4-tuple(v_677) else caught-fail) in
                                                {3228}let es_48: bitstring = (if v_678 then 3-proj-4-tuple(v_677) else caught-fail) in
                                                {3229}let id_36: identityPsk = (if v_678 then 2-proj-4-tuple(v_677) else caught-fail) in
                                                {3230}let psk_76: preSharedKey = (if v_678 then 1-proj-4-tuple(v_677) else caught-fail) in
                                                {3231}let (psk_77: preSharedKey,early_secret_50: bitstring,valid_14: bool,safe_psk_17: bool) = (if v_670 then (if v_676 then (NoPsk,es_47,true,false) else fail-any) else (if v_678 then (psk_76,es_48,((psk_76 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_31)),is_safe_29) else fail-any)) in
                                                {3232}event Client_PSKChoosen(@6_id_client,psk_77,safe_psk_17);
                                                {3233}if valid_14 then
                                                (
                                                    {3236}new s_73[]: seed;
                                                    {3234}let gxy_29: element = catch-fail(dh_decap_fun(g_17,gy_15,x_210)) in
                                                    {3235}let v_679: bool = not-caught-fail(gxy_29) in
                                                    {3237}let gxy_30: element = (if v_679 then gxy_29 else dh_f(s_73)) in
                                                    {3238}event Client_DH_gxy(@6_id_client,gxy_30);
                                                    {3240}let m_64: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {3241}let v_680: bool = not-caught-fail(m_64) in
                                                    {3242}let h_177: bitstring = (if v_680 then catch-fail(hash(@6_tls_h,m_64)) else caught-fail) in
                                                    {3243}let v_681: bool = not-caught-fail(h_177) in
                                                    {3239}let l_187: label = tls13_derived in
                                                    {3244}let x_212: bitstring = (if v_681 then (l_187,h_177) else caught-fail) in
                                                    {3245}let extra_32: bitstring = catch-fail((if v_680 then (if v_681 then hmac(@6_tls_h,early_secret_50,x_212) else fail-any) else fail-any)) in
                                                    {3246}let v_682: bool = not-caught-fail(extra_32) in
                                                    {3247}let handshake_secret_15: bitstring = (if v_682 then hmac(@6_tls_h,extra_32,gxy_30) else fail-any) in
                                                    {3249}let m_65: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {3250}let v_683: bool = not-caught-fail(m_65) in
                                                    {3251}let h_178: bitstring = (if v_683 then catch-fail(hash(@6_tls_h,m_65)) else caught-fail) in
                                                    {3252}let v_684: bool = not-caught-fail(h_178) in
                                                    {3248}let l_188: label = tls13_derived in
                                                    {3253}let x_213: bitstring = (if v_684 then (l_188,h_178) else caught-fail) in
                                                    {3254}let extra_33: bitstring = catch-fail((if v_683 then (if v_684 then hmac(@6_tls_h,handshake_secret_15,x_213) else fail-any) else fail-any)) in
                                                    {3255}let v_685: bool = not-caught-fail(extra_33) in
                                                    {3256}let k_71: bitstring = (if v_685 then zero else caught-fail) in
                                                    {3257}let master_secret_37: bitstring = (if v_685 then catch-fail(hmac(@6_tls_h,handshake_secret_15,k_71)) else caught-fail) in
                                                    {3258}let v_686: bool = not-caught-fail(master_secret_37) in
                                                    {3191}let cur_log_OU1_HRR_OU2_6: bitstring = (cur_log_OU1_HRR_1,client_hello'_6) in
                                                    {3205}let cur_log2_32: bitstring = (cur_log_OU1_HRR_OU2_6,server_hello'_12) in
                                                    {3260}let h_179: bitstring = (if v_686 then catch-fail(hash(@6_tls_h,cur_log2_32)) else caught-fail) in
                                                    {3261}let v_687: bool = not-caught-fail(h_179) in
                                                    {3259}let l_189: label = (if v_686 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {3262}let x_214: bitstring = (if v_687 then (l_189,h_179) else caught-fail) in
                                                    {3263}let client_hts_15: bitstring = (if v_686 then catch-fail((if v_687 then hmac(@6_tls_h,handshake_secret_15,x_214) else fail-any)) else caught-fail) in
                                                    {3264}let v_688: bool = not-caught-fail(client_hts_15) in
                                                    {3266}let h_180: bitstring = (if v_688 then catch-fail(hash(@6_tls_h,cur_log2_32)) else caught-fail) in
                                                    {3267}let v_689: bool = not-caught-fail(h_180) in
                                                    {3265}let l_190: label = (if v_688 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {3268}let x_215: bitstring = (if v_689 then (l_190,h_180) else caught-fail) in
                                                    {3269}let server_hts_15: bitstring = (if v_688 then catch-fail((if v_689 then hmac(@6_tls_h,handshake_secret_15,x_215) else fail-any)) else caught-fail) in
                                                    {3270}let v_690: bool = not-caught-fail(server_hts_15) in
                                                    {3272}let h_181: bitstring = (if v_690 then zero else caught-fail) in
                                                    {3271}let l_191: label = (if v_690 then tls13_key else caught-fail) in
                                                    {3273}let x_216: bitstring = (if v_690 then (l_191,h_181) else caught-fail) in
                                                    {3274}let client_wkh_15: bitstring = (if v_690 then catch-fail(hmac(@6_tls_h,client_hts_15,x_216)) else caught-fail) in
                                                    {3275}let v_691: bool = not-caught-fail(client_wkh_15) in
                                                    {3277}let h_182: bitstring = (if v_691 then zero else caught-fail) in
                                                    {3276}let l_192: label = (if v_691 then tls13_key else caught-fail) in
                                                    {3278}let x_217: bitstring = (if v_691 then (l_192,h_182) else caught-fail) in
                                                    {3279}let server_wkh_15: bitstring = (if v_691 then catch-fail(hmac(@6_tls_h,server_hts_15,x_217)) else caught-fail) in
                                                    {3280}let v_692: bool = not-caught-fail(server_wkh_15) in
                                                    {3282}let h_183: bitstring = (if v_692 then zero else caught-fail) in
                                                    {3281}let l_193: label = (if v_692 then tls13_finished else caught-fail) in
                                                    {3283}let x_218: bitstring = (if v_692 then (l_193,h_183) else caught-fail) in
                                                    {3284}let client_fk_15: bitstring = (if v_692 then catch-fail(hmac(@6_tls_h,client_hts_15,x_218)) else caught-fail) in
                                                    {3285}let v_693: bool = not-caught-fail(client_fk_15) in
                                                    {3287}let h_184: bitstring = (if v_693 then zero else caught-fail) in
                                                    {3286}let l_194: label = (if v_693 then tls13_finished else caught-fail) in
                                                    {3288}let x_219: bitstring = (if v_693 then (l_194,h_184) else caught-fail) in
                                                    {3289}let server_fk_15: bitstring = (if v_693 then catch-fail(hmac(@6_tls_h,server_hts_15,x_219)) else caught-fail) in
                                                    {3290}let v_694: bool = not-caught-fail(server_fk_15) in
                                                    {3291}let (master_secret_38: bitstring,chk_22: aead_key,shk_21: aead_key,cfin_22: mac_key,sfin_21: mac_key) = (if v_685 then (if v_686 then (if v_688 then (if v_690 then (if v_691 then (if v_692 then (if v_693 then (if v_694 then (master_secret_37,client_wkh_15,server_wkh_15,client_fk_15,server_fk_15) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {3292}event Client_chk(@6_id_client,chk_22);
                                                    {3293}event Client_shk(@6_id_client,shk_21);
                                                    {3294}event Client_cfin(@6_id_client,cfin_22);
                                                    {3295}event Client_sfin(@6_id_client,sfin_21);
                                                    {3296}in(io, enc_ee_msg_14: bitstring);
                                                    {3297}let ee_msg_15: msg = aead_dec(@6_tls_a,shk_21,0,zero,enc_ee_msg_14) in
                                                    {3298}let EE(ech_ee_14: echExt,extra_ee_14: extraExt) = ee_msg_15 in
                                                    {3299}let cur_log2_33: bitstring = (cur_log2_32,ee_msg_15) in
                                                    {3300}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_6,sr_22,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_77,safe_psk_17,@6_comp_psk,master_secret_38,chk_22,0,shk_21,1,cfin_22,sfin_21,cur_log2_33)))
                                                )
                                                else
                                                    {3301}out(io, illegal_parameter)
                                            )
                                            else
                                                {3302}out(io, illegal_parameter)
                                    )
                                    else
                                        {3303}out(io, unexpected_message)
                            )
                            else
                                {3304}let psk_78: preSharedKey = NoPsk in
                                {3306}let k_72: bitstring = catch-fail(psk2b(psk_78)) in
                                {3307}let v_695: bool = not-caught-fail(k_72) in
                                {3305}let s_74: bitstring = zero in
                                {3308}let early_secret_51: bitstring = catch-fail((if v_695 then hmac(@6_tls_h,s_74,k_72) else fail-any)) in
                                {3309}let v_696: bool = not-caught-fail(early_secret_51) in
                                {3311}let m_66: bitstring = (if v_696 then zero else caught-fail) in
                                {3312}let h_185: bitstring = (if v_696 then catch-fail(hash(@6_tls_h,m_66)) else caught-fail) in
                                {3313}let v_697: bool = not-caught-fail(h_185) in
                                {3310}let l_195: label = (if v_696 then tls13_ext_res_binder else caught-fail) in
                                {3314}let x_220: bitstring = (if v_697 then (l_195,h_185) else caught-fail) in
                                {3315}let binder_key_34: bitstring = (if v_696 then catch-fail((if v_697 then hmac(@6_tls_h,early_secret_51,x_220) else fail-any)) else caught-fail) in
                                {3316}let v_698: bool = not-caught-fail(binder_key_34) in
                                {3317}let v_699: bitstring = catch-fail((if v_696 then (if v_698 then (early_secret_51,binder_key_34) else fail-any) else fail-any)) in
                                {3318}let v_700: bool = (not-caught-fail(v_699) && success?(1-proj-2-tuple(v_699))) in
                                {3319}let kb_34: mac_key = (if v_700 then 2-proj-2-tuple(v_699) else caught-fail) in
                                {3320}let es_49: bitstring = (if v_700 then 1-proj-2-tuple(v_699) else caught-fail) in
                                {3321}let v_701: preSharedKeyExt = (if v_700 then catch-fail(o_psk_ext_6) else caught-fail) in
                                {3322}let v_702: bool = (not-caught-fail(v_701) && success?(1-proj-client_psk_ext(v_701))) in
                                {3323}let fake_binder_9: bitstring = (if v_702 then 2-proj-client_psk_ext(v_701) else caught-fail) in
                                {3324}let fake_id_9: identityPsk = (if v_702 then 1-proj-client_psk_ext(v_701) else caught-fail) in
                                {3325}new fake_binder'_1[]: bitstring;
                                {3326}let v_703: bitstring = catch-fail((if v_700 then (if v_702 then (client_psk_ext(fake_id_9,fake_binder'_1),(NoPsk,zero,es_49,false)) else (empty_psk_ext,(NoPsk,zero,es_49,false))) else fail-any)) in
                                {3327}let v_704: bool = (not-caught-fail(v_703) && success?(1-proj-2-tuple(v_703))) in
                                {3328}let psk_data_17: bitstring = (if v_704 then 2-proj-2-tuple(v_703) else caught-fail) in
                                {3329}let psk_ext_32: preSharedKeyExt = (if v_704 then 1-proj-2-tuple(v_703) else caught-fail) in
                                {3330}let o_offer_17: params = (if v_704 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_4,SNI(o_dom_5),o_ech_ext_6,empty_extra_ext,psk_ext_32) else caught-fail) in
                                {3331}let (client_hello'_7: msg,cr'_7: bytes32,kex_data'_7: bitstring,psk_data'_14: bitstring) = (if v_704 then (CH(o_cr_6,o_offer_17),o_cr_6,kex_data_1,psk_data_17) else fail-any) in
                                {3332}out(io, client_hello'_7);
                                {3334}in(io, server_hello'_13: msg);
                                {3335}let SH(sr'_7: bytes32,mode'_7: params) = server_hello'_13 in
                                (
                                    {3336}if (sr'_7 = B32(HRR24,HRR8)) then
                                        {3337}out(io, unexpected_message)
                                    else
                                        {3338}let (x_221: bitstring,g_18: group) = kex_data'_7 in
                                        {3339}let (psk_offer_15: preSharedKey,id_offer_15: identityPsk,es_offer_15: bitstring,is_safe_offer_15: bool) = psk_data'_14 in
                                        {3340}event Client_PSKOffer(@6_id_client,psk_offer_15,id_offer_15,is_safe_offer_15);
                                        {3341}event Client_Rand_client(@6_id_client,cr'_7);
                                        {3342}event Client_DH_client(@6_id_client,dh_pub(g_18,x_221));
                                        {3343}event Client_server_domain(@6_id_client,o_dom);
                                        {3344}let SH(sr_23: bytes32,mode_17: params) = server_hello'_13 in
                                        {3345}event Client_Rand_server(@6_id_client,sr_23);
                                        {3346}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_18,gy_16: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_33: preSharedKeyExt) = mode_17 in
                                        (
                                            {3348}event Client_DH_server(@6_id_client,gy_16);
                                            {3349}let v_705: bool = (psk_ext_33 = empty_psk_ext) in
                                            {3350}let psk_79: preSharedKey = (if v_705 then NoPsk else caught-fail) in
                                            {3352}let k_73: bitstring = (if v_705 then catch-fail(psk2b(psk_79)) else caught-fail) in
                                            {3353}let v_706: bool = not-caught-fail(k_73) in
                                            {3351}let s_75: bitstring = (if v_705 then zero else caught-fail) in
                                            {3354}let early_secret_52: bitstring = (if v_705 then catch-fail((if v_706 then hmac(@6_tls_h,s_75,k_73) else fail-any)) else caught-fail) in
                                            {3355}let v_707: bool = not-caught-fail(early_secret_52) in
                                            {3357}let m_67: bitstring = (if v_707 then zero else caught-fail) in
                                            {3358}let h_186: bitstring = (if v_707 then catch-fail(hash(@6_tls_h,m_67)) else caught-fail) in
                                            {3359}let v_708: bool = not-caught-fail(h_186) in
                                            {3356}let l_196: label = (if v_707 then tls13_ext_res_binder else caught-fail) in
                                            {3360}let x_222: bitstring = (if v_708 then (l_196,h_186) else caught-fail) in
                                            {3361}let binder_key_35: bitstring = (if v_707 then catch-fail((if v_708 then hmac(@6_tls_h,early_secret_52,x_222) else fail-any)) else caught-fail) in
                                            {3362}let v_709: bool = not-caught-fail(binder_key_35) in
                                            {3363}let v_710: bitstring = (if v_705 then catch-fail((if v_707 then (if v_709 then (early_secret_52,binder_key_35) else fail-any) else fail-any)) else caught-fail) in
                                            {3364}let v_711: bool = (not-caught-fail(v_710) && success?(1-proj-2-tuple(v_710))) in
                                            {3365}let kb_35: mac_key = (if v_711 then 2-proj-2-tuple(v_710) else caught-fail) in
                                            {3366}let es_50: bitstring = (if v_711 then 1-proj-2-tuple(v_710) else caught-fail) in
                                            {3367}let v_712: bitstring = (if not(v_705) then catch-fail(psk_data'_14) else caught-fail) in
                                            {3368}let v_713: bool = (not-caught-fail(v_712) && success?(1-proj-4-tuple(v_712))) in
                                            {3369}let is_safe_30: bool = (if v_713 then 4-proj-4-tuple(v_712) else caught-fail) in
                                            {3370}let es_51: bitstring = (if v_713 then 3-proj-4-tuple(v_712) else caught-fail) in
                                            {3371}let id_37: identityPsk = (if v_713 then 2-proj-4-tuple(v_712) else caught-fail) in
                                            {3372}let psk_80: preSharedKey = (if v_713 then 1-proj-4-tuple(v_712) else caught-fail) in
                                            {3373}let (psk_81: preSharedKey,early_secret_53: bitstring,valid_15: bool,safe_psk_18: bool) = (if v_705 then (if v_711 then (NoPsk,es_50,true,false) else fail-any) else (if v_713 then (psk_80,es_51,((psk_80 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_33)),is_safe_30) else fail-any)) in
                                            {3374}event Client_PSKChoosen(@6_id_client,psk_81,safe_psk_18);
                                            {3375}if valid_15 then
                                            (
                                                {3378}new s_76[]: seed;
                                                {3376}let gxy_31: element = catch-fail(dh_decap_fun(g_18,gy_16,x_221)) in
                                                {3377}let v_714: bool = not-caught-fail(gxy_31) in
                                                {3379}let gxy_32: element = (if v_714 then gxy_31 else dh_f(s_76)) in
                                                {3380}event Client_DH_gxy(@6_id_client,gxy_32);
                                                {3382}let m_68: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                {3383}let v_715: bool = not-caught-fail(m_68) in
                                                {3384}let h_187: bitstring = (if v_715 then catch-fail(hash(@6_tls_h,m_68)) else caught-fail) in
                                                {3385}let v_716: bool = not-caught-fail(h_187) in
                                                {3381}let l_197: label = tls13_derived in
                                                {3386}let x_223: bitstring = (if v_716 then (l_197,h_187) else caught-fail) in
                                                {3387}let extra_34: bitstring = catch-fail((if v_715 then (if v_716 then hmac(@6_tls_h,early_secret_53,x_223) else fail-any) else fail-any)) in
                                                {3388}let v_717: bool = not-caught-fail(extra_34) in
                                                {3389}let handshake_secret_16: bitstring = (if v_717 then hmac(@6_tls_h,extra_34,gxy_32) else fail-any) in
                                                {3391}let m_69: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                {3392}let v_718: bool = not-caught-fail(m_69) in
                                                {3393}let h_188: bitstring = (if v_718 then catch-fail(hash(@6_tls_h,m_69)) else caught-fail) in
                                                {3394}let v_719: bool = not-caught-fail(h_188) in
                                                {3390}let l_198: label = tls13_derived in
                                                {3395}let x_224: bitstring = (if v_719 then (l_198,h_188) else caught-fail) in
                                                {3396}let extra_35: bitstring = catch-fail((if v_718 then (if v_719 then hmac(@6_tls_h,handshake_secret_16,x_224) else fail-any) else fail-any)) in
                                                {3397}let v_720: bool = not-caught-fail(extra_35) in
                                                {3398}let k_74: bitstring = (if v_720 then zero else caught-fail) in
                                                {3399}let master_secret_39: bitstring = (if v_720 then catch-fail(hmac(@6_tls_h,handshake_secret_16,k_74)) else caught-fail) in
                                                {3400}let v_721: bool = not-caught-fail(master_secret_39) in
                                                {3333}let cur_log_OU1_HRR_OU2_7: bitstring = (cur_log_OU1_HRR_1,client_hello'_7) in
                                                {3347}let cur_log2_34: bitstring = (cur_log_OU1_HRR_OU2_7,server_hello'_13) in
                                                {3402}let h_189: bitstring = (if v_721 then catch-fail(hash(@6_tls_h,cur_log2_34)) else caught-fail) in
                                                {3403}let v_722: bool = not-caught-fail(h_189) in
                                                {3401}let l_199: label = (if v_721 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {3404}let x_225: bitstring = (if v_722 then (l_199,h_189) else caught-fail) in
                                                {3405}let client_hts_16: bitstring = (if v_721 then catch-fail((if v_722 then hmac(@6_tls_h,handshake_secret_16,x_225) else fail-any)) else caught-fail) in
                                                {3406}let v_723: bool = not-caught-fail(client_hts_16) in
                                                {3408}let h_190: bitstring = (if v_723 then catch-fail(hash(@6_tls_h,cur_log2_34)) else caught-fail) in
                                                {3409}let v_724: bool = not-caught-fail(h_190) in
                                                {3407}let l_200: label = (if v_723 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {3410}let x_226: bitstring = (if v_724 then (l_200,h_190) else caught-fail) in
                                                {3411}let server_hts_16: bitstring = (if v_723 then catch-fail((if v_724 then hmac(@6_tls_h,handshake_secret_16,x_226) else fail-any)) else caught-fail) in
                                                {3412}let v_725: bool = not-caught-fail(server_hts_16) in
                                                {3414}let h_191: bitstring = (if v_725 then zero else caught-fail) in
                                                {3413}let l_201: label = (if v_725 then tls13_key else caught-fail) in
                                                {3415}let x_227: bitstring = (if v_725 then (l_201,h_191) else caught-fail) in
                                                {3416}let client_wkh_16: bitstring = (if v_725 then catch-fail(hmac(@6_tls_h,client_hts_16,x_227)) else caught-fail) in
                                                {3417}let v_726: bool = not-caught-fail(client_wkh_16) in
                                                {3419}let h_192: bitstring = (if v_726 then zero else caught-fail) in
                                                {3418}let l_202: label = (if v_726 then tls13_key else caught-fail) in
                                                {3420}let x_228: bitstring = (if v_726 then (l_202,h_192) else caught-fail) in
                                                {3421}let server_wkh_16: bitstring = (if v_726 then catch-fail(hmac(@6_tls_h,server_hts_16,x_228)) else caught-fail) in
                                                {3422}let v_727: bool = not-caught-fail(server_wkh_16) in
                                                {3424}let h_193: bitstring = (if v_727 then zero else caught-fail) in
                                                {3423}let l_203: label = (if v_727 then tls13_finished else caught-fail) in
                                                {3425}let x_229: bitstring = (if v_727 then (l_203,h_193) else caught-fail) in
                                                {3426}let client_fk_16: bitstring = (if v_727 then catch-fail(hmac(@6_tls_h,client_hts_16,x_229)) else caught-fail) in
                                                {3427}let v_728: bool = not-caught-fail(client_fk_16) in
                                                {3429}let h_194: bitstring = (if v_728 then zero else caught-fail) in
                                                {3428}let l_204: label = (if v_728 then tls13_finished else caught-fail) in
                                                {3430}let x_230: bitstring = (if v_728 then (l_204,h_194) else caught-fail) in
                                                {3431}let server_fk_16: bitstring = (if v_728 then catch-fail(hmac(@6_tls_h,server_hts_16,x_230)) else caught-fail) in
                                                {3432}let v_729: bool = not-caught-fail(server_fk_16) in
                                                {3433}let (master_secret_40: bitstring,chk_23: aead_key,shk_22: aead_key,cfin_23: mac_key,sfin_22: mac_key) = (if v_720 then (if v_721 then (if v_723 then (if v_725 then (if v_726 then (if v_727 then (if v_728 then (if v_729 then (master_secret_39,client_wkh_16,server_wkh_16,client_fk_16,server_fk_16) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {3434}event Client_chk(@6_id_client,chk_23);
                                                {3435}event Client_shk(@6_id_client,shk_22);
                                                {3436}event Client_cfin(@6_id_client,cfin_23);
                                                {3437}event Client_sfin(@6_id_client,sfin_22);
                                                {3438}in(io, enc_ee_msg_15: bitstring);
                                                {3439}let ee_msg_16: msg = aead_dec(@6_tls_a,shk_22,0,zero,enc_ee_msg_15) in
                                                {3440}let EE(ech_ee_15: echExt,extra_ee_15: extraExt) = ee_msg_16 in
                                                {3441}let cur_log2_35: bitstring = (cur_log2_34,ee_msg_16) in
                                                {3442}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_7,sr_23,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_81,safe_psk_18,@6_comp_psk,master_secret_40,chk_23,0,shk_22,1,cfin_23,sfin_22,cur_log2_35)))
                                            )
                                            else
                                                {3443}out(io, illegal_parameter)
                                        )
                                        else
                                            {3444}out(io, illegal_parameter)
                                )
                                else
                                    {3445}out(io, unexpected_message)
                    )
                    else
                        {3447}let sh_modified_8: msg = SH(B32(sr24_3,zero8),mode_10) in
                        {3446}let cur_log_14: bitstring = (zero,i_client_hello_6) in
                        {3448}let cur_log_sh_8: bitstring = (cur_log_14,sh_modified_8) in
                        {3449}let transcript_ech_conf_8: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_8)) in
                        {3450}let v_730: bool = not-caught-fail(transcript_ech_conf_8) in
                        {3452}let k_75: bitstring = (if v_730 then catch-fail(b32_2_b(get_random(i_client_hello_6))) else caught-fail) in
                        {3453}let v_731: bool = not-caught-fail(k_75) in
                        {3451}let s_77: bitstring = (if v_730 then zero else caught-fail) in
                        {3454}let k_76: bitstring = (if v_730 then catch-fail((if v_731 then hmac(@6_backend_h,s_77,k_75) else fail-any)) else caught-fail) in
                        {3455}let v_732: bool = not-caught-fail(k_76) in
                        {3456}let l_205: label = (if v_732 then ech_accept_confirmation else caught-fail) in
                        {3457}let x_231: bitstring = (if v_732 then (l_205,cur_log_sh_8) else caught-fail) in
                        {3458}let sr8_10: bytes8 = (if v_730 then catch-fail(crop_into_bytes8((if v_732 then hmac(@6_backend_h,k_76,x_231) else fail-any))) else caught-fail) in
                        {3459}let v_733: bool = not-caught-fail(sr8_10) in
                        {3460}if (B32(sr24_3,sr8_6) = (if v_730 then (if v_733 then B32(sr24_3,sr8_10) else fail-any) else fail-any)) then
                        (
                            {3461}event ClientEchAcceptance(@6_id_client,true);
                            {3463}let (x_232: bitstring,g_19: group) = i_kex_data_3 in
                            {3464}let (psk_offer_16: preSharedKey,id_offer_16: identityPsk,es_offer_16: bitstring,is_safe_offer_16: bool) = psk_data_10 in
                            {3465}event Client_PSKOffer(@6_id_client,psk_offer_16,id_offer_16,is_safe_offer_16);
                            {3466}event Client_Rand_client(@6_id_client,i_cr_3);
                            {3467}event Client_DH_client(@6_id_client,dh_pub(g_19,x_232));
                            {3468}event Client_server_domain(@6_id_client,backend_dom);
                            {3469}let SH(sr_24: bytes32,mode_18: params) = server_hello_2 in
                            {3470}event Client_Rand_server(@6_id_client,sr_24);
                            {3471}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_19,gy_17: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_34: preSharedKeyExt) = mode_18 in
                            (
                                {3473}event Client_DH_server(@6_id_client,gy_17);
                                {3474}let v_734: bool = (psk_ext_34 = empty_psk_ext) in
                                {3475}let psk_82: preSharedKey = (if v_734 then NoPsk else caught-fail) in
                                {3477}let k_77: bitstring = (if v_734 then catch-fail(psk2b(psk_82)) else caught-fail) in
                                {3478}let v_735: bool = not-caught-fail(k_77) in
                                {3476}let s_78: bitstring = (if v_734 then zero else caught-fail) in
                                {3479}let early_secret_54: bitstring = (if v_734 then catch-fail((if v_735 then hmac(@6_backend_h,s_78,k_77) else fail-any)) else caught-fail) in
                                {3480}let v_736: bool = not-caught-fail(early_secret_54) in
                                {3482}let m_70: bitstring = (if v_736 then zero else caught-fail) in
                                {3483}let h_195: bitstring = (if v_736 then catch-fail(hash(@6_backend_h,m_70)) else caught-fail) in
                                {3484}let v_737: bool = not-caught-fail(h_195) in
                                {3481}let l_206: label = (if v_736 then tls13_ext_res_binder else caught-fail) in
                                {3485}let x_233: bitstring = (if v_737 then (l_206,h_195) else caught-fail) in
                                {3486}let binder_key_36: bitstring = (if v_736 then catch-fail((if v_737 then hmac(@6_backend_h,early_secret_54,x_233) else fail-any)) else caught-fail) in
                                {3487}let v_738: bool = not-caught-fail(binder_key_36) in
                                {3488}let v_739: bitstring = (if v_734 then catch-fail((if v_736 then (if v_738 then (early_secret_54,binder_key_36) else fail-any) else fail-any)) else caught-fail) in
                                {3489}let v_740: bool = (not-caught-fail(v_739) && success?(1-proj-2-tuple(v_739))) in
                                {3490}let kb_36: mac_key = (if v_740 then 2-proj-2-tuple(v_739) else caught-fail) in
                                {3491}let es_52: bitstring = (if v_740 then 1-proj-2-tuple(v_739) else caught-fail) in
                                {3492}let v_741: bitstring = (if not(v_734) then catch-fail(psk_data_10) else caught-fail) in
                                {3493}let v_742: bool = (not-caught-fail(v_741) && success?(1-proj-4-tuple(v_741))) in
                                {3494}let is_safe_31: bool = (if v_742 then 4-proj-4-tuple(v_741) else caught-fail) in
                                {3495}let es_53: bitstring = (if v_742 then 3-proj-4-tuple(v_741) else caught-fail) in
                                {3496}let id_38: identityPsk = (if v_742 then 2-proj-4-tuple(v_741) else caught-fail) in
                                {3497}let psk_83: preSharedKey = (if v_742 then 1-proj-4-tuple(v_741) else caught-fail) in
                                {3498}let (psk_84: preSharedKey,early_secret_55: bitstring,valid_16: bool,safe_psk_19: bool) = (if v_734 then (if v_740 then (NoPsk,es_52,true,false) else fail-any) else (if v_742 then (psk_83,es_53,((psk_83 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_34)),is_safe_31) else fail-any)) in
                                {3499}event Client_PSKChoosen(@6_id_client,psk_84,safe_psk_19);
                                {3500}if valid_16 then
                                (
                                    {3503}new s_79[]: seed;
                                    {3501}let gxy_33: element = catch-fail(dh_decap_fun(g_19,gy_17,x_232)) in
                                    {3502}let v_743: bool = not-caught-fail(gxy_33) in
                                    {3504}let gxy_34: element = (if v_743 then gxy_33 else dh_f(s_79)) in
                                    {3505}event Client_DH_gxy(@6_id_client,gxy_34);
                                    {3507}let m_71: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                    {3508}let v_744: bool = not-caught-fail(m_71) in
                                    {3509}let h_196: bitstring = (if v_744 then catch-fail(hash(@6_backend_h,m_71)) else caught-fail) in
                                    {3510}let v_745: bool = not-caught-fail(h_196) in
                                    {3506}let l_207: label = tls13_derived in
                                    {3511}let x_234: bitstring = (if v_745 then (l_207,h_196) else caught-fail) in
                                    {3512}let extra_36: bitstring = catch-fail((if v_744 then (if v_745 then hmac(@6_backend_h,early_secret_55,x_234) else fail-any) else fail-any)) in
                                    {3513}let v_746: bool = not-caught-fail(extra_36) in
                                    {3514}let handshake_secret_17: bitstring = (if v_746 then hmac(@6_backend_h,extra_36,gxy_34) else fail-any) in
                                    {3516}let m_72: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                    {3517}let v_747: bool = not-caught-fail(m_72) in
                                    {3518}let h_197: bitstring = (if v_747 then catch-fail(hash(@6_backend_h,m_72)) else caught-fail) in
                                    {3519}let v_748: bool = not-caught-fail(h_197) in
                                    {3515}let l_208: label = tls13_derived in
                                    {3520}let x_235: bitstring = (if v_748 then (l_208,h_197) else caught-fail) in
                                    {3521}let extra_37: bitstring = catch-fail((if v_747 then (if v_748 then hmac(@6_backend_h,handshake_secret_17,x_235) else fail-any) else fail-any)) in
                                    {3522}let v_749: bool = not-caught-fail(extra_37) in
                                    {3523}let k_78: bitstring = (if v_749 then zero else caught-fail) in
                                    {3524}let master_secret_41: bitstring = (if v_749 then catch-fail(hmac(@6_backend_h,handshake_secret_17,k_78)) else caught-fail) in
                                    {3525}let v_750: bool = not-caught-fail(master_secret_41) in
                                    {3462}let cur_log_15: bitstring = (zero,i_client_hello_6) in
                                    {3472}let cur_log2_36: bitstring = (cur_log_15,server_hello_2) in
                                    {3527}let h_198: bitstring = (if v_750 then catch-fail(hash(@6_backend_h,cur_log2_36)) else caught-fail) in
                                    {3528}let v_751: bool = not-caught-fail(h_198) in
                                    {3526}let l_209: label = (if v_750 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {3529}let x_236: bitstring = (if v_751 then (l_209,h_198) else caught-fail) in
                                    {3530}let client_hts_17: bitstring = (if v_750 then catch-fail((if v_751 then hmac(@6_backend_h,handshake_secret_17,x_236) else fail-any)) else caught-fail) in
                                    {3531}let v_752: bool = not-caught-fail(client_hts_17) in
                                    {3533}let h_199: bitstring = (if v_752 then catch-fail(hash(@6_backend_h,cur_log2_36)) else caught-fail) in
                                    {3534}let v_753: bool = not-caught-fail(h_199) in
                                    {3532}let l_210: label = (if v_752 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {3535}let x_237: bitstring = (if v_753 then (l_210,h_199) else caught-fail) in
                                    {3536}let server_hts_17: bitstring = (if v_752 then catch-fail((if v_753 then hmac(@6_backend_h,handshake_secret_17,x_237) else fail-any)) else caught-fail) in
                                    {3537}let v_754: bool = not-caught-fail(server_hts_17) in
                                    {3539}let h_200: bitstring = (if v_754 then zero else caught-fail) in
                                    {3538}let l_211: label = (if v_754 then tls13_key else caught-fail) in
                                    {3540}let x_238: bitstring = (if v_754 then (l_211,h_200) else caught-fail) in
                                    {3541}let client_wkh_17: bitstring = (if v_754 then catch-fail(hmac(@6_backend_h,client_hts_17,x_238)) else caught-fail) in
                                    {3542}let v_755: bool = not-caught-fail(client_wkh_17) in
                                    {3544}let h_201: bitstring = (if v_755 then zero else caught-fail) in
                                    {3543}let l_212: label = (if v_755 then tls13_key else caught-fail) in
                                    {3545}let x_239: bitstring = (if v_755 then (l_212,h_201) else caught-fail) in
                                    {3546}let server_wkh_17: bitstring = (if v_755 then catch-fail(hmac(@6_backend_h,server_hts_17,x_239)) else caught-fail) in
                                    {3547}let v_756: bool = not-caught-fail(server_wkh_17) in
                                    {3549}let h_202: bitstring = (if v_756 then zero else caught-fail) in
                                    {3548}let l_213: label = (if v_756 then tls13_finished else caught-fail) in
                                    {3550}let x_240: bitstring = (if v_756 then (l_213,h_202) else caught-fail) in
                                    {3551}let client_fk_17: bitstring = (if v_756 then catch-fail(hmac(@6_backend_h,client_hts_17,x_240)) else caught-fail) in
                                    {3552}let v_757: bool = not-caught-fail(client_fk_17) in
                                    {3554}let h_203: bitstring = (if v_757 then zero else caught-fail) in
                                    {3553}let l_214: label = (if v_757 then tls13_finished else caught-fail) in
                                    {3555}let x_241: bitstring = (if v_757 then (l_214,h_203) else caught-fail) in
                                    {3556}let server_fk_17: bitstring = (if v_757 then catch-fail(hmac(@6_backend_h,server_hts_17,x_241)) else caught-fail) in
                                    {3557}let v_758: bool = not-caught-fail(server_fk_17) in
                                    {3558}let (master_secret_42: bitstring,chk_24: aead_key,shk_23: aead_key,cfin_24: mac_key,sfin_23: mac_key) = (if v_749 then (if v_750 then (if v_752 then (if v_754 then (if v_755 then (if v_756 then (if v_757 then (if v_758 then (master_secret_41,client_wkh_17,server_wkh_17,client_fk_17,server_fk_17) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {3559}event Client_chk(@6_id_client,chk_24);
                                    {3560}event Client_shk(@6_id_client,shk_23);
                                    {3561}event Client_cfin(@6_id_client,cfin_24);
                                    {3562}event Client_sfin(@6_id_client,sfin_23);
                                    {3563}in(io, enc_ee_msg_16: bitstring);
                                    {3564}let ee_msg_17: msg = aead_dec(@6_backend_a,shk_23,0,zero,enc_ee_msg_16) in
                                    {3565}let EE(ech_ee_16: echExt,extra_ee_16: extraExt) = ee_msg_17 in
                                    {3566}let cur_log2_37: bitstring = (cur_log2_36,ee_msg_17) in
                                    {3567}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr_3,sr_24,@6_backend_h,@6_backend_a,c_dom_5,backend_dom,psk_84,safe_psk_19,@6_comp_psk,master_secret_42,chk_24,0,shk_23,1,cfin_24,sfin_23,cur_log2_37)))
                                )
                                else
                                    {3568}out(io, illegal_parameter)
                            )
                            else
                                {3569}out(io, illegal_parameter)
                        )
                        else
                            {3570}event ClientEchAcceptance(@6_id_client,false);
                            {3571}let v_759: bool = @6_use_grease in
                            {3572}let psk_85: preSharedKey = (if not(v_759) then NoPsk else caught-fail) in
                            {3574}let k_79: bitstring = (if not(v_759) then catch-fail(psk2b(psk_85)) else caught-fail) in
                            {3575}let v_760: bool = not-caught-fail(k_79) in
                            {3573}let s_80: bitstring = (if not(v_759) then zero else caught-fail) in
                            {3576}let early_secret_56: bitstring = (if not(v_759) then catch-fail((if v_760 then hmac(@6_tls_h,s_80,k_79) else fail-any)) else caught-fail) in
                            {3577}let v_761: bool = not-caught-fail(early_secret_56) in
                            {3579}let m_73: bitstring = (if v_761 then zero else caught-fail) in
                            {3580}let h_204: bitstring = (if v_761 then catch-fail(hash(@6_tls_h,m_73)) else caught-fail) in
                            {3581}let v_762: bool = not-caught-fail(h_204) in
                            {3578}let l_215: label = (if v_761 then tls13_ext_res_binder else caught-fail) in
                            {3582}let x_242: bitstring = (if v_762 then (l_215,h_204) else caught-fail) in
                            {3583}let binder_key_37: bitstring = (if v_761 then catch-fail((if v_762 then hmac(@6_tls_h,early_secret_56,x_242) else fail-any)) else caught-fail) in
                            {3584}let v_763: bool = not-caught-fail(binder_key_37) in
                            {3585}let v_764: bitstring = (if not(v_759) then catch-fail((if v_761 then (if v_763 then (early_secret_56,binder_key_37) else fail-any) else fail-any)) else caught-fail) in
                            {3586}let v_765: bool = (not-caught-fail(v_764) && success?(1-proj-2-tuple(v_764))) in
                            {3587}let kb_37: mac_key = (if v_765 then 2-proj-2-tuple(v_764) else caught-fail) in
                            {3588}let es'_1: bitstring = (if v_765 then 1-proj-2-tuple(v_764) else caught-fail) in
                            {3589}let psk_data'_15: bitstring = (if v_759 then psk_data_10 else (if v_765 then (NoPsk,zero,es'_1,false) else fail-any)) in
                            {3591}let (x_243: bitstring,g_20: group) = o_kex_data_3 in
                            {3592}let (psk_offer_17: preSharedKey,id_offer_17: identityPsk,es_offer_17: bitstring,is_safe_offer_17: bool) = psk_data'_15 in
                            {3593}event Client_PSKOffer(@6_id_client,psk_offer_17,id_offer_17,is_safe_offer_17);
                            {3594}event Client_Rand_client(@6_id_client,o_cr_4);
                            {3595}event Client_DH_client(@6_id_client,dh_pub(g_20,x_243));
                            {3596}event Client_server_domain(@6_id_client,o_dom);
                            {3597}let SH(sr_25: bytes32,mode_19: params) = server_hello_2 in
                            {3598}event Client_Rand_server(@6_id_client,sr_25);
                            {3599}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_20,gy_18: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_35: preSharedKeyExt) = mode_19 in
                            (
                                {3601}event Client_DH_server(@6_id_client,gy_18);
                                {3602}let v_766: bool = (psk_ext_35 = empty_psk_ext) in
                                {3603}let psk_86: preSharedKey = (if v_766 then NoPsk else caught-fail) in
                                {3605}let k_80: bitstring = (if v_766 then catch-fail(psk2b(psk_86)) else caught-fail) in
                                {3606}let v_767: bool = not-caught-fail(k_80) in
                                {3604}let s_81: bitstring = (if v_766 then zero else caught-fail) in
                                {3607}let early_secret_57: bitstring = (if v_766 then catch-fail((if v_767 then hmac(@6_tls_h,s_81,k_80) else fail-any)) else caught-fail) in
                                {3608}let v_768: bool = not-caught-fail(early_secret_57) in
                                {3610}let m_74: bitstring = (if v_768 then zero else caught-fail) in
                                {3611}let h_205: bitstring = (if v_768 then catch-fail(hash(@6_tls_h,m_74)) else caught-fail) in
                                {3612}let v_769: bool = not-caught-fail(h_205) in
                                {3609}let l_216: label = (if v_768 then tls13_ext_res_binder else caught-fail) in
                                {3613}let x_244: bitstring = (if v_769 then (l_216,h_205) else caught-fail) in
                                {3614}let binder_key_38: bitstring = (if v_768 then catch-fail((if v_769 then hmac(@6_tls_h,early_secret_57,x_244) else fail-any)) else caught-fail) in
                                {3615}let v_770: bool = not-caught-fail(binder_key_38) in
                                {3616}let v_771: bitstring = (if v_766 then catch-fail((if v_768 then (if v_770 then (early_secret_57,binder_key_38) else fail-any) else fail-any)) else caught-fail) in
                                {3617}let v_772: bool = (not-caught-fail(v_771) && success?(1-proj-2-tuple(v_771))) in
                                {3618}let kb_38: mac_key = (if v_772 then 2-proj-2-tuple(v_771) else caught-fail) in
                                {3619}let es_54: bitstring = (if v_772 then 1-proj-2-tuple(v_771) else caught-fail) in
                                {3620}let v_773: bitstring = (if not(v_766) then catch-fail(psk_data'_15) else caught-fail) in
                                {3621}let v_774: bool = (not-caught-fail(v_773) && success?(1-proj-4-tuple(v_773))) in
                                {3622}let is_safe_32: bool = (if v_774 then 4-proj-4-tuple(v_773) else caught-fail) in
                                {3623}let es_55: bitstring = (if v_774 then 3-proj-4-tuple(v_773) else caught-fail) in
                                {3624}let id_39: identityPsk = (if v_774 then 2-proj-4-tuple(v_773) else caught-fail) in
                                {3625}let psk_87: preSharedKey = (if v_774 then 1-proj-4-tuple(v_773) else caught-fail) in
                                {3626}let (psk_88: preSharedKey,early_secret_58: bitstring,valid_17: bool,safe_psk_20: bool) = (if v_766 then (if v_772 then (NoPsk,es_54,true,false) else fail-any) else (if v_774 then (psk_87,es_55,((psk_87 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_35)),is_safe_32) else fail-any)) in
                                {3627}event Client_PSKChoosen(@6_id_client,psk_88,safe_psk_20);
                                {3628}if valid_17 then
                                (
                                    {3631}new s_82[]: seed;
                                    {3629}let gxy_35: element = catch-fail(dh_decap_fun(g_20,gy_18,x_243)) in
                                    {3630}let v_775: bool = not-caught-fail(gxy_35) in
                                    {3632}let gxy_36: element = (if v_775 then gxy_35 else dh_f(s_82)) in
                                    {3633}event Client_DH_gxy(@6_id_client,gxy_36);
                                    {3635}let m_75: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                    {3636}let v_776: bool = not-caught-fail(m_75) in
                                    {3637}let h_206: bitstring = (if v_776 then catch-fail(hash(@6_tls_h,m_75)) else caught-fail) in
                                    {3638}let v_777: bool = not-caught-fail(h_206) in
                                    {3634}let l_217: label = tls13_derived in
                                    {3639}let x_245: bitstring = (if v_777 then (l_217,h_206) else caught-fail) in
                                    {3640}let extra_38: bitstring = catch-fail((if v_776 then (if v_777 then hmac(@6_tls_h,early_secret_58,x_245) else fail-any) else fail-any)) in
                                    {3641}let v_778: bool = not-caught-fail(extra_38) in
                                    {3642}let handshake_secret_18: bitstring = (if v_778 then hmac(@6_tls_h,extra_38,gxy_36) else fail-any) in
                                    {3644}let m_76: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                    {3645}let v_779: bool = not-caught-fail(m_76) in
                                    {3646}let h_207: bitstring = (if v_779 then catch-fail(hash(@6_tls_h,m_76)) else caught-fail) in
                                    {3647}let v_780: bool = not-caught-fail(h_207) in
                                    {3643}let l_218: label = tls13_derived in
                                    {3648}let x_246: bitstring = (if v_780 then (l_218,h_207) else caught-fail) in
                                    {3649}let extra_39: bitstring = catch-fail((if v_779 then (if v_780 then hmac(@6_tls_h,handshake_secret_18,x_246) else fail-any) else fail-any)) in
                                    {3650}let v_781: bool = not-caught-fail(extra_39) in
                                    {3651}let k_81: bitstring = (if v_781 then zero else caught-fail) in
                                    {3652}let master_secret_43: bitstring = (if v_781 then catch-fail(hmac(@6_tls_h,handshake_secret_18,k_81)) else caught-fail) in
                                    {3653}let v_782: bool = not-caught-fail(master_secret_43) in
                                    {3590}let cur_log_16: bitstring = (zero,o_client_hello_1) in
                                    {3600}let cur_log2_38: bitstring = (cur_log_16,server_hello_2) in
                                    {3655}let h_208: bitstring = (if v_782 then catch-fail(hash(@6_tls_h,cur_log2_38)) else caught-fail) in
                                    {3656}let v_783: bool = not-caught-fail(h_208) in
                                    {3654}let l_219: label = (if v_782 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {3657}let x_247: bitstring = (if v_783 then (l_219,h_208) else caught-fail) in
                                    {3658}let client_hts_18: bitstring = (if v_782 then catch-fail((if v_783 then hmac(@6_tls_h,handshake_secret_18,x_247) else fail-any)) else caught-fail) in
                                    {3659}let v_784: bool = not-caught-fail(client_hts_18) in
                                    {3661}let h_209: bitstring = (if v_784 then catch-fail(hash(@6_tls_h,cur_log2_38)) else caught-fail) in
                                    {3662}let v_785: bool = not-caught-fail(h_209) in
                                    {3660}let l_220: label = (if v_784 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {3663}let x_248: bitstring = (if v_785 then (l_220,h_209) else caught-fail) in
                                    {3664}let server_hts_18: bitstring = (if v_784 then catch-fail((if v_785 then hmac(@6_tls_h,handshake_secret_18,x_248) else fail-any)) else caught-fail) in
                                    {3665}let v_786: bool = not-caught-fail(server_hts_18) in
                                    {3667}let h_210: bitstring = (if v_786 then zero else caught-fail) in
                                    {3666}let l_221: label = (if v_786 then tls13_key else caught-fail) in
                                    {3668}let x_249: bitstring = (if v_786 then (l_221,h_210) else caught-fail) in
                                    {3669}let client_wkh_18: bitstring = (if v_786 then catch-fail(hmac(@6_tls_h,client_hts_18,x_249)) else caught-fail) in
                                    {3670}let v_787: bool = not-caught-fail(client_wkh_18) in
                                    {3672}let h_211: bitstring = (if v_787 then zero else caught-fail) in
                                    {3671}let l_222: label = (if v_787 then tls13_key else caught-fail) in
                                    {3673}let x_250: bitstring = (if v_787 then (l_222,h_211) else caught-fail) in
                                    {3674}let server_wkh_18: bitstring = (if v_787 then catch-fail(hmac(@6_tls_h,server_hts_18,x_250)) else caught-fail) in
                                    {3675}let v_788: bool = not-caught-fail(server_wkh_18) in
                                    {3677}let h_212: bitstring = (if v_788 then zero else caught-fail) in
                                    {3676}let l_223: label = (if v_788 then tls13_finished else caught-fail) in
                                    {3678}let x_251: bitstring = (if v_788 then (l_223,h_212) else caught-fail) in
                                    {3679}let client_fk_18: bitstring = (if v_788 then catch-fail(hmac(@6_tls_h,client_hts_18,x_251)) else caught-fail) in
                                    {3680}let v_789: bool = not-caught-fail(client_fk_18) in
                                    {3682}let h_213: bitstring = (if v_789 then zero else caught-fail) in
                                    {3681}let l_224: label = (if v_789 then tls13_finished else caught-fail) in
                                    {3683}let x_252: bitstring = (if v_789 then (l_224,h_213) else caught-fail) in
                                    {3684}let server_fk_18: bitstring = (if v_789 then catch-fail(hmac(@6_tls_h,server_hts_18,x_252)) else caught-fail) in
                                    {3685}let v_790: bool = not-caught-fail(server_fk_18) in
                                    {3686}let (master_secret_44: bitstring,chk_25: aead_key,shk_24: aead_key,cfin_25: mac_key,sfin_24: mac_key) = (if v_781 then (if v_782 then (if v_784 then (if v_786 then (if v_787 then (if v_788 then (if v_789 then (if v_790 then (master_secret_43,client_wkh_18,server_wkh_18,client_fk_18,server_fk_18) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {3687}event Client_chk(@6_id_client,chk_25);
                                    {3688}event Client_shk(@6_id_client,shk_24);
                                    {3689}event Client_cfin(@6_id_client,cfin_25);
                                    {3690}event Client_sfin(@6_id_client,sfin_24);
                                    {3691}in(io, enc_ee_msg_17: bitstring);
                                    {3692}let ee_msg_18: msg = aead_dec(@6_tls_a,shk_24,0,zero,enc_ee_msg_17) in
                                    {3693}let EE(ech_ee_17: echExt,extra_ee_17: extraExt) = ee_msg_18 in
                                    {3694}let cur_log2_39: bitstring = (cur_log2_38,ee_msg_18) in
                                    {3695}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(o_cr_4,sr_25,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_88,safe_psk_20,@6_comp_psk,master_secret_44,chk_25,0,shk_24,1,cfin_25,sfin_24,cur_log2_39)))
                                )
                                else
                                    {3696}out(io, illegal_parameter)
                            )
                            else
                                {3697}out(io, illegal_parameter)
                )
                else
                    {3698}out(io, unexpected_message)
            )
    )
    else
        {3700}let psk_89: preSharedKey = NoPsk in
        {3702}let k_82: bitstring = catch-fail(psk2b(psk_89)) in
        {3703}let v_791: bool = not-caught-fail(k_82) in
        {3701}let s_83: bitstring = zero in
        {3704}let early_secret_59: bitstring = catch-fail((if v_791 then hmac(h_psk,s_83,k_82) else fail-any)) in
        {3705}let v_792: bool = not-caught-fail(early_secret_59) in
        {3707}let m_77: bitstring = (if v_792 then zero else caught-fail) in
        {3708}let h_214: bitstring = (if v_792 then catch-fail(hash(h_psk,m_77)) else caught-fail) in
        {3709}let v_793: bool = not-caught-fail(h_214) in
        {3706}let l_225: label = (if v_792 then tls13_ext_res_binder else caught-fail) in
        {3710}let x_253: bitstring = (if v_793 then (l_225,h_214) else caught-fail) in
        {3711}let binder_key_39: bitstring = (if v_792 then catch-fail((if v_793 then hmac(h_psk,early_secret_59,x_253) else fail-any)) else caught-fail) in
        {3712}let v_794: bool = not-caught-fail(binder_key_39) in
        {3713}let v_795: bitstring = catch-fail((if v_792 then (if v_794 then (early_secret_59,binder_key_39) else fail-any) else fail-any)) in
        {3714}let v_796: bool = (not-caught-fail(v_795) && success?(1-proj-2-tuple(v_795))) in
        {3715}let kb_39: mac_key = (if v_796 then 2-proj-2-tuple(v_795) else caught-fail) in
        {3716}let es_56: bitstring = (if v_796 then 1-proj-2-tuple(v_795) else caught-fail) in
        {3717}let v_797: bitstring = catch-fail((if v_796 then (empty_psk_ext,(NoPsk,zero,es_56,false)) else fail-any)) in
        {3718}let v_798: bool = (not-caught-fail(v_797) && success?(1-proj-2-tuple(v_797))) in
        {3719}let psk_data_18: bitstring = (if v_798 then 2-proj-2-tuple(v_797) else caught-fail) in
        {3720}let psk_ext_36: preSharedKeyExt = (if v_798 then 1-proj-2-tuple(v_797) else caught-fail) in
        {3725}new fake_id_10[]: identityPsk;
        {3726}new fake_binder_10[]: bitstring;
        {3723}let v_799: bool = (if v_798 then catch-fail(@6_use_grease) else caught-fail) in
        {3732}let v_800: hpkeContext = (if is-false(v_799) then catch-fail(context) else caught-fail) in
        {3733}let v_801: bool = (not-caught-fail(v_800) && ((S =nf 1-proj-hpke_context(v_800)) && success?(1-proj-hpke_context(v_800)))) in
        {3734}let base_nonce_9: bitstring = (if v_801 then 3-proj-hpke_context(v_800) else caught-fail) in
        {3735}let key_9: aead_key = (if v_801 then 2-proj-hpke_context(v_800) else caught-fail) in
        {3731}let n_8: nat = (if is-false(v_799) then 1 else caught-fail) in
        {3728}let o_ech_ext_ADD_8: echExt = (if is-false(v_799) then ECHClientHelloOuter(ech_h_3,ech_a_3,config_id_1,enc_1,zero) else caught-fail) in
        {3727}let o_psk_ext_10: preSharedKeyExt = (if is-false(v_799) then (if @6_use_psk then client_psk_ext(fake_id_10,fake_binder_10) else empty_psk_ext) else caught-fail) in
        {3729}let o_offer_ADD_8: params = (if is-false(v_799) then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),o_ech_ext_ADD_8,empty_extra_ext,o_psk_ext_10) else caught-fail) in
        {3730}let o_client_hello_ADD_8: msg = (if is-false(v_799) then CH(o_cr,o_offer_ADD_8) else caught-fail) in
        {3721}let i_offer_8: params = (if v_798 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_36) else caught-fail) in
        {3722}let i_client_hello_10: msg = (if v_798 then CH(i_cr,i_offer_8) else caught-fail) in
        {3736}let payload_9: bitstring = (if is-false(v_799) then catch-fail((if v_801 then aead_enc(ech_a_3,key_9,(base_nonce_9,n_8),o_client_hello_ADD_8,i_client_hello_10) else fail-any)) else caught-fail) in
        {3737}let v_802: bool = not-caught-fail(payload_9) in
        {3738}let o_ech_ext_10: echExt = (if v_802 then ECHClientHelloOuter(ech_h_3,ech_a_3,config_id_1,enc_1,payload_9) else caught-fail) in
        {3739}let o_offer_19: params = (if v_802 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),o_ech_ext_10,empty_extra_ext,o_psk_ext_10) else caught-fail) in
        {3724}let o_offer_18: params = (if v_799 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),ech_inner_or_grease,empty_extra_ext,psk_ext_36) else caught-fail) in
        {3740}let (o_client_hello_2: msg,i_client_hello_11: msg,o_cr_7: bytes32,i_cr_5: bytes32,o_kex_data_5: bitstring,i_kex_data_5: bitstring,o_psk_ext_11: preSharedKeyExt,psk_data_19: bitstring,o_ech_ext_11: echExt) = (if v_798 then (if undo-catch-fail(v_799) then (CH(o_cr,o_offer_18),CH(o_cr,o_offer_18),o_cr,o_cr,o_kex_data,o_kex_data,psk_ext_36,psk_data_18,ech_inner_or_grease) else (if v_802 then (CH(o_cr,o_offer_19),i_client_hello_10,o_cr,i_cr,o_kex_data,i_kex_data,o_psk_ext_10,psk_data_18,o_ech_ext_10) else fail-any)) else fail-any) in
        {3741}out(io, o_client_hello_2);
        {3742}let (psk_90: preSharedKey,id_40: identityPsk,es_57: bitstring,safe_2: bool) = psk_data_19 in
        (
            {3743}if (false && (not(@6_use_grease) && (psk_90 ≠ NoPsk))) then
            {3744}let client_hello_3: bitstring = (zero,i_client_hello_11) in
            {3746}let h_215: bitstring = catch-fail(hash(@6_backend_h,client_hello_3)) in
            {3747}let v_803: bool = not-caught-fail(h_215) in
            {3745}let l_226: label = tls13_client_early_traffic_secret in
            {3748}let x_254: bitstring = (if v_803 then (l_226,h_215) else caught-fail) in
            {3749}let atsc0_3: bitstring = catch-fail((if v_803 then hmac(@6_backend_h,es_57,x_254) else fail-any)) in
            {3750}let v_804: bool = not-caught-fail(atsc0_3) in
            {3752}let h_216: bitstring = (if v_804 then zero else caught-fail) in
            {3751}let l_227: label = (if v_804 then tls13_key else caught-fail) in
            {3753}let x_255: bitstring = (if v_804 then (l_227,h_216) else caught-fail) in
            {3754}let kc0_3: bitstring = (if v_804 then catch-fail(hmac(@6_backend_h,atsc0_3,x_255)) else caught-fail) in
            {3755}let v_805: bool = not-caught-fail(kc0_3) in
            {3757}let h_217: bitstring = (if v_805 then catch-fail(hash(@6_backend_h,client_hello_3)) else caught-fail) in
            {3758}let v_806: bool = not-caught-fail(h_217) in
            {3756}let l_228: label = (if v_805 then tls13_early_exporter_master_secret else caught-fail) in
            {3759}let x_256: bitstring = (if v_806 then (l_228,h_217) else caught-fail) in
            {3760}let ems0_6: bitstring = (if v_805 then catch-fail((if v_806 then hmac(@6_backend_h,es_57,x_256) else fail-any)) else caught-fail) in
            {3761}let v_807: bool = not-caught-fail(ems0_6) in
            {3762}let (wkc0_3: aead_key,ems0_7: bitstring) = (if v_804 then (if v_805 then (if v_807 then (kc0_3,ems0_6) else fail-any) else fail-any) else fail-any) in
            {3763}!
            {3764}in(io, (i_3: nat,ad_3: bitstring));
            {3765}if is_nat(i_3) then
            {3766}new msg_ed_2[]: bitstring;
            {3768}new st_12: stamp;
            {3769}event ClientSequenceClient0RTTDataWriteKey(@6_id_client,st_12,i_3);
            {3770}event ClientSends0(@6_id_client,i_cr_5,psk_90,i_3,ad_3,msg_ed_2);
            {3767}let enc_ed_2: bitstring = aead_enc(@6_backend_a,wkc0_3,i_3,ad_3,msg_ed_2) in
            {3771}out(io, enc_ed_2)
        ) | (
            {3772}in(io, server_hello_3: msg);
            {3773}let SH(B32(sr24_4: bytes24,sr8_11: bytes8),mode_20: params) = server_hello_3 in
            (
                {3774}if (false && (B32(sr24_4,sr8_11) = B32(HRR24,HRR8))) then
                (
                    {3775}if (send_kex ≠ true) then
                    {3776}let nego(=TLS13,h_alg_13: hash_alg,a_alg_11: aead_alg,hrr_kex_ext(g_21: group),=empty_sni_ext,ech_ext_6: echExt,=empty_extra_ext,=empty_psk_ext) = mode_20 in
                    {3777}let v_808: bool = (ech_ext_6 = empty_ech_ext) in
                    {3778}let hrr_mode_2: params = (if not(v_808) then nego(TLS13,@6_backend_h,@6_backend_a,hrr_kex_ext(@6_backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) else caught-fail) in
                    {3779}let hrr_2: msg = (if not(v_808) then SH(B32(HRR24,HRR8),hrr_mode_2) else caught-fail) in
                    {3780}let cur_log_17: bitstring = (if not(v_808) then ((zero,i_client_hello_11),hrr_2) else caught-fail) in
                    {3781}let transcript_hrr_ech_conf_2: bitstring = (if not(v_808) then catch-fail(hash(@6_backend_h,cur_log_17)) else caught-fail) in
                    {3782}let v_809: bool = not-caught-fail(transcript_hrr_ech_conf_2) in
                    {3784}let k_83: bitstring = (if v_809 then catch-fail(b32_2_b(get_random(i_client_hello_11))) else caught-fail) in
                    {3785}let v_810: bool = not-caught-fail(k_83) in
                    {3783}let s_84: bitstring = (if v_809 then zero else caught-fail) in
                    {3786}let k_84: bitstring = (if v_809 then catch-fail((if v_810 then hmac(@6_backend_h,s_84,k_83) else fail-any)) else caught-fail) in
                    {3787}let v_811: bool = not-caught-fail(k_84) in
                    {3788}let l_229: label = (if v_811 then hrr_ech_accept_confirmation else caught-fail) in
                    {3789}let x_257: bitstring = (if v_811 then (l_229,cur_log_17) else caught-fail) in
                    {3790}let is_ech_accepted_2: bool = (if v_808 then false else (if (ech_ext_6 = ECHHelloRetryRequest((if v_809 then crop_into_bytes8((if v_811 then hmac(@6_backend_h,k_84,x_257) else fail-any)) else fail-any))) then true else false)) in
                    {3791}event ClientEchAcceptance(@6_id_client,is_ech_accepted_2);
                    {3792}if is_ech_accepted_2 then
                    (
                        {3794}let ech_config(config_id_6: configId,ech_g_8: group,pkR_8: element,o_dom_6: domain,ech_h_8: hash_alg,ech_a_8: aead_alg) = ech_conf in
                        {3796}new s_85[]: seed;
                        {3797}let gx_19: element = dh_pub(@6_backend_g,dh_k(s_85)) in
                        {3798}let v_812: bitstring = (dh_k(s_85),gx_19) in
                        {3799}let v_813: bool = success?(1-proj-2-tuple(v_812)) in
                        {3800}let gx_20: element = (if v_813 then 2-proj-2-tuple(v_812) else caught-fail) in
                        {3801}let x_258: bitstring = (if v_813 then 1-proj-2-tuple(v_812) else caught-fail) in
                        {3795}let send_key_share_6: bool = true in
                        {3802}let kex_8: kex_alg = (if v_813 then (if send_key_share_6 then DHE_kex(@6_backend_g,gx_20) else DHE_group(@6_backend_g)) else caught-fail) in
                        {3803}let (i_kex_ext_3: keyShareExt,i_kex_data_6: bitstring) = (if v_813 then (client_kex_ext(kex_8),(x_258,@6_backend_g)) else fail-any) in
                        {3805}new s_86[]: seed;
                        {3806}let gx_21: element = dh_pub(@6_tls_g,dh_k(s_86)) in
                        {3807}let v_814: bitstring = (dh_k(s_86),gx_21) in
                        {3808}let v_815: bool = success?(1-proj-2-tuple(v_814)) in
                        {3809}let gx_22: element = (if v_815 then 2-proj-2-tuple(v_814) else caught-fail) in
                        {3810}let x_259: bitstring = (if v_815 then 1-proj-2-tuple(v_814) else caught-fail) in
                        {3804}let send_key_share_7: bool = true in
                        {3811}let kex_9: kex_alg = (if v_815 then (if send_key_share_7 then DHE_kex(@6_tls_g,gx_22) else DHE_group(@6_tls_g)) else caught-fail) in
                        {3812}let (o_kex_ext_5: keyShareExt,o_kex_data_6: bitstring) = (if v_815 then (client_kex_ext(kex_9),(x_259,@6_tls_g)) else fail-any) in
                        {3813}new rand24_9[]: bytes24;
                        {3814}new rand8_9[]: bytes8;
                        {3816}new rand24_10[]: bytes24;
                        {3817}new rand8_10[]: bytes8;
                        {3818}let o_cr_8: bytes32 = B32(rand24_10,rand8_10) in
                        {3815}let i_cr_6: bytes32 = B32(rand24_9,rand8_9) in
                        {3793}let cur_log_IN1_HRR_2: bitstring = ((zero,i_client_hello_11),server_hello_3) in
                        {3820}if @6_use_psk then
                        (
                            {3819}let ech_ext_7: echExt = ECHClientHelloInner in
                            {3821}let (psk_91: preSharedKey,id_41: identityPsk,old_es_5: bitstring,is_safe_33: bool) = psk_data_19 in
                            (
                                {3825}let k_85: bitstring = catch-fail(psk2b(psk_91)) in
                                {3826}let v_816: bool = not-caught-fail(k_85) in
                                {3824}let s_87: bitstring = zero in
                                {3827}let early_secret_60: bitstring = catch-fail((if v_816 then hmac(@6_backend_h,s_87,k_85) else fail-any)) in
                                {3828}let v_817: bool = not-caught-fail(early_secret_60) in
                                {3830}let m_78: bitstring = (if v_817 then zero else caught-fail) in
                                {3831}let h_218: bitstring = (if v_817 then catch-fail(hash(@6_backend_h,m_78)) else caught-fail) in
                                {3832}let v_818: bool = not-caught-fail(h_218) in
                                {3829}let l_230: label = (if v_817 then tls13_ext_res_binder else caught-fail) in
                                {3833}let x_260: bitstring = (if v_818 then (l_230,h_218) else caught-fail) in
                                {3834}let binder_key_40: bitstring = (if v_817 then catch-fail((if v_818 then hmac(@6_backend_h,early_secret_60,x_260) else fail-any)) else caught-fail) in
                                {3835}let v_819: bool = not-caught-fail(binder_key_40) in
                                {3836}let v_820: bitstring = catch-fail((if v_817 then (if v_819 then (early_secret_60,binder_key_40) else fail-any) else fail-any)) in
                                {3837}let v_821: bool = (not-caught-fail(v_820) && success?(1-proj-2-tuple(v_820))) in
                                {3838}let kb_40: mac_key = (if v_821 then 2-proj-2-tuple(v_820) else caught-fail) in
                                {3839}let es_58: bitstring = (if v_821 then 1-proj-2-tuple(v_820) else caught-fail) in
                                {3822}let offer_12: params = nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_3,SNI(backend_dom),ech_ext_7,@6_i_extra_ext,trunc_client_psk_ext(id_41)) in
                                {3823}let cur_log'_12: bitstring = (cur_log_IN1_HRR_2,CH(i_cr_6,offer_12)) in
                                {3840}let binders_11: bitstring = (if v_821 then catch-fail(hmac(@6_backend_h,kb_40,cur_log'_12)) else caught-fail) in
                                {3841}let v_822: bool = not-caught-fail(binders_11) in
                                {3842}let v_823: bitstring = catch-fail((if v_821 then (if v_822 then (client_psk_ext(id_41,binders_11),(psk_91,id_41,es_58,is_safe_33)) else fail-any) else fail-any)) in
                                {3843}let v_824: bool = (not-caught-fail(v_823) && success?(1-proj-2-tuple(v_823))) in
                                {3844}let psk_data_20: bitstring = (if v_824 then 2-proj-2-tuple(v_823) else caught-fail) in
                                {3845}let psk_ext_37: preSharedKeyExt = (if v_824 then 1-proj-2-tuple(v_823) else caught-fail) in
                                {3848}new fake_id_11[]: identityPsk;
                                {3849}new fake_binder_11[]: bitstring;
                                {3855}let v_825: hpkeContext = (if v_824 then catch-fail(context) else caught-fail) in
                                {3856}let v_826: bool = (not-caught-fail(v_825) && ((S =nf 1-proj-hpke_context(v_825)) && success?(1-proj-hpke_context(v_825)))) in
                                {3857}let base_nonce_10: bitstring = (if v_826 then 3-proj-hpke_context(v_825) else caught-fail) in
                                {3858}let key_10: aead_key = (if v_826 then 2-proj-hpke_context(v_825) else caught-fail) in
                                {3854}let n_9: nat = (if v_824 then 2 else caught-fail) in
                                {3851}let o_ech_ext_ADD_9: echExt = (if v_824 then ECHClientHelloOuter(ech_h_8,ech_a_8,config_id_6,zero,zero) else caught-fail) in
                                {3850}let o_psk_ext_12: preSharedKeyExt = (if v_824 then (if @6_use_psk then client_psk_ext(fake_id_11,fake_binder_11) else empty_psk_ext) else caught-fail) in
                                {3852}let o_offer_ADD_9: params = (if v_824 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_5,SNI(o_dom_6),o_ech_ext_ADD_9,empty_extra_ext,o_psk_ext_12) else caught-fail) in
                                {3853}let o_client_hello_ADD_9: msg = (if v_824 then CH(o_cr_8,o_offer_ADD_9) else caught-fail) in
                                {3846}let i_offer_9: params = (if v_824 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_3,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_37) else caught-fail) in
                                {3847}let i_client_hello_12: msg = (if v_824 then CH(i_cr_6,i_offer_9) else caught-fail) in
                                {3859}let payload_10: bitstring = (if v_824 then catch-fail((if v_826 then aead_enc(ech_a_8,key_10,(base_nonce_10,n_9),o_client_hello_ADD_9,i_client_hello_12) else fail-any)) else caught-fail) in
                                {3860}let v_827: bool = not-caught-fail(payload_10) in
                                {3861}let o_ech_ext_12: echExt = (if v_827 then ECHClientHelloOuter(ech_h_8,ech_a_8,config_id_6,zero,payload_10) else caught-fail) in
                                {3862}let o_offer_20: params = (if v_827 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_5,SNI(o_dom_6),o_ech_ext_12,empty_extra_ext,o_psk_ext_12) else caught-fail) in
                                {3863}let (o_client_hello'_6: msg,i_client_hello'_6: msg,i_cr'_6: bytes32,i_kex_data'_6: bitstring,psk_data'_16: bitstring) = (if v_824 then (if v_827 then (CH(o_cr_8,o_offer_20),i_client_hello_12,i_cr_6,i_kex_data_6,psk_data_20) else fail-any) else fail-any) in
                                {3864}out(io, o_client_hello'_6);
                                {3865}in(io, server_hello'_14: msg);
                                {3866}let SH(B32(sr24'_6: bytes24,sr8'_6: bytes8),params'_6: params) = server_hello'_14 in
                                {3868}let sh_modified_9: msg = SH(B32(sr24'_6,zero8),params'_6) in
                                {3867}let cur_log_IN1_HRR_IN2_6: bitstring = (cur_log_IN1_HRR_2,i_client_hello'_6) in
                                {3869}let cur_log_sh_9: bitstring = (cur_log_IN1_HRR_IN2_6,sh_modified_9) in
                                {3870}let transcript_ech_conf_9: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_9)) in
                                {3871}let v_828: bool = not-caught-fail(transcript_ech_conf_9) in
                                {3873}let k_86: bitstring = (if v_828 then catch-fail(b32_2_b(get_random(i_client_hello'_6))) else caught-fail) in
                                {3874}let v_829: bool = not-caught-fail(k_86) in
                                {3872}let s_88: bitstring = (if v_828 then zero else caught-fail) in
                                {3875}let k_87: bitstring = (if v_828 then catch-fail((if v_829 then hmac(@6_backend_h,s_88,k_86) else fail-any)) else caught-fail) in
                                {3876}let v_830: bool = not-caught-fail(k_87) in
                                {3877}let l_231: label = (if v_830 then ech_accept_confirmation else caught-fail) in
                                {3878}let x_261: bitstring = (if v_830 then (l_231,cur_log_sh_9) else caught-fail) in
                                {3879}let sr8_12: bytes8 = (if v_828 then catch-fail(crop_into_bytes8((if v_830 then hmac(@6_backend_h,k_87,x_261) else fail-any))) else caught-fail) in
                                {3880}let v_831: bool = not-caught-fail(sr8_12) in
                                {3881}if (B32(sr24'_6,sr8'_6) = (if v_828 then (if v_831 then B32(sr24'_6,sr8_12) else fail-any) else fail-any)) then
                                {3882}let (x_262: bitstring,g_22: group) = i_kex_data'_6 in
                                {3883}let (psk_offer_18: preSharedKey,id_offer_18: identityPsk,es_offer_18: bitstring,is_safe_offer_18: bool) = psk_data'_16 in
                                {3884}event Client_PSKOffer(@6_id_client,psk_offer_18,id_offer_18,is_safe_offer_18);
                                {3885}event Client_Rand_client(@6_id_client,i_cr'_6);
                                {3886}event Client_DH_client(@6_id_client,dh_pub(g_22,x_262));
                                {3887}event Client_server_domain(@6_id_client,backend_dom);
                                {3888}let SH(sr_26: bytes32,mode_21: params) = server_hello'_14 in
                                {3889}event Client_Rand_server(@6_id_client,sr_26);
                                {3890}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_22,gy_19: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_38: preSharedKeyExt) = mode_21 in
                                (
                                    {3892}event Client_DH_server(@6_id_client,gy_19);
                                    {3893}let v_832: bool = (psk_ext_38 = empty_psk_ext) in
                                    {3894}let psk_92: preSharedKey = (if v_832 then NoPsk else caught-fail) in
                                    {3896}let k_88: bitstring = (if v_832 then catch-fail(psk2b(psk_92)) else caught-fail) in
                                    {3897}let v_833: bool = not-caught-fail(k_88) in
                                    {3895}let s_89: bitstring = (if v_832 then zero else caught-fail) in
                                    {3898}let early_secret_61: bitstring = (if v_832 then catch-fail((if v_833 then hmac(@6_backend_h,s_89,k_88) else fail-any)) else caught-fail) in
                                    {3899}let v_834: bool = not-caught-fail(early_secret_61) in
                                    {3901}let m_79: bitstring = (if v_834 then zero else caught-fail) in
                                    {3902}let h_219: bitstring = (if v_834 then catch-fail(hash(@6_backend_h,m_79)) else caught-fail) in
                                    {3903}let v_835: bool = not-caught-fail(h_219) in
                                    {3900}let l_232: label = (if v_834 then tls13_ext_res_binder else caught-fail) in
                                    {3904}let x_263: bitstring = (if v_835 then (l_232,h_219) else caught-fail) in
                                    {3905}let binder_key_41: bitstring = (if v_834 then catch-fail((if v_835 then hmac(@6_backend_h,early_secret_61,x_263) else fail-any)) else caught-fail) in
                                    {3906}let v_836: bool = not-caught-fail(binder_key_41) in
                                    {3907}let v_837: bitstring = (if v_832 then catch-fail((if v_834 then (if v_836 then (early_secret_61,binder_key_41) else fail-any) else fail-any)) else caught-fail) in
                                    {3908}let v_838: bool = (not-caught-fail(v_837) && success?(1-proj-2-tuple(v_837))) in
                                    {3909}let kb_41: mac_key = (if v_838 then 2-proj-2-tuple(v_837) else caught-fail) in
                                    {3910}let es_59: bitstring = (if v_838 then 1-proj-2-tuple(v_837) else caught-fail) in
                                    {3911}let v_839: bitstring = (if not(v_832) then catch-fail(psk_data'_16) else caught-fail) in
                                    {3912}let v_840: bool = (not-caught-fail(v_839) && success?(1-proj-4-tuple(v_839))) in
                                    {3913}let is_safe_34: bool = (if v_840 then 4-proj-4-tuple(v_839) else caught-fail) in
                                    {3914}let es_60: bitstring = (if v_840 then 3-proj-4-tuple(v_839) else caught-fail) in
                                    {3915}let id_42: identityPsk = (if v_840 then 2-proj-4-tuple(v_839) else caught-fail) in
                                    {3916}let psk_93: preSharedKey = (if v_840 then 1-proj-4-tuple(v_839) else caught-fail) in
                                    {3917}let (psk_94: preSharedKey,early_secret_62: bitstring,valid_18: bool,safe_psk_21: bool) = (if v_832 then (if v_838 then (NoPsk,es_59,true,false) else fail-any) else (if v_840 then (psk_93,es_60,((psk_93 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_38)),is_safe_34) else fail-any)) in
                                    {3918}event Client_PSKChoosen(@6_id_client,psk_94,safe_psk_21);
                                    {3919}if valid_18 then
                                    (
                                        {3922}new s_90[]: seed;
                                        {3920}let gxy_37: element = catch-fail(dh_decap_fun(g_22,gy_19,x_262)) in
                                        {3921}let v_841: bool = not-caught-fail(gxy_37) in
                                        {3923}let gxy_38: element = (if v_841 then gxy_37 else dh_f(s_90)) in
                                        {3924}event Client_DH_gxy(@6_id_client,gxy_38);
                                        {3926}let m_80: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {3927}let v_842: bool = not-caught-fail(m_80) in
                                        {3928}let h_220: bitstring = (if v_842 then catch-fail(hash(@6_backend_h,m_80)) else caught-fail) in
                                        {3929}let v_843: bool = not-caught-fail(h_220) in
                                        {3925}let l_233: label = tls13_derived in
                                        {3930}let x_264: bitstring = (if v_843 then (l_233,h_220) else caught-fail) in
                                        {3931}let extra_40: bitstring = catch-fail((if v_842 then (if v_843 then hmac(@6_backend_h,early_secret_62,x_264) else fail-any) else fail-any)) in
                                        {3932}let v_844: bool = not-caught-fail(extra_40) in
                                        {3933}let handshake_secret_19: bitstring = (if v_844 then hmac(@6_backend_h,extra_40,gxy_38) else fail-any) in
                                        {3935}let m_81: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {3936}let v_845: bool = not-caught-fail(m_81) in
                                        {3937}let h_221: bitstring = (if v_845 then catch-fail(hash(@6_backend_h,m_81)) else caught-fail) in
                                        {3938}let v_846: bool = not-caught-fail(h_221) in
                                        {3934}let l_234: label = tls13_derived in
                                        {3939}let x_265: bitstring = (if v_846 then (l_234,h_221) else caught-fail) in
                                        {3940}let extra_41: bitstring = catch-fail((if v_845 then (if v_846 then hmac(@6_backend_h,handshake_secret_19,x_265) else fail-any) else fail-any)) in
                                        {3941}let v_847: bool = not-caught-fail(extra_41) in
                                        {3942}let k_89: bitstring = (if v_847 then zero else caught-fail) in
                                        {3943}let master_secret_45: bitstring = (if v_847 then catch-fail(hmac(@6_backend_h,handshake_secret_19,k_89)) else caught-fail) in
                                        {3944}let v_848: bool = not-caught-fail(master_secret_45) in
                                        {3891}let cur_log2_40: bitstring = (cur_log_IN1_HRR_IN2_6,server_hello'_14) in
                                        {3946}let h_222: bitstring = (if v_848 then catch-fail(hash(@6_backend_h,cur_log2_40)) else caught-fail) in
                                        {3947}let v_849: bool = not-caught-fail(h_222) in
                                        {3945}let l_235: label = (if v_848 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {3948}let x_266: bitstring = (if v_849 then (l_235,h_222) else caught-fail) in
                                        {3949}let client_hts_19: bitstring = (if v_848 then catch-fail((if v_849 then hmac(@6_backend_h,handshake_secret_19,x_266) else fail-any)) else caught-fail) in
                                        {3950}let v_850: bool = not-caught-fail(client_hts_19) in
                                        {3952}let h_223: bitstring = (if v_850 then catch-fail(hash(@6_backend_h,cur_log2_40)) else caught-fail) in
                                        {3953}let v_851: bool = not-caught-fail(h_223) in
                                        {3951}let l_236: label = (if v_850 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {3954}let x_267: bitstring = (if v_851 then (l_236,h_223) else caught-fail) in
                                        {3955}let server_hts_19: bitstring = (if v_850 then catch-fail((if v_851 then hmac(@6_backend_h,handshake_secret_19,x_267) else fail-any)) else caught-fail) in
                                        {3956}let v_852: bool = not-caught-fail(server_hts_19) in
                                        {3958}let h_224: bitstring = (if v_852 then zero else caught-fail) in
                                        {3957}let l_237: label = (if v_852 then tls13_key else caught-fail) in
                                        {3959}let x_268: bitstring = (if v_852 then (l_237,h_224) else caught-fail) in
                                        {3960}let client_wkh_19: bitstring = (if v_852 then catch-fail(hmac(@6_backend_h,client_hts_19,x_268)) else caught-fail) in
                                        {3961}let v_853: bool = not-caught-fail(client_wkh_19) in
                                        {3963}let h_225: bitstring = (if v_853 then zero else caught-fail) in
                                        {3962}let l_238: label = (if v_853 then tls13_key else caught-fail) in
                                        {3964}let x_269: bitstring = (if v_853 then (l_238,h_225) else caught-fail) in
                                        {3965}let server_wkh_19: bitstring = (if v_853 then catch-fail(hmac(@6_backend_h,server_hts_19,x_269)) else caught-fail) in
                                        {3966}let v_854: bool = not-caught-fail(server_wkh_19) in
                                        {3968}let h_226: bitstring = (if v_854 then zero else caught-fail) in
                                        {3967}let l_239: label = (if v_854 then tls13_finished else caught-fail) in
                                        {3969}let x_270: bitstring = (if v_854 then (l_239,h_226) else caught-fail) in
                                        {3970}let client_fk_19: bitstring = (if v_854 then catch-fail(hmac(@6_backend_h,client_hts_19,x_270)) else caught-fail) in
                                        {3971}let v_855: bool = not-caught-fail(client_fk_19) in
                                        {3973}let h_227: bitstring = (if v_855 then zero else caught-fail) in
                                        {3972}let l_240: label = (if v_855 then tls13_finished else caught-fail) in
                                        {3974}let x_271: bitstring = (if v_855 then (l_240,h_227) else caught-fail) in
                                        {3975}let server_fk_19: bitstring = (if v_855 then catch-fail(hmac(@6_backend_h,server_hts_19,x_271)) else caught-fail) in
                                        {3976}let v_856: bool = not-caught-fail(server_fk_19) in
                                        {3977}let (master_secret_46: bitstring,chk_26: aead_key,shk_25: aead_key,cfin_26: mac_key,sfin_25: mac_key) = (if v_847 then (if v_848 then (if v_850 then (if v_852 then (if v_853 then (if v_854 then (if v_855 then (if v_856 then (master_secret_45,client_wkh_19,server_wkh_19,client_fk_19,server_fk_19) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {3978}event Client_chk(@6_id_client,chk_26);
                                        {3979}event Client_shk(@6_id_client,shk_25);
                                        {3980}event Client_cfin(@6_id_client,cfin_26);
                                        {3981}event Client_sfin(@6_id_client,sfin_25);
                                        {3982}in(io, enc_ee_msg_18: bitstring);
                                        {3983}let ee_msg_19: msg = aead_dec(@6_backend_a,shk_25,0,zero,enc_ee_msg_18) in
                                        {3984}let EE(ech_ee_18: echExt,extra_ee_18: extraExt) = ee_msg_19 in
                                        {3985}let cur_log2_41: bitstring = (cur_log2_40,ee_msg_19) in
                                        {3986}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_6,sr_26,@6_backend_h,@6_backend_a,c_dom_5,backend_dom,psk_94,safe_psk_21,@6_comp_psk,master_secret_46,chk_26,0,shk_25,1,cfin_26,sfin_25,cur_log2_41)))
                                    )
                                    else
                                        {3987}out(io, illegal_parameter)
                                )
                                else
                                    {3988}out(io, illegal_parameter)
                            )
                            else
                                {4165}get pre_shared_keys(c_dom'_7: domain,=backend_dom,=@6_backend_h,id_43: identityPsk,psk_95: preSharedKey,idP_9: idProc,is_safe_35: bool) in
                                {3989}event Selected_one_time_used_psk(@6_id_client,psk_95,is_safe_35);
                                {3990}event Selected_psk(c_dom_5,c_dom'_7,idP_9,is_safe_35);
                                {3991}event Selected_psk_no_missmatch(@6_id_client,backend_dom,@6_backend_h,psk_95,id_43);
                                {3992}event Selected_psk_with_ID(c_dom_5,c_dom'_7,id_43,idP_9,is_safe_35);
                                {3993}let v_857: bitstring = (id_43,psk_95,is_safe_35) in
                                {3994}let v_858: bool = success?(1-proj-3-tuple(v_857)) in
                                {3995}let is_safe_36: bool = (if v_858 then 3-proj-3-tuple(v_857) else caught-fail) in
                                {3996}let psk_96: preSharedKey = (if v_858 then 2-proj-3-tuple(v_857) else caught-fail) in
                                {3997}let id_44: identityPsk = (if v_858 then 1-proj-3-tuple(v_857) else caught-fail) in
                                {4001}let k_90: bitstring = (if v_858 then catch-fail(psk2b(psk_96)) else caught-fail) in
                                {4002}let v_859: bool = not-caught-fail(k_90) in
                                {4000}let s_91: bitstring = (if v_858 then zero else caught-fail) in
                                {4003}let early_secret_63: bitstring = (if v_858 then catch-fail((if v_859 then hmac(@6_backend_h,s_91,k_90) else fail-any)) else caught-fail) in
                                {4004}let v_860: bool = not-caught-fail(early_secret_63) in
                                {4006}let m_82: bitstring = (if v_860 then zero else caught-fail) in
                                {4007}let h_228: bitstring = (if v_860 then catch-fail(hash(@6_backend_h,m_82)) else caught-fail) in
                                {4008}let v_861: bool = not-caught-fail(h_228) in
                                {4005}let l_241: label = (if v_860 then tls13_ext_res_binder else caught-fail) in
                                {4009}let x_272: bitstring = (if v_861 then (l_241,h_228) else caught-fail) in
                                {4010}let binder_key_42: bitstring = (if v_860 then catch-fail((if v_861 then hmac(@6_backend_h,early_secret_63,x_272) else fail-any)) else caught-fail) in
                                {4011}let v_862: bool = not-caught-fail(binder_key_42) in
                                {4012}let v_863: bitstring = (if v_858 then catch-fail((if v_860 then (if v_862 then (early_secret_63,binder_key_42) else fail-any) else fail-any)) else caught-fail) in
                                {4013}let v_864: bool = (not-caught-fail(v_863) && success?(1-proj-2-tuple(v_863))) in
                                {4014}let kb_42: mac_key = (if v_864 then 2-proj-2-tuple(v_863) else caught-fail) in
                                {4015}let es_61: bitstring = (if v_864 then 1-proj-2-tuple(v_863) else caught-fail) in
                                {3998}let offer_13: params = (if v_858 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_3,SNI(backend_dom),ech_ext_7,@6_i_extra_ext,trunc_client_psk_ext(id_44)) else caught-fail) in
                                {3999}let cur_log'_13: bitstring = (if v_858 then (cur_log_IN1_HRR_2,CH(i_cr_6,offer_13)) else caught-fail) in
                                {4016}let binders_12: bitstring = (if v_864 then catch-fail(hmac(@6_backend_h,kb_42,cur_log'_13)) else caught-fail) in
                                {4017}let v_865: bool = not-caught-fail(binders_12) in
                                {4018}let v_866: bitstring = catch-fail((if v_858 then (if v_864 then (if v_865 then (client_psk_ext(id_44,binders_12),(psk_96,id_44,es_61,is_safe_36)) else fail-any) else fail-any) else fail-any)) in
                                {4019}let v_867: bool = (not-caught-fail(v_866) && success?(1-proj-2-tuple(v_866))) in
                                {4020}let psk_data_21: bitstring = (if v_867 then 2-proj-2-tuple(v_866) else caught-fail) in
                                {4021}let psk_ext_39: preSharedKeyExt = (if v_867 then 1-proj-2-tuple(v_866) else caught-fail) in
                                {4024}new fake_id_12[]: identityPsk;
                                {4025}new fake_binder_12[]: bitstring;
                                {4031}let v_868: hpkeContext = (if v_867 then catch-fail(context) else caught-fail) in
                                {4032}let v_869: bool = (not-caught-fail(v_868) && ((S =nf 1-proj-hpke_context(v_868)) && success?(1-proj-hpke_context(v_868)))) in
                                {4033}let base_nonce_11: bitstring = (if v_869 then 3-proj-hpke_context(v_868) else caught-fail) in
                                {4034}let key_11: aead_key = (if v_869 then 2-proj-hpke_context(v_868) else caught-fail) in
                                {4030}let n_10: nat = (if v_867 then 2 else caught-fail) in
                                {4027}let o_ech_ext_ADD_10: echExt = (if v_867 then ECHClientHelloOuter(ech_h_8,ech_a_8,config_id_6,zero,zero) else caught-fail) in
                                {4026}let o_psk_ext_13: preSharedKeyExt = (if v_867 then (if @6_use_psk then client_psk_ext(fake_id_12,fake_binder_12) else empty_psk_ext) else caught-fail) in
                                {4028}let o_offer_ADD_10: params = (if v_867 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_5,SNI(o_dom_6),o_ech_ext_ADD_10,empty_extra_ext,o_psk_ext_13) else caught-fail) in
                                {4029}let o_client_hello_ADD_10: msg = (if v_867 then CH(o_cr_8,o_offer_ADD_10) else caught-fail) in
                                {4022}let i_offer_10: params = (if v_867 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_3,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_39) else caught-fail) in
                                {4023}let i_client_hello_13: msg = (if v_867 then CH(i_cr_6,i_offer_10) else caught-fail) in
                                {4035}let payload_11: bitstring = (if v_867 then catch-fail((if v_869 then aead_enc(ech_a_8,key_11,(base_nonce_11,n_10),o_client_hello_ADD_10,i_client_hello_13) else fail-any)) else caught-fail) in
                                {4036}let v_870: bool = not-caught-fail(payload_11) in
                                {4037}let o_ech_ext_13: echExt = (if v_870 then ECHClientHelloOuter(ech_h_8,ech_a_8,config_id_6,zero,payload_11) else caught-fail) in
                                {4038}let o_offer_21: params = (if v_870 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_5,SNI(o_dom_6),o_ech_ext_13,empty_extra_ext,o_psk_ext_13) else caught-fail) in
                                {4039}let (o_client_hello'_7: msg,i_client_hello'_7: msg,i_cr'_7: bytes32,i_kex_data'_7: bitstring,psk_data'_17: bitstring) = (if v_867 then (if v_870 then (CH(o_cr_8,o_offer_21),i_client_hello_13,i_cr_6,i_kex_data_6,psk_data_21) else fail-any) else fail-any) in
                                {4040}out(io, o_client_hello'_7);
                                {4041}in(io, server_hello'_15: msg);
                                {4042}let SH(B32(sr24'_7: bytes24,sr8'_7: bytes8),params'_7: params) = server_hello'_15 in
                                {4044}let sh_modified_10: msg = SH(B32(sr24'_7,zero8),params'_7) in
                                {4043}let cur_log_IN1_HRR_IN2_7: bitstring = (cur_log_IN1_HRR_2,i_client_hello'_7) in
                                {4045}let cur_log_sh_10: bitstring = (cur_log_IN1_HRR_IN2_7,sh_modified_10) in
                                {4046}let transcript_ech_conf_10: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_10)) in
                                {4047}let v_871: bool = not-caught-fail(transcript_ech_conf_10) in
                                {4049}let k_91: bitstring = (if v_871 then catch-fail(b32_2_b(get_random(i_client_hello'_7))) else caught-fail) in
                                {4050}let v_872: bool = not-caught-fail(k_91) in
                                {4048}let s_92: bitstring = (if v_871 then zero else caught-fail) in
                                {4051}let k_92: bitstring = (if v_871 then catch-fail((if v_872 then hmac(@6_backend_h,s_92,k_91) else fail-any)) else caught-fail) in
                                {4052}let v_873: bool = not-caught-fail(k_92) in
                                {4053}let l_242: label = (if v_873 then ech_accept_confirmation else caught-fail) in
                                {4054}let x_273: bitstring = (if v_873 then (l_242,cur_log_sh_10) else caught-fail) in
                                {4055}let sr8_13: bytes8 = (if v_871 then catch-fail(crop_into_bytes8((if v_873 then hmac(@6_backend_h,k_92,x_273) else fail-any))) else caught-fail) in
                                {4056}let v_874: bool = not-caught-fail(sr8_13) in
                                {4057}if (B32(sr24'_7,sr8'_7) = (if v_871 then (if v_874 then B32(sr24'_7,sr8_13) else fail-any) else fail-any)) then
                                {4058}let (x_274: bitstring,g_23: group) = i_kex_data'_7 in
                                {4059}let (psk_offer_19: preSharedKey,id_offer_19: identityPsk,es_offer_19: bitstring,is_safe_offer_19: bool) = psk_data'_17 in
                                {4060}event Client_PSKOffer(@6_id_client,psk_offer_19,id_offer_19,is_safe_offer_19);
                                {4061}event Client_Rand_client(@6_id_client,i_cr'_7);
                                {4062}event Client_DH_client(@6_id_client,dh_pub(g_23,x_274));
                                {4063}event Client_server_domain(@6_id_client,backend_dom);
                                {4064}let SH(sr_27: bytes32,mode_22: params) = server_hello'_15 in
                                {4065}event Client_Rand_server(@6_id_client,sr_27);
                                {4066}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_23,gy_20: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_40: preSharedKeyExt) = mode_22 in
                                (
                                    {4068}event Client_DH_server(@6_id_client,gy_20);
                                    {4069}let v_875: bool = (psk_ext_40 = empty_psk_ext) in
                                    {4070}let psk_97: preSharedKey = (if v_875 then NoPsk else caught-fail) in
                                    {4072}let k_93: bitstring = (if v_875 then catch-fail(psk2b(psk_97)) else caught-fail) in
                                    {4073}let v_876: bool = not-caught-fail(k_93) in
                                    {4071}let s_93: bitstring = (if v_875 then zero else caught-fail) in
                                    {4074}let early_secret_64: bitstring = (if v_875 then catch-fail((if v_876 then hmac(@6_backend_h,s_93,k_93) else fail-any)) else caught-fail) in
                                    {4075}let v_877: bool = not-caught-fail(early_secret_64) in
                                    {4077}let m_83: bitstring = (if v_877 then zero else caught-fail) in
                                    {4078}let h_229: bitstring = (if v_877 then catch-fail(hash(@6_backend_h,m_83)) else caught-fail) in
                                    {4079}let v_878: bool = not-caught-fail(h_229) in
                                    {4076}let l_243: label = (if v_877 then tls13_ext_res_binder else caught-fail) in
                                    {4080}let x_275: bitstring = (if v_878 then (l_243,h_229) else caught-fail) in
                                    {4081}let binder_key_43: bitstring = (if v_877 then catch-fail((if v_878 then hmac(@6_backend_h,early_secret_64,x_275) else fail-any)) else caught-fail) in
                                    {4082}let v_879: bool = not-caught-fail(binder_key_43) in
                                    {4083}let v_880: bitstring = (if v_875 then catch-fail((if v_877 then (if v_879 then (early_secret_64,binder_key_43) else fail-any) else fail-any)) else caught-fail) in
                                    {4084}let v_881: bool = (not-caught-fail(v_880) && success?(1-proj-2-tuple(v_880))) in
                                    {4085}let kb_43: mac_key = (if v_881 then 2-proj-2-tuple(v_880) else caught-fail) in
                                    {4086}let es_62: bitstring = (if v_881 then 1-proj-2-tuple(v_880) else caught-fail) in
                                    {4087}let v_882: bitstring = (if not(v_875) then catch-fail(psk_data'_17) else caught-fail) in
                                    {4088}let v_883: bool = (not-caught-fail(v_882) && success?(1-proj-4-tuple(v_882))) in
                                    {4089}let is_safe_37: bool = (if v_883 then 4-proj-4-tuple(v_882) else caught-fail) in
                                    {4090}let es_63: bitstring = (if v_883 then 3-proj-4-tuple(v_882) else caught-fail) in
                                    {4091}let id_45: identityPsk = (if v_883 then 2-proj-4-tuple(v_882) else caught-fail) in
                                    {4092}let psk_98: preSharedKey = (if v_883 then 1-proj-4-tuple(v_882) else caught-fail) in
                                    {4093}let (psk_99: preSharedKey,early_secret_65: bitstring,valid_19: bool,safe_psk_22: bool) = (if v_875 then (if v_881 then (NoPsk,es_62,true,false) else fail-any) else (if v_883 then (psk_98,es_63,((psk_98 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_40)),is_safe_37) else fail-any)) in
                                    {4094}event Client_PSKChoosen(@6_id_client,psk_99,safe_psk_22);
                                    {4095}if valid_19 then
                                    (
                                        {4098}new s_94[]: seed;
                                        {4096}let gxy_39: element = catch-fail(dh_decap_fun(g_23,gy_20,x_274)) in
                                        {4097}let v_884: bool = not-caught-fail(gxy_39) in
                                        {4099}let gxy_40: element = (if v_884 then gxy_39 else dh_f(s_94)) in
                                        {4100}event Client_DH_gxy(@6_id_client,gxy_40);
                                        {4102}let m_84: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {4103}let v_885: bool = not-caught-fail(m_84) in
                                        {4104}let h_230: bitstring = (if v_885 then catch-fail(hash(@6_backend_h,m_84)) else caught-fail) in
                                        {4105}let v_886: bool = not-caught-fail(h_230) in
                                        {4101}let l_244: label = tls13_derived in
                                        {4106}let x_276: bitstring = (if v_886 then (l_244,h_230) else caught-fail) in
                                        {4107}let extra_42: bitstring = catch-fail((if v_885 then (if v_886 then hmac(@6_backend_h,early_secret_65,x_276) else fail-any) else fail-any)) in
                                        {4108}let v_887: bool = not-caught-fail(extra_42) in
                                        {4109}let handshake_secret_20: bitstring = (if v_887 then hmac(@6_backend_h,extra_42,gxy_40) else fail-any) in
                                        {4111}let m_85: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {4112}let v_888: bool = not-caught-fail(m_85) in
                                        {4113}let h_231: bitstring = (if v_888 then catch-fail(hash(@6_backend_h,m_85)) else caught-fail) in
                                        {4114}let v_889: bool = not-caught-fail(h_231) in
                                        {4110}let l_245: label = tls13_derived in
                                        {4115}let x_277: bitstring = (if v_889 then (l_245,h_231) else caught-fail) in
                                        {4116}let extra_43: bitstring = catch-fail((if v_888 then (if v_889 then hmac(@6_backend_h,handshake_secret_20,x_277) else fail-any) else fail-any)) in
                                        {4117}let v_890: bool = not-caught-fail(extra_43) in
                                        {4118}let k_94: bitstring = (if v_890 then zero else caught-fail) in
                                        {4119}let master_secret_47: bitstring = (if v_890 then catch-fail(hmac(@6_backend_h,handshake_secret_20,k_94)) else caught-fail) in
                                        {4120}let v_891: bool = not-caught-fail(master_secret_47) in
                                        {4067}let cur_log2_42: bitstring = (cur_log_IN1_HRR_IN2_7,server_hello'_15) in
                                        {4122}let h_232: bitstring = (if v_891 then catch-fail(hash(@6_backend_h,cur_log2_42)) else caught-fail) in
                                        {4123}let v_892: bool = not-caught-fail(h_232) in
                                        {4121}let l_246: label = (if v_891 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {4124}let x_278: bitstring = (if v_892 then (l_246,h_232) else caught-fail) in
                                        {4125}let client_hts_20: bitstring = (if v_891 then catch-fail((if v_892 then hmac(@6_backend_h,handshake_secret_20,x_278) else fail-any)) else caught-fail) in
                                        {4126}let v_893: bool = not-caught-fail(client_hts_20) in
                                        {4128}let h_233: bitstring = (if v_893 then catch-fail(hash(@6_backend_h,cur_log2_42)) else caught-fail) in
                                        {4129}let v_894: bool = not-caught-fail(h_233) in
                                        {4127}let l_247: label = (if v_893 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {4130}let x_279: bitstring = (if v_894 then (l_247,h_233) else caught-fail) in
                                        {4131}let server_hts_20: bitstring = (if v_893 then catch-fail((if v_894 then hmac(@6_backend_h,handshake_secret_20,x_279) else fail-any)) else caught-fail) in
                                        {4132}let v_895: bool = not-caught-fail(server_hts_20) in
                                        {4134}let h_234: bitstring = (if v_895 then zero else caught-fail) in
                                        {4133}let l_248: label = (if v_895 then tls13_key else caught-fail) in
                                        {4135}let x_280: bitstring = (if v_895 then (l_248,h_234) else caught-fail) in
                                        {4136}let client_wkh_20: bitstring = (if v_895 then catch-fail(hmac(@6_backend_h,client_hts_20,x_280)) else caught-fail) in
                                        {4137}let v_896: bool = not-caught-fail(client_wkh_20) in
                                        {4139}let h_235: bitstring = (if v_896 then zero else caught-fail) in
                                        {4138}let l_249: label = (if v_896 then tls13_key else caught-fail) in
                                        {4140}let x_281: bitstring = (if v_896 then (l_249,h_235) else caught-fail) in
                                        {4141}let server_wkh_20: bitstring = (if v_896 then catch-fail(hmac(@6_backend_h,server_hts_20,x_281)) else caught-fail) in
                                        {4142}let v_897: bool = not-caught-fail(server_wkh_20) in
                                        {4144}let h_236: bitstring = (if v_897 then zero else caught-fail) in
                                        {4143}let l_250: label = (if v_897 then tls13_finished else caught-fail) in
                                        {4145}let x_282: bitstring = (if v_897 then (l_250,h_236) else caught-fail) in
                                        {4146}let client_fk_20: bitstring = (if v_897 then catch-fail(hmac(@6_backend_h,client_hts_20,x_282)) else caught-fail) in
                                        {4147}let v_898: bool = not-caught-fail(client_fk_20) in
                                        {4149}let h_237: bitstring = (if v_898 then zero else caught-fail) in
                                        {4148}let l_251: label = (if v_898 then tls13_finished else caught-fail) in
                                        {4150}let x_283: bitstring = (if v_898 then (l_251,h_237) else caught-fail) in
                                        {4151}let server_fk_20: bitstring = (if v_898 then catch-fail(hmac(@6_backend_h,server_hts_20,x_283)) else caught-fail) in
                                        {4152}let v_899: bool = not-caught-fail(server_fk_20) in
                                        {4153}let (master_secret_48: bitstring,chk_27: aead_key,shk_26: aead_key,cfin_27: mac_key,sfin_26: mac_key) = (if v_890 then (if v_891 then (if v_893 then (if v_895 then (if v_896 then (if v_897 then (if v_898 then (if v_899 then (master_secret_47,client_wkh_20,server_wkh_20,client_fk_20,server_fk_20) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {4154}event Client_chk(@6_id_client,chk_27);
                                        {4155}event Client_shk(@6_id_client,shk_26);
                                        {4156}event Client_cfin(@6_id_client,cfin_27);
                                        {4157}event Client_sfin(@6_id_client,sfin_26);
                                        {4158}in(io, enc_ee_msg_19: bitstring);
                                        {4159}let ee_msg_20: msg = aead_dec(@6_backend_a,shk_26,0,zero,enc_ee_msg_19) in
                                        {4160}let EE(ech_ee_19: echExt,extra_ee_19: extraExt) = ee_msg_20 in
                                        {4161}let cur_log2_43: bitstring = (cur_log2_42,ee_msg_20) in
                                        {4162}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_7,sr_27,@6_backend_h,@6_backend_a,c_dom_5,backend_dom,psk_99,safe_psk_22,@6_comp_psk,master_secret_48,chk_27,0,shk_26,1,cfin_27,sfin_26,cur_log2_43)))
                                    )
                                    else
                                        {4163}out(io, illegal_parameter)
                                )
                                else
                                    {4164}out(io, illegal_parameter)
                        )
                        else
                            {4166}let psk_100: preSharedKey = NoPsk in
                            {4168}let k_95: bitstring = catch-fail(psk2b(psk_100)) in
                            {4169}let v_900: bool = not-caught-fail(k_95) in
                            {4167}let s_95: bitstring = zero in
                            {4170}let early_secret_66: bitstring = catch-fail((if v_900 then hmac(@6_backend_h,s_95,k_95) else fail-any)) in
                            {4171}let v_901: bool = not-caught-fail(early_secret_66) in
                            {4173}let m_86: bitstring = (if v_901 then zero else caught-fail) in
                            {4174}let h_238: bitstring = (if v_901 then catch-fail(hash(@6_backend_h,m_86)) else caught-fail) in
                            {4175}let v_902: bool = not-caught-fail(h_238) in
                            {4172}let l_252: label = (if v_901 then tls13_ext_res_binder else caught-fail) in
                            {4176}let x_284: bitstring = (if v_902 then (l_252,h_238) else caught-fail) in
                            {4177}let binder_key_44: bitstring = (if v_901 then catch-fail((if v_902 then hmac(@6_backend_h,early_secret_66,x_284) else fail-any)) else caught-fail) in
                            {4178}let v_903: bool = not-caught-fail(binder_key_44) in
                            {4179}let v_904: bitstring = catch-fail((if v_901 then (if v_903 then (early_secret_66,binder_key_44) else fail-any) else fail-any)) in
                            {4180}let v_905: bool = (not-caught-fail(v_904) && success?(1-proj-2-tuple(v_904))) in
                            {4181}let kb_44: mac_key = (if v_905 then 2-proj-2-tuple(v_904) else caught-fail) in
                            {4182}let es_64: bitstring = (if v_905 then 1-proj-2-tuple(v_904) else caught-fail) in
                            {4183}let v_906: bitstring = catch-fail((if v_905 then (empty_psk_ext,(NoPsk,zero,es_64,false)) else fail-any)) in
                            {4184}let v_907: bool = (not-caught-fail(v_906) && success?(1-proj-2-tuple(v_906))) in
                            {4185}let psk_data_22: bitstring = (if v_907 then 2-proj-2-tuple(v_906) else caught-fail) in
                            {4186}let psk_ext_41: preSharedKeyExt = (if v_907 then 1-proj-2-tuple(v_906) else caught-fail) in
                            {4189}new fake_id_13[]: identityPsk;
                            {4190}new fake_binder_13[]: bitstring;
                            {4196}let v_908: hpkeContext = (if v_907 then catch-fail(context) else caught-fail) in
                            {4197}let v_909: bool = (not-caught-fail(v_908) && ((S =nf 1-proj-hpke_context(v_908)) && success?(1-proj-hpke_context(v_908)))) in
                            {4198}let base_nonce_12: bitstring = (if v_909 then 3-proj-hpke_context(v_908) else caught-fail) in
                            {4199}let key_12: aead_key = (if v_909 then 2-proj-hpke_context(v_908) else caught-fail) in
                            {4195}let n_11: nat = (if v_907 then 2 else caught-fail) in
                            {4192}let o_ech_ext_ADD_11: echExt = (if v_907 then ECHClientHelloOuter(ech_h_8,ech_a_8,config_id_6,zero,zero) else caught-fail) in
                            {4191}let o_psk_ext_14: preSharedKeyExt = (if v_907 then (if @6_use_psk then client_psk_ext(fake_id_13,fake_binder_13) else empty_psk_ext) else caught-fail) in
                            {4193}let o_offer_ADD_11: params = (if v_907 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_5,SNI(o_dom_6),o_ech_ext_ADD_11,empty_extra_ext,o_psk_ext_14) else caught-fail) in
                            {4194}let o_client_hello_ADD_11: msg = (if v_907 then CH(o_cr_8,o_offer_ADD_11) else caught-fail) in
                            {4187}let i_offer_11: params = (if v_907 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_3,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_41) else caught-fail) in
                            {4188}let i_client_hello_14: msg = (if v_907 then CH(i_cr_6,i_offer_11) else caught-fail) in
                            {4200}let payload_12: bitstring = (if v_907 then catch-fail((if v_909 then aead_enc(ech_a_8,key_12,(base_nonce_12,n_11),o_client_hello_ADD_11,i_client_hello_14) else fail-any)) else caught-fail) in
                            {4201}let v_910: bool = not-caught-fail(payload_12) in
                            {4202}let o_ech_ext_14: echExt = (if v_910 then ECHClientHelloOuter(ech_h_8,ech_a_8,config_id_6,zero,payload_12) else caught-fail) in
                            {4203}let o_offer_22: params = (if v_910 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_5,SNI(o_dom_6),o_ech_ext_14,empty_extra_ext,o_psk_ext_14) else caught-fail) in
                            {4204}let (o_client_hello'_8: msg,i_client_hello'_8: msg,i_cr'_8: bytes32,i_kex_data'_8: bitstring,psk_data'_18: bitstring) = (if v_907 then (if v_910 then (CH(o_cr_8,o_offer_22),i_client_hello_14,i_cr_6,i_kex_data_6,psk_data_22) else fail-any) else fail-any) in
                            {4205}out(io, o_client_hello'_8);
                            {4206}in(io, server_hello'_16: msg);
                            {4207}let SH(B32(sr24'_8: bytes24,sr8'_8: bytes8),params'_8: params) = server_hello'_16 in
                            {4209}let sh_modified_11: msg = SH(B32(sr24'_8,zero8),params'_8) in
                            {4208}let cur_log_IN1_HRR_IN2_8: bitstring = (cur_log_IN1_HRR_2,i_client_hello'_8) in
                            {4210}let cur_log_sh_11: bitstring = (cur_log_IN1_HRR_IN2_8,sh_modified_11) in
                            {4211}let transcript_ech_conf_11: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_11)) in
                            {4212}let v_911: bool = not-caught-fail(transcript_ech_conf_11) in
                            {4214}let k_96: bitstring = (if v_911 then catch-fail(b32_2_b(get_random(i_client_hello'_8))) else caught-fail) in
                            {4215}let v_912: bool = not-caught-fail(k_96) in
                            {4213}let s_96: bitstring = (if v_911 then zero else caught-fail) in
                            {4216}let k_97: bitstring = (if v_911 then catch-fail((if v_912 then hmac(@6_backend_h,s_96,k_96) else fail-any)) else caught-fail) in
                            {4217}let v_913: bool = not-caught-fail(k_97) in
                            {4218}let l_253: label = (if v_913 then ech_accept_confirmation else caught-fail) in
                            {4219}let x_285: bitstring = (if v_913 then (l_253,cur_log_sh_11) else caught-fail) in
                            {4220}let sr8_14: bytes8 = (if v_911 then catch-fail(crop_into_bytes8((if v_913 then hmac(@6_backend_h,k_97,x_285) else fail-any))) else caught-fail) in
                            {4221}let v_914: bool = not-caught-fail(sr8_14) in
                            {4222}if (B32(sr24'_8,sr8'_8) = (if v_911 then (if v_914 then B32(sr24'_8,sr8_14) else fail-any) else fail-any)) then
                            {4223}let (x_286: bitstring,g_24: group) = i_kex_data'_8 in
                            {4224}let (psk_offer_20: preSharedKey,id_offer_20: identityPsk,es_offer_20: bitstring,is_safe_offer_20: bool) = psk_data'_18 in
                            {4225}event Client_PSKOffer(@6_id_client,psk_offer_20,id_offer_20,is_safe_offer_20);
                            {4226}event Client_Rand_client(@6_id_client,i_cr'_8);
                            {4227}event Client_DH_client(@6_id_client,dh_pub(g_24,x_286));
                            {4228}event Client_server_domain(@6_id_client,backend_dom);
                            {4229}let SH(sr_28: bytes32,mode_23: params) = server_hello'_16 in
                            {4230}event Client_Rand_server(@6_id_client,sr_28);
                            {4231}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_24,gy_21: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_42: preSharedKeyExt) = mode_23 in
                            (
                                {4233}event Client_DH_server(@6_id_client,gy_21);
                                {4234}let v_915: bool = (psk_ext_42 = empty_psk_ext) in
                                {4235}let psk_101: preSharedKey = (if v_915 then NoPsk else caught-fail) in
                                {4237}let k_98: bitstring = (if v_915 then catch-fail(psk2b(psk_101)) else caught-fail) in
                                {4238}let v_916: bool = not-caught-fail(k_98) in
                                {4236}let s_97: bitstring = (if v_915 then zero else caught-fail) in
                                {4239}let early_secret_67: bitstring = (if v_915 then catch-fail((if v_916 then hmac(@6_backend_h,s_97,k_98) else fail-any)) else caught-fail) in
                                {4240}let v_917: bool = not-caught-fail(early_secret_67) in
                                {4242}let m_87: bitstring = (if v_917 then zero else caught-fail) in
                                {4243}let h_239: bitstring = (if v_917 then catch-fail(hash(@6_backend_h,m_87)) else caught-fail) in
                                {4244}let v_918: bool = not-caught-fail(h_239) in
                                {4241}let l_254: label = (if v_917 then tls13_ext_res_binder else caught-fail) in
                                {4245}let x_287: bitstring = (if v_918 then (l_254,h_239) else caught-fail) in
                                {4246}let binder_key_45: bitstring = (if v_917 then catch-fail((if v_918 then hmac(@6_backend_h,early_secret_67,x_287) else fail-any)) else caught-fail) in
                                {4247}let v_919: bool = not-caught-fail(binder_key_45) in
                                {4248}let v_920: bitstring = (if v_915 then catch-fail((if v_917 then (if v_919 then (early_secret_67,binder_key_45) else fail-any) else fail-any)) else caught-fail) in
                                {4249}let v_921: bool = (not-caught-fail(v_920) && success?(1-proj-2-tuple(v_920))) in
                                {4250}let kb_45: mac_key = (if v_921 then 2-proj-2-tuple(v_920) else caught-fail) in
                                {4251}let es_65: bitstring = (if v_921 then 1-proj-2-tuple(v_920) else caught-fail) in
                                {4252}let v_922: bitstring = (if not(v_915) then catch-fail(psk_data'_18) else caught-fail) in
                                {4253}let v_923: bool = (not-caught-fail(v_922) && success?(1-proj-4-tuple(v_922))) in
                                {4254}let is_safe_38: bool = (if v_923 then 4-proj-4-tuple(v_922) else caught-fail) in
                                {4255}let es_66: bitstring = (if v_923 then 3-proj-4-tuple(v_922) else caught-fail) in
                                {4256}let id_46: identityPsk = (if v_923 then 2-proj-4-tuple(v_922) else caught-fail) in
                                {4257}let psk_102: preSharedKey = (if v_923 then 1-proj-4-tuple(v_922) else caught-fail) in
                                {4258}let (psk_103: preSharedKey,early_secret_68: bitstring,valid_20: bool,safe_psk_23: bool) = (if v_915 then (if v_921 then (NoPsk,es_65,true,false) else fail-any) else (if v_923 then (psk_102,es_66,((psk_102 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_42)),is_safe_38) else fail-any)) in
                                {4259}event Client_PSKChoosen(@6_id_client,psk_103,safe_psk_23);
                                {4260}if valid_20 then
                                (
                                    {4263}new s_98[]: seed;
                                    {4261}let gxy_41: element = catch-fail(dh_decap_fun(g_24,gy_21,x_286)) in
                                    {4262}let v_924: bool = not-caught-fail(gxy_41) in
                                    {4264}let gxy_42: element = (if v_924 then gxy_41 else dh_f(s_98)) in
                                    {4265}event Client_DH_gxy(@6_id_client,gxy_42);
                                    {4267}let m_88: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                    {4268}let v_925: bool = not-caught-fail(m_88) in
                                    {4269}let h_240: bitstring = (if v_925 then catch-fail(hash(@6_backend_h,m_88)) else caught-fail) in
                                    {4270}let v_926: bool = not-caught-fail(h_240) in
                                    {4266}let l_255: label = tls13_derived in
                                    {4271}let x_288: bitstring = (if v_926 then (l_255,h_240) else caught-fail) in
                                    {4272}let extra_44: bitstring = catch-fail((if v_925 then (if v_926 then hmac(@6_backend_h,early_secret_68,x_288) else fail-any) else fail-any)) in
                                    {4273}let v_927: bool = not-caught-fail(extra_44) in
                                    {4274}let handshake_secret_21: bitstring = (if v_927 then hmac(@6_backend_h,extra_44,gxy_42) else fail-any) in
                                    {4276}let m_89: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                    {4277}let v_928: bool = not-caught-fail(m_89) in
                                    {4278}let h_241: bitstring = (if v_928 then catch-fail(hash(@6_backend_h,m_89)) else caught-fail) in
                                    {4279}let v_929: bool = not-caught-fail(h_241) in
                                    {4275}let l_256: label = tls13_derived in
                                    {4280}let x_289: bitstring = (if v_929 then (l_256,h_241) else caught-fail) in
                                    {4281}let extra_45: bitstring = catch-fail((if v_928 then (if v_929 then hmac(@6_backend_h,handshake_secret_21,x_289) else fail-any) else fail-any)) in
                                    {4282}let v_930: bool = not-caught-fail(extra_45) in
                                    {4283}let k_99: bitstring = (if v_930 then zero else caught-fail) in
                                    {4284}let master_secret_49: bitstring = (if v_930 then catch-fail(hmac(@6_backend_h,handshake_secret_21,k_99)) else caught-fail) in
                                    {4285}let v_931: bool = not-caught-fail(master_secret_49) in
                                    {4232}let cur_log2_44: bitstring = (cur_log_IN1_HRR_IN2_8,server_hello'_16) in
                                    {4287}let h_242: bitstring = (if v_931 then catch-fail(hash(@6_backend_h,cur_log2_44)) else caught-fail) in
                                    {4288}let v_932: bool = not-caught-fail(h_242) in
                                    {4286}let l_257: label = (if v_931 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {4289}let x_290: bitstring = (if v_932 then (l_257,h_242) else caught-fail) in
                                    {4290}let client_hts_21: bitstring = (if v_931 then catch-fail((if v_932 then hmac(@6_backend_h,handshake_secret_21,x_290) else fail-any)) else caught-fail) in
                                    {4291}let v_933: bool = not-caught-fail(client_hts_21) in
                                    {4293}let h_243: bitstring = (if v_933 then catch-fail(hash(@6_backend_h,cur_log2_44)) else caught-fail) in
                                    {4294}let v_934: bool = not-caught-fail(h_243) in
                                    {4292}let l_258: label = (if v_933 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {4295}let x_291: bitstring = (if v_934 then (l_258,h_243) else caught-fail) in
                                    {4296}let server_hts_21: bitstring = (if v_933 then catch-fail((if v_934 then hmac(@6_backend_h,handshake_secret_21,x_291) else fail-any)) else caught-fail) in
                                    {4297}let v_935: bool = not-caught-fail(server_hts_21) in
                                    {4299}let h_244: bitstring = (if v_935 then zero else caught-fail) in
                                    {4298}let l_259: label = (if v_935 then tls13_key else caught-fail) in
                                    {4300}let x_292: bitstring = (if v_935 then (l_259,h_244) else caught-fail) in
                                    {4301}let client_wkh_21: bitstring = (if v_935 then catch-fail(hmac(@6_backend_h,client_hts_21,x_292)) else caught-fail) in
                                    {4302}let v_936: bool = not-caught-fail(client_wkh_21) in
                                    {4304}let h_245: bitstring = (if v_936 then zero else caught-fail) in
                                    {4303}let l_260: label = (if v_936 then tls13_key else caught-fail) in
                                    {4305}let x_293: bitstring = (if v_936 then (l_260,h_245) else caught-fail) in
                                    {4306}let server_wkh_21: bitstring = (if v_936 then catch-fail(hmac(@6_backend_h,server_hts_21,x_293)) else caught-fail) in
                                    {4307}let v_937: bool = not-caught-fail(server_wkh_21) in
                                    {4309}let h_246: bitstring = (if v_937 then zero else caught-fail) in
                                    {4308}let l_261: label = (if v_937 then tls13_finished else caught-fail) in
                                    {4310}let x_294: bitstring = (if v_937 then (l_261,h_246) else caught-fail) in
                                    {4311}let client_fk_21: bitstring = (if v_937 then catch-fail(hmac(@6_backend_h,client_hts_21,x_294)) else caught-fail) in
                                    {4312}let v_938: bool = not-caught-fail(client_fk_21) in
                                    {4314}let h_247: bitstring = (if v_938 then zero else caught-fail) in
                                    {4313}let l_262: label = (if v_938 then tls13_finished else caught-fail) in
                                    {4315}let x_295: bitstring = (if v_938 then (l_262,h_247) else caught-fail) in
                                    {4316}let server_fk_21: bitstring = (if v_938 then catch-fail(hmac(@6_backend_h,server_hts_21,x_295)) else caught-fail) in
                                    {4317}let v_939: bool = not-caught-fail(server_fk_21) in
                                    {4318}let (master_secret_50: bitstring,chk_28: aead_key,shk_27: aead_key,cfin_28: mac_key,sfin_27: mac_key) = (if v_930 then (if v_931 then (if v_933 then (if v_935 then (if v_936 then (if v_937 then (if v_938 then (if v_939 then (master_secret_49,client_wkh_21,server_wkh_21,client_fk_21,server_fk_21) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {4319}event Client_chk(@6_id_client,chk_28);
                                    {4320}event Client_shk(@6_id_client,shk_27);
                                    {4321}event Client_cfin(@6_id_client,cfin_28);
                                    {4322}event Client_sfin(@6_id_client,sfin_27);
                                    {4323}in(io, enc_ee_msg_20: bitstring);
                                    {4324}let ee_msg_21: msg = aead_dec(@6_backend_a,shk_27,0,zero,enc_ee_msg_20) in
                                    {4325}let EE(ech_ee_20: echExt,extra_ee_20: extraExt) = ee_msg_21 in
                                    {4326}let cur_log2_45: bitstring = (cur_log2_44,ee_msg_21) in
                                    {4327}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_8,sr_28,@6_backend_h,@6_backend_a,c_dom_5,backend_dom,psk_103,safe_psk_23,@6_comp_psk,master_secret_50,chk_28,0,shk_27,1,cfin_28,sfin_27,cur_log2_45)))
                                )
                                else
                                    {4328}out(io, illegal_parameter)
                            )
                            else
                                {4329}out(io, illegal_parameter)
                    )
                    else
                        {4331}let ech_config(config_id_7: configId,ech_g_9: group,pkR_9: element,o_dom_7: domain,ech_h_9: hash_alg,ech_a_9: aead_alg) = ech_conf in
                        {4332}new rand24_11[]: bytes24;
                        {4333}new rand8_11[]: bytes8;
                        {4336}new s_99[]: seed;
                        {4337}let gx_23: element = dh_pub(@6_tls_g,dh_k(s_99)) in
                        {4338}let v_940: bitstring = (dh_k(s_99),gx_23) in
                        {4339}let v_941: bool = success?(1-proj-2-tuple(v_940)) in
                        {4340}let gx_24: element = (if v_941 then 2-proj-2-tuple(v_940) else caught-fail) in
                        {4341}let x_296: bitstring = (if v_941 then 1-proj-2-tuple(v_940) else caught-fail) in
                        {4335}let send_key_share_8: bool = true in
                        {4342}let kex_10: kex_alg = (if v_941 then (if send_key_share_8 then DHE_kex(@6_tls_g,gx_24) else DHE_group(@6_tls_g)) else caught-fail) in
                        {4343}let (o_kex_ext_6: keyShareExt,kex_data_2: bitstring) = (if v_941 then (client_kex_ext(kex_10),(x_296,@6_tls_g)) else fail-any) in
                        {4334}let o_cr_9: bytes32 = B32(rand24_11,rand8_11) in
                        {4330}let cur_log_OU1_HRR_2: bitstring = ((zero,o_client_hello_2),server_hello_3) in
                        {4344}if @6_use_grease then
                        (
                            {4346}if @6_use_psk then
                            (
                                {4345}let extra_46: extraExt = empty_extra_ext in
                                {4347}let (psk_104: preSharedKey,id_47: identityPsk,old_es_6: bitstring,is_safe_39: bool) = psk_data_19 in
                                (
                                    {4351}let k_100: bitstring = catch-fail(psk2b(psk_104)) in
                                    {4352}let v_942: bool = not-caught-fail(k_100) in
                                    {4350}let s_100: bitstring = zero in
                                    {4353}let early_secret_69: bitstring = catch-fail((if v_942 then hmac(@6_tls_h,s_100,k_100) else fail-any)) in
                                    {4354}let v_943: bool = not-caught-fail(early_secret_69) in
                                    {4356}let m_90: bitstring = (if v_943 then zero else caught-fail) in
                                    {4357}let h_248: bitstring = (if v_943 then catch-fail(hash(@6_tls_h,m_90)) else caught-fail) in
                                    {4358}let v_944: bool = not-caught-fail(h_248) in
                                    {4355}let l_263: label = (if v_943 then tls13_ext_res_binder else caught-fail) in
                                    {4359}let x_297: bitstring = (if v_944 then (l_263,h_248) else caught-fail) in
                                    {4360}let binder_key_46: bitstring = (if v_943 then catch-fail((if v_944 then hmac(@6_tls_h,early_secret_69,x_297) else fail-any)) else caught-fail) in
                                    {4361}let v_945: bool = not-caught-fail(binder_key_46) in
                                    {4362}let v_946: bitstring = catch-fail((if v_943 then (if v_945 then (early_secret_69,binder_key_46) else fail-any) else fail-any)) in
                                    {4363}let v_947: bool = (not-caught-fail(v_946) && success?(1-proj-2-tuple(v_946))) in
                                    {4364}let kb_46: mac_key = (if v_947 then 2-proj-2-tuple(v_946) else caught-fail) in
                                    {4365}let es_67: bitstring = (if v_947 then 1-proj-2-tuple(v_946) else caught-fail) in
                                    {4348}let offer_14: params = nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_6,SNI(o_dom_7),o_ech_ext_11,extra_46,trunc_client_psk_ext(id_47)) in
                                    {4349}let cur_log'_14: bitstring = (cur_log_OU1_HRR_2,CH(o_cr_9,offer_14)) in
                                    {4366}let binders_13: bitstring = (if v_947 then catch-fail(hmac(@6_tls_h,kb_46,cur_log'_14)) else caught-fail) in
                                    {4367}let v_948: bool = not-caught-fail(binders_13) in
                                    {4368}let v_949: bitstring = catch-fail((if v_947 then (if v_948 then (client_psk_ext(id_47,binders_13),(psk_104,id_47,es_67,is_safe_39)) else fail-any) else fail-any)) in
                                    {4369}let v_950: bool = (not-caught-fail(v_949) && success?(1-proj-2-tuple(v_949))) in
                                    {4370}let psk_data_23: bitstring = (if v_950 then 2-proj-2-tuple(v_949) else caught-fail) in
                                    {4371}let psk_ext_43: preSharedKeyExt = (if v_950 then 1-proj-2-tuple(v_949) else caught-fail) in
                                    {4372}let o_offer_23: params = (if v_950 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_6,SNI(o_dom_7),o_ech_ext_11,empty_extra_ext,psk_ext_43) else caught-fail) in
                                    {4373}let (client_hello'_8: msg,cr'_8: bytes32,kex_data'_8: bitstring,psk_data'_19: bitstring) = (if v_950 then (CH(o_cr_9,o_offer_23),o_cr_9,kex_data_2,psk_data_23) else fail-any) in
                                    {4374}out(io, client_hello'_8);
                                    {4376}in(io, server_hello'_17: msg);
                                    {4377}let SH(sr'_8: bytes32,mode'_8: params) = server_hello'_17 in
                                    (
                                        {4378}if (sr'_8 = B32(HRR24,HRR8)) then
                                            {4379}out(io, unexpected_message)
                                        else
                                            {4380}let (x_298: bitstring,g_25: group) = kex_data'_8 in
                                            {4381}let (psk_offer_21: preSharedKey,id_offer_21: identityPsk,es_offer_21: bitstring,is_safe_offer_21: bool) = psk_data'_19 in
                                            {4382}event Client_PSKOffer(@6_id_client,psk_offer_21,id_offer_21,is_safe_offer_21);
                                            {4383}event Client_Rand_client(@6_id_client,cr'_8);
                                            {4384}event Client_DH_client(@6_id_client,dh_pub(g_25,x_298));
                                            {4385}event Client_server_domain(@6_id_client,o_dom);
                                            {4386}let SH(sr_29: bytes32,mode_24: params) = server_hello'_17 in
                                            {4387}event Client_Rand_server(@6_id_client,sr_29);
                                            {4388}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_25,gy_22: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_44: preSharedKeyExt) = mode_24 in
                                            (
                                                {4390}event Client_DH_server(@6_id_client,gy_22);
                                                {4391}let v_951: bool = (psk_ext_44 = empty_psk_ext) in
                                                {4392}let psk_105: preSharedKey = (if v_951 then NoPsk else caught-fail) in
                                                {4394}let k_101: bitstring = (if v_951 then catch-fail(psk2b(psk_105)) else caught-fail) in
                                                {4395}let v_952: bool = not-caught-fail(k_101) in
                                                {4393}let s_101: bitstring = (if v_951 then zero else caught-fail) in
                                                {4396}let early_secret_70: bitstring = (if v_951 then catch-fail((if v_952 then hmac(@6_tls_h,s_101,k_101) else fail-any)) else caught-fail) in
                                                {4397}let v_953: bool = not-caught-fail(early_secret_70) in
                                                {4399}let m_91: bitstring = (if v_953 then zero else caught-fail) in
                                                {4400}let h_249: bitstring = (if v_953 then catch-fail(hash(@6_tls_h,m_91)) else caught-fail) in
                                                {4401}let v_954: bool = not-caught-fail(h_249) in
                                                {4398}let l_264: label = (if v_953 then tls13_ext_res_binder else caught-fail) in
                                                {4402}let x_299: bitstring = (if v_954 then (l_264,h_249) else caught-fail) in
                                                {4403}let binder_key_47: bitstring = (if v_953 then catch-fail((if v_954 then hmac(@6_tls_h,early_secret_70,x_299) else fail-any)) else caught-fail) in
                                                {4404}let v_955: bool = not-caught-fail(binder_key_47) in
                                                {4405}let v_956: bitstring = (if v_951 then catch-fail((if v_953 then (if v_955 then (early_secret_70,binder_key_47) else fail-any) else fail-any)) else caught-fail) in
                                                {4406}let v_957: bool = (not-caught-fail(v_956) && success?(1-proj-2-tuple(v_956))) in
                                                {4407}let kb_47: mac_key = (if v_957 then 2-proj-2-tuple(v_956) else caught-fail) in
                                                {4408}let es_68: bitstring = (if v_957 then 1-proj-2-tuple(v_956) else caught-fail) in
                                                {4409}let v_958: bitstring = (if not(v_951) then catch-fail(psk_data'_19) else caught-fail) in
                                                {4410}let v_959: bool = (not-caught-fail(v_958) && success?(1-proj-4-tuple(v_958))) in
                                                {4411}let is_safe_40: bool = (if v_959 then 4-proj-4-tuple(v_958) else caught-fail) in
                                                {4412}let es_69: bitstring = (if v_959 then 3-proj-4-tuple(v_958) else caught-fail) in
                                                {4413}let id_48: identityPsk = (if v_959 then 2-proj-4-tuple(v_958) else caught-fail) in
                                                {4414}let psk_106: preSharedKey = (if v_959 then 1-proj-4-tuple(v_958) else caught-fail) in
                                                {4415}let (psk_107: preSharedKey,early_secret_71: bitstring,valid_21: bool,safe_psk_24: bool) = (if v_951 then (if v_957 then (NoPsk,es_68,true,false) else fail-any) else (if v_959 then (psk_106,es_69,((psk_106 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_44)),is_safe_40) else fail-any)) in
                                                {4416}event Client_PSKChoosen(@6_id_client,psk_107,safe_psk_24);
                                                {4417}if valid_21 then
                                                (
                                                    {4420}new s_102[]: seed;
                                                    {4418}let gxy_43: element = catch-fail(dh_decap_fun(g_25,gy_22,x_298)) in
                                                    {4419}let v_960: bool = not-caught-fail(gxy_43) in
                                                    {4421}let gxy_44: element = (if v_960 then gxy_43 else dh_f(s_102)) in
                                                    {4422}event Client_DH_gxy(@6_id_client,gxy_44);
                                                    {4424}let m_92: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {4425}let v_961: bool = not-caught-fail(m_92) in
                                                    {4426}let h_250: bitstring = (if v_961 then catch-fail(hash(@6_tls_h,m_92)) else caught-fail) in
                                                    {4427}let v_962: bool = not-caught-fail(h_250) in
                                                    {4423}let l_265: label = tls13_derived in
                                                    {4428}let x_300: bitstring = (if v_962 then (l_265,h_250) else caught-fail) in
                                                    {4429}let extra_47: bitstring = catch-fail((if v_961 then (if v_962 then hmac(@6_tls_h,early_secret_71,x_300) else fail-any) else fail-any)) in
                                                    {4430}let v_963: bool = not-caught-fail(extra_47) in
                                                    {4431}let handshake_secret_22: bitstring = (if v_963 then hmac(@6_tls_h,extra_47,gxy_44) else fail-any) in
                                                    {4433}let m_93: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {4434}let v_964: bool = not-caught-fail(m_93) in
                                                    {4435}let h_251: bitstring = (if v_964 then catch-fail(hash(@6_tls_h,m_93)) else caught-fail) in
                                                    {4436}let v_965: bool = not-caught-fail(h_251) in
                                                    {4432}let l_266: label = tls13_derived in
                                                    {4437}let x_301: bitstring = (if v_965 then (l_266,h_251) else caught-fail) in
                                                    {4438}let extra_48: bitstring = catch-fail((if v_964 then (if v_965 then hmac(@6_tls_h,handshake_secret_22,x_301) else fail-any) else fail-any)) in
                                                    {4439}let v_966: bool = not-caught-fail(extra_48) in
                                                    {4440}let k_102: bitstring = (if v_966 then zero else caught-fail) in
                                                    {4441}let master_secret_51: bitstring = (if v_966 then catch-fail(hmac(@6_tls_h,handshake_secret_22,k_102)) else caught-fail) in
                                                    {4442}let v_967: bool = not-caught-fail(master_secret_51) in
                                                    {4375}let cur_log_OU1_HRR_OU2_8: bitstring = (cur_log_OU1_HRR_2,client_hello'_8) in
                                                    {4389}let cur_log2_46: bitstring = (cur_log_OU1_HRR_OU2_8,server_hello'_17) in
                                                    {4444}let h_252: bitstring = (if v_967 then catch-fail(hash(@6_tls_h,cur_log2_46)) else caught-fail) in
                                                    {4445}let v_968: bool = not-caught-fail(h_252) in
                                                    {4443}let l_267: label = (if v_967 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {4446}let x_302: bitstring = (if v_968 then (l_267,h_252) else caught-fail) in
                                                    {4447}let client_hts_22: bitstring = (if v_967 then catch-fail((if v_968 then hmac(@6_tls_h,handshake_secret_22,x_302) else fail-any)) else caught-fail) in
                                                    {4448}let v_969: bool = not-caught-fail(client_hts_22) in
                                                    {4450}let h_253: bitstring = (if v_969 then catch-fail(hash(@6_tls_h,cur_log2_46)) else caught-fail) in
                                                    {4451}let v_970: bool = not-caught-fail(h_253) in
                                                    {4449}let l_268: label = (if v_969 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {4452}let x_303: bitstring = (if v_970 then (l_268,h_253) else caught-fail) in
                                                    {4453}let server_hts_22: bitstring = (if v_969 then catch-fail((if v_970 then hmac(@6_tls_h,handshake_secret_22,x_303) else fail-any)) else caught-fail) in
                                                    {4454}let v_971: bool = not-caught-fail(server_hts_22) in
                                                    {4456}let h_254: bitstring = (if v_971 then zero else caught-fail) in
                                                    {4455}let l_269: label = (if v_971 then tls13_key else caught-fail) in
                                                    {4457}let x_304: bitstring = (if v_971 then (l_269,h_254) else caught-fail) in
                                                    {4458}let client_wkh_22: bitstring = (if v_971 then catch-fail(hmac(@6_tls_h,client_hts_22,x_304)) else caught-fail) in
                                                    {4459}let v_972: bool = not-caught-fail(client_wkh_22) in
                                                    {4461}let h_255: bitstring = (if v_972 then zero else caught-fail) in
                                                    {4460}let l_270: label = (if v_972 then tls13_key else caught-fail) in
                                                    {4462}let x_305: bitstring = (if v_972 then (l_270,h_255) else caught-fail) in
                                                    {4463}let server_wkh_22: bitstring = (if v_972 then catch-fail(hmac(@6_tls_h,server_hts_22,x_305)) else caught-fail) in
                                                    {4464}let v_973: bool = not-caught-fail(server_wkh_22) in
                                                    {4466}let h_256: bitstring = (if v_973 then zero else caught-fail) in
                                                    {4465}let l_271: label = (if v_973 then tls13_finished else caught-fail) in
                                                    {4467}let x_306: bitstring = (if v_973 then (l_271,h_256) else caught-fail) in
                                                    {4468}let client_fk_22: bitstring = (if v_973 then catch-fail(hmac(@6_tls_h,client_hts_22,x_306)) else caught-fail) in
                                                    {4469}let v_974: bool = not-caught-fail(client_fk_22) in
                                                    {4471}let h_257: bitstring = (if v_974 then zero else caught-fail) in
                                                    {4470}let l_272: label = (if v_974 then tls13_finished else caught-fail) in
                                                    {4472}let x_307: bitstring = (if v_974 then (l_272,h_257) else caught-fail) in
                                                    {4473}let server_fk_22: bitstring = (if v_974 then catch-fail(hmac(@6_tls_h,server_hts_22,x_307)) else caught-fail) in
                                                    {4474}let v_975: bool = not-caught-fail(server_fk_22) in
                                                    {4475}let (master_secret_52: bitstring,chk_29: aead_key,shk_28: aead_key,cfin_29: mac_key,sfin_28: mac_key) = (if v_966 then (if v_967 then (if v_969 then (if v_971 then (if v_972 then (if v_973 then (if v_974 then (if v_975 then (master_secret_51,client_wkh_22,server_wkh_22,client_fk_22,server_fk_22) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {4476}event Client_chk(@6_id_client,chk_29);
                                                    {4477}event Client_shk(@6_id_client,shk_28);
                                                    {4478}event Client_cfin(@6_id_client,cfin_29);
                                                    {4479}event Client_sfin(@6_id_client,sfin_28);
                                                    {4480}in(io, enc_ee_msg_21: bitstring);
                                                    {4481}let ee_msg_22: msg = aead_dec(@6_tls_a,shk_28,0,zero,enc_ee_msg_21) in
                                                    {4482}let EE(ech_ee_21: echExt,extra_ee_21: extraExt) = ee_msg_22 in
                                                    {4483}let cur_log2_47: bitstring = (cur_log2_46,ee_msg_22) in
                                                    {4484}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_8,sr_29,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_107,safe_psk_24,@6_comp_psk,master_secret_52,chk_29,0,shk_28,1,cfin_29,sfin_28,cur_log2_47)))
                                                )
                                                else
                                                    {4485}out(io, illegal_parameter)
                                            )
                                            else
                                                {4486}out(io, illegal_parameter)
                                    )
                                    else
                                        {4487}out(io, unexpected_message)
                                )
                                else
                                    {4637}get pre_shared_keys(c_dom'_8: domain,=o_dom_7,=@6_tls_h,id_49: identityPsk,psk_108: preSharedKey,idP_10: idProc,is_safe_41: bool) in
                                    {4488}event Selected_one_time_used_psk(@6_id_client,psk_108,is_safe_41);
                                    {4489}event Selected_psk(c_dom_5,c_dom'_8,idP_10,is_safe_41);
                                    {4490}event Selected_psk_no_missmatch(@6_id_client,o_dom_7,@6_tls_h,psk_108,id_49);
                                    {4491}event Selected_psk_with_ID(c_dom_5,c_dom'_8,id_49,idP_10,is_safe_41);
                                    {4492}let v_976: bitstring = (id_49,psk_108,is_safe_41) in
                                    {4493}let v_977: bool = success?(1-proj-3-tuple(v_976)) in
                                    {4494}let is_safe_42: bool = (if v_977 then 3-proj-3-tuple(v_976) else caught-fail) in
                                    {4495}let psk_109: preSharedKey = (if v_977 then 2-proj-3-tuple(v_976) else caught-fail) in
                                    {4496}let id_50: identityPsk = (if v_977 then 1-proj-3-tuple(v_976) else caught-fail) in
                                    {4500}let k_103: bitstring = (if v_977 then catch-fail(psk2b(psk_109)) else caught-fail) in
                                    {4501}let v_978: bool = not-caught-fail(k_103) in
                                    {4499}let s_103: bitstring = (if v_977 then zero else caught-fail) in
                                    {4502}let early_secret_72: bitstring = (if v_977 then catch-fail((if v_978 then hmac(@6_tls_h,s_103,k_103) else fail-any)) else caught-fail) in
                                    {4503}let v_979: bool = not-caught-fail(early_secret_72) in
                                    {4505}let m_94: bitstring = (if v_979 then zero else caught-fail) in
                                    {4506}let h_258: bitstring = (if v_979 then catch-fail(hash(@6_tls_h,m_94)) else caught-fail) in
                                    {4507}let v_980: bool = not-caught-fail(h_258) in
                                    {4504}let l_273: label = (if v_979 then tls13_ext_res_binder else caught-fail) in
                                    {4508}let x_308: bitstring = (if v_980 then (l_273,h_258) else caught-fail) in
                                    {4509}let binder_key_48: bitstring = (if v_979 then catch-fail((if v_980 then hmac(@6_tls_h,early_secret_72,x_308) else fail-any)) else caught-fail) in
                                    {4510}let v_981: bool = not-caught-fail(binder_key_48) in
                                    {4511}let v_982: bitstring = (if v_977 then catch-fail((if v_979 then (if v_981 then (early_secret_72,binder_key_48) else fail-any) else fail-any)) else caught-fail) in
                                    {4512}let v_983: bool = (not-caught-fail(v_982) && success?(1-proj-2-tuple(v_982))) in
                                    {4513}let kb_48: mac_key = (if v_983 then 2-proj-2-tuple(v_982) else caught-fail) in
                                    {4514}let es_70: bitstring = (if v_983 then 1-proj-2-tuple(v_982) else caught-fail) in
                                    {4497}let offer_15: params = (if v_977 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_6,SNI(o_dom_7),o_ech_ext_11,extra_46,trunc_client_psk_ext(id_50)) else caught-fail) in
                                    {4498}let cur_log'_15: bitstring = (if v_977 then (cur_log_OU1_HRR_2,CH(o_cr_9,offer_15)) else caught-fail) in
                                    {4515}let binders_14: bitstring = (if v_983 then catch-fail(hmac(@6_tls_h,kb_48,cur_log'_15)) else caught-fail) in
                                    {4516}let v_984: bool = not-caught-fail(binders_14) in
                                    {4517}let v_985: bitstring = catch-fail((if v_977 then (if v_983 then (if v_984 then (client_psk_ext(id_50,binders_14),(psk_109,id_50,es_70,is_safe_42)) else fail-any) else fail-any) else fail-any)) in
                                    {4518}let v_986: bool = (not-caught-fail(v_985) && success?(1-proj-2-tuple(v_985))) in
                                    {4519}let psk_data_24: bitstring = (if v_986 then 2-proj-2-tuple(v_985) else caught-fail) in
                                    {4520}let psk_ext_45: preSharedKeyExt = (if v_986 then 1-proj-2-tuple(v_985) else caught-fail) in
                                    {4521}let o_offer_24: params = (if v_986 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_6,SNI(o_dom_7),o_ech_ext_11,empty_extra_ext,psk_ext_45) else caught-fail) in
                                    {4522}let (client_hello'_9: msg,cr'_9: bytes32,kex_data'_9: bitstring,psk_data'_20: bitstring) = (if v_986 then (CH(o_cr_9,o_offer_24),o_cr_9,kex_data_2,psk_data_24) else fail-any) in
                                    {4523}out(io, client_hello'_9);
                                    {4525}in(io, server_hello'_18: msg);
                                    {4526}let SH(sr'_9: bytes32,mode'_9: params) = server_hello'_18 in
                                    (
                                        {4527}if (sr'_9 = B32(HRR24,HRR8)) then
                                            {4528}out(io, unexpected_message)
                                        else
                                            {4529}let (x_309: bitstring,g_26: group) = kex_data'_9 in
                                            {4530}let (psk_offer_22: preSharedKey,id_offer_22: identityPsk,es_offer_22: bitstring,is_safe_offer_22: bool) = psk_data'_20 in
                                            {4531}event Client_PSKOffer(@6_id_client,psk_offer_22,id_offer_22,is_safe_offer_22);
                                            {4532}event Client_Rand_client(@6_id_client,cr'_9);
                                            {4533}event Client_DH_client(@6_id_client,dh_pub(g_26,x_309));
                                            {4534}event Client_server_domain(@6_id_client,o_dom);
                                            {4535}let SH(sr_30: bytes32,mode_25: params) = server_hello'_18 in
                                            {4536}event Client_Rand_server(@6_id_client,sr_30);
                                            {4537}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_26,gy_23: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_46: preSharedKeyExt) = mode_25 in
                                            (
                                                {4539}event Client_DH_server(@6_id_client,gy_23);
                                                {4540}let v_987: bool = (psk_ext_46 = empty_psk_ext) in
                                                {4541}let psk_110: preSharedKey = (if v_987 then NoPsk else caught-fail) in
                                                {4543}let k_104: bitstring = (if v_987 then catch-fail(psk2b(psk_110)) else caught-fail) in
                                                {4544}let v_988: bool = not-caught-fail(k_104) in
                                                {4542}let s_104: bitstring = (if v_987 then zero else caught-fail) in
                                                {4545}let early_secret_73: bitstring = (if v_987 then catch-fail((if v_988 then hmac(@6_tls_h,s_104,k_104) else fail-any)) else caught-fail) in
                                                {4546}let v_989: bool = not-caught-fail(early_secret_73) in
                                                {4548}let m_95: bitstring = (if v_989 then zero else caught-fail) in
                                                {4549}let h_259: bitstring = (if v_989 then catch-fail(hash(@6_tls_h,m_95)) else caught-fail) in
                                                {4550}let v_990: bool = not-caught-fail(h_259) in
                                                {4547}let l_274: label = (if v_989 then tls13_ext_res_binder else caught-fail) in
                                                {4551}let x_310: bitstring = (if v_990 then (l_274,h_259) else caught-fail) in
                                                {4552}let binder_key_49: bitstring = (if v_989 then catch-fail((if v_990 then hmac(@6_tls_h,early_secret_73,x_310) else fail-any)) else caught-fail) in
                                                {4553}let v_991: bool = not-caught-fail(binder_key_49) in
                                                {4554}let v_992: bitstring = (if v_987 then catch-fail((if v_989 then (if v_991 then (early_secret_73,binder_key_49) else fail-any) else fail-any)) else caught-fail) in
                                                {4555}let v_993: bool = (not-caught-fail(v_992) && success?(1-proj-2-tuple(v_992))) in
                                                {4556}let kb_49: mac_key = (if v_993 then 2-proj-2-tuple(v_992) else caught-fail) in
                                                {4557}let es_71: bitstring = (if v_993 then 1-proj-2-tuple(v_992) else caught-fail) in
                                                {4558}let v_994: bitstring = (if not(v_987) then catch-fail(psk_data'_20) else caught-fail) in
                                                {4559}let v_995: bool = (not-caught-fail(v_994) && success?(1-proj-4-tuple(v_994))) in
                                                {4560}let is_safe_43: bool = (if v_995 then 4-proj-4-tuple(v_994) else caught-fail) in
                                                {4561}let es_72: bitstring = (if v_995 then 3-proj-4-tuple(v_994) else caught-fail) in
                                                {4562}let id_51: identityPsk = (if v_995 then 2-proj-4-tuple(v_994) else caught-fail) in
                                                {4563}let psk_111: preSharedKey = (if v_995 then 1-proj-4-tuple(v_994) else caught-fail) in
                                                {4564}let (psk_112: preSharedKey,early_secret_74: bitstring,valid_22: bool,safe_psk_25: bool) = (if v_987 then (if v_993 then (NoPsk,es_71,true,false) else fail-any) else (if v_995 then (psk_111,es_72,((psk_111 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_46)),is_safe_43) else fail-any)) in
                                                {4565}event Client_PSKChoosen(@6_id_client,psk_112,safe_psk_25);
                                                {4566}if valid_22 then
                                                (
                                                    {4569}new s_105[]: seed;
                                                    {4567}let gxy_45: element = catch-fail(dh_decap_fun(g_26,gy_23,x_309)) in
                                                    {4568}let v_996: bool = not-caught-fail(gxy_45) in
                                                    {4570}let gxy_46: element = (if v_996 then gxy_45 else dh_f(s_105)) in
                                                    {4571}event Client_DH_gxy(@6_id_client,gxy_46);
                                                    {4573}let m_96: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {4574}let v_997: bool = not-caught-fail(m_96) in
                                                    {4575}let h_260: bitstring = (if v_997 then catch-fail(hash(@6_tls_h,m_96)) else caught-fail) in
                                                    {4576}let v_998: bool = not-caught-fail(h_260) in
                                                    {4572}let l_275: label = tls13_derived in
                                                    {4577}let x_311: bitstring = (if v_998 then (l_275,h_260) else caught-fail) in
                                                    {4578}let extra_49: bitstring = catch-fail((if v_997 then (if v_998 then hmac(@6_tls_h,early_secret_74,x_311) else fail-any) else fail-any)) in
                                                    {4579}let v_999: bool = not-caught-fail(extra_49) in
                                                    {4580}let handshake_secret_23: bitstring = (if v_999 then hmac(@6_tls_h,extra_49,gxy_46) else fail-any) in
                                                    {4582}let m_97: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {4583}let v_1000: bool = not-caught-fail(m_97) in
                                                    {4584}let h_261: bitstring = (if v_1000 then catch-fail(hash(@6_tls_h,m_97)) else caught-fail) in
                                                    {4585}let v_1001: bool = not-caught-fail(h_261) in
                                                    {4581}let l_276: label = tls13_derived in
                                                    {4586}let x_312: bitstring = (if v_1001 then (l_276,h_261) else caught-fail) in
                                                    {4587}let extra_50: bitstring = catch-fail((if v_1000 then (if v_1001 then hmac(@6_tls_h,handshake_secret_23,x_312) else fail-any) else fail-any)) in
                                                    {4588}let v_1002: bool = not-caught-fail(extra_50) in
                                                    {4589}let k_105: bitstring = (if v_1002 then zero else caught-fail) in
                                                    {4590}let master_secret_53: bitstring = (if v_1002 then catch-fail(hmac(@6_tls_h,handshake_secret_23,k_105)) else caught-fail) in
                                                    {4591}let v_1003: bool = not-caught-fail(master_secret_53) in
                                                    {4524}let cur_log_OU1_HRR_OU2_9: bitstring = (cur_log_OU1_HRR_2,client_hello'_9) in
                                                    {4538}let cur_log2_48: bitstring = (cur_log_OU1_HRR_OU2_9,server_hello'_18) in
                                                    {4593}let h_262: bitstring = (if v_1003 then catch-fail(hash(@6_tls_h,cur_log2_48)) else caught-fail) in
                                                    {4594}let v_1004: bool = not-caught-fail(h_262) in
                                                    {4592}let l_277: label = (if v_1003 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {4595}let x_313: bitstring = (if v_1004 then (l_277,h_262) else caught-fail) in
                                                    {4596}let client_hts_23: bitstring = (if v_1003 then catch-fail((if v_1004 then hmac(@6_tls_h,handshake_secret_23,x_313) else fail-any)) else caught-fail) in
                                                    {4597}let v_1005: bool = not-caught-fail(client_hts_23) in
                                                    {4599}let h_263: bitstring = (if v_1005 then catch-fail(hash(@6_tls_h,cur_log2_48)) else caught-fail) in
                                                    {4600}let v_1006: bool = not-caught-fail(h_263) in
                                                    {4598}let l_278: label = (if v_1005 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {4601}let x_314: bitstring = (if v_1006 then (l_278,h_263) else caught-fail) in
                                                    {4602}let server_hts_23: bitstring = (if v_1005 then catch-fail((if v_1006 then hmac(@6_tls_h,handshake_secret_23,x_314) else fail-any)) else caught-fail) in
                                                    {4603}let v_1007: bool = not-caught-fail(server_hts_23) in
                                                    {4605}let h_264: bitstring = (if v_1007 then zero else caught-fail) in
                                                    {4604}let l_279: label = (if v_1007 then tls13_key else caught-fail) in
                                                    {4606}let x_315: bitstring = (if v_1007 then (l_279,h_264) else caught-fail) in
                                                    {4607}let client_wkh_23: bitstring = (if v_1007 then catch-fail(hmac(@6_tls_h,client_hts_23,x_315)) else caught-fail) in
                                                    {4608}let v_1008: bool = not-caught-fail(client_wkh_23) in
                                                    {4610}let h_265: bitstring = (if v_1008 then zero else caught-fail) in
                                                    {4609}let l_280: label = (if v_1008 then tls13_key else caught-fail) in
                                                    {4611}let x_316: bitstring = (if v_1008 then (l_280,h_265) else caught-fail) in
                                                    {4612}let server_wkh_23: bitstring = (if v_1008 then catch-fail(hmac(@6_tls_h,server_hts_23,x_316)) else caught-fail) in
                                                    {4613}let v_1009: bool = not-caught-fail(server_wkh_23) in
                                                    {4615}let h_266: bitstring = (if v_1009 then zero else caught-fail) in
                                                    {4614}let l_281: label = (if v_1009 then tls13_finished else caught-fail) in
                                                    {4616}let x_317: bitstring = (if v_1009 then (l_281,h_266) else caught-fail) in
                                                    {4617}let client_fk_23: bitstring = (if v_1009 then catch-fail(hmac(@6_tls_h,client_hts_23,x_317)) else caught-fail) in
                                                    {4618}let v_1010: bool = not-caught-fail(client_fk_23) in
                                                    {4620}let h_267: bitstring = (if v_1010 then zero else caught-fail) in
                                                    {4619}let l_282: label = (if v_1010 then tls13_finished else caught-fail) in
                                                    {4621}let x_318: bitstring = (if v_1010 then (l_282,h_267) else caught-fail) in
                                                    {4622}let server_fk_23: bitstring = (if v_1010 then catch-fail(hmac(@6_tls_h,server_hts_23,x_318)) else caught-fail) in
                                                    {4623}let v_1011: bool = not-caught-fail(server_fk_23) in
                                                    {4624}let (master_secret_54: bitstring,chk_30: aead_key,shk_29: aead_key,cfin_30: mac_key,sfin_29: mac_key) = (if v_1002 then (if v_1003 then (if v_1005 then (if v_1007 then (if v_1008 then (if v_1009 then (if v_1010 then (if v_1011 then (master_secret_53,client_wkh_23,server_wkh_23,client_fk_23,server_fk_23) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {4625}event Client_chk(@6_id_client,chk_30);
                                                    {4626}event Client_shk(@6_id_client,shk_29);
                                                    {4627}event Client_cfin(@6_id_client,cfin_30);
                                                    {4628}event Client_sfin(@6_id_client,sfin_29);
                                                    {4629}in(io, enc_ee_msg_22: bitstring);
                                                    {4630}let ee_msg_23: msg = aead_dec(@6_tls_a,shk_29,0,zero,enc_ee_msg_22) in
                                                    {4631}let EE(ech_ee_22: echExt,extra_ee_22: extraExt) = ee_msg_23 in
                                                    {4632}let cur_log2_49: bitstring = (cur_log2_48,ee_msg_23) in
                                                    {4633}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_9,sr_30,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_112,safe_psk_25,@6_comp_psk,master_secret_54,chk_30,0,shk_29,1,cfin_30,sfin_29,cur_log2_49)))
                                                )
                                                else
                                                    {4634}out(io, illegal_parameter)
                                            )
                                            else
                                                {4635}out(io, illegal_parameter)
                                    )
                                    else
                                        {4636}out(io, unexpected_message)
                            )
                            else
                                {4638}let psk_113: preSharedKey = NoPsk in
                                {4640}let k_106: bitstring = catch-fail(psk2b(psk_113)) in
                                {4641}let v_1012: bool = not-caught-fail(k_106) in
                                {4639}let s_106: bitstring = zero in
                                {4642}let early_secret_75: bitstring = catch-fail((if v_1012 then hmac(@6_tls_h,s_106,k_106) else fail-any)) in
                                {4643}let v_1013: bool = not-caught-fail(early_secret_75) in
                                {4645}let m_98: bitstring = (if v_1013 then zero else caught-fail) in
                                {4646}let h_268: bitstring = (if v_1013 then catch-fail(hash(@6_tls_h,m_98)) else caught-fail) in
                                {4647}let v_1014: bool = not-caught-fail(h_268) in
                                {4644}let l_283: label = (if v_1013 then tls13_ext_res_binder else caught-fail) in
                                {4648}let x_319: bitstring = (if v_1014 then (l_283,h_268) else caught-fail) in
                                {4649}let binder_key_50: bitstring = (if v_1013 then catch-fail((if v_1014 then hmac(@6_tls_h,early_secret_75,x_319) else fail-any)) else caught-fail) in
                                {4650}let v_1015: bool = not-caught-fail(binder_key_50) in
                                {4651}let v_1016: bitstring = catch-fail((if v_1013 then (if v_1015 then (early_secret_75,binder_key_50) else fail-any) else fail-any)) in
                                {4652}let v_1017: bool = (not-caught-fail(v_1016) && success?(1-proj-2-tuple(v_1016))) in
                                {4653}let kb_50: mac_key = (if v_1017 then 2-proj-2-tuple(v_1016) else caught-fail) in
                                {4654}let es_73: bitstring = (if v_1017 then 1-proj-2-tuple(v_1016) else caught-fail) in
                                {4655}let v_1018: bitstring = catch-fail((if v_1017 then (empty_psk_ext,(NoPsk,zero,es_73,false)) else fail-any)) in
                                {4656}let v_1019: bool = (not-caught-fail(v_1018) && success?(1-proj-2-tuple(v_1018))) in
                                {4657}let psk_data_25: bitstring = (if v_1019 then 2-proj-2-tuple(v_1018) else caught-fail) in
                                {4658}let psk_ext_47: preSharedKeyExt = (if v_1019 then 1-proj-2-tuple(v_1018) else caught-fail) in
                                {4659}let o_offer_25: params = (if v_1019 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_6,SNI(o_dom_7),o_ech_ext_11,empty_extra_ext,psk_ext_47) else caught-fail) in
                                {4660}let (client_hello'_10: msg,cr'_10: bytes32,kex_data'_10: bitstring,psk_data'_21: bitstring) = (if v_1019 then (CH(o_cr_9,o_offer_25),o_cr_9,kex_data_2,psk_data_25) else fail-any) in
                                {4661}out(io, client_hello'_10);
                                {4663}in(io, server_hello'_19: msg);
                                {4664}let SH(sr'_10: bytes32,mode'_10: params) = server_hello'_19 in
                                (
                                    {4665}if (sr'_10 = B32(HRR24,HRR8)) then
                                        {4666}out(io, unexpected_message)
                                    else
                                        {4667}let (x_320: bitstring,g_27: group) = kex_data'_10 in
                                        {4668}let (psk_offer_23: preSharedKey,id_offer_23: identityPsk,es_offer_23: bitstring,is_safe_offer_23: bool) = psk_data'_21 in
                                        {4669}event Client_PSKOffer(@6_id_client,psk_offer_23,id_offer_23,is_safe_offer_23);
                                        {4670}event Client_Rand_client(@6_id_client,cr'_10);
                                        {4671}event Client_DH_client(@6_id_client,dh_pub(g_27,x_320));
                                        {4672}event Client_server_domain(@6_id_client,o_dom);
                                        {4673}let SH(sr_31: bytes32,mode_26: params) = server_hello'_19 in
                                        {4674}event Client_Rand_server(@6_id_client,sr_31);
                                        {4675}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_27,gy_24: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_48: preSharedKeyExt) = mode_26 in
                                        (
                                            {4677}event Client_DH_server(@6_id_client,gy_24);
                                            {4678}let v_1020: bool = (psk_ext_48 = empty_psk_ext) in
                                            {4679}let psk_114: preSharedKey = (if v_1020 then NoPsk else caught-fail) in
                                            {4681}let k_107: bitstring = (if v_1020 then catch-fail(psk2b(psk_114)) else caught-fail) in
                                            {4682}let v_1021: bool = not-caught-fail(k_107) in
                                            {4680}let s_107: bitstring = (if v_1020 then zero else caught-fail) in
                                            {4683}let early_secret_76: bitstring = (if v_1020 then catch-fail((if v_1021 then hmac(@6_tls_h,s_107,k_107) else fail-any)) else caught-fail) in
                                            {4684}let v_1022: bool = not-caught-fail(early_secret_76) in
                                            {4686}let m_99: bitstring = (if v_1022 then zero else caught-fail) in
                                            {4687}let h_269: bitstring = (if v_1022 then catch-fail(hash(@6_tls_h,m_99)) else caught-fail) in
                                            {4688}let v_1023: bool = not-caught-fail(h_269) in
                                            {4685}let l_284: label = (if v_1022 then tls13_ext_res_binder else caught-fail) in
                                            {4689}let x_321: bitstring = (if v_1023 then (l_284,h_269) else caught-fail) in
                                            {4690}let binder_key_51: bitstring = (if v_1022 then catch-fail((if v_1023 then hmac(@6_tls_h,early_secret_76,x_321) else fail-any)) else caught-fail) in
                                            {4691}let v_1024: bool = not-caught-fail(binder_key_51) in
                                            {4692}let v_1025: bitstring = (if v_1020 then catch-fail((if v_1022 then (if v_1024 then (early_secret_76,binder_key_51) else fail-any) else fail-any)) else caught-fail) in
                                            {4693}let v_1026: bool = (not-caught-fail(v_1025) && success?(1-proj-2-tuple(v_1025))) in
                                            {4694}let kb_51: mac_key = (if v_1026 then 2-proj-2-tuple(v_1025) else caught-fail) in
                                            {4695}let es_74: bitstring = (if v_1026 then 1-proj-2-tuple(v_1025) else caught-fail) in
                                            {4696}let v_1027: bitstring = (if not(v_1020) then catch-fail(psk_data'_21) else caught-fail) in
                                            {4697}let v_1028: bool = (not-caught-fail(v_1027) && success?(1-proj-4-tuple(v_1027))) in
                                            {4698}let is_safe_44: bool = (if v_1028 then 4-proj-4-tuple(v_1027) else caught-fail) in
                                            {4699}let es_75: bitstring = (if v_1028 then 3-proj-4-tuple(v_1027) else caught-fail) in
                                            {4700}let id_52: identityPsk = (if v_1028 then 2-proj-4-tuple(v_1027) else caught-fail) in
                                            {4701}let psk_115: preSharedKey = (if v_1028 then 1-proj-4-tuple(v_1027) else caught-fail) in
                                            {4702}let (psk_116: preSharedKey,early_secret_77: bitstring,valid_23: bool,safe_psk_26: bool) = (if v_1020 then (if v_1026 then (NoPsk,es_74,true,false) else fail-any) else (if v_1028 then (psk_115,es_75,((psk_115 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_48)),is_safe_44) else fail-any)) in
                                            {4703}event Client_PSKChoosen(@6_id_client,psk_116,safe_psk_26);
                                            {4704}if valid_23 then
                                            (
                                                {4707}new s_108[]: seed;
                                                {4705}let gxy_47: element = catch-fail(dh_decap_fun(g_27,gy_24,x_320)) in
                                                {4706}let v_1029: bool = not-caught-fail(gxy_47) in
                                                {4708}let gxy_48: element = (if v_1029 then gxy_47 else dh_f(s_108)) in
                                                {4709}event Client_DH_gxy(@6_id_client,gxy_48);
                                                {4711}let m_100: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                {4712}let v_1030: bool = not-caught-fail(m_100) in
                                                {4713}let h_270: bitstring = (if v_1030 then catch-fail(hash(@6_tls_h,m_100)) else caught-fail) in
                                                {4714}let v_1031: bool = not-caught-fail(h_270) in
                                                {4710}let l_285: label = tls13_derived in
                                                {4715}let x_322: bitstring = (if v_1031 then (l_285,h_270) else caught-fail) in
                                                {4716}let extra_51: bitstring = catch-fail((if v_1030 then (if v_1031 then hmac(@6_tls_h,early_secret_77,x_322) else fail-any) else fail-any)) in
                                                {4717}let v_1032: bool = not-caught-fail(extra_51) in
                                                {4718}let handshake_secret_24: bitstring = (if v_1032 then hmac(@6_tls_h,extra_51,gxy_48) else fail-any) in
                                                {4720}let m_101: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                {4721}let v_1033: bool = not-caught-fail(m_101) in
                                                {4722}let h_271: bitstring = (if v_1033 then catch-fail(hash(@6_tls_h,m_101)) else caught-fail) in
                                                {4723}let v_1034: bool = not-caught-fail(h_271) in
                                                {4719}let l_286: label = tls13_derived in
                                                {4724}let x_323: bitstring = (if v_1034 then (l_286,h_271) else caught-fail) in
                                                {4725}let extra_52: bitstring = catch-fail((if v_1033 then (if v_1034 then hmac(@6_tls_h,handshake_secret_24,x_323) else fail-any) else fail-any)) in
                                                {4726}let v_1035: bool = not-caught-fail(extra_52) in
                                                {4727}let k_108: bitstring = (if v_1035 then zero else caught-fail) in
                                                {4728}let master_secret_55: bitstring = (if v_1035 then catch-fail(hmac(@6_tls_h,handshake_secret_24,k_108)) else caught-fail) in
                                                {4729}let v_1036: bool = not-caught-fail(master_secret_55) in
                                                {4662}let cur_log_OU1_HRR_OU2_10: bitstring = (cur_log_OU1_HRR_2,client_hello'_10) in
                                                {4676}let cur_log2_50: bitstring = (cur_log_OU1_HRR_OU2_10,server_hello'_19) in
                                                {4731}let h_272: bitstring = (if v_1036 then catch-fail(hash(@6_tls_h,cur_log2_50)) else caught-fail) in
                                                {4732}let v_1037: bool = not-caught-fail(h_272) in
                                                {4730}let l_287: label = (if v_1036 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {4733}let x_324: bitstring = (if v_1037 then (l_287,h_272) else caught-fail) in
                                                {4734}let client_hts_24: bitstring = (if v_1036 then catch-fail((if v_1037 then hmac(@6_tls_h,handshake_secret_24,x_324) else fail-any)) else caught-fail) in
                                                {4735}let v_1038: bool = not-caught-fail(client_hts_24) in
                                                {4737}let h_273: bitstring = (if v_1038 then catch-fail(hash(@6_tls_h,cur_log2_50)) else caught-fail) in
                                                {4738}let v_1039: bool = not-caught-fail(h_273) in
                                                {4736}let l_288: label = (if v_1038 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {4739}let x_325: bitstring = (if v_1039 then (l_288,h_273) else caught-fail) in
                                                {4740}let server_hts_24: bitstring = (if v_1038 then catch-fail((if v_1039 then hmac(@6_tls_h,handshake_secret_24,x_325) else fail-any)) else caught-fail) in
                                                {4741}let v_1040: bool = not-caught-fail(server_hts_24) in
                                                {4743}let h_274: bitstring = (if v_1040 then zero else caught-fail) in
                                                {4742}let l_289: label = (if v_1040 then tls13_key else caught-fail) in
                                                {4744}let x_326: bitstring = (if v_1040 then (l_289,h_274) else caught-fail) in
                                                {4745}let client_wkh_24: bitstring = (if v_1040 then catch-fail(hmac(@6_tls_h,client_hts_24,x_326)) else caught-fail) in
                                                {4746}let v_1041: bool = not-caught-fail(client_wkh_24) in
                                                {4748}let h_275: bitstring = (if v_1041 then zero else caught-fail) in
                                                {4747}let l_290: label = (if v_1041 then tls13_key else caught-fail) in
                                                {4749}let x_327: bitstring = (if v_1041 then (l_290,h_275) else caught-fail) in
                                                {4750}let server_wkh_24: bitstring = (if v_1041 then catch-fail(hmac(@6_tls_h,server_hts_24,x_327)) else caught-fail) in
                                                {4751}let v_1042: bool = not-caught-fail(server_wkh_24) in
                                                {4753}let h_276: bitstring = (if v_1042 then zero else caught-fail) in
                                                {4752}let l_291: label = (if v_1042 then tls13_finished else caught-fail) in
                                                {4754}let x_328: bitstring = (if v_1042 then (l_291,h_276) else caught-fail) in
                                                {4755}let client_fk_24: bitstring = (if v_1042 then catch-fail(hmac(@6_tls_h,client_hts_24,x_328)) else caught-fail) in
                                                {4756}let v_1043: bool = not-caught-fail(client_fk_24) in
                                                {4758}let h_277: bitstring = (if v_1043 then zero else caught-fail) in
                                                {4757}let l_292: label = (if v_1043 then tls13_finished else caught-fail) in
                                                {4759}let x_329: bitstring = (if v_1043 then (l_292,h_277) else caught-fail) in
                                                {4760}let server_fk_24: bitstring = (if v_1043 then catch-fail(hmac(@6_tls_h,server_hts_24,x_329)) else caught-fail) in
                                                {4761}let v_1044: bool = not-caught-fail(server_fk_24) in
                                                {4762}let (master_secret_56: bitstring,chk_31: aead_key,shk_30: aead_key,cfin_31: mac_key,sfin_30: mac_key) = (if v_1035 then (if v_1036 then (if v_1038 then (if v_1040 then (if v_1041 then (if v_1042 then (if v_1043 then (if v_1044 then (master_secret_55,client_wkh_24,server_wkh_24,client_fk_24,server_fk_24) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {4763}event Client_chk(@6_id_client,chk_31);
                                                {4764}event Client_shk(@6_id_client,shk_30);
                                                {4765}event Client_cfin(@6_id_client,cfin_31);
                                                {4766}event Client_sfin(@6_id_client,sfin_30);
                                                {4767}in(io, enc_ee_msg_23: bitstring);
                                                {4768}let ee_msg_24: msg = aead_dec(@6_tls_a,shk_30,0,zero,enc_ee_msg_23) in
                                                {4769}let EE(ech_ee_23: echExt,extra_ee_23: extraExt) = ee_msg_24 in
                                                {4770}let cur_log2_51: bitstring = (cur_log2_50,ee_msg_24) in
                                                {4771}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_10,sr_31,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_116,safe_psk_26,@6_comp_psk,master_secret_56,chk_31,0,shk_30,1,cfin_31,sfin_30,cur_log2_51)))
                                            )
                                            else
                                                {4772}out(io, illegal_parameter)
                                        )
                                        else
                                            {4773}out(io, illegal_parameter)
                                )
                                else
                                    {4774}out(io, unexpected_message)
                        )
                        else
                            {4775}let psk_117: preSharedKey = NoPsk in
                            {4777}let k_109: bitstring = catch-fail(psk2b(psk_117)) in
                            {4778}let v_1045: bool = not-caught-fail(k_109) in
                            {4776}let s_109: bitstring = zero in
                            {4779}let early_secret_78: bitstring = catch-fail((if v_1045 then hmac(@6_tls_h,s_109,k_109) else fail-any)) in
                            {4780}let v_1046: bool = not-caught-fail(early_secret_78) in
                            {4782}let m_102: bitstring = (if v_1046 then zero else caught-fail) in
                            {4783}let h_278: bitstring = (if v_1046 then catch-fail(hash(@6_tls_h,m_102)) else caught-fail) in
                            {4784}let v_1047: bool = not-caught-fail(h_278) in
                            {4781}let l_293: label = (if v_1046 then tls13_ext_res_binder else caught-fail) in
                            {4785}let x_330: bitstring = (if v_1047 then (l_293,h_278) else caught-fail) in
                            {4786}let binder_key_52: bitstring = (if v_1046 then catch-fail((if v_1047 then hmac(@6_tls_h,early_secret_78,x_330) else fail-any)) else caught-fail) in
                            {4787}let v_1048: bool = not-caught-fail(binder_key_52) in
                            {4788}let v_1049: bitstring = catch-fail((if v_1046 then (if v_1048 then (early_secret_78,binder_key_52) else fail-any) else fail-any)) in
                            {4789}let v_1050: bool = (not-caught-fail(v_1049) && success?(1-proj-2-tuple(v_1049))) in
                            {4790}let kb_52: mac_key = (if v_1050 then 2-proj-2-tuple(v_1049) else caught-fail) in
                            {4791}let es_76: bitstring = (if v_1050 then 1-proj-2-tuple(v_1049) else caught-fail) in
                            {4792}let v_1051: preSharedKeyExt = (if v_1050 then catch-fail(o_psk_ext_11) else caught-fail) in
                            {4793}let v_1052: bool = (not-caught-fail(v_1051) && success?(1-proj-client_psk_ext(v_1051))) in
                            {4794}let fake_binder_14: bitstring = (if v_1052 then 2-proj-client_psk_ext(v_1051) else caught-fail) in
                            {4795}let fake_id_14: identityPsk = (if v_1052 then 1-proj-client_psk_ext(v_1051) else caught-fail) in
                            {4796}new fake_binder'_2[]: bitstring;
                            {4797}let v_1053: bitstring = catch-fail((if v_1050 then (if v_1052 then (client_psk_ext(fake_id_14,fake_binder'_2),(NoPsk,zero,es_76,false)) else (empty_psk_ext,(NoPsk,zero,es_76,false))) else fail-any)) in
                            {4798}let v_1054: bool = (not-caught-fail(v_1053) && success?(1-proj-2-tuple(v_1053))) in
                            {4799}let psk_data_26: bitstring = (if v_1054 then 2-proj-2-tuple(v_1053) else caught-fail) in
                            {4800}let psk_ext_49: preSharedKeyExt = (if v_1054 then 1-proj-2-tuple(v_1053) else caught-fail) in
                            {4801}let o_offer_26: params = (if v_1054 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_6,SNI(o_dom_7),o_ech_ext_11,empty_extra_ext,psk_ext_49) else caught-fail) in
                            {4802}let (client_hello'_11: msg,cr'_11: bytes32,kex_data'_11: bitstring,psk_data'_22: bitstring) = (if v_1054 then (CH(o_cr_9,o_offer_26),o_cr_9,kex_data_2,psk_data_26) else fail-any) in
                            {4803}out(io, client_hello'_11);
                            {4805}in(io, server_hello'_20: msg);
                            {4806}let SH(sr'_11: bytes32,mode'_11: params) = server_hello'_20 in
                            (
                                {4807}if (sr'_11 = B32(HRR24,HRR8)) then
                                    {4808}out(io, unexpected_message)
                                else
                                    {4809}let (x_331: bitstring,g_28: group) = kex_data'_11 in
                                    {4810}let (psk_offer_24: preSharedKey,id_offer_24: identityPsk,es_offer_24: bitstring,is_safe_offer_24: bool) = psk_data'_22 in
                                    {4811}event Client_PSKOffer(@6_id_client,psk_offer_24,id_offer_24,is_safe_offer_24);
                                    {4812}event Client_Rand_client(@6_id_client,cr'_11);
                                    {4813}event Client_DH_client(@6_id_client,dh_pub(g_28,x_331));
                                    {4814}event Client_server_domain(@6_id_client,o_dom);
                                    {4815}let SH(sr_32: bytes32,mode_27: params) = server_hello'_20 in
                                    {4816}event Client_Rand_server(@6_id_client,sr_32);
                                    {4817}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_28,gy_25: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_50: preSharedKeyExt) = mode_27 in
                                    (
                                        {4819}event Client_DH_server(@6_id_client,gy_25);
                                        {4820}let v_1055: bool = (psk_ext_50 = empty_psk_ext) in
                                        {4821}let psk_118: preSharedKey = (if v_1055 then NoPsk else caught-fail) in
                                        {4823}let k_110: bitstring = (if v_1055 then catch-fail(psk2b(psk_118)) else caught-fail) in
                                        {4824}let v_1056: bool = not-caught-fail(k_110) in
                                        {4822}let s_110: bitstring = (if v_1055 then zero else caught-fail) in
                                        {4825}let early_secret_79: bitstring = (if v_1055 then catch-fail((if v_1056 then hmac(@6_tls_h,s_110,k_110) else fail-any)) else caught-fail) in
                                        {4826}let v_1057: bool = not-caught-fail(early_secret_79) in
                                        {4828}let m_103: bitstring = (if v_1057 then zero else caught-fail) in
                                        {4829}let h_279: bitstring = (if v_1057 then catch-fail(hash(@6_tls_h,m_103)) else caught-fail) in
                                        {4830}let v_1058: bool = not-caught-fail(h_279) in
                                        {4827}let l_294: label = (if v_1057 then tls13_ext_res_binder else caught-fail) in
                                        {4831}let x_332: bitstring = (if v_1058 then (l_294,h_279) else caught-fail) in
                                        {4832}let binder_key_53: bitstring = (if v_1057 then catch-fail((if v_1058 then hmac(@6_tls_h,early_secret_79,x_332) else fail-any)) else caught-fail) in
                                        {4833}let v_1059: bool = not-caught-fail(binder_key_53) in
                                        {4834}let v_1060: bitstring = (if v_1055 then catch-fail((if v_1057 then (if v_1059 then (early_secret_79,binder_key_53) else fail-any) else fail-any)) else caught-fail) in
                                        {4835}let v_1061: bool = (not-caught-fail(v_1060) && success?(1-proj-2-tuple(v_1060))) in
                                        {4836}let kb_53: mac_key = (if v_1061 then 2-proj-2-tuple(v_1060) else caught-fail) in
                                        {4837}let es_77: bitstring = (if v_1061 then 1-proj-2-tuple(v_1060) else caught-fail) in
                                        {4838}let v_1062: bitstring = (if not(v_1055) then catch-fail(psk_data'_22) else caught-fail) in
                                        {4839}let v_1063: bool = (not-caught-fail(v_1062) && success?(1-proj-4-tuple(v_1062))) in
                                        {4840}let is_safe_45: bool = (if v_1063 then 4-proj-4-tuple(v_1062) else caught-fail) in
                                        {4841}let es_78: bitstring = (if v_1063 then 3-proj-4-tuple(v_1062) else caught-fail) in
                                        {4842}let id_53: identityPsk = (if v_1063 then 2-proj-4-tuple(v_1062) else caught-fail) in
                                        {4843}let psk_119: preSharedKey = (if v_1063 then 1-proj-4-tuple(v_1062) else caught-fail) in
                                        {4844}let (psk_120: preSharedKey,early_secret_80: bitstring,valid_24: bool,safe_psk_27: bool) = (if v_1055 then (if v_1061 then (NoPsk,es_77,true,false) else fail-any) else (if v_1063 then (psk_119,es_78,((psk_119 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_50)),is_safe_45) else fail-any)) in
                                        {4845}event Client_PSKChoosen(@6_id_client,psk_120,safe_psk_27);
                                        {4846}if valid_24 then
                                        (
                                            {4849}new s_111[]: seed;
                                            {4847}let gxy_49: element = catch-fail(dh_decap_fun(g_28,gy_25,x_331)) in
                                            {4848}let v_1064: bool = not-caught-fail(gxy_49) in
                                            {4850}let gxy_50: element = (if v_1064 then gxy_49 else dh_f(s_111)) in
                                            {4851}event Client_DH_gxy(@6_id_client,gxy_50);
                                            {4853}let m_104: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                            {4854}let v_1065: bool = not-caught-fail(m_104) in
                                            {4855}let h_280: bitstring = (if v_1065 then catch-fail(hash(@6_tls_h,m_104)) else caught-fail) in
                                            {4856}let v_1066: bool = not-caught-fail(h_280) in
                                            {4852}let l_295: label = tls13_derived in
                                            {4857}let x_333: bitstring = (if v_1066 then (l_295,h_280) else caught-fail) in
                                            {4858}let extra_53: bitstring = catch-fail((if v_1065 then (if v_1066 then hmac(@6_tls_h,early_secret_80,x_333) else fail-any) else fail-any)) in
                                            {4859}let v_1067: bool = not-caught-fail(extra_53) in
                                            {4860}let handshake_secret_25: bitstring = (if v_1067 then hmac(@6_tls_h,extra_53,gxy_50) else fail-any) in
                                            {4862}let m_105: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                            {4863}let v_1068: bool = not-caught-fail(m_105) in
                                            {4864}let h_281: bitstring = (if v_1068 then catch-fail(hash(@6_tls_h,m_105)) else caught-fail) in
                                            {4865}let v_1069: bool = not-caught-fail(h_281) in
                                            {4861}let l_296: label = tls13_derived in
                                            {4866}let x_334: bitstring = (if v_1069 then (l_296,h_281) else caught-fail) in
                                            {4867}let extra_54: bitstring = catch-fail((if v_1068 then (if v_1069 then hmac(@6_tls_h,handshake_secret_25,x_334) else fail-any) else fail-any)) in
                                            {4868}let v_1070: bool = not-caught-fail(extra_54) in
                                            {4869}let k_111: bitstring = (if v_1070 then zero else caught-fail) in
                                            {4870}let master_secret_57: bitstring = (if v_1070 then catch-fail(hmac(@6_tls_h,handshake_secret_25,k_111)) else caught-fail) in
                                            {4871}let v_1071: bool = not-caught-fail(master_secret_57) in
                                            {4804}let cur_log_OU1_HRR_OU2_11: bitstring = (cur_log_OU1_HRR_2,client_hello'_11) in
                                            {4818}let cur_log2_52: bitstring = (cur_log_OU1_HRR_OU2_11,server_hello'_20) in
                                            {4873}let h_282: bitstring = (if v_1071 then catch-fail(hash(@6_tls_h,cur_log2_52)) else caught-fail) in
                                            {4874}let v_1072: bool = not-caught-fail(h_282) in
                                            {4872}let l_297: label = (if v_1071 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {4875}let x_335: bitstring = (if v_1072 then (l_297,h_282) else caught-fail) in
                                            {4876}let client_hts_25: bitstring = (if v_1071 then catch-fail((if v_1072 then hmac(@6_tls_h,handshake_secret_25,x_335) else fail-any)) else caught-fail) in
                                            {4877}let v_1073: bool = not-caught-fail(client_hts_25) in
                                            {4879}let h_283: bitstring = (if v_1073 then catch-fail(hash(@6_tls_h,cur_log2_52)) else caught-fail) in
                                            {4880}let v_1074: bool = not-caught-fail(h_283) in
                                            {4878}let l_298: label = (if v_1073 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {4881}let x_336: bitstring = (if v_1074 then (l_298,h_283) else caught-fail) in
                                            {4882}let server_hts_25: bitstring = (if v_1073 then catch-fail((if v_1074 then hmac(@6_tls_h,handshake_secret_25,x_336) else fail-any)) else caught-fail) in
                                            {4883}let v_1075: bool = not-caught-fail(server_hts_25) in
                                            {4885}let h_284: bitstring = (if v_1075 then zero else caught-fail) in
                                            {4884}let l_299: label = (if v_1075 then tls13_key else caught-fail) in
                                            {4886}let x_337: bitstring = (if v_1075 then (l_299,h_284) else caught-fail) in
                                            {4887}let client_wkh_25: bitstring = (if v_1075 then catch-fail(hmac(@6_tls_h,client_hts_25,x_337)) else caught-fail) in
                                            {4888}let v_1076: bool = not-caught-fail(client_wkh_25) in
                                            {4890}let h_285: bitstring = (if v_1076 then zero else caught-fail) in
                                            {4889}let l_300: label = (if v_1076 then tls13_key else caught-fail) in
                                            {4891}let x_338: bitstring = (if v_1076 then (l_300,h_285) else caught-fail) in
                                            {4892}let server_wkh_25: bitstring = (if v_1076 then catch-fail(hmac(@6_tls_h,server_hts_25,x_338)) else caught-fail) in
                                            {4893}let v_1077: bool = not-caught-fail(server_wkh_25) in
                                            {4895}let h_286: bitstring = (if v_1077 then zero else caught-fail) in
                                            {4894}let l_301: label = (if v_1077 then tls13_finished else caught-fail) in
                                            {4896}let x_339: bitstring = (if v_1077 then (l_301,h_286) else caught-fail) in
                                            {4897}let client_fk_25: bitstring = (if v_1077 then catch-fail(hmac(@6_tls_h,client_hts_25,x_339)) else caught-fail) in
                                            {4898}let v_1078: bool = not-caught-fail(client_fk_25) in
                                            {4900}let h_287: bitstring = (if v_1078 then zero else caught-fail) in
                                            {4899}let l_302: label = (if v_1078 then tls13_finished else caught-fail) in
                                            {4901}let x_340: bitstring = (if v_1078 then (l_302,h_287) else caught-fail) in
                                            {4902}let server_fk_25: bitstring = (if v_1078 then catch-fail(hmac(@6_tls_h,server_hts_25,x_340)) else caught-fail) in
                                            {4903}let v_1079: bool = not-caught-fail(server_fk_25) in
                                            {4904}let (master_secret_58: bitstring,chk_32: aead_key,shk_31: aead_key,cfin_32: mac_key,sfin_31: mac_key) = (if v_1070 then (if v_1071 then (if v_1073 then (if v_1075 then (if v_1076 then (if v_1077 then (if v_1078 then (if v_1079 then (master_secret_57,client_wkh_25,server_wkh_25,client_fk_25,server_fk_25) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {4905}event Client_chk(@6_id_client,chk_32);
                                            {4906}event Client_shk(@6_id_client,shk_31);
                                            {4907}event Client_cfin(@6_id_client,cfin_32);
                                            {4908}event Client_sfin(@6_id_client,sfin_31);
                                            {4909}in(io, enc_ee_msg_24: bitstring);
                                            {4910}let ee_msg_25: msg = aead_dec(@6_tls_a,shk_31,0,zero,enc_ee_msg_24) in
                                            {4911}let EE(ech_ee_24: echExt,extra_ee_24: extraExt) = ee_msg_25 in
                                            {4912}let cur_log2_53: bitstring = (cur_log2_52,ee_msg_25) in
                                            {4913}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_11,sr_32,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_120,safe_psk_27,@6_comp_psk,master_secret_58,chk_32,0,shk_31,1,cfin_32,sfin_31,cur_log2_53)))
                                        )
                                        else
                                            {4914}out(io, illegal_parameter)
                                    )
                                    else
                                        {4915}out(io, illegal_parameter)
                            )
                            else
                                {4916}out(io, unexpected_message)
                )
                else
                    {4918}let sh_modified_12: msg = SH(B32(sr24_4,zero8),mode_20) in
                    {4917}let cur_log_18: bitstring = (zero,i_client_hello_11) in
                    {4919}let cur_log_sh_12: bitstring = (cur_log_18,sh_modified_12) in
                    {4920}let transcript_ech_conf_12: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_12)) in
                    {4921}let v_1080: bool = not-caught-fail(transcript_ech_conf_12) in
                    {4923}let k_112: bitstring = (if v_1080 then catch-fail(b32_2_b(get_random(i_client_hello_11))) else caught-fail) in
                    {4924}let v_1081: bool = not-caught-fail(k_112) in
                    {4922}let s_112: bitstring = (if v_1080 then zero else caught-fail) in
                    {4925}let k_113: bitstring = (if v_1080 then catch-fail((if v_1081 then hmac(@6_backend_h,s_112,k_112) else fail-any)) else caught-fail) in
                    {4926}let v_1082: bool = not-caught-fail(k_113) in
                    {4927}let l_303: label = (if v_1082 then ech_accept_confirmation else caught-fail) in
                    {4928}let x_341: bitstring = (if v_1082 then (l_303,cur_log_sh_12) else caught-fail) in
                    {4929}let sr8_15: bytes8 = (if v_1080 then catch-fail(crop_into_bytes8((if v_1082 then hmac(@6_backend_h,k_113,x_341) else fail-any))) else caught-fail) in
                    {4930}let v_1083: bool = not-caught-fail(sr8_15) in
                    {4931}if (B32(sr24_4,sr8_11) = (if v_1080 then (if v_1083 then B32(sr24_4,sr8_15) else fail-any) else fail-any)) then
                    (
                        {4932}event ClientEchAcceptance(@6_id_client,true);
                        {4934}let (x_342: bitstring,g_29: group) = i_kex_data_5 in
                        {4935}let (psk_offer_25: preSharedKey,id_offer_25: identityPsk,es_offer_25: bitstring,is_safe_offer_25: bool) = psk_data_19 in
                        {4936}event Client_PSKOffer(@6_id_client,psk_offer_25,id_offer_25,is_safe_offer_25);
                        {4937}event Client_Rand_client(@6_id_client,i_cr_5);
                        {4938}event Client_DH_client(@6_id_client,dh_pub(g_29,x_342));
                        {4939}event Client_server_domain(@6_id_client,backend_dom);
                        {4940}let SH(sr_33: bytes32,mode_28: params) = server_hello_3 in
                        {4941}event Client_Rand_server(@6_id_client,sr_33);
                        {4942}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_29,gy_26: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_51: preSharedKeyExt) = mode_28 in
                        (
                            {4944}event Client_DH_server(@6_id_client,gy_26);
                            {4945}let v_1084: bool = (psk_ext_51 = empty_psk_ext) in
                            {4946}let psk_121: preSharedKey = (if v_1084 then NoPsk else caught-fail) in
                            {4948}let k_114: bitstring = (if v_1084 then catch-fail(psk2b(psk_121)) else caught-fail) in
                            {4949}let v_1085: bool = not-caught-fail(k_114) in
                            {4947}let s_113: bitstring = (if v_1084 then zero else caught-fail) in
                            {4950}let early_secret_81: bitstring = (if v_1084 then catch-fail((if v_1085 then hmac(@6_backend_h,s_113,k_114) else fail-any)) else caught-fail) in
                            {4951}let v_1086: bool = not-caught-fail(early_secret_81) in
                            {4953}let m_106: bitstring = (if v_1086 then zero else caught-fail) in
                            {4954}let h_288: bitstring = (if v_1086 then catch-fail(hash(@6_backend_h,m_106)) else caught-fail) in
                            {4955}let v_1087: bool = not-caught-fail(h_288) in
                            {4952}let l_304: label = (if v_1086 then tls13_ext_res_binder else caught-fail) in
                            {4956}let x_343: bitstring = (if v_1087 then (l_304,h_288) else caught-fail) in
                            {4957}let binder_key_54: bitstring = (if v_1086 then catch-fail((if v_1087 then hmac(@6_backend_h,early_secret_81,x_343) else fail-any)) else caught-fail) in
                            {4958}let v_1088: bool = not-caught-fail(binder_key_54) in
                            {4959}let v_1089: bitstring = (if v_1084 then catch-fail((if v_1086 then (if v_1088 then (early_secret_81,binder_key_54) else fail-any) else fail-any)) else caught-fail) in
                            {4960}let v_1090: bool = (not-caught-fail(v_1089) && success?(1-proj-2-tuple(v_1089))) in
                            {4961}let kb_54: mac_key = (if v_1090 then 2-proj-2-tuple(v_1089) else caught-fail) in
                            {4962}let es_79: bitstring = (if v_1090 then 1-proj-2-tuple(v_1089) else caught-fail) in
                            {4963}let v_1091: bitstring = (if not(v_1084) then catch-fail(psk_data_19) else caught-fail) in
                            {4964}let v_1092: bool = (not-caught-fail(v_1091) && success?(1-proj-4-tuple(v_1091))) in
                            {4965}let is_safe_46: bool = (if v_1092 then 4-proj-4-tuple(v_1091) else caught-fail) in
                            {4966}let es_80: bitstring = (if v_1092 then 3-proj-4-tuple(v_1091) else caught-fail) in
                            {4967}let id_54: identityPsk = (if v_1092 then 2-proj-4-tuple(v_1091) else caught-fail) in
                            {4968}let psk_122: preSharedKey = (if v_1092 then 1-proj-4-tuple(v_1091) else caught-fail) in
                            {4969}let (psk_123: preSharedKey,early_secret_82: bitstring,valid_25: bool,safe_psk_28: bool) = (if v_1084 then (if v_1090 then (NoPsk,es_79,true,false) else fail-any) else (if v_1092 then (psk_122,es_80,((psk_122 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_51)),is_safe_46) else fail-any)) in
                            {4970}event Client_PSKChoosen(@6_id_client,psk_123,safe_psk_28);
                            {4971}if valid_25 then
                            (
                                {4974}new s_114[]: seed;
                                {4972}let gxy_51: element = catch-fail(dh_decap_fun(g_29,gy_26,x_342)) in
                                {4973}let v_1093: bool = not-caught-fail(gxy_51) in
                                {4975}let gxy_52: element = (if v_1093 then gxy_51 else dh_f(s_114)) in
                                {4976}event Client_DH_gxy(@6_id_client,gxy_52);
                                {4978}let m_107: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                {4979}let v_1094: bool = not-caught-fail(m_107) in
                                {4980}let h_289: bitstring = (if v_1094 then catch-fail(hash(@6_backend_h,m_107)) else caught-fail) in
                                {4981}let v_1095: bool = not-caught-fail(h_289) in
                                {4977}let l_305: label = tls13_derived in
                                {4982}let x_344: bitstring = (if v_1095 then (l_305,h_289) else caught-fail) in
                                {4983}let extra_55: bitstring = catch-fail((if v_1094 then (if v_1095 then hmac(@6_backend_h,early_secret_82,x_344) else fail-any) else fail-any)) in
                                {4984}let v_1096: bool = not-caught-fail(extra_55) in
                                {4985}let handshake_secret_26: bitstring = (if v_1096 then hmac(@6_backend_h,extra_55,gxy_52) else fail-any) in
                                {4987}let m_108: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                {4988}let v_1097: bool = not-caught-fail(m_108) in
                                {4989}let h_290: bitstring = (if v_1097 then catch-fail(hash(@6_backend_h,m_108)) else caught-fail) in
                                {4990}let v_1098: bool = not-caught-fail(h_290) in
                                {4986}let l_306: label = tls13_derived in
                                {4991}let x_345: bitstring = (if v_1098 then (l_306,h_290) else caught-fail) in
                                {4992}let extra_56: bitstring = catch-fail((if v_1097 then (if v_1098 then hmac(@6_backend_h,handshake_secret_26,x_345) else fail-any) else fail-any)) in
                                {4993}let v_1099: bool = not-caught-fail(extra_56) in
                                {4994}let k_115: bitstring = (if v_1099 then zero else caught-fail) in
                                {4995}let master_secret_59: bitstring = (if v_1099 then catch-fail(hmac(@6_backend_h,handshake_secret_26,k_115)) else caught-fail) in
                                {4996}let v_1100: bool = not-caught-fail(master_secret_59) in
                                {4933}let cur_log_19: bitstring = (zero,i_client_hello_11) in
                                {4943}let cur_log2_54: bitstring = (cur_log_19,server_hello_3) in
                                {4998}let h_291: bitstring = (if v_1100 then catch-fail(hash(@6_backend_h,cur_log2_54)) else caught-fail) in
                                {4999}let v_1101: bool = not-caught-fail(h_291) in
                                {4997}let l_307: label = (if v_1100 then tls13_client_handshake_traffic_secret else caught-fail) in
                                {5000}let x_346: bitstring = (if v_1101 then (l_307,h_291) else caught-fail) in
                                {5001}let client_hts_26: bitstring = (if v_1100 then catch-fail((if v_1101 then hmac(@6_backend_h,handshake_secret_26,x_346) else fail-any)) else caught-fail) in
                                {5002}let v_1102: bool = not-caught-fail(client_hts_26) in
                                {5004}let h_292: bitstring = (if v_1102 then catch-fail(hash(@6_backend_h,cur_log2_54)) else caught-fail) in
                                {5005}let v_1103: bool = not-caught-fail(h_292) in
                                {5003}let l_308: label = (if v_1102 then tls13_server_handshake_traffic_secret else caught-fail) in
                                {5006}let x_347: bitstring = (if v_1103 then (l_308,h_292) else caught-fail) in
                                {5007}let server_hts_26: bitstring = (if v_1102 then catch-fail((if v_1103 then hmac(@6_backend_h,handshake_secret_26,x_347) else fail-any)) else caught-fail) in
                                {5008}let v_1104: bool = not-caught-fail(server_hts_26) in
                                {5010}let h_293: bitstring = (if v_1104 then zero else caught-fail) in
                                {5009}let l_309: label = (if v_1104 then tls13_key else caught-fail) in
                                {5011}let x_348: bitstring = (if v_1104 then (l_309,h_293) else caught-fail) in
                                {5012}let client_wkh_26: bitstring = (if v_1104 then catch-fail(hmac(@6_backend_h,client_hts_26,x_348)) else caught-fail) in
                                {5013}let v_1105: bool = not-caught-fail(client_wkh_26) in
                                {5015}let h_294: bitstring = (if v_1105 then zero else caught-fail) in
                                {5014}let l_310: label = (if v_1105 then tls13_key else caught-fail) in
                                {5016}let x_349: bitstring = (if v_1105 then (l_310,h_294) else caught-fail) in
                                {5017}let server_wkh_26: bitstring = (if v_1105 then catch-fail(hmac(@6_backend_h,server_hts_26,x_349)) else caught-fail) in
                                {5018}let v_1106: bool = not-caught-fail(server_wkh_26) in
                                {5020}let h_295: bitstring = (if v_1106 then zero else caught-fail) in
                                {5019}let l_311: label = (if v_1106 then tls13_finished else caught-fail) in
                                {5021}let x_350: bitstring = (if v_1106 then (l_311,h_295) else caught-fail) in
                                {5022}let client_fk_26: bitstring = (if v_1106 then catch-fail(hmac(@6_backend_h,client_hts_26,x_350)) else caught-fail) in
                                {5023}let v_1107: bool = not-caught-fail(client_fk_26) in
                                {5025}let h_296: bitstring = (if v_1107 then zero else caught-fail) in
                                {5024}let l_312: label = (if v_1107 then tls13_finished else caught-fail) in
                                {5026}let x_351: bitstring = (if v_1107 then (l_312,h_296) else caught-fail) in
                                {5027}let server_fk_26: bitstring = (if v_1107 then catch-fail(hmac(@6_backend_h,server_hts_26,x_351)) else caught-fail) in
                                {5028}let v_1108: bool = not-caught-fail(server_fk_26) in
                                {5029}let (master_secret_60: bitstring,chk_33: aead_key,shk_32: aead_key,cfin_33: mac_key,sfin_32: mac_key) = (if v_1099 then (if v_1100 then (if v_1102 then (if v_1104 then (if v_1105 then (if v_1106 then (if v_1107 then (if v_1108 then (master_secret_59,client_wkh_26,server_wkh_26,client_fk_26,server_fk_26) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                {5030}event Client_chk(@6_id_client,chk_33);
                                {5031}event Client_shk(@6_id_client,shk_32);
                                {5032}event Client_cfin(@6_id_client,cfin_33);
                                {5033}event Client_sfin(@6_id_client,sfin_32);
                                {5034}in(io, enc_ee_msg_25: bitstring);
                                {5035}let ee_msg_26: msg = aead_dec(@6_backend_a,shk_32,0,zero,enc_ee_msg_25) in
                                {5036}let EE(ech_ee_25: echExt,extra_ee_25: extraExt) = ee_msg_26 in
                                {5037}let cur_log2_55: bitstring = (cur_log2_54,ee_msg_26) in
                                {5038}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr_5,sr_33,@6_backend_h,@6_backend_a,c_dom_5,backend_dom,psk_123,safe_psk_28,@6_comp_psk,master_secret_60,chk_33,0,shk_32,1,cfin_33,sfin_32,cur_log2_55)))
                            )
                            else
                                {5039}out(io, illegal_parameter)
                        )
                        else
                            {5040}out(io, illegal_parameter)
                    )
                    else
                        {5041}event ClientEchAcceptance(@6_id_client,false);
                        {5042}let v_1109: bool = @6_use_grease in
                        {5043}let psk_124: preSharedKey = (if not(v_1109) then NoPsk else caught-fail) in
                        {5045}let k_116: bitstring = (if not(v_1109) then catch-fail(psk2b(psk_124)) else caught-fail) in
                        {5046}let v_1110: bool = not-caught-fail(k_116) in
                        {5044}let s_115: bitstring = (if not(v_1109) then zero else caught-fail) in
                        {5047}let early_secret_83: bitstring = (if not(v_1109) then catch-fail((if v_1110 then hmac(@6_tls_h,s_115,k_116) else fail-any)) else caught-fail) in
                        {5048}let v_1111: bool = not-caught-fail(early_secret_83) in
                        {5050}let m_109: bitstring = (if v_1111 then zero else caught-fail) in
                        {5051}let h_297: bitstring = (if v_1111 then catch-fail(hash(@6_tls_h,m_109)) else caught-fail) in
                        {5052}let v_1112: bool = not-caught-fail(h_297) in
                        {5049}let l_313: label = (if v_1111 then tls13_ext_res_binder else caught-fail) in
                        {5053}let x_352: bitstring = (if v_1112 then (l_313,h_297) else caught-fail) in
                        {5054}let binder_key_55: bitstring = (if v_1111 then catch-fail((if v_1112 then hmac(@6_tls_h,early_secret_83,x_352) else fail-any)) else caught-fail) in
                        {5055}let v_1113: bool = not-caught-fail(binder_key_55) in
                        {5056}let v_1114: bitstring = (if not(v_1109) then catch-fail((if v_1111 then (if v_1113 then (early_secret_83,binder_key_55) else fail-any) else fail-any)) else caught-fail) in
                        {5057}let v_1115: bool = (not-caught-fail(v_1114) && success?(1-proj-2-tuple(v_1114))) in
                        {5058}let kb_55: mac_key = (if v_1115 then 2-proj-2-tuple(v_1114) else caught-fail) in
                        {5059}let es'_2: bitstring = (if v_1115 then 1-proj-2-tuple(v_1114) else caught-fail) in
                        {5060}let psk_data'_23: bitstring = (if v_1109 then psk_data_19 else (if v_1115 then (NoPsk,zero,es'_2,false) else fail-any)) in
                        {5062}let (x_353: bitstring,g_30: group) = o_kex_data_5 in
                        {5063}let (psk_offer_26: preSharedKey,id_offer_26: identityPsk,es_offer_26: bitstring,is_safe_offer_26: bool) = psk_data'_23 in
                        {5064}event Client_PSKOffer(@6_id_client,psk_offer_26,id_offer_26,is_safe_offer_26);
                        {5065}event Client_Rand_client(@6_id_client,o_cr_7);
                        {5066}event Client_DH_client(@6_id_client,dh_pub(g_30,x_353));
                        {5067}event Client_server_domain(@6_id_client,o_dom);
                        {5068}let SH(sr_34: bytes32,mode_29: params) = server_hello_3 in
                        {5069}event Client_Rand_server(@6_id_client,sr_34);
                        {5070}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_30,gy_27: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_52: preSharedKeyExt) = mode_29 in
                        (
                            {5072}event Client_DH_server(@6_id_client,gy_27);
                            {5073}let v_1116: bool = (psk_ext_52 = empty_psk_ext) in
                            {5074}let psk_125: preSharedKey = (if v_1116 then NoPsk else caught-fail) in
                            {5076}let k_117: bitstring = (if v_1116 then catch-fail(psk2b(psk_125)) else caught-fail) in
                            {5077}let v_1117: bool = not-caught-fail(k_117) in
                            {5075}let s_116: bitstring = (if v_1116 then zero else caught-fail) in
                            {5078}let early_secret_84: bitstring = (if v_1116 then catch-fail((if v_1117 then hmac(@6_tls_h,s_116,k_117) else fail-any)) else caught-fail) in
                            {5079}let v_1118: bool = not-caught-fail(early_secret_84) in
                            {5081}let m_110: bitstring = (if v_1118 then zero else caught-fail) in
                            {5082}let h_298: bitstring = (if v_1118 then catch-fail(hash(@6_tls_h,m_110)) else caught-fail) in
                            {5083}let v_1119: bool = not-caught-fail(h_298) in
                            {5080}let l_314: label = (if v_1118 then tls13_ext_res_binder else caught-fail) in
                            {5084}let x_354: bitstring = (if v_1119 then (l_314,h_298) else caught-fail) in
                            {5085}let binder_key_56: bitstring = (if v_1118 then catch-fail((if v_1119 then hmac(@6_tls_h,early_secret_84,x_354) else fail-any)) else caught-fail) in
                            {5086}let v_1120: bool = not-caught-fail(binder_key_56) in
                            {5087}let v_1121: bitstring = (if v_1116 then catch-fail((if v_1118 then (if v_1120 then (early_secret_84,binder_key_56) else fail-any) else fail-any)) else caught-fail) in
                            {5088}let v_1122: bool = (not-caught-fail(v_1121) && success?(1-proj-2-tuple(v_1121))) in
                            {5089}let kb_56: mac_key = (if v_1122 then 2-proj-2-tuple(v_1121) else caught-fail) in
                            {5090}let es_81: bitstring = (if v_1122 then 1-proj-2-tuple(v_1121) else caught-fail) in
                            {5091}let v_1123: bitstring = (if not(v_1116) then catch-fail(psk_data'_23) else caught-fail) in
                            {5092}let v_1124: bool = (not-caught-fail(v_1123) && success?(1-proj-4-tuple(v_1123))) in
                            {5093}let is_safe_47: bool = (if v_1124 then 4-proj-4-tuple(v_1123) else caught-fail) in
                            {5094}let es_82: bitstring = (if v_1124 then 3-proj-4-tuple(v_1123) else caught-fail) in
                            {5095}let id_55: identityPsk = (if v_1124 then 2-proj-4-tuple(v_1123) else caught-fail) in
                            {5096}let psk_126: preSharedKey = (if v_1124 then 1-proj-4-tuple(v_1123) else caught-fail) in
                            {5097}let (psk_127: preSharedKey,early_secret_85: bitstring,valid_26: bool,safe_psk_29: bool) = (if v_1116 then (if v_1122 then (NoPsk,es_81,true,false) else fail-any) else (if v_1124 then (psk_126,es_82,((psk_126 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_52)),is_safe_47) else fail-any)) in
                            {5098}event Client_PSKChoosen(@6_id_client,psk_127,safe_psk_29);
                            {5099}if valid_26 then
                            (
                                {5102}new s_117[]: seed;
                                {5100}let gxy_53: element = catch-fail(dh_decap_fun(g_30,gy_27,x_353)) in
                                {5101}let v_1125: bool = not-caught-fail(gxy_53) in
                                {5103}let gxy_54: element = (if v_1125 then gxy_53 else dh_f(s_117)) in
                                {5104}event Client_DH_gxy(@6_id_client,gxy_54);
                                {5106}let m_111: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                {5107}let v_1126: bool = not-caught-fail(m_111) in
                                {5108}let h_299: bitstring = (if v_1126 then catch-fail(hash(@6_tls_h,m_111)) else caught-fail) in
                                {5109}let v_1127: bool = not-caught-fail(h_299) in
                                {5105}let l_315: label = tls13_derived in
                                {5110}let x_355: bitstring = (if v_1127 then (l_315,h_299) else caught-fail) in
                                {5111}let extra_57: bitstring = catch-fail((if v_1126 then (if v_1127 then hmac(@6_tls_h,early_secret_85,x_355) else fail-any) else fail-any)) in
                                {5112}let v_1128: bool = not-caught-fail(extra_57) in
                                {5113}let handshake_secret_27: bitstring = (if v_1128 then hmac(@6_tls_h,extra_57,gxy_54) else fail-any) in
                                {5115}let m_112: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                {5116}let v_1129: bool = not-caught-fail(m_112) in
                                {5117}let h_300: bitstring = (if v_1129 then catch-fail(hash(@6_tls_h,m_112)) else caught-fail) in
                                {5118}let v_1130: bool = not-caught-fail(h_300) in
                                {5114}let l_316: label = tls13_derived in
                                {5119}let x_356: bitstring = (if v_1130 then (l_316,h_300) else caught-fail) in
                                {5120}let extra_58: bitstring = catch-fail((if v_1129 then (if v_1130 then hmac(@6_tls_h,handshake_secret_27,x_356) else fail-any) else fail-any)) in
                                {5121}let v_1131: bool = not-caught-fail(extra_58) in
                                {5122}let k_118: bitstring = (if v_1131 then zero else caught-fail) in
                                {5123}let master_secret_61: bitstring = (if v_1131 then catch-fail(hmac(@6_tls_h,handshake_secret_27,k_118)) else caught-fail) in
                                {5124}let v_1132: bool = not-caught-fail(master_secret_61) in
                                {5061}let cur_log_20: bitstring = (zero,o_client_hello_2) in
                                {5071}let cur_log2_56: bitstring = (cur_log_20,server_hello_3) in
                                {5126}let h_301: bitstring = (if v_1132 then catch-fail(hash(@6_tls_h,cur_log2_56)) else caught-fail) in
                                {5127}let v_1133: bool = not-caught-fail(h_301) in
                                {5125}let l_317: label = (if v_1132 then tls13_client_handshake_traffic_secret else caught-fail) in
                                {5128}let x_357: bitstring = (if v_1133 then (l_317,h_301) else caught-fail) in
                                {5129}let client_hts_27: bitstring = (if v_1132 then catch-fail((if v_1133 then hmac(@6_tls_h,handshake_secret_27,x_357) else fail-any)) else caught-fail) in
                                {5130}let v_1134: bool = not-caught-fail(client_hts_27) in
                                {5132}let h_302: bitstring = (if v_1134 then catch-fail(hash(@6_tls_h,cur_log2_56)) else caught-fail) in
                                {5133}let v_1135: bool = not-caught-fail(h_302) in
                                {5131}let l_318: label = (if v_1134 then tls13_server_handshake_traffic_secret else caught-fail) in
                                {5134}let x_358: bitstring = (if v_1135 then (l_318,h_302) else caught-fail) in
                                {5135}let server_hts_27: bitstring = (if v_1134 then catch-fail((if v_1135 then hmac(@6_tls_h,handshake_secret_27,x_358) else fail-any)) else caught-fail) in
                                {5136}let v_1136: bool = not-caught-fail(server_hts_27) in
                                {5138}let h_303: bitstring = (if v_1136 then zero else caught-fail) in
                                {5137}let l_319: label = (if v_1136 then tls13_key else caught-fail) in
                                {5139}let x_359: bitstring = (if v_1136 then (l_319,h_303) else caught-fail) in
                                {5140}let client_wkh_27: bitstring = (if v_1136 then catch-fail(hmac(@6_tls_h,client_hts_27,x_359)) else caught-fail) in
                                {5141}let v_1137: bool = not-caught-fail(client_wkh_27) in
                                {5143}let h_304: bitstring = (if v_1137 then zero else caught-fail) in
                                {5142}let l_320: label = (if v_1137 then tls13_key else caught-fail) in
                                {5144}let x_360: bitstring = (if v_1137 then (l_320,h_304) else caught-fail) in
                                {5145}let server_wkh_27: bitstring = (if v_1137 then catch-fail(hmac(@6_tls_h,server_hts_27,x_360)) else caught-fail) in
                                {5146}let v_1138: bool = not-caught-fail(server_wkh_27) in
                                {5148}let h_305: bitstring = (if v_1138 then zero else caught-fail) in
                                {5147}let l_321: label = (if v_1138 then tls13_finished else caught-fail) in
                                {5149}let x_361: bitstring = (if v_1138 then (l_321,h_305) else caught-fail) in
                                {5150}let client_fk_27: bitstring = (if v_1138 then catch-fail(hmac(@6_tls_h,client_hts_27,x_361)) else caught-fail) in
                                {5151}let v_1139: bool = not-caught-fail(client_fk_27) in
                                {5153}let h_306: bitstring = (if v_1139 then zero else caught-fail) in
                                {5152}let l_322: label = (if v_1139 then tls13_finished else caught-fail) in
                                {5154}let x_362: bitstring = (if v_1139 then (l_322,h_306) else caught-fail) in
                                {5155}let server_fk_27: bitstring = (if v_1139 then catch-fail(hmac(@6_tls_h,server_hts_27,x_362)) else caught-fail) in
                                {5156}let v_1140: bool = not-caught-fail(server_fk_27) in
                                {5157}let (master_secret_62: bitstring,chk_34: aead_key,shk_33: aead_key,cfin_34: mac_key,sfin_33: mac_key) = (if v_1131 then (if v_1132 then (if v_1134 then (if v_1136 then (if v_1137 then (if v_1138 then (if v_1139 then (if v_1140 then (master_secret_61,client_wkh_27,server_wkh_27,client_fk_27,server_fk_27) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                {5158}event Client_chk(@6_id_client,chk_34);
                                {5159}event Client_shk(@6_id_client,shk_33);
                                {5160}event Client_cfin(@6_id_client,cfin_34);
                                {5161}event Client_sfin(@6_id_client,sfin_33);
                                {5162}in(io, enc_ee_msg_26: bitstring);
                                {5163}let ee_msg_27: msg = aead_dec(@6_tls_a,shk_33,0,zero,enc_ee_msg_26) in
                                {5164}let EE(ech_ee_26: echExt,extra_ee_26: extraExt) = ee_msg_27 in
                                {5165}let cur_log2_57: bitstring = (cur_log2_56,ee_msg_27) in
                                {5166}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(o_cr_7,sr_34,@6_tls_h,@6_tls_a,c_dom_5,o_dom,psk_127,safe_psk_29,@6_comp_psk,master_secret_62,chk_34,0,shk_33,1,cfin_34,sfin_33,cur_log2_57)))
                            )
                            else
                                {5167}out(io, illegal_parameter)
                        )
                        else
                            {5168}out(io, illegal_parameter)
            )
            else
                {5169}out(io, unexpected_message)
        )
) | (
    {5171}!
    {5172}new id_server_4: idProc;
    {5173}in(io, s_dom_12: domain);
    {5174}event Same(s_dom_12);
    {5183}in(io, use_ech: bool);
    {5184}new @5_st[]: stamp;
    {5185}event PreciseInput(@5_st,use_ech);
    {5186}let () = () in
    {5187}event Same(use_ech);
    {5190}in(io, o_client_hello_3: msg);
    {5191}let CH(cr_9: bytes32,nego(=TLS13,c_h_alg: hash_alg,c_a_alg: aead_alg,kex_ext_1: keyShareExt,sni_ext_2: sniExt,ech_ext_8: echExt,extra_ext_3: extraExt,psk_ext_53: preSharedKeyExt)) = o_client_hello_3 in
    (
        {5192}if (sni_ext_2 = SNI(s_dom_12)) then
        (
            {5383}get ech_configurations(ech_config(config_id_8: configId,ech_g_10: group,pkR_10: element,=s_dom_12,ech_h_10: hash_alg,ech_a_10: aead_alg),skR_2: bitstring) in
            {5195}new @4_st[]: stamp;
            {5193}let ech_conf_1: echConfig = ech_config(config_id_8,ech_g_10,pkR_10,s_dom_12,ech_h_10,ech_a_10) in
            {5194}let @4_x: bitstring = (ech_conf_1,skR_2) in
            {5196}event PreciseInput(@4_st,@4_x);
            {5197}let () = () in
            {5175}let id_server_5: idProc = id_server_4 in
            {5198}event ServerChoosesEchConfig(id_server_5,ech_conf_1,use_ech);
            {5199}let v_1141: echConfig = ech_conf_1 in
            {5200}let v_1142: bool = success?(1-proj-ech_config(v_1141)) in
            {5201}let a_alg_12: aead_alg = (if v_1142 then 6-proj-ech_config(v_1141) else caught-fail) in
            {5202}let h_alg_14: hash_alg = (if v_1142 then 5-proj-ech_config(v_1141) else caught-fail) in
            {5203}let s_dom_13: domain = (if v_1142 then 4-proj-ech_config(v_1141) else caught-fail) in
            {5204}let pkR_11: element = (if v_1142 then 3-proj-ech_config(v_1141) else caught-fail) in
            {5205}let g_31: group = (if v_1142 then 2-proj-ech_config(v_1141) else caught-fail) in
            {5206}let config_id_9: configId = (if v_1142 then 1-proj-ech_config(v_1141) else caught-fail) in
            {5207}new s_118[]: seed;
            {5208}let gx_25: element = (if v_1142 then dh_pub(g_31,dh_k(s_118)) else caught-fail) in
            {5209}let v_1143: bitstring = (if v_1142 then catch-fail((dh_k(s_118),gx_25)) else caught-fail) in
            {5210}let v_1144: bool = (not-caught-fail(v_1143) && success?(1-proj-2-tuple(v_1143))) in
            {5211}let pkR': element = (if v_1144 then 2-proj-2-tuple(v_1143) else caught-fail) in
            {5212}let skR': bitstring = (if v_1144 then 1-proj-2-tuple(v_1143) else caught-fail) in
            {5213}new config_id'[]: configId;
            {5214}let retry_ech_ext: echExt = (if v_1142 then (if v_1144 then ECHConfigList(ech_config(config_id',g_31,pkR',s_dom_13,h_alg_14,a_alg_12)) else fail-any) else fail-any) in
            {5189}let req_cert_3: bool = false in
            {5188}let use_psk_1: bool = false in
            {5179}let tls_g_1: group = id_g(StrongDH,1) in
            {5178}let tls_a_1: aead_alg = id_aead(StrongAE,1) in
            {5177}let tls_h_1: hash_alg = id_hash(StrongHash,1) in
            {5176}let extra_ext_2: extraExt = empty_extra_ext in
            {5215}if ((use_ech ≠ true) || (ech_ext_8 = empty_ech_ext)) then
            (
                {5216}event ServerEchAcceptance(id_server_5,false);
                {5218}let CH(cr_10: bytes32,nego(=TLS13,=tls_h_1,=tls_a_1,kex_ext_2: keyShareExt,SNI(=s_dom_12),ech_ext_9: echExt,extra_ext_4: extraExt,psk_ext_54: preSharedKeyExt)) = o_client_hello_3 in
                (
                    {5217}let ee_msg_28: msg = EE(empty_ech_ext,extra_ext_2) in
                    {5219}let (=true,client_kex_ext(DHE_group(=tls_g_1))) = (false,kex_ext_2) in
                    (
                        {5220}let hrr_mode_3: params = nego(TLS13,tls_h_1,tls_a_1,hrr_kex_ext(tls_g_1),empty_sni_ext,empty_ech_ext,empty_extra_ext,empty_psk_ext) in
                        {5221}let hello_retry_request: msg = SH(B32(HRR24,HRR8),hrr_mode_3) in
                        {5222}out(io, hello_retry_request);
                        {5224}in(io, client_hello'_12: msg);
                        {5225}let CH(cr'_12: bytes32,offer': params) = client_hello'_12 in
                        (
                            {5223}let cur_log_HRR: bitstring = ((zero,o_client_hello_3),hello_retry_request) in
                            {5226}out(ch_server_SH, (id_server_5,ArgsServerSH(tls_g_1,tls_h_1,tls_a_1,s_dom_12,req_cert_3,false,use_psk_1,false,ee_msg_28,client_hello'_12,cur_log_HRR)))
                        )
                        else
                            {5227}out(io, unexpected_message)
                    )
                    else
                        {5228}let client_kex_ext(DHE_kex(=tls_g_1,gx_26: element)) = kex_ext_2 in
                            {5229}out(ch_server_SH, (id_server_5,ArgsServerSH(tls_g_1,tls_h_1,tls_a_1,s_dom_12,req_cert_3,false,use_psk_1,true,ee_msg_28,o_client_hello_3,zero)))
                        else
                            {5230}out(io, handshake_failure)
                )
                else
                    {5231}out(io, handshake_failure)
            )
            else
                {5232}let ECHClientHelloOuter(ech_h': hash_alg,ech_a': aead_alg,config_id'_1: configId,enc_2: element,payload_13: bitstring) = ech_ext_8 in
                (
                    {5233}if ((ech_h' = ech_h_10) && ((ech_a' = ech_a_10) && (config_id'_1 = config_id_8))) then
                    (
                        {5237}new s_119[]: seed;
                        {5241}let label_5: label = hpke_info_hash in
                        {5234}let info_1: bitstring = (tls_ech_str,ech_conf_1) in
                        {5242}let k_119: bitstring = (label_5,info_1) in
                        {5240}let salt_1: bitstring = zero in
                        {5243}let info_hash_1: bitstring = catch-fail(hmac(ech_h_10,salt_1,k_119)) in
                        {5244}let v_1146: bool = not-caught-fail(info_hash_1) in
                        {5246}let ikm_1: bitstring = (if v_1146 then zero else caught-fail) in
                        {5245}let label_6: label = (if v_1146 then hpke_secret else caught-fail) in
                        {5247}let k_120: bitstring = (if v_1146 then (label_6,ikm_1) else caught-fail) in
                        {5235}let gxy_55: element = catch-fail(dh_decap_fun(ech_g_10,enc_2,skR_2)) in
                        {5236}let v_1145: bool = not-caught-fail(gxy_55) in
                        {5238}let shared_secret_1: element = (if v_1145 then gxy_55 else dh_f(s_119)) in
                        {5248}let xsecret_1: bitstring = (if v_1146 then catch-fail(hmac(ech_h_10,shared_secret_1,k_120)) else caught-fail) in
                        {5249}let v_1147: bool = not-caught-fail(xsecret_1) in
                        {5250}let label_7: label = (if v_1147 then hpke_key else caught-fail) in
                        {5251}let x_363: bitstring = (if v_1147 then (label_7,info_hash_1) else caught-fail) in
                        {5252}let key_13: aead_key = (if v_1147 then catch-fail(hmac(ech_h_10,xsecret_1,x_363)) else caught-fail) in
                        {5253}let v_1148: bool = not-caught-fail(key_13) in
                        {5254}let label_8: label = (if v_1148 then hpke_base_nonce else caught-fail) in
                        {5255}let x_364: bitstring = (if v_1148 then (label_8,info_hash_1) else caught-fail) in
                        {5256}let base_nonce_13: bitstring = (if v_1148 then catch-fail(hmac(ech_h_10,xsecret_1,x_364)) else caught-fail) in
                        {5257}let v_1149: bool = not-caught-fail(base_nonce_13) in
                        {5239}let r_1: hpkeRole = R in
                        {5258}let context_1: hpkeContext = (if v_1146 then (if v_1147 then (if v_1148 then (if v_1149 then hpke_context(r_1,key_13,base_nonce_13) else fail-any) else fail-any) else fail-any) else fail-any) in
                        {5259}let v_1150: msg = o_client_hello_3 in
                        {5260}let v_1151: bool = (success?(1-proj-nego(2-proj-CH(v_1150))) && success?(1-proj-CH(v_1150))) in
                        {5261}let psk_ext_55: preSharedKeyExt = (if v_1151 then 8-proj-nego(2-proj-CH(v_1150)) else caught-fail) in
                        {5262}let extra_ext_5: extraExt = (if v_1151 then 7-proj-nego(2-proj-CH(v_1150)) else caught-fail) in
                        {5263}let ech_ext_10: echExt = (if v_1151 then 6-proj-nego(2-proj-CH(v_1150)) else caught-fail) in
                        {5264}let sni_ext_3: sniExt = (if v_1151 then 5-proj-nego(2-proj-CH(v_1150)) else caught-fail) in
                        {5265}let kex_ext_3: keyShareExt = (if v_1151 then 4-proj-nego(2-proj-CH(v_1150)) else caught-fail) in
                        {5266}let a_alg_13: aead_alg = (if v_1151 then 3-proj-nego(2-proj-CH(v_1150)) else caught-fail) in
                        {5267}let h_alg_15: hash_alg = (if v_1151 then 2-proj-nego(2-proj-CH(v_1150)) else caught-fail) in
                        {5268}let v_1152: TLS_version = (if v_1151 then 1-proj-nego(2-proj-CH(v_1150)) else caught-fail) in
                        {5269}let r_2: bytes32 = (if v_1151 then 1-proj-CH(v_1150) else caught-fail) in
                        {5270}let v_1153: echExt = (if v_1151 then catch-fail(ech_ext_10) else caught-fail) in
                        {5271}let v_1154: bool = (not-caught-fail(v_1153) && success?(1-proj-ECHClientHelloOuter(v_1153))) in
                        {5272}let payload_14: bitstring = (if v_1154 then 5-proj-ECHClientHelloOuter(v_1153) else caught-fail) in
                        {5273}let enc_3: element = (if v_1154 then 4-proj-ECHClientHelloOuter(v_1153) else caught-fail) in
                        {5274}let config_id_10: configId = (if v_1154 then 3-proj-ECHClientHelloOuter(v_1153) else caught-fail) in
                        {5275}let a_alg_ech: aead_alg = (if v_1154 then 2-proj-ECHClientHelloOuter(v_1153) else caught-fail) in
                        {5276}let h_alg_ech: hash_alg = (if v_1154 then 1-proj-ECHClientHelloOuter(v_1153) else caught-fail) in
                        {5277}let ech_ext': echExt = (if v_1154 then ECHClientHelloOuter(h_alg_ech,a_alg_ech,config_id_10,enc_3,zero) else caught-fail) in
                        {5278}let client_hello_AAD: msg = (if v_1151 then (if v_1154 then CH(r_2,nego(v_1152,h_alg_15,a_alg_13,kex_ext_3,sni_ext_3,ech_ext',extra_ext_5,psk_ext_55)) else fail-any) else fail-any) in
                        {5280}let v_1155: hpkeContext = context_1 in
                        {5281}let v_1156: bool = ((R =nf 1-proj-hpke_context(v_1155)) && success?(1-proj-hpke_context(v_1155))) in
                        {5282}let base_nonce_14: bitstring = (if v_1156 then 3-proj-hpke_context(v_1155) else caught-fail) in
                        {5283}let key_14: aead_key = (if v_1156 then 2-proj-hpke_context(v_1155) else caught-fail) in
                        {5279}let n_12: nat = 1 in
                        {5284}let i_client_hello_15: msg = (if v_1156 then aead_dec(ech_a_10,key_14,(base_nonce_14,n_12),client_hello_AAD,payload_13) else fail-any) in
                        (
                            {5285}let CH(cr'_13: bytes32,nego(=TLS13,c_h_alg': hash_alg,c_a_alg': aead_alg,kex_ext': keyShareExt,SNI(i_dom: domain),=ECHClientHelloInner,extra_ext': extraExt,psk_ext': preSharedKeyExt)) = i_client_hello_15 in
                            (
                                {5286}event ServerEchAcceptance(id_server_5,true);
                                {5181}let backend_a: aead_alg = id_aead(StrongAE,1) in
                                {5180}let backend_h: hash_alg = id_hash(StrongHash,1) in
                                {5288}let CH(cr_11: bytes32,nego(=TLS13,=backend_h,=backend_a,kex_ext_4: keyShareExt,SNI(i_dom_1: domain),=ECHClientHelloInner,extra_ext_6: extraExt,psk_ext_56: preSharedKeyExt)) = i_client_hello_15 in
                                (
                                    {5287}let ee_msg_29: msg = EE(empty_ech_ext,extra_ext_2) in
                                    {5182}let backend_g: group = id_g(StrongDH,1) in
                                    {5289}let (=true,client_kex_ext(DHE_group(=backend_g))) = (false,kex_ext_4) in
                                    (
                                        {5290}let hrr_mode_4: params = nego(TLS13,backend_h,backend_a,hrr_kex_ext(backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) in
                                        {5291}let hrr_3: msg = SH(B32(HRR24,HRR8),hrr_mode_4) in
                                        {5292}let cur_log_21: bitstring = ((zero,i_client_hello_15),hrr_3) in
                                        {5293}let transcript_hrr_ech_conf_3: bitstring = catch-fail(hash(backend_h,cur_log_21)) in
                                        {5294}let v_1157: bool = not-caught-fail(transcript_hrr_ech_conf_3) in
                                        {5296}let k_121: bitstring = (if v_1157 then catch-fail(b32_2_b(get_random(i_client_hello_15))) else caught-fail) in
                                        {5297}let v_1158: bool = not-caught-fail(k_121) in
                                        {5295}let s_120: bitstring = (if v_1157 then zero else caught-fail) in
                                        {5298}let k_122: bitstring = (if v_1157 then catch-fail((if v_1158 then hmac(backend_h,s_120,k_121) else fail-any)) else caught-fail) in
                                        {5299}let v_1159: bool = not-caught-fail(k_122) in
                                        {5300}let l_323: label = (if v_1159 then hrr_ech_accept_confirmation else caught-fail) in
                                        {5301}let x_365: bitstring = (if v_1159 then (l_323,cur_log_21) else caught-fail) in
                                        {5302}let hrr_accept_confirmation: bytes8 = catch-fail((if v_1157 then crop_into_bytes8((if v_1159 then hmac(backend_h,k_122,x_365) else fail-any)) else fail-any)) in
                                        {5303}let v_1160: bool = not-caught-fail(hrr_accept_confirmation) in
                                        {5304}let hrr_mode_5: params = (if v_1160 then nego(TLS13,backend_h,backend_a,hrr_kex_ext(backend_g),empty_sni_ext,ECHHelloRetryRequest(hrr_accept_confirmation),empty_extra_ext,empty_psk_ext) else caught-fail) in
                                        {5305}let hrr_msg: msg = (if v_1160 then SH(B32(HRR24,HRR8),hrr_mode_5) else fail-any) in
                                        {5306}out(io, hrr_msg);
                                        {5307}let ech_config(id_conf: configId,ech_g_11: group,pkR_12: element,s_dom_14: domain,ech_h_11: hash_alg,ech_a_11: aead_alg) = ech_conf_1 in
                                        {5308}in(io, o_client_hello_4: msg);
                                        {5309}let CH(cr'_14: bytes32,nego(=TLS13,h_alg': hash_alg,a_alg': aead_alg,kex_ext'_1: keyShareExt,SNI(=s_dom_14),ech_ext_11: echExt,extra_ext'_1: extraExt,psk_ext'_1: preSharedKeyExt)) = o_client_hello_4 in
                                        (
                                            {5310}if (ech_ext_11 = empty_ech_ext) then
                                                {5311}out(io, missing_extension)
                                            else
                                                {5312}let ECHClientHelloOuter(=ech_h_11,=ech_a_11,=id_conf,=zero,payload_15: bitstring) = ech_ext_11 in
                                                (
                                                    {5313}let v_1161: msg = o_client_hello_4 in
                                                    {5314}let v_1162: bool = (success?(1-proj-nego(2-proj-CH(v_1161))) && success?(1-proj-CH(v_1161))) in
                                                    {5315}let psk_ext_57: preSharedKeyExt = (if v_1162 then 8-proj-nego(2-proj-CH(v_1161)) else caught-fail) in
                                                    {5316}let extra_ext_7: extraExt = (if v_1162 then 7-proj-nego(2-proj-CH(v_1161)) else caught-fail) in
                                                    {5317}let ech_ext_12: echExt = (if v_1162 then 6-proj-nego(2-proj-CH(v_1161)) else caught-fail) in
                                                    {5318}let sni_ext_4: sniExt = (if v_1162 then 5-proj-nego(2-proj-CH(v_1161)) else caught-fail) in
                                                    {5319}let kex_ext_5: keyShareExt = (if v_1162 then 4-proj-nego(2-proj-CH(v_1161)) else caught-fail) in
                                                    {5320}let a_alg_14: aead_alg = (if v_1162 then 3-proj-nego(2-proj-CH(v_1161)) else caught-fail) in
                                                    {5321}let h_alg_16: hash_alg = (if v_1162 then 2-proj-nego(2-proj-CH(v_1161)) else caught-fail) in
                                                    {5322}let v_1163: TLS_version = (if v_1162 then 1-proj-nego(2-proj-CH(v_1161)) else caught-fail) in
                                                    {5323}let r_3: bytes32 = (if v_1162 then 1-proj-CH(v_1161) else caught-fail) in
                                                    {5324}let v_1164: echExt = (if v_1162 then catch-fail(ech_ext_12) else caught-fail) in
                                                    {5325}let v_1165: bool = (not-caught-fail(v_1164) && success?(1-proj-ECHClientHelloOuter(v_1164))) in
                                                    {5326}let payload_16: bitstring = (if v_1165 then 5-proj-ECHClientHelloOuter(v_1164) else caught-fail) in
                                                    {5327}let enc_4: element = (if v_1165 then 4-proj-ECHClientHelloOuter(v_1164) else caught-fail) in
                                                    {5328}let config_id_11: configId = (if v_1165 then 3-proj-ECHClientHelloOuter(v_1164) else caught-fail) in
                                                    {5329}let a_alg_ech_1: aead_alg = (if v_1165 then 2-proj-ECHClientHelloOuter(v_1164) else caught-fail) in
                                                    {5330}let h_alg_ech_1: hash_alg = (if v_1165 then 1-proj-ECHClientHelloOuter(v_1164) else caught-fail) in
                                                    {5331}let ech_ext'_1: echExt = (if v_1165 then ECHClientHelloOuter(h_alg_ech_1,a_alg_ech_1,config_id_11,enc_4,zero) else caught-fail) in
                                                    {5332}let client_hello_AAD_1: msg = (if v_1162 then (if v_1165 then CH(r_3,nego(v_1163,h_alg_16,a_alg_14,kex_ext_5,sni_ext_4,ech_ext'_1,extra_ext_7,psk_ext_57)) else fail-any) else fail-any) in
                                                    {5334}let v_1166: hpkeContext = context_1 in
                                                    {5335}let v_1167: bool = ((R =nf 1-proj-hpke_context(v_1166)) && success?(1-proj-hpke_context(v_1166))) in
                                                    {5336}let base_nonce_15: bitstring = (if v_1167 then 3-proj-hpke_context(v_1166) else caught-fail) in
                                                    {5337}let key_15: aead_key = (if v_1167 then 2-proj-hpke_context(v_1166) else caught-fail) in
                                                    {5333}let n_13: nat = 2 in
                                                    {5338}let i_client_hello'_9: msg = (if v_1167 then aead_dec(ech_a_11,key_15,(base_nonce_15,n_13),client_hello_AAD_1,payload_15) else fail-any) in
                                                    (
                                                        {5339}let CH(i_cr_7: bytes32,nego(=TLS13,i_h_alg: hash_alg,i_a_alg: aead_alg,i_kex_ext_4: keyShareExt,SNI(=i_dom_1),=ECHClientHelloInner,i_extra_ext: extraExt,i_psk_ext: preSharedKeyExt)) = i_client_hello'_9 in
                                                            {5340}out(ch_server_SH, (id_server_5,ArgsServerSH(backend_g,backend_h,backend_a,i_dom_1,req_cert_3,true,use_psk_1,false,ee_msg_29,i_client_hello'_9,((zero,i_client_hello_15),hrr_msg))))
                                                        else
                                                            {5341}out(io, illegal_parameter)
                                                    )
                                                    else
                                                        {5342}out(io, decrypt_error)
                                                )
                                                else
                                                    {5343}out(io, illegal_parameter)
                                        )
                                        else
                                            {5344}out(io, unexpected_message)
                                    )
                                    else
                                        {5345}let client_kex_ext(DHE_kex(=backend_g,gx_27: element)) = kex_ext_4 in
                                            {5346}out(ch_server_SH, (id_server_5,ArgsServerSH(backend_g,backend_h,backend_a,i_dom_1,req_cert_3,true,use_psk_1,true,ee_msg_29,i_client_hello_15,zero)))
                                        else
                                            {5347}out(io, handshake_failure)
                                )
                                else
                                    {5348}out(io, handshake_failure)
                            )
                            else
                                {5349}out(io, illegal_parameter)
                        )
                        else
                            {5350}event ServerEchAcceptance(id_server_5,false);
                            {5352}let CH(cr_12: bytes32,nego(=TLS13,=tls_h_1,=tls_a_1,kex_ext_6: keyShareExt,SNI(=s_dom_12),ech_ext_13: echExt,extra_ext_8: extraExt,psk_ext_58: preSharedKeyExt)) = o_client_hello_3 in
                            (
                                {5351}let ee_msg_30: msg = EE(retry_ech_ext,extra_ext_2) in
                                {5353}let (=true,client_kex_ext(DHE_group(=tls_g_1))) = (false,kex_ext_6) in
                                (
                                    {5354}let hrr_mode_6: params = nego(TLS13,tls_h_1,tls_a_1,hrr_kex_ext(tls_g_1),empty_sni_ext,empty_ech_ext,empty_extra_ext,empty_psk_ext) in
                                    {5355}let hello_retry_request_1: msg = SH(B32(HRR24,HRR8),hrr_mode_6) in
                                    {5356}out(io, hello_retry_request_1);
                                    {5358}in(io, client_hello'_13: msg);
                                    {5359}let CH(cr'_15: bytes32,offer'_1: params) = client_hello'_13 in
                                    (
                                        {5357}let cur_log_HRR_1: bitstring = ((zero,o_client_hello_3),hello_retry_request_1) in
                                        {5360}out(ch_server_SH, (id_server_5,ArgsServerSH(tls_g_1,tls_h_1,tls_a_1,s_dom_12,req_cert_3,false,use_psk_1,false,ee_msg_30,client_hello'_13,cur_log_HRR_1)))
                                    )
                                    else
                                        {5361}out(io, unexpected_message)
                                )
                                else
                                    {5362}let client_kex_ext(DHE_kex(=tls_g_1,gx_28: element)) = kex_ext_6 in
                                        {5363}out(ch_server_SH, (id_server_5,ArgsServerSH(tls_g_1,tls_h_1,tls_a_1,s_dom_12,req_cert_3,false,use_psk_1,true,ee_msg_30,o_client_hello_3,zero)))
                                    else
                                        {5364}out(io, handshake_failure)
                            )
                            else
                                {5365}out(io, handshake_failure)
                    )
                    else
                        {5366}event ServerEchAcceptance(id_server_5,false);
                        {5368}let CH(cr_13: bytes32,nego(=TLS13,=tls_h_1,=tls_a_1,kex_ext_7: keyShareExt,SNI(=s_dom_12),ech_ext_14: echExt,extra_ext_9: extraExt,psk_ext_59: preSharedKeyExt)) = o_client_hello_3 in
                        (
                            {5367}let ee_msg_31: msg = EE(retry_ech_ext,extra_ext_2) in
                            {5369}let (=true,client_kex_ext(DHE_group(=tls_g_1))) = (false,kex_ext_7) in
                            (
                                {5370}let hrr_mode_7: params = nego(TLS13,tls_h_1,tls_a_1,hrr_kex_ext(tls_g_1),empty_sni_ext,empty_ech_ext,empty_extra_ext,empty_psk_ext) in
                                {5371}let hello_retry_request_2: msg = SH(B32(HRR24,HRR8),hrr_mode_7) in
                                {5372}out(io, hello_retry_request_2);
                                {5374}in(io, client_hello'_14: msg);
                                {5375}let CH(cr'_16: bytes32,offer'_2: params) = client_hello'_14 in
                                (
                                    {5373}let cur_log_HRR_2: bitstring = ((zero,o_client_hello_3),hello_retry_request_2) in
                                    {5376}out(ch_server_SH, (id_server_5,ArgsServerSH(tls_g_1,tls_h_1,tls_a_1,s_dom_12,req_cert_3,false,use_psk_1,false,ee_msg_31,client_hello'_14,cur_log_HRR_2)))
                                )
                                else
                                    {5377}out(io, unexpected_message)
                            )
                            else
                                {5378}let client_kex_ext(DHE_kex(=tls_g_1,gx_29: element)) = kex_ext_7 in
                                    {5379}out(ch_server_SH, (id_server_5,ArgsServerSH(tls_g_1,tls_h_1,tls_a_1,s_dom_12,req_cert_3,false,use_psk_1,true,ee_msg_31,o_client_hello_3,zero)))
                                else
                                    {5380}out(io, handshake_failure)
                        )
                        else
                            {5381}out(io, handshake_failure)
                )
                else
                    {5382}out(io, illegal_parameter)
        )
        else
            {5384}out(io, handshake_failure)
    )
    else
        {5385}out(io, unexpected_message)
) | (
    {5386}!
    {5387}in(io, ClientA: domain);
    {5388}in(io, ClientB: domain);
    {5390}in(io, frontend_dom_1: domain);
    {5391}event Same(frontend_dom_1);
    {5392}in(io, backend_dom_1: domain);
    {5393}event Same(backend_dom_1);
    {5394}new s_121: seed;
    {9911}get ech_configurations(ech_config(id_56: configId,g_32: group,pkR_13: element,=frontend_dom_1,h_alg_17: hash_alg,a_alg_15: aead_alg),skR_3: bitstring) in
    {5396}let ech_conf_2: echConfig = ech_config(id_56,g_32,pkR_13,frontend_dom_1,h_alg_17,a_alg_15) in
    {5395}let id_client_5: idProc = idClientDiff(s_121) in
    {5397}event ConfigOffered(id_client_5,ech_conf_2);
    {5407}in(io, @8_send_kex: bool);
    {5408}new @8_st[]: stamp;
    {5409}event PreciseInput(@8_st,@8_send_kex);
    {5410}let () = () in
    {5411}event Same(@8_send_kex);
    {5414}let ech_config(config_id_12: configId,ech_g_12: group,pkR_14: element,o_dom_8: domain,ech_h_12: hash_alg,ech_a_12: aead_alg) = ech_conf_2 in
    {5415}event ClientOffersEchConfig(id_client_5,ech_conf_2);
    {5417}new s_122[]: seed;
    {5418}let v_1168: bitstring = (dh_xy(s_122,pkR_14),dh_encap_fun(ech_g_12,pkR_14,dh_xy(s_122,pkR_14))) in
    {5419}let v_1169: bool = success?(1-proj-2-tuple(v_1168)) in
    {5420}let enc_5: element = (if v_1169 then 2-proj-2-tuple(v_1168) else caught-fail) in
    {5421}let shared_secret_2: element = (if v_1169 then 1-proj-2-tuple(v_1168) else caught-fail) in
    {5424}let label_9: label = (if v_1169 then hpke_info_hash else caught-fail) in
    {5416}let info_2: bitstring = (tls_ech_str,ech_conf_2) in
    {5425}let k_123: bitstring = (if v_1169 then (label_9,info_2) else caught-fail) in
    {5423}let salt_2: bitstring = (if v_1169 then zero else caught-fail) in
    {5426}let info_hash_2: bitstring = (if v_1169 then catch-fail(hmac(ech_h_12,salt_2,k_123)) else caught-fail) in
    {5427}let v_1170: bool = not-caught-fail(info_hash_2) in
    {5429}let ikm_2: bitstring = (if v_1170 then zero else caught-fail) in
    {5428}let label_10: label = (if v_1170 then hpke_secret else caught-fail) in
    {5430}let k_124: bitstring = (if v_1170 then (label_10,ikm_2) else caught-fail) in
    {5431}let xsecret_2: bitstring = (if v_1170 then catch-fail(hmac(ech_h_12,shared_secret_2,k_124)) else caught-fail) in
    {5432}let v_1171: bool = not-caught-fail(xsecret_2) in
    {5433}let label_11: label = (if v_1171 then hpke_key else caught-fail) in
    {5434}let x_366: bitstring = (if v_1171 then (label_11,info_hash_2) else caught-fail) in
    {5435}let key_16: aead_key = (if v_1171 then catch-fail(hmac(ech_h_12,xsecret_2,x_366)) else caught-fail) in
    {5436}let v_1172: bool = not-caught-fail(key_16) in
    {5437}let label_12: label = (if v_1172 then hpke_base_nonce else caught-fail) in
    {5438}let x_367: bitstring = (if v_1172 then (label_12,info_hash_2) else caught-fail) in
    {5439}let base_nonce_16: bitstring = (if v_1172 then catch-fail(hmac(ech_h_12,xsecret_2,x_367)) else caught-fail) in
    {5440}let v_1173: bool = not-caught-fail(base_nonce_16) in
    {5422}let r_4: hpkeRole = (if v_1169 then S else caught-fail) in
    {5441}let (enc_6: element,context_2: hpkeContext) = (if v_1169 then (enc_5,(if v_1170 then (if v_1171 then (if v_1172 then (if v_1173 then hpke_context(r_4,key_16,base_nonce_16) else fail-any) else fail-any) else fail-any) else fail-any)) else fail-any) in
    {5442}let ech_config(config_id_13: configId,ech_g_13: group,pkR_15: element,o_dom_9: domain,ech_h_13: hash_alg,ech_a_13: aead_alg) = ech_conf_2 in
    {5443}new s_123[]: seed;
    {5404}let @8_backend_g: group = id_g(StrongDH,1) in
    {5444}let gx_30: element = dh_pub(@8_backend_g,dh_k(s_123)) in
    {5445}let v_1174: bitstring = (dh_k(s_123),gx_30) in
    {5446}let v_1175: bool = success?(1-proj-2-tuple(v_1174)) in
    {5447}let gx_31: element = (if v_1175 then 2-proj-2-tuple(v_1174) else caught-fail) in
    {5448}let x_368: bitstring = (if v_1175 then 1-proj-2-tuple(v_1174) else caught-fail) in
    {5413}let send_kex_1: bool = (not(false) || @8_send_kex) in
    {5449}let kex_11: kex_alg = (if v_1175 then (if send_kex_1 then DHE_kex(@8_backend_g,gx_31) else DHE_group(@8_backend_g)) else caught-fail) in
    {5450}let (i_kex_ext_5: keyShareExt,i_kex_data_7: bitstring) = (if v_1175 then (client_kex_ext(kex_11),(x_368,@8_backend_g)) else fail-any) in
    {5451}new s_124[]: seed;
    {5401}let @8_tls_g: group = id_g(StrongDH,1) in
    {5452}let gx_32: element = dh_pub(@8_tls_g,dh_k(s_124)) in
    {5453}let v_1176: bitstring = (dh_k(s_124),gx_32) in
    {5454}let v_1177: bool = success?(1-proj-2-tuple(v_1176)) in
    {5455}let gx_33: element = (if v_1177 then 2-proj-2-tuple(v_1176) else caught-fail) in
    {5456}let x_369: bitstring = (if v_1177 then 1-proj-2-tuple(v_1176) else caught-fail) in
    {5457}let kex_12: kex_alg = (if v_1177 then (if send_kex_1 then DHE_kex(@8_tls_g,gx_33) else DHE_group(@8_tls_g)) else caught-fail) in
    {5458}let (o_kex_ext_7: keyShareExt,o_kex_data_7: bitstring) = (if v_1177 then (client_kex_ext(kex_12),(x_369,@8_tls_g)) else fail-any) in
    {5459}new rand24_12[]: bytes24;
    {5460}new rand8_12[]: bytes8;
    {5462}new rand24_13[]: bytes24;
    {5463}new rand8_13[]: bytes8;
    {5466}new payload_17[]: bitstring;
    {5467}new configid_1[]: configId;
    {5468}new s_125[]: seed;
    {5412}let @8_use_grease: bool = false in
    {5465}let v_1178: bool = @8_use_grease in
    {5469}let gx_34: element = (if v_1178 then dh_pub(ech_g_13,dh_k(s_125)) else caught-fail) in
    {5470}let v_1179: bitstring = (if v_1178 then catch-fail((dh_k(s_125),gx_34)) else caught-fail) in
    {5471}let v_1180: bool = (not-caught-fail(v_1179) && success?(1-proj-2-tuple(v_1179))) in
    {5472}let gx_grease_1: element = (if v_1180 then 2-proj-2-tuple(v_1179) else caught-fail) in
    {5473}let x_grease_1: bitstring = (if v_1180 then 1-proj-2-tuple(v_1179) else caught-fail) in
    {5474}new s_126[]: seed;
    {5475}let v_1181: bitstring = (if v_1180 then catch-fail((dh_xy(s_126,gx_grease_1),dh_encap_fun(ech_g_13,gx_grease_1,dh_xy(s_126,gx_grease_1)))) else caught-fail) in
    {5476}let v_1182: bool = (not-caught-fail(v_1181) && success?(1-proj-2-tuple(v_1181))) in
    {5477}let enc_grease_1: element = (if v_1182 then 2-proj-2-tuple(v_1181) else caught-fail) in
    {5478}let secret_grease_1: element = (if v_1182 then 1-proj-2-tuple(v_1181) else caught-fail) in
    {5479}let ech_inner_or_grease_1: echExt = (if v_1178 then (if v_1180 then (if v_1182 then ECHClientHelloOuter(ech_h_13,ech_a_13,configid_1,enc_grease_1,payload_17) else fail-any) else fail-any) else ECHClientHelloInner) in
    {5464}let o_cr_10: bytes32 = B32(rand24_13,rand8_13) in
    {5461}let i_cr_8: bytes32 = B32(rand24_12,rand8_12) in
    {5403}let @8_backend_a: aead_alg = id_aead(StrongAE,1) in
    {5402}let @8_backend_h: hash_alg = id_hash(StrongHash,1) in
    {5400}let @8_tls_a: aead_alg = id_aead(StrongAE,1) in
    {5399}let @8_tls_h: hash_alg = id_hash(StrongHash,1) in
    {5398}let @8_i_extra_ext: extraExt = empty_extra_ext in
    {5480}let (dom_psk_1: domain,cr_psk_1: bytes32,kex_ext_psk_1: keyShareExt,extra_psk_1: extraExt,h_psk_1: hash_alg,a_psk_1: aead_alg) = (if @8_use_grease then (o_dom_9,o_cr_10,o_kex_ext_7,empty_extra_ext,@8_tls_h,@8_tls_a) else (backend_dom_1,i_cr_8,i_kex_ext_5,@8_i_extra_ext,@8_backend_h,@8_backend_a)) in
    {5406}let @8_comp_psk: bool = false in
    {5405}let @8_use_psk: bool = false in
    {5389}let c_dom_6: domain = choice[ClientA,ClientB] in
    {5483}if @8_use_psk then
    (
        {5482}let cur_log_22: bitstring = zero in
        {5481}let old_psk_data_1: bitstring = zero in
        {5484}let (psk_128: preSharedKey,id_57: identityPsk,old_es_7: bitstring,is_safe_48: bool) = old_psk_data_1 in
        (
            {5488}let k_125: bitstring = catch-fail(psk2b(psk_128)) in
            {5489}let v_1183: bool = not-caught-fail(k_125) in
            {5487}let s_127: bitstring = zero in
            {5490}let early_secret_86: bitstring = catch-fail((if v_1183 then hmac(h_psk_1,s_127,k_125) else fail-any)) in
            {5491}let v_1184: bool = not-caught-fail(early_secret_86) in
            {5493}let m_113: bitstring = (if v_1184 then zero else caught-fail) in
            {5494}let h_307: bitstring = (if v_1184 then catch-fail(hash(h_psk_1,m_113)) else caught-fail) in
            {5495}let v_1185: bool = not-caught-fail(h_307) in
            {5492}let l_324: label = (if v_1184 then tls13_ext_res_binder else caught-fail) in
            {5496}let x_370: bitstring = (if v_1185 then (l_324,h_307) else caught-fail) in
            {5497}let binder_key_57: bitstring = (if v_1184 then catch-fail((if v_1185 then hmac(h_psk_1,early_secret_86,x_370) else fail-any)) else caught-fail) in
            {5498}let v_1186: bool = not-caught-fail(binder_key_57) in
            {5499}let v_1187: bitstring = catch-fail((if v_1184 then (if v_1186 then (early_secret_86,binder_key_57) else fail-any) else fail-any)) in
            {5500}let v_1188: bool = (not-caught-fail(v_1187) && success?(1-proj-2-tuple(v_1187))) in
            {5501}let kb_57: mac_key = (if v_1188 then 2-proj-2-tuple(v_1187) else caught-fail) in
            {5502}let es_83: bitstring = (if v_1188 then 1-proj-2-tuple(v_1187) else caught-fail) in
            {5485}let offer_16: params = nego(TLS13,h_psk_1,a_psk_1,kex_ext_psk_1,SNI(dom_psk_1),ech_inner_or_grease_1,extra_psk_1,trunc_client_psk_ext(id_57)) in
            {5486}let cur_log'_16: bitstring = (cur_log_22,CH(cr_psk_1,offer_16)) in
            {5503}let binders_15: bitstring = (if v_1188 then catch-fail(hmac(h_psk_1,kb_57,cur_log'_16)) else caught-fail) in
            {5504}let v_1189: bool = not-caught-fail(binders_15) in
            {5505}let v_1190: bitstring = catch-fail((if v_1188 then (if v_1189 then (client_psk_ext(id_57,binders_15),(psk_128,id_57,es_83,is_safe_48)) else fail-any) else fail-any)) in
            {5506}let v_1191: bool = (not-caught-fail(v_1190) && success?(1-proj-2-tuple(v_1190))) in
            {5507}let psk_data_27: bitstring = (if v_1191 then 2-proj-2-tuple(v_1190) else caught-fail) in
            {5508}let psk_ext_60: preSharedKeyExt = (if v_1191 then 1-proj-2-tuple(v_1190) else caught-fail) in
            {5513}new fake_id_15[]: identityPsk;
            {5514}new fake_binder_15[]: bitstring;
            {5511}let v_1192: bool = (if v_1191 then catch-fail(@8_use_grease) else caught-fail) in
            {5520}let v_1193: hpkeContext = (if is-false(v_1192) then catch-fail(context_2) else caught-fail) in
            {5521}let v_1194: bool = (not-caught-fail(v_1193) && ((S =nf 1-proj-hpke_context(v_1193)) && success?(1-proj-hpke_context(v_1193)))) in
            {5522}let base_nonce_17: bitstring = (if v_1194 then 3-proj-hpke_context(v_1193) else caught-fail) in
            {5523}let key_17: aead_key = (if v_1194 then 2-proj-hpke_context(v_1193) else caught-fail) in
            {5519}let n_14: nat = (if is-false(v_1192) then 1 else caught-fail) in
            {5516}let o_ech_ext_ADD_12: echExt = (if is-false(v_1192) then ECHClientHelloOuter(ech_h_13,ech_a_13,config_id_13,enc_6,zero) else caught-fail) in
            {5515}let o_psk_ext_15: preSharedKeyExt = (if is-false(v_1192) then (if @8_use_psk then client_psk_ext(fake_id_15,fake_binder_15) else empty_psk_ext) else caught-fail) in
            {5517}let o_offer_ADD_12: params = (if is-false(v_1192) then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),o_ech_ext_ADD_12,empty_extra_ext,o_psk_ext_15) else caught-fail) in
            {5518}let o_client_hello_ADD_12: msg = (if is-false(v_1192) then CH(o_cr_10,o_offer_ADD_12) else caught-fail) in
            {5509}let i_offer_12: params = (if v_1191 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_5,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_60) else caught-fail) in
            {5510}let i_client_hello_16: msg = (if v_1191 then CH(i_cr_8,i_offer_12) else caught-fail) in
            {5524}let payload_18: bitstring = (if is-false(v_1192) then catch-fail((if v_1194 then aead_enc(ech_a_13,key_17,(base_nonce_17,n_14),o_client_hello_ADD_12,i_client_hello_16) else fail-any)) else caught-fail) in
            {5525}let v_1195: bool = not-caught-fail(payload_18) in
            {5526}let o_ech_ext_15: echExt = (if v_1195 then ECHClientHelloOuter(ech_h_13,ech_a_13,config_id_13,enc_6,payload_18) else caught-fail) in
            {5527}let o_offer_28: params = (if v_1195 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),o_ech_ext_15,empty_extra_ext,o_psk_ext_15) else caught-fail) in
            {5512}let o_offer_27: params = (if v_1192 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),ech_inner_or_grease_1,empty_extra_ext,psk_ext_60) else caught-fail) in
            {5528}let (o_client_hello_5: msg,i_client_hello_17: msg,o_cr_11: bytes32,i_cr_9: bytes32,o_kex_data_8: bitstring,i_kex_data_8: bitstring,o_psk_ext_16: preSharedKeyExt,psk_data_28: bitstring,o_ech_ext_16: echExt) = (if v_1191 then (if undo-catch-fail(v_1192) then (CH(o_cr_10,o_offer_27),CH(o_cr_10,o_offer_27),o_cr_10,o_cr_10,o_kex_data_7,o_kex_data_7,psk_ext_60,psk_data_27,ech_inner_or_grease_1) else (if v_1195 then (CH(o_cr_10,o_offer_28),i_client_hello_16,o_cr_10,i_cr_8,o_kex_data_7,i_kex_data_7,o_psk_ext_15,psk_data_27,o_ech_ext_15) else fail-any)) else fail-any) in
            {5529}out(io, o_client_hello_5);
            {5530}let (psk_129: preSharedKey,id_58: identityPsk,es_84: bitstring,safe_3: bool) = psk_data_28 in
            (
                {5531}if (false && (not(@8_use_grease) && (psk_129 ≠ NoPsk))) then
                {5532}let client_hello_4: bitstring = (zero,i_client_hello_17) in
                {5534}let h_308: bitstring = catch-fail(hash(@8_backend_h,client_hello_4)) in
                {5535}let v_1196: bool = not-caught-fail(h_308) in
                {5533}let l_325: label = tls13_client_early_traffic_secret in
                {5536}let x_371: bitstring = (if v_1196 then (l_325,h_308) else caught-fail) in
                {5537}let atsc0_4: bitstring = catch-fail((if v_1196 then hmac(@8_backend_h,es_84,x_371) else fail-any)) in
                {5538}let v_1197: bool = not-caught-fail(atsc0_4) in
                {5540}let h_309: bitstring = (if v_1197 then zero else caught-fail) in
                {5539}let l_326: label = (if v_1197 then tls13_key else caught-fail) in
                {5541}let x_372: bitstring = (if v_1197 then (l_326,h_309) else caught-fail) in
                {5542}let kc0_4: bitstring = (if v_1197 then catch-fail(hmac(@8_backend_h,atsc0_4,x_372)) else caught-fail) in
                {5543}let v_1198: bool = not-caught-fail(kc0_4) in
                {5545}let h_310: bitstring = (if v_1198 then catch-fail(hash(@8_backend_h,client_hello_4)) else caught-fail) in
                {5546}let v_1199: bool = not-caught-fail(h_310) in
                {5544}let l_327: label = (if v_1198 then tls13_early_exporter_master_secret else caught-fail) in
                {5547}let x_373: bitstring = (if v_1199 then (l_327,h_310) else caught-fail) in
                {5548}let ems0_8: bitstring = (if v_1198 then catch-fail((if v_1199 then hmac(@8_backend_h,es_84,x_373) else fail-any)) else caught-fail) in
                {5549}let v_1200: bool = not-caught-fail(ems0_8) in
                {5550}let (wkc0_4: aead_key,ems0_9: bitstring) = (if v_1197 then (if v_1198 then (if v_1200 then (kc0_4,ems0_8) else fail-any) else fail-any) else fail-any) in
                {5551}!
                {5552}in(io, (i_4: nat,ad_4: bitstring));
                {5553}if is_nat(i_4) then
                {5554}new msg_ed_3[]: bitstring;
                {5556}new st_13: stamp;
                {5557}event ClientSequenceClient0RTTDataWriteKey(id_client_5,st_13,i_4);
                {5558}event ClientSends0(id_client_5,i_cr_9,psk_129,i_4,ad_4,msg_ed_3);
                {5555}let enc_ed_3: bitstring = aead_enc(@8_backend_a,wkc0_4,i_4,ad_4,msg_ed_3) in
                {5559}out(io, enc_ed_3)
            ) | (
                {5560}in(io, server_hello_4: msg);
                {5561}let SH(B32(sr24_5: bytes24,sr8_16: bytes8),mode_30: params) = server_hello_4 in
                (
                    {5562}if (false && (B32(sr24_5,sr8_16) = B32(HRR24,HRR8))) then
                    (
                        {5563}if (send_kex_1 ≠ true) then
                        {5564}let nego(=TLS13,h_alg_18: hash_alg,a_alg_16: aead_alg,hrr_kex_ext(g_33: group),=empty_sni_ext,ech_ext_15: echExt,=empty_extra_ext,=empty_psk_ext) = mode_30 in
                        {5565}let v_1201: bool = (ech_ext_15 = empty_ech_ext) in
                        {5566}let hrr_mode_8: params = (if not(v_1201) then nego(TLS13,@8_backend_h,@8_backend_a,hrr_kex_ext(@8_backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) else caught-fail) in
                        {5567}let hrr_4: msg = (if not(v_1201) then SH(B32(HRR24,HRR8),hrr_mode_8) else caught-fail) in
                        {5568}let cur_log_23: bitstring = (if not(v_1201) then ((zero,i_client_hello_17),hrr_4) else caught-fail) in
                        {5569}let transcript_hrr_ech_conf_4: bitstring = (if not(v_1201) then catch-fail(hash(@8_backend_h,cur_log_23)) else caught-fail) in
                        {5570}let v_1202: bool = not-caught-fail(transcript_hrr_ech_conf_4) in
                        {5572}let k_126: bitstring = (if v_1202 then catch-fail(b32_2_b(get_random(i_client_hello_17))) else caught-fail) in
                        {5573}let v_1203: bool = not-caught-fail(k_126) in
                        {5571}let s_128: bitstring = (if v_1202 then zero else caught-fail) in
                        {5574}let k_127: bitstring = (if v_1202 then catch-fail((if v_1203 then hmac(@8_backend_h,s_128,k_126) else fail-any)) else caught-fail) in
                        {5575}let v_1204: bool = not-caught-fail(k_127) in
                        {5576}let l_328: label = (if v_1204 then hrr_ech_accept_confirmation else caught-fail) in
                        {5577}let x_374: bitstring = (if v_1204 then (l_328,cur_log_23) else caught-fail) in
                        {5578}let is_ech_accepted_3: bool = (if v_1201 then false else (if (ech_ext_15 = ECHHelloRetryRequest((if v_1202 then crop_into_bytes8((if v_1204 then hmac(@8_backend_h,k_127,x_374) else fail-any)) else fail-any))) then true else false)) in
                        {5579}event ClientEchAcceptance(id_client_5,is_ech_accepted_3);
                        {5580}if is_ech_accepted_3 then
                        (
                            {5582}let ech_config(config_id_14: configId,ech_g_14: group,pkR_16: element,o_dom_10: domain,ech_h_14: hash_alg,ech_a_14: aead_alg) = ech_conf_2 in
                            {5584}new s_129[]: seed;
                            {5585}let gx_35: element = dh_pub(@8_backend_g,dh_k(s_129)) in
                            {5586}let v_1205: bitstring = (dh_k(s_129),gx_35) in
                            {5587}let v_1206: bool = success?(1-proj-2-tuple(v_1205)) in
                            {5588}let gx_36: element = (if v_1206 then 2-proj-2-tuple(v_1205) else caught-fail) in
                            {5589}let x_375: bitstring = (if v_1206 then 1-proj-2-tuple(v_1205) else caught-fail) in
                            {5583}let send_key_share_9: bool = true in
                            {5590}let kex_13: kex_alg = (if v_1206 then (if send_key_share_9 then DHE_kex(@8_backend_g,gx_36) else DHE_group(@8_backend_g)) else caught-fail) in
                            {5591}let (i_kex_ext_6: keyShareExt,i_kex_data_9: bitstring) = (if v_1206 then (client_kex_ext(kex_13),(x_375,@8_backend_g)) else fail-any) in
                            {5593}new s_130[]: seed;
                            {5594}let gx_37: element = dh_pub(@8_tls_g,dh_k(s_130)) in
                            {5595}let v_1207: bitstring = (dh_k(s_130),gx_37) in
                            {5596}let v_1208: bool = success?(1-proj-2-tuple(v_1207)) in
                            {5597}let gx_38: element = (if v_1208 then 2-proj-2-tuple(v_1207) else caught-fail) in
                            {5598}let x_376: bitstring = (if v_1208 then 1-proj-2-tuple(v_1207) else caught-fail) in
                            {5592}let send_key_share_10: bool = true in
                            {5599}let kex_14: kex_alg = (if v_1208 then (if send_key_share_10 then DHE_kex(@8_tls_g,gx_38) else DHE_group(@8_tls_g)) else caught-fail) in
                            {5600}let (o_kex_ext_8: keyShareExt,o_kex_data_9: bitstring) = (if v_1208 then (client_kex_ext(kex_14),(x_376,@8_tls_g)) else fail-any) in
                            {5601}new rand24_14[]: bytes24;
                            {5602}new rand8_14[]: bytes8;
                            {5604}new rand24_15[]: bytes24;
                            {5605}new rand8_15[]: bytes8;
                            {5606}let o_cr_12: bytes32 = B32(rand24_15,rand8_15) in
                            {5603}let i_cr_10: bytes32 = B32(rand24_14,rand8_14) in
                            {5581}let cur_log_IN1_HRR_3: bitstring = ((zero,i_client_hello_17),server_hello_4) in
                            {5608}if @8_use_psk then
                            (
                                {5607}let ech_ext_16: echExt = ECHClientHelloInner in
                                {5609}let (psk_130: preSharedKey,id_59: identityPsk,old_es_8: bitstring,is_safe_49: bool) = psk_data_28 in
                                (
                                    {5613}let k_128: bitstring = catch-fail(psk2b(psk_130)) in
                                    {5614}let v_1209: bool = not-caught-fail(k_128) in
                                    {5612}let s_131: bitstring = zero in
                                    {5615}let early_secret_87: bitstring = catch-fail((if v_1209 then hmac(@8_backend_h,s_131,k_128) else fail-any)) in
                                    {5616}let v_1210: bool = not-caught-fail(early_secret_87) in
                                    {5618}let m_114: bitstring = (if v_1210 then zero else caught-fail) in
                                    {5619}let h_311: bitstring = (if v_1210 then catch-fail(hash(@8_backend_h,m_114)) else caught-fail) in
                                    {5620}let v_1211: bool = not-caught-fail(h_311) in
                                    {5617}let l_329: label = (if v_1210 then tls13_ext_res_binder else caught-fail) in
                                    {5621}let x_377: bitstring = (if v_1211 then (l_329,h_311) else caught-fail) in
                                    {5622}let binder_key_58: bitstring = (if v_1210 then catch-fail((if v_1211 then hmac(@8_backend_h,early_secret_87,x_377) else fail-any)) else caught-fail) in
                                    {5623}let v_1212: bool = not-caught-fail(binder_key_58) in
                                    {5624}let v_1213: bitstring = catch-fail((if v_1210 then (if v_1212 then (early_secret_87,binder_key_58) else fail-any) else fail-any)) in
                                    {5625}let v_1214: bool = (not-caught-fail(v_1213) && success?(1-proj-2-tuple(v_1213))) in
                                    {5626}let kb_58: mac_key = (if v_1214 then 2-proj-2-tuple(v_1213) else caught-fail) in
                                    {5627}let es_85: bitstring = (if v_1214 then 1-proj-2-tuple(v_1213) else caught-fail) in
                                    {5610}let offer_17: params = nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_6,SNI(backend_dom_1),ech_ext_16,@8_i_extra_ext,trunc_client_psk_ext(id_59)) in
                                    {5611}let cur_log'_17: bitstring = (cur_log_IN1_HRR_3,CH(i_cr_10,offer_17)) in
                                    {5628}let binders_16: bitstring = (if v_1214 then catch-fail(hmac(@8_backend_h,kb_58,cur_log'_17)) else caught-fail) in
                                    {5629}let v_1215: bool = not-caught-fail(binders_16) in
                                    {5630}let v_1216: bitstring = catch-fail((if v_1214 then (if v_1215 then (client_psk_ext(id_59,binders_16),(psk_130,id_59,es_85,is_safe_49)) else fail-any) else fail-any)) in
                                    {5631}let v_1217: bool = (not-caught-fail(v_1216) && success?(1-proj-2-tuple(v_1216))) in
                                    {5632}let psk_data_29: bitstring = (if v_1217 then 2-proj-2-tuple(v_1216) else caught-fail) in
                                    {5633}let psk_ext_61: preSharedKeyExt = (if v_1217 then 1-proj-2-tuple(v_1216) else caught-fail) in
                                    {5636}new fake_id_16[]: identityPsk;
                                    {5637}new fake_binder_16[]: bitstring;
                                    {5643}let v_1218: hpkeContext = (if v_1217 then catch-fail(context_2) else caught-fail) in
                                    {5644}let v_1219: bool = (not-caught-fail(v_1218) && ((S =nf 1-proj-hpke_context(v_1218)) && success?(1-proj-hpke_context(v_1218)))) in
                                    {5645}let base_nonce_18: bitstring = (if v_1219 then 3-proj-hpke_context(v_1218) else caught-fail) in
                                    {5646}let key_18: aead_key = (if v_1219 then 2-proj-hpke_context(v_1218) else caught-fail) in
                                    {5642}let n_15: nat = (if v_1217 then 2 else caught-fail) in
                                    {5639}let o_ech_ext_ADD_13: echExt = (if v_1217 then ECHClientHelloOuter(ech_h_14,ech_a_14,config_id_14,zero,zero) else caught-fail) in
                                    {5638}let o_psk_ext_17: preSharedKeyExt = (if v_1217 then (if @8_use_psk then client_psk_ext(fake_id_16,fake_binder_16) else empty_psk_ext) else caught-fail) in
                                    {5640}let o_offer_ADD_13: params = (if v_1217 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_8,SNI(o_dom_10),o_ech_ext_ADD_13,empty_extra_ext,o_psk_ext_17) else caught-fail) in
                                    {5641}let o_client_hello_ADD_13: msg = (if v_1217 then CH(o_cr_12,o_offer_ADD_13) else caught-fail) in
                                    {5634}let i_offer_13: params = (if v_1217 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_6,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_61) else caught-fail) in
                                    {5635}let i_client_hello_18: msg = (if v_1217 then CH(i_cr_10,i_offer_13) else caught-fail) in
                                    {5647}let payload_19: bitstring = (if v_1217 then catch-fail((if v_1219 then aead_enc(ech_a_14,key_18,(base_nonce_18,n_15),o_client_hello_ADD_13,i_client_hello_18) else fail-any)) else caught-fail) in
                                    {5648}let v_1220: bool = not-caught-fail(payload_19) in
                                    {5649}let o_ech_ext_17: echExt = (if v_1220 then ECHClientHelloOuter(ech_h_14,ech_a_14,config_id_14,zero,payload_19) else caught-fail) in
                                    {5650}let o_offer_29: params = (if v_1220 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_8,SNI(o_dom_10),o_ech_ext_17,empty_extra_ext,o_psk_ext_17) else caught-fail) in
                                    {5651}let (o_client_hello'_9: msg,i_client_hello'_10: msg,i_cr'_9: bytes32,i_kex_data'_9: bitstring,psk_data'_24: bitstring) = (if v_1217 then (if v_1220 then (CH(o_cr_12,o_offer_29),i_client_hello_18,i_cr_10,i_kex_data_9,psk_data_29) else fail-any) else fail-any) in
                                    {5652}out(io, o_client_hello'_9);
                                    {5653}in(io, server_hello'_21: msg);
                                    {5654}let SH(B32(sr24'_9: bytes24,sr8'_9: bytes8),params'_9: params) = server_hello'_21 in
                                    {5656}let sh_modified_13: msg = SH(B32(sr24'_9,zero8),params'_9) in
                                    {5655}let cur_log_IN1_HRR_IN2_9: bitstring = (cur_log_IN1_HRR_3,i_client_hello'_10) in
                                    {5657}let cur_log_sh_13: bitstring = (cur_log_IN1_HRR_IN2_9,sh_modified_13) in
                                    {5658}let transcript_ech_conf_13: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_13)) in
                                    {5659}let v_1221: bool = not-caught-fail(transcript_ech_conf_13) in
                                    {5661}let k_129: bitstring = (if v_1221 then catch-fail(b32_2_b(get_random(i_client_hello'_10))) else caught-fail) in
                                    {5662}let v_1222: bool = not-caught-fail(k_129) in
                                    {5660}let s_132: bitstring = (if v_1221 then zero else caught-fail) in
                                    {5663}let k_130: bitstring = (if v_1221 then catch-fail((if v_1222 then hmac(@8_backend_h,s_132,k_129) else fail-any)) else caught-fail) in
                                    {5664}let v_1223: bool = not-caught-fail(k_130) in
                                    {5665}let l_330: label = (if v_1223 then ech_accept_confirmation else caught-fail) in
                                    {5666}let x_378: bitstring = (if v_1223 then (l_330,cur_log_sh_13) else caught-fail) in
                                    {5667}let sr8_17: bytes8 = (if v_1221 then catch-fail(crop_into_bytes8((if v_1223 then hmac(@8_backend_h,k_130,x_378) else fail-any))) else caught-fail) in
                                    {5668}let v_1224: bool = not-caught-fail(sr8_17) in
                                    {5669}if (B32(sr24'_9,sr8'_9) = (if v_1221 then (if v_1224 then B32(sr24'_9,sr8_17) else fail-any) else fail-any)) then
                                    {5670}let (x_379: bitstring,g_34: group) = i_kex_data'_9 in
                                    {5671}let (psk_offer_27: preSharedKey,id_offer_27: identityPsk,es_offer_27: bitstring,is_safe_offer_27: bool) = psk_data'_24 in
                                    {5672}event Client_PSKOffer(id_client_5,psk_offer_27,id_offer_27,is_safe_offer_27);
                                    {5673}event Client_Rand_client(id_client_5,i_cr'_9);
                                    {5674}event Client_DH_client(id_client_5,dh_pub(g_34,x_379));
                                    {5675}event Client_server_domain(id_client_5,backend_dom_1);
                                    {5676}let SH(sr_35: bytes32,mode_31: params) = server_hello'_21 in
                                    {5677}event Client_Rand_server(id_client_5,sr_35);
                                    {5678}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_34,gy_28: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_62: preSharedKeyExt) = mode_31 in
                                    (
                                        {5680}event Client_DH_server(id_client_5,gy_28);
                                        {5681}let v_1225: bool = (psk_ext_62 = empty_psk_ext) in
                                        {5682}let psk_131: preSharedKey = (if v_1225 then NoPsk else caught-fail) in
                                        {5684}let k_131: bitstring = (if v_1225 then catch-fail(psk2b(psk_131)) else caught-fail) in
                                        {5685}let v_1226: bool = not-caught-fail(k_131) in
                                        {5683}let s_133: bitstring = (if v_1225 then zero else caught-fail) in
                                        {5686}let early_secret_88: bitstring = (if v_1225 then catch-fail((if v_1226 then hmac(@8_backend_h,s_133,k_131) else fail-any)) else caught-fail) in
                                        {5687}let v_1227: bool = not-caught-fail(early_secret_88) in
                                        {5689}let m_115: bitstring = (if v_1227 then zero else caught-fail) in
                                        {5690}let h_312: bitstring = (if v_1227 then catch-fail(hash(@8_backend_h,m_115)) else caught-fail) in
                                        {5691}let v_1228: bool = not-caught-fail(h_312) in
                                        {5688}let l_331: label = (if v_1227 then tls13_ext_res_binder else caught-fail) in
                                        {5692}let x_380: bitstring = (if v_1228 then (l_331,h_312) else caught-fail) in
                                        {5693}let binder_key_59: bitstring = (if v_1227 then catch-fail((if v_1228 then hmac(@8_backend_h,early_secret_88,x_380) else fail-any)) else caught-fail) in
                                        {5694}let v_1229: bool = not-caught-fail(binder_key_59) in
                                        {5695}let v_1230: bitstring = (if v_1225 then catch-fail((if v_1227 then (if v_1229 then (early_secret_88,binder_key_59) else fail-any) else fail-any)) else caught-fail) in
                                        {5696}let v_1231: bool = (not-caught-fail(v_1230) && success?(1-proj-2-tuple(v_1230))) in
                                        {5697}let kb_59: mac_key = (if v_1231 then 2-proj-2-tuple(v_1230) else caught-fail) in
                                        {5698}let es_86: bitstring = (if v_1231 then 1-proj-2-tuple(v_1230) else caught-fail) in
                                        {5699}let v_1232: bitstring = (if not(v_1225) then catch-fail(psk_data'_24) else caught-fail) in
                                        {5700}let v_1233: bool = (not-caught-fail(v_1232) && success?(1-proj-4-tuple(v_1232))) in
                                        {5701}let is_safe_50: bool = (if v_1233 then 4-proj-4-tuple(v_1232) else caught-fail) in
                                        {5702}let es_87: bitstring = (if v_1233 then 3-proj-4-tuple(v_1232) else caught-fail) in
                                        {5703}let id_60: identityPsk = (if v_1233 then 2-proj-4-tuple(v_1232) else caught-fail) in
                                        {5704}let psk_132: preSharedKey = (if v_1233 then 1-proj-4-tuple(v_1232) else caught-fail) in
                                        {5705}let (psk_133: preSharedKey,early_secret_89: bitstring,valid_27: bool,safe_psk_30: bool) = (if v_1225 then (if v_1231 then (NoPsk,es_86,true,false) else fail-any) else (if v_1233 then (psk_132,es_87,((psk_132 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_62)),is_safe_50) else fail-any)) in
                                        {5706}event Client_PSKChoosen(id_client_5,psk_133,safe_psk_30);
                                        {5707}if valid_27 then
                                        (
                                            {5710}new s_134[]: seed;
                                            {5708}let gxy_56: element = catch-fail(dh_decap_fun(g_34,gy_28,x_379)) in
                                            {5709}let v_1234: bool = not-caught-fail(gxy_56) in
                                            {5711}let gxy_57: element = (if v_1234 then gxy_56 else dh_f(s_134)) in
                                            {5712}event Client_DH_gxy(id_client_5,gxy_57);
                                            {5714}let m_116: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {5715}let v_1235: bool = not-caught-fail(m_116) in
                                            {5716}let h_313: bitstring = (if v_1235 then catch-fail(hash(@8_backend_h,m_116)) else caught-fail) in
                                            {5717}let v_1236: bool = not-caught-fail(h_313) in
                                            {5713}let l_332: label = tls13_derived in
                                            {5718}let x_381: bitstring = (if v_1236 then (l_332,h_313) else caught-fail) in
                                            {5719}let extra_59: bitstring = catch-fail((if v_1235 then (if v_1236 then hmac(@8_backend_h,early_secret_89,x_381) else fail-any) else fail-any)) in
                                            {5720}let v_1237: bool = not-caught-fail(extra_59) in
                                            {5721}let handshake_secret_28: bitstring = (if v_1237 then hmac(@8_backend_h,extra_59,gxy_57) else fail-any) in
                                            {5723}let m_117: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {5724}let v_1238: bool = not-caught-fail(m_117) in
                                            {5725}let h_314: bitstring = (if v_1238 then catch-fail(hash(@8_backend_h,m_117)) else caught-fail) in
                                            {5726}let v_1239: bool = not-caught-fail(h_314) in
                                            {5722}let l_333: label = tls13_derived in
                                            {5727}let x_382: bitstring = (if v_1239 then (l_333,h_314) else caught-fail) in
                                            {5728}let extra_60: bitstring = catch-fail((if v_1238 then (if v_1239 then hmac(@8_backend_h,handshake_secret_28,x_382) else fail-any) else fail-any)) in
                                            {5729}let v_1240: bool = not-caught-fail(extra_60) in
                                            {5730}let k_132: bitstring = (if v_1240 then zero else caught-fail) in
                                            {5731}let master_secret_63: bitstring = (if v_1240 then catch-fail(hmac(@8_backend_h,handshake_secret_28,k_132)) else caught-fail) in
                                            {5732}let v_1241: bool = not-caught-fail(master_secret_63) in
                                            {5679}let cur_log2_58: bitstring = (cur_log_IN1_HRR_IN2_9,server_hello'_21) in
                                            {5734}let h_315: bitstring = (if v_1241 then catch-fail(hash(@8_backend_h,cur_log2_58)) else caught-fail) in
                                            {5735}let v_1242: bool = not-caught-fail(h_315) in
                                            {5733}let l_334: label = (if v_1241 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {5736}let x_383: bitstring = (if v_1242 then (l_334,h_315) else caught-fail) in
                                            {5737}let client_hts_28: bitstring = (if v_1241 then catch-fail((if v_1242 then hmac(@8_backend_h,handshake_secret_28,x_383) else fail-any)) else caught-fail) in
                                            {5738}let v_1243: bool = not-caught-fail(client_hts_28) in
                                            {5740}let h_316: bitstring = (if v_1243 then catch-fail(hash(@8_backend_h,cur_log2_58)) else caught-fail) in
                                            {5741}let v_1244: bool = not-caught-fail(h_316) in
                                            {5739}let l_335: label = (if v_1243 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {5742}let x_384: bitstring = (if v_1244 then (l_335,h_316) else caught-fail) in
                                            {5743}let server_hts_28: bitstring = (if v_1243 then catch-fail((if v_1244 then hmac(@8_backend_h,handshake_secret_28,x_384) else fail-any)) else caught-fail) in
                                            {5744}let v_1245: bool = not-caught-fail(server_hts_28) in
                                            {5746}let h_317: bitstring = (if v_1245 then zero else caught-fail) in
                                            {5745}let l_336: label = (if v_1245 then tls13_key else caught-fail) in
                                            {5747}let x_385: bitstring = (if v_1245 then (l_336,h_317) else caught-fail) in
                                            {5748}let client_wkh_28: bitstring = (if v_1245 then catch-fail(hmac(@8_backend_h,client_hts_28,x_385)) else caught-fail) in
                                            {5749}let v_1246: bool = not-caught-fail(client_wkh_28) in
                                            {5751}let h_318: bitstring = (if v_1246 then zero else caught-fail) in
                                            {5750}let l_337: label = (if v_1246 then tls13_key else caught-fail) in
                                            {5752}let x_386: bitstring = (if v_1246 then (l_337,h_318) else caught-fail) in
                                            {5753}let server_wkh_28: bitstring = (if v_1246 then catch-fail(hmac(@8_backend_h,server_hts_28,x_386)) else caught-fail) in
                                            {5754}let v_1247: bool = not-caught-fail(server_wkh_28) in
                                            {5756}let h_319: bitstring = (if v_1247 then zero else caught-fail) in
                                            {5755}let l_338: label = (if v_1247 then tls13_finished else caught-fail) in
                                            {5757}let x_387: bitstring = (if v_1247 then (l_338,h_319) else caught-fail) in
                                            {5758}let client_fk_28: bitstring = (if v_1247 then catch-fail(hmac(@8_backend_h,client_hts_28,x_387)) else caught-fail) in
                                            {5759}let v_1248: bool = not-caught-fail(client_fk_28) in
                                            {5761}let h_320: bitstring = (if v_1248 then zero else caught-fail) in
                                            {5760}let l_339: label = (if v_1248 then tls13_finished else caught-fail) in
                                            {5762}let x_388: bitstring = (if v_1248 then (l_339,h_320) else caught-fail) in
                                            {5763}let server_fk_28: bitstring = (if v_1248 then catch-fail(hmac(@8_backend_h,server_hts_28,x_388)) else caught-fail) in
                                            {5764}let v_1249: bool = not-caught-fail(server_fk_28) in
                                            {5765}let (master_secret_64: bitstring,chk_35: aead_key,shk_34: aead_key,cfin_35: mac_key,sfin_34: mac_key) = (if v_1240 then (if v_1241 then (if v_1243 then (if v_1245 then (if v_1246 then (if v_1247 then (if v_1248 then (if v_1249 then (master_secret_63,client_wkh_28,server_wkh_28,client_fk_28,server_fk_28) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {5766}event Client_chk(id_client_5,chk_35);
                                            {5767}event Client_shk(id_client_5,shk_34);
                                            {5768}event Client_cfin(id_client_5,cfin_35);
                                            {5769}event Client_sfin(id_client_5,sfin_34);
                                            {5770}in(io, enc_ee_msg_27: bitstring);
                                            {5771}let ee_msg_32: msg = aead_dec(@8_backend_a,shk_34,0,zero,enc_ee_msg_27) in
                                            {5772}let EE(ech_ee_27: echExt,extra_ee_27: extraExt) = ee_msg_32 in
                                            {5773}let cur_log2_59: bitstring = (cur_log2_58,ee_msg_32) in
                                            {5774}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_9,sr_35,@8_backend_h,@8_backend_a,c_dom_6,backend_dom_1,psk_133,safe_psk_30,@8_comp_psk,master_secret_64,chk_35,0,shk_34,1,cfin_35,sfin_34,cur_log2_59)))
                                        )
                                        else
                                            {5775}out(io, illegal_parameter)
                                    )
                                    else
                                        {5776}out(io, illegal_parameter)
                                )
                                else
                                    {5953}get pre_shared_keys(c_dom'_9: domain,=backend_dom_1,=@8_backend_h,id_61: identityPsk,psk_134: preSharedKey,idP_11: idProc,is_safe_51: bool) in
                                    {5777}event Selected_one_time_used_psk(id_client_5,psk_134,is_safe_51);
                                    {5778}event Selected_psk(c_dom_6,c_dom'_9,idP_11,is_safe_51);
                                    {5779}event Selected_psk_no_missmatch(id_client_5,backend_dom_1,@8_backend_h,psk_134,id_61);
                                    {5780}event Selected_psk_with_ID(c_dom_6,c_dom'_9,id_61,idP_11,is_safe_51);
                                    {5781}let v_1250: bitstring = (id_61,psk_134,is_safe_51) in
                                    {5782}let v_1251: bool = success?(1-proj-3-tuple(v_1250)) in
                                    {5783}let is_safe_52: bool = (if v_1251 then 3-proj-3-tuple(v_1250) else caught-fail) in
                                    {5784}let psk_135: preSharedKey = (if v_1251 then 2-proj-3-tuple(v_1250) else caught-fail) in
                                    {5785}let id_62: identityPsk = (if v_1251 then 1-proj-3-tuple(v_1250) else caught-fail) in
                                    {5789}let k_133: bitstring = (if v_1251 then catch-fail(psk2b(psk_135)) else caught-fail) in
                                    {5790}let v_1252: bool = not-caught-fail(k_133) in
                                    {5788}let s_135: bitstring = (if v_1251 then zero else caught-fail) in
                                    {5791}let early_secret_90: bitstring = (if v_1251 then catch-fail((if v_1252 then hmac(@8_backend_h,s_135,k_133) else fail-any)) else caught-fail) in
                                    {5792}let v_1253: bool = not-caught-fail(early_secret_90) in
                                    {5794}let m_118: bitstring = (if v_1253 then zero else caught-fail) in
                                    {5795}let h_321: bitstring = (if v_1253 then catch-fail(hash(@8_backend_h,m_118)) else caught-fail) in
                                    {5796}let v_1254: bool = not-caught-fail(h_321) in
                                    {5793}let l_340: label = (if v_1253 then tls13_ext_res_binder else caught-fail) in
                                    {5797}let x_389: bitstring = (if v_1254 then (l_340,h_321) else caught-fail) in
                                    {5798}let binder_key_60: bitstring = (if v_1253 then catch-fail((if v_1254 then hmac(@8_backend_h,early_secret_90,x_389) else fail-any)) else caught-fail) in
                                    {5799}let v_1255: bool = not-caught-fail(binder_key_60) in
                                    {5800}let v_1256: bitstring = (if v_1251 then catch-fail((if v_1253 then (if v_1255 then (early_secret_90,binder_key_60) else fail-any) else fail-any)) else caught-fail) in
                                    {5801}let v_1257: bool = (not-caught-fail(v_1256) && success?(1-proj-2-tuple(v_1256))) in
                                    {5802}let kb_60: mac_key = (if v_1257 then 2-proj-2-tuple(v_1256) else caught-fail) in
                                    {5803}let es_88: bitstring = (if v_1257 then 1-proj-2-tuple(v_1256) else caught-fail) in
                                    {5786}let offer_18: params = (if v_1251 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_6,SNI(backend_dom_1),ech_ext_16,@8_i_extra_ext,trunc_client_psk_ext(id_62)) else caught-fail) in
                                    {5787}let cur_log'_18: bitstring = (if v_1251 then (cur_log_IN1_HRR_3,CH(i_cr_10,offer_18)) else caught-fail) in
                                    {5804}let binders_17: bitstring = (if v_1257 then catch-fail(hmac(@8_backend_h,kb_60,cur_log'_18)) else caught-fail) in
                                    {5805}let v_1258: bool = not-caught-fail(binders_17) in
                                    {5806}let v_1259: bitstring = catch-fail((if v_1251 then (if v_1257 then (if v_1258 then (client_psk_ext(id_62,binders_17),(psk_135,id_62,es_88,is_safe_52)) else fail-any) else fail-any) else fail-any)) in
                                    {5807}let v_1260: bool = (not-caught-fail(v_1259) && success?(1-proj-2-tuple(v_1259))) in
                                    {5808}let psk_data_30: bitstring = (if v_1260 then 2-proj-2-tuple(v_1259) else caught-fail) in
                                    {5809}let psk_ext_63: preSharedKeyExt = (if v_1260 then 1-proj-2-tuple(v_1259) else caught-fail) in
                                    {5812}new fake_id_17[]: identityPsk;
                                    {5813}new fake_binder_17[]: bitstring;
                                    {5819}let v_1261: hpkeContext = (if v_1260 then catch-fail(context_2) else caught-fail) in
                                    {5820}let v_1262: bool = (not-caught-fail(v_1261) && ((S =nf 1-proj-hpke_context(v_1261)) && success?(1-proj-hpke_context(v_1261)))) in
                                    {5821}let base_nonce_19: bitstring = (if v_1262 then 3-proj-hpke_context(v_1261) else caught-fail) in
                                    {5822}let key_19: aead_key = (if v_1262 then 2-proj-hpke_context(v_1261) else caught-fail) in
                                    {5818}let n_16: nat = (if v_1260 then 2 else caught-fail) in
                                    {5815}let o_ech_ext_ADD_14: echExt = (if v_1260 then ECHClientHelloOuter(ech_h_14,ech_a_14,config_id_14,zero,zero) else caught-fail) in
                                    {5814}let o_psk_ext_18: preSharedKeyExt = (if v_1260 then (if @8_use_psk then client_psk_ext(fake_id_17,fake_binder_17) else empty_psk_ext) else caught-fail) in
                                    {5816}let o_offer_ADD_14: params = (if v_1260 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_8,SNI(o_dom_10),o_ech_ext_ADD_14,empty_extra_ext,o_psk_ext_18) else caught-fail) in
                                    {5817}let o_client_hello_ADD_14: msg = (if v_1260 then CH(o_cr_12,o_offer_ADD_14) else caught-fail) in
                                    {5810}let i_offer_14: params = (if v_1260 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_6,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_63) else caught-fail) in
                                    {5811}let i_client_hello_19: msg = (if v_1260 then CH(i_cr_10,i_offer_14) else caught-fail) in
                                    {5823}let payload_20: bitstring = (if v_1260 then catch-fail((if v_1262 then aead_enc(ech_a_14,key_19,(base_nonce_19,n_16),o_client_hello_ADD_14,i_client_hello_19) else fail-any)) else caught-fail) in
                                    {5824}let v_1263: bool = not-caught-fail(payload_20) in
                                    {5825}let o_ech_ext_18: echExt = (if v_1263 then ECHClientHelloOuter(ech_h_14,ech_a_14,config_id_14,zero,payload_20) else caught-fail) in
                                    {5826}let o_offer_30: params = (if v_1263 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_8,SNI(o_dom_10),o_ech_ext_18,empty_extra_ext,o_psk_ext_18) else caught-fail) in
                                    {5827}let (o_client_hello'_10: msg,i_client_hello'_11: msg,i_cr'_10: bytes32,i_kex_data'_10: bitstring,psk_data'_25: bitstring) = (if v_1260 then (if v_1263 then (CH(o_cr_12,o_offer_30),i_client_hello_19,i_cr_10,i_kex_data_9,psk_data_30) else fail-any) else fail-any) in
                                    {5828}out(io, o_client_hello'_10);
                                    {5829}in(io, server_hello'_22: msg);
                                    {5830}let SH(B32(sr24'_10: bytes24,sr8'_10: bytes8),params'_10: params) = server_hello'_22 in
                                    {5832}let sh_modified_14: msg = SH(B32(sr24'_10,zero8),params'_10) in
                                    {5831}let cur_log_IN1_HRR_IN2_10: bitstring = (cur_log_IN1_HRR_3,i_client_hello'_11) in
                                    {5833}let cur_log_sh_14: bitstring = (cur_log_IN1_HRR_IN2_10,sh_modified_14) in
                                    {5834}let transcript_ech_conf_14: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_14)) in
                                    {5835}let v_1264: bool = not-caught-fail(transcript_ech_conf_14) in
                                    {5837}let k_134: bitstring = (if v_1264 then catch-fail(b32_2_b(get_random(i_client_hello'_11))) else caught-fail) in
                                    {5838}let v_1265: bool = not-caught-fail(k_134) in
                                    {5836}let s_136: bitstring = (if v_1264 then zero else caught-fail) in
                                    {5839}let k_135: bitstring = (if v_1264 then catch-fail((if v_1265 then hmac(@8_backend_h,s_136,k_134) else fail-any)) else caught-fail) in
                                    {5840}let v_1266: bool = not-caught-fail(k_135) in
                                    {5841}let l_341: label = (if v_1266 then ech_accept_confirmation else caught-fail) in
                                    {5842}let x_390: bitstring = (if v_1266 then (l_341,cur_log_sh_14) else caught-fail) in
                                    {5843}let sr8_18: bytes8 = (if v_1264 then catch-fail(crop_into_bytes8((if v_1266 then hmac(@8_backend_h,k_135,x_390) else fail-any))) else caught-fail) in
                                    {5844}let v_1267: bool = not-caught-fail(sr8_18) in
                                    {5845}if (B32(sr24'_10,sr8'_10) = (if v_1264 then (if v_1267 then B32(sr24'_10,sr8_18) else fail-any) else fail-any)) then
                                    {5846}let (x_391: bitstring,g_35: group) = i_kex_data'_10 in
                                    {5847}let (psk_offer_28: preSharedKey,id_offer_28: identityPsk,es_offer_28: bitstring,is_safe_offer_28: bool) = psk_data'_25 in
                                    {5848}event Client_PSKOffer(id_client_5,psk_offer_28,id_offer_28,is_safe_offer_28);
                                    {5849}event Client_Rand_client(id_client_5,i_cr'_10);
                                    {5850}event Client_DH_client(id_client_5,dh_pub(g_35,x_391));
                                    {5851}event Client_server_domain(id_client_5,backend_dom_1);
                                    {5852}let SH(sr_36: bytes32,mode_32: params) = server_hello'_22 in
                                    {5853}event Client_Rand_server(id_client_5,sr_36);
                                    {5854}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_35,gy_29: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_64: preSharedKeyExt) = mode_32 in
                                    (
                                        {5856}event Client_DH_server(id_client_5,gy_29);
                                        {5857}let v_1268: bool = (psk_ext_64 = empty_psk_ext) in
                                        {5858}let psk_136: preSharedKey = (if v_1268 then NoPsk else caught-fail) in
                                        {5860}let k_136: bitstring = (if v_1268 then catch-fail(psk2b(psk_136)) else caught-fail) in
                                        {5861}let v_1269: bool = not-caught-fail(k_136) in
                                        {5859}let s_137: bitstring = (if v_1268 then zero else caught-fail) in
                                        {5862}let early_secret_91: bitstring = (if v_1268 then catch-fail((if v_1269 then hmac(@8_backend_h,s_137,k_136) else fail-any)) else caught-fail) in
                                        {5863}let v_1270: bool = not-caught-fail(early_secret_91) in
                                        {5865}let m_119: bitstring = (if v_1270 then zero else caught-fail) in
                                        {5866}let h_322: bitstring = (if v_1270 then catch-fail(hash(@8_backend_h,m_119)) else caught-fail) in
                                        {5867}let v_1271: bool = not-caught-fail(h_322) in
                                        {5864}let l_342: label = (if v_1270 then tls13_ext_res_binder else caught-fail) in
                                        {5868}let x_392: bitstring = (if v_1271 then (l_342,h_322) else caught-fail) in
                                        {5869}let binder_key_61: bitstring = (if v_1270 then catch-fail((if v_1271 then hmac(@8_backend_h,early_secret_91,x_392) else fail-any)) else caught-fail) in
                                        {5870}let v_1272: bool = not-caught-fail(binder_key_61) in
                                        {5871}let v_1273: bitstring = (if v_1268 then catch-fail((if v_1270 then (if v_1272 then (early_secret_91,binder_key_61) else fail-any) else fail-any)) else caught-fail) in
                                        {5872}let v_1274: bool = (not-caught-fail(v_1273) && success?(1-proj-2-tuple(v_1273))) in
                                        {5873}let kb_61: mac_key = (if v_1274 then 2-proj-2-tuple(v_1273) else caught-fail) in
                                        {5874}let es_89: bitstring = (if v_1274 then 1-proj-2-tuple(v_1273) else caught-fail) in
                                        {5875}let v_1275: bitstring = (if not(v_1268) then catch-fail(psk_data'_25) else caught-fail) in
                                        {5876}let v_1276: bool = (not-caught-fail(v_1275) && success?(1-proj-4-tuple(v_1275))) in
                                        {5877}let is_safe_53: bool = (if v_1276 then 4-proj-4-tuple(v_1275) else caught-fail) in
                                        {5878}let es_90: bitstring = (if v_1276 then 3-proj-4-tuple(v_1275) else caught-fail) in
                                        {5879}let id_63: identityPsk = (if v_1276 then 2-proj-4-tuple(v_1275) else caught-fail) in
                                        {5880}let psk_137: preSharedKey = (if v_1276 then 1-proj-4-tuple(v_1275) else caught-fail) in
                                        {5881}let (psk_138: preSharedKey,early_secret_92: bitstring,valid_28: bool,safe_psk_31: bool) = (if v_1268 then (if v_1274 then (NoPsk,es_89,true,false) else fail-any) else (if v_1276 then (psk_137,es_90,((psk_137 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_64)),is_safe_53) else fail-any)) in
                                        {5882}event Client_PSKChoosen(id_client_5,psk_138,safe_psk_31);
                                        {5883}if valid_28 then
                                        (
                                            {5886}new s_138[]: seed;
                                            {5884}let gxy_58: element = catch-fail(dh_decap_fun(g_35,gy_29,x_391)) in
                                            {5885}let v_1277: bool = not-caught-fail(gxy_58) in
                                            {5887}let gxy_59: element = (if v_1277 then gxy_58 else dh_f(s_138)) in
                                            {5888}event Client_DH_gxy(id_client_5,gxy_59);
                                            {5890}let m_120: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {5891}let v_1278: bool = not-caught-fail(m_120) in
                                            {5892}let h_323: bitstring = (if v_1278 then catch-fail(hash(@8_backend_h,m_120)) else caught-fail) in
                                            {5893}let v_1279: bool = not-caught-fail(h_323) in
                                            {5889}let l_343: label = tls13_derived in
                                            {5894}let x_393: bitstring = (if v_1279 then (l_343,h_323) else caught-fail) in
                                            {5895}let extra_61: bitstring = catch-fail((if v_1278 then (if v_1279 then hmac(@8_backend_h,early_secret_92,x_393) else fail-any) else fail-any)) in
                                            {5896}let v_1280: bool = not-caught-fail(extra_61) in
                                            {5897}let handshake_secret_29: bitstring = (if v_1280 then hmac(@8_backend_h,extra_61,gxy_59) else fail-any) in
                                            {5899}let m_121: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {5900}let v_1281: bool = not-caught-fail(m_121) in
                                            {5901}let h_324: bitstring = (if v_1281 then catch-fail(hash(@8_backend_h,m_121)) else caught-fail) in
                                            {5902}let v_1282: bool = not-caught-fail(h_324) in
                                            {5898}let l_344: label = tls13_derived in
                                            {5903}let x_394: bitstring = (if v_1282 then (l_344,h_324) else caught-fail) in
                                            {5904}let extra_62: bitstring = catch-fail((if v_1281 then (if v_1282 then hmac(@8_backend_h,handshake_secret_29,x_394) else fail-any) else fail-any)) in
                                            {5905}let v_1283: bool = not-caught-fail(extra_62) in
                                            {5906}let k_137: bitstring = (if v_1283 then zero else caught-fail) in
                                            {5907}let master_secret_65: bitstring = (if v_1283 then catch-fail(hmac(@8_backend_h,handshake_secret_29,k_137)) else caught-fail) in
                                            {5908}let v_1284: bool = not-caught-fail(master_secret_65) in
                                            {5855}let cur_log2_60: bitstring = (cur_log_IN1_HRR_IN2_10,server_hello'_22) in
                                            {5910}let h_325: bitstring = (if v_1284 then catch-fail(hash(@8_backend_h,cur_log2_60)) else caught-fail) in
                                            {5911}let v_1285: bool = not-caught-fail(h_325) in
                                            {5909}let l_345: label = (if v_1284 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {5912}let x_395: bitstring = (if v_1285 then (l_345,h_325) else caught-fail) in
                                            {5913}let client_hts_29: bitstring = (if v_1284 then catch-fail((if v_1285 then hmac(@8_backend_h,handshake_secret_29,x_395) else fail-any)) else caught-fail) in
                                            {5914}let v_1286: bool = not-caught-fail(client_hts_29) in
                                            {5916}let h_326: bitstring = (if v_1286 then catch-fail(hash(@8_backend_h,cur_log2_60)) else caught-fail) in
                                            {5917}let v_1287: bool = not-caught-fail(h_326) in
                                            {5915}let l_346: label = (if v_1286 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {5918}let x_396: bitstring = (if v_1287 then (l_346,h_326) else caught-fail) in
                                            {5919}let server_hts_29: bitstring = (if v_1286 then catch-fail((if v_1287 then hmac(@8_backend_h,handshake_secret_29,x_396) else fail-any)) else caught-fail) in
                                            {5920}let v_1288: bool = not-caught-fail(server_hts_29) in
                                            {5922}let h_327: bitstring = (if v_1288 then zero else caught-fail) in
                                            {5921}let l_347: label = (if v_1288 then tls13_key else caught-fail) in
                                            {5923}let x_397: bitstring = (if v_1288 then (l_347,h_327) else caught-fail) in
                                            {5924}let client_wkh_29: bitstring = (if v_1288 then catch-fail(hmac(@8_backend_h,client_hts_29,x_397)) else caught-fail) in
                                            {5925}let v_1289: bool = not-caught-fail(client_wkh_29) in
                                            {5927}let h_328: bitstring = (if v_1289 then zero else caught-fail) in
                                            {5926}let l_348: label = (if v_1289 then tls13_key else caught-fail) in
                                            {5928}let x_398: bitstring = (if v_1289 then (l_348,h_328) else caught-fail) in
                                            {5929}let server_wkh_29: bitstring = (if v_1289 then catch-fail(hmac(@8_backend_h,server_hts_29,x_398)) else caught-fail) in
                                            {5930}let v_1290: bool = not-caught-fail(server_wkh_29) in
                                            {5932}let h_329: bitstring = (if v_1290 then zero else caught-fail) in
                                            {5931}let l_349: label = (if v_1290 then tls13_finished else caught-fail) in
                                            {5933}let x_399: bitstring = (if v_1290 then (l_349,h_329) else caught-fail) in
                                            {5934}let client_fk_29: bitstring = (if v_1290 then catch-fail(hmac(@8_backend_h,client_hts_29,x_399)) else caught-fail) in
                                            {5935}let v_1291: bool = not-caught-fail(client_fk_29) in
                                            {5937}let h_330: bitstring = (if v_1291 then zero else caught-fail) in
                                            {5936}let l_350: label = (if v_1291 then tls13_finished else caught-fail) in
                                            {5938}let x_400: bitstring = (if v_1291 then (l_350,h_330) else caught-fail) in
                                            {5939}let server_fk_29: bitstring = (if v_1291 then catch-fail(hmac(@8_backend_h,server_hts_29,x_400)) else caught-fail) in
                                            {5940}let v_1292: bool = not-caught-fail(server_fk_29) in
                                            {5941}let (master_secret_66: bitstring,chk_36: aead_key,shk_35: aead_key,cfin_36: mac_key,sfin_35: mac_key) = (if v_1283 then (if v_1284 then (if v_1286 then (if v_1288 then (if v_1289 then (if v_1290 then (if v_1291 then (if v_1292 then (master_secret_65,client_wkh_29,server_wkh_29,client_fk_29,server_fk_29) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {5942}event Client_chk(id_client_5,chk_36);
                                            {5943}event Client_shk(id_client_5,shk_35);
                                            {5944}event Client_cfin(id_client_5,cfin_36);
                                            {5945}event Client_sfin(id_client_5,sfin_35);
                                            {5946}in(io, enc_ee_msg_28: bitstring);
                                            {5947}let ee_msg_33: msg = aead_dec(@8_backend_a,shk_35,0,zero,enc_ee_msg_28) in
                                            {5948}let EE(ech_ee_28: echExt,extra_ee_28: extraExt) = ee_msg_33 in
                                            {5949}let cur_log2_61: bitstring = (cur_log2_60,ee_msg_33) in
                                            {5950}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_10,sr_36,@8_backend_h,@8_backend_a,c_dom_6,backend_dom_1,psk_138,safe_psk_31,@8_comp_psk,master_secret_66,chk_36,0,shk_35,1,cfin_36,sfin_35,cur_log2_61)))
                                        )
                                        else
                                            {5951}out(io, illegal_parameter)
                                    )
                                    else
                                        {5952}out(io, illegal_parameter)
                            )
                            else
                                {5954}let psk_139: preSharedKey = NoPsk in
                                {5956}let k_138: bitstring = catch-fail(psk2b(psk_139)) in
                                {5957}let v_1293: bool = not-caught-fail(k_138) in
                                {5955}let s_139: bitstring = zero in
                                {5958}let early_secret_93: bitstring = catch-fail((if v_1293 then hmac(@8_backend_h,s_139,k_138) else fail-any)) in
                                {5959}let v_1294: bool = not-caught-fail(early_secret_93) in
                                {5961}let m_122: bitstring = (if v_1294 then zero else caught-fail) in
                                {5962}let h_331: bitstring = (if v_1294 then catch-fail(hash(@8_backend_h,m_122)) else caught-fail) in
                                {5963}let v_1295: bool = not-caught-fail(h_331) in
                                {5960}let l_351: label = (if v_1294 then tls13_ext_res_binder else caught-fail) in
                                {5964}let x_401: bitstring = (if v_1295 then (l_351,h_331) else caught-fail) in
                                {5965}let binder_key_62: bitstring = (if v_1294 then catch-fail((if v_1295 then hmac(@8_backend_h,early_secret_93,x_401) else fail-any)) else caught-fail) in
                                {5966}let v_1296: bool = not-caught-fail(binder_key_62) in
                                {5967}let v_1297: bitstring = catch-fail((if v_1294 then (if v_1296 then (early_secret_93,binder_key_62) else fail-any) else fail-any)) in
                                {5968}let v_1298: bool = (not-caught-fail(v_1297) && success?(1-proj-2-tuple(v_1297))) in
                                {5969}let kb_62: mac_key = (if v_1298 then 2-proj-2-tuple(v_1297) else caught-fail) in
                                {5970}let es_91: bitstring = (if v_1298 then 1-proj-2-tuple(v_1297) else caught-fail) in
                                {5971}let v_1299: bitstring = catch-fail((if v_1298 then (empty_psk_ext,(NoPsk,zero,es_91,false)) else fail-any)) in
                                {5972}let v_1300: bool = (not-caught-fail(v_1299) && success?(1-proj-2-tuple(v_1299))) in
                                {5973}let psk_data_31: bitstring = (if v_1300 then 2-proj-2-tuple(v_1299) else caught-fail) in
                                {5974}let psk_ext_65: preSharedKeyExt = (if v_1300 then 1-proj-2-tuple(v_1299) else caught-fail) in
                                {5977}new fake_id_18[]: identityPsk;
                                {5978}new fake_binder_18[]: bitstring;
                                {5984}let v_1301: hpkeContext = (if v_1300 then catch-fail(context_2) else caught-fail) in
                                {5985}let v_1302: bool = (not-caught-fail(v_1301) && ((S =nf 1-proj-hpke_context(v_1301)) && success?(1-proj-hpke_context(v_1301)))) in
                                {5986}let base_nonce_20: bitstring = (if v_1302 then 3-proj-hpke_context(v_1301) else caught-fail) in
                                {5987}let key_20: aead_key = (if v_1302 then 2-proj-hpke_context(v_1301) else caught-fail) in
                                {5983}let n_17: nat = (if v_1300 then 2 else caught-fail) in
                                {5980}let o_ech_ext_ADD_15: echExt = (if v_1300 then ECHClientHelloOuter(ech_h_14,ech_a_14,config_id_14,zero,zero) else caught-fail) in
                                {5979}let o_psk_ext_19: preSharedKeyExt = (if v_1300 then (if @8_use_psk then client_psk_ext(fake_id_18,fake_binder_18) else empty_psk_ext) else caught-fail) in
                                {5981}let o_offer_ADD_15: params = (if v_1300 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_8,SNI(o_dom_10),o_ech_ext_ADD_15,empty_extra_ext,o_psk_ext_19) else caught-fail) in
                                {5982}let o_client_hello_ADD_15: msg = (if v_1300 then CH(o_cr_12,o_offer_ADD_15) else caught-fail) in
                                {5975}let i_offer_15: params = (if v_1300 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_6,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_65) else caught-fail) in
                                {5976}let i_client_hello_20: msg = (if v_1300 then CH(i_cr_10,i_offer_15) else caught-fail) in
                                {5988}let payload_21: bitstring = (if v_1300 then catch-fail((if v_1302 then aead_enc(ech_a_14,key_20,(base_nonce_20,n_17),o_client_hello_ADD_15,i_client_hello_20) else fail-any)) else caught-fail) in
                                {5989}let v_1303: bool = not-caught-fail(payload_21) in
                                {5990}let o_ech_ext_19: echExt = (if v_1303 then ECHClientHelloOuter(ech_h_14,ech_a_14,config_id_14,zero,payload_21) else caught-fail) in
                                {5991}let o_offer_31: params = (if v_1303 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_8,SNI(o_dom_10),o_ech_ext_19,empty_extra_ext,o_psk_ext_19) else caught-fail) in
                                {5992}let (o_client_hello'_11: msg,i_client_hello'_12: msg,i_cr'_11: bytes32,i_kex_data'_11: bitstring,psk_data'_26: bitstring) = (if v_1300 then (if v_1303 then (CH(o_cr_12,o_offer_31),i_client_hello_20,i_cr_10,i_kex_data_9,psk_data_31) else fail-any) else fail-any) in
                                {5993}out(io, o_client_hello'_11);
                                {5994}in(io, server_hello'_23: msg);
                                {5995}let SH(B32(sr24'_11: bytes24,sr8'_11: bytes8),params'_11: params) = server_hello'_23 in
                                {5997}let sh_modified_15: msg = SH(B32(sr24'_11,zero8),params'_11) in
                                {5996}let cur_log_IN1_HRR_IN2_11: bitstring = (cur_log_IN1_HRR_3,i_client_hello'_12) in
                                {5998}let cur_log_sh_15: bitstring = (cur_log_IN1_HRR_IN2_11,sh_modified_15) in
                                {5999}let transcript_ech_conf_15: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_15)) in
                                {6000}let v_1304: bool = not-caught-fail(transcript_ech_conf_15) in
                                {6002}let k_139: bitstring = (if v_1304 then catch-fail(b32_2_b(get_random(i_client_hello'_12))) else caught-fail) in
                                {6003}let v_1305: bool = not-caught-fail(k_139) in
                                {6001}let s_140: bitstring = (if v_1304 then zero else caught-fail) in
                                {6004}let k_140: bitstring = (if v_1304 then catch-fail((if v_1305 then hmac(@8_backend_h,s_140,k_139) else fail-any)) else caught-fail) in
                                {6005}let v_1306: bool = not-caught-fail(k_140) in
                                {6006}let l_352: label = (if v_1306 then ech_accept_confirmation else caught-fail) in
                                {6007}let x_402: bitstring = (if v_1306 then (l_352,cur_log_sh_15) else caught-fail) in
                                {6008}let sr8_19: bytes8 = (if v_1304 then catch-fail(crop_into_bytes8((if v_1306 then hmac(@8_backend_h,k_140,x_402) else fail-any))) else caught-fail) in
                                {6009}let v_1307: bool = not-caught-fail(sr8_19) in
                                {6010}if (B32(sr24'_11,sr8'_11) = (if v_1304 then (if v_1307 then B32(sr24'_11,sr8_19) else fail-any) else fail-any)) then
                                {6011}let (x_403: bitstring,g_36: group) = i_kex_data'_11 in
                                {6012}let (psk_offer_29: preSharedKey,id_offer_29: identityPsk,es_offer_29: bitstring,is_safe_offer_29: bool) = psk_data'_26 in
                                {6013}event Client_PSKOffer(id_client_5,psk_offer_29,id_offer_29,is_safe_offer_29);
                                {6014}event Client_Rand_client(id_client_5,i_cr'_11);
                                {6015}event Client_DH_client(id_client_5,dh_pub(g_36,x_403));
                                {6016}event Client_server_domain(id_client_5,backend_dom_1);
                                {6017}let SH(sr_37: bytes32,mode_33: params) = server_hello'_23 in
                                {6018}event Client_Rand_server(id_client_5,sr_37);
                                {6019}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_36,gy_30: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_66: preSharedKeyExt) = mode_33 in
                                (
                                    {6021}event Client_DH_server(id_client_5,gy_30);
                                    {6022}let v_1308: bool = (psk_ext_66 = empty_psk_ext) in
                                    {6023}let psk_140: preSharedKey = (if v_1308 then NoPsk else caught-fail) in
                                    {6025}let k_141: bitstring = (if v_1308 then catch-fail(psk2b(psk_140)) else caught-fail) in
                                    {6026}let v_1309: bool = not-caught-fail(k_141) in
                                    {6024}let s_141: bitstring = (if v_1308 then zero else caught-fail) in
                                    {6027}let early_secret_94: bitstring = (if v_1308 then catch-fail((if v_1309 then hmac(@8_backend_h,s_141,k_141) else fail-any)) else caught-fail) in
                                    {6028}let v_1310: bool = not-caught-fail(early_secret_94) in
                                    {6030}let m_123: bitstring = (if v_1310 then zero else caught-fail) in
                                    {6031}let h_332: bitstring = (if v_1310 then catch-fail(hash(@8_backend_h,m_123)) else caught-fail) in
                                    {6032}let v_1311: bool = not-caught-fail(h_332) in
                                    {6029}let l_353: label = (if v_1310 then tls13_ext_res_binder else caught-fail) in
                                    {6033}let x_404: bitstring = (if v_1311 then (l_353,h_332) else caught-fail) in
                                    {6034}let binder_key_63: bitstring = (if v_1310 then catch-fail((if v_1311 then hmac(@8_backend_h,early_secret_94,x_404) else fail-any)) else caught-fail) in
                                    {6035}let v_1312: bool = not-caught-fail(binder_key_63) in
                                    {6036}let v_1313: bitstring = (if v_1308 then catch-fail((if v_1310 then (if v_1312 then (early_secret_94,binder_key_63) else fail-any) else fail-any)) else caught-fail) in
                                    {6037}let v_1314: bool = (not-caught-fail(v_1313) && success?(1-proj-2-tuple(v_1313))) in
                                    {6038}let kb_63: mac_key = (if v_1314 then 2-proj-2-tuple(v_1313) else caught-fail) in
                                    {6039}let es_92: bitstring = (if v_1314 then 1-proj-2-tuple(v_1313) else caught-fail) in
                                    {6040}let v_1315: bitstring = (if not(v_1308) then catch-fail(psk_data'_26) else caught-fail) in
                                    {6041}let v_1316: bool = (not-caught-fail(v_1315) && success?(1-proj-4-tuple(v_1315))) in
                                    {6042}let is_safe_54: bool = (if v_1316 then 4-proj-4-tuple(v_1315) else caught-fail) in
                                    {6043}let es_93: bitstring = (if v_1316 then 3-proj-4-tuple(v_1315) else caught-fail) in
                                    {6044}let id_64: identityPsk = (if v_1316 then 2-proj-4-tuple(v_1315) else caught-fail) in
                                    {6045}let psk_141: preSharedKey = (if v_1316 then 1-proj-4-tuple(v_1315) else caught-fail) in
                                    {6046}let (psk_142: preSharedKey,early_secret_95: bitstring,valid_29: bool,safe_psk_32: bool) = (if v_1308 then (if v_1314 then (NoPsk,es_92,true,false) else fail-any) else (if v_1316 then (psk_141,es_93,((psk_141 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_66)),is_safe_54) else fail-any)) in
                                    {6047}event Client_PSKChoosen(id_client_5,psk_142,safe_psk_32);
                                    {6048}if valid_29 then
                                    (
                                        {6051}new s_142[]: seed;
                                        {6049}let gxy_60: element = catch-fail(dh_decap_fun(g_36,gy_30,x_403)) in
                                        {6050}let v_1317: bool = not-caught-fail(gxy_60) in
                                        {6052}let gxy_61: element = (if v_1317 then gxy_60 else dh_f(s_142)) in
                                        {6053}event Client_DH_gxy(id_client_5,gxy_61);
                                        {6055}let m_124: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {6056}let v_1318: bool = not-caught-fail(m_124) in
                                        {6057}let h_333: bitstring = (if v_1318 then catch-fail(hash(@8_backend_h,m_124)) else caught-fail) in
                                        {6058}let v_1319: bool = not-caught-fail(h_333) in
                                        {6054}let l_354: label = tls13_derived in
                                        {6059}let x_405: bitstring = (if v_1319 then (l_354,h_333) else caught-fail) in
                                        {6060}let extra_63: bitstring = catch-fail((if v_1318 then (if v_1319 then hmac(@8_backend_h,early_secret_95,x_405) else fail-any) else fail-any)) in
                                        {6061}let v_1320: bool = not-caught-fail(extra_63) in
                                        {6062}let handshake_secret_30: bitstring = (if v_1320 then hmac(@8_backend_h,extra_63,gxy_61) else fail-any) in
                                        {6064}let m_125: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {6065}let v_1321: bool = not-caught-fail(m_125) in
                                        {6066}let h_334: bitstring = (if v_1321 then catch-fail(hash(@8_backend_h,m_125)) else caught-fail) in
                                        {6067}let v_1322: bool = not-caught-fail(h_334) in
                                        {6063}let l_355: label = tls13_derived in
                                        {6068}let x_406: bitstring = (if v_1322 then (l_355,h_334) else caught-fail) in
                                        {6069}let extra_64: bitstring = catch-fail((if v_1321 then (if v_1322 then hmac(@8_backend_h,handshake_secret_30,x_406) else fail-any) else fail-any)) in
                                        {6070}let v_1323: bool = not-caught-fail(extra_64) in
                                        {6071}let k_142: bitstring = (if v_1323 then zero else caught-fail) in
                                        {6072}let master_secret_67: bitstring = (if v_1323 then catch-fail(hmac(@8_backend_h,handshake_secret_30,k_142)) else caught-fail) in
                                        {6073}let v_1324: bool = not-caught-fail(master_secret_67) in
                                        {6020}let cur_log2_62: bitstring = (cur_log_IN1_HRR_IN2_11,server_hello'_23) in
                                        {6075}let h_335: bitstring = (if v_1324 then catch-fail(hash(@8_backend_h,cur_log2_62)) else caught-fail) in
                                        {6076}let v_1325: bool = not-caught-fail(h_335) in
                                        {6074}let l_356: label = (if v_1324 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {6077}let x_407: bitstring = (if v_1325 then (l_356,h_335) else caught-fail) in
                                        {6078}let client_hts_30: bitstring = (if v_1324 then catch-fail((if v_1325 then hmac(@8_backend_h,handshake_secret_30,x_407) else fail-any)) else caught-fail) in
                                        {6079}let v_1326: bool = not-caught-fail(client_hts_30) in
                                        {6081}let h_336: bitstring = (if v_1326 then catch-fail(hash(@8_backend_h,cur_log2_62)) else caught-fail) in
                                        {6082}let v_1327: bool = not-caught-fail(h_336) in
                                        {6080}let l_357: label = (if v_1326 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {6083}let x_408: bitstring = (if v_1327 then (l_357,h_336) else caught-fail) in
                                        {6084}let server_hts_30: bitstring = (if v_1326 then catch-fail((if v_1327 then hmac(@8_backend_h,handshake_secret_30,x_408) else fail-any)) else caught-fail) in
                                        {6085}let v_1328: bool = not-caught-fail(server_hts_30) in
                                        {6087}let h_337: bitstring = (if v_1328 then zero else caught-fail) in
                                        {6086}let l_358: label = (if v_1328 then tls13_key else caught-fail) in
                                        {6088}let x_409: bitstring = (if v_1328 then (l_358,h_337) else caught-fail) in
                                        {6089}let client_wkh_30: bitstring = (if v_1328 then catch-fail(hmac(@8_backend_h,client_hts_30,x_409)) else caught-fail) in
                                        {6090}let v_1329: bool = not-caught-fail(client_wkh_30) in
                                        {6092}let h_338: bitstring = (if v_1329 then zero else caught-fail) in
                                        {6091}let l_359: label = (if v_1329 then tls13_key else caught-fail) in
                                        {6093}let x_410: bitstring = (if v_1329 then (l_359,h_338) else caught-fail) in
                                        {6094}let server_wkh_30: bitstring = (if v_1329 then catch-fail(hmac(@8_backend_h,server_hts_30,x_410)) else caught-fail) in
                                        {6095}let v_1330: bool = not-caught-fail(server_wkh_30) in
                                        {6097}let h_339: bitstring = (if v_1330 then zero else caught-fail) in
                                        {6096}let l_360: label = (if v_1330 then tls13_finished else caught-fail) in
                                        {6098}let x_411: bitstring = (if v_1330 then (l_360,h_339) else caught-fail) in
                                        {6099}let client_fk_30: bitstring = (if v_1330 then catch-fail(hmac(@8_backend_h,client_hts_30,x_411)) else caught-fail) in
                                        {6100}let v_1331: bool = not-caught-fail(client_fk_30) in
                                        {6102}let h_340: bitstring = (if v_1331 then zero else caught-fail) in
                                        {6101}let l_361: label = (if v_1331 then tls13_finished else caught-fail) in
                                        {6103}let x_412: bitstring = (if v_1331 then (l_361,h_340) else caught-fail) in
                                        {6104}let server_fk_30: bitstring = (if v_1331 then catch-fail(hmac(@8_backend_h,server_hts_30,x_412)) else caught-fail) in
                                        {6105}let v_1332: bool = not-caught-fail(server_fk_30) in
                                        {6106}let (master_secret_68: bitstring,chk_37: aead_key,shk_36: aead_key,cfin_37: mac_key,sfin_36: mac_key) = (if v_1323 then (if v_1324 then (if v_1326 then (if v_1328 then (if v_1329 then (if v_1330 then (if v_1331 then (if v_1332 then (master_secret_67,client_wkh_30,server_wkh_30,client_fk_30,server_fk_30) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {6107}event Client_chk(id_client_5,chk_37);
                                        {6108}event Client_shk(id_client_5,shk_36);
                                        {6109}event Client_cfin(id_client_5,cfin_37);
                                        {6110}event Client_sfin(id_client_5,sfin_36);
                                        {6111}in(io, enc_ee_msg_29: bitstring);
                                        {6112}let ee_msg_34: msg = aead_dec(@8_backend_a,shk_36,0,zero,enc_ee_msg_29) in
                                        {6113}let EE(ech_ee_29: echExt,extra_ee_29: extraExt) = ee_msg_34 in
                                        {6114}let cur_log2_63: bitstring = (cur_log2_62,ee_msg_34) in
                                        {6115}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_11,sr_37,@8_backend_h,@8_backend_a,c_dom_6,backend_dom_1,psk_142,safe_psk_32,@8_comp_psk,master_secret_68,chk_37,0,shk_36,1,cfin_37,sfin_36,cur_log2_63)))
                                    )
                                    else
                                        {6116}out(io, illegal_parameter)
                                )
                                else
                                    {6117}out(io, illegal_parameter)
                        )
                        else
                            {6119}let ech_config(config_id_15: configId,ech_g_15: group,pkR_17: element,o_dom_11: domain,ech_h_15: hash_alg,ech_a_15: aead_alg) = ech_conf_2 in
                            {6120}new rand24_16[]: bytes24;
                            {6121}new rand8_16[]: bytes8;
                            {6124}new s_143[]: seed;
                            {6125}let gx_39: element = dh_pub(@8_tls_g,dh_k(s_143)) in
                            {6126}let v_1333: bitstring = (dh_k(s_143),gx_39) in
                            {6127}let v_1334: bool = success?(1-proj-2-tuple(v_1333)) in
                            {6128}let gx_40: element = (if v_1334 then 2-proj-2-tuple(v_1333) else caught-fail) in
                            {6129}let x_413: bitstring = (if v_1334 then 1-proj-2-tuple(v_1333) else caught-fail) in
                            {6123}let send_key_share_11: bool = true in
                            {6130}let kex_15: kex_alg = (if v_1334 then (if send_key_share_11 then DHE_kex(@8_tls_g,gx_40) else DHE_group(@8_tls_g)) else caught-fail) in
                            {6131}let (o_kex_ext_9: keyShareExt,kex_data_3: bitstring) = (if v_1334 then (client_kex_ext(kex_15),(x_413,@8_tls_g)) else fail-any) in
                            {6122}let o_cr_13: bytes32 = B32(rand24_16,rand8_16) in
                            {6118}let cur_log_OU1_HRR_3: bitstring = ((zero,o_client_hello_5),server_hello_4) in
                            {6132}if @8_use_grease then
                            (
                                {6134}if @8_use_psk then
                                (
                                    {6133}let extra_65: extraExt = empty_extra_ext in
                                    {6135}let (psk_143: preSharedKey,id_65: identityPsk,old_es_9: bitstring,is_safe_55: bool) = psk_data_28 in
                                    (
                                        {6139}let k_143: bitstring = catch-fail(psk2b(psk_143)) in
                                        {6140}let v_1335: bool = not-caught-fail(k_143) in
                                        {6138}let s_144: bitstring = zero in
                                        {6141}let early_secret_96: bitstring = catch-fail((if v_1335 then hmac(@8_tls_h,s_144,k_143) else fail-any)) in
                                        {6142}let v_1336: bool = not-caught-fail(early_secret_96) in
                                        {6144}let m_126: bitstring = (if v_1336 then zero else caught-fail) in
                                        {6145}let h_341: bitstring = (if v_1336 then catch-fail(hash(@8_tls_h,m_126)) else caught-fail) in
                                        {6146}let v_1337: bool = not-caught-fail(h_341) in
                                        {6143}let l_362: label = (if v_1336 then tls13_ext_res_binder else caught-fail) in
                                        {6147}let x_414: bitstring = (if v_1337 then (l_362,h_341) else caught-fail) in
                                        {6148}let binder_key_64: bitstring = (if v_1336 then catch-fail((if v_1337 then hmac(@8_tls_h,early_secret_96,x_414) else fail-any)) else caught-fail) in
                                        {6149}let v_1338: bool = not-caught-fail(binder_key_64) in
                                        {6150}let v_1339: bitstring = catch-fail((if v_1336 then (if v_1338 then (early_secret_96,binder_key_64) else fail-any) else fail-any)) in
                                        {6151}let v_1340: bool = (not-caught-fail(v_1339) && success?(1-proj-2-tuple(v_1339))) in
                                        {6152}let kb_64: mac_key = (if v_1340 then 2-proj-2-tuple(v_1339) else caught-fail) in
                                        {6153}let es_94: bitstring = (if v_1340 then 1-proj-2-tuple(v_1339) else caught-fail) in
                                        {6136}let offer_19: params = nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_9,SNI(o_dom_11),o_ech_ext_16,extra_65,trunc_client_psk_ext(id_65)) in
                                        {6137}let cur_log'_19: bitstring = (cur_log_OU1_HRR_3,CH(o_cr_13,offer_19)) in
                                        {6154}let binders_18: bitstring = (if v_1340 then catch-fail(hmac(@8_tls_h,kb_64,cur_log'_19)) else caught-fail) in
                                        {6155}let v_1341: bool = not-caught-fail(binders_18) in
                                        {6156}let v_1342: bitstring = catch-fail((if v_1340 then (if v_1341 then (client_psk_ext(id_65,binders_18),(psk_143,id_65,es_94,is_safe_55)) else fail-any) else fail-any)) in
                                        {6157}let v_1343: bool = (not-caught-fail(v_1342) && success?(1-proj-2-tuple(v_1342))) in
                                        {6158}let psk_data_32: bitstring = (if v_1343 then 2-proj-2-tuple(v_1342) else caught-fail) in
                                        {6159}let psk_ext_67: preSharedKeyExt = (if v_1343 then 1-proj-2-tuple(v_1342) else caught-fail) in
                                        {6160}let o_offer_32: params = (if v_1343 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_9,SNI(o_dom_11),o_ech_ext_16,empty_extra_ext,psk_ext_67) else caught-fail) in
                                        {6161}let (client_hello'_15: msg,cr'_17: bytes32,kex_data'_12: bitstring,psk_data'_27: bitstring) = (if v_1343 then (CH(o_cr_13,o_offer_32),o_cr_13,kex_data_3,psk_data_32) else fail-any) in
                                        {6162}out(io, client_hello'_15);
                                        {6164}in(io, server_hello'_24: msg);
                                        {6165}let SH(sr'_12: bytes32,mode'_12: params) = server_hello'_24 in
                                        (
                                            {6166}if (sr'_12 = B32(HRR24,HRR8)) then
                                                {6167}out(io, unexpected_message)
                                            else
                                                {6168}let (x_415: bitstring,g_37: group) = kex_data'_12 in
                                                {6169}let (psk_offer_30: preSharedKey,id_offer_30: identityPsk,es_offer_30: bitstring,is_safe_offer_30: bool) = psk_data'_27 in
                                                {6170}event Client_PSKOffer(id_client_5,psk_offer_30,id_offer_30,is_safe_offer_30);
                                                {6171}event Client_Rand_client(id_client_5,cr'_17);
                                                {6172}event Client_DH_client(id_client_5,dh_pub(g_37,x_415));
                                                {6173}event Client_server_domain(id_client_5,o_dom_8);
                                                {6174}let SH(sr_38: bytes32,mode_34: params) = server_hello'_24 in
                                                {6175}event Client_Rand_server(id_client_5,sr_38);
                                                {6176}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_37,gy_31: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_68: preSharedKeyExt) = mode_34 in
                                                (
                                                    {6178}event Client_DH_server(id_client_5,gy_31);
                                                    {6179}let v_1344: bool = (psk_ext_68 = empty_psk_ext) in
                                                    {6180}let psk_144: preSharedKey = (if v_1344 then NoPsk else caught-fail) in
                                                    {6182}let k_144: bitstring = (if v_1344 then catch-fail(psk2b(psk_144)) else caught-fail) in
                                                    {6183}let v_1345: bool = not-caught-fail(k_144) in
                                                    {6181}let s_145: bitstring = (if v_1344 then zero else caught-fail) in
                                                    {6184}let early_secret_97: bitstring = (if v_1344 then catch-fail((if v_1345 then hmac(@8_tls_h,s_145,k_144) else fail-any)) else caught-fail) in
                                                    {6185}let v_1346: bool = not-caught-fail(early_secret_97) in
                                                    {6187}let m_127: bitstring = (if v_1346 then zero else caught-fail) in
                                                    {6188}let h_342: bitstring = (if v_1346 then catch-fail(hash(@8_tls_h,m_127)) else caught-fail) in
                                                    {6189}let v_1347: bool = not-caught-fail(h_342) in
                                                    {6186}let l_363: label = (if v_1346 then tls13_ext_res_binder else caught-fail) in
                                                    {6190}let x_416: bitstring = (if v_1347 then (l_363,h_342) else caught-fail) in
                                                    {6191}let binder_key_65: bitstring = (if v_1346 then catch-fail((if v_1347 then hmac(@8_tls_h,early_secret_97,x_416) else fail-any)) else caught-fail) in
                                                    {6192}let v_1348: bool = not-caught-fail(binder_key_65) in
                                                    {6193}let v_1349: bitstring = (if v_1344 then catch-fail((if v_1346 then (if v_1348 then (early_secret_97,binder_key_65) else fail-any) else fail-any)) else caught-fail) in
                                                    {6194}let v_1350: bool = (not-caught-fail(v_1349) && success?(1-proj-2-tuple(v_1349))) in
                                                    {6195}let kb_65: mac_key = (if v_1350 then 2-proj-2-tuple(v_1349) else caught-fail) in
                                                    {6196}let es_95: bitstring = (if v_1350 then 1-proj-2-tuple(v_1349) else caught-fail) in
                                                    {6197}let v_1351: bitstring = (if not(v_1344) then catch-fail(psk_data'_27) else caught-fail) in
                                                    {6198}let v_1352: bool = (not-caught-fail(v_1351) && success?(1-proj-4-tuple(v_1351))) in
                                                    {6199}let is_safe_56: bool = (if v_1352 then 4-proj-4-tuple(v_1351) else caught-fail) in
                                                    {6200}let es_96: bitstring = (if v_1352 then 3-proj-4-tuple(v_1351) else caught-fail) in
                                                    {6201}let id_66: identityPsk = (if v_1352 then 2-proj-4-tuple(v_1351) else caught-fail) in
                                                    {6202}let psk_145: preSharedKey = (if v_1352 then 1-proj-4-tuple(v_1351) else caught-fail) in
                                                    {6203}let (psk_146: preSharedKey,early_secret_98: bitstring,valid_30: bool,safe_psk_33: bool) = (if v_1344 then (if v_1350 then (NoPsk,es_95,true,false) else fail-any) else (if v_1352 then (psk_145,es_96,((psk_145 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_68)),is_safe_56) else fail-any)) in
                                                    {6204}event Client_PSKChoosen(id_client_5,psk_146,safe_psk_33);
                                                    {6205}if valid_30 then
                                                    (
                                                        {6208}new s_146[]: seed;
                                                        {6206}let gxy_62: element = catch-fail(dh_decap_fun(g_37,gy_31,x_415)) in
                                                        {6207}let v_1353: bool = not-caught-fail(gxy_62) in
                                                        {6209}let gxy_63: element = (if v_1353 then gxy_62 else dh_f(s_146)) in
                                                        {6210}event Client_DH_gxy(id_client_5,gxy_63);
                                                        {6212}let m_128: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {6213}let v_1354: bool = not-caught-fail(m_128) in
                                                        {6214}let h_343: bitstring = (if v_1354 then catch-fail(hash(@8_tls_h,m_128)) else caught-fail) in
                                                        {6215}let v_1355: bool = not-caught-fail(h_343) in
                                                        {6211}let l_364: label = tls13_derived in
                                                        {6216}let x_417: bitstring = (if v_1355 then (l_364,h_343) else caught-fail) in
                                                        {6217}let extra_66: bitstring = catch-fail((if v_1354 then (if v_1355 then hmac(@8_tls_h,early_secret_98,x_417) else fail-any) else fail-any)) in
                                                        {6218}let v_1356: bool = not-caught-fail(extra_66) in
                                                        {6219}let handshake_secret_31: bitstring = (if v_1356 then hmac(@8_tls_h,extra_66,gxy_63) else fail-any) in
                                                        {6221}let m_129: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {6222}let v_1357: bool = not-caught-fail(m_129) in
                                                        {6223}let h_344: bitstring = (if v_1357 then catch-fail(hash(@8_tls_h,m_129)) else caught-fail) in
                                                        {6224}let v_1358: bool = not-caught-fail(h_344) in
                                                        {6220}let l_365: label = tls13_derived in
                                                        {6225}let x_418: bitstring = (if v_1358 then (l_365,h_344) else caught-fail) in
                                                        {6226}let extra_67: bitstring = catch-fail((if v_1357 then (if v_1358 then hmac(@8_tls_h,handshake_secret_31,x_418) else fail-any) else fail-any)) in
                                                        {6227}let v_1359: bool = not-caught-fail(extra_67) in
                                                        {6228}let k_145: bitstring = (if v_1359 then zero else caught-fail) in
                                                        {6229}let master_secret_69: bitstring = (if v_1359 then catch-fail(hmac(@8_tls_h,handshake_secret_31,k_145)) else caught-fail) in
                                                        {6230}let v_1360: bool = not-caught-fail(master_secret_69) in
                                                        {6163}let cur_log_OU1_HRR_OU2_12: bitstring = (cur_log_OU1_HRR_3,client_hello'_15) in
                                                        {6177}let cur_log2_64: bitstring = (cur_log_OU1_HRR_OU2_12,server_hello'_24) in
                                                        {6232}let h_345: bitstring = (if v_1360 then catch-fail(hash(@8_tls_h,cur_log2_64)) else caught-fail) in
                                                        {6233}let v_1361: bool = not-caught-fail(h_345) in
                                                        {6231}let l_366: label = (if v_1360 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {6234}let x_419: bitstring = (if v_1361 then (l_366,h_345) else caught-fail) in
                                                        {6235}let client_hts_31: bitstring = (if v_1360 then catch-fail((if v_1361 then hmac(@8_tls_h,handshake_secret_31,x_419) else fail-any)) else caught-fail) in
                                                        {6236}let v_1362: bool = not-caught-fail(client_hts_31) in
                                                        {6238}let h_346: bitstring = (if v_1362 then catch-fail(hash(@8_tls_h,cur_log2_64)) else caught-fail) in
                                                        {6239}let v_1363: bool = not-caught-fail(h_346) in
                                                        {6237}let l_367: label = (if v_1362 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {6240}let x_420: bitstring = (if v_1363 then (l_367,h_346) else caught-fail) in
                                                        {6241}let server_hts_31: bitstring = (if v_1362 then catch-fail((if v_1363 then hmac(@8_tls_h,handshake_secret_31,x_420) else fail-any)) else caught-fail) in
                                                        {6242}let v_1364: bool = not-caught-fail(server_hts_31) in
                                                        {6244}let h_347: bitstring = (if v_1364 then zero else caught-fail) in
                                                        {6243}let l_368: label = (if v_1364 then tls13_key else caught-fail) in
                                                        {6245}let x_421: bitstring = (if v_1364 then (l_368,h_347) else caught-fail) in
                                                        {6246}let client_wkh_31: bitstring = (if v_1364 then catch-fail(hmac(@8_tls_h,client_hts_31,x_421)) else caught-fail) in
                                                        {6247}let v_1365: bool = not-caught-fail(client_wkh_31) in
                                                        {6249}let h_348: bitstring = (if v_1365 then zero else caught-fail) in
                                                        {6248}let l_369: label = (if v_1365 then tls13_key else caught-fail) in
                                                        {6250}let x_422: bitstring = (if v_1365 then (l_369,h_348) else caught-fail) in
                                                        {6251}let server_wkh_31: bitstring = (if v_1365 then catch-fail(hmac(@8_tls_h,server_hts_31,x_422)) else caught-fail) in
                                                        {6252}let v_1366: bool = not-caught-fail(server_wkh_31) in
                                                        {6254}let h_349: bitstring = (if v_1366 then zero else caught-fail) in
                                                        {6253}let l_370: label = (if v_1366 then tls13_finished else caught-fail) in
                                                        {6255}let x_423: bitstring = (if v_1366 then (l_370,h_349) else caught-fail) in
                                                        {6256}let client_fk_31: bitstring = (if v_1366 then catch-fail(hmac(@8_tls_h,client_hts_31,x_423)) else caught-fail) in
                                                        {6257}let v_1367: bool = not-caught-fail(client_fk_31) in
                                                        {6259}let h_350: bitstring = (if v_1367 then zero else caught-fail) in
                                                        {6258}let l_371: label = (if v_1367 then tls13_finished else caught-fail) in
                                                        {6260}let x_424: bitstring = (if v_1367 then (l_371,h_350) else caught-fail) in
                                                        {6261}let server_fk_31: bitstring = (if v_1367 then catch-fail(hmac(@8_tls_h,server_hts_31,x_424)) else caught-fail) in
                                                        {6262}let v_1368: bool = not-caught-fail(server_fk_31) in
                                                        {6263}let (master_secret_70: bitstring,chk_38: aead_key,shk_37: aead_key,cfin_38: mac_key,sfin_37: mac_key) = (if v_1359 then (if v_1360 then (if v_1362 then (if v_1364 then (if v_1365 then (if v_1366 then (if v_1367 then (if v_1368 then (master_secret_69,client_wkh_31,server_wkh_31,client_fk_31,server_fk_31) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {6264}event Client_chk(id_client_5,chk_38);
                                                        {6265}event Client_shk(id_client_5,shk_37);
                                                        {6266}event Client_cfin(id_client_5,cfin_38);
                                                        {6267}event Client_sfin(id_client_5,sfin_37);
                                                        {6268}in(io, enc_ee_msg_30: bitstring);
                                                        {6269}let ee_msg_35: msg = aead_dec(@8_tls_a,shk_37,0,zero,enc_ee_msg_30) in
                                                        {6270}let EE(ech_ee_30: echExt,extra_ee_30: extraExt) = ee_msg_35 in
                                                        {6271}let cur_log2_65: bitstring = (cur_log2_64,ee_msg_35) in
                                                        {6272}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_17,sr_38,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_146,safe_psk_33,@8_comp_psk,master_secret_70,chk_38,0,shk_37,1,cfin_38,sfin_37,cur_log2_65)))
                                                    )
                                                    else
                                                        {6273}out(io, illegal_parameter)
                                                )
                                                else
                                                    {6274}out(io, illegal_parameter)
                                        )
                                        else
                                            {6275}out(io, unexpected_message)
                                    )
                                    else
                                        {6425}get pre_shared_keys(c_dom'_10: domain,=o_dom_11,=@8_tls_h,id_67: identityPsk,psk_147: preSharedKey,idP_12: idProc,is_safe_57: bool) in
                                        {6276}event Selected_one_time_used_psk(id_client_5,psk_147,is_safe_57);
                                        {6277}event Selected_psk(c_dom_6,c_dom'_10,idP_12,is_safe_57);
                                        {6278}event Selected_psk_no_missmatch(id_client_5,o_dom_11,@8_tls_h,psk_147,id_67);
                                        {6279}event Selected_psk_with_ID(c_dom_6,c_dom'_10,id_67,idP_12,is_safe_57);
                                        {6280}let v_1369: bitstring = (id_67,psk_147,is_safe_57) in
                                        {6281}let v_1370: bool = success?(1-proj-3-tuple(v_1369)) in
                                        {6282}let is_safe_58: bool = (if v_1370 then 3-proj-3-tuple(v_1369) else caught-fail) in
                                        {6283}let psk_148: preSharedKey = (if v_1370 then 2-proj-3-tuple(v_1369) else caught-fail) in
                                        {6284}let id_68: identityPsk = (if v_1370 then 1-proj-3-tuple(v_1369) else caught-fail) in
                                        {6288}let k_146: bitstring = (if v_1370 then catch-fail(psk2b(psk_148)) else caught-fail) in
                                        {6289}let v_1371: bool = not-caught-fail(k_146) in
                                        {6287}let s_147: bitstring = (if v_1370 then zero else caught-fail) in
                                        {6290}let early_secret_99: bitstring = (if v_1370 then catch-fail((if v_1371 then hmac(@8_tls_h,s_147,k_146) else fail-any)) else caught-fail) in
                                        {6291}let v_1372: bool = not-caught-fail(early_secret_99) in
                                        {6293}let m_130: bitstring = (if v_1372 then zero else caught-fail) in
                                        {6294}let h_351: bitstring = (if v_1372 then catch-fail(hash(@8_tls_h,m_130)) else caught-fail) in
                                        {6295}let v_1373: bool = not-caught-fail(h_351) in
                                        {6292}let l_372: label = (if v_1372 then tls13_ext_res_binder else caught-fail) in
                                        {6296}let x_425: bitstring = (if v_1373 then (l_372,h_351) else caught-fail) in
                                        {6297}let binder_key_66: bitstring = (if v_1372 then catch-fail((if v_1373 then hmac(@8_tls_h,early_secret_99,x_425) else fail-any)) else caught-fail) in
                                        {6298}let v_1374: bool = not-caught-fail(binder_key_66) in
                                        {6299}let v_1375: bitstring = (if v_1370 then catch-fail((if v_1372 then (if v_1374 then (early_secret_99,binder_key_66) else fail-any) else fail-any)) else caught-fail) in
                                        {6300}let v_1376: bool = (not-caught-fail(v_1375) && success?(1-proj-2-tuple(v_1375))) in
                                        {6301}let kb_66: mac_key = (if v_1376 then 2-proj-2-tuple(v_1375) else caught-fail) in
                                        {6302}let es_97: bitstring = (if v_1376 then 1-proj-2-tuple(v_1375) else caught-fail) in
                                        {6285}let offer_20: params = (if v_1370 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_9,SNI(o_dom_11),o_ech_ext_16,extra_65,trunc_client_psk_ext(id_68)) else caught-fail) in
                                        {6286}let cur_log'_20: bitstring = (if v_1370 then (cur_log_OU1_HRR_3,CH(o_cr_13,offer_20)) else caught-fail) in
                                        {6303}let binders_19: bitstring = (if v_1376 then catch-fail(hmac(@8_tls_h,kb_66,cur_log'_20)) else caught-fail) in
                                        {6304}let v_1377: bool = not-caught-fail(binders_19) in
                                        {6305}let v_1378: bitstring = catch-fail((if v_1370 then (if v_1376 then (if v_1377 then (client_psk_ext(id_68,binders_19),(psk_148,id_68,es_97,is_safe_58)) else fail-any) else fail-any) else fail-any)) in
                                        {6306}let v_1379: bool = (not-caught-fail(v_1378) && success?(1-proj-2-tuple(v_1378))) in
                                        {6307}let psk_data_33: bitstring = (if v_1379 then 2-proj-2-tuple(v_1378) else caught-fail) in
                                        {6308}let psk_ext_69: preSharedKeyExt = (if v_1379 then 1-proj-2-tuple(v_1378) else caught-fail) in
                                        {6309}let o_offer_33: params = (if v_1379 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_9,SNI(o_dom_11),o_ech_ext_16,empty_extra_ext,psk_ext_69) else caught-fail) in
                                        {6310}let (client_hello'_16: msg,cr'_18: bytes32,kex_data'_13: bitstring,psk_data'_28: bitstring) = (if v_1379 then (CH(o_cr_13,o_offer_33),o_cr_13,kex_data_3,psk_data_33) else fail-any) in
                                        {6311}out(io, client_hello'_16);
                                        {6313}in(io, server_hello'_25: msg);
                                        {6314}let SH(sr'_13: bytes32,mode'_13: params) = server_hello'_25 in
                                        (
                                            {6315}if (sr'_13 = B32(HRR24,HRR8)) then
                                                {6316}out(io, unexpected_message)
                                            else
                                                {6317}let (x_426: bitstring,g_38: group) = kex_data'_13 in
                                                {6318}let (psk_offer_31: preSharedKey,id_offer_31: identityPsk,es_offer_31: bitstring,is_safe_offer_31: bool) = psk_data'_28 in
                                                {6319}event Client_PSKOffer(id_client_5,psk_offer_31,id_offer_31,is_safe_offer_31);
                                                {6320}event Client_Rand_client(id_client_5,cr'_18);
                                                {6321}event Client_DH_client(id_client_5,dh_pub(g_38,x_426));
                                                {6322}event Client_server_domain(id_client_5,o_dom_8);
                                                {6323}let SH(sr_39: bytes32,mode_35: params) = server_hello'_25 in
                                                {6324}event Client_Rand_server(id_client_5,sr_39);
                                                {6325}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_38,gy_32: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_70: preSharedKeyExt) = mode_35 in
                                                (
                                                    {6327}event Client_DH_server(id_client_5,gy_32);
                                                    {6328}let v_1380: bool = (psk_ext_70 = empty_psk_ext) in
                                                    {6329}let psk_149: preSharedKey = (if v_1380 then NoPsk else caught-fail) in
                                                    {6331}let k_147: bitstring = (if v_1380 then catch-fail(psk2b(psk_149)) else caught-fail) in
                                                    {6332}let v_1381: bool = not-caught-fail(k_147) in
                                                    {6330}let s_148: bitstring = (if v_1380 then zero else caught-fail) in
                                                    {6333}let early_secret_100: bitstring = (if v_1380 then catch-fail((if v_1381 then hmac(@8_tls_h,s_148,k_147) else fail-any)) else caught-fail) in
                                                    {6334}let v_1382: bool = not-caught-fail(early_secret_100) in
                                                    {6336}let m_131: bitstring = (if v_1382 then zero else caught-fail) in
                                                    {6337}let h_352: bitstring = (if v_1382 then catch-fail(hash(@8_tls_h,m_131)) else caught-fail) in
                                                    {6338}let v_1383: bool = not-caught-fail(h_352) in
                                                    {6335}let l_373: label = (if v_1382 then tls13_ext_res_binder else caught-fail) in
                                                    {6339}let x_427: bitstring = (if v_1383 then (l_373,h_352) else caught-fail) in
                                                    {6340}let binder_key_67: bitstring = (if v_1382 then catch-fail((if v_1383 then hmac(@8_tls_h,early_secret_100,x_427) else fail-any)) else caught-fail) in
                                                    {6341}let v_1384: bool = not-caught-fail(binder_key_67) in
                                                    {6342}let v_1385: bitstring = (if v_1380 then catch-fail((if v_1382 then (if v_1384 then (early_secret_100,binder_key_67) else fail-any) else fail-any)) else caught-fail) in
                                                    {6343}let v_1386: bool = (not-caught-fail(v_1385) && success?(1-proj-2-tuple(v_1385))) in
                                                    {6344}let kb_67: mac_key = (if v_1386 then 2-proj-2-tuple(v_1385) else caught-fail) in
                                                    {6345}let es_98: bitstring = (if v_1386 then 1-proj-2-tuple(v_1385) else caught-fail) in
                                                    {6346}let v_1387: bitstring = (if not(v_1380) then catch-fail(psk_data'_28) else caught-fail) in
                                                    {6347}let v_1388: bool = (not-caught-fail(v_1387) && success?(1-proj-4-tuple(v_1387))) in
                                                    {6348}let is_safe_59: bool = (if v_1388 then 4-proj-4-tuple(v_1387) else caught-fail) in
                                                    {6349}let es_99: bitstring = (if v_1388 then 3-proj-4-tuple(v_1387) else caught-fail) in
                                                    {6350}let id_69: identityPsk = (if v_1388 then 2-proj-4-tuple(v_1387) else caught-fail) in
                                                    {6351}let psk_150: preSharedKey = (if v_1388 then 1-proj-4-tuple(v_1387) else caught-fail) in
                                                    {6352}let (psk_151: preSharedKey,early_secret_101: bitstring,valid_31: bool,safe_psk_34: bool) = (if v_1380 then (if v_1386 then (NoPsk,es_98,true,false) else fail-any) else (if v_1388 then (psk_150,es_99,((psk_150 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_70)),is_safe_59) else fail-any)) in
                                                    {6353}event Client_PSKChoosen(id_client_5,psk_151,safe_psk_34);
                                                    {6354}if valid_31 then
                                                    (
                                                        {6357}new s_149[]: seed;
                                                        {6355}let gxy_64: element = catch-fail(dh_decap_fun(g_38,gy_32,x_426)) in
                                                        {6356}let v_1389: bool = not-caught-fail(gxy_64) in
                                                        {6358}let gxy_65: element = (if v_1389 then gxy_64 else dh_f(s_149)) in
                                                        {6359}event Client_DH_gxy(id_client_5,gxy_65);
                                                        {6361}let m_132: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {6362}let v_1390: bool = not-caught-fail(m_132) in
                                                        {6363}let h_353: bitstring = (if v_1390 then catch-fail(hash(@8_tls_h,m_132)) else caught-fail) in
                                                        {6364}let v_1391: bool = not-caught-fail(h_353) in
                                                        {6360}let l_374: label = tls13_derived in
                                                        {6365}let x_428: bitstring = (if v_1391 then (l_374,h_353) else caught-fail) in
                                                        {6366}let extra_68: bitstring = catch-fail((if v_1390 then (if v_1391 then hmac(@8_tls_h,early_secret_101,x_428) else fail-any) else fail-any)) in
                                                        {6367}let v_1392: bool = not-caught-fail(extra_68) in
                                                        {6368}let handshake_secret_32: bitstring = (if v_1392 then hmac(@8_tls_h,extra_68,gxy_65) else fail-any) in
                                                        {6370}let m_133: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {6371}let v_1393: bool = not-caught-fail(m_133) in
                                                        {6372}let h_354: bitstring = (if v_1393 then catch-fail(hash(@8_tls_h,m_133)) else caught-fail) in
                                                        {6373}let v_1394: bool = not-caught-fail(h_354) in
                                                        {6369}let l_375: label = tls13_derived in
                                                        {6374}let x_429: bitstring = (if v_1394 then (l_375,h_354) else caught-fail) in
                                                        {6375}let extra_69: bitstring = catch-fail((if v_1393 then (if v_1394 then hmac(@8_tls_h,handshake_secret_32,x_429) else fail-any) else fail-any)) in
                                                        {6376}let v_1395: bool = not-caught-fail(extra_69) in
                                                        {6377}let k_148: bitstring = (if v_1395 then zero else caught-fail) in
                                                        {6378}let master_secret_71: bitstring = (if v_1395 then catch-fail(hmac(@8_tls_h,handshake_secret_32,k_148)) else caught-fail) in
                                                        {6379}let v_1396: bool = not-caught-fail(master_secret_71) in
                                                        {6312}let cur_log_OU1_HRR_OU2_13: bitstring = (cur_log_OU1_HRR_3,client_hello'_16) in
                                                        {6326}let cur_log2_66: bitstring = (cur_log_OU1_HRR_OU2_13,server_hello'_25) in
                                                        {6381}let h_355: bitstring = (if v_1396 then catch-fail(hash(@8_tls_h,cur_log2_66)) else caught-fail) in
                                                        {6382}let v_1397: bool = not-caught-fail(h_355) in
                                                        {6380}let l_376: label = (if v_1396 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {6383}let x_430: bitstring = (if v_1397 then (l_376,h_355) else caught-fail) in
                                                        {6384}let client_hts_32: bitstring = (if v_1396 then catch-fail((if v_1397 then hmac(@8_tls_h,handshake_secret_32,x_430) else fail-any)) else caught-fail) in
                                                        {6385}let v_1398: bool = not-caught-fail(client_hts_32) in
                                                        {6387}let h_356: bitstring = (if v_1398 then catch-fail(hash(@8_tls_h,cur_log2_66)) else caught-fail) in
                                                        {6388}let v_1399: bool = not-caught-fail(h_356) in
                                                        {6386}let l_377: label = (if v_1398 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {6389}let x_431: bitstring = (if v_1399 then (l_377,h_356) else caught-fail) in
                                                        {6390}let server_hts_32: bitstring = (if v_1398 then catch-fail((if v_1399 then hmac(@8_tls_h,handshake_secret_32,x_431) else fail-any)) else caught-fail) in
                                                        {6391}let v_1400: bool = not-caught-fail(server_hts_32) in
                                                        {6393}let h_357: bitstring = (if v_1400 then zero else caught-fail) in
                                                        {6392}let l_378: label = (if v_1400 then tls13_key else caught-fail) in
                                                        {6394}let x_432: bitstring = (if v_1400 then (l_378,h_357) else caught-fail) in
                                                        {6395}let client_wkh_32: bitstring = (if v_1400 then catch-fail(hmac(@8_tls_h,client_hts_32,x_432)) else caught-fail) in
                                                        {6396}let v_1401: bool = not-caught-fail(client_wkh_32) in
                                                        {6398}let h_358: bitstring = (if v_1401 then zero else caught-fail) in
                                                        {6397}let l_379: label = (if v_1401 then tls13_key else caught-fail) in
                                                        {6399}let x_433: bitstring = (if v_1401 then (l_379,h_358) else caught-fail) in
                                                        {6400}let server_wkh_32: bitstring = (if v_1401 then catch-fail(hmac(@8_tls_h,server_hts_32,x_433)) else caught-fail) in
                                                        {6401}let v_1402: bool = not-caught-fail(server_wkh_32) in
                                                        {6403}let h_359: bitstring = (if v_1402 then zero else caught-fail) in
                                                        {6402}let l_380: label = (if v_1402 then tls13_finished else caught-fail) in
                                                        {6404}let x_434: bitstring = (if v_1402 then (l_380,h_359) else caught-fail) in
                                                        {6405}let client_fk_32: bitstring = (if v_1402 then catch-fail(hmac(@8_tls_h,client_hts_32,x_434)) else caught-fail) in
                                                        {6406}let v_1403: bool = not-caught-fail(client_fk_32) in
                                                        {6408}let h_360: bitstring = (if v_1403 then zero else caught-fail) in
                                                        {6407}let l_381: label = (if v_1403 then tls13_finished else caught-fail) in
                                                        {6409}let x_435: bitstring = (if v_1403 then (l_381,h_360) else caught-fail) in
                                                        {6410}let server_fk_32: bitstring = (if v_1403 then catch-fail(hmac(@8_tls_h,server_hts_32,x_435)) else caught-fail) in
                                                        {6411}let v_1404: bool = not-caught-fail(server_fk_32) in
                                                        {6412}let (master_secret_72: bitstring,chk_39: aead_key,shk_38: aead_key,cfin_39: mac_key,sfin_38: mac_key) = (if v_1395 then (if v_1396 then (if v_1398 then (if v_1400 then (if v_1401 then (if v_1402 then (if v_1403 then (if v_1404 then (master_secret_71,client_wkh_32,server_wkh_32,client_fk_32,server_fk_32) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {6413}event Client_chk(id_client_5,chk_39);
                                                        {6414}event Client_shk(id_client_5,shk_38);
                                                        {6415}event Client_cfin(id_client_5,cfin_39);
                                                        {6416}event Client_sfin(id_client_5,sfin_38);
                                                        {6417}in(io, enc_ee_msg_31: bitstring);
                                                        {6418}let ee_msg_36: msg = aead_dec(@8_tls_a,shk_38,0,zero,enc_ee_msg_31) in
                                                        {6419}let EE(ech_ee_31: echExt,extra_ee_31: extraExt) = ee_msg_36 in
                                                        {6420}let cur_log2_67: bitstring = (cur_log2_66,ee_msg_36) in
                                                        {6421}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_18,sr_39,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_151,safe_psk_34,@8_comp_psk,master_secret_72,chk_39,0,shk_38,1,cfin_39,sfin_38,cur_log2_67)))
                                                    )
                                                    else
                                                        {6422}out(io, illegal_parameter)
                                                )
                                                else
                                                    {6423}out(io, illegal_parameter)
                                        )
                                        else
                                            {6424}out(io, unexpected_message)
                                )
                                else
                                    {6426}let psk_152: preSharedKey = NoPsk in
                                    {6428}let k_149: bitstring = catch-fail(psk2b(psk_152)) in
                                    {6429}let v_1405: bool = not-caught-fail(k_149) in
                                    {6427}let s_150: bitstring = zero in
                                    {6430}let early_secret_102: bitstring = catch-fail((if v_1405 then hmac(@8_tls_h,s_150,k_149) else fail-any)) in
                                    {6431}let v_1406: bool = not-caught-fail(early_secret_102) in
                                    {6433}let m_134: bitstring = (if v_1406 then zero else caught-fail) in
                                    {6434}let h_361: bitstring = (if v_1406 then catch-fail(hash(@8_tls_h,m_134)) else caught-fail) in
                                    {6435}let v_1407: bool = not-caught-fail(h_361) in
                                    {6432}let l_382: label = (if v_1406 then tls13_ext_res_binder else caught-fail) in
                                    {6436}let x_436: bitstring = (if v_1407 then (l_382,h_361) else caught-fail) in
                                    {6437}let binder_key_68: bitstring = (if v_1406 then catch-fail((if v_1407 then hmac(@8_tls_h,early_secret_102,x_436) else fail-any)) else caught-fail) in
                                    {6438}let v_1408: bool = not-caught-fail(binder_key_68) in
                                    {6439}let v_1409: bitstring = catch-fail((if v_1406 then (if v_1408 then (early_secret_102,binder_key_68) else fail-any) else fail-any)) in
                                    {6440}let v_1410: bool = (not-caught-fail(v_1409) && success?(1-proj-2-tuple(v_1409))) in
                                    {6441}let kb_68: mac_key = (if v_1410 then 2-proj-2-tuple(v_1409) else caught-fail) in
                                    {6442}let es_100: bitstring = (if v_1410 then 1-proj-2-tuple(v_1409) else caught-fail) in
                                    {6443}let v_1411: bitstring = catch-fail((if v_1410 then (empty_psk_ext,(NoPsk,zero,es_100,false)) else fail-any)) in
                                    {6444}let v_1412: bool = (not-caught-fail(v_1411) && success?(1-proj-2-tuple(v_1411))) in
                                    {6445}let psk_data_34: bitstring = (if v_1412 then 2-proj-2-tuple(v_1411) else caught-fail) in
                                    {6446}let psk_ext_71: preSharedKeyExt = (if v_1412 then 1-proj-2-tuple(v_1411) else caught-fail) in
                                    {6447}let o_offer_34: params = (if v_1412 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_9,SNI(o_dom_11),o_ech_ext_16,empty_extra_ext,psk_ext_71) else caught-fail) in
                                    {6448}let (client_hello'_17: msg,cr'_19: bytes32,kex_data'_14: bitstring,psk_data'_29: bitstring) = (if v_1412 then (CH(o_cr_13,o_offer_34),o_cr_13,kex_data_3,psk_data_34) else fail-any) in
                                    {6449}out(io, client_hello'_17);
                                    {6451}in(io, server_hello'_26: msg);
                                    {6452}let SH(sr'_14: bytes32,mode'_14: params) = server_hello'_26 in
                                    (
                                        {6453}if (sr'_14 = B32(HRR24,HRR8)) then
                                            {6454}out(io, unexpected_message)
                                        else
                                            {6455}let (x_437: bitstring,g_39: group) = kex_data'_14 in
                                            {6456}let (psk_offer_32: preSharedKey,id_offer_32: identityPsk,es_offer_32: bitstring,is_safe_offer_32: bool) = psk_data'_29 in
                                            {6457}event Client_PSKOffer(id_client_5,psk_offer_32,id_offer_32,is_safe_offer_32);
                                            {6458}event Client_Rand_client(id_client_5,cr'_19);
                                            {6459}event Client_DH_client(id_client_5,dh_pub(g_39,x_437));
                                            {6460}event Client_server_domain(id_client_5,o_dom_8);
                                            {6461}let SH(sr_40: bytes32,mode_36: params) = server_hello'_26 in
                                            {6462}event Client_Rand_server(id_client_5,sr_40);
                                            {6463}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_39,gy_33: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_72: preSharedKeyExt) = mode_36 in
                                            (
                                                {6465}event Client_DH_server(id_client_5,gy_33);
                                                {6466}let v_1413: bool = (psk_ext_72 = empty_psk_ext) in
                                                {6467}let psk_153: preSharedKey = (if v_1413 then NoPsk else caught-fail) in
                                                {6469}let k_150: bitstring = (if v_1413 then catch-fail(psk2b(psk_153)) else caught-fail) in
                                                {6470}let v_1414: bool = not-caught-fail(k_150) in
                                                {6468}let s_151: bitstring = (if v_1413 then zero else caught-fail) in
                                                {6471}let early_secret_103: bitstring = (if v_1413 then catch-fail((if v_1414 then hmac(@8_tls_h,s_151,k_150) else fail-any)) else caught-fail) in
                                                {6472}let v_1415: bool = not-caught-fail(early_secret_103) in
                                                {6474}let m_135: bitstring = (if v_1415 then zero else caught-fail) in
                                                {6475}let h_362: bitstring = (if v_1415 then catch-fail(hash(@8_tls_h,m_135)) else caught-fail) in
                                                {6476}let v_1416: bool = not-caught-fail(h_362) in
                                                {6473}let l_383: label = (if v_1415 then tls13_ext_res_binder else caught-fail) in
                                                {6477}let x_438: bitstring = (if v_1416 then (l_383,h_362) else caught-fail) in
                                                {6478}let binder_key_69: bitstring = (if v_1415 then catch-fail((if v_1416 then hmac(@8_tls_h,early_secret_103,x_438) else fail-any)) else caught-fail) in
                                                {6479}let v_1417: bool = not-caught-fail(binder_key_69) in
                                                {6480}let v_1418: bitstring = (if v_1413 then catch-fail((if v_1415 then (if v_1417 then (early_secret_103,binder_key_69) else fail-any) else fail-any)) else caught-fail) in
                                                {6481}let v_1419: bool = (not-caught-fail(v_1418) && success?(1-proj-2-tuple(v_1418))) in
                                                {6482}let kb_69: mac_key = (if v_1419 then 2-proj-2-tuple(v_1418) else caught-fail) in
                                                {6483}let es_101: bitstring = (if v_1419 then 1-proj-2-tuple(v_1418) else caught-fail) in
                                                {6484}let v_1420: bitstring = (if not(v_1413) then catch-fail(psk_data'_29) else caught-fail) in
                                                {6485}let v_1421: bool = (not-caught-fail(v_1420) && success?(1-proj-4-tuple(v_1420))) in
                                                {6486}let is_safe_60: bool = (if v_1421 then 4-proj-4-tuple(v_1420) else caught-fail) in
                                                {6487}let es_102: bitstring = (if v_1421 then 3-proj-4-tuple(v_1420) else caught-fail) in
                                                {6488}let id_70: identityPsk = (if v_1421 then 2-proj-4-tuple(v_1420) else caught-fail) in
                                                {6489}let psk_154: preSharedKey = (if v_1421 then 1-proj-4-tuple(v_1420) else caught-fail) in
                                                {6490}let (psk_155: preSharedKey,early_secret_104: bitstring,valid_32: bool,safe_psk_35: bool) = (if v_1413 then (if v_1419 then (NoPsk,es_101,true,false) else fail-any) else (if v_1421 then (psk_154,es_102,((psk_154 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_72)),is_safe_60) else fail-any)) in
                                                {6491}event Client_PSKChoosen(id_client_5,psk_155,safe_psk_35);
                                                {6492}if valid_32 then
                                                (
                                                    {6495}new s_152[]: seed;
                                                    {6493}let gxy_66: element = catch-fail(dh_decap_fun(g_39,gy_33,x_437)) in
                                                    {6494}let v_1422: bool = not-caught-fail(gxy_66) in
                                                    {6496}let gxy_67: element = (if v_1422 then gxy_66 else dh_f(s_152)) in
                                                    {6497}event Client_DH_gxy(id_client_5,gxy_67);
                                                    {6499}let m_136: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {6500}let v_1423: bool = not-caught-fail(m_136) in
                                                    {6501}let h_363: bitstring = (if v_1423 then catch-fail(hash(@8_tls_h,m_136)) else caught-fail) in
                                                    {6502}let v_1424: bool = not-caught-fail(h_363) in
                                                    {6498}let l_384: label = tls13_derived in
                                                    {6503}let x_439: bitstring = (if v_1424 then (l_384,h_363) else caught-fail) in
                                                    {6504}let extra_70: bitstring = catch-fail((if v_1423 then (if v_1424 then hmac(@8_tls_h,early_secret_104,x_439) else fail-any) else fail-any)) in
                                                    {6505}let v_1425: bool = not-caught-fail(extra_70) in
                                                    {6506}let handshake_secret_33: bitstring = (if v_1425 then hmac(@8_tls_h,extra_70,gxy_67) else fail-any) in
                                                    {6508}let m_137: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {6509}let v_1426: bool = not-caught-fail(m_137) in
                                                    {6510}let h_364: bitstring = (if v_1426 then catch-fail(hash(@8_tls_h,m_137)) else caught-fail) in
                                                    {6511}let v_1427: bool = not-caught-fail(h_364) in
                                                    {6507}let l_385: label = tls13_derived in
                                                    {6512}let x_440: bitstring = (if v_1427 then (l_385,h_364) else caught-fail) in
                                                    {6513}let extra_71: bitstring = catch-fail((if v_1426 then (if v_1427 then hmac(@8_tls_h,handshake_secret_33,x_440) else fail-any) else fail-any)) in
                                                    {6514}let v_1428: bool = not-caught-fail(extra_71) in
                                                    {6515}let k_151: bitstring = (if v_1428 then zero else caught-fail) in
                                                    {6516}let master_secret_73: bitstring = (if v_1428 then catch-fail(hmac(@8_tls_h,handshake_secret_33,k_151)) else caught-fail) in
                                                    {6517}let v_1429: bool = not-caught-fail(master_secret_73) in
                                                    {6450}let cur_log_OU1_HRR_OU2_14: bitstring = (cur_log_OU1_HRR_3,client_hello'_17) in
                                                    {6464}let cur_log2_68: bitstring = (cur_log_OU1_HRR_OU2_14,server_hello'_26) in
                                                    {6519}let h_365: bitstring = (if v_1429 then catch-fail(hash(@8_tls_h,cur_log2_68)) else caught-fail) in
                                                    {6520}let v_1430: bool = not-caught-fail(h_365) in
                                                    {6518}let l_386: label = (if v_1429 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {6521}let x_441: bitstring = (if v_1430 then (l_386,h_365) else caught-fail) in
                                                    {6522}let client_hts_33: bitstring = (if v_1429 then catch-fail((if v_1430 then hmac(@8_tls_h,handshake_secret_33,x_441) else fail-any)) else caught-fail) in
                                                    {6523}let v_1431: bool = not-caught-fail(client_hts_33) in
                                                    {6525}let h_366: bitstring = (if v_1431 then catch-fail(hash(@8_tls_h,cur_log2_68)) else caught-fail) in
                                                    {6526}let v_1432: bool = not-caught-fail(h_366) in
                                                    {6524}let l_387: label = (if v_1431 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {6527}let x_442: bitstring = (if v_1432 then (l_387,h_366) else caught-fail) in
                                                    {6528}let server_hts_33: bitstring = (if v_1431 then catch-fail((if v_1432 then hmac(@8_tls_h,handshake_secret_33,x_442) else fail-any)) else caught-fail) in
                                                    {6529}let v_1433: bool = not-caught-fail(server_hts_33) in
                                                    {6531}let h_367: bitstring = (if v_1433 then zero else caught-fail) in
                                                    {6530}let l_388: label = (if v_1433 then tls13_key else caught-fail) in
                                                    {6532}let x_443: bitstring = (if v_1433 then (l_388,h_367) else caught-fail) in
                                                    {6533}let client_wkh_33: bitstring = (if v_1433 then catch-fail(hmac(@8_tls_h,client_hts_33,x_443)) else caught-fail) in
                                                    {6534}let v_1434: bool = not-caught-fail(client_wkh_33) in
                                                    {6536}let h_368: bitstring = (if v_1434 then zero else caught-fail) in
                                                    {6535}let l_389: label = (if v_1434 then tls13_key else caught-fail) in
                                                    {6537}let x_444: bitstring = (if v_1434 then (l_389,h_368) else caught-fail) in
                                                    {6538}let server_wkh_33: bitstring = (if v_1434 then catch-fail(hmac(@8_tls_h,server_hts_33,x_444)) else caught-fail) in
                                                    {6539}let v_1435: bool = not-caught-fail(server_wkh_33) in
                                                    {6541}let h_369: bitstring = (if v_1435 then zero else caught-fail) in
                                                    {6540}let l_390: label = (if v_1435 then tls13_finished else caught-fail) in
                                                    {6542}let x_445: bitstring = (if v_1435 then (l_390,h_369) else caught-fail) in
                                                    {6543}let client_fk_33: bitstring = (if v_1435 then catch-fail(hmac(@8_tls_h,client_hts_33,x_445)) else caught-fail) in
                                                    {6544}let v_1436: bool = not-caught-fail(client_fk_33) in
                                                    {6546}let h_370: bitstring = (if v_1436 then zero else caught-fail) in
                                                    {6545}let l_391: label = (if v_1436 then tls13_finished else caught-fail) in
                                                    {6547}let x_446: bitstring = (if v_1436 then (l_391,h_370) else caught-fail) in
                                                    {6548}let server_fk_33: bitstring = (if v_1436 then catch-fail(hmac(@8_tls_h,server_hts_33,x_446)) else caught-fail) in
                                                    {6549}let v_1437: bool = not-caught-fail(server_fk_33) in
                                                    {6550}let (master_secret_74: bitstring,chk_40: aead_key,shk_39: aead_key,cfin_40: mac_key,sfin_39: mac_key) = (if v_1428 then (if v_1429 then (if v_1431 then (if v_1433 then (if v_1434 then (if v_1435 then (if v_1436 then (if v_1437 then (master_secret_73,client_wkh_33,server_wkh_33,client_fk_33,server_fk_33) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {6551}event Client_chk(id_client_5,chk_40);
                                                    {6552}event Client_shk(id_client_5,shk_39);
                                                    {6553}event Client_cfin(id_client_5,cfin_40);
                                                    {6554}event Client_sfin(id_client_5,sfin_39);
                                                    {6555}in(io, enc_ee_msg_32: bitstring);
                                                    {6556}let ee_msg_37: msg = aead_dec(@8_tls_a,shk_39,0,zero,enc_ee_msg_32) in
                                                    {6557}let EE(ech_ee_32: echExt,extra_ee_32: extraExt) = ee_msg_37 in
                                                    {6558}let cur_log2_69: bitstring = (cur_log2_68,ee_msg_37) in
                                                    {6559}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_19,sr_40,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_155,safe_psk_35,@8_comp_psk,master_secret_74,chk_40,0,shk_39,1,cfin_40,sfin_39,cur_log2_69)))
                                                )
                                                else
                                                    {6560}out(io, illegal_parameter)
                                            )
                                            else
                                                {6561}out(io, illegal_parameter)
                                    )
                                    else
                                        {6562}out(io, unexpected_message)
                            )
                            else
                                {6563}let psk_156: preSharedKey = NoPsk in
                                {6565}let k_152: bitstring = catch-fail(psk2b(psk_156)) in
                                {6566}let v_1438: bool = not-caught-fail(k_152) in
                                {6564}let s_153: bitstring = zero in
                                {6567}let early_secret_105: bitstring = catch-fail((if v_1438 then hmac(@8_tls_h,s_153,k_152) else fail-any)) in
                                {6568}let v_1439: bool = not-caught-fail(early_secret_105) in
                                {6570}let m_138: bitstring = (if v_1439 then zero else caught-fail) in
                                {6571}let h_371: bitstring = (if v_1439 then catch-fail(hash(@8_tls_h,m_138)) else caught-fail) in
                                {6572}let v_1440: bool = not-caught-fail(h_371) in
                                {6569}let l_392: label = (if v_1439 then tls13_ext_res_binder else caught-fail) in
                                {6573}let x_447: bitstring = (if v_1440 then (l_392,h_371) else caught-fail) in
                                {6574}let binder_key_70: bitstring = (if v_1439 then catch-fail((if v_1440 then hmac(@8_tls_h,early_secret_105,x_447) else fail-any)) else caught-fail) in
                                {6575}let v_1441: bool = not-caught-fail(binder_key_70) in
                                {6576}let v_1442: bitstring = catch-fail((if v_1439 then (if v_1441 then (early_secret_105,binder_key_70) else fail-any) else fail-any)) in
                                {6577}let v_1443: bool = (not-caught-fail(v_1442) && success?(1-proj-2-tuple(v_1442))) in
                                {6578}let kb_70: mac_key = (if v_1443 then 2-proj-2-tuple(v_1442) else caught-fail) in
                                {6579}let es_103: bitstring = (if v_1443 then 1-proj-2-tuple(v_1442) else caught-fail) in
                                {6580}let v_1444: preSharedKeyExt = (if v_1443 then catch-fail(o_psk_ext_16) else caught-fail) in
                                {6581}let v_1445: bool = (not-caught-fail(v_1444) && success?(1-proj-client_psk_ext(v_1444))) in
                                {6582}let fake_binder_19: bitstring = (if v_1445 then 2-proj-client_psk_ext(v_1444) else caught-fail) in
                                {6583}let fake_id_19: identityPsk = (if v_1445 then 1-proj-client_psk_ext(v_1444) else caught-fail) in
                                {6584}new fake_binder'_3[]: bitstring;
                                {6585}let v_1446: bitstring = catch-fail((if v_1443 then (if v_1445 then (client_psk_ext(fake_id_19,fake_binder'_3),(NoPsk,zero,es_103,false)) else (empty_psk_ext,(NoPsk,zero,es_103,false))) else fail-any)) in
                                {6586}let v_1447: bool = (not-caught-fail(v_1446) && success?(1-proj-2-tuple(v_1446))) in
                                {6587}let psk_data_35: bitstring = (if v_1447 then 2-proj-2-tuple(v_1446) else caught-fail) in
                                {6588}let psk_ext_73: preSharedKeyExt = (if v_1447 then 1-proj-2-tuple(v_1446) else caught-fail) in
                                {6589}let o_offer_35: params = (if v_1447 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_9,SNI(o_dom_11),o_ech_ext_16,empty_extra_ext,psk_ext_73) else caught-fail) in
                                {6590}let (client_hello'_18: msg,cr'_20: bytes32,kex_data'_15: bitstring,psk_data'_30: bitstring) = (if v_1447 then (CH(o_cr_13,o_offer_35),o_cr_13,kex_data_3,psk_data_35) else fail-any) in
                                {6591}out(io, client_hello'_18);
                                {6593}in(io, server_hello'_27: msg);
                                {6594}let SH(sr'_15: bytes32,mode'_15: params) = server_hello'_27 in
                                (
                                    {6595}if (sr'_15 = B32(HRR24,HRR8)) then
                                        {6596}out(io, unexpected_message)
                                    else
                                        {6597}let (x_448: bitstring,g_40: group) = kex_data'_15 in
                                        {6598}let (psk_offer_33: preSharedKey,id_offer_33: identityPsk,es_offer_33: bitstring,is_safe_offer_33: bool) = psk_data'_30 in
                                        {6599}event Client_PSKOffer(id_client_5,psk_offer_33,id_offer_33,is_safe_offer_33);
                                        {6600}event Client_Rand_client(id_client_5,cr'_20);
                                        {6601}event Client_DH_client(id_client_5,dh_pub(g_40,x_448));
                                        {6602}event Client_server_domain(id_client_5,o_dom_8);
                                        {6603}let SH(sr_41: bytes32,mode_37: params) = server_hello'_27 in
                                        {6604}event Client_Rand_server(id_client_5,sr_41);
                                        {6605}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_40,gy_34: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_74: preSharedKeyExt) = mode_37 in
                                        (
                                            {6607}event Client_DH_server(id_client_5,gy_34);
                                            {6608}let v_1448: bool = (psk_ext_74 = empty_psk_ext) in
                                            {6609}let psk_157: preSharedKey = (if v_1448 then NoPsk else caught-fail) in
                                            {6611}let k_153: bitstring = (if v_1448 then catch-fail(psk2b(psk_157)) else caught-fail) in
                                            {6612}let v_1449: bool = not-caught-fail(k_153) in
                                            {6610}let s_154: bitstring = (if v_1448 then zero else caught-fail) in
                                            {6613}let early_secret_106: bitstring = (if v_1448 then catch-fail((if v_1449 then hmac(@8_tls_h,s_154,k_153) else fail-any)) else caught-fail) in
                                            {6614}let v_1450: bool = not-caught-fail(early_secret_106) in
                                            {6616}let m_139: bitstring = (if v_1450 then zero else caught-fail) in
                                            {6617}let h_372: bitstring = (if v_1450 then catch-fail(hash(@8_tls_h,m_139)) else caught-fail) in
                                            {6618}let v_1451: bool = not-caught-fail(h_372) in
                                            {6615}let l_393: label = (if v_1450 then tls13_ext_res_binder else caught-fail) in
                                            {6619}let x_449: bitstring = (if v_1451 then (l_393,h_372) else caught-fail) in
                                            {6620}let binder_key_71: bitstring = (if v_1450 then catch-fail((if v_1451 then hmac(@8_tls_h,early_secret_106,x_449) else fail-any)) else caught-fail) in
                                            {6621}let v_1452: bool = not-caught-fail(binder_key_71) in
                                            {6622}let v_1453: bitstring = (if v_1448 then catch-fail((if v_1450 then (if v_1452 then (early_secret_106,binder_key_71) else fail-any) else fail-any)) else caught-fail) in
                                            {6623}let v_1454: bool = (not-caught-fail(v_1453) && success?(1-proj-2-tuple(v_1453))) in
                                            {6624}let kb_71: mac_key = (if v_1454 then 2-proj-2-tuple(v_1453) else caught-fail) in
                                            {6625}let es_104: bitstring = (if v_1454 then 1-proj-2-tuple(v_1453) else caught-fail) in
                                            {6626}let v_1455: bitstring = (if not(v_1448) then catch-fail(psk_data'_30) else caught-fail) in
                                            {6627}let v_1456: bool = (not-caught-fail(v_1455) && success?(1-proj-4-tuple(v_1455))) in
                                            {6628}let is_safe_61: bool = (if v_1456 then 4-proj-4-tuple(v_1455) else caught-fail) in
                                            {6629}let es_105: bitstring = (if v_1456 then 3-proj-4-tuple(v_1455) else caught-fail) in
                                            {6630}let id_71: identityPsk = (if v_1456 then 2-proj-4-tuple(v_1455) else caught-fail) in
                                            {6631}let psk_158: preSharedKey = (if v_1456 then 1-proj-4-tuple(v_1455) else caught-fail) in
                                            {6632}let (psk_159: preSharedKey,early_secret_107: bitstring,valid_33: bool,safe_psk_36: bool) = (if v_1448 then (if v_1454 then (NoPsk,es_104,true,false) else fail-any) else (if v_1456 then (psk_158,es_105,((psk_158 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_74)),is_safe_61) else fail-any)) in
                                            {6633}event Client_PSKChoosen(id_client_5,psk_159,safe_psk_36);
                                            {6634}if valid_33 then
                                            (
                                                {6637}new s_155[]: seed;
                                                {6635}let gxy_68: element = catch-fail(dh_decap_fun(g_40,gy_34,x_448)) in
                                                {6636}let v_1457: bool = not-caught-fail(gxy_68) in
                                                {6638}let gxy_69: element = (if v_1457 then gxy_68 else dh_f(s_155)) in
                                                {6639}event Client_DH_gxy(id_client_5,gxy_69);
                                                {6641}let m_140: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                {6642}let v_1458: bool = not-caught-fail(m_140) in
                                                {6643}let h_373: bitstring = (if v_1458 then catch-fail(hash(@8_tls_h,m_140)) else caught-fail) in
                                                {6644}let v_1459: bool = not-caught-fail(h_373) in
                                                {6640}let l_394: label = tls13_derived in
                                                {6645}let x_450: bitstring = (if v_1459 then (l_394,h_373) else caught-fail) in
                                                {6646}let extra_72: bitstring = catch-fail((if v_1458 then (if v_1459 then hmac(@8_tls_h,early_secret_107,x_450) else fail-any) else fail-any)) in
                                                {6647}let v_1460: bool = not-caught-fail(extra_72) in
                                                {6648}let handshake_secret_34: bitstring = (if v_1460 then hmac(@8_tls_h,extra_72,gxy_69) else fail-any) in
                                                {6650}let m_141: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                {6651}let v_1461: bool = not-caught-fail(m_141) in
                                                {6652}let h_374: bitstring = (if v_1461 then catch-fail(hash(@8_tls_h,m_141)) else caught-fail) in
                                                {6653}let v_1462: bool = not-caught-fail(h_374) in
                                                {6649}let l_395: label = tls13_derived in
                                                {6654}let x_451: bitstring = (if v_1462 then (l_395,h_374) else caught-fail) in
                                                {6655}let extra_73: bitstring = catch-fail((if v_1461 then (if v_1462 then hmac(@8_tls_h,handshake_secret_34,x_451) else fail-any) else fail-any)) in
                                                {6656}let v_1463: bool = not-caught-fail(extra_73) in
                                                {6657}let k_154: bitstring = (if v_1463 then zero else caught-fail) in
                                                {6658}let master_secret_75: bitstring = (if v_1463 then catch-fail(hmac(@8_tls_h,handshake_secret_34,k_154)) else caught-fail) in
                                                {6659}let v_1464: bool = not-caught-fail(master_secret_75) in
                                                {6592}let cur_log_OU1_HRR_OU2_15: bitstring = (cur_log_OU1_HRR_3,client_hello'_18) in
                                                {6606}let cur_log2_70: bitstring = (cur_log_OU1_HRR_OU2_15,server_hello'_27) in
                                                {6661}let h_375: bitstring = (if v_1464 then catch-fail(hash(@8_tls_h,cur_log2_70)) else caught-fail) in
                                                {6662}let v_1465: bool = not-caught-fail(h_375) in
                                                {6660}let l_396: label = (if v_1464 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {6663}let x_452: bitstring = (if v_1465 then (l_396,h_375) else caught-fail) in
                                                {6664}let client_hts_34: bitstring = (if v_1464 then catch-fail((if v_1465 then hmac(@8_tls_h,handshake_secret_34,x_452) else fail-any)) else caught-fail) in
                                                {6665}let v_1466: bool = not-caught-fail(client_hts_34) in
                                                {6667}let h_376: bitstring = (if v_1466 then catch-fail(hash(@8_tls_h,cur_log2_70)) else caught-fail) in
                                                {6668}let v_1467: bool = not-caught-fail(h_376) in
                                                {6666}let l_397: label = (if v_1466 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {6669}let x_453: bitstring = (if v_1467 then (l_397,h_376) else caught-fail) in
                                                {6670}let server_hts_34: bitstring = (if v_1466 then catch-fail((if v_1467 then hmac(@8_tls_h,handshake_secret_34,x_453) else fail-any)) else caught-fail) in
                                                {6671}let v_1468: bool = not-caught-fail(server_hts_34) in
                                                {6673}let h_377: bitstring = (if v_1468 then zero else caught-fail) in
                                                {6672}let l_398: label = (if v_1468 then tls13_key else caught-fail) in
                                                {6674}let x_454: bitstring = (if v_1468 then (l_398,h_377) else caught-fail) in
                                                {6675}let client_wkh_34: bitstring = (if v_1468 then catch-fail(hmac(@8_tls_h,client_hts_34,x_454)) else caught-fail) in
                                                {6676}let v_1469: bool = not-caught-fail(client_wkh_34) in
                                                {6678}let h_378: bitstring = (if v_1469 then zero else caught-fail) in
                                                {6677}let l_399: label = (if v_1469 then tls13_key else caught-fail) in
                                                {6679}let x_455: bitstring = (if v_1469 then (l_399,h_378) else caught-fail) in
                                                {6680}let server_wkh_34: bitstring = (if v_1469 then catch-fail(hmac(@8_tls_h,server_hts_34,x_455)) else caught-fail) in
                                                {6681}let v_1470: bool = not-caught-fail(server_wkh_34) in
                                                {6683}let h_379: bitstring = (if v_1470 then zero else caught-fail) in
                                                {6682}let l_400: label = (if v_1470 then tls13_finished else caught-fail) in
                                                {6684}let x_456: bitstring = (if v_1470 then (l_400,h_379) else caught-fail) in
                                                {6685}let client_fk_34: bitstring = (if v_1470 then catch-fail(hmac(@8_tls_h,client_hts_34,x_456)) else caught-fail) in
                                                {6686}let v_1471: bool = not-caught-fail(client_fk_34) in
                                                {6688}let h_380: bitstring = (if v_1471 then zero else caught-fail) in
                                                {6687}let l_401: label = (if v_1471 then tls13_finished else caught-fail) in
                                                {6689}let x_457: bitstring = (if v_1471 then (l_401,h_380) else caught-fail) in
                                                {6690}let server_fk_34: bitstring = (if v_1471 then catch-fail(hmac(@8_tls_h,server_hts_34,x_457)) else caught-fail) in
                                                {6691}let v_1472: bool = not-caught-fail(server_fk_34) in
                                                {6692}let (master_secret_76: bitstring,chk_41: aead_key,shk_40: aead_key,cfin_41: mac_key,sfin_40: mac_key) = (if v_1463 then (if v_1464 then (if v_1466 then (if v_1468 then (if v_1469 then (if v_1470 then (if v_1471 then (if v_1472 then (master_secret_75,client_wkh_34,server_wkh_34,client_fk_34,server_fk_34) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {6693}event Client_chk(id_client_5,chk_41);
                                                {6694}event Client_shk(id_client_5,shk_40);
                                                {6695}event Client_cfin(id_client_5,cfin_41);
                                                {6696}event Client_sfin(id_client_5,sfin_40);
                                                {6697}in(io, enc_ee_msg_33: bitstring);
                                                {6698}let ee_msg_38: msg = aead_dec(@8_tls_a,shk_40,0,zero,enc_ee_msg_33) in
                                                {6699}let EE(ech_ee_33: echExt,extra_ee_33: extraExt) = ee_msg_38 in
                                                {6700}let cur_log2_71: bitstring = (cur_log2_70,ee_msg_38) in
                                                {6701}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_20,sr_41,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_159,safe_psk_36,@8_comp_psk,master_secret_76,chk_41,0,shk_40,1,cfin_41,sfin_40,cur_log2_71)))
                                            )
                                            else
                                                {6702}out(io, illegal_parameter)
                                        )
                                        else
                                            {6703}out(io, illegal_parameter)
                                )
                                else
                                    {6704}out(io, unexpected_message)
                    )
                    else
                        {6706}let sh_modified_16: msg = SH(B32(sr24_5,zero8),mode_30) in
                        {6705}let cur_log_24: bitstring = (zero,i_client_hello_17) in
                        {6707}let cur_log_sh_16: bitstring = (cur_log_24,sh_modified_16) in
                        {6708}let transcript_ech_conf_16: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_16)) in
                        {6709}let v_1473: bool = not-caught-fail(transcript_ech_conf_16) in
                        {6711}let k_155: bitstring = (if v_1473 then catch-fail(b32_2_b(get_random(i_client_hello_17))) else caught-fail) in
                        {6712}let v_1474: bool = not-caught-fail(k_155) in
                        {6710}let s_156: bitstring = (if v_1473 then zero else caught-fail) in
                        {6713}let k_156: bitstring = (if v_1473 then catch-fail((if v_1474 then hmac(@8_backend_h,s_156,k_155) else fail-any)) else caught-fail) in
                        {6714}let v_1475: bool = not-caught-fail(k_156) in
                        {6715}let l_402: label = (if v_1475 then ech_accept_confirmation else caught-fail) in
                        {6716}let x_458: bitstring = (if v_1475 then (l_402,cur_log_sh_16) else caught-fail) in
                        {6717}let sr8_20: bytes8 = (if v_1473 then catch-fail(crop_into_bytes8((if v_1475 then hmac(@8_backend_h,k_156,x_458) else fail-any))) else caught-fail) in
                        {6718}let v_1476: bool = not-caught-fail(sr8_20) in
                        {6719}if (B32(sr24_5,sr8_16) = (if v_1473 then (if v_1476 then B32(sr24_5,sr8_20) else fail-any) else fail-any)) then
                        (
                            {6720}event ClientEchAcceptance(id_client_5,true);
                            {6722}let (x_459: bitstring,g_41: group) = i_kex_data_8 in
                            {6723}let (psk_offer_34: preSharedKey,id_offer_34: identityPsk,es_offer_34: bitstring,is_safe_offer_34: bool) = psk_data_28 in
                            {6724}event Client_PSKOffer(id_client_5,psk_offer_34,id_offer_34,is_safe_offer_34);
                            {6725}event Client_Rand_client(id_client_5,i_cr_9);
                            {6726}event Client_DH_client(id_client_5,dh_pub(g_41,x_459));
                            {6727}event Client_server_domain(id_client_5,backend_dom_1);
                            {6728}let SH(sr_42: bytes32,mode_38: params) = server_hello_4 in
                            {6729}event Client_Rand_server(id_client_5,sr_42);
                            {6730}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_41,gy_35: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_75: preSharedKeyExt) = mode_38 in
                            (
                                {6732}event Client_DH_server(id_client_5,gy_35);
                                {6733}let v_1477: bool = (psk_ext_75 = empty_psk_ext) in
                                {6734}let psk_160: preSharedKey = (if v_1477 then NoPsk else caught-fail) in
                                {6736}let k_157: bitstring = (if v_1477 then catch-fail(psk2b(psk_160)) else caught-fail) in
                                {6737}let v_1478: bool = not-caught-fail(k_157) in
                                {6735}let s_157: bitstring = (if v_1477 then zero else caught-fail) in
                                {6738}let early_secret_108: bitstring = (if v_1477 then catch-fail((if v_1478 then hmac(@8_backend_h,s_157,k_157) else fail-any)) else caught-fail) in
                                {6739}let v_1479: bool = not-caught-fail(early_secret_108) in
                                {6741}let m_142: bitstring = (if v_1479 then zero else caught-fail) in
                                {6742}let h_381: bitstring = (if v_1479 then catch-fail(hash(@8_backend_h,m_142)) else caught-fail) in
                                {6743}let v_1480: bool = not-caught-fail(h_381) in
                                {6740}let l_403: label = (if v_1479 then tls13_ext_res_binder else caught-fail) in
                                {6744}let x_460: bitstring = (if v_1480 then (l_403,h_381) else caught-fail) in
                                {6745}let binder_key_72: bitstring = (if v_1479 then catch-fail((if v_1480 then hmac(@8_backend_h,early_secret_108,x_460) else fail-any)) else caught-fail) in
                                {6746}let v_1481: bool = not-caught-fail(binder_key_72) in
                                {6747}let v_1482: bitstring = (if v_1477 then catch-fail((if v_1479 then (if v_1481 then (early_secret_108,binder_key_72) else fail-any) else fail-any)) else caught-fail) in
                                {6748}let v_1483: bool = (not-caught-fail(v_1482) && success?(1-proj-2-tuple(v_1482))) in
                                {6749}let kb_72: mac_key = (if v_1483 then 2-proj-2-tuple(v_1482) else caught-fail) in
                                {6750}let es_106: bitstring = (if v_1483 then 1-proj-2-tuple(v_1482) else caught-fail) in
                                {6751}let v_1484: bitstring = (if not(v_1477) then catch-fail(psk_data_28) else caught-fail) in
                                {6752}let v_1485: bool = (not-caught-fail(v_1484) && success?(1-proj-4-tuple(v_1484))) in
                                {6753}let is_safe_62: bool = (if v_1485 then 4-proj-4-tuple(v_1484) else caught-fail) in
                                {6754}let es_107: bitstring = (if v_1485 then 3-proj-4-tuple(v_1484) else caught-fail) in
                                {6755}let id_72: identityPsk = (if v_1485 then 2-proj-4-tuple(v_1484) else caught-fail) in
                                {6756}let psk_161: preSharedKey = (if v_1485 then 1-proj-4-tuple(v_1484) else caught-fail) in
                                {6757}let (psk_162: preSharedKey,early_secret_109: bitstring,valid_34: bool,safe_psk_37: bool) = (if v_1477 then (if v_1483 then (NoPsk,es_106,true,false) else fail-any) else (if v_1485 then (psk_161,es_107,((psk_161 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_75)),is_safe_62) else fail-any)) in
                                {6758}event Client_PSKChoosen(id_client_5,psk_162,safe_psk_37);
                                {6759}if valid_34 then
                                (
                                    {6762}new s_158[]: seed;
                                    {6760}let gxy_70: element = catch-fail(dh_decap_fun(g_41,gy_35,x_459)) in
                                    {6761}let v_1486: bool = not-caught-fail(gxy_70) in
                                    {6763}let gxy_71: element = (if v_1486 then gxy_70 else dh_f(s_158)) in
                                    {6764}event Client_DH_gxy(id_client_5,gxy_71);
                                    {6766}let m_143: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                    {6767}let v_1487: bool = not-caught-fail(m_143) in
                                    {6768}let h_382: bitstring = (if v_1487 then catch-fail(hash(@8_backend_h,m_143)) else caught-fail) in
                                    {6769}let v_1488: bool = not-caught-fail(h_382) in
                                    {6765}let l_404: label = tls13_derived in
                                    {6770}let x_461: bitstring = (if v_1488 then (l_404,h_382) else caught-fail) in
                                    {6771}let extra_74: bitstring = catch-fail((if v_1487 then (if v_1488 then hmac(@8_backend_h,early_secret_109,x_461) else fail-any) else fail-any)) in
                                    {6772}let v_1489: bool = not-caught-fail(extra_74) in
                                    {6773}let handshake_secret_35: bitstring = (if v_1489 then hmac(@8_backend_h,extra_74,gxy_71) else fail-any) in
                                    {6775}let m_144: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                    {6776}let v_1490: bool = not-caught-fail(m_144) in
                                    {6777}let h_383: bitstring = (if v_1490 then catch-fail(hash(@8_backend_h,m_144)) else caught-fail) in
                                    {6778}let v_1491: bool = not-caught-fail(h_383) in
                                    {6774}let l_405: label = tls13_derived in
                                    {6779}let x_462: bitstring = (if v_1491 then (l_405,h_383) else caught-fail) in
                                    {6780}let extra_75: bitstring = catch-fail((if v_1490 then (if v_1491 then hmac(@8_backend_h,handshake_secret_35,x_462) else fail-any) else fail-any)) in
                                    {6781}let v_1492: bool = not-caught-fail(extra_75) in
                                    {6782}let k_158: bitstring = (if v_1492 then zero else caught-fail) in
                                    {6783}let master_secret_77: bitstring = (if v_1492 then catch-fail(hmac(@8_backend_h,handshake_secret_35,k_158)) else caught-fail) in
                                    {6784}let v_1493: bool = not-caught-fail(master_secret_77) in
                                    {6721}let cur_log_25: bitstring = (zero,i_client_hello_17) in
                                    {6731}let cur_log2_72: bitstring = (cur_log_25,server_hello_4) in
                                    {6786}let h_384: bitstring = (if v_1493 then catch-fail(hash(@8_backend_h,cur_log2_72)) else caught-fail) in
                                    {6787}let v_1494: bool = not-caught-fail(h_384) in
                                    {6785}let l_406: label = (if v_1493 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {6788}let x_463: bitstring = (if v_1494 then (l_406,h_384) else caught-fail) in
                                    {6789}let client_hts_35: bitstring = (if v_1493 then catch-fail((if v_1494 then hmac(@8_backend_h,handshake_secret_35,x_463) else fail-any)) else caught-fail) in
                                    {6790}let v_1495: bool = not-caught-fail(client_hts_35) in
                                    {6792}let h_385: bitstring = (if v_1495 then catch-fail(hash(@8_backend_h,cur_log2_72)) else caught-fail) in
                                    {6793}let v_1496: bool = not-caught-fail(h_385) in
                                    {6791}let l_407: label = (if v_1495 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {6794}let x_464: bitstring = (if v_1496 then (l_407,h_385) else caught-fail) in
                                    {6795}let server_hts_35: bitstring = (if v_1495 then catch-fail((if v_1496 then hmac(@8_backend_h,handshake_secret_35,x_464) else fail-any)) else caught-fail) in
                                    {6796}let v_1497: bool = not-caught-fail(server_hts_35) in
                                    {6798}let h_386: bitstring = (if v_1497 then zero else caught-fail) in
                                    {6797}let l_408: label = (if v_1497 then tls13_key else caught-fail) in
                                    {6799}let x_465: bitstring = (if v_1497 then (l_408,h_386) else caught-fail) in
                                    {6800}let client_wkh_35: bitstring = (if v_1497 then catch-fail(hmac(@8_backend_h,client_hts_35,x_465)) else caught-fail) in
                                    {6801}let v_1498: bool = not-caught-fail(client_wkh_35) in
                                    {6803}let h_387: bitstring = (if v_1498 then zero else caught-fail) in
                                    {6802}let l_409: label = (if v_1498 then tls13_key else caught-fail) in
                                    {6804}let x_466: bitstring = (if v_1498 then (l_409,h_387) else caught-fail) in
                                    {6805}let server_wkh_35: bitstring = (if v_1498 then catch-fail(hmac(@8_backend_h,server_hts_35,x_466)) else caught-fail) in
                                    {6806}let v_1499: bool = not-caught-fail(server_wkh_35) in
                                    {6808}let h_388: bitstring = (if v_1499 then zero else caught-fail) in
                                    {6807}let l_410: label = (if v_1499 then tls13_finished else caught-fail) in
                                    {6809}let x_467: bitstring = (if v_1499 then (l_410,h_388) else caught-fail) in
                                    {6810}let client_fk_35: bitstring = (if v_1499 then catch-fail(hmac(@8_backend_h,client_hts_35,x_467)) else caught-fail) in
                                    {6811}let v_1500: bool = not-caught-fail(client_fk_35) in
                                    {6813}let h_389: bitstring = (if v_1500 then zero else caught-fail) in
                                    {6812}let l_411: label = (if v_1500 then tls13_finished else caught-fail) in
                                    {6814}let x_468: bitstring = (if v_1500 then (l_411,h_389) else caught-fail) in
                                    {6815}let server_fk_35: bitstring = (if v_1500 then catch-fail(hmac(@8_backend_h,server_hts_35,x_468)) else caught-fail) in
                                    {6816}let v_1501: bool = not-caught-fail(server_fk_35) in
                                    {6817}let (master_secret_78: bitstring,chk_42: aead_key,shk_41: aead_key,cfin_42: mac_key,sfin_41: mac_key) = (if v_1492 then (if v_1493 then (if v_1495 then (if v_1497 then (if v_1498 then (if v_1499 then (if v_1500 then (if v_1501 then (master_secret_77,client_wkh_35,server_wkh_35,client_fk_35,server_fk_35) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {6818}event Client_chk(id_client_5,chk_42);
                                    {6819}event Client_shk(id_client_5,shk_41);
                                    {6820}event Client_cfin(id_client_5,cfin_42);
                                    {6821}event Client_sfin(id_client_5,sfin_41);
                                    {6822}in(io, enc_ee_msg_34: bitstring);
                                    {6823}let ee_msg_39: msg = aead_dec(@8_backend_a,shk_41,0,zero,enc_ee_msg_34) in
                                    {6824}let EE(ech_ee_34: echExt,extra_ee_34: extraExt) = ee_msg_39 in
                                    {6825}let cur_log2_73: bitstring = (cur_log2_72,ee_msg_39) in
                                    {6826}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr_9,sr_42,@8_backend_h,@8_backend_a,c_dom_6,backend_dom_1,psk_162,safe_psk_37,@8_comp_psk,master_secret_78,chk_42,0,shk_41,1,cfin_42,sfin_41,cur_log2_73)))
                                )
                                else
                                    {6827}out(io, illegal_parameter)
                            )
                            else
                                {6828}out(io, illegal_parameter)
                        )
                        else
                            {6829}event ClientEchAcceptance(id_client_5,false);
                            {6830}let v_1502: bool = @8_use_grease in
                            {6831}let psk_163: preSharedKey = (if not(v_1502) then NoPsk else caught-fail) in
                            {6833}let k_159: bitstring = (if not(v_1502) then catch-fail(psk2b(psk_163)) else caught-fail) in
                            {6834}let v_1503: bool = not-caught-fail(k_159) in
                            {6832}let s_159: bitstring = (if not(v_1502) then zero else caught-fail) in
                            {6835}let early_secret_110: bitstring = (if not(v_1502) then catch-fail((if v_1503 then hmac(@8_tls_h,s_159,k_159) else fail-any)) else caught-fail) in
                            {6836}let v_1504: bool = not-caught-fail(early_secret_110) in
                            {6838}let m_145: bitstring = (if v_1504 then zero else caught-fail) in
                            {6839}let h_390: bitstring = (if v_1504 then catch-fail(hash(@8_tls_h,m_145)) else caught-fail) in
                            {6840}let v_1505: bool = not-caught-fail(h_390) in
                            {6837}let l_412: label = (if v_1504 then tls13_ext_res_binder else caught-fail) in
                            {6841}let x_469: bitstring = (if v_1505 then (l_412,h_390) else caught-fail) in
                            {6842}let binder_key_73: bitstring = (if v_1504 then catch-fail((if v_1505 then hmac(@8_tls_h,early_secret_110,x_469) else fail-any)) else caught-fail) in
                            {6843}let v_1506: bool = not-caught-fail(binder_key_73) in
                            {6844}let v_1507: bitstring = (if not(v_1502) then catch-fail((if v_1504 then (if v_1506 then (early_secret_110,binder_key_73) else fail-any) else fail-any)) else caught-fail) in
                            {6845}let v_1508: bool = (not-caught-fail(v_1507) && success?(1-proj-2-tuple(v_1507))) in
                            {6846}let kb_73: mac_key = (if v_1508 then 2-proj-2-tuple(v_1507) else caught-fail) in
                            {6847}let es'_3: bitstring = (if v_1508 then 1-proj-2-tuple(v_1507) else caught-fail) in
                            {6848}let psk_data'_31: bitstring = (if v_1502 then psk_data_28 else (if v_1508 then (NoPsk,zero,es'_3,false) else fail-any)) in
                            {6850}let (x_470: bitstring,g_42: group) = o_kex_data_8 in
                            {6851}let (psk_offer_35: preSharedKey,id_offer_35: identityPsk,es_offer_35: bitstring,is_safe_offer_35: bool) = psk_data'_31 in
                            {6852}event Client_PSKOffer(id_client_5,psk_offer_35,id_offer_35,is_safe_offer_35);
                            {6853}event Client_Rand_client(id_client_5,o_cr_11);
                            {6854}event Client_DH_client(id_client_5,dh_pub(g_42,x_470));
                            {6855}event Client_server_domain(id_client_5,o_dom_8);
                            {6856}let SH(sr_43: bytes32,mode_39: params) = server_hello_4 in
                            {6857}event Client_Rand_server(id_client_5,sr_43);
                            {6858}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_42,gy_36: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_76: preSharedKeyExt) = mode_39 in
                            (
                                {6860}event Client_DH_server(id_client_5,gy_36);
                                {6861}let v_1509: bool = (psk_ext_76 = empty_psk_ext) in
                                {6862}let psk_164: preSharedKey = (if v_1509 then NoPsk else caught-fail) in
                                {6864}let k_160: bitstring = (if v_1509 then catch-fail(psk2b(psk_164)) else caught-fail) in
                                {6865}let v_1510: bool = not-caught-fail(k_160) in
                                {6863}let s_160: bitstring = (if v_1509 then zero else caught-fail) in
                                {6866}let early_secret_111: bitstring = (if v_1509 then catch-fail((if v_1510 then hmac(@8_tls_h,s_160,k_160) else fail-any)) else caught-fail) in
                                {6867}let v_1511: bool = not-caught-fail(early_secret_111) in
                                {6869}let m_146: bitstring = (if v_1511 then zero else caught-fail) in
                                {6870}let h_391: bitstring = (if v_1511 then catch-fail(hash(@8_tls_h,m_146)) else caught-fail) in
                                {6871}let v_1512: bool = not-caught-fail(h_391) in
                                {6868}let l_413: label = (if v_1511 then tls13_ext_res_binder else caught-fail) in
                                {6872}let x_471: bitstring = (if v_1512 then (l_413,h_391) else caught-fail) in
                                {6873}let binder_key_74: bitstring = (if v_1511 then catch-fail((if v_1512 then hmac(@8_tls_h,early_secret_111,x_471) else fail-any)) else caught-fail) in
                                {6874}let v_1513: bool = not-caught-fail(binder_key_74) in
                                {6875}let v_1514: bitstring = (if v_1509 then catch-fail((if v_1511 then (if v_1513 then (early_secret_111,binder_key_74) else fail-any) else fail-any)) else caught-fail) in
                                {6876}let v_1515: bool = (not-caught-fail(v_1514) && success?(1-proj-2-tuple(v_1514))) in
                                {6877}let kb_74: mac_key = (if v_1515 then 2-proj-2-tuple(v_1514) else caught-fail) in
                                {6878}let es_108: bitstring = (if v_1515 then 1-proj-2-tuple(v_1514) else caught-fail) in
                                {6879}let v_1516: bitstring = (if not(v_1509) then catch-fail(psk_data'_31) else caught-fail) in
                                {6880}let v_1517: bool = (not-caught-fail(v_1516) && success?(1-proj-4-tuple(v_1516))) in
                                {6881}let is_safe_63: bool = (if v_1517 then 4-proj-4-tuple(v_1516) else caught-fail) in
                                {6882}let es_109: bitstring = (if v_1517 then 3-proj-4-tuple(v_1516) else caught-fail) in
                                {6883}let id_73: identityPsk = (if v_1517 then 2-proj-4-tuple(v_1516) else caught-fail) in
                                {6884}let psk_165: preSharedKey = (if v_1517 then 1-proj-4-tuple(v_1516) else caught-fail) in
                                {6885}let (psk_166: preSharedKey,early_secret_112: bitstring,valid_35: bool,safe_psk_38: bool) = (if v_1509 then (if v_1515 then (NoPsk,es_108,true,false) else fail-any) else (if v_1517 then (psk_165,es_109,((psk_165 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_76)),is_safe_63) else fail-any)) in
                                {6886}event Client_PSKChoosen(id_client_5,psk_166,safe_psk_38);
                                {6887}if valid_35 then
                                (
                                    {6890}new s_161[]: seed;
                                    {6888}let gxy_72: element = catch-fail(dh_decap_fun(g_42,gy_36,x_470)) in
                                    {6889}let v_1518: bool = not-caught-fail(gxy_72) in
                                    {6891}let gxy_73: element = (if v_1518 then gxy_72 else dh_f(s_161)) in
                                    {6892}event Client_DH_gxy(id_client_5,gxy_73);
                                    {6894}let m_147: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                    {6895}let v_1519: bool = not-caught-fail(m_147) in
                                    {6896}let h_392: bitstring = (if v_1519 then catch-fail(hash(@8_tls_h,m_147)) else caught-fail) in
                                    {6897}let v_1520: bool = not-caught-fail(h_392) in
                                    {6893}let l_414: label = tls13_derived in
                                    {6898}let x_472: bitstring = (if v_1520 then (l_414,h_392) else caught-fail) in
                                    {6899}let extra_76: bitstring = catch-fail((if v_1519 then (if v_1520 then hmac(@8_tls_h,early_secret_112,x_472) else fail-any) else fail-any)) in
                                    {6900}let v_1521: bool = not-caught-fail(extra_76) in
                                    {6901}let handshake_secret_36: bitstring = (if v_1521 then hmac(@8_tls_h,extra_76,gxy_73) else fail-any) in
                                    {6903}let m_148: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                    {6904}let v_1522: bool = not-caught-fail(m_148) in
                                    {6905}let h_393: bitstring = (if v_1522 then catch-fail(hash(@8_tls_h,m_148)) else caught-fail) in
                                    {6906}let v_1523: bool = not-caught-fail(h_393) in
                                    {6902}let l_415: label = tls13_derived in
                                    {6907}let x_473: bitstring = (if v_1523 then (l_415,h_393) else caught-fail) in
                                    {6908}let extra_77: bitstring = catch-fail((if v_1522 then (if v_1523 then hmac(@8_tls_h,handshake_secret_36,x_473) else fail-any) else fail-any)) in
                                    {6909}let v_1524: bool = not-caught-fail(extra_77) in
                                    {6910}let k_161: bitstring = (if v_1524 then zero else caught-fail) in
                                    {6911}let master_secret_79: bitstring = (if v_1524 then catch-fail(hmac(@8_tls_h,handshake_secret_36,k_161)) else caught-fail) in
                                    {6912}let v_1525: bool = not-caught-fail(master_secret_79) in
                                    {6849}let cur_log_26: bitstring = (zero,o_client_hello_5) in
                                    {6859}let cur_log2_74: bitstring = (cur_log_26,server_hello_4) in
                                    {6914}let h_394: bitstring = (if v_1525 then catch-fail(hash(@8_tls_h,cur_log2_74)) else caught-fail) in
                                    {6915}let v_1526: bool = not-caught-fail(h_394) in
                                    {6913}let l_416: label = (if v_1525 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {6916}let x_474: bitstring = (if v_1526 then (l_416,h_394) else caught-fail) in
                                    {6917}let client_hts_36: bitstring = (if v_1525 then catch-fail((if v_1526 then hmac(@8_tls_h,handshake_secret_36,x_474) else fail-any)) else caught-fail) in
                                    {6918}let v_1527: bool = not-caught-fail(client_hts_36) in
                                    {6920}let h_395: bitstring = (if v_1527 then catch-fail(hash(@8_tls_h,cur_log2_74)) else caught-fail) in
                                    {6921}let v_1528: bool = not-caught-fail(h_395) in
                                    {6919}let l_417: label = (if v_1527 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {6922}let x_475: bitstring = (if v_1528 then (l_417,h_395) else caught-fail) in
                                    {6923}let server_hts_36: bitstring = (if v_1527 then catch-fail((if v_1528 then hmac(@8_tls_h,handshake_secret_36,x_475) else fail-any)) else caught-fail) in
                                    {6924}let v_1529: bool = not-caught-fail(server_hts_36) in
                                    {6926}let h_396: bitstring = (if v_1529 then zero else caught-fail) in
                                    {6925}let l_418: label = (if v_1529 then tls13_key else caught-fail) in
                                    {6927}let x_476: bitstring = (if v_1529 then (l_418,h_396) else caught-fail) in
                                    {6928}let client_wkh_36: bitstring = (if v_1529 then catch-fail(hmac(@8_tls_h,client_hts_36,x_476)) else caught-fail) in
                                    {6929}let v_1530: bool = not-caught-fail(client_wkh_36) in
                                    {6931}let h_397: bitstring = (if v_1530 then zero else caught-fail) in
                                    {6930}let l_419: label = (if v_1530 then tls13_key else caught-fail) in
                                    {6932}let x_477: bitstring = (if v_1530 then (l_419,h_397) else caught-fail) in
                                    {6933}let server_wkh_36: bitstring = (if v_1530 then catch-fail(hmac(@8_tls_h,server_hts_36,x_477)) else caught-fail) in
                                    {6934}let v_1531: bool = not-caught-fail(server_wkh_36) in
                                    {6936}let h_398: bitstring = (if v_1531 then zero else caught-fail) in
                                    {6935}let l_420: label = (if v_1531 then tls13_finished else caught-fail) in
                                    {6937}let x_478: bitstring = (if v_1531 then (l_420,h_398) else caught-fail) in
                                    {6938}let client_fk_36: bitstring = (if v_1531 then catch-fail(hmac(@8_tls_h,client_hts_36,x_478)) else caught-fail) in
                                    {6939}let v_1532: bool = not-caught-fail(client_fk_36) in
                                    {6941}let h_399: bitstring = (if v_1532 then zero else caught-fail) in
                                    {6940}let l_421: label = (if v_1532 then tls13_finished else caught-fail) in
                                    {6942}let x_479: bitstring = (if v_1532 then (l_421,h_399) else caught-fail) in
                                    {6943}let server_fk_36: bitstring = (if v_1532 then catch-fail(hmac(@8_tls_h,server_hts_36,x_479)) else caught-fail) in
                                    {6944}let v_1533: bool = not-caught-fail(server_fk_36) in
                                    {6945}let (master_secret_80: bitstring,chk_43: aead_key,shk_42: aead_key,cfin_43: mac_key,sfin_42: mac_key) = (if v_1524 then (if v_1525 then (if v_1527 then (if v_1529 then (if v_1530 then (if v_1531 then (if v_1532 then (if v_1533 then (master_secret_79,client_wkh_36,server_wkh_36,client_fk_36,server_fk_36) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {6946}event Client_chk(id_client_5,chk_43);
                                    {6947}event Client_shk(id_client_5,shk_42);
                                    {6948}event Client_cfin(id_client_5,cfin_43);
                                    {6949}event Client_sfin(id_client_5,sfin_42);
                                    {6950}in(io, enc_ee_msg_35: bitstring);
                                    {6951}let ee_msg_40: msg = aead_dec(@8_tls_a,shk_42,0,zero,enc_ee_msg_35) in
                                    {6952}let EE(ech_ee_35: echExt,extra_ee_35: extraExt) = ee_msg_40 in
                                    {6953}let cur_log2_75: bitstring = (cur_log2_74,ee_msg_40) in
                                    {6954}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(o_cr_11,sr_43,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_166,safe_psk_38,@8_comp_psk,master_secret_80,chk_43,0,shk_42,1,cfin_43,sfin_42,cur_log2_75)))
                                )
                                else
                                    {6955}out(io, illegal_parameter)
                            )
                            else
                                {6956}out(io, illegal_parameter)
                )
                else
                    {6957}out(io, unexpected_message)
            )
        )
        else
            {8440}get pre_shared_keys(c_dom'_11: domain,=dom_psk_1,=h_psk_1,id_74: identityPsk,psk_167: preSharedKey,idP_13: idProc,is_safe_64: bool) in
            {6958}event Selected_one_time_used_psk(id_client_5,psk_167,is_safe_64);
            {6959}event Selected_psk(c_dom_6,c_dom'_11,idP_13,is_safe_64);
            {6960}event Selected_psk_no_missmatch(id_client_5,dom_psk_1,h_psk_1,psk_167,id_74);
            {6961}event Selected_psk_with_ID(c_dom_6,c_dom'_11,id_74,idP_13,is_safe_64);
            {6962}let v_1534: bitstring = (id_74,psk_167,is_safe_64) in
            {6963}let v_1535: bool = success?(1-proj-3-tuple(v_1534)) in
            {6964}let is_safe_65: bool = (if v_1535 then 3-proj-3-tuple(v_1534) else caught-fail) in
            {6965}let psk_168: preSharedKey = (if v_1535 then 2-proj-3-tuple(v_1534) else caught-fail) in
            {6966}let id_75: identityPsk = (if v_1535 then 1-proj-3-tuple(v_1534) else caught-fail) in
            {6970}let k_162: bitstring = (if v_1535 then catch-fail(psk2b(psk_168)) else caught-fail) in
            {6971}let v_1536: bool = not-caught-fail(k_162) in
            {6969}let s_162: bitstring = (if v_1535 then zero else caught-fail) in
            {6972}let early_secret_113: bitstring = (if v_1535 then catch-fail((if v_1536 then hmac(h_psk_1,s_162,k_162) else fail-any)) else caught-fail) in
            {6973}let v_1537: bool = not-caught-fail(early_secret_113) in
            {6975}let m_149: bitstring = (if v_1537 then zero else caught-fail) in
            {6976}let h_400: bitstring = (if v_1537 then catch-fail(hash(h_psk_1,m_149)) else caught-fail) in
            {6977}let v_1538: bool = not-caught-fail(h_400) in
            {6974}let l_422: label = (if v_1537 then tls13_ext_res_binder else caught-fail) in
            {6978}let x_480: bitstring = (if v_1538 then (l_422,h_400) else caught-fail) in
            {6979}let binder_key_75: bitstring = (if v_1537 then catch-fail((if v_1538 then hmac(h_psk_1,early_secret_113,x_480) else fail-any)) else caught-fail) in
            {6980}let v_1539: bool = not-caught-fail(binder_key_75) in
            {6981}let v_1540: bitstring = (if v_1535 then catch-fail((if v_1537 then (if v_1539 then (early_secret_113,binder_key_75) else fail-any) else fail-any)) else caught-fail) in
            {6982}let v_1541: bool = (not-caught-fail(v_1540) && success?(1-proj-2-tuple(v_1540))) in
            {6983}let kb_75: mac_key = (if v_1541 then 2-proj-2-tuple(v_1540) else caught-fail) in
            {6984}let es_110: bitstring = (if v_1541 then 1-proj-2-tuple(v_1540) else caught-fail) in
            {6967}let offer_21: params = (if v_1535 then nego(TLS13,h_psk_1,a_psk_1,kex_ext_psk_1,SNI(dom_psk_1),ech_inner_or_grease_1,extra_psk_1,trunc_client_psk_ext(id_75)) else caught-fail) in
            {6968}let cur_log'_21: bitstring = (if v_1535 then (cur_log_22,CH(cr_psk_1,offer_21)) else caught-fail) in
            {6985}let binders_20: bitstring = (if v_1541 then catch-fail(hmac(h_psk_1,kb_75,cur_log'_21)) else caught-fail) in
            {6986}let v_1542: bool = not-caught-fail(binders_20) in
            {6987}let v_1543: bitstring = catch-fail((if v_1535 then (if v_1541 then (if v_1542 then (client_psk_ext(id_75,binders_20),(psk_168,id_75,es_110,is_safe_65)) else fail-any) else fail-any) else fail-any)) in
            {6988}let v_1544: bool = (not-caught-fail(v_1543) && success?(1-proj-2-tuple(v_1543))) in
            {6989}let psk_data_36: bitstring = (if v_1544 then 2-proj-2-tuple(v_1543) else caught-fail) in
            {6990}let psk_ext_77: preSharedKeyExt = (if v_1544 then 1-proj-2-tuple(v_1543) else caught-fail) in
            {6995}new fake_id_20[]: identityPsk;
            {6996}new fake_binder_20[]: bitstring;
            {6993}let v_1545: bool = (if v_1544 then catch-fail(@8_use_grease) else caught-fail) in
            {7002}let v_1546: hpkeContext = (if is-false(v_1545) then catch-fail(context_2) else caught-fail) in
            {7003}let v_1547: bool = (not-caught-fail(v_1546) && ((S =nf 1-proj-hpke_context(v_1546)) && success?(1-proj-hpke_context(v_1546)))) in
            {7004}let base_nonce_21: bitstring = (if v_1547 then 3-proj-hpke_context(v_1546) else caught-fail) in
            {7005}let key_21: aead_key = (if v_1547 then 2-proj-hpke_context(v_1546) else caught-fail) in
            {7001}let n_18: nat = (if is-false(v_1545) then 1 else caught-fail) in
            {6998}let o_ech_ext_ADD_16: echExt = (if is-false(v_1545) then ECHClientHelloOuter(ech_h_13,ech_a_13,config_id_13,enc_6,zero) else caught-fail) in
            {6997}let o_psk_ext_20: preSharedKeyExt = (if is-false(v_1545) then (if @8_use_psk then client_psk_ext(fake_id_20,fake_binder_20) else empty_psk_ext) else caught-fail) in
            {6999}let o_offer_ADD_16: params = (if is-false(v_1545) then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),o_ech_ext_ADD_16,empty_extra_ext,o_psk_ext_20) else caught-fail) in
            {7000}let o_client_hello_ADD_16: msg = (if is-false(v_1545) then CH(o_cr_10,o_offer_ADD_16) else caught-fail) in
            {6991}let i_offer_16: params = (if v_1544 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_5,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_77) else caught-fail) in
            {6992}let i_client_hello_21: msg = (if v_1544 then CH(i_cr_8,i_offer_16) else caught-fail) in
            {7006}let payload_22: bitstring = (if is-false(v_1545) then catch-fail((if v_1547 then aead_enc(ech_a_13,key_21,(base_nonce_21,n_18),o_client_hello_ADD_16,i_client_hello_21) else fail-any)) else caught-fail) in
            {7007}let v_1548: bool = not-caught-fail(payload_22) in
            {7008}let o_ech_ext_20: echExt = (if v_1548 then ECHClientHelloOuter(ech_h_13,ech_a_13,config_id_13,enc_6,payload_22) else caught-fail) in
            {7009}let o_offer_37: params = (if v_1548 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),o_ech_ext_20,empty_extra_ext,o_psk_ext_20) else caught-fail) in
            {6994}let o_offer_36: params = (if v_1545 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),ech_inner_or_grease_1,empty_extra_ext,psk_ext_77) else caught-fail) in
            {7010}let (o_client_hello_6: msg,i_client_hello_22: msg,o_cr_14: bytes32,i_cr_11: bytes32,o_kex_data_10: bitstring,i_kex_data_10: bitstring,o_psk_ext_21: preSharedKeyExt,psk_data_37: bitstring,o_ech_ext_21: echExt) = (if v_1544 then (if undo-catch-fail(v_1545) then (CH(o_cr_10,o_offer_36),CH(o_cr_10,o_offer_36),o_cr_10,o_cr_10,o_kex_data_7,o_kex_data_7,psk_ext_77,psk_data_36,ech_inner_or_grease_1) else (if v_1548 then (CH(o_cr_10,o_offer_37),i_client_hello_21,o_cr_10,i_cr_8,o_kex_data_7,i_kex_data_7,o_psk_ext_20,psk_data_36,o_ech_ext_20) else fail-any)) else fail-any) in
            {7011}out(io, o_client_hello_6);
            {7012}let (psk_169: preSharedKey,id_76: identityPsk,es_111: bitstring,safe_4: bool) = psk_data_37 in
            (
                {7013}if (false && (not(@8_use_grease) && (psk_169 ≠ NoPsk))) then
                {7014}let client_hello_5: bitstring = (zero,i_client_hello_22) in
                {7016}let h_401: bitstring = catch-fail(hash(@8_backend_h,client_hello_5)) in
                {7017}let v_1549: bool = not-caught-fail(h_401) in
                {7015}let l_423: label = tls13_client_early_traffic_secret in
                {7018}let x_481: bitstring = (if v_1549 then (l_423,h_401) else caught-fail) in
                {7019}let atsc0_5: bitstring = catch-fail((if v_1549 then hmac(@8_backend_h,es_111,x_481) else fail-any)) in
                {7020}let v_1550: bool = not-caught-fail(atsc0_5) in
                {7022}let h_402: bitstring = (if v_1550 then zero else caught-fail) in
                {7021}let l_424: label = (if v_1550 then tls13_key else caught-fail) in
                {7023}let x_482: bitstring = (if v_1550 then (l_424,h_402) else caught-fail) in
                {7024}let kc0_5: bitstring = (if v_1550 then catch-fail(hmac(@8_backend_h,atsc0_5,x_482)) else caught-fail) in
                {7025}let v_1551: bool = not-caught-fail(kc0_5) in
                {7027}let h_403: bitstring = (if v_1551 then catch-fail(hash(@8_backend_h,client_hello_5)) else caught-fail) in
                {7028}let v_1552: bool = not-caught-fail(h_403) in
                {7026}let l_425: label = (if v_1551 then tls13_early_exporter_master_secret else caught-fail) in
                {7029}let x_483: bitstring = (if v_1552 then (l_425,h_403) else caught-fail) in
                {7030}let ems0_10: bitstring = (if v_1551 then catch-fail((if v_1552 then hmac(@8_backend_h,es_111,x_483) else fail-any)) else caught-fail) in
                {7031}let v_1553: bool = not-caught-fail(ems0_10) in
                {7032}let (wkc0_5: aead_key,ems0_11: bitstring) = (if v_1550 then (if v_1551 then (if v_1553 then (kc0_5,ems0_10) else fail-any) else fail-any) else fail-any) in
                {7033}!
                {7034}in(io, (i_5: nat,ad_5: bitstring));
                {7035}if is_nat(i_5) then
                {7036}new msg_ed_4[]: bitstring;
                {7038}new st_14: stamp;
                {7039}event ClientSequenceClient0RTTDataWriteKey(id_client_5,st_14,i_5);
                {7040}event ClientSends0(id_client_5,i_cr_11,psk_169,i_5,ad_5,msg_ed_4);
                {7037}let enc_ed_4: bitstring = aead_enc(@8_backend_a,wkc0_5,i_5,ad_5,msg_ed_4) in
                {7041}out(io, enc_ed_4)
            ) | (
                {7042}in(io, server_hello_5: msg);
                {7043}let SH(B32(sr24_6: bytes24,sr8_21: bytes8),mode_40: params) = server_hello_5 in
                (
                    {7044}if (false && (B32(sr24_6,sr8_21) = B32(HRR24,HRR8))) then
                    (
                        {7045}if (send_kex_1 ≠ true) then
                        {7046}let nego(=TLS13,h_alg_19: hash_alg,a_alg_17: aead_alg,hrr_kex_ext(g_43: group),=empty_sni_ext,ech_ext_17: echExt,=empty_extra_ext,=empty_psk_ext) = mode_40 in
                        {7047}let v_1554: bool = (ech_ext_17 = empty_ech_ext) in
                        {7048}let hrr_mode_9: params = (if not(v_1554) then nego(TLS13,@8_backend_h,@8_backend_a,hrr_kex_ext(@8_backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) else caught-fail) in
                        {7049}let hrr_5: msg = (if not(v_1554) then SH(B32(HRR24,HRR8),hrr_mode_9) else caught-fail) in
                        {7050}let cur_log_27: bitstring = (if not(v_1554) then ((zero,i_client_hello_22),hrr_5) else caught-fail) in
                        {7051}let transcript_hrr_ech_conf_5: bitstring = (if not(v_1554) then catch-fail(hash(@8_backend_h,cur_log_27)) else caught-fail) in
                        {7052}let v_1555: bool = not-caught-fail(transcript_hrr_ech_conf_5) in
                        {7054}let k_163: bitstring = (if v_1555 then catch-fail(b32_2_b(get_random(i_client_hello_22))) else caught-fail) in
                        {7055}let v_1556: bool = not-caught-fail(k_163) in
                        {7053}let s_163: bitstring = (if v_1555 then zero else caught-fail) in
                        {7056}let k_164: bitstring = (if v_1555 then catch-fail((if v_1556 then hmac(@8_backend_h,s_163,k_163) else fail-any)) else caught-fail) in
                        {7057}let v_1557: bool = not-caught-fail(k_164) in
                        {7058}let l_426: label = (if v_1557 then hrr_ech_accept_confirmation else caught-fail) in
                        {7059}let x_484: bitstring = (if v_1557 then (l_426,cur_log_27) else caught-fail) in
                        {7060}let is_ech_accepted_4: bool = (if v_1554 then false else (if (ech_ext_17 = ECHHelloRetryRequest((if v_1555 then crop_into_bytes8((if v_1557 then hmac(@8_backend_h,k_164,x_484) else fail-any)) else fail-any))) then true else false)) in
                        {7061}event ClientEchAcceptance(id_client_5,is_ech_accepted_4);
                        {7062}if is_ech_accepted_4 then
                        (
                            {7064}let ech_config(config_id_16: configId,ech_g_16: group,pkR_18: element,o_dom_12: domain,ech_h_16: hash_alg,ech_a_16: aead_alg) = ech_conf_2 in
                            {7066}new s_164[]: seed;
                            {7067}let gx_41: element = dh_pub(@8_backend_g,dh_k(s_164)) in
                            {7068}let v_1558: bitstring = (dh_k(s_164),gx_41) in
                            {7069}let v_1559: bool = success?(1-proj-2-tuple(v_1558)) in
                            {7070}let gx_42: element = (if v_1559 then 2-proj-2-tuple(v_1558) else caught-fail) in
                            {7071}let x_485: bitstring = (if v_1559 then 1-proj-2-tuple(v_1558) else caught-fail) in
                            {7065}let send_key_share_12: bool = true in
                            {7072}let kex_16: kex_alg = (if v_1559 then (if send_key_share_12 then DHE_kex(@8_backend_g,gx_42) else DHE_group(@8_backend_g)) else caught-fail) in
                            {7073}let (i_kex_ext_7: keyShareExt,i_kex_data_11: bitstring) = (if v_1559 then (client_kex_ext(kex_16),(x_485,@8_backend_g)) else fail-any) in
                            {7075}new s_165[]: seed;
                            {7076}let gx_43: element = dh_pub(@8_tls_g,dh_k(s_165)) in
                            {7077}let v_1560: bitstring = (dh_k(s_165),gx_43) in
                            {7078}let v_1561: bool = success?(1-proj-2-tuple(v_1560)) in
                            {7079}let gx_44: element = (if v_1561 then 2-proj-2-tuple(v_1560) else caught-fail) in
                            {7080}let x_486: bitstring = (if v_1561 then 1-proj-2-tuple(v_1560) else caught-fail) in
                            {7074}let send_key_share_13: bool = true in
                            {7081}let kex_17: kex_alg = (if v_1561 then (if send_key_share_13 then DHE_kex(@8_tls_g,gx_44) else DHE_group(@8_tls_g)) else caught-fail) in
                            {7082}let (o_kex_ext_10: keyShareExt,o_kex_data_11: bitstring) = (if v_1561 then (client_kex_ext(kex_17),(x_486,@8_tls_g)) else fail-any) in
                            {7083}new rand24_17[]: bytes24;
                            {7084}new rand8_17[]: bytes8;
                            {7086}new rand24_18[]: bytes24;
                            {7087}new rand8_18[]: bytes8;
                            {7088}let o_cr_15: bytes32 = B32(rand24_18,rand8_18) in
                            {7085}let i_cr_12: bytes32 = B32(rand24_17,rand8_17) in
                            {7063}let cur_log_IN1_HRR_4: bitstring = ((zero,i_client_hello_22),server_hello_5) in
                            {7090}if @8_use_psk then
                            (
                                {7089}let ech_ext_18: echExt = ECHClientHelloInner in
                                {7091}let (psk_170: preSharedKey,id_77: identityPsk,old_es_10: bitstring,is_safe_66: bool) = psk_data_37 in
                                (
                                    {7095}let k_165: bitstring = catch-fail(psk2b(psk_170)) in
                                    {7096}let v_1562: bool = not-caught-fail(k_165) in
                                    {7094}let s_166: bitstring = zero in
                                    {7097}let early_secret_114: bitstring = catch-fail((if v_1562 then hmac(@8_backend_h,s_166,k_165) else fail-any)) in
                                    {7098}let v_1563: bool = not-caught-fail(early_secret_114) in
                                    {7100}let m_150: bitstring = (if v_1563 then zero else caught-fail) in
                                    {7101}let h_404: bitstring = (if v_1563 then catch-fail(hash(@8_backend_h,m_150)) else caught-fail) in
                                    {7102}let v_1564: bool = not-caught-fail(h_404) in
                                    {7099}let l_427: label = (if v_1563 then tls13_ext_res_binder else caught-fail) in
                                    {7103}let x_487: bitstring = (if v_1564 then (l_427,h_404) else caught-fail) in
                                    {7104}let binder_key_76: bitstring = (if v_1563 then catch-fail((if v_1564 then hmac(@8_backend_h,early_secret_114,x_487) else fail-any)) else caught-fail) in
                                    {7105}let v_1565: bool = not-caught-fail(binder_key_76) in
                                    {7106}let v_1566: bitstring = catch-fail((if v_1563 then (if v_1565 then (early_secret_114,binder_key_76) else fail-any) else fail-any)) in
                                    {7107}let v_1567: bool = (not-caught-fail(v_1566) && success?(1-proj-2-tuple(v_1566))) in
                                    {7108}let kb_76: mac_key = (if v_1567 then 2-proj-2-tuple(v_1566) else caught-fail) in
                                    {7109}let es_112: bitstring = (if v_1567 then 1-proj-2-tuple(v_1566) else caught-fail) in
                                    {7092}let offer_22: params = nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_7,SNI(backend_dom_1),ech_ext_18,@8_i_extra_ext,trunc_client_psk_ext(id_77)) in
                                    {7093}let cur_log'_22: bitstring = (cur_log_IN1_HRR_4,CH(i_cr_12,offer_22)) in
                                    {7110}let binders_21: bitstring = (if v_1567 then catch-fail(hmac(@8_backend_h,kb_76,cur_log'_22)) else caught-fail) in
                                    {7111}let v_1568: bool = not-caught-fail(binders_21) in
                                    {7112}let v_1569: bitstring = catch-fail((if v_1567 then (if v_1568 then (client_psk_ext(id_77,binders_21),(psk_170,id_77,es_112,is_safe_66)) else fail-any) else fail-any)) in
                                    {7113}let v_1570: bool = (not-caught-fail(v_1569) && success?(1-proj-2-tuple(v_1569))) in
                                    {7114}let psk_data_38: bitstring = (if v_1570 then 2-proj-2-tuple(v_1569) else caught-fail) in
                                    {7115}let psk_ext_78: preSharedKeyExt = (if v_1570 then 1-proj-2-tuple(v_1569) else caught-fail) in
                                    {7118}new fake_id_21[]: identityPsk;
                                    {7119}new fake_binder_21[]: bitstring;
                                    {7125}let v_1571: hpkeContext = (if v_1570 then catch-fail(context_2) else caught-fail) in
                                    {7126}let v_1572: bool = (not-caught-fail(v_1571) && ((S =nf 1-proj-hpke_context(v_1571)) && success?(1-proj-hpke_context(v_1571)))) in
                                    {7127}let base_nonce_22: bitstring = (if v_1572 then 3-proj-hpke_context(v_1571) else caught-fail) in
                                    {7128}let key_22: aead_key = (if v_1572 then 2-proj-hpke_context(v_1571) else caught-fail) in
                                    {7124}let n_19: nat = (if v_1570 then 2 else caught-fail) in
                                    {7121}let o_ech_ext_ADD_17: echExt = (if v_1570 then ECHClientHelloOuter(ech_h_16,ech_a_16,config_id_16,zero,zero) else caught-fail) in
                                    {7120}let o_psk_ext_22: preSharedKeyExt = (if v_1570 then (if @8_use_psk then client_psk_ext(fake_id_21,fake_binder_21) else empty_psk_ext) else caught-fail) in
                                    {7122}let o_offer_ADD_17: params = (if v_1570 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_10,SNI(o_dom_12),o_ech_ext_ADD_17,empty_extra_ext,o_psk_ext_22) else caught-fail) in
                                    {7123}let o_client_hello_ADD_17: msg = (if v_1570 then CH(o_cr_15,o_offer_ADD_17) else caught-fail) in
                                    {7116}let i_offer_17: params = (if v_1570 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_7,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_78) else caught-fail) in
                                    {7117}let i_client_hello_23: msg = (if v_1570 then CH(i_cr_12,i_offer_17) else caught-fail) in
                                    {7129}let payload_23: bitstring = (if v_1570 then catch-fail((if v_1572 then aead_enc(ech_a_16,key_22,(base_nonce_22,n_19),o_client_hello_ADD_17,i_client_hello_23) else fail-any)) else caught-fail) in
                                    {7130}let v_1573: bool = not-caught-fail(payload_23) in
                                    {7131}let o_ech_ext_22: echExt = (if v_1573 then ECHClientHelloOuter(ech_h_16,ech_a_16,config_id_16,zero,payload_23) else caught-fail) in
                                    {7132}let o_offer_38: params = (if v_1573 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_10,SNI(o_dom_12),o_ech_ext_22,empty_extra_ext,o_psk_ext_22) else caught-fail) in
                                    {7133}let (o_client_hello'_12: msg,i_client_hello'_13: msg,i_cr'_12: bytes32,i_kex_data'_12: bitstring,psk_data'_32: bitstring) = (if v_1570 then (if v_1573 then (CH(o_cr_15,o_offer_38),i_client_hello_23,i_cr_12,i_kex_data_11,psk_data_38) else fail-any) else fail-any) in
                                    {7134}out(io, o_client_hello'_12);
                                    {7135}in(io, server_hello'_28: msg);
                                    {7136}let SH(B32(sr24'_12: bytes24,sr8'_12: bytes8),params'_12: params) = server_hello'_28 in
                                    {7138}let sh_modified_17: msg = SH(B32(sr24'_12,zero8),params'_12) in
                                    {7137}let cur_log_IN1_HRR_IN2_12: bitstring = (cur_log_IN1_HRR_4,i_client_hello'_13) in
                                    {7139}let cur_log_sh_17: bitstring = (cur_log_IN1_HRR_IN2_12,sh_modified_17) in
                                    {7140}let transcript_ech_conf_17: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_17)) in
                                    {7141}let v_1574: bool = not-caught-fail(transcript_ech_conf_17) in
                                    {7143}let k_166: bitstring = (if v_1574 then catch-fail(b32_2_b(get_random(i_client_hello'_13))) else caught-fail) in
                                    {7144}let v_1575: bool = not-caught-fail(k_166) in
                                    {7142}let s_167: bitstring = (if v_1574 then zero else caught-fail) in
                                    {7145}let k_167: bitstring = (if v_1574 then catch-fail((if v_1575 then hmac(@8_backend_h,s_167,k_166) else fail-any)) else caught-fail) in
                                    {7146}let v_1576: bool = not-caught-fail(k_167) in
                                    {7147}let l_428: label = (if v_1576 then ech_accept_confirmation else caught-fail) in
                                    {7148}let x_488: bitstring = (if v_1576 then (l_428,cur_log_sh_17) else caught-fail) in
                                    {7149}let sr8_22: bytes8 = (if v_1574 then catch-fail(crop_into_bytes8((if v_1576 then hmac(@8_backend_h,k_167,x_488) else fail-any))) else caught-fail) in
                                    {7150}let v_1577: bool = not-caught-fail(sr8_22) in
                                    {7151}if (B32(sr24'_12,sr8'_12) = (if v_1574 then (if v_1577 then B32(sr24'_12,sr8_22) else fail-any) else fail-any)) then
                                    {7152}let (x_489: bitstring,g_44: group) = i_kex_data'_12 in
                                    {7153}let (psk_offer_36: preSharedKey,id_offer_36: identityPsk,es_offer_36: bitstring,is_safe_offer_36: bool) = psk_data'_32 in
                                    {7154}event Client_PSKOffer(id_client_5,psk_offer_36,id_offer_36,is_safe_offer_36);
                                    {7155}event Client_Rand_client(id_client_5,i_cr'_12);
                                    {7156}event Client_DH_client(id_client_5,dh_pub(g_44,x_489));
                                    {7157}event Client_server_domain(id_client_5,backend_dom_1);
                                    {7158}let SH(sr_44: bytes32,mode_41: params) = server_hello'_28 in
                                    {7159}event Client_Rand_server(id_client_5,sr_44);
                                    {7160}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_44,gy_37: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_79: preSharedKeyExt) = mode_41 in
                                    (
                                        {7162}event Client_DH_server(id_client_5,gy_37);
                                        {7163}let v_1578: bool = (psk_ext_79 = empty_psk_ext) in
                                        {7164}let psk_171: preSharedKey = (if v_1578 then NoPsk else caught-fail) in
                                        {7166}let k_168: bitstring = (if v_1578 then catch-fail(psk2b(psk_171)) else caught-fail) in
                                        {7167}let v_1579: bool = not-caught-fail(k_168) in
                                        {7165}let s_168: bitstring = (if v_1578 then zero else caught-fail) in
                                        {7168}let early_secret_115: bitstring = (if v_1578 then catch-fail((if v_1579 then hmac(@8_backend_h,s_168,k_168) else fail-any)) else caught-fail) in
                                        {7169}let v_1580: bool = not-caught-fail(early_secret_115) in
                                        {7171}let m_151: bitstring = (if v_1580 then zero else caught-fail) in
                                        {7172}let h_405: bitstring = (if v_1580 then catch-fail(hash(@8_backend_h,m_151)) else caught-fail) in
                                        {7173}let v_1581: bool = not-caught-fail(h_405) in
                                        {7170}let l_429: label = (if v_1580 then tls13_ext_res_binder else caught-fail) in
                                        {7174}let x_490: bitstring = (if v_1581 then (l_429,h_405) else caught-fail) in
                                        {7175}let binder_key_77: bitstring = (if v_1580 then catch-fail((if v_1581 then hmac(@8_backend_h,early_secret_115,x_490) else fail-any)) else caught-fail) in
                                        {7176}let v_1582: bool = not-caught-fail(binder_key_77) in
                                        {7177}let v_1583: bitstring = (if v_1578 then catch-fail((if v_1580 then (if v_1582 then (early_secret_115,binder_key_77) else fail-any) else fail-any)) else caught-fail) in
                                        {7178}let v_1584: bool = (not-caught-fail(v_1583) && success?(1-proj-2-tuple(v_1583))) in
                                        {7179}let kb_77: mac_key = (if v_1584 then 2-proj-2-tuple(v_1583) else caught-fail) in
                                        {7180}let es_113: bitstring = (if v_1584 then 1-proj-2-tuple(v_1583) else caught-fail) in
                                        {7181}let v_1585: bitstring = (if not(v_1578) then catch-fail(psk_data'_32) else caught-fail) in
                                        {7182}let v_1586: bool = (not-caught-fail(v_1585) && success?(1-proj-4-tuple(v_1585))) in
                                        {7183}let is_safe_67: bool = (if v_1586 then 4-proj-4-tuple(v_1585) else caught-fail) in
                                        {7184}let es_114: bitstring = (if v_1586 then 3-proj-4-tuple(v_1585) else caught-fail) in
                                        {7185}let id_78: identityPsk = (if v_1586 then 2-proj-4-tuple(v_1585) else caught-fail) in
                                        {7186}let psk_172: preSharedKey = (if v_1586 then 1-proj-4-tuple(v_1585) else caught-fail) in
                                        {7187}let (psk_173: preSharedKey,early_secret_116: bitstring,valid_36: bool,safe_psk_39: bool) = (if v_1578 then (if v_1584 then (NoPsk,es_113,true,false) else fail-any) else (if v_1586 then (psk_172,es_114,((psk_172 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_79)),is_safe_67) else fail-any)) in
                                        {7188}event Client_PSKChoosen(id_client_5,psk_173,safe_psk_39);
                                        {7189}if valid_36 then
                                        (
                                            {7192}new s_169[]: seed;
                                            {7190}let gxy_74: element = catch-fail(dh_decap_fun(g_44,gy_37,x_489)) in
                                            {7191}let v_1587: bool = not-caught-fail(gxy_74) in
                                            {7193}let gxy_75: element = (if v_1587 then gxy_74 else dh_f(s_169)) in
                                            {7194}event Client_DH_gxy(id_client_5,gxy_75);
                                            {7196}let m_152: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {7197}let v_1588: bool = not-caught-fail(m_152) in
                                            {7198}let h_406: bitstring = (if v_1588 then catch-fail(hash(@8_backend_h,m_152)) else caught-fail) in
                                            {7199}let v_1589: bool = not-caught-fail(h_406) in
                                            {7195}let l_430: label = tls13_derived in
                                            {7200}let x_491: bitstring = (if v_1589 then (l_430,h_406) else caught-fail) in
                                            {7201}let extra_78: bitstring = catch-fail((if v_1588 then (if v_1589 then hmac(@8_backend_h,early_secret_116,x_491) else fail-any) else fail-any)) in
                                            {7202}let v_1590: bool = not-caught-fail(extra_78) in
                                            {7203}let handshake_secret_37: bitstring = (if v_1590 then hmac(@8_backend_h,extra_78,gxy_75) else fail-any) in
                                            {7205}let m_153: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {7206}let v_1591: bool = not-caught-fail(m_153) in
                                            {7207}let h_407: bitstring = (if v_1591 then catch-fail(hash(@8_backend_h,m_153)) else caught-fail) in
                                            {7208}let v_1592: bool = not-caught-fail(h_407) in
                                            {7204}let l_431: label = tls13_derived in
                                            {7209}let x_492: bitstring = (if v_1592 then (l_431,h_407) else caught-fail) in
                                            {7210}let extra_79: bitstring = catch-fail((if v_1591 then (if v_1592 then hmac(@8_backend_h,handshake_secret_37,x_492) else fail-any) else fail-any)) in
                                            {7211}let v_1593: bool = not-caught-fail(extra_79) in
                                            {7212}let k_169: bitstring = (if v_1593 then zero else caught-fail) in
                                            {7213}let master_secret_81: bitstring = (if v_1593 then catch-fail(hmac(@8_backend_h,handshake_secret_37,k_169)) else caught-fail) in
                                            {7214}let v_1594: bool = not-caught-fail(master_secret_81) in
                                            {7161}let cur_log2_76: bitstring = (cur_log_IN1_HRR_IN2_12,server_hello'_28) in
                                            {7216}let h_408: bitstring = (if v_1594 then catch-fail(hash(@8_backend_h,cur_log2_76)) else caught-fail) in
                                            {7217}let v_1595: bool = not-caught-fail(h_408) in
                                            {7215}let l_432: label = (if v_1594 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {7218}let x_493: bitstring = (if v_1595 then (l_432,h_408) else caught-fail) in
                                            {7219}let client_hts_37: bitstring = (if v_1594 then catch-fail((if v_1595 then hmac(@8_backend_h,handshake_secret_37,x_493) else fail-any)) else caught-fail) in
                                            {7220}let v_1596: bool = not-caught-fail(client_hts_37) in
                                            {7222}let h_409: bitstring = (if v_1596 then catch-fail(hash(@8_backend_h,cur_log2_76)) else caught-fail) in
                                            {7223}let v_1597: bool = not-caught-fail(h_409) in
                                            {7221}let l_433: label = (if v_1596 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {7224}let x_494: bitstring = (if v_1597 then (l_433,h_409) else caught-fail) in
                                            {7225}let server_hts_37: bitstring = (if v_1596 then catch-fail((if v_1597 then hmac(@8_backend_h,handshake_secret_37,x_494) else fail-any)) else caught-fail) in
                                            {7226}let v_1598: bool = not-caught-fail(server_hts_37) in
                                            {7228}let h_410: bitstring = (if v_1598 then zero else caught-fail) in
                                            {7227}let l_434: label = (if v_1598 then tls13_key else caught-fail) in
                                            {7229}let x_495: bitstring = (if v_1598 then (l_434,h_410) else caught-fail) in
                                            {7230}let client_wkh_37: bitstring = (if v_1598 then catch-fail(hmac(@8_backend_h,client_hts_37,x_495)) else caught-fail) in
                                            {7231}let v_1599: bool = not-caught-fail(client_wkh_37) in
                                            {7233}let h_411: bitstring = (if v_1599 then zero else caught-fail) in
                                            {7232}let l_435: label = (if v_1599 then tls13_key else caught-fail) in
                                            {7234}let x_496: bitstring = (if v_1599 then (l_435,h_411) else caught-fail) in
                                            {7235}let server_wkh_37: bitstring = (if v_1599 then catch-fail(hmac(@8_backend_h,server_hts_37,x_496)) else caught-fail) in
                                            {7236}let v_1600: bool = not-caught-fail(server_wkh_37) in
                                            {7238}let h_412: bitstring = (if v_1600 then zero else caught-fail) in
                                            {7237}let l_436: label = (if v_1600 then tls13_finished else caught-fail) in
                                            {7239}let x_497: bitstring = (if v_1600 then (l_436,h_412) else caught-fail) in
                                            {7240}let client_fk_37: bitstring = (if v_1600 then catch-fail(hmac(@8_backend_h,client_hts_37,x_497)) else caught-fail) in
                                            {7241}let v_1601: bool = not-caught-fail(client_fk_37) in
                                            {7243}let h_413: bitstring = (if v_1601 then zero else caught-fail) in
                                            {7242}let l_437: label = (if v_1601 then tls13_finished else caught-fail) in
                                            {7244}let x_498: bitstring = (if v_1601 then (l_437,h_413) else caught-fail) in
                                            {7245}let server_fk_37: bitstring = (if v_1601 then catch-fail(hmac(@8_backend_h,server_hts_37,x_498)) else caught-fail) in
                                            {7246}let v_1602: bool = not-caught-fail(server_fk_37) in
                                            {7247}let (master_secret_82: bitstring,chk_44: aead_key,shk_43: aead_key,cfin_44: mac_key,sfin_43: mac_key) = (if v_1593 then (if v_1594 then (if v_1596 then (if v_1598 then (if v_1599 then (if v_1600 then (if v_1601 then (if v_1602 then (master_secret_81,client_wkh_37,server_wkh_37,client_fk_37,server_fk_37) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {7248}event Client_chk(id_client_5,chk_44);
                                            {7249}event Client_shk(id_client_5,shk_43);
                                            {7250}event Client_cfin(id_client_5,cfin_44);
                                            {7251}event Client_sfin(id_client_5,sfin_43);
                                            {7252}in(io, enc_ee_msg_36: bitstring);
                                            {7253}let ee_msg_41: msg = aead_dec(@8_backend_a,shk_43,0,zero,enc_ee_msg_36) in
                                            {7254}let EE(ech_ee_36: echExt,extra_ee_36: extraExt) = ee_msg_41 in
                                            {7255}let cur_log2_77: bitstring = (cur_log2_76,ee_msg_41) in
                                            {7256}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_12,sr_44,@8_backend_h,@8_backend_a,c_dom_6,backend_dom_1,psk_173,safe_psk_39,@8_comp_psk,master_secret_82,chk_44,0,shk_43,1,cfin_44,sfin_43,cur_log2_77)))
                                        )
                                        else
                                            {7257}out(io, illegal_parameter)
                                    )
                                    else
                                        {7258}out(io, illegal_parameter)
                                )
                                else
                                    {7435}get pre_shared_keys(c_dom'_12: domain,=backend_dom_1,=@8_backend_h,id_79: identityPsk,psk_174: preSharedKey,idP_14: idProc,is_safe_68: bool) in
                                    {7259}event Selected_one_time_used_psk(id_client_5,psk_174,is_safe_68);
                                    {7260}event Selected_psk(c_dom_6,c_dom'_12,idP_14,is_safe_68);
                                    {7261}event Selected_psk_no_missmatch(id_client_5,backend_dom_1,@8_backend_h,psk_174,id_79);
                                    {7262}event Selected_psk_with_ID(c_dom_6,c_dom'_12,id_79,idP_14,is_safe_68);
                                    {7263}let v_1603: bitstring = (id_79,psk_174,is_safe_68) in
                                    {7264}let v_1604: bool = success?(1-proj-3-tuple(v_1603)) in
                                    {7265}let is_safe_69: bool = (if v_1604 then 3-proj-3-tuple(v_1603) else caught-fail) in
                                    {7266}let psk_175: preSharedKey = (if v_1604 then 2-proj-3-tuple(v_1603) else caught-fail) in
                                    {7267}let id_80: identityPsk = (if v_1604 then 1-proj-3-tuple(v_1603) else caught-fail) in
                                    {7271}let k_170: bitstring = (if v_1604 then catch-fail(psk2b(psk_175)) else caught-fail) in
                                    {7272}let v_1605: bool = not-caught-fail(k_170) in
                                    {7270}let s_170: bitstring = (if v_1604 then zero else caught-fail) in
                                    {7273}let early_secret_117: bitstring = (if v_1604 then catch-fail((if v_1605 then hmac(@8_backend_h,s_170,k_170) else fail-any)) else caught-fail) in
                                    {7274}let v_1606: bool = not-caught-fail(early_secret_117) in
                                    {7276}let m_154: bitstring = (if v_1606 then zero else caught-fail) in
                                    {7277}let h_414: bitstring = (if v_1606 then catch-fail(hash(@8_backend_h,m_154)) else caught-fail) in
                                    {7278}let v_1607: bool = not-caught-fail(h_414) in
                                    {7275}let l_438: label = (if v_1606 then tls13_ext_res_binder else caught-fail) in
                                    {7279}let x_499: bitstring = (if v_1607 then (l_438,h_414) else caught-fail) in
                                    {7280}let binder_key_78: bitstring = (if v_1606 then catch-fail((if v_1607 then hmac(@8_backend_h,early_secret_117,x_499) else fail-any)) else caught-fail) in
                                    {7281}let v_1608: bool = not-caught-fail(binder_key_78) in
                                    {7282}let v_1609: bitstring = (if v_1604 then catch-fail((if v_1606 then (if v_1608 then (early_secret_117,binder_key_78) else fail-any) else fail-any)) else caught-fail) in
                                    {7283}let v_1610: bool = (not-caught-fail(v_1609) && success?(1-proj-2-tuple(v_1609))) in
                                    {7284}let kb_78: mac_key = (if v_1610 then 2-proj-2-tuple(v_1609) else caught-fail) in
                                    {7285}let es_115: bitstring = (if v_1610 then 1-proj-2-tuple(v_1609) else caught-fail) in
                                    {7268}let offer_23: params = (if v_1604 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_7,SNI(backend_dom_1),ech_ext_18,@8_i_extra_ext,trunc_client_psk_ext(id_80)) else caught-fail) in
                                    {7269}let cur_log'_23: bitstring = (if v_1604 then (cur_log_IN1_HRR_4,CH(i_cr_12,offer_23)) else caught-fail) in
                                    {7286}let binders_22: bitstring = (if v_1610 then catch-fail(hmac(@8_backend_h,kb_78,cur_log'_23)) else caught-fail) in
                                    {7287}let v_1611: bool = not-caught-fail(binders_22) in
                                    {7288}let v_1612: bitstring = catch-fail((if v_1604 then (if v_1610 then (if v_1611 then (client_psk_ext(id_80,binders_22),(psk_175,id_80,es_115,is_safe_69)) else fail-any) else fail-any) else fail-any)) in
                                    {7289}let v_1613: bool = (not-caught-fail(v_1612) && success?(1-proj-2-tuple(v_1612))) in
                                    {7290}let psk_data_39: bitstring = (if v_1613 then 2-proj-2-tuple(v_1612) else caught-fail) in
                                    {7291}let psk_ext_80: preSharedKeyExt = (if v_1613 then 1-proj-2-tuple(v_1612) else caught-fail) in
                                    {7294}new fake_id_22[]: identityPsk;
                                    {7295}new fake_binder_22[]: bitstring;
                                    {7301}let v_1614: hpkeContext = (if v_1613 then catch-fail(context_2) else caught-fail) in
                                    {7302}let v_1615: bool = (not-caught-fail(v_1614) && ((S =nf 1-proj-hpke_context(v_1614)) && success?(1-proj-hpke_context(v_1614)))) in
                                    {7303}let base_nonce_23: bitstring = (if v_1615 then 3-proj-hpke_context(v_1614) else caught-fail) in
                                    {7304}let key_23: aead_key = (if v_1615 then 2-proj-hpke_context(v_1614) else caught-fail) in
                                    {7300}let n_20: nat = (if v_1613 then 2 else caught-fail) in
                                    {7297}let o_ech_ext_ADD_18: echExt = (if v_1613 then ECHClientHelloOuter(ech_h_16,ech_a_16,config_id_16,zero,zero) else caught-fail) in
                                    {7296}let o_psk_ext_23: preSharedKeyExt = (if v_1613 then (if @8_use_psk then client_psk_ext(fake_id_22,fake_binder_22) else empty_psk_ext) else caught-fail) in
                                    {7298}let o_offer_ADD_18: params = (if v_1613 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_10,SNI(o_dom_12),o_ech_ext_ADD_18,empty_extra_ext,o_psk_ext_23) else caught-fail) in
                                    {7299}let o_client_hello_ADD_18: msg = (if v_1613 then CH(o_cr_15,o_offer_ADD_18) else caught-fail) in
                                    {7292}let i_offer_18: params = (if v_1613 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_7,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_80) else caught-fail) in
                                    {7293}let i_client_hello_24: msg = (if v_1613 then CH(i_cr_12,i_offer_18) else caught-fail) in
                                    {7305}let payload_24: bitstring = (if v_1613 then catch-fail((if v_1615 then aead_enc(ech_a_16,key_23,(base_nonce_23,n_20),o_client_hello_ADD_18,i_client_hello_24) else fail-any)) else caught-fail) in
                                    {7306}let v_1616: bool = not-caught-fail(payload_24) in
                                    {7307}let o_ech_ext_23: echExt = (if v_1616 then ECHClientHelloOuter(ech_h_16,ech_a_16,config_id_16,zero,payload_24) else caught-fail) in
                                    {7308}let o_offer_39: params = (if v_1616 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_10,SNI(o_dom_12),o_ech_ext_23,empty_extra_ext,o_psk_ext_23) else caught-fail) in
                                    {7309}let (o_client_hello'_13: msg,i_client_hello'_14: msg,i_cr'_13: bytes32,i_kex_data'_13: bitstring,psk_data'_33: bitstring) = (if v_1613 then (if v_1616 then (CH(o_cr_15,o_offer_39),i_client_hello_24,i_cr_12,i_kex_data_11,psk_data_39) else fail-any) else fail-any) in
                                    {7310}out(io, o_client_hello'_13);
                                    {7311}in(io, server_hello'_29: msg);
                                    {7312}let SH(B32(sr24'_13: bytes24,sr8'_13: bytes8),params'_13: params) = server_hello'_29 in
                                    {7314}let sh_modified_18: msg = SH(B32(sr24'_13,zero8),params'_13) in
                                    {7313}let cur_log_IN1_HRR_IN2_13: bitstring = (cur_log_IN1_HRR_4,i_client_hello'_14) in
                                    {7315}let cur_log_sh_18: bitstring = (cur_log_IN1_HRR_IN2_13,sh_modified_18) in
                                    {7316}let transcript_ech_conf_18: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_18)) in
                                    {7317}let v_1617: bool = not-caught-fail(transcript_ech_conf_18) in
                                    {7319}let k_171: bitstring = (if v_1617 then catch-fail(b32_2_b(get_random(i_client_hello'_14))) else caught-fail) in
                                    {7320}let v_1618: bool = not-caught-fail(k_171) in
                                    {7318}let s_171: bitstring = (if v_1617 then zero else caught-fail) in
                                    {7321}let k_172: bitstring = (if v_1617 then catch-fail((if v_1618 then hmac(@8_backend_h,s_171,k_171) else fail-any)) else caught-fail) in
                                    {7322}let v_1619: bool = not-caught-fail(k_172) in
                                    {7323}let l_439: label = (if v_1619 then ech_accept_confirmation else caught-fail) in
                                    {7324}let x_500: bitstring = (if v_1619 then (l_439,cur_log_sh_18) else caught-fail) in
                                    {7325}let sr8_23: bytes8 = (if v_1617 then catch-fail(crop_into_bytes8((if v_1619 then hmac(@8_backend_h,k_172,x_500) else fail-any))) else caught-fail) in
                                    {7326}let v_1620: bool = not-caught-fail(sr8_23) in
                                    {7327}if (B32(sr24'_13,sr8'_13) = (if v_1617 then (if v_1620 then B32(sr24'_13,sr8_23) else fail-any) else fail-any)) then
                                    {7328}let (x_501: bitstring,g_45: group) = i_kex_data'_13 in
                                    {7329}let (psk_offer_37: preSharedKey,id_offer_37: identityPsk,es_offer_37: bitstring,is_safe_offer_37: bool) = psk_data'_33 in
                                    {7330}event Client_PSKOffer(id_client_5,psk_offer_37,id_offer_37,is_safe_offer_37);
                                    {7331}event Client_Rand_client(id_client_5,i_cr'_13);
                                    {7332}event Client_DH_client(id_client_5,dh_pub(g_45,x_501));
                                    {7333}event Client_server_domain(id_client_5,backend_dom_1);
                                    {7334}let SH(sr_45: bytes32,mode_42: params) = server_hello'_29 in
                                    {7335}event Client_Rand_server(id_client_5,sr_45);
                                    {7336}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_45,gy_38: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_81: preSharedKeyExt) = mode_42 in
                                    (
                                        {7338}event Client_DH_server(id_client_5,gy_38);
                                        {7339}let v_1621: bool = (psk_ext_81 = empty_psk_ext) in
                                        {7340}let psk_176: preSharedKey = (if v_1621 then NoPsk else caught-fail) in
                                        {7342}let k_173: bitstring = (if v_1621 then catch-fail(psk2b(psk_176)) else caught-fail) in
                                        {7343}let v_1622: bool = not-caught-fail(k_173) in
                                        {7341}let s_172: bitstring = (if v_1621 then zero else caught-fail) in
                                        {7344}let early_secret_118: bitstring = (if v_1621 then catch-fail((if v_1622 then hmac(@8_backend_h,s_172,k_173) else fail-any)) else caught-fail) in
                                        {7345}let v_1623: bool = not-caught-fail(early_secret_118) in
                                        {7347}let m_155: bitstring = (if v_1623 then zero else caught-fail) in
                                        {7348}let h_415: bitstring = (if v_1623 then catch-fail(hash(@8_backend_h,m_155)) else caught-fail) in
                                        {7349}let v_1624: bool = not-caught-fail(h_415) in
                                        {7346}let l_440: label = (if v_1623 then tls13_ext_res_binder else caught-fail) in
                                        {7350}let x_502: bitstring = (if v_1624 then (l_440,h_415) else caught-fail) in
                                        {7351}let binder_key_79: bitstring = (if v_1623 then catch-fail((if v_1624 then hmac(@8_backend_h,early_secret_118,x_502) else fail-any)) else caught-fail) in
                                        {7352}let v_1625: bool = not-caught-fail(binder_key_79) in
                                        {7353}let v_1626: bitstring = (if v_1621 then catch-fail((if v_1623 then (if v_1625 then (early_secret_118,binder_key_79) else fail-any) else fail-any)) else caught-fail) in
                                        {7354}let v_1627: bool = (not-caught-fail(v_1626) && success?(1-proj-2-tuple(v_1626))) in
                                        {7355}let kb_79: mac_key = (if v_1627 then 2-proj-2-tuple(v_1626) else caught-fail) in
                                        {7356}let es_116: bitstring = (if v_1627 then 1-proj-2-tuple(v_1626) else caught-fail) in
                                        {7357}let v_1628: bitstring = (if not(v_1621) then catch-fail(psk_data'_33) else caught-fail) in
                                        {7358}let v_1629: bool = (not-caught-fail(v_1628) && success?(1-proj-4-tuple(v_1628))) in
                                        {7359}let is_safe_70: bool = (if v_1629 then 4-proj-4-tuple(v_1628) else caught-fail) in
                                        {7360}let es_117: bitstring = (if v_1629 then 3-proj-4-tuple(v_1628) else caught-fail) in
                                        {7361}let id_81: identityPsk = (if v_1629 then 2-proj-4-tuple(v_1628) else caught-fail) in
                                        {7362}let psk_177: preSharedKey = (if v_1629 then 1-proj-4-tuple(v_1628) else caught-fail) in
                                        {7363}let (psk_178: preSharedKey,early_secret_119: bitstring,valid_37: bool,safe_psk_40: bool) = (if v_1621 then (if v_1627 then (NoPsk,es_116,true,false) else fail-any) else (if v_1629 then (psk_177,es_117,((psk_177 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_81)),is_safe_70) else fail-any)) in
                                        {7364}event Client_PSKChoosen(id_client_5,psk_178,safe_psk_40);
                                        {7365}if valid_37 then
                                        (
                                            {7368}new s_173[]: seed;
                                            {7366}let gxy_76: element = catch-fail(dh_decap_fun(g_45,gy_38,x_501)) in
                                            {7367}let v_1630: bool = not-caught-fail(gxy_76) in
                                            {7369}let gxy_77: element = (if v_1630 then gxy_76 else dh_f(s_173)) in
                                            {7370}event Client_DH_gxy(id_client_5,gxy_77);
                                            {7372}let m_156: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {7373}let v_1631: bool = not-caught-fail(m_156) in
                                            {7374}let h_416: bitstring = (if v_1631 then catch-fail(hash(@8_backend_h,m_156)) else caught-fail) in
                                            {7375}let v_1632: bool = not-caught-fail(h_416) in
                                            {7371}let l_441: label = tls13_derived in
                                            {7376}let x_503: bitstring = (if v_1632 then (l_441,h_416) else caught-fail) in
                                            {7377}let extra_80: bitstring = catch-fail((if v_1631 then (if v_1632 then hmac(@8_backend_h,early_secret_119,x_503) else fail-any) else fail-any)) in
                                            {7378}let v_1633: bool = not-caught-fail(extra_80) in
                                            {7379}let handshake_secret_38: bitstring = (if v_1633 then hmac(@8_backend_h,extra_80,gxy_77) else fail-any) in
                                            {7381}let m_157: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {7382}let v_1634: bool = not-caught-fail(m_157) in
                                            {7383}let h_417: bitstring = (if v_1634 then catch-fail(hash(@8_backend_h,m_157)) else caught-fail) in
                                            {7384}let v_1635: bool = not-caught-fail(h_417) in
                                            {7380}let l_442: label = tls13_derived in
                                            {7385}let x_504: bitstring = (if v_1635 then (l_442,h_417) else caught-fail) in
                                            {7386}let extra_81: bitstring = catch-fail((if v_1634 then (if v_1635 then hmac(@8_backend_h,handshake_secret_38,x_504) else fail-any) else fail-any)) in
                                            {7387}let v_1636: bool = not-caught-fail(extra_81) in
                                            {7388}let k_174: bitstring = (if v_1636 then zero else caught-fail) in
                                            {7389}let master_secret_83: bitstring = (if v_1636 then catch-fail(hmac(@8_backend_h,handshake_secret_38,k_174)) else caught-fail) in
                                            {7390}let v_1637: bool = not-caught-fail(master_secret_83) in
                                            {7337}let cur_log2_78: bitstring = (cur_log_IN1_HRR_IN2_13,server_hello'_29) in
                                            {7392}let h_418: bitstring = (if v_1637 then catch-fail(hash(@8_backend_h,cur_log2_78)) else caught-fail) in
                                            {7393}let v_1638: bool = not-caught-fail(h_418) in
                                            {7391}let l_443: label = (if v_1637 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {7394}let x_505: bitstring = (if v_1638 then (l_443,h_418) else caught-fail) in
                                            {7395}let client_hts_38: bitstring = (if v_1637 then catch-fail((if v_1638 then hmac(@8_backend_h,handshake_secret_38,x_505) else fail-any)) else caught-fail) in
                                            {7396}let v_1639: bool = not-caught-fail(client_hts_38) in
                                            {7398}let h_419: bitstring = (if v_1639 then catch-fail(hash(@8_backend_h,cur_log2_78)) else caught-fail) in
                                            {7399}let v_1640: bool = not-caught-fail(h_419) in
                                            {7397}let l_444: label = (if v_1639 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {7400}let x_506: bitstring = (if v_1640 then (l_444,h_419) else caught-fail) in
                                            {7401}let server_hts_38: bitstring = (if v_1639 then catch-fail((if v_1640 then hmac(@8_backend_h,handshake_secret_38,x_506) else fail-any)) else caught-fail) in
                                            {7402}let v_1641: bool = not-caught-fail(server_hts_38) in
                                            {7404}let h_420: bitstring = (if v_1641 then zero else caught-fail) in
                                            {7403}let l_445: label = (if v_1641 then tls13_key else caught-fail) in
                                            {7405}let x_507: bitstring = (if v_1641 then (l_445,h_420) else caught-fail) in
                                            {7406}let client_wkh_38: bitstring = (if v_1641 then catch-fail(hmac(@8_backend_h,client_hts_38,x_507)) else caught-fail) in
                                            {7407}let v_1642: bool = not-caught-fail(client_wkh_38) in
                                            {7409}let h_421: bitstring = (if v_1642 then zero else caught-fail) in
                                            {7408}let l_446: label = (if v_1642 then tls13_key else caught-fail) in
                                            {7410}let x_508: bitstring = (if v_1642 then (l_446,h_421) else caught-fail) in
                                            {7411}let server_wkh_38: bitstring = (if v_1642 then catch-fail(hmac(@8_backend_h,server_hts_38,x_508)) else caught-fail) in
                                            {7412}let v_1643: bool = not-caught-fail(server_wkh_38) in
                                            {7414}let h_422: bitstring = (if v_1643 then zero else caught-fail) in
                                            {7413}let l_447: label = (if v_1643 then tls13_finished else caught-fail) in
                                            {7415}let x_509: bitstring = (if v_1643 then (l_447,h_422) else caught-fail) in
                                            {7416}let client_fk_38: bitstring = (if v_1643 then catch-fail(hmac(@8_backend_h,client_hts_38,x_509)) else caught-fail) in
                                            {7417}let v_1644: bool = not-caught-fail(client_fk_38) in
                                            {7419}let h_423: bitstring = (if v_1644 then zero else caught-fail) in
                                            {7418}let l_448: label = (if v_1644 then tls13_finished else caught-fail) in
                                            {7420}let x_510: bitstring = (if v_1644 then (l_448,h_423) else caught-fail) in
                                            {7421}let server_fk_38: bitstring = (if v_1644 then catch-fail(hmac(@8_backend_h,server_hts_38,x_510)) else caught-fail) in
                                            {7422}let v_1645: bool = not-caught-fail(server_fk_38) in
                                            {7423}let (master_secret_84: bitstring,chk_45: aead_key,shk_44: aead_key,cfin_45: mac_key,sfin_44: mac_key) = (if v_1636 then (if v_1637 then (if v_1639 then (if v_1641 then (if v_1642 then (if v_1643 then (if v_1644 then (if v_1645 then (master_secret_83,client_wkh_38,server_wkh_38,client_fk_38,server_fk_38) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {7424}event Client_chk(id_client_5,chk_45);
                                            {7425}event Client_shk(id_client_5,shk_44);
                                            {7426}event Client_cfin(id_client_5,cfin_45);
                                            {7427}event Client_sfin(id_client_5,sfin_44);
                                            {7428}in(io, enc_ee_msg_37: bitstring);
                                            {7429}let ee_msg_42: msg = aead_dec(@8_backend_a,shk_44,0,zero,enc_ee_msg_37) in
                                            {7430}let EE(ech_ee_37: echExt,extra_ee_37: extraExt) = ee_msg_42 in
                                            {7431}let cur_log2_79: bitstring = (cur_log2_78,ee_msg_42) in
                                            {7432}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_13,sr_45,@8_backend_h,@8_backend_a,c_dom_6,backend_dom_1,psk_178,safe_psk_40,@8_comp_psk,master_secret_84,chk_45,0,shk_44,1,cfin_45,sfin_44,cur_log2_79)))
                                        )
                                        else
                                            {7433}out(io, illegal_parameter)
                                    )
                                    else
                                        {7434}out(io, illegal_parameter)
                            )
                            else
                                {7436}let psk_179: preSharedKey = NoPsk in
                                {7438}let k_175: bitstring = catch-fail(psk2b(psk_179)) in
                                {7439}let v_1646: bool = not-caught-fail(k_175) in
                                {7437}let s_174: bitstring = zero in
                                {7440}let early_secret_120: bitstring = catch-fail((if v_1646 then hmac(@8_backend_h,s_174,k_175) else fail-any)) in
                                {7441}let v_1647: bool = not-caught-fail(early_secret_120) in
                                {7443}let m_158: bitstring = (if v_1647 then zero else caught-fail) in
                                {7444}let h_424: bitstring = (if v_1647 then catch-fail(hash(@8_backend_h,m_158)) else caught-fail) in
                                {7445}let v_1648: bool = not-caught-fail(h_424) in
                                {7442}let l_449: label = (if v_1647 then tls13_ext_res_binder else caught-fail) in
                                {7446}let x_511: bitstring = (if v_1648 then (l_449,h_424) else caught-fail) in
                                {7447}let binder_key_80: bitstring = (if v_1647 then catch-fail((if v_1648 then hmac(@8_backend_h,early_secret_120,x_511) else fail-any)) else caught-fail) in
                                {7448}let v_1649: bool = not-caught-fail(binder_key_80) in
                                {7449}let v_1650: bitstring = catch-fail((if v_1647 then (if v_1649 then (early_secret_120,binder_key_80) else fail-any) else fail-any)) in
                                {7450}let v_1651: bool = (not-caught-fail(v_1650) && success?(1-proj-2-tuple(v_1650))) in
                                {7451}let kb_80: mac_key = (if v_1651 then 2-proj-2-tuple(v_1650) else caught-fail) in
                                {7452}let es_118: bitstring = (if v_1651 then 1-proj-2-tuple(v_1650) else caught-fail) in
                                {7453}let v_1652: bitstring = catch-fail((if v_1651 then (empty_psk_ext,(NoPsk,zero,es_118,false)) else fail-any)) in
                                {7454}let v_1653: bool = (not-caught-fail(v_1652) && success?(1-proj-2-tuple(v_1652))) in
                                {7455}let psk_data_40: bitstring = (if v_1653 then 2-proj-2-tuple(v_1652) else caught-fail) in
                                {7456}let psk_ext_82: preSharedKeyExt = (if v_1653 then 1-proj-2-tuple(v_1652) else caught-fail) in
                                {7459}new fake_id_23[]: identityPsk;
                                {7460}new fake_binder_23[]: bitstring;
                                {7466}let v_1654: hpkeContext = (if v_1653 then catch-fail(context_2) else caught-fail) in
                                {7467}let v_1655: bool = (not-caught-fail(v_1654) && ((S =nf 1-proj-hpke_context(v_1654)) && success?(1-proj-hpke_context(v_1654)))) in
                                {7468}let base_nonce_24: bitstring = (if v_1655 then 3-proj-hpke_context(v_1654) else caught-fail) in
                                {7469}let key_24: aead_key = (if v_1655 then 2-proj-hpke_context(v_1654) else caught-fail) in
                                {7465}let n_21: nat = (if v_1653 then 2 else caught-fail) in
                                {7462}let o_ech_ext_ADD_19: echExt = (if v_1653 then ECHClientHelloOuter(ech_h_16,ech_a_16,config_id_16,zero,zero) else caught-fail) in
                                {7461}let o_psk_ext_24: preSharedKeyExt = (if v_1653 then (if @8_use_psk then client_psk_ext(fake_id_23,fake_binder_23) else empty_psk_ext) else caught-fail) in
                                {7463}let o_offer_ADD_19: params = (if v_1653 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_10,SNI(o_dom_12),o_ech_ext_ADD_19,empty_extra_ext,o_psk_ext_24) else caught-fail) in
                                {7464}let o_client_hello_ADD_19: msg = (if v_1653 then CH(o_cr_15,o_offer_ADD_19) else caught-fail) in
                                {7457}let i_offer_19: params = (if v_1653 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_7,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_82) else caught-fail) in
                                {7458}let i_client_hello_25: msg = (if v_1653 then CH(i_cr_12,i_offer_19) else caught-fail) in
                                {7470}let payload_25: bitstring = (if v_1653 then catch-fail((if v_1655 then aead_enc(ech_a_16,key_24,(base_nonce_24,n_21),o_client_hello_ADD_19,i_client_hello_25) else fail-any)) else caught-fail) in
                                {7471}let v_1656: bool = not-caught-fail(payload_25) in
                                {7472}let o_ech_ext_24: echExt = (if v_1656 then ECHClientHelloOuter(ech_h_16,ech_a_16,config_id_16,zero,payload_25) else caught-fail) in
                                {7473}let o_offer_40: params = (if v_1656 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_10,SNI(o_dom_12),o_ech_ext_24,empty_extra_ext,o_psk_ext_24) else caught-fail) in
                                {7474}let (o_client_hello'_14: msg,i_client_hello'_15: msg,i_cr'_14: bytes32,i_kex_data'_14: bitstring,psk_data'_34: bitstring) = (if v_1653 then (if v_1656 then (CH(o_cr_15,o_offer_40),i_client_hello_25,i_cr_12,i_kex_data_11,psk_data_40) else fail-any) else fail-any) in
                                {7475}out(io, o_client_hello'_14);
                                {7476}in(io, server_hello'_30: msg);
                                {7477}let SH(B32(sr24'_14: bytes24,sr8'_14: bytes8),params'_14: params) = server_hello'_30 in
                                {7479}let sh_modified_19: msg = SH(B32(sr24'_14,zero8),params'_14) in
                                {7478}let cur_log_IN1_HRR_IN2_14: bitstring = (cur_log_IN1_HRR_4,i_client_hello'_15) in
                                {7480}let cur_log_sh_19: bitstring = (cur_log_IN1_HRR_IN2_14,sh_modified_19) in
                                {7481}let transcript_ech_conf_19: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_19)) in
                                {7482}let v_1657: bool = not-caught-fail(transcript_ech_conf_19) in
                                {7484}let k_176: bitstring = (if v_1657 then catch-fail(b32_2_b(get_random(i_client_hello'_15))) else caught-fail) in
                                {7485}let v_1658: bool = not-caught-fail(k_176) in
                                {7483}let s_175: bitstring = (if v_1657 then zero else caught-fail) in
                                {7486}let k_177: bitstring = (if v_1657 then catch-fail((if v_1658 then hmac(@8_backend_h,s_175,k_176) else fail-any)) else caught-fail) in
                                {7487}let v_1659: bool = not-caught-fail(k_177) in
                                {7488}let l_450: label = (if v_1659 then ech_accept_confirmation else caught-fail) in
                                {7489}let x_512: bitstring = (if v_1659 then (l_450,cur_log_sh_19) else caught-fail) in
                                {7490}let sr8_24: bytes8 = (if v_1657 then catch-fail(crop_into_bytes8((if v_1659 then hmac(@8_backend_h,k_177,x_512) else fail-any))) else caught-fail) in
                                {7491}let v_1660: bool = not-caught-fail(sr8_24) in
                                {7492}if (B32(sr24'_14,sr8'_14) = (if v_1657 then (if v_1660 then B32(sr24'_14,sr8_24) else fail-any) else fail-any)) then
                                {7493}let (x_513: bitstring,g_46: group) = i_kex_data'_14 in
                                {7494}let (psk_offer_38: preSharedKey,id_offer_38: identityPsk,es_offer_38: bitstring,is_safe_offer_38: bool) = psk_data'_34 in
                                {7495}event Client_PSKOffer(id_client_5,psk_offer_38,id_offer_38,is_safe_offer_38);
                                {7496}event Client_Rand_client(id_client_5,i_cr'_14);
                                {7497}event Client_DH_client(id_client_5,dh_pub(g_46,x_513));
                                {7498}event Client_server_domain(id_client_5,backend_dom_1);
                                {7499}let SH(sr_46: bytes32,mode_43: params) = server_hello'_30 in
                                {7500}event Client_Rand_server(id_client_5,sr_46);
                                {7501}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_46,gy_39: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_83: preSharedKeyExt) = mode_43 in
                                (
                                    {7503}event Client_DH_server(id_client_5,gy_39);
                                    {7504}let v_1661: bool = (psk_ext_83 = empty_psk_ext) in
                                    {7505}let psk_180: preSharedKey = (if v_1661 then NoPsk else caught-fail) in
                                    {7507}let k_178: bitstring = (if v_1661 then catch-fail(psk2b(psk_180)) else caught-fail) in
                                    {7508}let v_1662: bool = not-caught-fail(k_178) in
                                    {7506}let s_176: bitstring = (if v_1661 then zero else caught-fail) in
                                    {7509}let early_secret_121: bitstring = (if v_1661 then catch-fail((if v_1662 then hmac(@8_backend_h,s_176,k_178) else fail-any)) else caught-fail) in
                                    {7510}let v_1663: bool = not-caught-fail(early_secret_121) in
                                    {7512}let m_159: bitstring = (if v_1663 then zero else caught-fail) in
                                    {7513}let h_425: bitstring = (if v_1663 then catch-fail(hash(@8_backend_h,m_159)) else caught-fail) in
                                    {7514}let v_1664: bool = not-caught-fail(h_425) in
                                    {7511}let l_451: label = (if v_1663 then tls13_ext_res_binder else caught-fail) in
                                    {7515}let x_514: bitstring = (if v_1664 then (l_451,h_425) else caught-fail) in
                                    {7516}let binder_key_81: bitstring = (if v_1663 then catch-fail((if v_1664 then hmac(@8_backend_h,early_secret_121,x_514) else fail-any)) else caught-fail) in
                                    {7517}let v_1665: bool = not-caught-fail(binder_key_81) in
                                    {7518}let v_1666: bitstring = (if v_1661 then catch-fail((if v_1663 then (if v_1665 then (early_secret_121,binder_key_81) else fail-any) else fail-any)) else caught-fail) in
                                    {7519}let v_1667: bool = (not-caught-fail(v_1666) && success?(1-proj-2-tuple(v_1666))) in
                                    {7520}let kb_81: mac_key = (if v_1667 then 2-proj-2-tuple(v_1666) else caught-fail) in
                                    {7521}let es_119: bitstring = (if v_1667 then 1-proj-2-tuple(v_1666) else caught-fail) in
                                    {7522}let v_1668: bitstring = (if not(v_1661) then catch-fail(psk_data'_34) else caught-fail) in
                                    {7523}let v_1669: bool = (not-caught-fail(v_1668) && success?(1-proj-4-tuple(v_1668))) in
                                    {7524}let is_safe_71: bool = (if v_1669 then 4-proj-4-tuple(v_1668) else caught-fail) in
                                    {7525}let es_120: bitstring = (if v_1669 then 3-proj-4-tuple(v_1668) else caught-fail) in
                                    {7526}let id_82: identityPsk = (if v_1669 then 2-proj-4-tuple(v_1668) else caught-fail) in
                                    {7527}let psk_181: preSharedKey = (if v_1669 then 1-proj-4-tuple(v_1668) else caught-fail) in
                                    {7528}let (psk_182: preSharedKey,early_secret_122: bitstring,valid_38: bool,safe_psk_41: bool) = (if v_1661 then (if v_1667 then (NoPsk,es_119,true,false) else fail-any) else (if v_1669 then (psk_181,es_120,((psk_181 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_83)),is_safe_71) else fail-any)) in
                                    {7529}event Client_PSKChoosen(id_client_5,psk_182,safe_psk_41);
                                    {7530}if valid_38 then
                                    (
                                        {7533}new s_177[]: seed;
                                        {7531}let gxy_78: element = catch-fail(dh_decap_fun(g_46,gy_39,x_513)) in
                                        {7532}let v_1670: bool = not-caught-fail(gxy_78) in
                                        {7534}let gxy_79: element = (if v_1670 then gxy_78 else dh_f(s_177)) in
                                        {7535}event Client_DH_gxy(id_client_5,gxy_79);
                                        {7537}let m_160: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {7538}let v_1671: bool = not-caught-fail(m_160) in
                                        {7539}let h_426: bitstring = (if v_1671 then catch-fail(hash(@8_backend_h,m_160)) else caught-fail) in
                                        {7540}let v_1672: bool = not-caught-fail(h_426) in
                                        {7536}let l_452: label = tls13_derived in
                                        {7541}let x_515: bitstring = (if v_1672 then (l_452,h_426) else caught-fail) in
                                        {7542}let extra_82: bitstring = catch-fail((if v_1671 then (if v_1672 then hmac(@8_backend_h,early_secret_122,x_515) else fail-any) else fail-any)) in
                                        {7543}let v_1673: bool = not-caught-fail(extra_82) in
                                        {7544}let handshake_secret_39: bitstring = (if v_1673 then hmac(@8_backend_h,extra_82,gxy_79) else fail-any) in
                                        {7546}let m_161: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {7547}let v_1674: bool = not-caught-fail(m_161) in
                                        {7548}let h_427: bitstring = (if v_1674 then catch-fail(hash(@8_backend_h,m_161)) else caught-fail) in
                                        {7549}let v_1675: bool = not-caught-fail(h_427) in
                                        {7545}let l_453: label = tls13_derived in
                                        {7550}let x_516: bitstring = (if v_1675 then (l_453,h_427) else caught-fail) in
                                        {7551}let extra_83: bitstring = catch-fail((if v_1674 then (if v_1675 then hmac(@8_backend_h,handshake_secret_39,x_516) else fail-any) else fail-any)) in
                                        {7552}let v_1676: bool = not-caught-fail(extra_83) in
                                        {7553}let k_179: bitstring = (if v_1676 then zero else caught-fail) in
                                        {7554}let master_secret_85: bitstring = (if v_1676 then catch-fail(hmac(@8_backend_h,handshake_secret_39,k_179)) else caught-fail) in
                                        {7555}let v_1677: bool = not-caught-fail(master_secret_85) in
                                        {7502}let cur_log2_80: bitstring = (cur_log_IN1_HRR_IN2_14,server_hello'_30) in
                                        {7557}let h_428: bitstring = (if v_1677 then catch-fail(hash(@8_backend_h,cur_log2_80)) else caught-fail) in
                                        {7558}let v_1678: bool = not-caught-fail(h_428) in
                                        {7556}let l_454: label = (if v_1677 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {7559}let x_517: bitstring = (if v_1678 then (l_454,h_428) else caught-fail) in
                                        {7560}let client_hts_39: bitstring = (if v_1677 then catch-fail((if v_1678 then hmac(@8_backend_h,handshake_secret_39,x_517) else fail-any)) else caught-fail) in
                                        {7561}let v_1679: bool = not-caught-fail(client_hts_39) in
                                        {7563}let h_429: bitstring = (if v_1679 then catch-fail(hash(@8_backend_h,cur_log2_80)) else caught-fail) in
                                        {7564}let v_1680: bool = not-caught-fail(h_429) in
                                        {7562}let l_455: label = (if v_1679 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {7565}let x_518: bitstring = (if v_1680 then (l_455,h_429) else caught-fail) in
                                        {7566}let server_hts_39: bitstring = (if v_1679 then catch-fail((if v_1680 then hmac(@8_backend_h,handshake_secret_39,x_518) else fail-any)) else caught-fail) in
                                        {7567}let v_1681: bool = not-caught-fail(server_hts_39) in
                                        {7569}let h_430: bitstring = (if v_1681 then zero else caught-fail) in
                                        {7568}let l_456: label = (if v_1681 then tls13_key else caught-fail) in
                                        {7570}let x_519: bitstring = (if v_1681 then (l_456,h_430) else caught-fail) in
                                        {7571}let client_wkh_39: bitstring = (if v_1681 then catch-fail(hmac(@8_backend_h,client_hts_39,x_519)) else caught-fail) in
                                        {7572}let v_1682: bool = not-caught-fail(client_wkh_39) in
                                        {7574}let h_431: bitstring = (if v_1682 then zero else caught-fail) in
                                        {7573}let l_457: label = (if v_1682 then tls13_key else caught-fail) in
                                        {7575}let x_520: bitstring = (if v_1682 then (l_457,h_431) else caught-fail) in
                                        {7576}let server_wkh_39: bitstring = (if v_1682 then catch-fail(hmac(@8_backend_h,server_hts_39,x_520)) else caught-fail) in
                                        {7577}let v_1683: bool = not-caught-fail(server_wkh_39) in
                                        {7579}let h_432: bitstring = (if v_1683 then zero else caught-fail) in
                                        {7578}let l_458: label = (if v_1683 then tls13_finished else caught-fail) in
                                        {7580}let x_521: bitstring = (if v_1683 then (l_458,h_432) else caught-fail) in
                                        {7581}let client_fk_39: bitstring = (if v_1683 then catch-fail(hmac(@8_backend_h,client_hts_39,x_521)) else caught-fail) in
                                        {7582}let v_1684: bool = not-caught-fail(client_fk_39) in
                                        {7584}let h_433: bitstring = (if v_1684 then zero else caught-fail) in
                                        {7583}let l_459: label = (if v_1684 then tls13_finished else caught-fail) in
                                        {7585}let x_522: bitstring = (if v_1684 then (l_459,h_433) else caught-fail) in
                                        {7586}let server_fk_39: bitstring = (if v_1684 then catch-fail(hmac(@8_backend_h,server_hts_39,x_522)) else caught-fail) in
                                        {7587}let v_1685: bool = not-caught-fail(server_fk_39) in
                                        {7588}let (master_secret_86: bitstring,chk_46: aead_key,shk_45: aead_key,cfin_46: mac_key,sfin_45: mac_key) = (if v_1676 then (if v_1677 then (if v_1679 then (if v_1681 then (if v_1682 then (if v_1683 then (if v_1684 then (if v_1685 then (master_secret_85,client_wkh_39,server_wkh_39,client_fk_39,server_fk_39) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {7589}event Client_chk(id_client_5,chk_46);
                                        {7590}event Client_shk(id_client_5,shk_45);
                                        {7591}event Client_cfin(id_client_5,cfin_46);
                                        {7592}event Client_sfin(id_client_5,sfin_45);
                                        {7593}in(io, enc_ee_msg_38: bitstring);
                                        {7594}let ee_msg_43: msg = aead_dec(@8_backend_a,shk_45,0,zero,enc_ee_msg_38) in
                                        {7595}let EE(ech_ee_38: echExt,extra_ee_38: extraExt) = ee_msg_43 in
                                        {7596}let cur_log2_81: bitstring = (cur_log2_80,ee_msg_43) in
                                        {7597}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_14,sr_46,@8_backend_h,@8_backend_a,c_dom_6,backend_dom_1,psk_182,safe_psk_41,@8_comp_psk,master_secret_86,chk_46,0,shk_45,1,cfin_46,sfin_45,cur_log2_81)))
                                    )
                                    else
                                        {7598}out(io, illegal_parameter)
                                )
                                else
                                    {7599}out(io, illegal_parameter)
                        )
                        else
                            {7601}let ech_config(config_id_17: configId,ech_g_17: group,pkR_19: element,o_dom_13: domain,ech_h_17: hash_alg,ech_a_17: aead_alg) = ech_conf_2 in
                            {7602}new rand24_19[]: bytes24;
                            {7603}new rand8_19[]: bytes8;
                            {7606}new s_178[]: seed;
                            {7607}let gx_45: element = dh_pub(@8_tls_g,dh_k(s_178)) in
                            {7608}let v_1686: bitstring = (dh_k(s_178),gx_45) in
                            {7609}let v_1687: bool = success?(1-proj-2-tuple(v_1686)) in
                            {7610}let gx_46: element = (if v_1687 then 2-proj-2-tuple(v_1686) else caught-fail) in
                            {7611}let x_523: bitstring = (if v_1687 then 1-proj-2-tuple(v_1686) else caught-fail) in
                            {7605}let send_key_share_14: bool = true in
                            {7612}let kex_18: kex_alg = (if v_1687 then (if send_key_share_14 then DHE_kex(@8_tls_g,gx_46) else DHE_group(@8_tls_g)) else caught-fail) in
                            {7613}let (o_kex_ext_11: keyShareExt,kex_data_4: bitstring) = (if v_1687 then (client_kex_ext(kex_18),(x_523,@8_tls_g)) else fail-any) in
                            {7604}let o_cr_16: bytes32 = B32(rand24_19,rand8_19) in
                            {7600}let cur_log_OU1_HRR_4: bitstring = ((zero,o_client_hello_6),server_hello_5) in
                            {7614}if @8_use_grease then
                            (
                                {7616}if @8_use_psk then
                                (
                                    {7615}let extra_84: extraExt = empty_extra_ext in
                                    {7617}let (psk_183: preSharedKey,id_83: identityPsk,old_es_11: bitstring,is_safe_72: bool) = psk_data_37 in
                                    (
                                        {7621}let k_180: bitstring = catch-fail(psk2b(psk_183)) in
                                        {7622}let v_1688: bool = not-caught-fail(k_180) in
                                        {7620}let s_179: bitstring = zero in
                                        {7623}let early_secret_123: bitstring = catch-fail((if v_1688 then hmac(@8_tls_h,s_179,k_180) else fail-any)) in
                                        {7624}let v_1689: bool = not-caught-fail(early_secret_123) in
                                        {7626}let m_162: bitstring = (if v_1689 then zero else caught-fail) in
                                        {7627}let h_434: bitstring = (if v_1689 then catch-fail(hash(@8_tls_h,m_162)) else caught-fail) in
                                        {7628}let v_1690: bool = not-caught-fail(h_434) in
                                        {7625}let l_460: label = (if v_1689 then tls13_ext_res_binder else caught-fail) in
                                        {7629}let x_524: bitstring = (if v_1690 then (l_460,h_434) else caught-fail) in
                                        {7630}let binder_key_82: bitstring = (if v_1689 then catch-fail((if v_1690 then hmac(@8_tls_h,early_secret_123,x_524) else fail-any)) else caught-fail) in
                                        {7631}let v_1691: bool = not-caught-fail(binder_key_82) in
                                        {7632}let v_1692: bitstring = catch-fail((if v_1689 then (if v_1691 then (early_secret_123,binder_key_82) else fail-any) else fail-any)) in
                                        {7633}let v_1693: bool = (not-caught-fail(v_1692) && success?(1-proj-2-tuple(v_1692))) in
                                        {7634}let kb_82: mac_key = (if v_1693 then 2-proj-2-tuple(v_1692) else caught-fail) in
                                        {7635}let es_121: bitstring = (if v_1693 then 1-proj-2-tuple(v_1692) else caught-fail) in
                                        {7618}let offer_24: params = nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_11,SNI(o_dom_13),o_ech_ext_21,extra_84,trunc_client_psk_ext(id_83)) in
                                        {7619}let cur_log'_24: bitstring = (cur_log_OU1_HRR_4,CH(o_cr_16,offer_24)) in
                                        {7636}let binders_23: bitstring = (if v_1693 then catch-fail(hmac(@8_tls_h,kb_82,cur_log'_24)) else caught-fail) in
                                        {7637}let v_1694: bool = not-caught-fail(binders_23) in
                                        {7638}let v_1695: bitstring = catch-fail((if v_1693 then (if v_1694 then (client_psk_ext(id_83,binders_23),(psk_183,id_83,es_121,is_safe_72)) else fail-any) else fail-any)) in
                                        {7639}let v_1696: bool = (not-caught-fail(v_1695) && success?(1-proj-2-tuple(v_1695))) in
                                        {7640}let psk_data_41: bitstring = (if v_1696 then 2-proj-2-tuple(v_1695) else caught-fail) in
                                        {7641}let psk_ext_84: preSharedKeyExt = (if v_1696 then 1-proj-2-tuple(v_1695) else caught-fail) in
                                        {7642}let o_offer_41: params = (if v_1696 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_11,SNI(o_dom_13),o_ech_ext_21,empty_extra_ext,psk_ext_84) else caught-fail) in
                                        {7643}let (client_hello'_19: msg,cr'_21: bytes32,kex_data'_16: bitstring,psk_data'_35: bitstring) = (if v_1696 then (CH(o_cr_16,o_offer_41),o_cr_16,kex_data_4,psk_data_41) else fail-any) in
                                        {7644}out(io, client_hello'_19);
                                        {7646}in(io, server_hello'_31: msg);
                                        {7647}let SH(sr'_16: bytes32,mode'_16: params) = server_hello'_31 in
                                        (
                                            {7648}if (sr'_16 = B32(HRR24,HRR8)) then
                                                {7649}out(io, unexpected_message)
                                            else
                                                {7650}let (x_525: bitstring,g_47: group) = kex_data'_16 in
                                                {7651}let (psk_offer_39: preSharedKey,id_offer_39: identityPsk,es_offer_39: bitstring,is_safe_offer_39: bool) = psk_data'_35 in
                                                {7652}event Client_PSKOffer(id_client_5,psk_offer_39,id_offer_39,is_safe_offer_39);
                                                {7653}event Client_Rand_client(id_client_5,cr'_21);
                                                {7654}event Client_DH_client(id_client_5,dh_pub(g_47,x_525));
                                                {7655}event Client_server_domain(id_client_5,o_dom_8);
                                                {7656}let SH(sr_47: bytes32,mode_44: params) = server_hello'_31 in
                                                {7657}event Client_Rand_server(id_client_5,sr_47);
                                                {7658}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_47,gy_40: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_85: preSharedKeyExt) = mode_44 in
                                                (
                                                    {7660}event Client_DH_server(id_client_5,gy_40);
                                                    {7661}let v_1697: bool = (psk_ext_85 = empty_psk_ext) in
                                                    {7662}let psk_184: preSharedKey = (if v_1697 then NoPsk else caught-fail) in
                                                    {7664}let k_181: bitstring = (if v_1697 then catch-fail(psk2b(psk_184)) else caught-fail) in
                                                    {7665}let v_1698: bool = not-caught-fail(k_181) in
                                                    {7663}let s_180: bitstring = (if v_1697 then zero else caught-fail) in
                                                    {7666}let early_secret_124: bitstring = (if v_1697 then catch-fail((if v_1698 then hmac(@8_tls_h,s_180,k_181) else fail-any)) else caught-fail) in
                                                    {7667}let v_1699: bool = not-caught-fail(early_secret_124) in
                                                    {7669}let m_163: bitstring = (if v_1699 then zero else caught-fail) in
                                                    {7670}let h_435: bitstring = (if v_1699 then catch-fail(hash(@8_tls_h,m_163)) else caught-fail) in
                                                    {7671}let v_1700: bool = not-caught-fail(h_435) in
                                                    {7668}let l_461: label = (if v_1699 then tls13_ext_res_binder else caught-fail) in
                                                    {7672}let x_526: bitstring = (if v_1700 then (l_461,h_435) else caught-fail) in
                                                    {7673}let binder_key_83: bitstring = (if v_1699 then catch-fail((if v_1700 then hmac(@8_tls_h,early_secret_124,x_526) else fail-any)) else caught-fail) in
                                                    {7674}let v_1701: bool = not-caught-fail(binder_key_83) in
                                                    {7675}let v_1702: bitstring = (if v_1697 then catch-fail((if v_1699 then (if v_1701 then (early_secret_124,binder_key_83) else fail-any) else fail-any)) else caught-fail) in
                                                    {7676}let v_1703: bool = (not-caught-fail(v_1702) && success?(1-proj-2-tuple(v_1702))) in
                                                    {7677}let kb_83: mac_key = (if v_1703 then 2-proj-2-tuple(v_1702) else caught-fail) in
                                                    {7678}let es_122: bitstring = (if v_1703 then 1-proj-2-tuple(v_1702) else caught-fail) in
                                                    {7679}let v_1704: bitstring = (if not(v_1697) then catch-fail(psk_data'_35) else caught-fail) in
                                                    {7680}let v_1705: bool = (not-caught-fail(v_1704) && success?(1-proj-4-tuple(v_1704))) in
                                                    {7681}let is_safe_73: bool = (if v_1705 then 4-proj-4-tuple(v_1704) else caught-fail) in
                                                    {7682}let es_123: bitstring = (if v_1705 then 3-proj-4-tuple(v_1704) else caught-fail) in
                                                    {7683}let id_84: identityPsk = (if v_1705 then 2-proj-4-tuple(v_1704) else caught-fail) in
                                                    {7684}let psk_185: preSharedKey = (if v_1705 then 1-proj-4-tuple(v_1704) else caught-fail) in
                                                    {7685}let (psk_186: preSharedKey,early_secret_125: bitstring,valid_39: bool,safe_psk_42: bool) = (if v_1697 then (if v_1703 then (NoPsk,es_122,true,false) else fail-any) else (if v_1705 then (psk_185,es_123,((psk_185 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_85)),is_safe_73) else fail-any)) in
                                                    {7686}event Client_PSKChoosen(id_client_5,psk_186,safe_psk_42);
                                                    {7687}if valid_39 then
                                                    (
                                                        {7690}new s_181[]: seed;
                                                        {7688}let gxy_80: element = catch-fail(dh_decap_fun(g_47,gy_40,x_525)) in
                                                        {7689}let v_1706: bool = not-caught-fail(gxy_80) in
                                                        {7691}let gxy_81: element = (if v_1706 then gxy_80 else dh_f(s_181)) in
                                                        {7692}event Client_DH_gxy(id_client_5,gxy_81);
                                                        {7694}let m_164: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {7695}let v_1707: bool = not-caught-fail(m_164) in
                                                        {7696}let h_436: bitstring = (if v_1707 then catch-fail(hash(@8_tls_h,m_164)) else caught-fail) in
                                                        {7697}let v_1708: bool = not-caught-fail(h_436) in
                                                        {7693}let l_462: label = tls13_derived in
                                                        {7698}let x_527: bitstring = (if v_1708 then (l_462,h_436) else caught-fail) in
                                                        {7699}let extra_85: bitstring = catch-fail((if v_1707 then (if v_1708 then hmac(@8_tls_h,early_secret_125,x_527) else fail-any) else fail-any)) in
                                                        {7700}let v_1709: bool = not-caught-fail(extra_85) in
                                                        {7701}let handshake_secret_40: bitstring = (if v_1709 then hmac(@8_tls_h,extra_85,gxy_81) else fail-any) in
                                                        {7703}let m_165: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {7704}let v_1710: bool = not-caught-fail(m_165) in
                                                        {7705}let h_437: bitstring = (if v_1710 then catch-fail(hash(@8_tls_h,m_165)) else caught-fail) in
                                                        {7706}let v_1711: bool = not-caught-fail(h_437) in
                                                        {7702}let l_463: label = tls13_derived in
                                                        {7707}let x_528: bitstring = (if v_1711 then (l_463,h_437) else caught-fail) in
                                                        {7708}let extra_86: bitstring = catch-fail((if v_1710 then (if v_1711 then hmac(@8_tls_h,handshake_secret_40,x_528) else fail-any) else fail-any)) in
                                                        {7709}let v_1712: bool = not-caught-fail(extra_86) in
                                                        {7710}let k_182: bitstring = (if v_1712 then zero else caught-fail) in
                                                        {7711}let master_secret_87: bitstring = (if v_1712 then catch-fail(hmac(@8_tls_h,handshake_secret_40,k_182)) else caught-fail) in
                                                        {7712}let v_1713: bool = not-caught-fail(master_secret_87) in
                                                        {7645}let cur_log_OU1_HRR_OU2_16: bitstring = (cur_log_OU1_HRR_4,client_hello'_19) in
                                                        {7659}let cur_log2_82: bitstring = (cur_log_OU1_HRR_OU2_16,server_hello'_31) in
                                                        {7714}let h_438: bitstring = (if v_1713 then catch-fail(hash(@8_tls_h,cur_log2_82)) else caught-fail) in
                                                        {7715}let v_1714: bool = not-caught-fail(h_438) in
                                                        {7713}let l_464: label = (if v_1713 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {7716}let x_529: bitstring = (if v_1714 then (l_464,h_438) else caught-fail) in
                                                        {7717}let client_hts_40: bitstring = (if v_1713 then catch-fail((if v_1714 then hmac(@8_tls_h,handshake_secret_40,x_529) else fail-any)) else caught-fail) in
                                                        {7718}let v_1715: bool = not-caught-fail(client_hts_40) in
                                                        {7720}let h_439: bitstring = (if v_1715 then catch-fail(hash(@8_tls_h,cur_log2_82)) else caught-fail) in
                                                        {7721}let v_1716: bool = not-caught-fail(h_439) in
                                                        {7719}let l_465: label = (if v_1715 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {7722}let x_530: bitstring = (if v_1716 then (l_465,h_439) else caught-fail) in
                                                        {7723}let server_hts_40: bitstring = (if v_1715 then catch-fail((if v_1716 then hmac(@8_tls_h,handshake_secret_40,x_530) else fail-any)) else caught-fail) in
                                                        {7724}let v_1717: bool = not-caught-fail(server_hts_40) in
                                                        {7726}let h_440: bitstring = (if v_1717 then zero else caught-fail) in
                                                        {7725}let l_466: label = (if v_1717 then tls13_key else caught-fail) in
                                                        {7727}let x_531: bitstring = (if v_1717 then (l_466,h_440) else caught-fail) in
                                                        {7728}let client_wkh_40: bitstring = (if v_1717 then catch-fail(hmac(@8_tls_h,client_hts_40,x_531)) else caught-fail) in
                                                        {7729}let v_1718: bool = not-caught-fail(client_wkh_40) in
                                                        {7731}let h_441: bitstring = (if v_1718 then zero else caught-fail) in
                                                        {7730}let l_467: label = (if v_1718 then tls13_key else caught-fail) in
                                                        {7732}let x_532: bitstring = (if v_1718 then (l_467,h_441) else caught-fail) in
                                                        {7733}let server_wkh_40: bitstring = (if v_1718 then catch-fail(hmac(@8_tls_h,server_hts_40,x_532)) else caught-fail) in
                                                        {7734}let v_1719: bool = not-caught-fail(server_wkh_40) in
                                                        {7736}let h_442: bitstring = (if v_1719 then zero else caught-fail) in
                                                        {7735}let l_468: label = (if v_1719 then tls13_finished else caught-fail) in
                                                        {7737}let x_533: bitstring = (if v_1719 then (l_468,h_442) else caught-fail) in
                                                        {7738}let client_fk_40: bitstring = (if v_1719 then catch-fail(hmac(@8_tls_h,client_hts_40,x_533)) else caught-fail) in
                                                        {7739}let v_1720: bool = not-caught-fail(client_fk_40) in
                                                        {7741}let h_443: bitstring = (if v_1720 then zero else caught-fail) in
                                                        {7740}let l_469: label = (if v_1720 then tls13_finished else caught-fail) in
                                                        {7742}let x_534: bitstring = (if v_1720 then (l_469,h_443) else caught-fail) in
                                                        {7743}let server_fk_40: bitstring = (if v_1720 then catch-fail(hmac(@8_tls_h,server_hts_40,x_534)) else caught-fail) in
                                                        {7744}let v_1721: bool = not-caught-fail(server_fk_40) in
                                                        {7745}let (master_secret_88: bitstring,chk_47: aead_key,shk_46: aead_key,cfin_47: mac_key,sfin_46: mac_key) = (if v_1712 then (if v_1713 then (if v_1715 then (if v_1717 then (if v_1718 then (if v_1719 then (if v_1720 then (if v_1721 then (master_secret_87,client_wkh_40,server_wkh_40,client_fk_40,server_fk_40) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {7746}event Client_chk(id_client_5,chk_47);
                                                        {7747}event Client_shk(id_client_5,shk_46);
                                                        {7748}event Client_cfin(id_client_5,cfin_47);
                                                        {7749}event Client_sfin(id_client_5,sfin_46);
                                                        {7750}in(io, enc_ee_msg_39: bitstring);
                                                        {7751}let ee_msg_44: msg = aead_dec(@8_tls_a,shk_46,0,zero,enc_ee_msg_39) in
                                                        {7752}let EE(ech_ee_39: echExt,extra_ee_39: extraExt) = ee_msg_44 in
                                                        {7753}let cur_log2_83: bitstring = (cur_log2_82,ee_msg_44) in
                                                        {7754}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_21,sr_47,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_186,safe_psk_42,@8_comp_psk,master_secret_88,chk_47,0,shk_46,1,cfin_47,sfin_46,cur_log2_83)))
                                                    )
                                                    else
                                                        {7755}out(io, illegal_parameter)
                                                )
                                                else
                                                    {7756}out(io, illegal_parameter)
                                        )
                                        else
                                            {7757}out(io, unexpected_message)
                                    )
                                    else
                                        {7907}get pre_shared_keys(c_dom'_13: domain,=o_dom_13,=@8_tls_h,id_85: identityPsk,psk_187: preSharedKey,idP_15: idProc,is_safe_74: bool) in
                                        {7758}event Selected_one_time_used_psk(id_client_5,psk_187,is_safe_74);
                                        {7759}event Selected_psk(c_dom_6,c_dom'_13,idP_15,is_safe_74);
                                        {7760}event Selected_psk_no_missmatch(id_client_5,o_dom_13,@8_tls_h,psk_187,id_85);
                                        {7761}event Selected_psk_with_ID(c_dom_6,c_dom'_13,id_85,idP_15,is_safe_74);
                                        {7762}let v_1722: bitstring = (id_85,psk_187,is_safe_74) in
                                        {7763}let v_1723: bool = success?(1-proj-3-tuple(v_1722)) in
                                        {7764}let is_safe_75: bool = (if v_1723 then 3-proj-3-tuple(v_1722) else caught-fail) in
                                        {7765}let psk_188: preSharedKey = (if v_1723 then 2-proj-3-tuple(v_1722) else caught-fail) in
                                        {7766}let id_86: identityPsk = (if v_1723 then 1-proj-3-tuple(v_1722) else caught-fail) in
                                        {7770}let k_183: bitstring = (if v_1723 then catch-fail(psk2b(psk_188)) else caught-fail) in
                                        {7771}let v_1724: bool = not-caught-fail(k_183) in
                                        {7769}let s_182: bitstring = (if v_1723 then zero else caught-fail) in
                                        {7772}let early_secret_126: bitstring = (if v_1723 then catch-fail((if v_1724 then hmac(@8_tls_h,s_182,k_183) else fail-any)) else caught-fail) in
                                        {7773}let v_1725: bool = not-caught-fail(early_secret_126) in
                                        {7775}let m_166: bitstring = (if v_1725 then zero else caught-fail) in
                                        {7776}let h_444: bitstring = (if v_1725 then catch-fail(hash(@8_tls_h,m_166)) else caught-fail) in
                                        {7777}let v_1726: bool = not-caught-fail(h_444) in
                                        {7774}let l_470: label = (if v_1725 then tls13_ext_res_binder else caught-fail) in
                                        {7778}let x_535: bitstring = (if v_1726 then (l_470,h_444) else caught-fail) in
                                        {7779}let binder_key_84: bitstring = (if v_1725 then catch-fail((if v_1726 then hmac(@8_tls_h,early_secret_126,x_535) else fail-any)) else caught-fail) in
                                        {7780}let v_1727: bool = not-caught-fail(binder_key_84) in
                                        {7781}let v_1728: bitstring = (if v_1723 then catch-fail((if v_1725 then (if v_1727 then (early_secret_126,binder_key_84) else fail-any) else fail-any)) else caught-fail) in
                                        {7782}let v_1729: bool = (not-caught-fail(v_1728) && success?(1-proj-2-tuple(v_1728))) in
                                        {7783}let kb_84: mac_key = (if v_1729 then 2-proj-2-tuple(v_1728) else caught-fail) in
                                        {7784}let es_124: bitstring = (if v_1729 then 1-proj-2-tuple(v_1728) else caught-fail) in
                                        {7767}let offer_25: params = (if v_1723 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_11,SNI(o_dom_13),o_ech_ext_21,extra_84,trunc_client_psk_ext(id_86)) else caught-fail) in
                                        {7768}let cur_log'_25: bitstring = (if v_1723 then (cur_log_OU1_HRR_4,CH(o_cr_16,offer_25)) else caught-fail) in
                                        {7785}let binders_24: bitstring = (if v_1729 then catch-fail(hmac(@8_tls_h,kb_84,cur_log'_25)) else caught-fail) in
                                        {7786}let v_1730: bool = not-caught-fail(binders_24) in
                                        {7787}let v_1731: bitstring = catch-fail((if v_1723 then (if v_1729 then (if v_1730 then (client_psk_ext(id_86,binders_24),(psk_188,id_86,es_124,is_safe_75)) else fail-any) else fail-any) else fail-any)) in
                                        {7788}let v_1732: bool = (not-caught-fail(v_1731) && success?(1-proj-2-tuple(v_1731))) in
                                        {7789}let psk_data_42: bitstring = (if v_1732 then 2-proj-2-tuple(v_1731) else caught-fail) in
                                        {7790}let psk_ext_86: preSharedKeyExt = (if v_1732 then 1-proj-2-tuple(v_1731) else caught-fail) in
                                        {7791}let o_offer_42: params = (if v_1732 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_11,SNI(o_dom_13),o_ech_ext_21,empty_extra_ext,psk_ext_86) else caught-fail) in
                                        {7792}let (client_hello'_20: msg,cr'_22: bytes32,kex_data'_17: bitstring,psk_data'_36: bitstring) = (if v_1732 then (CH(o_cr_16,o_offer_42),o_cr_16,kex_data_4,psk_data_42) else fail-any) in
                                        {7793}out(io, client_hello'_20);
                                        {7795}in(io, server_hello'_32: msg);
                                        {7796}let SH(sr'_17: bytes32,mode'_17: params) = server_hello'_32 in
                                        (
                                            {7797}if (sr'_17 = B32(HRR24,HRR8)) then
                                                {7798}out(io, unexpected_message)
                                            else
                                                {7799}let (x_536: bitstring,g_48: group) = kex_data'_17 in
                                                {7800}let (psk_offer_40: preSharedKey,id_offer_40: identityPsk,es_offer_40: bitstring,is_safe_offer_40: bool) = psk_data'_36 in
                                                {7801}event Client_PSKOffer(id_client_5,psk_offer_40,id_offer_40,is_safe_offer_40);
                                                {7802}event Client_Rand_client(id_client_5,cr'_22);
                                                {7803}event Client_DH_client(id_client_5,dh_pub(g_48,x_536));
                                                {7804}event Client_server_domain(id_client_5,o_dom_8);
                                                {7805}let SH(sr_48: bytes32,mode_45: params) = server_hello'_32 in
                                                {7806}event Client_Rand_server(id_client_5,sr_48);
                                                {7807}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_48,gy_41: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_87: preSharedKeyExt) = mode_45 in
                                                (
                                                    {7809}event Client_DH_server(id_client_5,gy_41);
                                                    {7810}let v_1733: bool = (psk_ext_87 = empty_psk_ext) in
                                                    {7811}let psk_189: preSharedKey = (if v_1733 then NoPsk else caught-fail) in
                                                    {7813}let k_184: bitstring = (if v_1733 then catch-fail(psk2b(psk_189)) else caught-fail) in
                                                    {7814}let v_1734: bool = not-caught-fail(k_184) in
                                                    {7812}let s_183: bitstring = (if v_1733 then zero else caught-fail) in
                                                    {7815}let early_secret_127: bitstring = (if v_1733 then catch-fail((if v_1734 then hmac(@8_tls_h,s_183,k_184) else fail-any)) else caught-fail) in
                                                    {7816}let v_1735: bool = not-caught-fail(early_secret_127) in
                                                    {7818}let m_167: bitstring = (if v_1735 then zero else caught-fail) in
                                                    {7819}let h_445: bitstring = (if v_1735 then catch-fail(hash(@8_tls_h,m_167)) else caught-fail) in
                                                    {7820}let v_1736: bool = not-caught-fail(h_445) in
                                                    {7817}let l_471: label = (if v_1735 then tls13_ext_res_binder else caught-fail) in
                                                    {7821}let x_537: bitstring = (if v_1736 then (l_471,h_445) else caught-fail) in
                                                    {7822}let binder_key_85: bitstring = (if v_1735 then catch-fail((if v_1736 then hmac(@8_tls_h,early_secret_127,x_537) else fail-any)) else caught-fail) in
                                                    {7823}let v_1737: bool = not-caught-fail(binder_key_85) in
                                                    {7824}let v_1738: bitstring = (if v_1733 then catch-fail((if v_1735 then (if v_1737 then (early_secret_127,binder_key_85) else fail-any) else fail-any)) else caught-fail) in
                                                    {7825}let v_1739: bool = (not-caught-fail(v_1738) && success?(1-proj-2-tuple(v_1738))) in
                                                    {7826}let kb_85: mac_key = (if v_1739 then 2-proj-2-tuple(v_1738) else caught-fail) in
                                                    {7827}let es_125: bitstring = (if v_1739 then 1-proj-2-tuple(v_1738) else caught-fail) in
                                                    {7828}let v_1740: bitstring = (if not(v_1733) then catch-fail(psk_data'_36) else caught-fail) in
                                                    {7829}let v_1741: bool = (not-caught-fail(v_1740) && success?(1-proj-4-tuple(v_1740))) in
                                                    {7830}let is_safe_76: bool = (if v_1741 then 4-proj-4-tuple(v_1740) else caught-fail) in
                                                    {7831}let es_126: bitstring = (if v_1741 then 3-proj-4-tuple(v_1740) else caught-fail) in
                                                    {7832}let id_87: identityPsk = (if v_1741 then 2-proj-4-tuple(v_1740) else caught-fail) in
                                                    {7833}let psk_190: preSharedKey = (if v_1741 then 1-proj-4-tuple(v_1740) else caught-fail) in
                                                    {7834}let (psk_191: preSharedKey,early_secret_128: bitstring,valid_40: bool,safe_psk_43: bool) = (if v_1733 then (if v_1739 then (NoPsk,es_125,true,false) else fail-any) else (if v_1741 then (psk_190,es_126,((psk_190 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_87)),is_safe_76) else fail-any)) in
                                                    {7835}event Client_PSKChoosen(id_client_5,psk_191,safe_psk_43);
                                                    {7836}if valid_40 then
                                                    (
                                                        {7839}new s_184[]: seed;
                                                        {7837}let gxy_82: element = catch-fail(dh_decap_fun(g_48,gy_41,x_536)) in
                                                        {7838}let v_1742: bool = not-caught-fail(gxy_82) in
                                                        {7840}let gxy_83: element = (if v_1742 then gxy_82 else dh_f(s_184)) in
                                                        {7841}event Client_DH_gxy(id_client_5,gxy_83);
                                                        {7843}let m_168: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {7844}let v_1743: bool = not-caught-fail(m_168) in
                                                        {7845}let h_446: bitstring = (if v_1743 then catch-fail(hash(@8_tls_h,m_168)) else caught-fail) in
                                                        {7846}let v_1744: bool = not-caught-fail(h_446) in
                                                        {7842}let l_472: label = tls13_derived in
                                                        {7847}let x_538: bitstring = (if v_1744 then (l_472,h_446) else caught-fail) in
                                                        {7848}let extra_87: bitstring = catch-fail((if v_1743 then (if v_1744 then hmac(@8_tls_h,early_secret_128,x_538) else fail-any) else fail-any)) in
                                                        {7849}let v_1745: bool = not-caught-fail(extra_87) in
                                                        {7850}let handshake_secret_41: bitstring = (if v_1745 then hmac(@8_tls_h,extra_87,gxy_83) else fail-any) in
                                                        {7852}let m_169: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {7853}let v_1746: bool = not-caught-fail(m_169) in
                                                        {7854}let h_447: bitstring = (if v_1746 then catch-fail(hash(@8_tls_h,m_169)) else caught-fail) in
                                                        {7855}let v_1747: bool = not-caught-fail(h_447) in
                                                        {7851}let l_473: label = tls13_derived in
                                                        {7856}let x_539: bitstring = (if v_1747 then (l_473,h_447) else caught-fail) in
                                                        {7857}let extra_88: bitstring = catch-fail((if v_1746 then (if v_1747 then hmac(@8_tls_h,handshake_secret_41,x_539) else fail-any) else fail-any)) in
                                                        {7858}let v_1748: bool = not-caught-fail(extra_88) in
                                                        {7859}let k_185: bitstring = (if v_1748 then zero else caught-fail) in
                                                        {7860}let master_secret_89: bitstring = (if v_1748 then catch-fail(hmac(@8_tls_h,handshake_secret_41,k_185)) else caught-fail) in
                                                        {7861}let v_1749: bool = not-caught-fail(master_secret_89) in
                                                        {7794}let cur_log_OU1_HRR_OU2_17: bitstring = (cur_log_OU1_HRR_4,client_hello'_20) in
                                                        {7808}let cur_log2_84: bitstring = (cur_log_OU1_HRR_OU2_17,server_hello'_32) in
                                                        {7863}let h_448: bitstring = (if v_1749 then catch-fail(hash(@8_tls_h,cur_log2_84)) else caught-fail) in
                                                        {7864}let v_1750: bool = not-caught-fail(h_448) in
                                                        {7862}let l_474: label = (if v_1749 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {7865}let x_540: bitstring = (if v_1750 then (l_474,h_448) else caught-fail) in
                                                        {7866}let client_hts_41: bitstring = (if v_1749 then catch-fail((if v_1750 then hmac(@8_tls_h,handshake_secret_41,x_540) else fail-any)) else caught-fail) in
                                                        {7867}let v_1751: bool = not-caught-fail(client_hts_41) in
                                                        {7869}let h_449: bitstring = (if v_1751 then catch-fail(hash(@8_tls_h,cur_log2_84)) else caught-fail) in
                                                        {7870}let v_1752: bool = not-caught-fail(h_449) in
                                                        {7868}let l_475: label = (if v_1751 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {7871}let x_541: bitstring = (if v_1752 then (l_475,h_449) else caught-fail) in
                                                        {7872}let server_hts_41: bitstring = (if v_1751 then catch-fail((if v_1752 then hmac(@8_tls_h,handshake_secret_41,x_541) else fail-any)) else caught-fail) in
                                                        {7873}let v_1753: bool = not-caught-fail(server_hts_41) in
                                                        {7875}let h_450: bitstring = (if v_1753 then zero else caught-fail) in
                                                        {7874}let l_476: label = (if v_1753 then tls13_key else caught-fail) in
                                                        {7876}let x_542: bitstring = (if v_1753 then (l_476,h_450) else caught-fail) in
                                                        {7877}let client_wkh_41: bitstring = (if v_1753 then catch-fail(hmac(@8_tls_h,client_hts_41,x_542)) else caught-fail) in
                                                        {7878}let v_1754: bool = not-caught-fail(client_wkh_41) in
                                                        {7880}let h_451: bitstring = (if v_1754 then zero else caught-fail) in
                                                        {7879}let l_477: label = (if v_1754 then tls13_key else caught-fail) in
                                                        {7881}let x_543: bitstring = (if v_1754 then (l_477,h_451) else caught-fail) in
                                                        {7882}let server_wkh_41: bitstring = (if v_1754 then catch-fail(hmac(@8_tls_h,server_hts_41,x_543)) else caught-fail) in
                                                        {7883}let v_1755: bool = not-caught-fail(server_wkh_41) in
                                                        {7885}let h_452: bitstring = (if v_1755 then zero else caught-fail) in
                                                        {7884}let l_478: label = (if v_1755 then tls13_finished else caught-fail) in
                                                        {7886}let x_544: bitstring = (if v_1755 then (l_478,h_452) else caught-fail) in
                                                        {7887}let client_fk_41: bitstring = (if v_1755 then catch-fail(hmac(@8_tls_h,client_hts_41,x_544)) else caught-fail) in
                                                        {7888}let v_1756: bool = not-caught-fail(client_fk_41) in
                                                        {7890}let h_453: bitstring = (if v_1756 then zero else caught-fail) in
                                                        {7889}let l_479: label = (if v_1756 then tls13_finished else caught-fail) in
                                                        {7891}let x_545: bitstring = (if v_1756 then (l_479,h_453) else caught-fail) in
                                                        {7892}let server_fk_41: bitstring = (if v_1756 then catch-fail(hmac(@8_tls_h,server_hts_41,x_545)) else caught-fail) in
                                                        {7893}let v_1757: bool = not-caught-fail(server_fk_41) in
                                                        {7894}let (master_secret_90: bitstring,chk_48: aead_key,shk_47: aead_key,cfin_48: mac_key,sfin_47: mac_key) = (if v_1748 then (if v_1749 then (if v_1751 then (if v_1753 then (if v_1754 then (if v_1755 then (if v_1756 then (if v_1757 then (master_secret_89,client_wkh_41,server_wkh_41,client_fk_41,server_fk_41) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {7895}event Client_chk(id_client_5,chk_48);
                                                        {7896}event Client_shk(id_client_5,shk_47);
                                                        {7897}event Client_cfin(id_client_5,cfin_48);
                                                        {7898}event Client_sfin(id_client_5,sfin_47);
                                                        {7899}in(io, enc_ee_msg_40: bitstring);
                                                        {7900}let ee_msg_45: msg = aead_dec(@8_tls_a,shk_47,0,zero,enc_ee_msg_40) in
                                                        {7901}let EE(ech_ee_40: echExt,extra_ee_40: extraExt) = ee_msg_45 in
                                                        {7902}let cur_log2_85: bitstring = (cur_log2_84,ee_msg_45) in
                                                        {7903}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_22,sr_48,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_191,safe_psk_43,@8_comp_psk,master_secret_90,chk_48,0,shk_47,1,cfin_48,sfin_47,cur_log2_85)))
                                                    )
                                                    else
                                                        {7904}out(io, illegal_parameter)
                                                )
                                                else
                                                    {7905}out(io, illegal_parameter)
                                        )
                                        else
                                            {7906}out(io, unexpected_message)
                                )
                                else
                                    {7908}let psk_192: preSharedKey = NoPsk in
                                    {7910}let k_186: bitstring = catch-fail(psk2b(psk_192)) in
                                    {7911}let v_1758: bool = not-caught-fail(k_186) in
                                    {7909}let s_185: bitstring = zero in
                                    {7912}let early_secret_129: bitstring = catch-fail((if v_1758 then hmac(@8_tls_h,s_185,k_186) else fail-any)) in
                                    {7913}let v_1759: bool = not-caught-fail(early_secret_129) in
                                    {7915}let m_170: bitstring = (if v_1759 then zero else caught-fail) in
                                    {7916}let h_454: bitstring = (if v_1759 then catch-fail(hash(@8_tls_h,m_170)) else caught-fail) in
                                    {7917}let v_1760: bool = not-caught-fail(h_454) in
                                    {7914}let l_480: label = (if v_1759 then tls13_ext_res_binder else caught-fail) in
                                    {7918}let x_546: bitstring = (if v_1760 then (l_480,h_454) else caught-fail) in
                                    {7919}let binder_key_86: bitstring = (if v_1759 then catch-fail((if v_1760 then hmac(@8_tls_h,early_secret_129,x_546) else fail-any)) else caught-fail) in
                                    {7920}let v_1761: bool = not-caught-fail(binder_key_86) in
                                    {7921}let v_1762: bitstring = catch-fail((if v_1759 then (if v_1761 then (early_secret_129,binder_key_86) else fail-any) else fail-any)) in
                                    {7922}let v_1763: bool = (not-caught-fail(v_1762) && success?(1-proj-2-tuple(v_1762))) in
                                    {7923}let kb_86: mac_key = (if v_1763 then 2-proj-2-tuple(v_1762) else caught-fail) in
                                    {7924}let es_127: bitstring = (if v_1763 then 1-proj-2-tuple(v_1762) else caught-fail) in
                                    {7925}let v_1764: bitstring = catch-fail((if v_1763 then (empty_psk_ext,(NoPsk,zero,es_127,false)) else fail-any)) in
                                    {7926}let v_1765: bool = (not-caught-fail(v_1764) && success?(1-proj-2-tuple(v_1764))) in
                                    {7927}let psk_data_43: bitstring = (if v_1765 then 2-proj-2-tuple(v_1764) else caught-fail) in
                                    {7928}let psk_ext_88: preSharedKeyExt = (if v_1765 then 1-proj-2-tuple(v_1764) else caught-fail) in
                                    {7929}let o_offer_43: params = (if v_1765 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_11,SNI(o_dom_13),o_ech_ext_21,empty_extra_ext,psk_ext_88) else caught-fail) in
                                    {7930}let (client_hello'_21: msg,cr'_23: bytes32,kex_data'_18: bitstring,psk_data'_37: bitstring) = (if v_1765 then (CH(o_cr_16,o_offer_43),o_cr_16,kex_data_4,psk_data_43) else fail-any) in
                                    {7931}out(io, client_hello'_21);
                                    {7933}in(io, server_hello'_33: msg);
                                    {7934}let SH(sr'_18: bytes32,mode'_18: params) = server_hello'_33 in
                                    (
                                        {7935}if (sr'_18 = B32(HRR24,HRR8)) then
                                            {7936}out(io, unexpected_message)
                                        else
                                            {7937}let (x_547: bitstring,g_49: group) = kex_data'_18 in
                                            {7938}let (psk_offer_41: preSharedKey,id_offer_41: identityPsk,es_offer_41: bitstring,is_safe_offer_41: bool) = psk_data'_37 in
                                            {7939}event Client_PSKOffer(id_client_5,psk_offer_41,id_offer_41,is_safe_offer_41);
                                            {7940}event Client_Rand_client(id_client_5,cr'_23);
                                            {7941}event Client_DH_client(id_client_5,dh_pub(g_49,x_547));
                                            {7942}event Client_server_domain(id_client_5,o_dom_8);
                                            {7943}let SH(sr_49: bytes32,mode_46: params) = server_hello'_33 in
                                            {7944}event Client_Rand_server(id_client_5,sr_49);
                                            {7945}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_49,gy_42: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_89: preSharedKeyExt) = mode_46 in
                                            (
                                                {7947}event Client_DH_server(id_client_5,gy_42);
                                                {7948}let v_1766: bool = (psk_ext_89 = empty_psk_ext) in
                                                {7949}let psk_193: preSharedKey = (if v_1766 then NoPsk else caught-fail) in
                                                {7951}let k_187: bitstring = (if v_1766 then catch-fail(psk2b(psk_193)) else caught-fail) in
                                                {7952}let v_1767: bool = not-caught-fail(k_187) in
                                                {7950}let s_186: bitstring = (if v_1766 then zero else caught-fail) in
                                                {7953}let early_secret_130: bitstring = (if v_1766 then catch-fail((if v_1767 then hmac(@8_tls_h,s_186,k_187) else fail-any)) else caught-fail) in
                                                {7954}let v_1768: bool = not-caught-fail(early_secret_130) in
                                                {7956}let m_171: bitstring = (if v_1768 then zero else caught-fail) in
                                                {7957}let h_455: bitstring = (if v_1768 then catch-fail(hash(@8_tls_h,m_171)) else caught-fail) in
                                                {7958}let v_1769: bool = not-caught-fail(h_455) in
                                                {7955}let l_481: label = (if v_1768 then tls13_ext_res_binder else caught-fail) in
                                                {7959}let x_548: bitstring = (if v_1769 then (l_481,h_455) else caught-fail) in
                                                {7960}let binder_key_87: bitstring = (if v_1768 then catch-fail((if v_1769 then hmac(@8_tls_h,early_secret_130,x_548) else fail-any)) else caught-fail) in
                                                {7961}let v_1770: bool = not-caught-fail(binder_key_87) in
                                                {7962}let v_1771: bitstring = (if v_1766 then catch-fail((if v_1768 then (if v_1770 then (early_secret_130,binder_key_87) else fail-any) else fail-any)) else caught-fail) in
                                                {7963}let v_1772: bool = (not-caught-fail(v_1771) && success?(1-proj-2-tuple(v_1771))) in
                                                {7964}let kb_87: mac_key = (if v_1772 then 2-proj-2-tuple(v_1771) else caught-fail) in
                                                {7965}let es_128: bitstring = (if v_1772 then 1-proj-2-tuple(v_1771) else caught-fail) in
                                                {7966}let v_1773: bitstring = (if not(v_1766) then catch-fail(psk_data'_37) else caught-fail) in
                                                {7967}let v_1774: bool = (not-caught-fail(v_1773) && success?(1-proj-4-tuple(v_1773))) in
                                                {7968}let is_safe_77: bool = (if v_1774 then 4-proj-4-tuple(v_1773) else caught-fail) in
                                                {7969}let es_129: bitstring = (if v_1774 then 3-proj-4-tuple(v_1773) else caught-fail) in
                                                {7970}let id_88: identityPsk = (if v_1774 then 2-proj-4-tuple(v_1773) else caught-fail) in
                                                {7971}let psk_194: preSharedKey = (if v_1774 then 1-proj-4-tuple(v_1773) else caught-fail) in
                                                {7972}let (psk_195: preSharedKey,early_secret_131: bitstring,valid_41: bool,safe_psk_44: bool) = (if v_1766 then (if v_1772 then (NoPsk,es_128,true,false) else fail-any) else (if v_1774 then (psk_194,es_129,((psk_194 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_89)),is_safe_77) else fail-any)) in
                                                {7973}event Client_PSKChoosen(id_client_5,psk_195,safe_psk_44);
                                                {7974}if valid_41 then
                                                (
                                                    {7977}new s_187[]: seed;
                                                    {7975}let gxy_84: element = catch-fail(dh_decap_fun(g_49,gy_42,x_547)) in
                                                    {7976}let v_1775: bool = not-caught-fail(gxy_84) in
                                                    {7978}let gxy_85: element = (if v_1775 then gxy_84 else dh_f(s_187)) in
                                                    {7979}event Client_DH_gxy(id_client_5,gxy_85);
                                                    {7981}let m_172: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {7982}let v_1776: bool = not-caught-fail(m_172) in
                                                    {7983}let h_456: bitstring = (if v_1776 then catch-fail(hash(@8_tls_h,m_172)) else caught-fail) in
                                                    {7984}let v_1777: bool = not-caught-fail(h_456) in
                                                    {7980}let l_482: label = tls13_derived in
                                                    {7985}let x_549: bitstring = (if v_1777 then (l_482,h_456) else caught-fail) in
                                                    {7986}let extra_89: bitstring = catch-fail((if v_1776 then (if v_1777 then hmac(@8_tls_h,early_secret_131,x_549) else fail-any) else fail-any)) in
                                                    {7987}let v_1778: bool = not-caught-fail(extra_89) in
                                                    {7988}let handshake_secret_42: bitstring = (if v_1778 then hmac(@8_tls_h,extra_89,gxy_85) else fail-any) in
                                                    {7990}let m_173: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {7991}let v_1779: bool = not-caught-fail(m_173) in
                                                    {7992}let h_457: bitstring = (if v_1779 then catch-fail(hash(@8_tls_h,m_173)) else caught-fail) in
                                                    {7993}let v_1780: bool = not-caught-fail(h_457) in
                                                    {7989}let l_483: label = tls13_derived in
                                                    {7994}let x_550: bitstring = (if v_1780 then (l_483,h_457) else caught-fail) in
                                                    {7995}let extra_90: bitstring = catch-fail((if v_1779 then (if v_1780 then hmac(@8_tls_h,handshake_secret_42,x_550) else fail-any) else fail-any)) in
                                                    {7996}let v_1781: bool = not-caught-fail(extra_90) in
                                                    {7997}let k_188: bitstring = (if v_1781 then zero else caught-fail) in
                                                    {7998}let master_secret_91: bitstring = (if v_1781 then catch-fail(hmac(@8_tls_h,handshake_secret_42,k_188)) else caught-fail) in
                                                    {7999}let v_1782: bool = not-caught-fail(master_secret_91) in
                                                    {7932}let cur_log_OU1_HRR_OU2_18: bitstring = (cur_log_OU1_HRR_4,client_hello'_21) in
                                                    {7946}let cur_log2_86: bitstring = (cur_log_OU1_HRR_OU2_18,server_hello'_33) in
                                                    {8001}let h_458: bitstring = (if v_1782 then catch-fail(hash(@8_tls_h,cur_log2_86)) else caught-fail) in
                                                    {8002}let v_1783: bool = not-caught-fail(h_458) in
                                                    {8000}let l_484: label = (if v_1782 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {8003}let x_551: bitstring = (if v_1783 then (l_484,h_458) else caught-fail) in
                                                    {8004}let client_hts_42: bitstring = (if v_1782 then catch-fail((if v_1783 then hmac(@8_tls_h,handshake_secret_42,x_551) else fail-any)) else caught-fail) in
                                                    {8005}let v_1784: bool = not-caught-fail(client_hts_42) in
                                                    {8007}let h_459: bitstring = (if v_1784 then catch-fail(hash(@8_tls_h,cur_log2_86)) else caught-fail) in
                                                    {8008}let v_1785: bool = not-caught-fail(h_459) in
                                                    {8006}let l_485: label = (if v_1784 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {8009}let x_552: bitstring = (if v_1785 then (l_485,h_459) else caught-fail) in
                                                    {8010}let server_hts_42: bitstring = (if v_1784 then catch-fail((if v_1785 then hmac(@8_tls_h,handshake_secret_42,x_552) else fail-any)) else caught-fail) in
                                                    {8011}let v_1786: bool = not-caught-fail(server_hts_42) in
                                                    {8013}let h_460: bitstring = (if v_1786 then zero else caught-fail) in
                                                    {8012}let l_486: label = (if v_1786 then tls13_key else caught-fail) in
                                                    {8014}let x_553: bitstring = (if v_1786 then (l_486,h_460) else caught-fail) in
                                                    {8015}let client_wkh_42: bitstring = (if v_1786 then catch-fail(hmac(@8_tls_h,client_hts_42,x_553)) else caught-fail) in
                                                    {8016}let v_1787: bool = not-caught-fail(client_wkh_42) in
                                                    {8018}let h_461: bitstring = (if v_1787 then zero else caught-fail) in
                                                    {8017}let l_487: label = (if v_1787 then tls13_key else caught-fail) in
                                                    {8019}let x_554: bitstring = (if v_1787 then (l_487,h_461) else caught-fail) in
                                                    {8020}let server_wkh_42: bitstring = (if v_1787 then catch-fail(hmac(@8_tls_h,server_hts_42,x_554)) else caught-fail) in
                                                    {8021}let v_1788: bool = not-caught-fail(server_wkh_42) in
                                                    {8023}let h_462: bitstring = (if v_1788 then zero else caught-fail) in
                                                    {8022}let l_488: label = (if v_1788 then tls13_finished else caught-fail) in
                                                    {8024}let x_555: bitstring = (if v_1788 then (l_488,h_462) else caught-fail) in
                                                    {8025}let client_fk_42: bitstring = (if v_1788 then catch-fail(hmac(@8_tls_h,client_hts_42,x_555)) else caught-fail) in
                                                    {8026}let v_1789: bool = not-caught-fail(client_fk_42) in
                                                    {8028}let h_463: bitstring = (if v_1789 then zero else caught-fail) in
                                                    {8027}let l_489: label = (if v_1789 then tls13_finished else caught-fail) in
                                                    {8029}let x_556: bitstring = (if v_1789 then (l_489,h_463) else caught-fail) in
                                                    {8030}let server_fk_42: bitstring = (if v_1789 then catch-fail(hmac(@8_tls_h,server_hts_42,x_556)) else caught-fail) in
                                                    {8031}let v_1790: bool = not-caught-fail(server_fk_42) in
                                                    {8032}let (master_secret_92: bitstring,chk_49: aead_key,shk_48: aead_key,cfin_49: mac_key,sfin_48: mac_key) = (if v_1781 then (if v_1782 then (if v_1784 then (if v_1786 then (if v_1787 then (if v_1788 then (if v_1789 then (if v_1790 then (master_secret_91,client_wkh_42,server_wkh_42,client_fk_42,server_fk_42) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {8033}event Client_chk(id_client_5,chk_49);
                                                    {8034}event Client_shk(id_client_5,shk_48);
                                                    {8035}event Client_cfin(id_client_5,cfin_49);
                                                    {8036}event Client_sfin(id_client_5,sfin_48);
                                                    {8037}in(io, enc_ee_msg_41: bitstring);
                                                    {8038}let ee_msg_46: msg = aead_dec(@8_tls_a,shk_48,0,zero,enc_ee_msg_41) in
                                                    {8039}let EE(ech_ee_41: echExt,extra_ee_41: extraExt) = ee_msg_46 in
                                                    {8040}let cur_log2_87: bitstring = (cur_log2_86,ee_msg_46) in
                                                    {8041}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_23,sr_49,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_195,safe_psk_44,@8_comp_psk,master_secret_92,chk_49,0,shk_48,1,cfin_49,sfin_48,cur_log2_87)))
                                                )
                                                else
                                                    {8042}out(io, illegal_parameter)
                                            )
                                            else
                                                {8043}out(io, illegal_parameter)
                                    )
                                    else
                                        {8044}out(io, unexpected_message)
                            )
                            else
                                {8045}let psk_196: preSharedKey = NoPsk in
                                {8047}let k_189: bitstring = catch-fail(psk2b(psk_196)) in
                                {8048}let v_1791: bool = not-caught-fail(k_189) in
                                {8046}let s_188: bitstring = zero in
                                {8049}let early_secret_132: bitstring = catch-fail((if v_1791 then hmac(@8_tls_h,s_188,k_189) else fail-any)) in
                                {8050}let v_1792: bool = not-caught-fail(early_secret_132) in
                                {8052}let m_174: bitstring = (if v_1792 then zero else caught-fail) in
                                {8053}let h_464: bitstring = (if v_1792 then catch-fail(hash(@8_tls_h,m_174)) else caught-fail) in
                                {8054}let v_1793: bool = not-caught-fail(h_464) in
                                {8051}let l_490: label = (if v_1792 then tls13_ext_res_binder else caught-fail) in
                                {8055}let x_557: bitstring = (if v_1793 then (l_490,h_464) else caught-fail) in
                                {8056}let binder_key_88: bitstring = (if v_1792 then catch-fail((if v_1793 then hmac(@8_tls_h,early_secret_132,x_557) else fail-any)) else caught-fail) in
                                {8057}let v_1794: bool = not-caught-fail(binder_key_88) in
                                {8058}let v_1795: bitstring = catch-fail((if v_1792 then (if v_1794 then (early_secret_132,binder_key_88) else fail-any) else fail-any)) in
                                {8059}let v_1796: bool = (not-caught-fail(v_1795) && success?(1-proj-2-tuple(v_1795))) in
                                {8060}let kb_88: mac_key = (if v_1796 then 2-proj-2-tuple(v_1795) else caught-fail) in
                                {8061}let es_130: bitstring = (if v_1796 then 1-proj-2-tuple(v_1795) else caught-fail) in
                                {8062}let v_1797: preSharedKeyExt = (if v_1796 then catch-fail(o_psk_ext_21) else caught-fail) in
                                {8063}let v_1798: bool = (not-caught-fail(v_1797) && success?(1-proj-client_psk_ext(v_1797))) in
                                {8064}let fake_binder_24: bitstring = (if v_1798 then 2-proj-client_psk_ext(v_1797) else caught-fail) in
                                {8065}let fake_id_24: identityPsk = (if v_1798 then 1-proj-client_psk_ext(v_1797) else caught-fail) in
                                {8066}new fake_binder'_4[]: bitstring;
                                {8067}let v_1799: bitstring = catch-fail((if v_1796 then (if v_1798 then (client_psk_ext(fake_id_24,fake_binder'_4),(NoPsk,zero,es_130,false)) else (empty_psk_ext,(NoPsk,zero,es_130,false))) else fail-any)) in
                                {8068}let v_1800: bool = (not-caught-fail(v_1799) && success?(1-proj-2-tuple(v_1799))) in
                                {8069}let psk_data_44: bitstring = (if v_1800 then 2-proj-2-tuple(v_1799) else caught-fail) in
                                {8070}let psk_ext_90: preSharedKeyExt = (if v_1800 then 1-proj-2-tuple(v_1799) else caught-fail) in
                                {8071}let o_offer_44: params = (if v_1800 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_11,SNI(o_dom_13),o_ech_ext_21,empty_extra_ext,psk_ext_90) else caught-fail) in
                                {8072}let (client_hello'_22: msg,cr'_24: bytes32,kex_data'_19: bitstring,psk_data'_38: bitstring) = (if v_1800 then (CH(o_cr_16,o_offer_44),o_cr_16,kex_data_4,psk_data_44) else fail-any) in
                                {8073}out(io, client_hello'_22);
                                {8075}in(io, server_hello'_34: msg);
                                {8076}let SH(sr'_19: bytes32,mode'_19: params) = server_hello'_34 in
                                (
                                    {8077}if (sr'_19 = B32(HRR24,HRR8)) then
                                        {8078}out(io, unexpected_message)
                                    else
                                        {8079}let (x_558: bitstring,g_50: group) = kex_data'_19 in
                                        {8080}let (psk_offer_42: preSharedKey,id_offer_42: identityPsk,es_offer_42: bitstring,is_safe_offer_42: bool) = psk_data'_38 in
                                        {8081}event Client_PSKOffer(id_client_5,psk_offer_42,id_offer_42,is_safe_offer_42);
                                        {8082}event Client_Rand_client(id_client_5,cr'_24);
                                        {8083}event Client_DH_client(id_client_5,dh_pub(g_50,x_558));
                                        {8084}event Client_server_domain(id_client_5,o_dom_8);
                                        {8085}let SH(sr_50: bytes32,mode_47: params) = server_hello'_34 in
                                        {8086}event Client_Rand_server(id_client_5,sr_50);
                                        {8087}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_50,gy_43: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_91: preSharedKeyExt) = mode_47 in
                                        (
                                            {8089}event Client_DH_server(id_client_5,gy_43);
                                            {8090}let v_1801: bool = (psk_ext_91 = empty_psk_ext) in
                                            {8091}let psk_197: preSharedKey = (if v_1801 then NoPsk else caught-fail) in
                                            {8093}let k_190: bitstring = (if v_1801 then catch-fail(psk2b(psk_197)) else caught-fail) in
                                            {8094}let v_1802: bool = not-caught-fail(k_190) in
                                            {8092}let s_189: bitstring = (if v_1801 then zero else caught-fail) in
                                            {8095}let early_secret_133: bitstring = (if v_1801 then catch-fail((if v_1802 then hmac(@8_tls_h,s_189,k_190) else fail-any)) else caught-fail) in
                                            {8096}let v_1803: bool = not-caught-fail(early_secret_133) in
                                            {8098}let m_175: bitstring = (if v_1803 then zero else caught-fail) in
                                            {8099}let h_465: bitstring = (if v_1803 then catch-fail(hash(@8_tls_h,m_175)) else caught-fail) in
                                            {8100}let v_1804: bool = not-caught-fail(h_465) in
                                            {8097}let l_491: label = (if v_1803 then tls13_ext_res_binder else caught-fail) in
                                            {8101}let x_559: bitstring = (if v_1804 then (l_491,h_465) else caught-fail) in
                                            {8102}let binder_key_89: bitstring = (if v_1803 then catch-fail((if v_1804 then hmac(@8_tls_h,early_secret_133,x_559) else fail-any)) else caught-fail) in
                                            {8103}let v_1805: bool = not-caught-fail(binder_key_89) in
                                            {8104}let v_1806: bitstring = (if v_1801 then catch-fail((if v_1803 then (if v_1805 then (early_secret_133,binder_key_89) else fail-any) else fail-any)) else caught-fail) in
                                            {8105}let v_1807: bool = (not-caught-fail(v_1806) && success?(1-proj-2-tuple(v_1806))) in
                                            {8106}let kb_89: mac_key = (if v_1807 then 2-proj-2-tuple(v_1806) else caught-fail) in
                                            {8107}let es_131: bitstring = (if v_1807 then 1-proj-2-tuple(v_1806) else caught-fail) in
                                            {8108}let v_1808: bitstring = (if not(v_1801) then catch-fail(psk_data'_38) else caught-fail) in
                                            {8109}let v_1809: bool = (not-caught-fail(v_1808) && success?(1-proj-4-tuple(v_1808))) in
                                            {8110}let is_safe_78: bool = (if v_1809 then 4-proj-4-tuple(v_1808) else caught-fail) in
                                            {8111}let es_132: bitstring = (if v_1809 then 3-proj-4-tuple(v_1808) else caught-fail) in
                                            {8112}let id_89: identityPsk = (if v_1809 then 2-proj-4-tuple(v_1808) else caught-fail) in
                                            {8113}let psk_198: preSharedKey = (if v_1809 then 1-proj-4-tuple(v_1808) else caught-fail) in
                                            {8114}let (psk_199: preSharedKey,early_secret_134: bitstring,valid_42: bool,safe_psk_45: bool) = (if v_1801 then (if v_1807 then (NoPsk,es_131,true,false) else fail-any) else (if v_1809 then (psk_198,es_132,((psk_198 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_91)),is_safe_78) else fail-any)) in
                                            {8115}event Client_PSKChoosen(id_client_5,psk_199,safe_psk_45);
                                            {8116}if valid_42 then
                                            (
                                                {8119}new s_190[]: seed;
                                                {8117}let gxy_86: element = catch-fail(dh_decap_fun(g_50,gy_43,x_558)) in
                                                {8118}let v_1810: bool = not-caught-fail(gxy_86) in
                                                {8120}let gxy_87: element = (if v_1810 then gxy_86 else dh_f(s_190)) in
                                                {8121}event Client_DH_gxy(id_client_5,gxy_87);
                                                {8123}let m_176: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                {8124}let v_1811: bool = not-caught-fail(m_176) in
                                                {8125}let h_466: bitstring = (if v_1811 then catch-fail(hash(@8_tls_h,m_176)) else caught-fail) in
                                                {8126}let v_1812: bool = not-caught-fail(h_466) in
                                                {8122}let l_492: label = tls13_derived in
                                                {8127}let x_560: bitstring = (if v_1812 then (l_492,h_466) else caught-fail) in
                                                {8128}let extra_91: bitstring = catch-fail((if v_1811 then (if v_1812 then hmac(@8_tls_h,early_secret_134,x_560) else fail-any) else fail-any)) in
                                                {8129}let v_1813: bool = not-caught-fail(extra_91) in
                                                {8130}let handshake_secret_43: bitstring = (if v_1813 then hmac(@8_tls_h,extra_91,gxy_87) else fail-any) in
                                                {8132}let m_177: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                {8133}let v_1814: bool = not-caught-fail(m_177) in
                                                {8134}let h_467: bitstring = (if v_1814 then catch-fail(hash(@8_tls_h,m_177)) else caught-fail) in
                                                {8135}let v_1815: bool = not-caught-fail(h_467) in
                                                {8131}let l_493: label = tls13_derived in
                                                {8136}let x_561: bitstring = (if v_1815 then (l_493,h_467) else caught-fail) in
                                                {8137}let extra_92: bitstring = catch-fail((if v_1814 then (if v_1815 then hmac(@8_tls_h,handshake_secret_43,x_561) else fail-any) else fail-any)) in
                                                {8138}let v_1816: bool = not-caught-fail(extra_92) in
                                                {8139}let k_191: bitstring = (if v_1816 then zero else caught-fail) in
                                                {8140}let master_secret_93: bitstring = (if v_1816 then catch-fail(hmac(@8_tls_h,handshake_secret_43,k_191)) else caught-fail) in
                                                {8141}let v_1817: bool = not-caught-fail(master_secret_93) in
                                                {8074}let cur_log_OU1_HRR_OU2_19: bitstring = (cur_log_OU1_HRR_4,client_hello'_22) in
                                                {8088}let cur_log2_88: bitstring = (cur_log_OU1_HRR_OU2_19,server_hello'_34) in
                                                {8143}let h_468: bitstring = (if v_1817 then catch-fail(hash(@8_tls_h,cur_log2_88)) else caught-fail) in
                                                {8144}let v_1818: bool = not-caught-fail(h_468) in
                                                {8142}let l_494: label = (if v_1817 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {8145}let x_562: bitstring = (if v_1818 then (l_494,h_468) else caught-fail) in
                                                {8146}let client_hts_43: bitstring = (if v_1817 then catch-fail((if v_1818 then hmac(@8_tls_h,handshake_secret_43,x_562) else fail-any)) else caught-fail) in
                                                {8147}let v_1819: bool = not-caught-fail(client_hts_43) in
                                                {8149}let h_469: bitstring = (if v_1819 then catch-fail(hash(@8_tls_h,cur_log2_88)) else caught-fail) in
                                                {8150}let v_1820: bool = not-caught-fail(h_469) in
                                                {8148}let l_495: label = (if v_1819 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {8151}let x_563: bitstring = (if v_1820 then (l_495,h_469) else caught-fail) in
                                                {8152}let server_hts_43: bitstring = (if v_1819 then catch-fail((if v_1820 then hmac(@8_tls_h,handshake_secret_43,x_563) else fail-any)) else caught-fail) in
                                                {8153}let v_1821: bool = not-caught-fail(server_hts_43) in
                                                {8155}let h_470: bitstring = (if v_1821 then zero else caught-fail) in
                                                {8154}let l_496: label = (if v_1821 then tls13_key else caught-fail) in
                                                {8156}let x_564: bitstring = (if v_1821 then (l_496,h_470) else caught-fail) in
                                                {8157}let client_wkh_43: bitstring = (if v_1821 then catch-fail(hmac(@8_tls_h,client_hts_43,x_564)) else caught-fail) in
                                                {8158}let v_1822: bool = not-caught-fail(client_wkh_43) in
                                                {8160}let h_471: bitstring = (if v_1822 then zero else caught-fail) in
                                                {8159}let l_497: label = (if v_1822 then tls13_key else caught-fail) in
                                                {8161}let x_565: bitstring = (if v_1822 then (l_497,h_471) else caught-fail) in
                                                {8162}let server_wkh_43: bitstring = (if v_1822 then catch-fail(hmac(@8_tls_h,server_hts_43,x_565)) else caught-fail) in
                                                {8163}let v_1823: bool = not-caught-fail(server_wkh_43) in
                                                {8165}let h_472: bitstring = (if v_1823 then zero else caught-fail) in
                                                {8164}let l_498: label = (if v_1823 then tls13_finished else caught-fail) in
                                                {8166}let x_566: bitstring = (if v_1823 then (l_498,h_472) else caught-fail) in
                                                {8167}let client_fk_43: bitstring = (if v_1823 then catch-fail(hmac(@8_tls_h,client_hts_43,x_566)) else caught-fail) in
                                                {8168}let v_1824: bool = not-caught-fail(client_fk_43) in
                                                {8170}let h_473: bitstring = (if v_1824 then zero else caught-fail) in
                                                {8169}let l_499: label = (if v_1824 then tls13_finished else caught-fail) in
                                                {8171}let x_567: bitstring = (if v_1824 then (l_499,h_473) else caught-fail) in
                                                {8172}let server_fk_43: bitstring = (if v_1824 then catch-fail(hmac(@8_tls_h,server_hts_43,x_567)) else caught-fail) in
                                                {8173}let v_1825: bool = not-caught-fail(server_fk_43) in
                                                {8174}let (master_secret_94: bitstring,chk_50: aead_key,shk_49: aead_key,cfin_50: mac_key,sfin_49: mac_key) = (if v_1816 then (if v_1817 then (if v_1819 then (if v_1821 then (if v_1822 then (if v_1823 then (if v_1824 then (if v_1825 then (master_secret_93,client_wkh_43,server_wkh_43,client_fk_43,server_fk_43) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {8175}event Client_chk(id_client_5,chk_50);
                                                {8176}event Client_shk(id_client_5,shk_49);
                                                {8177}event Client_cfin(id_client_5,cfin_50);
                                                {8178}event Client_sfin(id_client_5,sfin_49);
                                                {8179}in(io, enc_ee_msg_42: bitstring);
                                                {8180}let ee_msg_47: msg = aead_dec(@8_tls_a,shk_49,0,zero,enc_ee_msg_42) in
                                                {8181}let EE(ech_ee_42: echExt,extra_ee_42: extraExt) = ee_msg_47 in
                                                {8182}let cur_log2_89: bitstring = (cur_log2_88,ee_msg_47) in
                                                {8183}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_24,sr_50,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_199,safe_psk_45,@8_comp_psk,master_secret_94,chk_50,0,shk_49,1,cfin_50,sfin_49,cur_log2_89)))
                                            )
                                            else
                                                {8184}out(io, illegal_parameter)
                                        )
                                        else
                                            {8185}out(io, illegal_parameter)
                                )
                                else
                                    {8186}out(io, unexpected_message)
                    )
                    else
                        {8188}let sh_modified_20: msg = SH(B32(sr24_6,zero8),mode_40) in
                        {8187}let cur_log_28: bitstring = (zero,i_client_hello_22) in
                        {8189}let cur_log_sh_20: bitstring = (cur_log_28,sh_modified_20) in
                        {8190}let transcript_ech_conf_20: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_20)) in
                        {8191}let v_1826: bool = not-caught-fail(transcript_ech_conf_20) in
                        {8193}let k_192: bitstring = (if v_1826 then catch-fail(b32_2_b(get_random(i_client_hello_22))) else caught-fail) in
                        {8194}let v_1827: bool = not-caught-fail(k_192) in
                        {8192}let s_191: bitstring = (if v_1826 then zero else caught-fail) in
                        {8195}let k_193: bitstring = (if v_1826 then catch-fail((if v_1827 then hmac(@8_backend_h,s_191,k_192) else fail-any)) else caught-fail) in
                        {8196}let v_1828: bool = not-caught-fail(k_193) in
                        {8197}let l_500: label = (if v_1828 then ech_accept_confirmation else caught-fail) in
                        {8198}let x_568: bitstring = (if v_1828 then (l_500,cur_log_sh_20) else caught-fail) in
                        {8199}let sr8_25: bytes8 = (if v_1826 then catch-fail(crop_into_bytes8((if v_1828 then hmac(@8_backend_h,k_193,x_568) else fail-any))) else caught-fail) in
                        {8200}let v_1829: bool = not-caught-fail(sr8_25) in
                        {8201}if (B32(sr24_6,sr8_21) = (if v_1826 then (if v_1829 then B32(sr24_6,sr8_25) else fail-any) else fail-any)) then
                        (
                            {8202}event ClientEchAcceptance(id_client_5,true);
                            {8204}let (x_569: bitstring,g_51: group) = i_kex_data_10 in
                            {8205}let (psk_offer_43: preSharedKey,id_offer_43: identityPsk,es_offer_43: bitstring,is_safe_offer_43: bool) = psk_data_37 in
                            {8206}event Client_PSKOffer(id_client_5,psk_offer_43,id_offer_43,is_safe_offer_43);
                            {8207}event Client_Rand_client(id_client_5,i_cr_11);
                            {8208}event Client_DH_client(id_client_5,dh_pub(g_51,x_569));
                            {8209}event Client_server_domain(id_client_5,backend_dom_1);
                            {8210}let SH(sr_51: bytes32,mode_48: params) = server_hello_5 in
                            {8211}event Client_Rand_server(id_client_5,sr_51);
                            {8212}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_51,gy_44: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_92: preSharedKeyExt) = mode_48 in
                            (
                                {8214}event Client_DH_server(id_client_5,gy_44);
                                {8215}let v_1830: bool = (psk_ext_92 = empty_psk_ext) in
                                {8216}let psk_200: preSharedKey = (if v_1830 then NoPsk else caught-fail) in
                                {8218}let k_194: bitstring = (if v_1830 then catch-fail(psk2b(psk_200)) else caught-fail) in
                                {8219}let v_1831: bool = not-caught-fail(k_194) in
                                {8217}let s_192: bitstring = (if v_1830 then zero else caught-fail) in
                                {8220}let early_secret_135: bitstring = (if v_1830 then catch-fail((if v_1831 then hmac(@8_backend_h,s_192,k_194) else fail-any)) else caught-fail) in
                                {8221}let v_1832: bool = not-caught-fail(early_secret_135) in
                                {8223}let m_178: bitstring = (if v_1832 then zero else caught-fail) in
                                {8224}let h_474: bitstring = (if v_1832 then catch-fail(hash(@8_backend_h,m_178)) else caught-fail) in
                                {8225}let v_1833: bool = not-caught-fail(h_474) in
                                {8222}let l_501: label = (if v_1832 then tls13_ext_res_binder else caught-fail) in
                                {8226}let x_570: bitstring = (if v_1833 then (l_501,h_474) else caught-fail) in
                                {8227}let binder_key_90: bitstring = (if v_1832 then catch-fail((if v_1833 then hmac(@8_backend_h,early_secret_135,x_570) else fail-any)) else caught-fail) in
                                {8228}let v_1834: bool = not-caught-fail(binder_key_90) in
                                {8229}let v_1835: bitstring = (if v_1830 then catch-fail((if v_1832 then (if v_1834 then (early_secret_135,binder_key_90) else fail-any) else fail-any)) else caught-fail) in
                                {8230}let v_1836: bool = (not-caught-fail(v_1835) && success?(1-proj-2-tuple(v_1835))) in
                                {8231}let kb_90: mac_key = (if v_1836 then 2-proj-2-tuple(v_1835) else caught-fail) in
                                {8232}let es_133: bitstring = (if v_1836 then 1-proj-2-tuple(v_1835) else caught-fail) in
                                {8233}let v_1837: bitstring = (if not(v_1830) then catch-fail(psk_data_37) else caught-fail) in
                                {8234}let v_1838: bool = (not-caught-fail(v_1837) && success?(1-proj-4-tuple(v_1837))) in
                                {8235}let is_safe_79: bool = (if v_1838 then 4-proj-4-tuple(v_1837) else caught-fail) in
                                {8236}let es_134: bitstring = (if v_1838 then 3-proj-4-tuple(v_1837) else caught-fail) in
                                {8237}let id_90: identityPsk = (if v_1838 then 2-proj-4-tuple(v_1837) else caught-fail) in
                                {8238}let psk_201: preSharedKey = (if v_1838 then 1-proj-4-tuple(v_1837) else caught-fail) in
                                {8239}let (psk_202: preSharedKey,early_secret_136: bitstring,valid_43: bool,safe_psk_46: bool) = (if v_1830 then (if v_1836 then (NoPsk,es_133,true,false) else fail-any) else (if v_1838 then (psk_201,es_134,((psk_201 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_92)),is_safe_79) else fail-any)) in
                                {8240}event Client_PSKChoosen(id_client_5,psk_202,safe_psk_46);
                                {8241}if valid_43 then
                                (
                                    {8244}new s_193[]: seed;
                                    {8242}let gxy_88: element = catch-fail(dh_decap_fun(g_51,gy_44,x_569)) in
                                    {8243}let v_1839: bool = not-caught-fail(gxy_88) in
                                    {8245}let gxy_89: element = (if v_1839 then gxy_88 else dh_f(s_193)) in
                                    {8246}event Client_DH_gxy(id_client_5,gxy_89);
                                    {8248}let m_179: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                    {8249}let v_1840: bool = not-caught-fail(m_179) in
                                    {8250}let h_475: bitstring = (if v_1840 then catch-fail(hash(@8_backend_h,m_179)) else caught-fail) in
                                    {8251}let v_1841: bool = not-caught-fail(h_475) in
                                    {8247}let l_502: label = tls13_derived in
                                    {8252}let x_571: bitstring = (if v_1841 then (l_502,h_475) else caught-fail) in
                                    {8253}let extra_93: bitstring = catch-fail((if v_1840 then (if v_1841 then hmac(@8_backend_h,early_secret_136,x_571) else fail-any) else fail-any)) in
                                    {8254}let v_1842: bool = not-caught-fail(extra_93) in
                                    {8255}let handshake_secret_44: bitstring = (if v_1842 then hmac(@8_backend_h,extra_93,gxy_89) else fail-any) in
                                    {8257}let m_180: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                    {8258}let v_1843: bool = not-caught-fail(m_180) in
                                    {8259}let h_476: bitstring = (if v_1843 then catch-fail(hash(@8_backend_h,m_180)) else caught-fail) in
                                    {8260}let v_1844: bool = not-caught-fail(h_476) in
                                    {8256}let l_503: label = tls13_derived in
                                    {8261}let x_572: bitstring = (if v_1844 then (l_503,h_476) else caught-fail) in
                                    {8262}let extra_94: bitstring = catch-fail((if v_1843 then (if v_1844 then hmac(@8_backend_h,handshake_secret_44,x_572) else fail-any) else fail-any)) in
                                    {8263}let v_1845: bool = not-caught-fail(extra_94) in
                                    {8264}let k_195: bitstring = (if v_1845 then zero else caught-fail) in
                                    {8265}let master_secret_95: bitstring = (if v_1845 then catch-fail(hmac(@8_backend_h,handshake_secret_44,k_195)) else caught-fail) in
                                    {8266}let v_1846: bool = not-caught-fail(master_secret_95) in
                                    {8203}let cur_log_29: bitstring = (zero,i_client_hello_22) in
                                    {8213}let cur_log2_90: bitstring = (cur_log_29,server_hello_5) in
                                    {8268}let h_477: bitstring = (if v_1846 then catch-fail(hash(@8_backend_h,cur_log2_90)) else caught-fail) in
                                    {8269}let v_1847: bool = not-caught-fail(h_477) in
                                    {8267}let l_504: label = (if v_1846 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {8270}let x_573: bitstring = (if v_1847 then (l_504,h_477) else caught-fail) in
                                    {8271}let client_hts_44: bitstring = (if v_1846 then catch-fail((if v_1847 then hmac(@8_backend_h,handshake_secret_44,x_573) else fail-any)) else caught-fail) in
                                    {8272}let v_1848: bool = not-caught-fail(client_hts_44) in
                                    {8274}let h_478: bitstring = (if v_1848 then catch-fail(hash(@8_backend_h,cur_log2_90)) else caught-fail) in
                                    {8275}let v_1849: bool = not-caught-fail(h_478) in
                                    {8273}let l_505: label = (if v_1848 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {8276}let x_574: bitstring = (if v_1849 then (l_505,h_478) else caught-fail) in
                                    {8277}let server_hts_44: bitstring = (if v_1848 then catch-fail((if v_1849 then hmac(@8_backend_h,handshake_secret_44,x_574) else fail-any)) else caught-fail) in
                                    {8278}let v_1850: bool = not-caught-fail(server_hts_44) in
                                    {8280}let h_479: bitstring = (if v_1850 then zero else caught-fail) in
                                    {8279}let l_506: label = (if v_1850 then tls13_key else caught-fail) in
                                    {8281}let x_575: bitstring = (if v_1850 then (l_506,h_479) else caught-fail) in
                                    {8282}let client_wkh_44: bitstring = (if v_1850 then catch-fail(hmac(@8_backend_h,client_hts_44,x_575)) else caught-fail) in
                                    {8283}let v_1851: bool = not-caught-fail(client_wkh_44) in
                                    {8285}let h_480: bitstring = (if v_1851 then zero else caught-fail) in
                                    {8284}let l_507: label = (if v_1851 then tls13_key else caught-fail) in
                                    {8286}let x_576: bitstring = (if v_1851 then (l_507,h_480) else caught-fail) in
                                    {8287}let server_wkh_44: bitstring = (if v_1851 then catch-fail(hmac(@8_backend_h,server_hts_44,x_576)) else caught-fail) in
                                    {8288}let v_1852: bool = not-caught-fail(server_wkh_44) in
                                    {8290}let h_481: bitstring = (if v_1852 then zero else caught-fail) in
                                    {8289}let l_508: label = (if v_1852 then tls13_finished else caught-fail) in
                                    {8291}let x_577: bitstring = (if v_1852 then (l_508,h_481) else caught-fail) in
                                    {8292}let client_fk_44: bitstring = (if v_1852 then catch-fail(hmac(@8_backend_h,client_hts_44,x_577)) else caught-fail) in
                                    {8293}let v_1853: bool = not-caught-fail(client_fk_44) in
                                    {8295}let h_482: bitstring = (if v_1853 then zero else caught-fail) in
                                    {8294}let l_509: label = (if v_1853 then tls13_finished else caught-fail) in
                                    {8296}let x_578: bitstring = (if v_1853 then (l_509,h_482) else caught-fail) in
                                    {8297}let server_fk_44: bitstring = (if v_1853 then catch-fail(hmac(@8_backend_h,server_hts_44,x_578)) else caught-fail) in
                                    {8298}let v_1854: bool = not-caught-fail(server_fk_44) in
                                    {8299}let (master_secret_96: bitstring,chk_51: aead_key,shk_50: aead_key,cfin_51: mac_key,sfin_50: mac_key) = (if v_1845 then (if v_1846 then (if v_1848 then (if v_1850 then (if v_1851 then (if v_1852 then (if v_1853 then (if v_1854 then (master_secret_95,client_wkh_44,server_wkh_44,client_fk_44,server_fk_44) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {8300}event Client_chk(id_client_5,chk_51);
                                    {8301}event Client_shk(id_client_5,shk_50);
                                    {8302}event Client_cfin(id_client_5,cfin_51);
                                    {8303}event Client_sfin(id_client_5,sfin_50);
                                    {8304}in(io, enc_ee_msg_43: bitstring);
                                    {8305}let ee_msg_48: msg = aead_dec(@8_backend_a,shk_50,0,zero,enc_ee_msg_43) in
                                    {8306}let EE(ech_ee_43: echExt,extra_ee_43: extraExt) = ee_msg_48 in
                                    {8307}let cur_log2_91: bitstring = (cur_log2_90,ee_msg_48) in
                                    {8308}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr_11,sr_51,@8_backend_h,@8_backend_a,c_dom_6,backend_dom_1,psk_202,safe_psk_46,@8_comp_psk,master_secret_96,chk_51,0,shk_50,1,cfin_51,sfin_50,cur_log2_91)))
                                )
                                else
                                    {8309}out(io, illegal_parameter)
                            )
                            else
                                {8310}out(io, illegal_parameter)
                        )
                        else
                            {8311}event ClientEchAcceptance(id_client_5,false);
                            {8312}let v_1855: bool = @8_use_grease in
                            {8313}let psk_203: preSharedKey = (if not(v_1855) then NoPsk else caught-fail) in
                            {8315}let k_196: bitstring = (if not(v_1855) then catch-fail(psk2b(psk_203)) else caught-fail) in
                            {8316}let v_1856: bool = not-caught-fail(k_196) in
                            {8314}let s_194: bitstring = (if not(v_1855) then zero else caught-fail) in
                            {8317}let early_secret_137: bitstring = (if not(v_1855) then catch-fail((if v_1856 then hmac(@8_tls_h,s_194,k_196) else fail-any)) else caught-fail) in
                            {8318}let v_1857: bool = not-caught-fail(early_secret_137) in
                            {8320}let m_181: bitstring = (if v_1857 then zero else caught-fail) in
                            {8321}let h_483: bitstring = (if v_1857 then catch-fail(hash(@8_tls_h,m_181)) else caught-fail) in
                            {8322}let v_1858: bool = not-caught-fail(h_483) in
                            {8319}let l_510: label = (if v_1857 then tls13_ext_res_binder else caught-fail) in
                            {8323}let x_579: bitstring = (if v_1858 then (l_510,h_483) else caught-fail) in
                            {8324}let binder_key_91: bitstring = (if v_1857 then catch-fail((if v_1858 then hmac(@8_tls_h,early_secret_137,x_579) else fail-any)) else caught-fail) in
                            {8325}let v_1859: bool = not-caught-fail(binder_key_91) in
                            {8326}let v_1860: bitstring = (if not(v_1855) then catch-fail((if v_1857 then (if v_1859 then (early_secret_137,binder_key_91) else fail-any) else fail-any)) else caught-fail) in
                            {8327}let v_1861: bool = (not-caught-fail(v_1860) && success?(1-proj-2-tuple(v_1860))) in
                            {8328}let kb_91: mac_key = (if v_1861 then 2-proj-2-tuple(v_1860) else caught-fail) in
                            {8329}let es'_4: bitstring = (if v_1861 then 1-proj-2-tuple(v_1860) else caught-fail) in
                            {8330}let psk_data'_39: bitstring = (if v_1855 then psk_data_37 else (if v_1861 then (NoPsk,zero,es'_4,false) else fail-any)) in
                            {8332}let (x_580: bitstring,g_52: group) = o_kex_data_10 in
                            {8333}let (psk_offer_44: preSharedKey,id_offer_44: identityPsk,es_offer_44: bitstring,is_safe_offer_44: bool) = psk_data'_39 in
                            {8334}event Client_PSKOffer(id_client_5,psk_offer_44,id_offer_44,is_safe_offer_44);
                            {8335}event Client_Rand_client(id_client_5,o_cr_14);
                            {8336}event Client_DH_client(id_client_5,dh_pub(g_52,x_580));
                            {8337}event Client_server_domain(id_client_5,o_dom_8);
                            {8338}let SH(sr_52: bytes32,mode_49: params) = server_hello_5 in
                            {8339}event Client_Rand_server(id_client_5,sr_52);
                            {8340}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_52,gy_45: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_93: preSharedKeyExt) = mode_49 in
                            (
                                {8342}event Client_DH_server(id_client_5,gy_45);
                                {8343}let v_1862: bool = (psk_ext_93 = empty_psk_ext) in
                                {8344}let psk_204: preSharedKey = (if v_1862 then NoPsk else caught-fail) in
                                {8346}let k_197: bitstring = (if v_1862 then catch-fail(psk2b(psk_204)) else caught-fail) in
                                {8347}let v_1863: bool = not-caught-fail(k_197) in
                                {8345}let s_195: bitstring = (if v_1862 then zero else caught-fail) in
                                {8348}let early_secret_138: bitstring = (if v_1862 then catch-fail((if v_1863 then hmac(@8_tls_h,s_195,k_197) else fail-any)) else caught-fail) in
                                {8349}let v_1864: bool = not-caught-fail(early_secret_138) in
                                {8351}let m_182: bitstring = (if v_1864 then zero else caught-fail) in
                                {8352}let h_484: bitstring = (if v_1864 then catch-fail(hash(@8_tls_h,m_182)) else caught-fail) in
                                {8353}let v_1865: bool = not-caught-fail(h_484) in
                                {8350}let l_511: label = (if v_1864 then tls13_ext_res_binder else caught-fail) in
                                {8354}let x_581: bitstring = (if v_1865 then (l_511,h_484) else caught-fail) in
                                {8355}let binder_key_92: bitstring = (if v_1864 then catch-fail((if v_1865 then hmac(@8_tls_h,early_secret_138,x_581) else fail-any)) else caught-fail) in
                                {8356}let v_1866: bool = not-caught-fail(binder_key_92) in
                                {8357}let v_1867: bitstring = (if v_1862 then catch-fail((if v_1864 then (if v_1866 then (early_secret_138,binder_key_92) else fail-any) else fail-any)) else caught-fail) in
                                {8358}let v_1868: bool = (not-caught-fail(v_1867) && success?(1-proj-2-tuple(v_1867))) in
                                {8359}let kb_92: mac_key = (if v_1868 then 2-proj-2-tuple(v_1867) else caught-fail) in
                                {8360}let es_135: bitstring = (if v_1868 then 1-proj-2-tuple(v_1867) else caught-fail) in
                                {8361}let v_1869: bitstring = (if not(v_1862) then catch-fail(psk_data'_39) else caught-fail) in
                                {8362}let v_1870: bool = (not-caught-fail(v_1869) && success?(1-proj-4-tuple(v_1869))) in
                                {8363}let is_safe_80: bool = (if v_1870 then 4-proj-4-tuple(v_1869) else caught-fail) in
                                {8364}let es_136: bitstring = (if v_1870 then 3-proj-4-tuple(v_1869) else caught-fail) in
                                {8365}let id_91: identityPsk = (if v_1870 then 2-proj-4-tuple(v_1869) else caught-fail) in
                                {8366}let psk_205: preSharedKey = (if v_1870 then 1-proj-4-tuple(v_1869) else caught-fail) in
                                {8367}let (psk_206: preSharedKey,early_secret_139: bitstring,valid_44: bool,safe_psk_47: bool) = (if v_1862 then (if v_1868 then (NoPsk,es_135,true,false) else fail-any) else (if v_1870 then (psk_205,es_136,((psk_205 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_93)),is_safe_80) else fail-any)) in
                                {8368}event Client_PSKChoosen(id_client_5,psk_206,safe_psk_47);
                                {8369}if valid_44 then
                                (
                                    {8372}new s_196[]: seed;
                                    {8370}let gxy_90: element = catch-fail(dh_decap_fun(g_52,gy_45,x_580)) in
                                    {8371}let v_1871: bool = not-caught-fail(gxy_90) in
                                    {8373}let gxy_91: element = (if v_1871 then gxy_90 else dh_f(s_196)) in
                                    {8374}event Client_DH_gxy(id_client_5,gxy_91);
                                    {8376}let m_183: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                    {8377}let v_1872: bool = not-caught-fail(m_183) in
                                    {8378}let h_485: bitstring = (if v_1872 then catch-fail(hash(@8_tls_h,m_183)) else caught-fail) in
                                    {8379}let v_1873: bool = not-caught-fail(h_485) in
                                    {8375}let l_512: label = tls13_derived in
                                    {8380}let x_582: bitstring = (if v_1873 then (l_512,h_485) else caught-fail) in
                                    {8381}let extra_95: bitstring = catch-fail((if v_1872 then (if v_1873 then hmac(@8_tls_h,early_secret_139,x_582) else fail-any) else fail-any)) in
                                    {8382}let v_1874: bool = not-caught-fail(extra_95) in
                                    {8383}let handshake_secret_45: bitstring = (if v_1874 then hmac(@8_tls_h,extra_95,gxy_91) else fail-any) in
                                    {8385}let m_184: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                    {8386}let v_1875: bool = not-caught-fail(m_184) in
                                    {8387}let h_486: bitstring = (if v_1875 then catch-fail(hash(@8_tls_h,m_184)) else caught-fail) in
                                    {8388}let v_1876: bool = not-caught-fail(h_486) in
                                    {8384}let l_513: label = tls13_derived in
                                    {8389}let x_583: bitstring = (if v_1876 then (l_513,h_486) else caught-fail) in
                                    {8390}let extra_96: bitstring = catch-fail((if v_1875 then (if v_1876 then hmac(@8_tls_h,handshake_secret_45,x_583) else fail-any) else fail-any)) in
                                    {8391}let v_1877: bool = not-caught-fail(extra_96) in
                                    {8392}let k_198: bitstring = (if v_1877 then zero else caught-fail) in
                                    {8393}let master_secret_97: bitstring = (if v_1877 then catch-fail(hmac(@8_tls_h,handshake_secret_45,k_198)) else caught-fail) in
                                    {8394}let v_1878: bool = not-caught-fail(master_secret_97) in
                                    {8331}let cur_log_30: bitstring = (zero,o_client_hello_6) in
                                    {8341}let cur_log2_92: bitstring = (cur_log_30,server_hello_5) in
                                    {8396}let h_487: bitstring = (if v_1878 then catch-fail(hash(@8_tls_h,cur_log2_92)) else caught-fail) in
                                    {8397}let v_1879: bool = not-caught-fail(h_487) in
                                    {8395}let l_514: label = (if v_1878 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {8398}let x_584: bitstring = (if v_1879 then (l_514,h_487) else caught-fail) in
                                    {8399}let client_hts_45: bitstring = (if v_1878 then catch-fail((if v_1879 then hmac(@8_tls_h,handshake_secret_45,x_584) else fail-any)) else caught-fail) in
                                    {8400}let v_1880: bool = not-caught-fail(client_hts_45) in
                                    {8402}let h_488: bitstring = (if v_1880 then catch-fail(hash(@8_tls_h,cur_log2_92)) else caught-fail) in
                                    {8403}let v_1881: bool = not-caught-fail(h_488) in
                                    {8401}let l_515: label = (if v_1880 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {8404}let x_585: bitstring = (if v_1881 then (l_515,h_488) else caught-fail) in
                                    {8405}let server_hts_45: bitstring = (if v_1880 then catch-fail((if v_1881 then hmac(@8_tls_h,handshake_secret_45,x_585) else fail-any)) else caught-fail) in
                                    {8406}let v_1882: bool = not-caught-fail(server_hts_45) in
                                    {8408}let h_489: bitstring = (if v_1882 then zero else caught-fail) in
                                    {8407}let l_516: label = (if v_1882 then tls13_key else caught-fail) in
                                    {8409}let x_586: bitstring = (if v_1882 then (l_516,h_489) else caught-fail) in
                                    {8410}let client_wkh_45: bitstring = (if v_1882 then catch-fail(hmac(@8_tls_h,client_hts_45,x_586)) else caught-fail) in
                                    {8411}let v_1883: bool = not-caught-fail(client_wkh_45) in
                                    {8413}let h_490: bitstring = (if v_1883 then zero else caught-fail) in
                                    {8412}let l_517: label = (if v_1883 then tls13_key else caught-fail) in
                                    {8414}let x_587: bitstring = (if v_1883 then (l_517,h_490) else caught-fail) in
                                    {8415}let server_wkh_45: bitstring = (if v_1883 then catch-fail(hmac(@8_tls_h,server_hts_45,x_587)) else caught-fail) in
                                    {8416}let v_1884: bool = not-caught-fail(server_wkh_45) in
                                    {8418}let h_491: bitstring = (if v_1884 then zero else caught-fail) in
                                    {8417}let l_518: label = (if v_1884 then tls13_finished else caught-fail) in
                                    {8419}let x_588: bitstring = (if v_1884 then (l_518,h_491) else caught-fail) in
                                    {8420}let client_fk_45: bitstring = (if v_1884 then catch-fail(hmac(@8_tls_h,client_hts_45,x_588)) else caught-fail) in
                                    {8421}let v_1885: bool = not-caught-fail(client_fk_45) in
                                    {8423}let h_492: bitstring = (if v_1885 then zero else caught-fail) in
                                    {8422}let l_519: label = (if v_1885 then tls13_finished else caught-fail) in
                                    {8424}let x_589: bitstring = (if v_1885 then (l_519,h_492) else caught-fail) in
                                    {8425}let server_fk_45: bitstring = (if v_1885 then catch-fail(hmac(@8_tls_h,server_hts_45,x_589)) else caught-fail) in
                                    {8426}let v_1886: bool = not-caught-fail(server_fk_45) in
                                    {8427}let (master_secret_98: bitstring,chk_52: aead_key,shk_51: aead_key,cfin_52: mac_key,sfin_51: mac_key) = (if v_1877 then (if v_1878 then (if v_1880 then (if v_1882 then (if v_1883 then (if v_1884 then (if v_1885 then (if v_1886 then (master_secret_97,client_wkh_45,server_wkh_45,client_fk_45,server_fk_45) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {8428}event Client_chk(id_client_5,chk_52);
                                    {8429}event Client_shk(id_client_5,shk_51);
                                    {8430}event Client_cfin(id_client_5,cfin_52);
                                    {8431}event Client_sfin(id_client_5,sfin_51);
                                    {8432}in(io, enc_ee_msg_44: bitstring);
                                    {8433}let ee_msg_49: msg = aead_dec(@8_tls_a,shk_51,0,zero,enc_ee_msg_44) in
                                    {8434}let EE(ech_ee_44: echExt,extra_ee_44: extraExt) = ee_msg_49 in
                                    {8435}let cur_log2_93: bitstring = (cur_log2_92,ee_msg_49) in
                                    {8436}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(o_cr_14,sr_52,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_206,safe_psk_47,@8_comp_psk,master_secret_98,chk_52,0,shk_51,1,cfin_52,sfin_51,cur_log2_93)))
                                )
                                else
                                    {8437}out(io, illegal_parameter)
                            )
                            else
                                {8438}out(io, illegal_parameter)
                )
                else
                    {8439}out(io, unexpected_message)
            )
    )
    else
        {8441}let psk_207: preSharedKey = NoPsk in
        {8443}let k_199: bitstring = catch-fail(psk2b(psk_207)) in
        {8444}let v_1887: bool = not-caught-fail(k_199) in
        {8442}let s_197: bitstring = zero in
        {8445}let early_secret_140: bitstring = catch-fail((if v_1887 then hmac(h_psk_1,s_197,k_199) else fail-any)) in
        {8446}let v_1888: bool = not-caught-fail(early_secret_140) in
        {8448}let m_185: bitstring = (if v_1888 then zero else caught-fail) in
        {8449}let h_493: bitstring = (if v_1888 then catch-fail(hash(h_psk_1,m_185)) else caught-fail) in
        {8450}let v_1889: bool = not-caught-fail(h_493) in
        {8447}let l_520: label = (if v_1888 then tls13_ext_res_binder else caught-fail) in
        {8451}let x_590: bitstring = (if v_1889 then (l_520,h_493) else caught-fail) in
        {8452}let binder_key_93: bitstring = (if v_1888 then catch-fail((if v_1889 then hmac(h_psk_1,early_secret_140,x_590) else fail-any)) else caught-fail) in
        {8453}let v_1890: bool = not-caught-fail(binder_key_93) in
        {8454}let v_1891: bitstring = catch-fail((if v_1888 then (if v_1890 then (early_secret_140,binder_key_93) else fail-any) else fail-any)) in
        {8455}let v_1892: bool = (not-caught-fail(v_1891) && success?(1-proj-2-tuple(v_1891))) in
        {8456}let kb_93: mac_key = (if v_1892 then 2-proj-2-tuple(v_1891) else caught-fail) in
        {8457}let es_137: bitstring = (if v_1892 then 1-proj-2-tuple(v_1891) else caught-fail) in
        {8458}let v_1893: bitstring = catch-fail((if v_1892 then (empty_psk_ext,(NoPsk,zero,es_137,false)) else fail-any)) in
        {8459}let v_1894: bool = (not-caught-fail(v_1893) && success?(1-proj-2-tuple(v_1893))) in
        {8460}let psk_data_45: bitstring = (if v_1894 then 2-proj-2-tuple(v_1893) else caught-fail) in
        {8461}let psk_ext_94: preSharedKeyExt = (if v_1894 then 1-proj-2-tuple(v_1893) else caught-fail) in
        {8466}new fake_id_25[]: identityPsk;
        {8467}new fake_binder_25[]: bitstring;
        {8464}let v_1895: bool = (if v_1894 then catch-fail(@8_use_grease) else caught-fail) in
        {8473}let v_1896: hpkeContext = (if is-false(v_1895) then catch-fail(context_2) else caught-fail) in
        {8474}let v_1897: bool = (not-caught-fail(v_1896) && ((S =nf 1-proj-hpke_context(v_1896)) && success?(1-proj-hpke_context(v_1896)))) in
        {8475}let base_nonce_25: bitstring = (if v_1897 then 3-proj-hpke_context(v_1896) else caught-fail) in
        {8476}let key_25: aead_key = (if v_1897 then 2-proj-hpke_context(v_1896) else caught-fail) in
        {8472}let n_22: nat = (if is-false(v_1895) then 1 else caught-fail) in
        {8469}let o_ech_ext_ADD_20: echExt = (if is-false(v_1895) then ECHClientHelloOuter(ech_h_13,ech_a_13,config_id_13,enc_6,zero) else caught-fail) in
        {8468}let o_psk_ext_25: preSharedKeyExt = (if is-false(v_1895) then (if @8_use_psk then client_psk_ext(fake_id_25,fake_binder_25) else empty_psk_ext) else caught-fail) in
        {8470}let o_offer_ADD_20: params = (if is-false(v_1895) then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),o_ech_ext_ADD_20,empty_extra_ext,o_psk_ext_25) else caught-fail) in
        {8471}let o_client_hello_ADD_20: msg = (if is-false(v_1895) then CH(o_cr_10,o_offer_ADD_20) else caught-fail) in
        {8462}let i_offer_20: params = (if v_1894 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_5,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_94) else caught-fail) in
        {8463}let i_client_hello_26: msg = (if v_1894 then CH(i_cr_8,i_offer_20) else caught-fail) in
        {8477}let payload_26: bitstring = (if is-false(v_1895) then catch-fail((if v_1897 then aead_enc(ech_a_13,key_25,(base_nonce_25,n_22),o_client_hello_ADD_20,i_client_hello_26) else fail-any)) else caught-fail) in
        {8478}let v_1898: bool = not-caught-fail(payload_26) in
        {8479}let o_ech_ext_25: echExt = (if v_1898 then ECHClientHelloOuter(ech_h_13,ech_a_13,config_id_13,enc_6,payload_26) else caught-fail) in
        {8480}let o_offer_46: params = (if v_1898 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),o_ech_ext_25,empty_extra_ext,o_psk_ext_25) else caught-fail) in
        {8465}let o_offer_45: params = (if v_1895 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),ech_inner_or_grease_1,empty_extra_ext,psk_ext_94) else caught-fail) in
        {8481}let (o_client_hello_7: msg,i_client_hello_27: msg,o_cr_17: bytes32,i_cr_13: bytes32,o_kex_data_12: bitstring,i_kex_data_12: bitstring,o_psk_ext_26: preSharedKeyExt,psk_data_46: bitstring,o_ech_ext_26: echExt) = (if v_1894 then (if undo-catch-fail(v_1895) then (CH(o_cr_10,o_offer_45),CH(o_cr_10,o_offer_45),o_cr_10,o_cr_10,o_kex_data_7,o_kex_data_7,psk_ext_94,psk_data_45,ech_inner_or_grease_1) else (if v_1898 then (CH(o_cr_10,o_offer_46),i_client_hello_26,o_cr_10,i_cr_8,o_kex_data_7,i_kex_data_7,o_psk_ext_25,psk_data_45,o_ech_ext_25) else fail-any)) else fail-any) in
        {8482}out(io, o_client_hello_7);
        {8483}let (psk_208: preSharedKey,id_92: identityPsk,es_138: bitstring,safe_5: bool) = psk_data_46 in
        (
            {8484}if (false && (not(@8_use_grease) && (psk_208 ≠ NoPsk))) then
            {8485}let client_hello_6: bitstring = (zero,i_client_hello_27) in
            {8487}let h_494: bitstring = catch-fail(hash(@8_backend_h,client_hello_6)) in
            {8488}let v_1899: bool = not-caught-fail(h_494) in
            {8486}let l_521: label = tls13_client_early_traffic_secret in
            {8489}let x_591: bitstring = (if v_1899 then (l_521,h_494) else caught-fail) in
            {8490}let atsc0_6: bitstring = catch-fail((if v_1899 then hmac(@8_backend_h,es_138,x_591) else fail-any)) in
            {8491}let v_1900: bool = not-caught-fail(atsc0_6) in
            {8493}let h_495: bitstring = (if v_1900 then zero else caught-fail) in
            {8492}let l_522: label = (if v_1900 then tls13_key else caught-fail) in
            {8494}let x_592: bitstring = (if v_1900 then (l_522,h_495) else caught-fail) in
            {8495}let kc0_6: bitstring = (if v_1900 then catch-fail(hmac(@8_backend_h,atsc0_6,x_592)) else caught-fail) in
            {8496}let v_1901: bool = not-caught-fail(kc0_6) in
            {8498}let h_496: bitstring = (if v_1901 then catch-fail(hash(@8_backend_h,client_hello_6)) else caught-fail) in
            {8499}let v_1902: bool = not-caught-fail(h_496) in
            {8497}let l_523: label = (if v_1901 then tls13_early_exporter_master_secret else caught-fail) in
            {8500}let x_593: bitstring = (if v_1902 then (l_523,h_496) else caught-fail) in
            {8501}let ems0_12: bitstring = (if v_1901 then catch-fail((if v_1902 then hmac(@8_backend_h,es_138,x_593) else fail-any)) else caught-fail) in
            {8502}let v_1903: bool = not-caught-fail(ems0_12) in
            {8503}let (wkc0_6: aead_key,ems0_13: bitstring) = (if v_1900 then (if v_1901 then (if v_1903 then (kc0_6,ems0_12) else fail-any) else fail-any) else fail-any) in
            {8504}!
            {8505}in(io, (i_6: nat,ad_6: bitstring));
            {8506}if is_nat(i_6) then
            {8507}new msg_ed_5[]: bitstring;
            {8509}new st_15: stamp;
            {8510}event ClientSequenceClient0RTTDataWriteKey(id_client_5,st_15,i_6);
            {8511}event ClientSends0(id_client_5,i_cr_13,psk_208,i_6,ad_6,msg_ed_5);
            {8508}let enc_ed_5: bitstring = aead_enc(@8_backend_a,wkc0_6,i_6,ad_6,msg_ed_5) in
            {8512}out(io, enc_ed_5)
        ) | (
            {8513}in(io, server_hello_6: msg);
            {8514}let SH(B32(sr24_7: bytes24,sr8_26: bytes8),mode_50: params) = server_hello_6 in
            (
                {8515}if (false && (B32(sr24_7,sr8_26) = B32(HRR24,HRR8))) then
                (
                    {8516}if (send_kex_1 ≠ true) then
                    {8517}let nego(=TLS13,h_alg_20: hash_alg,a_alg_18: aead_alg,hrr_kex_ext(g_53: group),=empty_sni_ext,ech_ext_19: echExt,=empty_extra_ext,=empty_psk_ext) = mode_50 in
                    {8518}let v_1904: bool = (ech_ext_19 = empty_ech_ext) in
                    {8519}let hrr_mode_10: params = (if not(v_1904) then nego(TLS13,@8_backend_h,@8_backend_a,hrr_kex_ext(@8_backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) else caught-fail) in
                    {8520}let hrr_6: msg = (if not(v_1904) then SH(B32(HRR24,HRR8),hrr_mode_10) else caught-fail) in
                    {8521}let cur_log_31: bitstring = (if not(v_1904) then ((zero,i_client_hello_27),hrr_6) else caught-fail) in
                    {8522}let transcript_hrr_ech_conf_6: bitstring = (if not(v_1904) then catch-fail(hash(@8_backend_h,cur_log_31)) else caught-fail) in
                    {8523}let v_1905: bool = not-caught-fail(transcript_hrr_ech_conf_6) in
                    {8525}let k_200: bitstring = (if v_1905 then catch-fail(b32_2_b(get_random(i_client_hello_27))) else caught-fail) in
                    {8526}let v_1906: bool = not-caught-fail(k_200) in
                    {8524}let s_198: bitstring = (if v_1905 then zero else caught-fail) in
                    {8527}let k_201: bitstring = (if v_1905 then catch-fail((if v_1906 then hmac(@8_backend_h,s_198,k_200) else fail-any)) else caught-fail) in
                    {8528}let v_1907: bool = not-caught-fail(k_201) in
                    {8529}let l_524: label = (if v_1907 then hrr_ech_accept_confirmation else caught-fail) in
                    {8530}let x_594: bitstring = (if v_1907 then (l_524,cur_log_31) else caught-fail) in
                    {8531}let is_ech_accepted_5: bool = (if v_1904 then false else (if (ech_ext_19 = ECHHelloRetryRequest((if v_1905 then crop_into_bytes8((if v_1907 then hmac(@8_backend_h,k_201,x_594) else fail-any)) else fail-any))) then true else false)) in
                    {8532}event ClientEchAcceptance(id_client_5,is_ech_accepted_5);
                    {8533}if is_ech_accepted_5 then
                    (
                        {8535}let ech_config(config_id_18: configId,ech_g_18: group,pkR_20: element,o_dom_14: domain,ech_h_18: hash_alg,ech_a_18: aead_alg) = ech_conf_2 in
                        {8537}new s_199[]: seed;
                        {8538}let gx_47: element = dh_pub(@8_backend_g,dh_k(s_199)) in
                        {8539}let v_1908: bitstring = (dh_k(s_199),gx_47) in
                        {8540}let v_1909: bool = success?(1-proj-2-tuple(v_1908)) in
                        {8541}let gx_48: element = (if v_1909 then 2-proj-2-tuple(v_1908) else caught-fail) in
                        {8542}let x_595: bitstring = (if v_1909 then 1-proj-2-tuple(v_1908) else caught-fail) in
                        {8536}let send_key_share_15: bool = true in
                        {8543}let kex_19: kex_alg = (if v_1909 then (if send_key_share_15 then DHE_kex(@8_backend_g,gx_48) else DHE_group(@8_backend_g)) else caught-fail) in
                        {8544}let (i_kex_ext_8: keyShareExt,i_kex_data_13: bitstring) = (if v_1909 then (client_kex_ext(kex_19),(x_595,@8_backend_g)) else fail-any) in
                        {8546}new s_200[]: seed;
                        {8547}let gx_49: element = dh_pub(@8_tls_g,dh_k(s_200)) in
                        {8548}let v_1910: bitstring = (dh_k(s_200),gx_49) in
                        {8549}let v_1911: bool = success?(1-proj-2-tuple(v_1910)) in
                        {8550}let gx_50: element = (if v_1911 then 2-proj-2-tuple(v_1910) else caught-fail) in
                        {8551}let x_596: bitstring = (if v_1911 then 1-proj-2-tuple(v_1910) else caught-fail) in
                        {8545}let send_key_share_16: bool = true in
                        {8552}let kex_20: kex_alg = (if v_1911 then (if send_key_share_16 then DHE_kex(@8_tls_g,gx_50) else DHE_group(@8_tls_g)) else caught-fail) in
                        {8553}let (o_kex_ext_12: keyShareExt,o_kex_data_13: bitstring) = (if v_1911 then (client_kex_ext(kex_20),(x_596,@8_tls_g)) else fail-any) in
                        {8554}new rand24_20[]: bytes24;
                        {8555}new rand8_20[]: bytes8;
                        {8557}new rand24_21[]: bytes24;
                        {8558}new rand8_21[]: bytes8;
                        {8559}let o_cr_18: bytes32 = B32(rand24_21,rand8_21) in
                        {8556}let i_cr_14: bytes32 = B32(rand24_20,rand8_20) in
                        {8534}let cur_log_IN1_HRR_5: bitstring = ((zero,i_client_hello_27),server_hello_6) in
                        {8561}if @8_use_psk then
                        (
                            {8560}let ech_ext_20: echExt = ECHClientHelloInner in
                            {8562}let (psk_209: preSharedKey,id_93: identityPsk,old_es_12: bitstring,is_safe_81: bool) = psk_data_46 in
                            (
                                {8566}let k_202: bitstring = catch-fail(psk2b(psk_209)) in
                                {8567}let v_1912: bool = not-caught-fail(k_202) in
                                {8565}let s_201: bitstring = zero in
                                {8568}let early_secret_141: bitstring = catch-fail((if v_1912 then hmac(@8_backend_h,s_201,k_202) else fail-any)) in
                                {8569}let v_1913: bool = not-caught-fail(early_secret_141) in
                                {8571}let m_186: bitstring = (if v_1913 then zero else caught-fail) in
                                {8572}let h_497: bitstring = (if v_1913 then catch-fail(hash(@8_backend_h,m_186)) else caught-fail) in
                                {8573}let v_1914: bool = not-caught-fail(h_497) in
                                {8570}let l_525: label = (if v_1913 then tls13_ext_res_binder else caught-fail) in
                                {8574}let x_597: bitstring = (if v_1914 then (l_525,h_497) else caught-fail) in
                                {8575}let binder_key_94: bitstring = (if v_1913 then catch-fail((if v_1914 then hmac(@8_backend_h,early_secret_141,x_597) else fail-any)) else caught-fail) in
                                {8576}let v_1915: bool = not-caught-fail(binder_key_94) in
                                {8577}let v_1916: bitstring = catch-fail((if v_1913 then (if v_1915 then (early_secret_141,binder_key_94) else fail-any) else fail-any)) in
                                {8578}let v_1917: bool = (not-caught-fail(v_1916) && success?(1-proj-2-tuple(v_1916))) in
                                {8579}let kb_94: mac_key = (if v_1917 then 2-proj-2-tuple(v_1916) else caught-fail) in
                                {8580}let es_139: bitstring = (if v_1917 then 1-proj-2-tuple(v_1916) else caught-fail) in
                                {8563}let offer_26: params = nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_8,SNI(backend_dom_1),ech_ext_20,@8_i_extra_ext,trunc_client_psk_ext(id_93)) in
                                {8564}let cur_log'_26: bitstring = (cur_log_IN1_HRR_5,CH(i_cr_14,offer_26)) in
                                {8581}let binders_25: bitstring = (if v_1917 then catch-fail(hmac(@8_backend_h,kb_94,cur_log'_26)) else caught-fail) in
                                {8582}let v_1918: bool = not-caught-fail(binders_25) in
                                {8583}let v_1919: bitstring = catch-fail((if v_1917 then (if v_1918 then (client_psk_ext(id_93,binders_25),(psk_209,id_93,es_139,is_safe_81)) else fail-any) else fail-any)) in
                                {8584}let v_1920: bool = (not-caught-fail(v_1919) && success?(1-proj-2-tuple(v_1919))) in
                                {8585}let psk_data_47: bitstring = (if v_1920 then 2-proj-2-tuple(v_1919) else caught-fail) in
                                {8586}let psk_ext_95: preSharedKeyExt = (if v_1920 then 1-proj-2-tuple(v_1919) else caught-fail) in
                                {8589}new fake_id_26[]: identityPsk;
                                {8590}new fake_binder_26[]: bitstring;
                                {8596}let v_1921: hpkeContext = (if v_1920 then catch-fail(context_2) else caught-fail) in
                                {8597}let v_1922: bool = (not-caught-fail(v_1921) && ((S =nf 1-proj-hpke_context(v_1921)) && success?(1-proj-hpke_context(v_1921)))) in
                                {8598}let base_nonce_26: bitstring = (if v_1922 then 3-proj-hpke_context(v_1921) else caught-fail) in
                                {8599}let key_26: aead_key = (if v_1922 then 2-proj-hpke_context(v_1921) else caught-fail) in
                                {8595}let n_23: nat = (if v_1920 then 2 else caught-fail) in
                                {8592}let o_ech_ext_ADD_21: echExt = (if v_1920 then ECHClientHelloOuter(ech_h_18,ech_a_18,config_id_18,zero,zero) else caught-fail) in
                                {8591}let o_psk_ext_27: preSharedKeyExt = (if v_1920 then (if @8_use_psk then client_psk_ext(fake_id_26,fake_binder_26) else empty_psk_ext) else caught-fail) in
                                {8593}let o_offer_ADD_21: params = (if v_1920 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_12,SNI(o_dom_14),o_ech_ext_ADD_21,empty_extra_ext,o_psk_ext_27) else caught-fail) in
                                {8594}let o_client_hello_ADD_21: msg = (if v_1920 then CH(o_cr_18,o_offer_ADD_21) else caught-fail) in
                                {8587}let i_offer_21: params = (if v_1920 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_8,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_95) else caught-fail) in
                                {8588}let i_client_hello_28: msg = (if v_1920 then CH(i_cr_14,i_offer_21) else caught-fail) in
                                {8600}let payload_27: bitstring = (if v_1920 then catch-fail((if v_1922 then aead_enc(ech_a_18,key_26,(base_nonce_26,n_23),o_client_hello_ADD_21,i_client_hello_28) else fail-any)) else caught-fail) in
                                {8601}let v_1923: bool = not-caught-fail(payload_27) in
                                {8602}let o_ech_ext_27: echExt = (if v_1923 then ECHClientHelloOuter(ech_h_18,ech_a_18,config_id_18,zero,payload_27) else caught-fail) in
                                {8603}let o_offer_47: params = (if v_1923 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_12,SNI(o_dom_14),o_ech_ext_27,empty_extra_ext,o_psk_ext_27) else caught-fail) in
                                {8604}let (o_client_hello'_15: msg,i_client_hello'_16: msg,i_cr'_15: bytes32,i_kex_data'_15: bitstring,psk_data'_40: bitstring) = (if v_1920 then (if v_1923 then (CH(o_cr_18,o_offer_47),i_client_hello_28,i_cr_14,i_kex_data_13,psk_data_47) else fail-any) else fail-any) in
                                {8605}out(io, o_client_hello'_15);
                                {8606}in(io, server_hello'_35: msg);
                                {8607}let SH(B32(sr24'_15: bytes24,sr8'_15: bytes8),params'_15: params) = server_hello'_35 in
                                {8609}let sh_modified_21: msg = SH(B32(sr24'_15,zero8),params'_15) in
                                {8608}let cur_log_IN1_HRR_IN2_15: bitstring = (cur_log_IN1_HRR_5,i_client_hello'_16) in
                                {8610}let cur_log_sh_21: bitstring = (cur_log_IN1_HRR_IN2_15,sh_modified_21) in
                                {8611}let transcript_ech_conf_21: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_21)) in
                                {8612}let v_1924: bool = not-caught-fail(transcript_ech_conf_21) in
                                {8614}let k_203: bitstring = (if v_1924 then catch-fail(b32_2_b(get_random(i_client_hello'_16))) else caught-fail) in
                                {8615}let v_1925: bool = not-caught-fail(k_203) in
                                {8613}let s_202: bitstring = (if v_1924 then zero else caught-fail) in
                                {8616}let k_204: bitstring = (if v_1924 then catch-fail((if v_1925 then hmac(@8_backend_h,s_202,k_203) else fail-any)) else caught-fail) in
                                {8617}let v_1926: bool = not-caught-fail(k_204) in
                                {8618}let l_526: label = (if v_1926 then ech_accept_confirmation else caught-fail) in
                                {8619}let x_598: bitstring = (if v_1926 then (l_526,cur_log_sh_21) else caught-fail) in
                                {8620}let sr8_27: bytes8 = (if v_1924 then catch-fail(crop_into_bytes8((if v_1926 then hmac(@8_backend_h,k_204,x_598) else fail-any))) else caught-fail) in
                                {8621}let v_1927: bool = not-caught-fail(sr8_27) in
                                {8622}if (B32(sr24'_15,sr8'_15) = (if v_1924 then (if v_1927 then B32(sr24'_15,sr8_27) else fail-any) else fail-any)) then
                                {8623}let (x_599: bitstring,g_54: group) = i_kex_data'_15 in
                                {8624}let (psk_offer_45: preSharedKey,id_offer_45: identityPsk,es_offer_45: bitstring,is_safe_offer_45: bool) = psk_data'_40 in
                                {8625}event Client_PSKOffer(id_client_5,psk_offer_45,id_offer_45,is_safe_offer_45);
                                {8626}event Client_Rand_client(id_client_5,i_cr'_15);
                                {8627}event Client_DH_client(id_client_5,dh_pub(g_54,x_599));
                                {8628}event Client_server_domain(id_client_5,backend_dom_1);
                                {8629}let SH(sr_53: bytes32,mode_51: params) = server_hello'_35 in
                                {8630}event Client_Rand_server(id_client_5,sr_53);
                                {8631}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_54,gy_46: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_96: preSharedKeyExt) = mode_51 in
                                (
                                    {8633}event Client_DH_server(id_client_5,gy_46);
                                    {8634}let v_1928: bool = (psk_ext_96 = empty_psk_ext) in
                                    {8635}let psk_210: preSharedKey = (if v_1928 then NoPsk else caught-fail) in
                                    {8637}let k_205: bitstring = (if v_1928 then catch-fail(psk2b(psk_210)) else caught-fail) in
                                    {8638}let v_1929: bool = not-caught-fail(k_205) in
                                    {8636}let s_203: bitstring = (if v_1928 then zero else caught-fail) in
                                    {8639}let early_secret_142: bitstring = (if v_1928 then catch-fail((if v_1929 then hmac(@8_backend_h,s_203,k_205) else fail-any)) else caught-fail) in
                                    {8640}let v_1930: bool = not-caught-fail(early_secret_142) in
                                    {8642}let m_187: bitstring = (if v_1930 then zero else caught-fail) in
                                    {8643}let h_498: bitstring = (if v_1930 then catch-fail(hash(@8_backend_h,m_187)) else caught-fail) in
                                    {8644}let v_1931: bool = not-caught-fail(h_498) in
                                    {8641}let l_527: label = (if v_1930 then tls13_ext_res_binder else caught-fail) in
                                    {8645}let x_600: bitstring = (if v_1931 then (l_527,h_498) else caught-fail) in
                                    {8646}let binder_key_95: bitstring = (if v_1930 then catch-fail((if v_1931 then hmac(@8_backend_h,early_secret_142,x_600) else fail-any)) else caught-fail) in
                                    {8647}let v_1932: bool = not-caught-fail(binder_key_95) in
                                    {8648}let v_1933: bitstring = (if v_1928 then catch-fail((if v_1930 then (if v_1932 then (early_secret_142,binder_key_95) else fail-any) else fail-any)) else caught-fail) in
                                    {8649}let v_1934: bool = (not-caught-fail(v_1933) && success?(1-proj-2-tuple(v_1933))) in
                                    {8650}let kb_95: mac_key = (if v_1934 then 2-proj-2-tuple(v_1933) else caught-fail) in
                                    {8651}let es_140: bitstring = (if v_1934 then 1-proj-2-tuple(v_1933) else caught-fail) in
                                    {8652}let v_1935: bitstring = (if not(v_1928) then catch-fail(psk_data'_40) else caught-fail) in
                                    {8653}let v_1936: bool = (not-caught-fail(v_1935) && success?(1-proj-4-tuple(v_1935))) in
                                    {8654}let is_safe_82: bool = (if v_1936 then 4-proj-4-tuple(v_1935) else caught-fail) in
                                    {8655}let es_141: bitstring = (if v_1936 then 3-proj-4-tuple(v_1935) else caught-fail) in
                                    {8656}let id_94: identityPsk = (if v_1936 then 2-proj-4-tuple(v_1935) else caught-fail) in
                                    {8657}let psk_211: preSharedKey = (if v_1936 then 1-proj-4-tuple(v_1935) else caught-fail) in
                                    {8658}let (psk_212: preSharedKey,early_secret_143: bitstring,valid_45: bool,safe_psk_48: bool) = (if v_1928 then (if v_1934 then (NoPsk,es_140,true,false) else fail-any) else (if v_1936 then (psk_211,es_141,((psk_211 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_96)),is_safe_82) else fail-any)) in
                                    {8659}event Client_PSKChoosen(id_client_5,psk_212,safe_psk_48);
                                    {8660}if valid_45 then
                                    (
                                        {8663}new s_204[]: seed;
                                        {8661}let gxy_92: element = catch-fail(dh_decap_fun(g_54,gy_46,x_599)) in
                                        {8662}let v_1937: bool = not-caught-fail(gxy_92) in
                                        {8664}let gxy_93: element = (if v_1937 then gxy_92 else dh_f(s_204)) in
                                        {8665}event Client_DH_gxy(id_client_5,gxy_93);
                                        {8667}let m_188: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {8668}let v_1938: bool = not-caught-fail(m_188) in
                                        {8669}let h_499: bitstring = (if v_1938 then catch-fail(hash(@8_backend_h,m_188)) else caught-fail) in
                                        {8670}let v_1939: bool = not-caught-fail(h_499) in
                                        {8666}let l_528: label = tls13_derived in
                                        {8671}let x_601: bitstring = (if v_1939 then (l_528,h_499) else caught-fail) in
                                        {8672}let extra_97: bitstring = catch-fail((if v_1938 then (if v_1939 then hmac(@8_backend_h,early_secret_143,x_601) else fail-any) else fail-any)) in
                                        {8673}let v_1940: bool = not-caught-fail(extra_97) in
                                        {8674}let handshake_secret_46: bitstring = (if v_1940 then hmac(@8_backend_h,extra_97,gxy_93) else fail-any) in
                                        {8676}let m_189: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {8677}let v_1941: bool = not-caught-fail(m_189) in
                                        {8678}let h_500: bitstring = (if v_1941 then catch-fail(hash(@8_backend_h,m_189)) else caught-fail) in
                                        {8679}let v_1942: bool = not-caught-fail(h_500) in
                                        {8675}let l_529: label = tls13_derived in
                                        {8680}let x_602: bitstring = (if v_1942 then (l_529,h_500) else caught-fail) in
                                        {8681}let extra_98: bitstring = catch-fail((if v_1941 then (if v_1942 then hmac(@8_backend_h,handshake_secret_46,x_602) else fail-any) else fail-any)) in
                                        {8682}let v_1943: bool = not-caught-fail(extra_98) in
                                        {8683}let k_206: bitstring = (if v_1943 then zero else caught-fail) in
                                        {8684}let master_secret_99: bitstring = (if v_1943 then catch-fail(hmac(@8_backend_h,handshake_secret_46,k_206)) else caught-fail) in
                                        {8685}let v_1944: bool = not-caught-fail(master_secret_99) in
                                        {8632}let cur_log2_94: bitstring = (cur_log_IN1_HRR_IN2_15,server_hello'_35) in
                                        {8687}let h_501: bitstring = (if v_1944 then catch-fail(hash(@8_backend_h,cur_log2_94)) else caught-fail) in
                                        {8688}let v_1945: bool = not-caught-fail(h_501) in
                                        {8686}let l_530: label = (if v_1944 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {8689}let x_603: bitstring = (if v_1945 then (l_530,h_501) else caught-fail) in
                                        {8690}let client_hts_46: bitstring = (if v_1944 then catch-fail((if v_1945 then hmac(@8_backend_h,handshake_secret_46,x_603) else fail-any)) else caught-fail) in
                                        {8691}let v_1946: bool = not-caught-fail(client_hts_46) in
                                        {8693}let h_502: bitstring = (if v_1946 then catch-fail(hash(@8_backend_h,cur_log2_94)) else caught-fail) in
                                        {8694}let v_1947: bool = not-caught-fail(h_502) in
                                        {8692}let l_531: label = (if v_1946 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {8695}let x_604: bitstring = (if v_1947 then (l_531,h_502) else caught-fail) in
                                        {8696}let server_hts_46: bitstring = (if v_1946 then catch-fail((if v_1947 then hmac(@8_backend_h,handshake_secret_46,x_604) else fail-any)) else caught-fail) in
                                        {8697}let v_1948: bool = not-caught-fail(server_hts_46) in
                                        {8699}let h_503: bitstring = (if v_1948 then zero else caught-fail) in
                                        {8698}let l_532: label = (if v_1948 then tls13_key else caught-fail) in
                                        {8700}let x_605: bitstring = (if v_1948 then (l_532,h_503) else caught-fail) in
                                        {8701}let client_wkh_46: bitstring = (if v_1948 then catch-fail(hmac(@8_backend_h,client_hts_46,x_605)) else caught-fail) in
                                        {8702}let v_1949: bool = not-caught-fail(client_wkh_46) in
                                        {8704}let h_504: bitstring = (if v_1949 then zero else caught-fail) in
                                        {8703}let l_533: label = (if v_1949 then tls13_key else caught-fail) in
                                        {8705}let x_606: bitstring = (if v_1949 then (l_533,h_504) else caught-fail) in
                                        {8706}let server_wkh_46: bitstring = (if v_1949 then catch-fail(hmac(@8_backend_h,server_hts_46,x_606)) else caught-fail) in
                                        {8707}let v_1950: bool = not-caught-fail(server_wkh_46) in
                                        {8709}let h_505: bitstring = (if v_1950 then zero else caught-fail) in
                                        {8708}let l_534: label = (if v_1950 then tls13_finished else caught-fail) in
                                        {8710}let x_607: bitstring = (if v_1950 then (l_534,h_505) else caught-fail) in
                                        {8711}let client_fk_46: bitstring = (if v_1950 then catch-fail(hmac(@8_backend_h,client_hts_46,x_607)) else caught-fail) in
                                        {8712}let v_1951: bool = not-caught-fail(client_fk_46) in
                                        {8714}let h_506: bitstring = (if v_1951 then zero else caught-fail) in
                                        {8713}let l_535: label = (if v_1951 then tls13_finished else caught-fail) in
                                        {8715}let x_608: bitstring = (if v_1951 then (l_535,h_506) else caught-fail) in
                                        {8716}let server_fk_46: bitstring = (if v_1951 then catch-fail(hmac(@8_backend_h,server_hts_46,x_608)) else caught-fail) in
                                        {8717}let v_1952: bool = not-caught-fail(server_fk_46) in
                                        {8718}let (master_secret_100: bitstring,chk_53: aead_key,shk_52: aead_key,cfin_53: mac_key,sfin_52: mac_key) = (if v_1943 then (if v_1944 then (if v_1946 then (if v_1948 then (if v_1949 then (if v_1950 then (if v_1951 then (if v_1952 then (master_secret_99,client_wkh_46,server_wkh_46,client_fk_46,server_fk_46) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {8719}event Client_chk(id_client_5,chk_53);
                                        {8720}event Client_shk(id_client_5,shk_52);
                                        {8721}event Client_cfin(id_client_5,cfin_53);
                                        {8722}event Client_sfin(id_client_5,sfin_52);
                                        {8723}in(io, enc_ee_msg_45: bitstring);
                                        {8724}let ee_msg_50: msg = aead_dec(@8_backend_a,shk_52,0,zero,enc_ee_msg_45) in
                                        {8725}let EE(ech_ee_45: echExt,extra_ee_45: extraExt) = ee_msg_50 in
                                        {8726}let cur_log2_95: bitstring = (cur_log2_94,ee_msg_50) in
                                        {8727}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_15,sr_53,@8_backend_h,@8_backend_a,c_dom_6,backend_dom_1,psk_212,safe_psk_48,@8_comp_psk,master_secret_100,chk_53,0,shk_52,1,cfin_53,sfin_52,cur_log2_95)))
                                    )
                                    else
                                        {8728}out(io, illegal_parameter)
                                )
                                else
                                    {8729}out(io, illegal_parameter)
                            )
                            else
                                {8906}get pre_shared_keys(c_dom'_14: domain,=backend_dom_1,=@8_backend_h,id_95: identityPsk,psk_213: preSharedKey,idP_16: idProc,is_safe_83: bool) in
                                {8730}event Selected_one_time_used_psk(id_client_5,psk_213,is_safe_83);
                                {8731}event Selected_psk(c_dom_6,c_dom'_14,idP_16,is_safe_83);
                                {8732}event Selected_psk_no_missmatch(id_client_5,backend_dom_1,@8_backend_h,psk_213,id_95);
                                {8733}event Selected_psk_with_ID(c_dom_6,c_dom'_14,id_95,idP_16,is_safe_83);
                                {8734}let v_1953: bitstring = (id_95,psk_213,is_safe_83) in
                                {8735}let v_1954: bool = success?(1-proj-3-tuple(v_1953)) in
                                {8736}let is_safe_84: bool = (if v_1954 then 3-proj-3-tuple(v_1953) else caught-fail) in
                                {8737}let psk_214: preSharedKey = (if v_1954 then 2-proj-3-tuple(v_1953) else caught-fail) in
                                {8738}let id_96: identityPsk = (if v_1954 then 1-proj-3-tuple(v_1953) else caught-fail) in
                                {8742}let k_207: bitstring = (if v_1954 then catch-fail(psk2b(psk_214)) else caught-fail) in
                                {8743}let v_1955: bool = not-caught-fail(k_207) in
                                {8741}let s_205: bitstring = (if v_1954 then zero else caught-fail) in
                                {8744}let early_secret_144: bitstring = (if v_1954 then catch-fail((if v_1955 then hmac(@8_backend_h,s_205,k_207) else fail-any)) else caught-fail) in
                                {8745}let v_1956: bool = not-caught-fail(early_secret_144) in
                                {8747}let m_190: bitstring = (if v_1956 then zero else caught-fail) in
                                {8748}let h_507: bitstring = (if v_1956 then catch-fail(hash(@8_backend_h,m_190)) else caught-fail) in
                                {8749}let v_1957: bool = not-caught-fail(h_507) in
                                {8746}let l_536: label = (if v_1956 then tls13_ext_res_binder else caught-fail) in
                                {8750}let x_609: bitstring = (if v_1957 then (l_536,h_507) else caught-fail) in
                                {8751}let binder_key_96: bitstring = (if v_1956 then catch-fail((if v_1957 then hmac(@8_backend_h,early_secret_144,x_609) else fail-any)) else caught-fail) in
                                {8752}let v_1958: bool = not-caught-fail(binder_key_96) in
                                {8753}let v_1959: bitstring = (if v_1954 then catch-fail((if v_1956 then (if v_1958 then (early_secret_144,binder_key_96) else fail-any) else fail-any)) else caught-fail) in
                                {8754}let v_1960: bool = (not-caught-fail(v_1959) && success?(1-proj-2-tuple(v_1959))) in
                                {8755}let kb_96: mac_key = (if v_1960 then 2-proj-2-tuple(v_1959) else caught-fail) in
                                {8756}let es_142: bitstring = (if v_1960 then 1-proj-2-tuple(v_1959) else caught-fail) in
                                {8739}let offer_27: params = (if v_1954 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_8,SNI(backend_dom_1),ech_ext_20,@8_i_extra_ext,trunc_client_psk_ext(id_96)) else caught-fail) in
                                {8740}let cur_log'_27: bitstring = (if v_1954 then (cur_log_IN1_HRR_5,CH(i_cr_14,offer_27)) else caught-fail) in
                                {8757}let binders_26: bitstring = (if v_1960 then catch-fail(hmac(@8_backend_h,kb_96,cur_log'_27)) else caught-fail) in
                                {8758}let v_1961: bool = not-caught-fail(binders_26) in
                                {8759}let v_1962: bitstring = catch-fail((if v_1954 then (if v_1960 then (if v_1961 then (client_psk_ext(id_96,binders_26),(psk_214,id_96,es_142,is_safe_84)) else fail-any) else fail-any) else fail-any)) in
                                {8760}let v_1963: bool = (not-caught-fail(v_1962) && success?(1-proj-2-tuple(v_1962))) in
                                {8761}let psk_data_48: bitstring = (if v_1963 then 2-proj-2-tuple(v_1962) else caught-fail) in
                                {8762}let psk_ext_97: preSharedKeyExt = (if v_1963 then 1-proj-2-tuple(v_1962) else caught-fail) in
                                {8765}new fake_id_27[]: identityPsk;
                                {8766}new fake_binder_27[]: bitstring;
                                {8772}let v_1964: hpkeContext = (if v_1963 then catch-fail(context_2) else caught-fail) in
                                {8773}let v_1965: bool = (not-caught-fail(v_1964) && ((S =nf 1-proj-hpke_context(v_1964)) && success?(1-proj-hpke_context(v_1964)))) in
                                {8774}let base_nonce_27: bitstring = (if v_1965 then 3-proj-hpke_context(v_1964) else caught-fail) in
                                {8775}let key_27: aead_key = (if v_1965 then 2-proj-hpke_context(v_1964) else caught-fail) in
                                {8771}let n_24: nat = (if v_1963 then 2 else caught-fail) in
                                {8768}let o_ech_ext_ADD_22: echExt = (if v_1963 then ECHClientHelloOuter(ech_h_18,ech_a_18,config_id_18,zero,zero) else caught-fail) in
                                {8767}let o_psk_ext_28: preSharedKeyExt = (if v_1963 then (if @8_use_psk then client_psk_ext(fake_id_27,fake_binder_27) else empty_psk_ext) else caught-fail) in
                                {8769}let o_offer_ADD_22: params = (if v_1963 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_12,SNI(o_dom_14),o_ech_ext_ADD_22,empty_extra_ext,o_psk_ext_28) else caught-fail) in
                                {8770}let o_client_hello_ADD_22: msg = (if v_1963 then CH(o_cr_18,o_offer_ADD_22) else caught-fail) in
                                {8763}let i_offer_22: params = (if v_1963 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_8,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_97) else caught-fail) in
                                {8764}let i_client_hello_29: msg = (if v_1963 then CH(i_cr_14,i_offer_22) else caught-fail) in
                                {8776}let payload_28: bitstring = (if v_1963 then catch-fail((if v_1965 then aead_enc(ech_a_18,key_27,(base_nonce_27,n_24),o_client_hello_ADD_22,i_client_hello_29) else fail-any)) else caught-fail) in
                                {8777}let v_1966: bool = not-caught-fail(payload_28) in
                                {8778}let o_ech_ext_28: echExt = (if v_1966 then ECHClientHelloOuter(ech_h_18,ech_a_18,config_id_18,zero,payload_28) else caught-fail) in
                                {8779}let o_offer_48: params = (if v_1966 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_12,SNI(o_dom_14),o_ech_ext_28,empty_extra_ext,o_psk_ext_28) else caught-fail) in
                                {8780}let (o_client_hello'_16: msg,i_client_hello'_17: msg,i_cr'_16: bytes32,i_kex_data'_16: bitstring,psk_data'_41: bitstring) = (if v_1963 then (if v_1966 then (CH(o_cr_18,o_offer_48),i_client_hello_29,i_cr_14,i_kex_data_13,psk_data_48) else fail-any) else fail-any) in
                                {8781}out(io, o_client_hello'_16);
                                {8782}in(io, server_hello'_36: msg);
                                {8783}let SH(B32(sr24'_16: bytes24,sr8'_16: bytes8),params'_16: params) = server_hello'_36 in
                                {8785}let sh_modified_22: msg = SH(B32(sr24'_16,zero8),params'_16) in
                                {8784}let cur_log_IN1_HRR_IN2_16: bitstring = (cur_log_IN1_HRR_5,i_client_hello'_17) in
                                {8786}let cur_log_sh_22: bitstring = (cur_log_IN1_HRR_IN2_16,sh_modified_22) in
                                {8787}let transcript_ech_conf_22: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_22)) in
                                {8788}let v_1967: bool = not-caught-fail(transcript_ech_conf_22) in
                                {8790}let k_208: bitstring = (if v_1967 then catch-fail(b32_2_b(get_random(i_client_hello'_17))) else caught-fail) in
                                {8791}let v_1968: bool = not-caught-fail(k_208) in
                                {8789}let s_206: bitstring = (if v_1967 then zero else caught-fail) in
                                {8792}let k_209: bitstring = (if v_1967 then catch-fail((if v_1968 then hmac(@8_backend_h,s_206,k_208) else fail-any)) else caught-fail) in
                                {8793}let v_1969: bool = not-caught-fail(k_209) in
                                {8794}let l_537: label = (if v_1969 then ech_accept_confirmation else caught-fail) in
                                {8795}let x_610: bitstring = (if v_1969 then (l_537,cur_log_sh_22) else caught-fail) in
                                {8796}let sr8_28: bytes8 = (if v_1967 then catch-fail(crop_into_bytes8((if v_1969 then hmac(@8_backend_h,k_209,x_610) else fail-any))) else caught-fail) in
                                {8797}let v_1970: bool = not-caught-fail(sr8_28) in
                                {8798}if (B32(sr24'_16,sr8'_16) = (if v_1967 then (if v_1970 then B32(sr24'_16,sr8_28) else fail-any) else fail-any)) then
                                {8799}let (x_611: bitstring,g_55: group) = i_kex_data'_16 in
                                {8800}let (psk_offer_46: preSharedKey,id_offer_46: identityPsk,es_offer_46: bitstring,is_safe_offer_46: bool) = psk_data'_41 in
                                {8801}event Client_PSKOffer(id_client_5,psk_offer_46,id_offer_46,is_safe_offer_46);
                                {8802}event Client_Rand_client(id_client_5,i_cr'_16);
                                {8803}event Client_DH_client(id_client_5,dh_pub(g_55,x_611));
                                {8804}event Client_server_domain(id_client_5,backend_dom_1);
                                {8805}let SH(sr_54: bytes32,mode_52: params) = server_hello'_36 in
                                {8806}event Client_Rand_server(id_client_5,sr_54);
                                {8807}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_55,gy_47: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_98: preSharedKeyExt) = mode_52 in
                                (
                                    {8809}event Client_DH_server(id_client_5,gy_47);
                                    {8810}let v_1971: bool = (psk_ext_98 = empty_psk_ext) in
                                    {8811}let psk_215: preSharedKey = (if v_1971 then NoPsk else caught-fail) in
                                    {8813}let k_210: bitstring = (if v_1971 then catch-fail(psk2b(psk_215)) else caught-fail) in
                                    {8814}let v_1972: bool = not-caught-fail(k_210) in
                                    {8812}let s_207: bitstring = (if v_1971 then zero else caught-fail) in
                                    {8815}let early_secret_145: bitstring = (if v_1971 then catch-fail((if v_1972 then hmac(@8_backend_h,s_207,k_210) else fail-any)) else caught-fail) in
                                    {8816}let v_1973: bool = not-caught-fail(early_secret_145) in
                                    {8818}let m_191: bitstring = (if v_1973 then zero else caught-fail) in
                                    {8819}let h_508: bitstring = (if v_1973 then catch-fail(hash(@8_backend_h,m_191)) else caught-fail) in
                                    {8820}let v_1974: bool = not-caught-fail(h_508) in
                                    {8817}let l_538: label = (if v_1973 then tls13_ext_res_binder else caught-fail) in
                                    {8821}let x_612: bitstring = (if v_1974 then (l_538,h_508) else caught-fail) in
                                    {8822}let binder_key_97: bitstring = (if v_1973 then catch-fail((if v_1974 then hmac(@8_backend_h,early_secret_145,x_612) else fail-any)) else caught-fail) in
                                    {8823}let v_1975: bool = not-caught-fail(binder_key_97) in
                                    {8824}let v_1976: bitstring = (if v_1971 then catch-fail((if v_1973 then (if v_1975 then (early_secret_145,binder_key_97) else fail-any) else fail-any)) else caught-fail) in
                                    {8825}let v_1977: bool = (not-caught-fail(v_1976) && success?(1-proj-2-tuple(v_1976))) in
                                    {8826}let kb_97: mac_key = (if v_1977 then 2-proj-2-tuple(v_1976) else caught-fail) in
                                    {8827}let es_143: bitstring = (if v_1977 then 1-proj-2-tuple(v_1976) else caught-fail) in
                                    {8828}let v_1978: bitstring = (if not(v_1971) then catch-fail(psk_data'_41) else caught-fail) in
                                    {8829}let v_1979: bool = (not-caught-fail(v_1978) && success?(1-proj-4-tuple(v_1978))) in
                                    {8830}let is_safe_85: bool = (if v_1979 then 4-proj-4-tuple(v_1978) else caught-fail) in
                                    {8831}let es_144: bitstring = (if v_1979 then 3-proj-4-tuple(v_1978) else caught-fail) in
                                    {8832}let id_97: identityPsk = (if v_1979 then 2-proj-4-tuple(v_1978) else caught-fail) in
                                    {8833}let psk_216: preSharedKey = (if v_1979 then 1-proj-4-tuple(v_1978) else caught-fail) in
                                    {8834}let (psk_217: preSharedKey,early_secret_146: bitstring,valid_46: bool,safe_psk_49: bool) = (if v_1971 then (if v_1977 then (NoPsk,es_143,true,false) else fail-any) else (if v_1979 then (psk_216,es_144,((psk_216 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_98)),is_safe_85) else fail-any)) in
                                    {8835}event Client_PSKChoosen(id_client_5,psk_217,safe_psk_49);
                                    {8836}if valid_46 then
                                    (
                                        {8839}new s_208[]: seed;
                                        {8837}let gxy_94: element = catch-fail(dh_decap_fun(g_55,gy_47,x_611)) in
                                        {8838}let v_1980: bool = not-caught-fail(gxy_94) in
                                        {8840}let gxy_95: element = (if v_1980 then gxy_94 else dh_f(s_208)) in
                                        {8841}event Client_DH_gxy(id_client_5,gxy_95);
                                        {8843}let m_192: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {8844}let v_1981: bool = not-caught-fail(m_192) in
                                        {8845}let h_509: bitstring = (if v_1981 then catch-fail(hash(@8_backend_h,m_192)) else caught-fail) in
                                        {8846}let v_1982: bool = not-caught-fail(h_509) in
                                        {8842}let l_539: label = tls13_derived in
                                        {8847}let x_613: bitstring = (if v_1982 then (l_539,h_509) else caught-fail) in
                                        {8848}let extra_99: bitstring = catch-fail((if v_1981 then (if v_1982 then hmac(@8_backend_h,early_secret_146,x_613) else fail-any) else fail-any)) in
                                        {8849}let v_1983: bool = not-caught-fail(extra_99) in
                                        {8850}let handshake_secret_47: bitstring = (if v_1983 then hmac(@8_backend_h,extra_99,gxy_95) else fail-any) in
                                        {8852}let m_193: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {8853}let v_1984: bool = not-caught-fail(m_193) in
                                        {8854}let h_510: bitstring = (if v_1984 then catch-fail(hash(@8_backend_h,m_193)) else caught-fail) in
                                        {8855}let v_1985: bool = not-caught-fail(h_510) in
                                        {8851}let l_540: label = tls13_derived in
                                        {8856}let x_614: bitstring = (if v_1985 then (l_540,h_510) else caught-fail) in
                                        {8857}let extra_100: bitstring = catch-fail((if v_1984 then (if v_1985 then hmac(@8_backend_h,handshake_secret_47,x_614) else fail-any) else fail-any)) in
                                        {8858}let v_1986: bool = not-caught-fail(extra_100) in
                                        {8859}let k_211: bitstring = (if v_1986 then zero else caught-fail) in
                                        {8860}let master_secret_101: bitstring = (if v_1986 then catch-fail(hmac(@8_backend_h,handshake_secret_47,k_211)) else caught-fail) in
                                        {8861}let v_1987: bool = not-caught-fail(master_secret_101) in
                                        {8808}let cur_log2_96: bitstring = (cur_log_IN1_HRR_IN2_16,server_hello'_36) in
                                        {8863}let h_511: bitstring = (if v_1987 then catch-fail(hash(@8_backend_h,cur_log2_96)) else caught-fail) in
                                        {8864}let v_1988: bool = not-caught-fail(h_511) in
                                        {8862}let l_541: label = (if v_1987 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {8865}let x_615: bitstring = (if v_1988 then (l_541,h_511) else caught-fail) in
                                        {8866}let client_hts_47: bitstring = (if v_1987 then catch-fail((if v_1988 then hmac(@8_backend_h,handshake_secret_47,x_615) else fail-any)) else caught-fail) in
                                        {8867}let v_1989: bool = not-caught-fail(client_hts_47) in
                                        {8869}let h_512: bitstring = (if v_1989 then catch-fail(hash(@8_backend_h,cur_log2_96)) else caught-fail) in
                                        {8870}let v_1990: bool = not-caught-fail(h_512) in
                                        {8868}let l_542: label = (if v_1989 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {8871}let x_616: bitstring = (if v_1990 then (l_542,h_512) else caught-fail) in
                                        {8872}let server_hts_47: bitstring = (if v_1989 then catch-fail((if v_1990 then hmac(@8_backend_h,handshake_secret_47,x_616) else fail-any)) else caught-fail) in
                                        {8873}let v_1991: bool = not-caught-fail(server_hts_47) in
                                        {8875}let h_513: bitstring = (if v_1991 then zero else caught-fail) in
                                        {8874}let l_543: label = (if v_1991 then tls13_key else caught-fail) in
                                        {8876}let x_617: bitstring = (if v_1991 then (l_543,h_513) else caught-fail) in
                                        {8877}let client_wkh_47: bitstring = (if v_1991 then catch-fail(hmac(@8_backend_h,client_hts_47,x_617)) else caught-fail) in
                                        {8878}let v_1992: bool = not-caught-fail(client_wkh_47) in
                                        {8880}let h_514: bitstring = (if v_1992 then zero else caught-fail) in
                                        {8879}let l_544: label = (if v_1992 then tls13_key else caught-fail) in
                                        {8881}let x_618: bitstring = (if v_1992 then (l_544,h_514) else caught-fail) in
                                        {8882}let server_wkh_47: bitstring = (if v_1992 then catch-fail(hmac(@8_backend_h,server_hts_47,x_618)) else caught-fail) in
                                        {8883}let v_1993: bool = not-caught-fail(server_wkh_47) in
                                        {8885}let h_515: bitstring = (if v_1993 then zero else caught-fail) in
                                        {8884}let l_545: label = (if v_1993 then tls13_finished else caught-fail) in
                                        {8886}let x_619: bitstring = (if v_1993 then (l_545,h_515) else caught-fail) in
                                        {8887}let client_fk_47: bitstring = (if v_1993 then catch-fail(hmac(@8_backend_h,client_hts_47,x_619)) else caught-fail) in
                                        {8888}let v_1994: bool = not-caught-fail(client_fk_47) in
                                        {8890}let h_516: bitstring = (if v_1994 then zero else caught-fail) in
                                        {8889}let l_546: label = (if v_1994 then tls13_finished else caught-fail) in
                                        {8891}let x_620: bitstring = (if v_1994 then (l_546,h_516) else caught-fail) in
                                        {8892}let server_fk_47: bitstring = (if v_1994 then catch-fail(hmac(@8_backend_h,server_hts_47,x_620)) else caught-fail) in
                                        {8893}let v_1995: bool = not-caught-fail(server_fk_47) in
                                        {8894}let (master_secret_102: bitstring,chk_54: aead_key,shk_53: aead_key,cfin_54: mac_key,sfin_53: mac_key) = (if v_1986 then (if v_1987 then (if v_1989 then (if v_1991 then (if v_1992 then (if v_1993 then (if v_1994 then (if v_1995 then (master_secret_101,client_wkh_47,server_wkh_47,client_fk_47,server_fk_47) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {8895}event Client_chk(id_client_5,chk_54);
                                        {8896}event Client_shk(id_client_5,shk_53);
                                        {8897}event Client_cfin(id_client_5,cfin_54);
                                        {8898}event Client_sfin(id_client_5,sfin_53);
                                        {8899}in(io, enc_ee_msg_46: bitstring);
                                        {8900}let ee_msg_51: msg = aead_dec(@8_backend_a,shk_53,0,zero,enc_ee_msg_46) in
                                        {8901}let EE(ech_ee_46: echExt,extra_ee_46: extraExt) = ee_msg_51 in
                                        {8902}let cur_log2_97: bitstring = (cur_log2_96,ee_msg_51) in
                                        {8903}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_16,sr_54,@8_backend_h,@8_backend_a,c_dom_6,backend_dom_1,psk_217,safe_psk_49,@8_comp_psk,master_secret_102,chk_54,0,shk_53,1,cfin_54,sfin_53,cur_log2_97)))
                                    )
                                    else
                                        {8904}out(io, illegal_parameter)
                                )
                                else
                                    {8905}out(io, illegal_parameter)
                        )
                        else
                            {8907}let psk_218: preSharedKey = NoPsk in
                            {8909}let k_212: bitstring = catch-fail(psk2b(psk_218)) in
                            {8910}let v_1996: bool = not-caught-fail(k_212) in
                            {8908}let s_209: bitstring = zero in
                            {8911}let early_secret_147: bitstring = catch-fail((if v_1996 then hmac(@8_backend_h,s_209,k_212) else fail-any)) in
                            {8912}let v_1997: bool = not-caught-fail(early_secret_147) in
                            {8914}let m_194: bitstring = (if v_1997 then zero else caught-fail) in
                            {8915}let h_517: bitstring = (if v_1997 then catch-fail(hash(@8_backend_h,m_194)) else caught-fail) in
                            {8916}let v_1998: bool = not-caught-fail(h_517) in
                            {8913}let l_547: label = (if v_1997 then tls13_ext_res_binder else caught-fail) in
                            {8917}let x_621: bitstring = (if v_1998 then (l_547,h_517) else caught-fail) in
                            {8918}let binder_key_98: bitstring = (if v_1997 then catch-fail((if v_1998 then hmac(@8_backend_h,early_secret_147,x_621) else fail-any)) else caught-fail) in
                            {8919}let v_1999: bool = not-caught-fail(binder_key_98) in
                            {8920}let v_2000: bitstring = catch-fail((if v_1997 then (if v_1999 then (early_secret_147,binder_key_98) else fail-any) else fail-any)) in
                            {8921}let v_2001: bool = (not-caught-fail(v_2000) && success?(1-proj-2-tuple(v_2000))) in
                            {8922}let kb_98: mac_key = (if v_2001 then 2-proj-2-tuple(v_2000) else caught-fail) in
                            {8923}let es_145: bitstring = (if v_2001 then 1-proj-2-tuple(v_2000) else caught-fail) in
                            {8924}let v_2002: bitstring = catch-fail((if v_2001 then (empty_psk_ext,(NoPsk,zero,es_145,false)) else fail-any)) in
                            {8925}let v_2003: bool = (not-caught-fail(v_2002) && success?(1-proj-2-tuple(v_2002))) in
                            {8926}let psk_data_49: bitstring = (if v_2003 then 2-proj-2-tuple(v_2002) else caught-fail) in
                            {8927}let psk_ext_99: preSharedKeyExt = (if v_2003 then 1-proj-2-tuple(v_2002) else caught-fail) in
                            {8930}new fake_id_28[]: identityPsk;
                            {8931}new fake_binder_28[]: bitstring;
                            {8937}let v_2004: hpkeContext = (if v_2003 then catch-fail(context_2) else caught-fail) in
                            {8938}let v_2005: bool = (not-caught-fail(v_2004) && ((S =nf 1-proj-hpke_context(v_2004)) && success?(1-proj-hpke_context(v_2004)))) in
                            {8939}let base_nonce_28: bitstring = (if v_2005 then 3-proj-hpke_context(v_2004) else caught-fail) in
                            {8940}let key_28: aead_key = (if v_2005 then 2-proj-hpke_context(v_2004) else caught-fail) in
                            {8936}let n_25: nat = (if v_2003 then 2 else caught-fail) in
                            {8933}let o_ech_ext_ADD_23: echExt = (if v_2003 then ECHClientHelloOuter(ech_h_18,ech_a_18,config_id_18,zero,zero) else caught-fail) in
                            {8932}let o_psk_ext_29: preSharedKeyExt = (if v_2003 then (if @8_use_psk then client_psk_ext(fake_id_28,fake_binder_28) else empty_psk_ext) else caught-fail) in
                            {8934}let o_offer_ADD_23: params = (if v_2003 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_12,SNI(o_dom_14),o_ech_ext_ADD_23,empty_extra_ext,o_psk_ext_29) else caught-fail) in
                            {8935}let o_client_hello_ADD_23: msg = (if v_2003 then CH(o_cr_18,o_offer_ADD_23) else caught-fail) in
                            {8928}let i_offer_23: params = (if v_2003 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_8,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_99) else caught-fail) in
                            {8929}let i_client_hello_30: msg = (if v_2003 then CH(i_cr_14,i_offer_23) else caught-fail) in
                            {8941}let payload_29: bitstring = (if v_2003 then catch-fail((if v_2005 then aead_enc(ech_a_18,key_28,(base_nonce_28,n_25),o_client_hello_ADD_23,i_client_hello_30) else fail-any)) else caught-fail) in
                            {8942}let v_2006: bool = not-caught-fail(payload_29) in
                            {8943}let o_ech_ext_29: echExt = (if v_2006 then ECHClientHelloOuter(ech_h_18,ech_a_18,config_id_18,zero,payload_29) else caught-fail) in
                            {8944}let o_offer_49: params = (if v_2006 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_12,SNI(o_dom_14),o_ech_ext_29,empty_extra_ext,o_psk_ext_29) else caught-fail) in
                            {8945}let (o_client_hello'_17: msg,i_client_hello'_18: msg,i_cr'_17: bytes32,i_kex_data'_17: bitstring,psk_data'_42: bitstring) = (if v_2003 then (if v_2006 then (CH(o_cr_18,o_offer_49),i_client_hello_30,i_cr_14,i_kex_data_13,psk_data_49) else fail-any) else fail-any) in
                            {8946}out(io, o_client_hello'_17);
                            {8947}in(io, server_hello'_37: msg);
                            {8948}let SH(B32(sr24'_17: bytes24,sr8'_17: bytes8),params'_17: params) = server_hello'_37 in
                            {8950}let sh_modified_23: msg = SH(B32(sr24'_17,zero8),params'_17) in
                            {8949}let cur_log_IN1_HRR_IN2_17: bitstring = (cur_log_IN1_HRR_5,i_client_hello'_18) in
                            {8951}let cur_log_sh_23: bitstring = (cur_log_IN1_HRR_IN2_17,sh_modified_23) in
                            {8952}let transcript_ech_conf_23: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_23)) in
                            {8953}let v_2007: bool = not-caught-fail(transcript_ech_conf_23) in
                            {8955}let k_213: bitstring = (if v_2007 then catch-fail(b32_2_b(get_random(i_client_hello'_18))) else caught-fail) in
                            {8956}let v_2008: bool = not-caught-fail(k_213) in
                            {8954}let s_210: bitstring = (if v_2007 then zero else caught-fail) in
                            {8957}let k_214: bitstring = (if v_2007 then catch-fail((if v_2008 then hmac(@8_backend_h,s_210,k_213) else fail-any)) else caught-fail) in
                            {8958}let v_2009: bool = not-caught-fail(k_214) in
                            {8959}let l_548: label = (if v_2009 then ech_accept_confirmation else caught-fail) in
                            {8960}let x_622: bitstring = (if v_2009 then (l_548,cur_log_sh_23) else caught-fail) in
                            {8961}let sr8_29: bytes8 = (if v_2007 then catch-fail(crop_into_bytes8((if v_2009 then hmac(@8_backend_h,k_214,x_622) else fail-any))) else caught-fail) in
                            {8962}let v_2010: bool = not-caught-fail(sr8_29) in
                            {8963}if (B32(sr24'_17,sr8'_17) = (if v_2007 then (if v_2010 then B32(sr24'_17,sr8_29) else fail-any) else fail-any)) then
                            {8964}let (x_623: bitstring,g_56: group) = i_kex_data'_17 in
                            {8965}let (psk_offer_47: preSharedKey,id_offer_47: identityPsk,es_offer_47: bitstring,is_safe_offer_47: bool) = psk_data'_42 in
                            {8966}event Client_PSKOffer(id_client_5,psk_offer_47,id_offer_47,is_safe_offer_47);
                            {8967}event Client_Rand_client(id_client_5,i_cr'_17);
                            {8968}event Client_DH_client(id_client_5,dh_pub(g_56,x_623));
                            {8969}event Client_server_domain(id_client_5,backend_dom_1);
                            {8970}let SH(sr_55: bytes32,mode_53: params) = server_hello'_37 in
                            {8971}event Client_Rand_server(id_client_5,sr_55);
                            {8972}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_56,gy_48: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_100: preSharedKeyExt) = mode_53 in
                            (
                                {8974}event Client_DH_server(id_client_5,gy_48);
                                {8975}let v_2011: bool = (psk_ext_100 = empty_psk_ext) in
                                {8976}let psk_219: preSharedKey = (if v_2011 then NoPsk else caught-fail) in
                                {8978}let k_215: bitstring = (if v_2011 then catch-fail(psk2b(psk_219)) else caught-fail) in
                                {8979}let v_2012: bool = not-caught-fail(k_215) in
                                {8977}let s_211: bitstring = (if v_2011 then zero else caught-fail) in
                                {8980}let early_secret_148: bitstring = (if v_2011 then catch-fail((if v_2012 then hmac(@8_backend_h,s_211,k_215) else fail-any)) else caught-fail) in
                                {8981}let v_2013: bool = not-caught-fail(early_secret_148) in
                                {8983}let m_195: bitstring = (if v_2013 then zero else caught-fail) in
                                {8984}let h_518: bitstring = (if v_2013 then catch-fail(hash(@8_backend_h,m_195)) else caught-fail) in
                                {8985}let v_2014: bool = not-caught-fail(h_518) in
                                {8982}let l_549: label = (if v_2013 then tls13_ext_res_binder else caught-fail) in
                                {8986}let x_624: bitstring = (if v_2014 then (l_549,h_518) else caught-fail) in
                                {8987}let binder_key_99: bitstring = (if v_2013 then catch-fail((if v_2014 then hmac(@8_backend_h,early_secret_148,x_624) else fail-any)) else caught-fail) in
                                {8988}let v_2015: bool = not-caught-fail(binder_key_99) in
                                {8989}let v_2016: bitstring = (if v_2011 then catch-fail((if v_2013 then (if v_2015 then (early_secret_148,binder_key_99) else fail-any) else fail-any)) else caught-fail) in
                                {8990}let v_2017: bool = (not-caught-fail(v_2016) && success?(1-proj-2-tuple(v_2016))) in
                                {8991}let kb_99: mac_key = (if v_2017 then 2-proj-2-tuple(v_2016) else caught-fail) in
                                {8992}let es_146: bitstring = (if v_2017 then 1-proj-2-tuple(v_2016) else caught-fail) in
                                {8993}let v_2018: bitstring = (if not(v_2011) then catch-fail(psk_data'_42) else caught-fail) in
                                {8994}let v_2019: bool = (not-caught-fail(v_2018) && success?(1-proj-4-tuple(v_2018))) in
                                {8995}let is_safe_86: bool = (if v_2019 then 4-proj-4-tuple(v_2018) else caught-fail) in
                                {8996}let es_147: bitstring = (if v_2019 then 3-proj-4-tuple(v_2018) else caught-fail) in
                                {8997}let id_98: identityPsk = (if v_2019 then 2-proj-4-tuple(v_2018) else caught-fail) in
                                {8998}let psk_220: preSharedKey = (if v_2019 then 1-proj-4-tuple(v_2018) else caught-fail) in
                                {8999}let (psk_221: preSharedKey,early_secret_149: bitstring,valid_47: bool,safe_psk_50: bool) = (if v_2011 then (if v_2017 then (NoPsk,es_146,true,false) else fail-any) else (if v_2019 then (psk_220,es_147,((psk_220 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_100)),is_safe_86) else fail-any)) in
                                {9000}event Client_PSKChoosen(id_client_5,psk_221,safe_psk_50);
                                {9001}if valid_47 then
                                (
                                    {9004}new s_212[]: seed;
                                    {9002}let gxy_96: element = catch-fail(dh_decap_fun(g_56,gy_48,x_623)) in
                                    {9003}let v_2020: bool = not-caught-fail(gxy_96) in
                                    {9005}let gxy_97: element = (if v_2020 then gxy_96 else dh_f(s_212)) in
                                    {9006}event Client_DH_gxy(id_client_5,gxy_97);
                                    {9008}let m_196: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                    {9009}let v_2021: bool = not-caught-fail(m_196) in
                                    {9010}let h_519: bitstring = (if v_2021 then catch-fail(hash(@8_backend_h,m_196)) else caught-fail) in
                                    {9011}let v_2022: bool = not-caught-fail(h_519) in
                                    {9007}let l_550: label = tls13_derived in
                                    {9012}let x_625: bitstring = (if v_2022 then (l_550,h_519) else caught-fail) in
                                    {9013}let extra_101: bitstring = catch-fail((if v_2021 then (if v_2022 then hmac(@8_backend_h,early_secret_149,x_625) else fail-any) else fail-any)) in
                                    {9014}let v_2023: bool = not-caught-fail(extra_101) in
                                    {9015}let handshake_secret_48: bitstring = (if v_2023 then hmac(@8_backend_h,extra_101,gxy_97) else fail-any) in
                                    {9017}let m_197: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                    {9018}let v_2024: bool = not-caught-fail(m_197) in
                                    {9019}let h_520: bitstring = (if v_2024 then catch-fail(hash(@8_backend_h,m_197)) else caught-fail) in
                                    {9020}let v_2025: bool = not-caught-fail(h_520) in
                                    {9016}let l_551: label = tls13_derived in
                                    {9021}let x_626: bitstring = (if v_2025 then (l_551,h_520) else caught-fail) in
                                    {9022}let extra_102: bitstring = catch-fail((if v_2024 then (if v_2025 then hmac(@8_backend_h,handshake_secret_48,x_626) else fail-any) else fail-any)) in
                                    {9023}let v_2026: bool = not-caught-fail(extra_102) in
                                    {9024}let k_216: bitstring = (if v_2026 then zero else caught-fail) in
                                    {9025}let master_secret_103: bitstring = (if v_2026 then catch-fail(hmac(@8_backend_h,handshake_secret_48,k_216)) else caught-fail) in
                                    {9026}let v_2027: bool = not-caught-fail(master_secret_103) in
                                    {8973}let cur_log2_98: bitstring = (cur_log_IN1_HRR_IN2_17,server_hello'_37) in
                                    {9028}let h_521: bitstring = (if v_2027 then catch-fail(hash(@8_backend_h,cur_log2_98)) else caught-fail) in
                                    {9029}let v_2028: bool = not-caught-fail(h_521) in
                                    {9027}let l_552: label = (if v_2027 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {9030}let x_627: bitstring = (if v_2028 then (l_552,h_521) else caught-fail) in
                                    {9031}let client_hts_48: bitstring = (if v_2027 then catch-fail((if v_2028 then hmac(@8_backend_h,handshake_secret_48,x_627) else fail-any)) else caught-fail) in
                                    {9032}let v_2029: bool = not-caught-fail(client_hts_48) in
                                    {9034}let h_522: bitstring = (if v_2029 then catch-fail(hash(@8_backend_h,cur_log2_98)) else caught-fail) in
                                    {9035}let v_2030: bool = not-caught-fail(h_522) in
                                    {9033}let l_553: label = (if v_2029 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {9036}let x_628: bitstring = (if v_2030 then (l_553,h_522) else caught-fail) in
                                    {9037}let server_hts_48: bitstring = (if v_2029 then catch-fail((if v_2030 then hmac(@8_backend_h,handshake_secret_48,x_628) else fail-any)) else caught-fail) in
                                    {9038}let v_2031: bool = not-caught-fail(server_hts_48) in
                                    {9040}let h_523: bitstring = (if v_2031 then zero else caught-fail) in
                                    {9039}let l_554: label = (if v_2031 then tls13_key else caught-fail) in
                                    {9041}let x_629: bitstring = (if v_2031 then (l_554,h_523) else caught-fail) in
                                    {9042}let client_wkh_48: bitstring = (if v_2031 then catch-fail(hmac(@8_backend_h,client_hts_48,x_629)) else caught-fail) in
                                    {9043}let v_2032: bool = not-caught-fail(client_wkh_48) in
                                    {9045}let h_524: bitstring = (if v_2032 then zero else caught-fail) in
                                    {9044}let l_555: label = (if v_2032 then tls13_key else caught-fail) in
                                    {9046}let x_630: bitstring = (if v_2032 then (l_555,h_524) else caught-fail) in
                                    {9047}let server_wkh_48: bitstring = (if v_2032 then catch-fail(hmac(@8_backend_h,server_hts_48,x_630)) else caught-fail) in
                                    {9048}let v_2033: bool = not-caught-fail(server_wkh_48) in
                                    {9050}let h_525: bitstring = (if v_2033 then zero else caught-fail) in
                                    {9049}let l_556: label = (if v_2033 then tls13_finished else caught-fail) in
                                    {9051}let x_631: bitstring = (if v_2033 then (l_556,h_525) else caught-fail) in
                                    {9052}let client_fk_48: bitstring = (if v_2033 then catch-fail(hmac(@8_backend_h,client_hts_48,x_631)) else caught-fail) in
                                    {9053}let v_2034: bool = not-caught-fail(client_fk_48) in
                                    {9055}let h_526: bitstring = (if v_2034 then zero else caught-fail) in
                                    {9054}let l_557: label = (if v_2034 then tls13_finished else caught-fail) in
                                    {9056}let x_632: bitstring = (if v_2034 then (l_557,h_526) else caught-fail) in
                                    {9057}let server_fk_48: bitstring = (if v_2034 then catch-fail(hmac(@8_backend_h,server_hts_48,x_632)) else caught-fail) in
                                    {9058}let v_2035: bool = not-caught-fail(server_fk_48) in
                                    {9059}let (master_secret_104: bitstring,chk_55: aead_key,shk_54: aead_key,cfin_55: mac_key,sfin_54: mac_key) = (if v_2026 then (if v_2027 then (if v_2029 then (if v_2031 then (if v_2032 then (if v_2033 then (if v_2034 then (if v_2035 then (master_secret_103,client_wkh_48,server_wkh_48,client_fk_48,server_fk_48) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {9060}event Client_chk(id_client_5,chk_55);
                                    {9061}event Client_shk(id_client_5,shk_54);
                                    {9062}event Client_cfin(id_client_5,cfin_55);
                                    {9063}event Client_sfin(id_client_5,sfin_54);
                                    {9064}in(io, enc_ee_msg_47: bitstring);
                                    {9065}let ee_msg_52: msg = aead_dec(@8_backend_a,shk_54,0,zero,enc_ee_msg_47) in
                                    {9066}let EE(ech_ee_47: echExt,extra_ee_47: extraExt) = ee_msg_52 in
                                    {9067}let cur_log2_99: bitstring = (cur_log2_98,ee_msg_52) in
                                    {9068}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_17,sr_55,@8_backend_h,@8_backend_a,c_dom_6,backend_dom_1,psk_221,safe_psk_50,@8_comp_psk,master_secret_104,chk_55,0,shk_54,1,cfin_55,sfin_54,cur_log2_99)))
                                )
                                else
                                    {9069}out(io, illegal_parameter)
                            )
                            else
                                {9070}out(io, illegal_parameter)
                    )
                    else
                        {9072}let ech_config(config_id_19: configId,ech_g_19: group,pkR_21: element,o_dom_15: domain,ech_h_19: hash_alg,ech_a_19: aead_alg) = ech_conf_2 in
                        {9073}new rand24_22[]: bytes24;
                        {9074}new rand8_22[]: bytes8;
                        {9077}new s_213[]: seed;
                        {9078}let gx_51: element = dh_pub(@8_tls_g,dh_k(s_213)) in
                        {9079}let v_2036: bitstring = (dh_k(s_213),gx_51) in
                        {9080}let v_2037: bool = success?(1-proj-2-tuple(v_2036)) in
                        {9081}let gx_52: element = (if v_2037 then 2-proj-2-tuple(v_2036) else caught-fail) in
                        {9082}let x_633: bitstring = (if v_2037 then 1-proj-2-tuple(v_2036) else caught-fail) in
                        {9076}let send_key_share_17: bool = true in
                        {9083}let kex_21: kex_alg = (if v_2037 then (if send_key_share_17 then DHE_kex(@8_tls_g,gx_52) else DHE_group(@8_tls_g)) else caught-fail) in
                        {9084}let (o_kex_ext_13: keyShareExt,kex_data_5: bitstring) = (if v_2037 then (client_kex_ext(kex_21),(x_633,@8_tls_g)) else fail-any) in
                        {9075}let o_cr_19: bytes32 = B32(rand24_22,rand8_22) in
                        {9071}let cur_log_OU1_HRR_5: bitstring = ((zero,o_client_hello_7),server_hello_6) in
                        {9085}if @8_use_grease then
                        (
                            {9087}if @8_use_psk then
                            (
                                {9086}let extra_103: extraExt = empty_extra_ext in
                                {9088}let (psk_222: preSharedKey,id_99: identityPsk,old_es_13: bitstring,is_safe_87: bool) = psk_data_46 in
                                (
                                    {9092}let k_217: bitstring = catch-fail(psk2b(psk_222)) in
                                    {9093}let v_2038: bool = not-caught-fail(k_217) in
                                    {9091}let s_214: bitstring = zero in
                                    {9094}let early_secret_150: bitstring = catch-fail((if v_2038 then hmac(@8_tls_h,s_214,k_217) else fail-any)) in
                                    {9095}let v_2039: bool = not-caught-fail(early_secret_150) in
                                    {9097}let m_198: bitstring = (if v_2039 then zero else caught-fail) in
                                    {9098}let h_527: bitstring = (if v_2039 then catch-fail(hash(@8_tls_h,m_198)) else caught-fail) in
                                    {9099}let v_2040: bool = not-caught-fail(h_527) in
                                    {9096}let l_558: label = (if v_2039 then tls13_ext_res_binder else caught-fail) in
                                    {9100}let x_634: bitstring = (if v_2040 then (l_558,h_527) else caught-fail) in
                                    {9101}let binder_key_100: bitstring = (if v_2039 then catch-fail((if v_2040 then hmac(@8_tls_h,early_secret_150,x_634) else fail-any)) else caught-fail) in
                                    {9102}let v_2041: bool = not-caught-fail(binder_key_100) in
                                    {9103}let v_2042: bitstring = catch-fail((if v_2039 then (if v_2041 then (early_secret_150,binder_key_100) else fail-any) else fail-any)) in
                                    {9104}let v_2043: bool = (not-caught-fail(v_2042) && success?(1-proj-2-tuple(v_2042))) in
                                    {9105}let kb_100: mac_key = (if v_2043 then 2-proj-2-tuple(v_2042) else caught-fail) in
                                    {9106}let es_148: bitstring = (if v_2043 then 1-proj-2-tuple(v_2042) else caught-fail) in
                                    {9089}let offer_28: params = nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_13,SNI(o_dom_15),o_ech_ext_26,extra_103,trunc_client_psk_ext(id_99)) in
                                    {9090}let cur_log'_28: bitstring = (cur_log_OU1_HRR_5,CH(o_cr_19,offer_28)) in
                                    {9107}let binders_27: bitstring = (if v_2043 then catch-fail(hmac(@8_tls_h,kb_100,cur_log'_28)) else caught-fail) in
                                    {9108}let v_2044: bool = not-caught-fail(binders_27) in
                                    {9109}let v_2045: bitstring = catch-fail((if v_2043 then (if v_2044 then (client_psk_ext(id_99,binders_27),(psk_222,id_99,es_148,is_safe_87)) else fail-any) else fail-any)) in
                                    {9110}let v_2046: bool = (not-caught-fail(v_2045) && success?(1-proj-2-tuple(v_2045))) in
                                    {9111}let psk_data_50: bitstring = (if v_2046 then 2-proj-2-tuple(v_2045) else caught-fail) in
                                    {9112}let psk_ext_101: preSharedKeyExt = (if v_2046 then 1-proj-2-tuple(v_2045) else caught-fail) in
                                    {9113}let o_offer_50: params = (if v_2046 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_13,SNI(o_dom_15),o_ech_ext_26,empty_extra_ext,psk_ext_101) else caught-fail) in
                                    {9114}let (client_hello'_23: msg,cr'_25: bytes32,kex_data'_20: bitstring,psk_data'_43: bitstring) = (if v_2046 then (CH(o_cr_19,o_offer_50),o_cr_19,kex_data_5,psk_data_50) else fail-any) in
                                    {9115}out(io, client_hello'_23);
                                    {9117}in(io, server_hello'_38: msg);
                                    {9118}let SH(sr'_20: bytes32,mode'_20: params) = server_hello'_38 in
                                    (
                                        {9119}if (sr'_20 = B32(HRR24,HRR8)) then
                                            {9120}out(io, unexpected_message)
                                        else
                                            {9121}let (x_635: bitstring,g_57: group) = kex_data'_20 in
                                            {9122}let (psk_offer_48: preSharedKey,id_offer_48: identityPsk,es_offer_48: bitstring,is_safe_offer_48: bool) = psk_data'_43 in
                                            {9123}event Client_PSKOffer(id_client_5,psk_offer_48,id_offer_48,is_safe_offer_48);
                                            {9124}event Client_Rand_client(id_client_5,cr'_25);
                                            {9125}event Client_DH_client(id_client_5,dh_pub(g_57,x_635));
                                            {9126}event Client_server_domain(id_client_5,o_dom_8);
                                            {9127}let SH(sr_56: bytes32,mode_54: params) = server_hello'_38 in
                                            {9128}event Client_Rand_server(id_client_5,sr_56);
                                            {9129}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_57,gy_49: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_102: preSharedKeyExt) = mode_54 in
                                            (
                                                {9131}event Client_DH_server(id_client_5,gy_49);
                                                {9132}let v_2047: bool = (psk_ext_102 = empty_psk_ext) in
                                                {9133}let psk_223: preSharedKey = (if v_2047 then NoPsk else caught-fail) in
                                                {9135}let k_218: bitstring = (if v_2047 then catch-fail(psk2b(psk_223)) else caught-fail) in
                                                {9136}let v_2048: bool = not-caught-fail(k_218) in
                                                {9134}let s_215: bitstring = (if v_2047 then zero else caught-fail) in
                                                {9137}let early_secret_151: bitstring = (if v_2047 then catch-fail((if v_2048 then hmac(@8_tls_h,s_215,k_218) else fail-any)) else caught-fail) in
                                                {9138}let v_2049: bool = not-caught-fail(early_secret_151) in
                                                {9140}let m_199: bitstring = (if v_2049 then zero else caught-fail) in
                                                {9141}let h_528: bitstring = (if v_2049 then catch-fail(hash(@8_tls_h,m_199)) else caught-fail) in
                                                {9142}let v_2050: bool = not-caught-fail(h_528) in
                                                {9139}let l_559: label = (if v_2049 then tls13_ext_res_binder else caught-fail) in
                                                {9143}let x_636: bitstring = (if v_2050 then (l_559,h_528) else caught-fail) in
                                                {9144}let binder_key_101: bitstring = (if v_2049 then catch-fail((if v_2050 then hmac(@8_tls_h,early_secret_151,x_636) else fail-any)) else caught-fail) in
                                                {9145}let v_2051: bool = not-caught-fail(binder_key_101) in
                                                {9146}let v_2052: bitstring = (if v_2047 then catch-fail((if v_2049 then (if v_2051 then (early_secret_151,binder_key_101) else fail-any) else fail-any)) else caught-fail) in
                                                {9147}let v_2053: bool = (not-caught-fail(v_2052) && success?(1-proj-2-tuple(v_2052))) in
                                                {9148}let kb_101: mac_key = (if v_2053 then 2-proj-2-tuple(v_2052) else caught-fail) in
                                                {9149}let es_149: bitstring = (if v_2053 then 1-proj-2-tuple(v_2052) else caught-fail) in
                                                {9150}let v_2054: bitstring = (if not(v_2047) then catch-fail(psk_data'_43) else caught-fail) in
                                                {9151}let v_2055: bool = (not-caught-fail(v_2054) && success?(1-proj-4-tuple(v_2054))) in
                                                {9152}let is_safe_88: bool = (if v_2055 then 4-proj-4-tuple(v_2054) else caught-fail) in
                                                {9153}let es_150: bitstring = (if v_2055 then 3-proj-4-tuple(v_2054) else caught-fail) in
                                                {9154}let id_100: identityPsk = (if v_2055 then 2-proj-4-tuple(v_2054) else caught-fail) in
                                                {9155}let psk_224: preSharedKey = (if v_2055 then 1-proj-4-tuple(v_2054) else caught-fail) in
                                                {9156}let (psk_225: preSharedKey,early_secret_152: bitstring,valid_48: bool,safe_psk_51: bool) = (if v_2047 then (if v_2053 then (NoPsk,es_149,true,false) else fail-any) else (if v_2055 then (psk_224,es_150,((psk_224 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_102)),is_safe_88) else fail-any)) in
                                                {9157}event Client_PSKChoosen(id_client_5,psk_225,safe_psk_51);
                                                {9158}if valid_48 then
                                                (
                                                    {9161}new s_216[]: seed;
                                                    {9159}let gxy_98: element = catch-fail(dh_decap_fun(g_57,gy_49,x_635)) in
                                                    {9160}let v_2056: bool = not-caught-fail(gxy_98) in
                                                    {9162}let gxy_99: element = (if v_2056 then gxy_98 else dh_f(s_216)) in
                                                    {9163}event Client_DH_gxy(id_client_5,gxy_99);
                                                    {9165}let m_200: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {9166}let v_2057: bool = not-caught-fail(m_200) in
                                                    {9167}let h_529: bitstring = (if v_2057 then catch-fail(hash(@8_tls_h,m_200)) else caught-fail) in
                                                    {9168}let v_2058: bool = not-caught-fail(h_529) in
                                                    {9164}let l_560: label = tls13_derived in
                                                    {9169}let x_637: bitstring = (if v_2058 then (l_560,h_529) else caught-fail) in
                                                    {9170}let extra_104: bitstring = catch-fail((if v_2057 then (if v_2058 then hmac(@8_tls_h,early_secret_152,x_637) else fail-any) else fail-any)) in
                                                    {9171}let v_2059: bool = not-caught-fail(extra_104) in
                                                    {9172}let handshake_secret_49: bitstring = (if v_2059 then hmac(@8_tls_h,extra_104,gxy_99) else fail-any) in
                                                    {9174}let m_201: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {9175}let v_2060: bool = not-caught-fail(m_201) in
                                                    {9176}let h_530: bitstring = (if v_2060 then catch-fail(hash(@8_tls_h,m_201)) else caught-fail) in
                                                    {9177}let v_2061: bool = not-caught-fail(h_530) in
                                                    {9173}let l_561: label = tls13_derived in
                                                    {9178}let x_638: bitstring = (if v_2061 then (l_561,h_530) else caught-fail) in
                                                    {9179}let extra_105: bitstring = catch-fail((if v_2060 then (if v_2061 then hmac(@8_tls_h,handshake_secret_49,x_638) else fail-any) else fail-any)) in
                                                    {9180}let v_2062: bool = not-caught-fail(extra_105) in
                                                    {9181}let k_219: bitstring = (if v_2062 then zero else caught-fail) in
                                                    {9182}let master_secret_105: bitstring = (if v_2062 then catch-fail(hmac(@8_tls_h,handshake_secret_49,k_219)) else caught-fail) in
                                                    {9183}let v_2063: bool = not-caught-fail(master_secret_105) in
                                                    {9116}let cur_log_OU1_HRR_OU2_20: bitstring = (cur_log_OU1_HRR_5,client_hello'_23) in
                                                    {9130}let cur_log2_100: bitstring = (cur_log_OU1_HRR_OU2_20,server_hello'_38) in
                                                    {9185}let h_531: bitstring = (if v_2063 then catch-fail(hash(@8_tls_h,cur_log2_100)) else caught-fail) in
                                                    {9186}let v_2064: bool = not-caught-fail(h_531) in
                                                    {9184}let l_562: label = (if v_2063 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {9187}let x_639: bitstring = (if v_2064 then (l_562,h_531) else caught-fail) in
                                                    {9188}let client_hts_49: bitstring = (if v_2063 then catch-fail((if v_2064 then hmac(@8_tls_h,handshake_secret_49,x_639) else fail-any)) else caught-fail) in
                                                    {9189}let v_2065: bool = not-caught-fail(client_hts_49) in
                                                    {9191}let h_532: bitstring = (if v_2065 then catch-fail(hash(@8_tls_h,cur_log2_100)) else caught-fail) in
                                                    {9192}let v_2066: bool = not-caught-fail(h_532) in
                                                    {9190}let l_563: label = (if v_2065 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {9193}let x_640: bitstring = (if v_2066 then (l_563,h_532) else caught-fail) in
                                                    {9194}let server_hts_49: bitstring = (if v_2065 then catch-fail((if v_2066 then hmac(@8_tls_h,handshake_secret_49,x_640) else fail-any)) else caught-fail) in
                                                    {9195}let v_2067: bool = not-caught-fail(server_hts_49) in
                                                    {9197}let h_533: bitstring = (if v_2067 then zero else caught-fail) in
                                                    {9196}let l_564: label = (if v_2067 then tls13_key else caught-fail) in
                                                    {9198}let x_641: bitstring = (if v_2067 then (l_564,h_533) else caught-fail) in
                                                    {9199}let client_wkh_49: bitstring = (if v_2067 then catch-fail(hmac(@8_tls_h,client_hts_49,x_641)) else caught-fail) in
                                                    {9200}let v_2068: bool = not-caught-fail(client_wkh_49) in
                                                    {9202}let h_534: bitstring = (if v_2068 then zero else caught-fail) in
                                                    {9201}let l_565: label = (if v_2068 then tls13_key else caught-fail) in
                                                    {9203}let x_642: bitstring = (if v_2068 then (l_565,h_534) else caught-fail) in
                                                    {9204}let server_wkh_49: bitstring = (if v_2068 then catch-fail(hmac(@8_tls_h,server_hts_49,x_642)) else caught-fail) in
                                                    {9205}let v_2069: bool = not-caught-fail(server_wkh_49) in
                                                    {9207}let h_535: bitstring = (if v_2069 then zero else caught-fail) in
                                                    {9206}let l_566: label = (if v_2069 then tls13_finished else caught-fail) in
                                                    {9208}let x_643: bitstring = (if v_2069 then (l_566,h_535) else caught-fail) in
                                                    {9209}let client_fk_49: bitstring = (if v_2069 then catch-fail(hmac(@8_tls_h,client_hts_49,x_643)) else caught-fail) in
                                                    {9210}let v_2070: bool = not-caught-fail(client_fk_49) in
                                                    {9212}let h_536: bitstring = (if v_2070 then zero else caught-fail) in
                                                    {9211}let l_567: label = (if v_2070 then tls13_finished else caught-fail) in
                                                    {9213}let x_644: bitstring = (if v_2070 then (l_567,h_536) else caught-fail) in
                                                    {9214}let server_fk_49: bitstring = (if v_2070 then catch-fail(hmac(@8_tls_h,server_hts_49,x_644)) else caught-fail) in
                                                    {9215}let v_2071: bool = not-caught-fail(server_fk_49) in
                                                    {9216}let (master_secret_106: bitstring,chk_56: aead_key,shk_55: aead_key,cfin_56: mac_key,sfin_55: mac_key) = (if v_2062 then (if v_2063 then (if v_2065 then (if v_2067 then (if v_2068 then (if v_2069 then (if v_2070 then (if v_2071 then (master_secret_105,client_wkh_49,server_wkh_49,client_fk_49,server_fk_49) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {9217}event Client_chk(id_client_5,chk_56);
                                                    {9218}event Client_shk(id_client_5,shk_55);
                                                    {9219}event Client_cfin(id_client_5,cfin_56);
                                                    {9220}event Client_sfin(id_client_5,sfin_55);
                                                    {9221}in(io, enc_ee_msg_48: bitstring);
                                                    {9222}let ee_msg_53: msg = aead_dec(@8_tls_a,shk_55,0,zero,enc_ee_msg_48) in
                                                    {9223}let EE(ech_ee_48: echExt,extra_ee_48: extraExt) = ee_msg_53 in
                                                    {9224}let cur_log2_101: bitstring = (cur_log2_100,ee_msg_53) in
                                                    {9225}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_25,sr_56,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_225,safe_psk_51,@8_comp_psk,master_secret_106,chk_56,0,shk_55,1,cfin_56,sfin_55,cur_log2_101)))
                                                )
                                                else
                                                    {9226}out(io, illegal_parameter)
                                            )
                                            else
                                                {9227}out(io, illegal_parameter)
                                    )
                                    else
                                        {9228}out(io, unexpected_message)
                                )
                                else
                                    {9378}get pre_shared_keys(c_dom'_15: domain,=o_dom_15,=@8_tls_h,id_101: identityPsk,psk_226: preSharedKey,idP_17: idProc,is_safe_89: bool) in
                                    {9229}event Selected_one_time_used_psk(id_client_5,psk_226,is_safe_89);
                                    {9230}event Selected_psk(c_dom_6,c_dom'_15,idP_17,is_safe_89);
                                    {9231}event Selected_psk_no_missmatch(id_client_5,o_dom_15,@8_tls_h,psk_226,id_101);
                                    {9232}event Selected_psk_with_ID(c_dom_6,c_dom'_15,id_101,idP_17,is_safe_89);
                                    {9233}let v_2072: bitstring = (id_101,psk_226,is_safe_89) in
                                    {9234}let v_2073: bool = success?(1-proj-3-tuple(v_2072)) in
                                    {9235}let is_safe_90: bool = (if v_2073 then 3-proj-3-tuple(v_2072) else caught-fail) in
                                    {9236}let psk_227: preSharedKey = (if v_2073 then 2-proj-3-tuple(v_2072) else caught-fail) in
                                    {9237}let id_102: identityPsk = (if v_2073 then 1-proj-3-tuple(v_2072) else caught-fail) in
                                    {9241}let k_220: bitstring = (if v_2073 then catch-fail(psk2b(psk_227)) else caught-fail) in
                                    {9242}let v_2074: bool = not-caught-fail(k_220) in
                                    {9240}let s_217: bitstring = (if v_2073 then zero else caught-fail) in
                                    {9243}let early_secret_153: bitstring = (if v_2073 then catch-fail((if v_2074 then hmac(@8_tls_h,s_217,k_220) else fail-any)) else caught-fail) in
                                    {9244}let v_2075: bool = not-caught-fail(early_secret_153) in
                                    {9246}let m_202: bitstring = (if v_2075 then zero else caught-fail) in
                                    {9247}let h_537: bitstring = (if v_2075 then catch-fail(hash(@8_tls_h,m_202)) else caught-fail) in
                                    {9248}let v_2076: bool = not-caught-fail(h_537) in
                                    {9245}let l_568: label = (if v_2075 then tls13_ext_res_binder else caught-fail) in
                                    {9249}let x_645: bitstring = (if v_2076 then (l_568,h_537) else caught-fail) in
                                    {9250}let binder_key_102: bitstring = (if v_2075 then catch-fail((if v_2076 then hmac(@8_tls_h,early_secret_153,x_645) else fail-any)) else caught-fail) in
                                    {9251}let v_2077: bool = not-caught-fail(binder_key_102) in
                                    {9252}let v_2078: bitstring = (if v_2073 then catch-fail((if v_2075 then (if v_2077 then (early_secret_153,binder_key_102) else fail-any) else fail-any)) else caught-fail) in
                                    {9253}let v_2079: bool = (not-caught-fail(v_2078) && success?(1-proj-2-tuple(v_2078))) in
                                    {9254}let kb_102: mac_key = (if v_2079 then 2-proj-2-tuple(v_2078) else caught-fail) in
                                    {9255}let es_151: bitstring = (if v_2079 then 1-proj-2-tuple(v_2078) else caught-fail) in
                                    {9238}let offer_29: params = (if v_2073 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_13,SNI(o_dom_15),o_ech_ext_26,extra_103,trunc_client_psk_ext(id_102)) else caught-fail) in
                                    {9239}let cur_log'_29: bitstring = (if v_2073 then (cur_log_OU1_HRR_5,CH(o_cr_19,offer_29)) else caught-fail) in
                                    {9256}let binders_28: bitstring = (if v_2079 then catch-fail(hmac(@8_tls_h,kb_102,cur_log'_29)) else caught-fail) in
                                    {9257}let v_2080: bool = not-caught-fail(binders_28) in
                                    {9258}let v_2081: bitstring = catch-fail((if v_2073 then (if v_2079 then (if v_2080 then (client_psk_ext(id_102,binders_28),(psk_227,id_102,es_151,is_safe_90)) else fail-any) else fail-any) else fail-any)) in
                                    {9259}let v_2082: bool = (not-caught-fail(v_2081) && success?(1-proj-2-tuple(v_2081))) in
                                    {9260}let psk_data_51: bitstring = (if v_2082 then 2-proj-2-tuple(v_2081) else caught-fail) in
                                    {9261}let psk_ext_103: preSharedKeyExt = (if v_2082 then 1-proj-2-tuple(v_2081) else caught-fail) in
                                    {9262}let o_offer_51: params = (if v_2082 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_13,SNI(o_dom_15),o_ech_ext_26,empty_extra_ext,psk_ext_103) else caught-fail) in
                                    {9263}let (client_hello'_24: msg,cr'_26: bytes32,kex_data'_21: bitstring,psk_data'_44: bitstring) = (if v_2082 then (CH(o_cr_19,o_offer_51),o_cr_19,kex_data_5,psk_data_51) else fail-any) in
                                    {9264}out(io, client_hello'_24);
                                    {9266}in(io, server_hello'_39: msg);
                                    {9267}let SH(sr'_21: bytes32,mode'_21: params) = server_hello'_39 in
                                    (
                                        {9268}if (sr'_21 = B32(HRR24,HRR8)) then
                                            {9269}out(io, unexpected_message)
                                        else
                                            {9270}let (x_646: bitstring,g_58: group) = kex_data'_21 in
                                            {9271}let (psk_offer_49: preSharedKey,id_offer_49: identityPsk,es_offer_49: bitstring,is_safe_offer_49: bool) = psk_data'_44 in
                                            {9272}event Client_PSKOffer(id_client_5,psk_offer_49,id_offer_49,is_safe_offer_49);
                                            {9273}event Client_Rand_client(id_client_5,cr'_26);
                                            {9274}event Client_DH_client(id_client_5,dh_pub(g_58,x_646));
                                            {9275}event Client_server_domain(id_client_5,o_dom_8);
                                            {9276}let SH(sr_57: bytes32,mode_55: params) = server_hello'_39 in
                                            {9277}event Client_Rand_server(id_client_5,sr_57);
                                            {9278}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_58,gy_50: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_104: preSharedKeyExt) = mode_55 in
                                            (
                                                {9280}event Client_DH_server(id_client_5,gy_50);
                                                {9281}let v_2083: bool = (psk_ext_104 = empty_psk_ext) in
                                                {9282}let psk_228: preSharedKey = (if v_2083 then NoPsk else caught-fail) in
                                                {9284}let k_221: bitstring = (if v_2083 then catch-fail(psk2b(psk_228)) else caught-fail) in
                                                {9285}let v_2084: bool = not-caught-fail(k_221) in
                                                {9283}let s_218: bitstring = (if v_2083 then zero else caught-fail) in
                                                {9286}let early_secret_154: bitstring = (if v_2083 then catch-fail((if v_2084 then hmac(@8_tls_h,s_218,k_221) else fail-any)) else caught-fail) in
                                                {9287}let v_2085: bool = not-caught-fail(early_secret_154) in
                                                {9289}let m_203: bitstring = (if v_2085 then zero else caught-fail) in
                                                {9290}let h_538: bitstring = (if v_2085 then catch-fail(hash(@8_tls_h,m_203)) else caught-fail) in
                                                {9291}let v_2086: bool = not-caught-fail(h_538) in
                                                {9288}let l_569: label = (if v_2085 then tls13_ext_res_binder else caught-fail) in
                                                {9292}let x_647: bitstring = (if v_2086 then (l_569,h_538) else caught-fail) in
                                                {9293}let binder_key_103: bitstring = (if v_2085 then catch-fail((if v_2086 then hmac(@8_tls_h,early_secret_154,x_647) else fail-any)) else caught-fail) in
                                                {9294}let v_2087: bool = not-caught-fail(binder_key_103) in
                                                {9295}let v_2088: bitstring = (if v_2083 then catch-fail((if v_2085 then (if v_2087 then (early_secret_154,binder_key_103) else fail-any) else fail-any)) else caught-fail) in
                                                {9296}let v_2089: bool = (not-caught-fail(v_2088) && success?(1-proj-2-tuple(v_2088))) in
                                                {9297}let kb_103: mac_key = (if v_2089 then 2-proj-2-tuple(v_2088) else caught-fail) in
                                                {9298}let es_152: bitstring = (if v_2089 then 1-proj-2-tuple(v_2088) else caught-fail) in
                                                {9299}let v_2090: bitstring = (if not(v_2083) then catch-fail(psk_data'_44) else caught-fail) in
                                                {9300}let v_2091: bool = (not-caught-fail(v_2090) && success?(1-proj-4-tuple(v_2090))) in
                                                {9301}let is_safe_91: bool = (if v_2091 then 4-proj-4-tuple(v_2090) else caught-fail) in
                                                {9302}let es_153: bitstring = (if v_2091 then 3-proj-4-tuple(v_2090) else caught-fail) in
                                                {9303}let id_103: identityPsk = (if v_2091 then 2-proj-4-tuple(v_2090) else caught-fail) in
                                                {9304}let psk_229: preSharedKey = (if v_2091 then 1-proj-4-tuple(v_2090) else caught-fail) in
                                                {9305}let (psk_230: preSharedKey,early_secret_155: bitstring,valid_49: bool,safe_psk_52: bool) = (if v_2083 then (if v_2089 then (NoPsk,es_152,true,false) else fail-any) else (if v_2091 then (psk_229,es_153,((psk_229 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_104)),is_safe_91) else fail-any)) in
                                                {9306}event Client_PSKChoosen(id_client_5,psk_230,safe_psk_52);
                                                {9307}if valid_49 then
                                                (
                                                    {9310}new s_219[]: seed;
                                                    {9308}let gxy_100: element = catch-fail(dh_decap_fun(g_58,gy_50,x_646)) in
                                                    {9309}let v_2092: bool = not-caught-fail(gxy_100) in
                                                    {9311}let gxy_101: element = (if v_2092 then gxy_100 else dh_f(s_219)) in
                                                    {9312}event Client_DH_gxy(id_client_5,gxy_101);
                                                    {9314}let m_204: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {9315}let v_2093: bool = not-caught-fail(m_204) in
                                                    {9316}let h_539: bitstring = (if v_2093 then catch-fail(hash(@8_tls_h,m_204)) else caught-fail) in
                                                    {9317}let v_2094: bool = not-caught-fail(h_539) in
                                                    {9313}let l_570: label = tls13_derived in
                                                    {9318}let x_648: bitstring = (if v_2094 then (l_570,h_539) else caught-fail) in
                                                    {9319}let extra_106: bitstring = catch-fail((if v_2093 then (if v_2094 then hmac(@8_tls_h,early_secret_155,x_648) else fail-any) else fail-any)) in
                                                    {9320}let v_2095: bool = not-caught-fail(extra_106) in
                                                    {9321}let handshake_secret_50: bitstring = (if v_2095 then hmac(@8_tls_h,extra_106,gxy_101) else fail-any) in
                                                    {9323}let m_205: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {9324}let v_2096: bool = not-caught-fail(m_205) in
                                                    {9325}let h_540: bitstring = (if v_2096 then catch-fail(hash(@8_tls_h,m_205)) else caught-fail) in
                                                    {9326}let v_2097: bool = not-caught-fail(h_540) in
                                                    {9322}let l_571: label = tls13_derived in
                                                    {9327}let x_649: bitstring = (if v_2097 then (l_571,h_540) else caught-fail) in
                                                    {9328}let extra_107: bitstring = catch-fail((if v_2096 then (if v_2097 then hmac(@8_tls_h,handshake_secret_50,x_649) else fail-any) else fail-any)) in
                                                    {9329}let v_2098: bool = not-caught-fail(extra_107) in
                                                    {9330}let k_222: bitstring = (if v_2098 then zero else caught-fail) in
                                                    {9331}let master_secret_107: bitstring = (if v_2098 then catch-fail(hmac(@8_tls_h,handshake_secret_50,k_222)) else caught-fail) in
                                                    {9332}let v_2099: bool = not-caught-fail(master_secret_107) in
                                                    {9265}let cur_log_OU1_HRR_OU2_21: bitstring = (cur_log_OU1_HRR_5,client_hello'_24) in
                                                    {9279}let cur_log2_102: bitstring = (cur_log_OU1_HRR_OU2_21,server_hello'_39) in
                                                    {9334}let h_541: bitstring = (if v_2099 then catch-fail(hash(@8_tls_h,cur_log2_102)) else caught-fail) in
                                                    {9335}let v_2100: bool = not-caught-fail(h_541) in
                                                    {9333}let l_572: label = (if v_2099 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {9336}let x_650: bitstring = (if v_2100 then (l_572,h_541) else caught-fail) in
                                                    {9337}let client_hts_50: bitstring = (if v_2099 then catch-fail((if v_2100 then hmac(@8_tls_h,handshake_secret_50,x_650) else fail-any)) else caught-fail) in
                                                    {9338}let v_2101: bool = not-caught-fail(client_hts_50) in
                                                    {9340}let h_542: bitstring = (if v_2101 then catch-fail(hash(@8_tls_h,cur_log2_102)) else caught-fail) in
                                                    {9341}let v_2102: bool = not-caught-fail(h_542) in
                                                    {9339}let l_573: label = (if v_2101 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {9342}let x_651: bitstring = (if v_2102 then (l_573,h_542) else caught-fail) in
                                                    {9343}let server_hts_50: bitstring = (if v_2101 then catch-fail((if v_2102 then hmac(@8_tls_h,handshake_secret_50,x_651) else fail-any)) else caught-fail) in
                                                    {9344}let v_2103: bool = not-caught-fail(server_hts_50) in
                                                    {9346}let h_543: bitstring = (if v_2103 then zero else caught-fail) in
                                                    {9345}let l_574: label = (if v_2103 then tls13_key else caught-fail) in
                                                    {9347}let x_652: bitstring = (if v_2103 then (l_574,h_543) else caught-fail) in
                                                    {9348}let client_wkh_50: bitstring = (if v_2103 then catch-fail(hmac(@8_tls_h,client_hts_50,x_652)) else caught-fail) in
                                                    {9349}let v_2104: bool = not-caught-fail(client_wkh_50) in
                                                    {9351}let h_544: bitstring = (if v_2104 then zero else caught-fail) in
                                                    {9350}let l_575: label = (if v_2104 then tls13_key else caught-fail) in
                                                    {9352}let x_653: bitstring = (if v_2104 then (l_575,h_544) else caught-fail) in
                                                    {9353}let server_wkh_50: bitstring = (if v_2104 then catch-fail(hmac(@8_tls_h,server_hts_50,x_653)) else caught-fail) in
                                                    {9354}let v_2105: bool = not-caught-fail(server_wkh_50) in
                                                    {9356}let h_545: bitstring = (if v_2105 then zero else caught-fail) in
                                                    {9355}let l_576: label = (if v_2105 then tls13_finished else caught-fail) in
                                                    {9357}let x_654: bitstring = (if v_2105 then (l_576,h_545) else caught-fail) in
                                                    {9358}let client_fk_50: bitstring = (if v_2105 then catch-fail(hmac(@8_tls_h,client_hts_50,x_654)) else caught-fail) in
                                                    {9359}let v_2106: bool = not-caught-fail(client_fk_50) in
                                                    {9361}let h_546: bitstring = (if v_2106 then zero else caught-fail) in
                                                    {9360}let l_577: label = (if v_2106 then tls13_finished else caught-fail) in
                                                    {9362}let x_655: bitstring = (if v_2106 then (l_577,h_546) else caught-fail) in
                                                    {9363}let server_fk_50: bitstring = (if v_2106 then catch-fail(hmac(@8_tls_h,server_hts_50,x_655)) else caught-fail) in
                                                    {9364}let v_2107: bool = not-caught-fail(server_fk_50) in
                                                    {9365}let (master_secret_108: bitstring,chk_57: aead_key,shk_56: aead_key,cfin_57: mac_key,sfin_56: mac_key) = (if v_2098 then (if v_2099 then (if v_2101 then (if v_2103 then (if v_2104 then (if v_2105 then (if v_2106 then (if v_2107 then (master_secret_107,client_wkh_50,server_wkh_50,client_fk_50,server_fk_50) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {9366}event Client_chk(id_client_5,chk_57);
                                                    {9367}event Client_shk(id_client_5,shk_56);
                                                    {9368}event Client_cfin(id_client_5,cfin_57);
                                                    {9369}event Client_sfin(id_client_5,sfin_56);
                                                    {9370}in(io, enc_ee_msg_49: bitstring);
                                                    {9371}let ee_msg_54: msg = aead_dec(@8_tls_a,shk_56,0,zero,enc_ee_msg_49) in
                                                    {9372}let EE(ech_ee_49: echExt,extra_ee_49: extraExt) = ee_msg_54 in
                                                    {9373}let cur_log2_103: bitstring = (cur_log2_102,ee_msg_54) in
                                                    {9374}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_26,sr_57,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_230,safe_psk_52,@8_comp_psk,master_secret_108,chk_57,0,shk_56,1,cfin_57,sfin_56,cur_log2_103)))
                                                )
                                                else
                                                    {9375}out(io, illegal_parameter)
                                            )
                                            else
                                                {9376}out(io, illegal_parameter)
                                    )
                                    else
                                        {9377}out(io, unexpected_message)
                            )
                            else
                                {9379}let psk_231: preSharedKey = NoPsk in
                                {9381}let k_223: bitstring = catch-fail(psk2b(psk_231)) in
                                {9382}let v_2108: bool = not-caught-fail(k_223) in
                                {9380}let s_220: bitstring = zero in
                                {9383}let early_secret_156: bitstring = catch-fail((if v_2108 then hmac(@8_tls_h,s_220,k_223) else fail-any)) in
                                {9384}let v_2109: bool = not-caught-fail(early_secret_156) in
                                {9386}let m_206: bitstring = (if v_2109 then zero else caught-fail) in
                                {9387}let h_547: bitstring = (if v_2109 then catch-fail(hash(@8_tls_h,m_206)) else caught-fail) in
                                {9388}let v_2110: bool = not-caught-fail(h_547) in
                                {9385}let l_578: label = (if v_2109 then tls13_ext_res_binder else caught-fail) in
                                {9389}let x_656: bitstring = (if v_2110 then (l_578,h_547) else caught-fail) in
                                {9390}let binder_key_104: bitstring = (if v_2109 then catch-fail((if v_2110 then hmac(@8_tls_h,early_secret_156,x_656) else fail-any)) else caught-fail) in
                                {9391}let v_2111: bool = not-caught-fail(binder_key_104) in
                                {9392}let v_2112: bitstring = catch-fail((if v_2109 then (if v_2111 then (early_secret_156,binder_key_104) else fail-any) else fail-any)) in
                                {9393}let v_2113: bool = (not-caught-fail(v_2112) && success?(1-proj-2-tuple(v_2112))) in
                                {9394}let kb_104: mac_key = (if v_2113 then 2-proj-2-tuple(v_2112) else caught-fail) in
                                {9395}let es_154: bitstring = (if v_2113 then 1-proj-2-tuple(v_2112) else caught-fail) in
                                {9396}let v_2114: bitstring = catch-fail((if v_2113 then (empty_psk_ext,(NoPsk,zero,es_154,false)) else fail-any)) in
                                {9397}let v_2115: bool = (not-caught-fail(v_2114) && success?(1-proj-2-tuple(v_2114))) in
                                {9398}let psk_data_52: bitstring = (if v_2115 then 2-proj-2-tuple(v_2114) else caught-fail) in
                                {9399}let psk_ext_105: preSharedKeyExt = (if v_2115 then 1-proj-2-tuple(v_2114) else caught-fail) in
                                {9400}let o_offer_52: params = (if v_2115 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_13,SNI(o_dom_15),o_ech_ext_26,empty_extra_ext,psk_ext_105) else caught-fail) in
                                {9401}let (client_hello'_25: msg,cr'_27: bytes32,kex_data'_22: bitstring,psk_data'_45: bitstring) = (if v_2115 then (CH(o_cr_19,o_offer_52),o_cr_19,kex_data_5,psk_data_52) else fail-any) in
                                {9402}out(io, client_hello'_25);
                                {9404}in(io, server_hello'_40: msg);
                                {9405}let SH(sr'_22: bytes32,mode'_22: params) = server_hello'_40 in
                                (
                                    {9406}if (sr'_22 = B32(HRR24,HRR8)) then
                                        {9407}out(io, unexpected_message)
                                    else
                                        {9408}let (x_657: bitstring,g_59: group) = kex_data'_22 in
                                        {9409}let (psk_offer_50: preSharedKey,id_offer_50: identityPsk,es_offer_50: bitstring,is_safe_offer_50: bool) = psk_data'_45 in
                                        {9410}event Client_PSKOffer(id_client_5,psk_offer_50,id_offer_50,is_safe_offer_50);
                                        {9411}event Client_Rand_client(id_client_5,cr'_27);
                                        {9412}event Client_DH_client(id_client_5,dh_pub(g_59,x_657));
                                        {9413}event Client_server_domain(id_client_5,o_dom_8);
                                        {9414}let SH(sr_58: bytes32,mode_56: params) = server_hello'_40 in
                                        {9415}event Client_Rand_server(id_client_5,sr_58);
                                        {9416}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_59,gy_51: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_106: preSharedKeyExt) = mode_56 in
                                        (
                                            {9418}event Client_DH_server(id_client_5,gy_51);
                                            {9419}let v_2116: bool = (psk_ext_106 = empty_psk_ext) in
                                            {9420}let psk_232: preSharedKey = (if v_2116 then NoPsk else caught-fail) in
                                            {9422}let k_224: bitstring = (if v_2116 then catch-fail(psk2b(psk_232)) else caught-fail) in
                                            {9423}let v_2117: bool = not-caught-fail(k_224) in
                                            {9421}let s_221: bitstring = (if v_2116 then zero else caught-fail) in
                                            {9424}let early_secret_157: bitstring = (if v_2116 then catch-fail((if v_2117 then hmac(@8_tls_h,s_221,k_224) else fail-any)) else caught-fail) in
                                            {9425}let v_2118: bool = not-caught-fail(early_secret_157) in
                                            {9427}let m_207: bitstring = (if v_2118 then zero else caught-fail) in
                                            {9428}let h_548: bitstring = (if v_2118 then catch-fail(hash(@8_tls_h,m_207)) else caught-fail) in
                                            {9429}let v_2119: bool = not-caught-fail(h_548) in
                                            {9426}let l_579: label = (if v_2118 then tls13_ext_res_binder else caught-fail) in
                                            {9430}let x_658: bitstring = (if v_2119 then (l_579,h_548) else caught-fail) in
                                            {9431}let binder_key_105: bitstring = (if v_2118 then catch-fail((if v_2119 then hmac(@8_tls_h,early_secret_157,x_658) else fail-any)) else caught-fail) in
                                            {9432}let v_2120: bool = not-caught-fail(binder_key_105) in
                                            {9433}let v_2121: bitstring = (if v_2116 then catch-fail((if v_2118 then (if v_2120 then (early_secret_157,binder_key_105) else fail-any) else fail-any)) else caught-fail) in
                                            {9434}let v_2122: bool = (not-caught-fail(v_2121) && success?(1-proj-2-tuple(v_2121))) in
                                            {9435}let kb_105: mac_key = (if v_2122 then 2-proj-2-tuple(v_2121) else caught-fail) in
                                            {9436}let es_155: bitstring = (if v_2122 then 1-proj-2-tuple(v_2121) else caught-fail) in
                                            {9437}let v_2123: bitstring = (if not(v_2116) then catch-fail(psk_data'_45) else caught-fail) in
                                            {9438}let v_2124: bool = (not-caught-fail(v_2123) && success?(1-proj-4-tuple(v_2123))) in
                                            {9439}let is_safe_92: bool = (if v_2124 then 4-proj-4-tuple(v_2123) else caught-fail) in
                                            {9440}let es_156: bitstring = (if v_2124 then 3-proj-4-tuple(v_2123) else caught-fail) in
                                            {9441}let id_104: identityPsk = (if v_2124 then 2-proj-4-tuple(v_2123) else caught-fail) in
                                            {9442}let psk_233: preSharedKey = (if v_2124 then 1-proj-4-tuple(v_2123) else caught-fail) in
                                            {9443}let (psk_234: preSharedKey,early_secret_158: bitstring,valid_50: bool,safe_psk_53: bool) = (if v_2116 then (if v_2122 then (NoPsk,es_155,true,false) else fail-any) else (if v_2124 then (psk_233,es_156,((psk_233 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_106)),is_safe_92) else fail-any)) in
                                            {9444}event Client_PSKChoosen(id_client_5,psk_234,safe_psk_53);
                                            {9445}if valid_50 then
                                            (
                                                {9448}new s_222[]: seed;
                                                {9446}let gxy_102: element = catch-fail(dh_decap_fun(g_59,gy_51,x_657)) in
                                                {9447}let v_2125: bool = not-caught-fail(gxy_102) in
                                                {9449}let gxy_103: element = (if v_2125 then gxy_102 else dh_f(s_222)) in
                                                {9450}event Client_DH_gxy(id_client_5,gxy_103);
                                                {9452}let m_208: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                {9453}let v_2126: bool = not-caught-fail(m_208) in
                                                {9454}let h_549: bitstring = (if v_2126 then catch-fail(hash(@8_tls_h,m_208)) else caught-fail) in
                                                {9455}let v_2127: bool = not-caught-fail(h_549) in
                                                {9451}let l_580: label = tls13_derived in
                                                {9456}let x_659: bitstring = (if v_2127 then (l_580,h_549) else caught-fail) in
                                                {9457}let extra_108: bitstring = catch-fail((if v_2126 then (if v_2127 then hmac(@8_tls_h,early_secret_158,x_659) else fail-any) else fail-any)) in
                                                {9458}let v_2128: bool = not-caught-fail(extra_108) in
                                                {9459}let handshake_secret_51: bitstring = (if v_2128 then hmac(@8_tls_h,extra_108,gxy_103) else fail-any) in
                                                {9461}let m_209: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                {9462}let v_2129: bool = not-caught-fail(m_209) in
                                                {9463}let h_550: bitstring = (if v_2129 then catch-fail(hash(@8_tls_h,m_209)) else caught-fail) in
                                                {9464}let v_2130: bool = not-caught-fail(h_550) in
                                                {9460}let l_581: label = tls13_derived in
                                                {9465}let x_660: bitstring = (if v_2130 then (l_581,h_550) else caught-fail) in
                                                {9466}let extra_109: bitstring = catch-fail((if v_2129 then (if v_2130 then hmac(@8_tls_h,handshake_secret_51,x_660) else fail-any) else fail-any)) in
                                                {9467}let v_2131: bool = not-caught-fail(extra_109) in
                                                {9468}let k_225: bitstring = (if v_2131 then zero else caught-fail) in
                                                {9469}let master_secret_109: bitstring = (if v_2131 then catch-fail(hmac(@8_tls_h,handshake_secret_51,k_225)) else caught-fail) in
                                                {9470}let v_2132: bool = not-caught-fail(master_secret_109) in
                                                {9403}let cur_log_OU1_HRR_OU2_22: bitstring = (cur_log_OU1_HRR_5,client_hello'_25) in
                                                {9417}let cur_log2_104: bitstring = (cur_log_OU1_HRR_OU2_22,server_hello'_40) in
                                                {9472}let h_551: bitstring = (if v_2132 then catch-fail(hash(@8_tls_h,cur_log2_104)) else caught-fail) in
                                                {9473}let v_2133: bool = not-caught-fail(h_551) in
                                                {9471}let l_582: label = (if v_2132 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {9474}let x_661: bitstring = (if v_2133 then (l_582,h_551) else caught-fail) in
                                                {9475}let client_hts_51: bitstring = (if v_2132 then catch-fail((if v_2133 then hmac(@8_tls_h,handshake_secret_51,x_661) else fail-any)) else caught-fail) in
                                                {9476}let v_2134: bool = not-caught-fail(client_hts_51) in
                                                {9478}let h_552: bitstring = (if v_2134 then catch-fail(hash(@8_tls_h,cur_log2_104)) else caught-fail) in
                                                {9479}let v_2135: bool = not-caught-fail(h_552) in
                                                {9477}let l_583: label = (if v_2134 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {9480}let x_662: bitstring = (if v_2135 then (l_583,h_552) else caught-fail) in
                                                {9481}let server_hts_51: bitstring = (if v_2134 then catch-fail((if v_2135 then hmac(@8_tls_h,handshake_secret_51,x_662) else fail-any)) else caught-fail) in
                                                {9482}let v_2136: bool = not-caught-fail(server_hts_51) in
                                                {9484}let h_553: bitstring = (if v_2136 then zero else caught-fail) in
                                                {9483}let l_584: label = (if v_2136 then tls13_key else caught-fail) in
                                                {9485}let x_663: bitstring = (if v_2136 then (l_584,h_553) else caught-fail) in
                                                {9486}let client_wkh_51: bitstring = (if v_2136 then catch-fail(hmac(@8_tls_h,client_hts_51,x_663)) else caught-fail) in
                                                {9487}let v_2137: bool = not-caught-fail(client_wkh_51) in
                                                {9489}let h_554: bitstring = (if v_2137 then zero else caught-fail) in
                                                {9488}let l_585: label = (if v_2137 then tls13_key else caught-fail) in
                                                {9490}let x_664: bitstring = (if v_2137 then (l_585,h_554) else caught-fail) in
                                                {9491}let server_wkh_51: bitstring = (if v_2137 then catch-fail(hmac(@8_tls_h,server_hts_51,x_664)) else caught-fail) in
                                                {9492}let v_2138: bool = not-caught-fail(server_wkh_51) in
                                                {9494}let h_555: bitstring = (if v_2138 then zero else caught-fail) in
                                                {9493}let l_586: label = (if v_2138 then tls13_finished else caught-fail) in
                                                {9495}let x_665: bitstring = (if v_2138 then (l_586,h_555) else caught-fail) in
                                                {9496}let client_fk_51: bitstring = (if v_2138 then catch-fail(hmac(@8_tls_h,client_hts_51,x_665)) else caught-fail) in
                                                {9497}let v_2139: bool = not-caught-fail(client_fk_51) in
                                                {9499}let h_556: bitstring = (if v_2139 then zero else caught-fail) in
                                                {9498}let l_587: label = (if v_2139 then tls13_finished else caught-fail) in
                                                {9500}let x_666: bitstring = (if v_2139 then (l_587,h_556) else caught-fail) in
                                                {9501}let server_fk_51: bitstring = (if v_2139 then catch-fail(hmac(@8_tls_h,server_hts_51,x_666)) else caught-fail) in
                                                {9502}let v_2140: bool = not-caught-fail(server_fk_51) in
                                                {9503}let (master_secret_110: bitstring,chk_58: aead_key,shk_57: aead_key,cfin_58: mac_key,sfin_57: mac_key) = (if v_2131 then (if v_2132 then (if v_2134 then (if v_2136 then (if v_2137 then (if v_2138 then (if v_2139 then (if v_2140 then (master_secret_109,client_wkh_51,server_wkh_51,client_fk_51,server_fk_51) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {9504}event Client_chk(id_client_5,chk_58);
                                                {9505}event Client_shk(id_client_5,shk_57);
                                                {9506}event Client_cfin(id_client_5,cfin_58);
                                                {9507}event Client_sfin(id_client_5,sfin_57);
                                                {9508}in(io, enc_ee_msg_50: bitstring);
                                                {9509}let ee_msg_55: msg = aead_dec(@8_tls_a,shk_57,0,zero,enc_ee_msg_50) in
                                                {9510}let EE(ech_ee_50: echExt,extra_ee_50: extraExt) = ee_msg_55 in
                                                {9511}let cur_log2_105: bitstring = (cur_log2_104,ee_msg_55) in
                                                {9512}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_27,sr_58,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_234,safe_psk_53,@8_comp_psk,master_secret_110,chk_58,0,shk_57,1,cfin_58,sfin_57,cur_log2_105)))
                                            )
                                            else
                                                {9513}out(io, illegal_parameter)
                                        )
                                        else
                                            {9514}out(io, illegal_parameter)
                                )
                                else
                                    {9515}out(io, unexpected_message)
                        )
                        else
                            {9516}let psk_235: preSharedKey = NoPsk in
                            {9518}let k_226: bitstring = catch-fail(psk2b(psk_235)) in
                            {9519}let v_2141: bool = not-caught-fail(k_226) in
                            {9517}let s_223: bitstring = zero in
                            {9520}let early_secret_159: bitstring = catch-fail((if v_2141 then hmac(@8_tls_h,s_223,k_226) else fail-any)) in
                            {9521}let v_2142: bool = not-caught-fail(early_secret_159) in
                            {9523}let m_210: bitstring = (if v_2142 then zero else caught-fail) in
                            {9524}let h_557: bitstring = (if v_2142 then catch-fail(hash(@8_tls_h,m_210)) else caught-fail) in
                            {9525}let v_2143: bool = not-caught-fail(h_557) in
                            {9522}let l_588: label = (if v_2142 then tls13_ext_res_binder else caught-fail) in
                            {9526}let x_667: bitstring = (if v_2143 then (l_588,h_557) else caught-fail) in
                            {9527}let binder_key_106: bitstring = (if v_2142 then catch-fail((if v_2143 then hmac(@8_tls_h,early_secret_159,x_667) else fail-any)) else caught-fail) in
                            {9528}let v_2144: bool = not-caught-fail(binder_key_106) in
                            {9529}let v_2145: bitstring = catch-fail((if v_2142 then (if v_2144 then (early_secret_159,binder_key_106) else fail-any) else fail-any)) in
                            {9530}let v_2146: bool = (not-caught-fail(v_2145) && success?(1-proj-2-tuple(v_2145))) in
                            {9531}let kb_106: mac_key = (if v_2146 then 2-proj-2-tuple(v_2145) else caught-fail) in
                            {9532}let es_157: bitstring = (if v_2146 then 1-proj-2-tuple(v_2145) else caught-fail) in
                            {9533}let v_2147: preSharedKeyExt = (if v_2146 then catch-fail(o_psk_ext_26) else caught-fail) in
                            {9534}let v_2148: bool = (not-caught-fail(v_2147) && success?(1-proj-client_psk_ext(v_2147))) in
                            {9535}let fake_binder_29: bitstring = (if v_2148 then 2-proj-client_psk_ext(v_2147) else caught-fail) in
                            {9536}let fake_id_29: identityPsk = (if v_2148 then 1-proj-client_psk_ext(v_2147) else caught-fail) in
                            {9537}new fake_binder'_5[]: bitstring;
                            {9538}let v_2149: bitstring = catch-fail((if v_2146 then (if v_2148 then (client_psk_ext(fake_id_29,fake_binder'_5),(NoPsk,zero,es_157,false)) else (empty_psk_ext,(NoPsk,zero,es_157,false))) else fail-any)) in
                            {9539}let v_2150: bool = (not-caught-fail(v_2149) && success?(1-proj-2-tuple(v_2149))) in
                            {9540}let psk_data_53: bitstring = (if v_2150 then 2-proj-2-tuple(v_2149) else caught-fail) in
                            {9541}let psk_ext_107: preSharedKeyExt = (if v_2150 then 1-proj-2-tuple(v_2149) else caught-fail) in
                            {9542}let o_offer_53: params = (if v_2150 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_13,SNI(o_dom_15),o_ech_ext_26,empty_extra_ext,psk_ext_107) else caught-fail) in
                            {9543}let (client_hello'_26: msg,cr'_28: bytes32,kex_data'_23: bitstring,psk_data'_46: bitstring) = (if v_2150 then (CH(o_cr_19,o_offer_53),o_cr_19,kex_data_5,psk_data_53) else fail-any) in
                            {9544}out(io, client_hello'_26);
                            {9546}in(io, server_hello'_41: msg);
                            {9547}let SH(sr'_23: bytes32,mode'_23: params) = server_hello'_41 in
                            (
                                {9548}if (sr'_23 = B32(HRR24,HRR8)) then
                                    {9549}out(io, unexpected_message)
                                else
                                    {9550}let (x_668: bitstring,g_60: group) = kex_data'_23 in
                                    {9551}let (psk_offer_51: preSharedKey,id_offer_51: identityPsk,es_offer_51: bitstring,is_safe_offer_51: bool) = psk_data'_46 in
                                    {9552}event Client_PSKOffer(id_client_5,psk_offer_51,id_offer_51,is_safe_offer_51);
                                    {9553}event Client_Rand_client(id_client_5,cr'_28);
                                    {9554}event Client_DH_client(id_client_5,dh_pub(g_60,x_668));
                                    {9555}event Client_server_domain(id_client_5,o_dom_8);
                                    {9556}let SH(sr_59: bytes32,mode_57: params) = server_hello'_41 in
                                    {9557}event Client_Rand_server(id_client_5,sr_59);
                                    {9558}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_60,gy_52: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_108: preSharedKeyExt) = mode_57 in
                                    (
                                        {9560}event Client_DH_server(id_client_5,gy_52);
                                        {9561}let v_2151: bool = (psk_ext_108 = empty_psk_ext) in
                                        {9562}let psk_236: preSharedKey = (if v_2151 then NoPsk else caught-fail) in
                                        {9564}let k_227: bitstring = (if v_2151 then catch-fail(psk2b(psk_236)) else caught-fail) in
                                        {9565}let v_2152: bool = not-caught-fail(k_227) in
                                        {9563}let s_224: bitstring = (if v_2151 then zero else caught-fail) in
                                        {9566}let early_secret_160: bitstring = (if v_2151 then catch-fail((if v_2152 then hmac(@8_tls_h,s_224,k_227) else fail-any)) else caught-fail) in
                                        {9567}let v_2153: bool = not-caught-fail(early_secret_160) in
                                        {9569}let m_211: bitstring = (if v_2153 then zero else caught-fail) in
                                        {9570}let h_558: bitstring = (if v_2153 then catch-fail(hash(@8_tls_h,m_211)) else caught-fail) in
                                        {9571}let v_2154: bool = not-caught-fail(h_558) in
                                        {9568}let l_589: label = (if v_2153 then tls13_ext_res_binder else caught-fail) in
                                        {9572}let x_669: bitstring = (if v_2154 then (l_589,h_558) else caught-fail) in
                                        {9573}let binder_key_107: bitstring = (if v_2153 then catch-fail((if v_2154 then hmac(@8_tls_h,early_secret_160,x_669) else fail-any)) else caught-fail) in
                                        {9574}let v_2155: bool = not-caught-fail(binder_key_107) in
                                        {9575}let v_2156: bitstring = (if v_2151 then catch-fail((if v_2153 then (if v_2155 then (early_secret_160,binder_key_107) else fail-any) else fail-any)) else caught-fail) in
                                        {9576}let v_2157: bool = (not-caught-fail(v_2156) && success?(1-proj-2-tuple(v_2156))) in
                                        {9577}let kb_107: mac_key = (if v_2157 then 2-proj-2-tuple(v_2156) else caught-fail) in
                                        {9578}let es_158: bitstring = (if v_2157 then 1-proj-2-tuple(v_2156) else caught-fail) in
                                        {9579}let v_2158: bitstring = (if not(v_2151) then catch-fail(psk_data'_46) else caught-fail) in
                                        {9580}let v_2159: bool = (not-caught-fail(v_2158) && success?(1-proj-4-tuple(v_2158))) in
                                        {9581}let is_safe_93: bool = (if v_2159 then 4-proj-4-tuple(v_2158) else caught-fail) in
                                        {9582}let es_159: bitstring = (if v_2159 then 3-proj-4-tuple(v_2158) else caught-fail) in
                                        {9583}let id_105: identityPsk = (if v_2159 then 2-proj-4-tuple(v_2158) else caught-fail) in
                                        {9584}let psk_237: preSharedKey = (if v_2159 then 1-proj-4-tuple(v_2158) else caught-fail) in
                                        {9585}let (psk_238: preSharedKey,early_secret_161: bitstring,valid_51: bool,safe_psk_54: bool) = (if v_2151 then (if v_2157 then (NoPsk,es_158,true,false) else fail-any) else (if v_2159 then (psk_237,es_159,((psk_237 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_108)),is_safe_93) else fail-any)) in
                                        {9586}event Client_PSKChoosen(id_client_5,psk_238,safe_psk_54);
                                        {9587}if valid_51 then
                                        (
                                            {9590}new s_225[]: seed;
                                            {9588}let gxy_104: element = catch-fail(dh_decap_fun(g_60,gy_52,x_668)) in
                                            {9589}let v_2160: bool = not-caught-fail(gxy_104) in
                                            {9591}let gxy_105: element = (if v_2160 then gxy_104 else dh_f(s_225)) in
                                            {9592}event Client_DH_gxy(id_client_5,gxy_105);
                                            {9594}let m_212: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                            {9595}let v_2161: bool = not-caught-fail(m_212) in
                                            {9596}let h_559: bitstring = (if v_2161 then catch-fail(hash(@8_tls_h,m_212)) else caught-fail) in
                                            {9597}let v_2162: bool = not-caught-fail(h_559) in
                                            {9593}let l_590: label = tls13_derived in
                                            {9598}let x_670: bitstring = (if v_2162 then (l_590,h_559) else caught-fail) in
                                            {9599}let extra_110: bitstring = catch-fail((if v_2161 then (if v_2162 then hmac(@8_tls_h,early_secret_161,x_670) else fail-any) else fail-any)) in
                                            {9600}let v_2163: bool = not-caught-fail(extra_110) in
                                            {9601}let handshake_secret_52: bitstring = (if v_2163 then hmac(@8_tls_h,extra_110,gxy_105) else fail-any) in
                                            {9603}let m_213: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                            {9604}let v_2164: bool = not-caught-fail(m_213) in
                                            {9605}let h_560: bitstring = (if v_2164 then catch-fail(hash(@8_tls_h,m_213)) else caught-fail) in
                                            {9606}let v_2165: bool = not-caught-fail(h_560) in
                                            {9602}let l_591: label = tls13_derived in
                                            {9607}let x_671: bitstring = (if v_2165 then (l_591,h_560) else caught-fail) in
                                            {9608}let extra_111: bitstring = catch-fail((if v_2164 then (if v_2165 then hmac(@8_tls_h,handshake_secret_52,x_671) else fail-any) else fail-any)) in
                                            {9609}let v_2166: bool = not-caught-fail(extra_111) in
                                            {9610}let k_228: bitstring = (if v_2166 then zero else caught-fail) in
                                            {9611}let master_secret_111: bitstring = (if v_2166 then catch-fail(hmac(@8_tls_h,handshake_secret_52,k_228)) else caught-fail) in
                                            {9612}let v_2167: bool = not-caught-fail(master_secret_111) in
                                            {9545}let cur_log_OU1_HRR_OU2_23: bitstring = (cur_log_OU1_HRR_5,client_hello'_26) in
                                            {9559}let cur_log2_106: bitstring = (cur_log_OU1_HRR_OU2_23,server_hello'_41) in
                                            {9614}let h_561: bitstring = (if v_2167 then catch-fail(hash(@8_tls_h,cur_log2_106)) else caught-fail) in
                                            {9615}let v_2168: bool = not-caught-fail(h_561) in
                                            {9613}let l_592: label = (if v_2167 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {9616}let x_672: bitstring = (if v_2168 then (l_592,h_561) else caught-fail) in
                                            {9617}let client_hts_52: bitstring = (if v_2167 then catch-fail((if v_2168 then hmac(@8_tls_h,handshake_secret_52,x_672) else fail-any)) else caught-fail) in
                                            {9618}let v_2169: bool = not-caught-fail(client_hts_52) in
                                            {9620}let h_562: bitstring = (if v_2169 then catch-fail(hash(@8_tls_h,cur_log2_106)) else caught-fail) in
                                            {9621}let v_2170: bool = not-caught-fail(h_562) in
                                            {9619}let l_593: label = (if v_2169 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {9622}let x_673: bitstring = (if v_2170 then (l_593,h_562) else caught-fail) in
                                            {9623}let server_hts_52: bitstring = (if v_2169 then catch-fail((if v_2170 then hmac(@8_tls_h,handshake_secret_52,x_673) else fail-any)) else caught-fail) in
                                            {9624}let v_2171: bool = not-caught-fail(server_hts_52) in
                                            {9626}let h_563: bitstring = (if v_2171 then zero else caught-fail) in
                                            {9625}let l_594: label = (if v_2171 then tls13_key else caught-fail) in
                                            {9627}let x_674: bitstring = (if v_2171 then (l_594,h_563) else caught-fail) in
                                            {9628}let client_wkh_52: bitstring = (if v_2171 then catch-fail(hmac(@8_tls_h,client_hts_52,x_674)) else caught-fail) in
                                            {9629}let v_2172: bool = not-caught-fail(client_wkh_52) in
                                            {9631}let h_564: bitstring = (if v_2172 then zero else caught-fail) in
                                            {9630}let l_595: label = (if v_2172 then tls13_key else caught-fail) in
                                            {9632}let x_675: bitstring = (if v_2172 then (l_595,h_564) else caught-fail) in
                                            {9633}let server_wkh_52: bitstring = (if v_2172 then catch-fail(hmac(@8_tls_h,server_hts_52,x_675)) else caught-fail) in
                                            {9634}let v_2173: bool = not-caught-fail(server_wkh_52) in
                                            {9636}let h_565: bitstring = (if v_2173 then zero else caught-fail) in
                                            {9635}let l_596: label = (if v_2173 then tls13_finished else caught-fail) in
                                            {9637}let x_676: bitstring = (if v_2173 then (l_596,h_565) else caught-fail) in
                                            {9638}let client_fk_52: bitstring = (if v_2173 then catch-fail(hmac(@8_tls_h,client_hts_52,x_676)) else caught-fail) in
                                            {9639}let v_2174: bool = not-caught-fail(client_fk_52) in
                                            {9641}let h_566: bitstring = (if v_2174 then zero else caught-fail) in
                                            {9640}let l_597: label = (if v_2174 then tls13_finished else caught-fail) in
                                            {9642}let x_677: bitstring = (if v_2174 then (l_597,h_566) else caught-fail) in
                                            {9643}let server_fk_52: bitstring = (if v_2174 then catch-fail(hmac(@8_tls_h,server_hts_52,x_677)) else caught-fail) in
                                            {9644}let v_2175: bool = not-caught-fail(server_fk_52) in
                                            {9645}let (master_secret_112: bitstring,chk_59: aead_key,shk_58: aead_key,cfin_59: mac_key,sfin_58: mac_key) = (if v_2166 then (if v_2167 then (if v_2169 then (if v_2171 then (if v_2172 then (if v_2173 then (if v_2174 then (if v_2175 then (master_secret_111,client_wkh_52,server_wkh_52,client_fk_52,server_fk_52) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {9646}event Client_chk(id_client_5,chk_59);
                                            {9647}event Client_shk(id_client_5,shk_58);
                                            {9648}event Client_cfin(id_client_5,cfin_59);
                                            {9649}event Client_sfin(id_client_5,sfin_58);
                                            {9650}in(io, enc_ee_msg_51: bitstring);
                                            {9651}let ee_msg_56: msg = aead_dec(@8_tls_a,shk_58,0,zero,enc_ee_msg_51) in
                                            {9652}let EE(ech_ee_51: echExt,extra_ee_51: extraExt) = ee_msg_56 in
                                            {9653}let cur_log2_107: bitstring = (cur_log2_106,ee_msg_56) in
                                            {9654}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_28,sr_59,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_238,safe_psk_54,@8_comp_psk,master_secret_112,chk_59,0,shk_58,1,cfin_59,sfin_58,cur_log2_107)))
                                        )
                                        else
                                            {9655}out(io, illegal_parameter)
                                    )
                                    else
                                        {9656}out(io, illegal_parameter)
                            )
                            else
                                {9657}out(io, unexpected_message)
                )
                else
                    {9659}let sh_modified_24: msg = SH(B32(sr24_7,zero8),mode_50) in
                    {9658}let cur_log_32: bitstring = (zero,i_client_hello_27) in
                    {9660}let cur_log_sh_24: bitstring = (cur_log_32,sh_modified_24) in
                    {9661}let transcript_ech_conf_24: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_24)) in
                    {9662}let v_2176: bool = not-caught-fail(transcript_ech_conf_24) in
                    {9664}let k_229: bitstring = (if v_2176 then catch-fail(b32_2_b(get_random(i_client_hello_27))) else caught-fail) in
                    {9665}let v_2177: bool = not-caught-fail(k_229) in
                    {9663}let s_226: bitstring = (if v_2176 then zero else caught-fail) in
                    {9666}let k_230: bitstring = (if v_2176 then catch-fail((if v_2177 then hmac(@8_backend_h,s_226,k_229) else fail-any)) else caught-fail) in
                    {9667}let v_2178: bool = not-caught-fail(k_230) in
                    {9668}let l_598: label = (if v_2178 then ech_accept_confirmation else caught-fail) in
                    {9669}let x_678: bitstring = (if v_2178 then (l_598,cur_log_sh_24) else caught-fail) in
                    {9670}let sr8_30: bytes8 = (if v_2176 then catch-fail(crop_into_bytes8((if v_2178 then hmac(@8_backend_h,k_230,x_678) else fail-any))) else caught-fail) in
                    {9671}let v_2179: bool = not-caught-fail(sr8_30) in
                    {9672}if (B32(sr24_7,sr8_26) = (if v_2176 then (if v_2179 then B32(sr24_7,sr8_30) else fail-any) else fail-any)) then
                    (
                        {9673}event ClientEchAcceptance(id_client_5,true);
                        {9675}let (x_679: bitstring,g_61: group) = i_kex_data_12 in
                        {9676}let (psk_offer_52: preSharedKey,id_offer_52: identityPsk,es_offer_52: bitstring,is_safe_offer_52: bool) = psk_data_46 in
                        {9677}event Client_PSKOffer(id_client_5,psk_offer_52,id_offer_52,is_safe_offer_52);
                        {9678}event Client_Rand_client(id_client_5,i_cr_13);
                        {9679}event Client_DH_client(id_client_5,dh_pub(g_61,x_679));
                        {9680}event Client_server_domain(id_client_5,backend_dom_1);
                        {9681}let SH(sr_60: bytes32,mode_58: params) = server_hello_6 in
                        {9682}event Client_Rand_server(id_client_5,sr_60);
                        {9683}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_61,gy_53: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_109: preSharedKeyExt) = mode_58 in
                        (
                            {9685}event Client_DH_server(id_client_5,gy_53);
                            {9686}let v_2180: bool = (psk_ext_109 = empty_psk_ext) in
                            {9687}let psk_239: preSharedKey = (if v_2180 then NoPsk else caught-fail) in
                            {9689}let k_231: bitstring = (if v_2180 then catch-fail(psk2b(psk_239)) else caught-fail) in
                            {9690}let v_2181: bool = not-caught-fail(k_231) in
                            {9688}let s_227: bitstring = (if v_2180 then zero else caught-fail) in
                            {9691}let early_secret_162: bitstring = (if v_2180 then catch-fail((if v_2181 then hmac(@8_backend_h,s_227,k_231) else fail-any)) else caught-fail) in
                            {9692}let v_2182: bool = not-caught-fail(early_secret_162) in
                            {9694}let m_214: bitstring = (if v_2182 then zero else caught-fail) in
                            {9695}let h_567: bitstring = (if v_2182 then catch-fail(hash(@8_backend_h,m_214)) else caught-fail) in
                            {9696}let v_2183: bool = not-caught-fail(h_567) in
                            {9693}let l_599: label = (if v_2182 then tls13_ext_res_binder else caught-fail) in
                            {9697}let x_680: bitstring = (if v_2183 then (l_599,h_567) else caught-fail) in
                            {9698}let binder_key_108: bitstring = (if v_2182 then catch-fail((if v_2183 then hmac(@8_backend_h,early_secret_162,x_680) else fail-any)) else caught-fail) in
                            {9699}let v_2184: bool = not-caught-fail(binder_key_108) in
                            {9700}let v_2185: bitstring = (if v_2180 then catch-fail((if v_2182 then (if v_2184 then (early_secret_162,binder_key_108) else fail-any) else fail-any)) else caught-fail) in
                            {9701}let v_2186: bool = (not-caught-fail(v_2185) && success?(1-proj-2-tuple(v_2185))) in
                            {9702}let kb_108: mac_key = (if v_2186 then 2-proj-2-tuple(v_2185) else caught-fail) in
                            {9703}let es_160: bitstring = (if v_2186 then 1-proj-2-tuple(v_2185) else caught-fail) in
                            {9704}let v_2187: bitstring = (if not(v_2180) then catch-fail(psk_data_46) else caught-fail) in
                            {9705}let v_2188: bool = (not-caught-fail(v_2187) && success?(1-proj-4-tuple(v_2187))) in
                            {9706}let is_safe_94: bool = (if v_2188 then 4-proj-4-tuple(v_2187) else caught-fail) in
                            {9707}let es_161: bitstring = (if v_2188 then 3-proj-4-tuple(v_2187) else caught-fail) in
                            {9708}let id_106: identityPsk = (if v_2188 then 2-proj-4-tuple(v_2187) else caught-fail) in
                            {9709}let psk_240: preSharedKey = (if v_2188 then 1-proj-4-tuple(v_2187) else caught-fail) in
                            {9710}let (psk_241: preSharedKey,early_secret_163: bitstring,valid_52: bool,safe_psk_55: bool) = (if v_2180 then (if v_2186 then (NoPsk,es_160,true,false) else fail-any) else (if v_2188 then (psk_240,es_161,((psk_240 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_109)),is_safe_94) else fail-any)) in
                            {9711}event Client_PSKChoosen(id_client_5,psk_241,safe_psk_55);
                            {9712}if valid_52 then
                            (
                                {9715}new s_228[]: seed;
                                {9713}let gxy_106: element = catch-fail(dh_decap_fun(g_61,gy_53,x_679)) in
                                {9714}let v_2189: bool = not-caught-fail(gxy_106) in
                                {9716}let gxy_107: element = (if v_2189 then gxy_106 else dh_f(s_228)) in
                                {9717}event Client_DH_gxy(id_client_5,gxy_107);
                                {9719}let m_215: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                {9720}let v_2190: bool = not-caught-fail(m_215) in
                                {9721}let h_568: bitstring = (if v_2190 then catch-fail(hash(@8_backend_h,m_215)) else caught-fail) in
                                {9722}let v_2191: bool = not-caught-fail(h_568) in
                                {9718}let l_600: label = tls13_derived in
                                {9723}let x_681: bitstring = (if v_2191 then (l_600,h_568) else caught-fail) in
                                {9724}let extra_112: bitstring = catch-fail((if v_2190 then (if v_2191 then hmac(@8_backend_h,early_secret_163,x_681) else fail-any) else fail-any)) in
                                {9725}let v_2192: bool = not-caught-fail(extra_112) in
                                {9726}let handshake_secret_53: bitstring = (if v_2192 then hmac(@8_backend_h,extra_112,gxy_107) else fail-any) in
                                {9728}let m_216: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                {9729}let v_2193: bool = not-caught-fail(m_216) in
                                {9730}let h_569: bitstring = (if v_2193 then catch-fail(hash(@8_backend_h,m_216)) else caught-fail) in
                                {9731}let v_2194: bool = not-caught-fail(h_569) in
                                {9727}let l_601: label = tls13_derived in
                                {9732}let x_682: bitstring = (if v_2194 then (l_601,h_569) else caught-fail) in
                                {9733}let extra_113: bitstring = catch-fail((if v_2193 then (if v_2194 then hmac(@8_backend_h,handshake_secret_53,x_682) else fail-any) else fail-any)) in
                                {9734}let v_2195: bool = not-caught-fail(extra_113) in
                                {9735}let k_232: bitstring = (if v_2195 then zero else caught-fail) in
                                {9736}let master_secret_113: bitstring = (if v_2195 then catch-fail(hmac(@8_backend_h,handshake_secret_53,k_232)) else caught-fail) in
                                {9737}let v_2196: bool = not-caught-fail(master_secret_113) in
                                {9674}let cur_log_33: bitstring = (zero,i_client_hello_27) in
                                {9684}let cur_log2_108: bitstring = (cur_log_33,server_hello_6) in
                                {9739}let h_570: bitstring = (if v_2196 then catch-fail(hash(@8_backend_h,cur_log2_108)) else caught-fail) in
                                {9740}let v_2197: bool = not-caught-fail(h_570) in
                                {9738}let l_602: label = (if v_2196 then tls13_client_handshake_traffic_secret else caught-fail) in
                                {9741}let x_683: bitstring = (if v_2197 then (l_602,h_570) else caught-fail) in
                                {9742}let client_hts_53: bitstring = (if v_2196 then catch-fail((if v_2197 then hmac(@8_backend_h,handshake_secret_53,x_683) else fail-any)) else caught-fail) in
                                {9743}let v_2198: bool = not-caught-fail(client_hts_53) in
                                {9745}let h_571: bitstring = (if v_2198 then catch-fail(hash(@8_backend_h,cur_log2_108)) else caught-fail) in
                                {9746}let v_2199: bool = not-caught-fail(h_571) in
                                {9744}let l_603: label = (if v_2198 then tls13_server_handshake_traffic_secret else caught-fail) in
                                {9747}let x_684: bitstring = (if v_2199 then (l_603,h_571) else caught-fail) in
                                {9748}let server_hts_53: bitstring = (if v_2198 then catch-fail((if v_2199 then hmac(@8_backend_h,handshake_secret_53,x_684) else fail-any)) else caught-fail) in
                                {9749}let v_2200: bool = not-caught-fail(server_hts_53) in
                                {9751}let h_572: bitstring = (if v_2200 then zero else caught-fail) in
                                {9750}let l_604: label = (if v_2200 then tls13_key else caught-fail) in
                                {9752}let x_685: bitstring = (if v_2200 then (l_604,h_572) else caught-fail) in
                                {9753}let client_wkh_53: bitstring = (if v_2200 then catch-fail(hmac(@8_backend_h,client_hts_53,x_685)) else caught-fail) in
                                {9754}let v_2201: bool = not-caught-fail(client_wkh_53) in
                                {9756}let h_573: bitstring = (if v_2201 then zero else caught-fail) in
                                {9755}let l_605: label = (if v_2201 then tls13_key else caught-fail) in
                                {9757}let x_686: bitstring = (if v_2201 then (l_605,h_573) else caught-fail) in
                                {9758}let server_wkh_53: bitstring = (if v_2201 then catch-fail(hmac(@8_backend_h,server_hts_53,x_686)) else caught-fail) in
                                {9759}let v_2202: bool = not-caught-fail(server_wkh_53) in
                                {9761}let h_574: bitstring = (if v_2202 then zero else caught-fail) in
                                {9760}let l_606: label = (if v_2202 then tls13_finished else caught-fail) in
                                {9762}let x_687: bitstring = (if v_2202 then (l_606,h_574) else caught-fail) in
                                {9763}let client_fk_53: bitstring = (if v_2202 then catch-fail(hmac(@8_backend_h,client_hts_53,x_687)) else caught-fail) in
                                {9764}let v_2203: bool = not-caught-fail(client_fk_53) in
                                {9766}let h_575: bitstring = (if v_2203 then zero else caught-fail) in
                                {9765}let l_607: label = (if v_2203 then tls13_finished else caught-fail) in
                                {9767}let x_688: bitstring = (if v_2203 then (l_607,h_575) else caught-fail) in
                                {9768}let server_fk_53: bitstring = (if v_2203 then catch-fail(hmac(@8_backend_h,server_hts_53,x_688)) else caught-fail) in
                                {9769}let v_2204: bool = not-caught-fail(server_fk_53) in
                                {9770}let (master_secret_114: bitstring,chk_60: aead_key,shk_59: aead_key,cfin_60: mac_key,sfin_59: mac_key) = (if v_2195 then (if v_2196 then (if v_2198 then (if v_2200 then (if v_2201 then (if v_2202 then (if v_2203 then (if v_2204 then (master_secret_113,client_wkh_53,server_wkh_53,client_fk_53,server_fk_53) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                {9771}event Client_chk(id_client_5,chk_60);
                                {9772}event Client_shk(id_client_5,shk_59);
                                {9773}event Client_cfin(id_client_5,cfin_60);
                                {9774}event Client_sfin(id_client_5,sfin_59);
                                {9775}in(io, enc_ee_msg_52: bitstring);
                                {9776}let ee_msg_57: msg = aead_dec(@8_backend_a,shk_59,0,zero,enc_ee_msg_52) in
                                {9777}let EE(ech_ee_52: echExt,extra_ee_52: extraExt) = ee_msg_57 in
                                {9778}let cur_log2_109: bitstring = (cur_log2_108,ee_msg_57) in
                                {9779}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr_13,sr_60,@8_backend_h,@8_backend_a,c_dom_6,backend_dom_1,psk_241,safe_psk_55,@8_comp_psk,master_secret_114,chk_60,0,shk_59,1,cfin_60,sfin_59,cur_log2_109)))
                            )
                            else
                                {9780}out(io, illegal_parameter)
                        )
                        else
                            {9781}out(io, illegal_parameter)
                    )
                    else
                        {9782}event ClientEchAcceptance(id_client_5,false);
                        {9783}let v_2205: bool = @8_use_grease in
                        {9784}let psk_242: preSharedKey = (if not(v_2205) then NoPsk else caught-fail) in
                        {9786}let k_233: bitstring = (if not(v_2205) then catch-fail(psk2b(psk_242)) else caught-fail) in
                        {9787}let v_2206: bool = not-caught-fail(k_233) in
                        {9785}let s_229: bitstring = (if not(v_2205) then zero else caught-fail) in
                        {9788}let early_secret_164: bitstring = (if not(v_2205) then catch-fail((if v_2206 then hmac(@8_tls_h,s_229,k_233) else fail-any)) else caught-fail) in
                        {9789}let v_2207: bool = not-caught-fail(early_secret_164) in
                        {9791}let m_217: bitstring = (if v_2207 then zero else caught-fail) in
                        {9792}let h_576: bitstring = (if v_2207 then catch-fail(hash(@8_tls_h,m_217)) else caught-fail) in
                        {9793}let v_2208: bool = not-caught-fail(h_576) in
                        {9790}let l_608: label = (if v_2207 then tls13_ext_res_binder else caught-fail) in
                        {9794}let x_689: bitstring = (if v_2208 then (l_608,h_576) else caught-fail) in
                        {9795}let binder_key_109: bitstring = (if v_2207 then catch-fail((if v_2208 then hmac(@8_tls_h,early_secret_164,x_689) else fail-any)) else caught-fail) in
                        {9796}let v_2209: bool = not-caught-fail(binder_key_109) in
                        {9797}let v_2210: bitstring = (if not(v_2205) then catch-fail((if v_2207 then (if v_2209 then (early_secret_164,binder_key_109) else fail-any) else fail-any)) else caught-fail) in
                        {9798}let v_2211: bool = (not-caught-fail(v_2210) && success?(1-proj-2-tuple(v_2210))) in
                        {9799}let kb_109: mac_key = (if v_2211 then 2-proj-2-tuple(v_2210) else caught-fail) in
                        {9800}let es'_5: bitstring = (if v_2211 then 1-proj-2-tuple(v_2210) else caught-fail) in
                        {9801}let psk_data'_47: bitstring = (if v_2205 then psk_data_46 else (if v_2211 then (NoPsk,zero,es'_5,false) else fail-any)) in
                        {9803}let (x_690: bitstring,g_62: group) = o_kex_data_12 in
                        {9804}let (psk_offer_53: preSharedKey,id_offer_53: identityPsk,es_offer_53: bitstring,is_safe_offer_53: bool) = psk_data'_47 in
                        {9805}event Client_PSKOffer(id_client_5,psk_offer_53,id_offer_53,is_safe_offer_53);
                        {9806}event Client_Rand_client(id_client_5,o_cr_17);
                        {9807}event Client_DH_client(id_client_5,dh_pub(g_62,x_690));
                        {9808}event Client_server_domain(id_client_5,o_dom_8);
                        {9809}let SH(sr_61: bytes32,mode_59: params) = server_hello_6 in
                        {9810}event Client_Rand_server(id_client_5,sr_61);
                        {9811}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_62,gy_54: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_110: preSharedKeyExt) = mode_59 in
                        (
                            {9813}event Client_DH_server(id_client_5,gy_54);
                            {9814}let v_2212: bool = (psk_ext_110 = empty_psk_ext) in
                            {9815}let psk_243: preSharedKey = (if v_2212 then NoPsk else caught-fail) in
                            {9817}let k_234: bitstring = (if v_2212 then catch-fail(psk2b(psk_243)) else caught-fail) in
                            {9818}let v_2213: bool = not-caught-fail(k_234) in
                            {9816}let s_230: bitstring = (if v_2212 then zero else caught-fail) in
                            {9819}let early_secret_165: bitstring = (if v_2212 then catch-fail((if v_2213 then hmac(@8_tls_h,s_230,k_234) else fail-any)) else caught-fail) in
                            {9820}let v_2214: bool = not-caught-fail(early_secret_165) in
                            {9822}let m_218: bitstring = (if v_2214 then zero else caught-fail) in
                            {9823}let h_577: bitstring = (if v_2214 then catch-fail(hash(@8_tls_h,m_218)) else caught-fail) in
                            {9824}let v_2215: bool = not-caught-fail(h_577) in
                            {9821}let l_609: label = (if v_2214 then tls13_ext_res_binder else caught-fail) in
                            {9825}let x_691: bitstring = (if v_2215 then (l_609,h_577) else caught-fail) in
                            {9826}let binder_key_110: bitstring = (if v_2214 then catch-fail((if v_2215 then hmac(@8_tls_h,early_secret_165,x_691) else fail-any)) else caught-fail) in
                            {9827}let v_2216: bool = not-caught-fail(binder_key_110) in
                            {9828}let v_2217: bitstring = (if v_2212 then catch-fail((if v_2214 then (if v_2216 then (early_secret_165,binder_key_110) else fail-any) else fail-any)) else caught-fail) in
                            {9829}let v_2218: bool = (not-caught-fail(v_2217) && success?(1-proj-2-tuple(v_2217))) in
                            {9830}let kb_110: mac_key = (if v_2218 then 2-proj-2-tuple(v_2217) else caught-fail) in
                            {9831}let es_162: bitstring = (if v_2218 then 1-proj-2-tuple(v_2217) else caught-fail) in
                            {9832}let v_2219: bitstring = (if not(v_2212) then catch-fail(psk_data'_47) else caught-fail) in
                            {9833}let v_2220: bool = (not-caught-fail(v_2219) && success?(1-proj-4-tuple(v_2219))) in
                            {9834}let is_safe_95: bool = (if v_2220 then 4-proj-4-tuple(v_2219) else caught-fail) in
                            {9835}let es_163: bitstring = (if v_2220 then 3-proj-4-tuple(v_2219) else caught-fail) in
                            {9836}let id_107: identityPsk = (if v_2220 then 2-proj-4-tuple(v_2219) else caught-fail) in
                            {9837}let psk_244: preSharedKey = (if v_2220 then 1-proj-4-tuple(v_2219) else caught-fail) in
                            {9838}let (psk_245: preSharedKey,early_secret_166: bitstring,valid_53: bool,safe_psk_56: bool) = (if v_2212 then (if v_2218 then (NoPsk,es_162,true,false) else fail-any) else (if v_2220 then (psk_244,es_163,((psk_244 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_110)),is_safe_95) else fail-any)) in
                            {9839}event Client_PSKChoosen(id_client_5,psk_245,safe_psk_56);
                            {9840}if valid_53 then
                            (
                                {9843}new s_231[]: seed;
                                {9841}let gxy_108: element = catch-fail(dh_decap_fun(g_62,gy_54,x_690)) in
                                {9842}let v_2221: bool = not-caught-fail(gxy_108) in
                                {9844}let gxy_109: element = (if v_2221 then gxy_108 else dh_f(s_231)) in
                                {9845}event Client_DH_gxy(id_client_5,gxy_109);
                                {9847}let m_219: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                {9848}let v_2222: bool = not-caught-fail(m_219) in
                                {9849}let h_578: bitstring = (if v_2222 then catch-fail(hash(@8_tls_h,m_219)) else caught-fail) in
                                {9850}let v_2223: bool = not-caught-fail(h_578) in
                                {9846}let l_610: label = tls13_derived in
                                {9851}let x_692: bitstring = (if v_2223 then (l_610,h_578) else caught-fail) in
                                {9852}let extra_114: bitstring = catch-fail((if v_2222 then (if v_2223 then hmac(@8_tls_h,early_secret_166,x_692) else fail-any) else fail-any)) in
                                {9853}let v_2224: bool = not-caught-fail(extra_114) in
                                {9854}let handshake_secret_54: bitstring = (if v_2224 then hmac(@8_tls_h,extra_114,gxy_109) else fail-any) in
                                {9856}let m_220: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                {9857}let v_2225: bool = not-caught-fail(m_220) in
                                {9858}let h_579: bitstring = (if v_2225 then catch-fail(hash(@8_tls_h,m_220)) else caught-fail) in
                                {9859}let v_2226: bool = not-caught-fail(h_579) in
                                {9855}let l_611: label = tls13_derived in
                                {9860}let x_693: bitstring = (if v_2226 then (l_611,h_579) else caught-fail) in
                                {9861}let extra_115: bitstring = catch-fail((if v_2225 then (if v_2226 then hmac(@8_tls_h,handshake_secret_54,x_693) else fail-any) else fail-any)) in
                                {9862}let v_2227: bool = not-caught-fail(extra_115) in
                                {9863}let k_235: bitstring = (if v_2227 then zero else caught-fail) in
                                {9864}let master_secret_115: bitstring = (if v_2227 then catch-fail(hmac(@8_tls_h,handshake_secret_54,k_235)) else caught-fail) in
                                {9865}let v_2228: bool = not-caught-fail(master_secret_115) in
                                {9802}let cur_log_34: bitstring = (zero,o_client_hello_7) in
                                {9812}let cur_log2_110: bitstring = (cur_log_34,server_hello_6) in
                                {9867}let h_580: bitstring = (if v_2228 then catch-fail(hash(@8_tls_h,cur_log2_110)) else caught-fail) in
                                {9868}let v_2229: bool = not-caught-fail(h_580) in
                                {9866}let l_612: label = (if v_2228 then tls13_client_handshake_traffic_secret else caught-fail) in
                                {9869}let x_694: bitstring = (if v_2229 then (l_612,h_580) else caught-fail) in
                                {9870}let client_hts_54: bitstring = (if v_2228 then catch-fail((if v_2229 then hmac(@8_tls_h,handshake_secret_54,x_694) else fail-any)) else caught-fail) in
                                {9871}let v_2230: bool = not-caught-fail(client_hts_54) in
                                {9873}let h_581: bitstring = (if v_2230 then catch-fail(hash(@8_tls_h,cur_log2_110)) else caught-fail) in
                                {9874}let v_2231: bool = not-caught-fail(h_581) in
                                {9872}let l_613: label = (if v_2230 then tls13_server_handshake_traffic_secret else caught-fail) in
                                {9875}let x_695: bitstring = (if v_2231 then (l_613,h_581) else caught-fail) in
                                {9876}let server_hts_54: bitstring = (if v_2230 then catch-fail((if v_2231 then hmac(@8_tls_h,handshake_secret_54,x_695) else fail-any)) else caught-fail) in
                                {9877}let v_2232: bool = not-caught-fail(server_hts_54) in
                                {9879}let h_582: bitstring = (if v_2232 then zero else caught-fail) in
                                {9878}let l_614: label = (if v_2232 then tls13_key else caught-fail) in
                                {9880}let x_696: bitstring = (if v_2232 then (l_614,h_582) else caught-fail) in
                                {9881}let client_wkh_54: bitstring = (if v_2232 then catch-fail(hmac(@8_tls_h,client_hts_54,x_696)) else caught-fail) in
                                {9882}let v_2233: bool = not-caught-fail(client_wkh_54) in
                                {9884}let h_583: bitstring = (if v_2233 then zero else caught-fail) in
                                {9883}let l_615: label = (if v_2233 then tls13_key else caught-fail) in
                                {9885}let x_697: bitstring = (if v_2233 then (l_615,h_583) else caught-fail) in
                                {9886}let server_wkh_54: bitstring = (if v_2233 then catch-fail(hmac(@8_tls_h,server_hts_54,x_697)) else caught-fail) in
                                {9887}let v_2234: bool = not-caught-fail(server_wkh_54) in
                                {9889}let h_584: bitstring = (if v_2234 then zero else caught-fail) in
                                {9888}let l_616: label = (if v_2234 then tls13_finished else caught-fail) in
                                {9890}let x_698: bitstring = (if v_2234 then (l_616,h_584) else caught-fail) in
                                {9891}let client_fk_54: bitstring = (if v_2234 then catch-fail(hmac(@8_tls_h,client_hts_54,x_698)) else caught-fail) in
                                {9892}let v_2235: bool = not-caught-fail(client_fk_54) in
                                {9894}let h_585: bitstring = (if v_2235 then zero else caught-fail) in
                                {9893}let l_617: label = (if v_2235 then tls13_finished else caught-fail) in
                                {9895}let x_699: bitstring = (if v_2235 then (l_617,h_585) else caught-fail) in
                                {9896}let server_fk_54: bitstring = (if v_2235 then catch-fail(hmac(@8_tls_h,server_hts_54,x_699)) else caught-fail) in
                                {9897}let v_2236: bool = not-caught-fail(server_fk_54) in
                                {9898}let (master_secret_116: bitstring,chk_61: aead_key,shk_60: aead_key,cfin_61: mac_key,sfin_60: mac_key) = (if v_2227 then (if v_2228 then (if v_2230 then (if v_2232 then (if v_2233 then (if v_2234 then (if v_2235 then (if v_2236 then (master_secret_115,client_wkh_54,server_wkh_54,client_fk_54,server_fk_54) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                {9899}event Client_chk(id_client_5,chk_61);
                                {9900}event Client_shk(id_client_5,shk_60);
                                {9901}event Client_cfin(id_client_5,cfin_61);
                                {9902}event Client_sfin(id_client_5,sfin_60);
                                {9903}in(io, enc_ee_msg_53: bitstring);
                                {9904}let ee_msg_58: msg = aead_dec(@8_tls_a,shk_60,0,zero,enc_ee_msg_53) in
                                {9905}let EE(ech_ee_53: echExt,extra_ee_53: extraExt) = ee_msg_58 in
                                {9906}let cur_log2_111: bitstring = (cur_log2_110,ee_msg_58) in
                                {9907}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(o_cr_17,sr_61,@8_tls_h,@8_tls_a,c_dom_6,o_dom_8,psk_245,safe_psk_56,@8_comp_psk,master_secret_116,chk_61,0,shk_60,1,cfin_61,sfin_60,cur_log2_111)))
                            )
                            else
                                {9908}out(io, illegal_parameter)
                        )
                        else
                            {9909}out(io, illegal_parameter)
            )
            else
                {9910}out(io, unexpected_message)
        )
)

Declared: select table2(pre_shared_keys(*c_dom_7,*s_dom_15,*h_586,*id_108,*x_700,*idP_18,*safe_6),pre_shared_keys(*c_dom'_16,*s_dom'_1,*h',*id',*x',*idP',*safe'))/400000
Declared: select table2(ech_configurations(*config_2,*skR_4),ech_configurations(*config',*skR'_1))/400000
Declared: select table2(long_term_keys(*c_dom_7,*sk_d_1,*pkr,*crt_12,*idP_18),long_term_keys(*c_dom'_16,*sk_d',*pkr',*crt',*idP'))/400000
Declared: select mess2(ch_server_SH[],*x_700,ch_server_SH[],*x')/300000
Declared: select mess2(ch_server_CRT[],*x_700,ch_server_CRT[],*x')/300000
Declared: select mess2(ch_server_FIN[],*x_700,ch_server_FIN[],*x')/300000
Declared: select mess2(ch_server_CFIN[],*x_700,ch_server_CFIN[],*x')/300000
Declared: select mess2(ch_client_after_EE[],*x_700,ch_client_after_EE[],*x')/300000
Declared: select mess2(ch_client_CRT[],*x_700,ch_client_CRT[],*x')/300000
Declared: select mess2(ch_client_FIN[],*x_700,ch_client_FIN[],*x')/300000
Declared: select mess2(ch_client_CFIN[],*x_700,ch_client_CFIN[],*x')/300000
-- Axiom event(PreciseMess(ch,choice[id_108,id2_1],choice[st1_9,st2_2],choice[x1,x2])) && event(PreciseMess(ch,choice[id_108,id2'],choice[st1',st2'],choice[x1',x2'])) ==> st1_9 = st1' && x1 = x1'; event(PreciseMess(ch,choice[id1_1,id_108],choice[st1_9,st2_2],choice[x1,x2])) && event(PreciseMess(ch,choice[id1',id_108],choice[st1',st2'],choice[x1',x2'])) ==> st2_2 = st2' && x2 = x2'; event(PreciseMess(ch,choice[id1_1,id2_1],choice[st_16,st2_2],choice[x1,x2])) && event(PreciseMess(ch,choice[id1',id2'],choice[st_16,st2'],choice[x1',x2'])) ==> id1_1 = id1' && x1 = x1'; event(PreciseMess(ch,choice[id1_1,id2_1],choice[st1_9,st_16],choice[x1,x2])) && event(PreciseMess(ch,choice[id1',id2'],choice[st1',st_16],choice[x1',x2'])) ==> id2_1 = id2' && x2 = x2'
Encoding: 
axiom event(PreciseMess(ch,choice[id_108,id2_1],choice[st1_9,st2_2],choice[x1,x2])) && event(PreciseMess(ch,choice[id_108,id2'],choice[st1',st2'],choice[x1',x2'])) ==> st1_9 = st1' && x1 = x1' encoded as event2(PreciseMess(ch,id_108,st1_9,x1),PreciseMess(ch,id2_1,st2_2,x2)) && event2(PreciseMess(ch,id_108,st1',x1'),PreciseMess(ch,id2',st2',x2')) ==> st1_9 = st1' && x1 = x1'
axiom event(PreciseMess(ch,choice[id1_1,id_108],choice[st1_9,st2_2],choice[x1,x2])) && event(PreciseMess(ch,choice[id1',id_108],choice[st1',st2'],choice[x1',x2'])) ==> st2_2 = st2' && x2 = x2' encoded as event2(PreciseMess(ch,id1_1,st1_9,x1),PreciseMess(ch,id_108,st2_2,x2)) && event2(PreciseMess(ch,id1',st1',x1'),PreciseMess(ch,id_108,st2',x2')) ==> st2_2 = st2' && x2 = x2'
axiom event(PreciseMess(ch,choice[id1_1,id2_1],choice[st_16,st2_2],choice[x1,x2])) && event(PreciseMess(ch,choice[id1',id2'],choice[st_16,st2'],choice[x1',x2'])) ==> id1_1 = id1' && x1 = x1' encoded as event2(PreciseMess(ch,id1_1,st_16,x1),PreciseMess(ch,id2_1,st2_2,x2)) && event2(PreciseMess(ch,id1',st_16,x1'),PreciseMess(ch,id2',st2',x2')) ==> id1_1 = id1' && x1 = x1'
axiom event(PreciseMess(ch,choice[id1_1,id2_1],choice[st1_9,st_16],choice[x1,x2])) && event(PreciseMess(ch,choice[id1',id2'],choice[st1',st_16],choice[x1',x2'])) ==> id2_1 = id2' && x2 = x2' encoded as event2(PreciseMess(ch,id1_1,st1_9,x1),PreciseMess(ch,id2_1,st_16,x2)) && event2(PreciseMess(ch,id1',st1',x1'),PreciseMess(ch,id2',st_16,x2')) ==> id2_1 = id2' && x2 = x2'
in biprocess 1.
-- Axiom event(PreciseInput(st_16,choice[x_700,x1])) && event(PreciseInput(st_16,choice[x',x2])) ==> x_700 = x' && x1 = x2 encoded as event2(PreciseInput(st_16,x_700),PreciseInput(st_16,x1)) && event2(PreciseInput(st_16,x'),PreciseInput(st_16,x2)) ==> x_700 = x' && x1 = x2 in biprocess 1.
-- Axiom event(Server_DH_client(choice[id_108,id1_1],choice[e,e1])) && event(Server_DH_client(choice[id_108,id2_1],choice[e',e2])) ==> e = e'; event(Server_DH_client(choice[id1_1,id_108],choice[e1,e])) && event(Server_DH_client(choice[id2_1,id_108],choice[e2,e'])) ==> e = e'
Encoding: 
axiom event(Server_DH_client(choice[id_108,id1_1],choice[e,e1])) && event(Server_DH_client(choice[id_108,id2_1],choice[e',e2])) ==> e = e' encoded as event2(Server_DH_client(id_108,e),Server_DH_client(id1_1,e1)) && event2(Server_DH_client(id_108,e'),Server_DH_client(id2_1,e2)) ==> e = e'
axiom event(Server_DH_client(choice[id1_1,id_108],choice[e1,e])) && event(Server_DH_client(choice[id2_1,id_108],choice[e2,e'])) ==> e = e' encoded as event2(Server_DH_client(id1_1,e1),Server_DH_client(id_108,e)) && event2(Server_DH_client(id2_1,e2),Server_DH_client(id_108,e')) ==> e = e'
in biprocess 1.
-- Axiom event(Server_new_PSK(choice[id_108,id1_1],choice[k_236,k1])) && event(Server_new_PSK(choice[id_108,id2_1],choice[k',k2])) ==> k_236 = k'; event(Server_new_PSK(choice[id1_1,id_108],choice[k1,k_236])) && event(Server_new_PSK(choice[id2_1,id_108],choice[k2,k'])) ==> k_236 = k'
Encoding: 
axiom event(Server_new_PSK(choice[id_108,id1_1],choice[k_236,k1])) && event(Server_new_PSK(choice[id_108,id2_1],choice[k',k2])) ==> k_236 = k' encoded as event2(Server_new_PSK(id_108,k_236),Server_new_PSK(id1_1,k1)) && event2(Server_new_PSK(id_108,k'),Server_new_PSK(id2_1,k2)) ==> k_236 = k'
axiom event(Server_new_PSK(choice[id1_1,id_108],choice[k1,k_236])) && event(Server_new_PSK(choice[id2_1,id_108],choice[k2,k'])) ==> k_236 = k' encoded as event2(Server_new_PSK(id1_1,k1),Server_new_PSK(id_108,k_236)) && event2(Server_new_PSK(id2_1,k2),Server_new_PSK(id_108,k')) ==> k_236 = k'
in biprocess 1.
-- Axiom not (table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,is_safe'])) && attacker(choice[psk_246,psk''])); not (table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',true])) && attacker(choice[psk'',psk_246])); table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[is_safe_96,is_safe'])) && attacker(choice[psk_246,psk'']) ==> is_safe_96 ≠ true; table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',is_safe_96])) && attacker(choice[psk'',psk_246]) ==> is_safe_96 ≠ true; table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[is_safe_96,is_safe'])) ==> psk_246 ≠ NoPsk && psk_246 ≠ zero; table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',is_safe_96])) ==> psk_246 ≠ NoPsk && psk_246 ≠ zero; attacker(choice[mk_idpsk(s_dom_15,h_586,psk_246),idpsk]) ==> psk_246 ≠ NoPsk && psk_246 ≠ zero; attacker(choice[idpsk,mk_idpsk(s_dom_15,h_586,psk_246)]) ==> psk_246 ≠ NoPsk && psk_246 ≠ zero; not (table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_7,zero,psk_246),x_700])); not (table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',true])) && attacker(choice[x_700,hmac_ideal(i_7,zero,psk_246)])); not (table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_ext_res_binder,hash_ideal(i_7,zero))),x_700])); not (table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',true])) && attacker(choice[x_700,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_ext_res_binder,hash_ideal(i_7,zero)))])); not (table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),x_700])); not (table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',true])) && attacker(choice[x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e)])); not (table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero)),x_700])); not (table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',true])) && attacker(choice[x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero))])); not (table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero)),x_700])); not (table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',true])) && attacker(choice[x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero))])); not (table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero)),x_700])); not (table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',true])) && attacker(choice[x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero))])); not (table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero)),x_700])); not (table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',true])) && attacker(choice[x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero))]))
Encoding: 
axiom not (table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,is_safe'])) && attacker(choice[psk_246,psk''])) encoded as not (table2(pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true),pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(psk_246,psk''))
axiom not (table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',true])) && attacker(choice[psk'',psk_246])) encoded as not (table2(pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true)) && attacker2(psk'',psk_246))
axiom table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[is_safe_96,is_safe'])) && attacker(choice[psk_246,psk'']) ==> is_safe_96 ≠ true encoded as table2(pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,is_safe_96),pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(psk_246,psk'') ==> is_safe_96 ≠ true
axiom table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',is_safe_96])) && attacker(choice[psk'',psk_246]) ==> is_safe_96 ≠ true encoded as table2(pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,is_safe_96)) && attacker2(psk'',psk_246) ==> is_safe_96 ≠ true
axiom table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[is_safe_96,is_safe'])) ==> psk_246 ≠ NoPsk && psk_246 ≠ zero encoded as table2(pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,is_safe_96),pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe')) ==> psk_246 ≠ NoPsk && psk_246 ≠ zero
axiom table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',is_safe_96])) ==> psk_246 ≠ NoPsk && psk_246 ≠ zero encoded as table2(pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,is_safe_96)) ==> psk_246 ≠ NoPsk && psk_246 ≠ zero
axiom attacker(choice[mk_idpsk(s_dom_15,h_586,psk_246),idpsk]) ==> psk_246 ≠ NoPsk && psk_246 ≠ zero encoded as attacker2(mk_idpsk(s_dom_15,h_586,psk_246),idpsk) ==> psk_246 ≠ NoPsk && psk_246 ≠ zero
axiom attacker(choice[idpsk,mk_idpsk(s_dom_15,h_586,psk_246)]) ==> psk_246 ≠ NoPsk && psk_246 ≠ zero encoded as attacker2(idpsk,mk_idpsk(s_dom_15,h_586,psk_246)) ==> psk_246 ≠ NoPsk && psk_246 ≠ zero
axiom not (table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_7,zero,psk_246),x_700])) encoded as not (table2(pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true),pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_7,zero,psk_246),x_700))
axiom not (table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',true])) && attacker(choice[x_700,hmac_ideal(i_7,zero,psk_246)])) encoded as not (table2(pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true)) && attacker2(x_700,hmac_ideal(i_7,zero,psk_246)))
axiom not (table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_ext_res_binder,hash_ideal(i_7,zero))),x_700])) encoded as not (table2(pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true),pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_ext_res_binder,hash_ideal(i_7,zero))),x_700))
axiom not (table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',true])) && attacker(choice[x_700,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_ext_res_binder,hash_ideal(i_7,zero)))])) encoded as not (table2(pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true)) && attacker2(x_700,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_ext_res_binder,hash_ideal(i_7,zero)))))
axiom not (table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),x_700])) encoded as not (table2(pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true),pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),x_700))
axiom not (table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',true])) && attacker(choice[x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e)])) encoded as not (table2(pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true)) && attacker2(x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e)))
axiom not (table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero)),x_700])) encoded as not (table2(pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true),pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero)),x_700))
axiom not (table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',true])) && attacker(choice[x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero))])) encoded as not (table2(pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true)) && attacker2(x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero))))
axiom not (table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero)),x_700])) encoded as not (table2(pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true),pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero)),x_700))
axiom not (table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',true])) && attacker(choice[x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero))])) encoded as not (table2(pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true)) && attacker2(x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero))))
axiom not (table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero)),x_700])) encoded as not (table2(pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true),pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero)),x_700))
axiom not (table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',true])) && attacker(choice[x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero))])) encoded as not (table2(pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true)) && attacker2(x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero))))
axiom not (table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero)),x_700])) encoded as not (table2(pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true),pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero)),x_700))
axiom not (table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',true])) && attacker(choice[x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero))])) encoded as not (table2(pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true)) && attacker2(x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero))))
in biprocess 1.
-- Axiom not (event(Server_new_PSK(choice[id_s,id_s_1],choice[new_psk,new_psk'])) && table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[new_psk,new_psk''],choice[id_c,id_c'],choice[is_safe_96,is_safe'])) && event(Server_DH_client(choice[id_s,id_s_2],choice[dh_pub(g_63,x_700),e])) && attacker(choice[x_700,x'])); not (event(Server_new_PSK(choice[id_s_1,id_s],choice[new_psk',new_psk])) && table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[new_psk'',new_psk],choice[id_c',id_c],choice[is_safe',is_safe_96])) && event(Server_DH_client(choice[id_s_2,id_s],choice[e,dh_pub(g_63,x_700)])) && attacker(choice[x',x_700]))
Encoding: 
axiom not (event(Server_new_PSK(choice[id_s,id_s_1],choice[new_psk,new_psk'])) && table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[new_psk,new_psk''],choice[id_c,id_c'],choice[is_safe_96,is_safe'])) && event(Server_DH_client(choice[id_s,id_s_2],choice[dh_pub(g_63,x_700),e])) && attacker(choice[x_700,x'])) encoded as not (event2(Server_new_PSK(id_s,new_psk),Server_new_PSK(id_s_1,new_psk')) && table2(pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,new_psk,id_c,is_safe_96),pre_shared_keys(c_dom'_16,s_dom'_1,h',id',new_psk'',id_c',is_safe')) && event2(Server_DH_client(id_s,dh_pub(g_63,x_700)),Server_DH_client(id_s_2,e)) && attacker2(x_700,x'))
axiom not (event(Server_new_PSK(choice[id_s_1,id_s],choice[new_psk',new_psk])) && table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[new_psk'',new_psk],choice[id_c',id_c],choice[is_safe',is_safe_96])) && event(Server_DH_client(choice[id_s_2,id_s],choice[e,dh_pub(g_63,x_700)])) && attacker(choice[x',x_700])) encoded as not (event2(Server_new_PSK(id_s_1,new_psk'),Server_new_PSK(id_s,new_psk)) && table2(pre_shared_keys(c_dom'_16,s_dom'_1,h',id',new_psk'',id_c',is_safe'),pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,new_psk,id_c,is_safe_96)) && event2(Server_DH_client(id_s_2,e),Server_DH_client(id_s,dh_pub(g_63,x_700))) && attacker2(x',x_700))
in biprocess 1.
-- Axiom table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_alg_21,h_alg'_1],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,safe'])) ==> id_108 = mk_idpsk(s_dom_15,h_alg_21,psk_246); table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h_alg'_1,h_alg_21],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[safe',true])) ==> id_108 = mk_idpsk(s_dom_15,h_alg_21,psk_246)
Encoding: 
axiom table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_alg_21,h_alg'_1],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,safe'])) ==> id_108 = mk_idpsk(s_dom_15,h_alg_21,psk_246) encoded as table2(pre_shared_keys(c_dom_7,s_dom_15,h_alg_21,id_108,psk_246,idP_18,true),pre_shared_keys(c_dom'_16,s_dom'_1,h_alg'_1,id',psk',idP',safe')) ==> id_108 = mk_idpsk(s_dom_15,h_alg_21,psk_246)
axiom table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h_alg'_1,h_alg_21],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[safe',true])) ==> id_108 = mk_idpsk(s_dom_15,h_alg_21,psk_246) encoded as table2(pre_shared_keys(c_dom'_16,s_dom'_1,h_alg'_1,id',psk',idP',safe'),pre_shared_keys(c_dom_7,s_dom_15,h_alg_21,id_108,psk_246,idP_18,true)) ==> id_108 = mk_idpsk(s_dom_15,h_alg_21,psk_246)
in biprocess 1.
-- Axiom table(pre_shared_keys(choice[c_dom_7,c_dom1_1],choice[s_dom_15,s_dom1],choice[h_alg_21,h_alg1],choice[id_108,id1_1],choice[psk_246,psk1_1],choice[idP_18,idP1_2],choice[safe_6,safe1_1])) && table(pre_shared_keys(choice[c_dom'_16,c_dom2_1],choice[s_dom'_1,s_dom2],choice[h_alg'_1,h_alg2],choice[id',id2_1],choice[psk',psk2_1],choice[idP_18,idP2_2],choice[safe',safe2_1])) ==> c_dom_7 = c_dom'_16 && s_dom_15 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_108 = id' && psk_246 = psk' && safe_6 = safe'; table(pre_shared_keys(choice[c_dom1_1,c_dom_7],choice[s_dom1,s_dom_15],choice[h_alg1,h_alg_21],choice[id1_1,id_108],choice[psk1_1,psk_246],choice[idP1_2,idP_18],choice[safe1_1,safe_6])) && table(pre_shared_keys(choice[c_dom2_1,c_dom'_16],choice[s_dom2,s_dom'_1],choice[h_alg2,h_alg'_1],choice[id2_1,id'],choice[psk2_1,psk'],choice[idP2_2,idP_18],choice[safe2_1,safe'])) ==> c_dom_7 = c_dom'_16 && s_dom_15 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_108 = id' && psk_246 = psk' && safe_6 = safe'; table(pre_shared_keys(choice[c_dom_7,c_dom1_1],choice[s_dom_15,s_dom1],choice[h_alg_21,h_alg1],choice[id_108,id1_1],choice[psk_246,psk1_1],choice[idP_18,idP1_2],choice[safe_6,safe1_1])) && table(pre_shared_keys(choice[c_dom'_16,c_dom2_1],choice[s_dom'_1,s_dom2],choice[h_alg'_1,h_alg2],choice[id',id2_1],choice[psk_246,psk2_1],choice[idP',idP2_2],choice[safe',safe2_1])) ==> c_dom_7 = c_dom'_16 && s_dom_15 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_108 = id' && idP_18 = idP' && safe_6 = safe'; table(pre_shared_keys(choice[c_dom1_1,c_dom_7],choice[s_dom1,s_dom_15],choice[h_alg1,h_alg_21],choice[id1_1,id_108],choice[psk1_1,psk_246],choice[idP1_2,idP_18],choice[safe1_1,safe_6])) && table(pre_shared_keys(choice[c_dom2_1,c_dom'_16],choice[s_dom2,s_dom'_1],choice[h_alg2,h_alg'_1],choice[id2_1,id'],choice[psk2_1,psk_246],choice[idP2_2,idP'],choice[safe2_1,safe'])) ==> c_dom_7 = c_dom'_16 && s_dom_15 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_108 = id' && idP_18 = idP' && safe_6 = safe'
Encoding: 
axiom table(pre_shared_keys(choice[c_dom_7,c_dom1_1],choice[s_dom_15,s_dom1],choice[h_alg_21,h_alg1],choice[id_108,id1_1],choice[psk_246,psk1_1],choice[idP_18,idP1_2],choice[safe_6,safe1_1])) && table(pre_shared_keys(choice[c_dom'_16,c_dom2_1],choice[s_dom'_1,s_dom2],choice[h_alg'_1,h_alg2],choice[id',id2_1],choice[psk',psk2_1],choice[idP_18,idP2_2],choice[safe',safe2_1])) ==> c_dom_7 = c_dom'_16 && s_dom_15 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_108 = id' && psk_246 = psk' && safe_6 = safe' encoded as table2(pre_shared_keys(c_dom_7,s_dom_15,h_alg_21,id_108,psk_246,idP_18,safe_6),pre_shared_keys(c_dom1_1,s_dom1,h_alg1,id1_1,psk1_1,idP1_2,safe1_1)) && table2(pre_shared_keys(c_dom'_16,s_dom'_1,h_alg'_1,id',psk',idP_18,safe'),pre_shared_keys(c_dom2_1,s_dom2,h_alg2,id2_1,psk2_1,idP2_2,safe2_1)) ==> c_dom_7 = c_dom'_16 && s_dom_15 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_108 = id' && psk_246 = psk' && safe_6 = safe'
axiom table(pre_shared_keys(choice[c_dom1_1,c_dom_7],choice[s_dom1,s_dom_15],choice[h_alg1,h_alg_21],choice[id1_1,id_108],choice[psk1_1,psk_246],choice[idP1_2,idP_18],choice[safe1_1,safe_6])) && table(pre_shared_keys(choice[c_dom2_1,c_dom'_16],choice[s_dom2,s_dom'_1],choice[h_alg2,h_alg'_1],choice[id2_1,id'],choice[psk2_1,psk'],choice[idP2_2,idP_18],choice[safe2_1,safe'])) ==> c_dom_7 = c_dom'_16 && s_dom_15 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_108 = id' && psk_246 = psk' && safe_6 = safe' encoded as table2(pre_shared_keys(c_dom1_1,s_dom1,h_alg1,id1_1,psk1_1,idP1_2,safe1_1),pre_shared_keys(c_dom_7,s_dom_15,h_alg_21,id_108,psk_246,idP_18,safe_6)) && table2(pre_shared_keys(c_dom2_1,s_dom2,h_alg2,id2_1,psk2_1,idP2_2,safe2_1),pre_shared_keys(c_dom'_16,s_dom'_1,h_alg'_1,id',psk',idP_18,safe')) ==> c_dom_7 = c_dom'_16 && s_dom_15 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_108 = id' && psk_246 = psk' && safe_6 = safe'
axiom table(pre_shared_keys(choice[c_dom_7,c_dom1_1],choice[s_dom_15,s_dom1],choice[h_alg_21,h_alg1],choice[id_108,id1_1],choice[psk_246,psk1_1],choice[idP_18,idP1_2],choice[safe_6,safe1_1])) && table(pre_shared_keys(choice[c_dom'_16,c_dom2_1],choice[s_dom'_1,s_dom2],choice[h_alg'_1,h_alg2],choice[id',id2_1],choice[psk_246,psk2_1],choice[idP',idP2_2],choice[safe',safe2_1])) ==> c_dom_7 = c_dom'_16 && s_dom_15 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_108 = id' && idP_18 = idP' && safe_6 = safe' encoded as table2(pre_shared_keys(c_dom_7,s_dom_15,h_alg_21,id_108,psk_246,idP_18,safe_6),pre_shared_keys(c_dom1_1,s_dom1,h_alg1,id1_1,psk1_1,idP1_2,safe1_1)) && table2(pre_shared_keys(c_dom'_16,s_dom'_1,h_alg'_1,id',psk_246,idP',safe'),pre_shared_keys(c_dom2_1,s_dom2,h_alg2,id2_1,psk2_1,idP2_2,safe2_1)) ==> c_dom_7 = c_dom'_16 && s_dom_15 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_108 = id' && idP_18 = idP' && safe_6 = safe'
axiom table(pre_shared_keys(choice[c_dom1_1,c_dom_7],choice[s_dom1,s_dom_15],choice[h_alg1,h_alg_21],choice[id1_1,id_108],choice[psk1_1,psk_246],choice[idP1_2,idP_18],choice[safe1_1,safe_6])) && table(pre_shared_keys(choice[c_dom2_1,c_dom'_16],choice[s_dom2,s_dom'_1],choice[h_alg2,h_alg'_1],choice[id2_1,id'],choice[psk2_1,psk_246],choice[idP2_2,idP'],choice[safe2_1,safe'])) ==> c_dom_7 = c_dom'_16 && s_dom_15 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_108 = id' && idP_18 = idP' && safe_6 = safe' encoded as table2(pre_shared_keys(c_dom1_1,s_dom1,h_alg1,id1_1,psk1_1,idP1_2,safe1_1),pre_shared_keys(c_dom_7,s_dom_15,h_alg_21,id_108,psk_246,idP_18,safe_6)) && table2(pre_shared_keys(c_dom2_1,s_dom2,h_alg2,id2_1,psk2_1,idP2_2,safe2_1),pre_shared_keys(c_dom'_16,s_dom'_1,h_alg'_1,id',psk_246,idP',safe')) ==> c_dom_7 = c_dom'_16 && s_dom_15 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_108 = id' && idP_18 = idP' && safe_6 = safe'
in biprocess 1.
-- Restriction event(Same(choice[x_700,x'])) ==> x_700 = x' encoded as event2(Same(x_700),Same(x')) ==> x_700 = x' in biprocess 1.
-- Restriction not (event(ConfigOffered(id_c,config_2)) && event(CompromisedEchKeyForEquiv(config_2))) encoded as not (event2(ConfigOffered(id_c,config_2),ConfigOffered(id_c,config_2)) && event2(CompromisedEchKeyForEquiv(config_2),CompromisedEchKeyForEquiv(config_2))) in biprocess 1.
-- Restriction not (event(ConfigOffered(idClientDiff(s_232),ech_config(id_108,g_63,pkR_22,frontend,h_alg_21,a_alg_19))) && event(Client_server_domain(idClientDiff(s_232),frontend)) && event(Client_Cert_server(idClientDiff(s_232),s_pkey_7)) && event(CompromisedLtkForEquiv(s_pkey_7))) encoded as not (event2(ConfigOffered(idClientDiff(s_232),ech_config(id_108,g_63,pkR_22,frontend,h_alg_21,a_alg_19)),ConfigOffered(idClientDiff(s_232),ech_config(id_108,g_63,pkR_22,frontend,h_alg_21,a_alg_19))) && event2(Client_server_domain(idClientDiff(s_232),frontend),Client_server_domain(idClientDiff(s_232),frontend)) && event2(Client_Cert_server(idClientDiff(s_232),s_pkey_7),Client_Cert_server(idClientDiff(s_232),s_pkey_7)) && event2(CompromisedLtkForEquiv(s_pkey_7),CompromisedLtkForEquiv(s_pkey_7))) in biprocess 1.
-- Restriction event(Selected_ltk(choice[dom1_1,dom1'],choice[dom2_1,dom2'],choice[idP_18,idP'])) ==> dom1_1 = dom2_1 && dom1' = dom2' && ((dom1_1 = dom1' && idP_18 = idP') || dom1_1 ≠ dom1') encoded as event2(Selected_ltk(dom1_1,dom2_1,idP_18),Selected_ltk(dom1',dom2',idP')) ==> dom1_1 = dom2_1 && dom1' = dom2' && ((dom1_1 = dom1' && idP_18 = idP') || dom1_1 ≠ dom1') in biprocess 1.
-- Restriction event(Selected_psk(choice[dom1_1,dom1'],choice[dom2_1,dom2'],choice[idP_18,idP'],choice[safe_6,safe'])) ==> dom1_1 = dom2_1 && dom1' = dom2' && (dom1_1 ≠ dom1' || (dom1_1 = dom1' && idP_18 = idP')) encoded as event2(Selected_psk(dom1_1,dom2_1,idP_18,safe_6),Selected_psk(dom1',dom2',idP',safe')) ==> dom1_1 = dom2_1 && dom1' = dom2' && (dom1_1 ≠ dom1' || (dom1_1 = dom1' && idP_18 = idP')) in biprocess 1.
-- Restriction event(Selected_psk_no_missmatch(idClientDiff(s_232),choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[psk_246,psk'],choice[id_108,id'])) ==> id_108 = mk_idpsk(s_dom_15,h_586,psk_246) && id' = mk_idpsk(s_dom'_1,h',psk') encoded as event2(Selected_psk_no_missmatch(idClientDiff(s_232),s_dom_15,h_586,psk_246,id_108),Selected_psk_no_missmatch(idClientDiff(s_232),s_dom'_1,h',psk',id')) ==> id_108 = mk_idpsk(s_dom_15,h_586,psk_246) && id' = mk_idpsk(s_dom'_1,h',psk') in biprocess 1.
-- Restriction event(ClientSequenceClientDataWriteKey(idP_18,st_16,i_7)) && event(ClientSequenceClientDataWriteKey(idP_18,st',i_7)) ==> st_16 = st'; event(ClientSequenceServerDataWriteKey(idP_18,st_16,i_7)) && event(ClientSequenceServerDataWriteKey(idP_18,st',i_7)) ==> st_16 = st'; event(ServerSequenceServerDataWriteKey(idP_18,st_16,i_7)) && event(ServerSequenceServerDataWriteKey(idP_18,st',i_7)) ==> st_16 = st'; event(ServerSequenceClientDataWriteKey(idP_18,st_16,i_7)) && event(ServerSequenceClientDataWriteKey(idP_18,st',i_7)) ==> st_16 = st'
Encoding: 
restriction event(ClientSequenceClientDataWriteKey(idP_18,st_16,i_7)) && event(ClientSequenceClientDataWriteKey(idP_18,st',i_7)) ==> st_16 = st' encoded as event2(ClientSequenceClientDataWriteKey(idP_18,st_16,i_7),ClientSequenceClientDataWriteKey(idP_18,st_16,i_7)) && event2(ClientSequenceClientDataWriteKey(idP_18,st',i_7),ClientSequenceClientDataWriteKey(idP_18,st',i_7)) ==> st_16 = st'
restriction event(ClientSequenceServerDataWriteKey(idP_18,st_16,i_7)) && event(ClientSequenceServerDataWriteKey(idP_18,st',i_7)) ==> st_16 = st' encoded as event2(ClientSequenceServerDataWriteKey(idP_18,st_16,i_7),ClientSequenceServerDataWriteKey(idP_18,st_16,i_7)) && event2(ClientSequenceServerDataWriteKey(idP_18,st',i_7),ClientSequenceServerDataWriteKey(idP_18,st',i_7)) ==> st_16 = st'
restriction event(ServerSequenceServerDataWriteKey(idP_18,st_16,i_7)) && event(ServerSequenceServerDataWriteKey(idP_18,st',i_7)) ==> st_16 = st' encoded as event2(ServerSequenceServerDataWriteKey(idP_18,st_16,i_7),ServerSequenceServerDataWriteKey(idP_18,st_16,i_7)) && event2(ServerSequenceServerDataWriteKey(idP_18,st',i_7),ServerSequenceServerDataWriteKey(idP_18,st',i_7)) ==> st_16 = st'
restriction event(ServerSequenceClientDataWriteKey(idP_18,st_16,i_7)) && event(ServerSequenceClientDataWriteKey(idP_18,st',i_7)) ==> st_16 = st' encoded as event2(ServerSequenceClientDataWriteKey(idP_18,st_16,i_7),ServerSequenceClientDataWriteKey(idP_18,st_16,i_7)) && event2(ServerSequenceClientDataWriteKey(idP_18,st',i_7),ServerSequenceClientDataWriteKey(idP_18,st',i_7)) ==> st_16 = st'
in biprocess 1.
-- Diff-equivalence in biprocess 1.
Translating the process into Horn clauses...
Termination warning: v_2237 ≠ v_2238 && attacker2(v_2239,v_2237) && attacker2(v_2239,v_2238) -> bad
Selecting 0
Termination warning: v_2237 ≠ v_2238 && attacker2(v_2237,v_2239) && attacker2(v_2238,v_2239) -> bad
Selecting 0
Completing...
200 rules inserted. Base: 200 rules (87 with conclusion selected). Queue: 12877 rules.
400 rules inserted. Base: 400 rules (106 with conclusion selected). Queue: 12677 rules.
Termination warning: v_2237 ≠ v_2238 && attacker2(v_2239,v_2237) && attacker2(v_2239,v_2238) -> bad
Selecting 0
Warning of non termination (Selected):
attacker2(v_2237,v_2238)
v_2238 ≠ v_2239 && attacker2(v_2237,v_2238) && attacker2(v_2237,v_2239) -> bad
Termination warning: v_2237 ≠ v_2238 && attacker2(v_2237,v_2239) && attacker2(v_2238,v_2239) -> bad
Selecting 0
Warning of non termination (Selected):
attacker2(v_2237,v_2238)
v_2237 ≠ v_2239 && attacker2(v_2237,v_2238) && attacker2(v_2239,v_2238) -> bad
600 rules inserted. Base: 600 rules (134 with conclusion selected). Queue: 12513 rules.
800 rules inserted. Base: 800 rules (134 with conclusion selected). Queue: 12313 rules.
1000 rules inserted. Base: 1000 rules (134 with conclusion selected). Queue: 12113 rules.
1200 rules inserted. Base: 1200 rules (134 with conclusion selected). Queue: 11913 rules.
1400 rules inserted. Base: 1400 rules (134 with conclusion selected). Queue: 11713 rules.
1600 rules inserted. Base: 1600 rules (134 with conclusion selected). Queue: 11513 rules.
1800 rules inserted. Base: 1800 rules (134 with conclusion selected). Queue: 11313 rules.
2000 rules inserted. Base: 2000 rules (134 with conclusion selected). Queue: 11113 rules.
2200 rules inserted. Base: 2200 rules (134 with conclusion selected). Queue: 10913 rules.
2400 rules inserted. Base: 2400 rules (135 with conclusion selected). Queue: 10715 rules.
2600 rules inserted. Base: 2600 rules (135 with conclusion selected). Queue: 10515 rules.
2800 rules inserted. Base: 2800 rules (135 with conclusion selected). Queue: 10315 rules.
3000 rules inserted. Base: 3000 rules (137 with conclusion selected). Queue: 10153 rules.
3200 rules inserted. Base: 3200 rules (137 with conclusion selected). Queue: 9953 rules.
3400 rules inserted. Base: 3400 rules (137 with conclusion selected). Queue: 9753 rules.
3600 rules inserted. Base: 3600 rules (137 with conclusion selected). Queue: 9553 rules.
3800 rules inserted. Base: 3800 rules (137 with conclusion selected). Queue: 9353 rules.
4000 rules inserted. Base: 4000 rules (137 with conclusion selected). Queue: 9153 rules.
4200 rules inserted. Base: 4200 rules (137 with conclusion selected). Queue: 8953 rules.
4400 rules inserted. Base: 4400 rules (137 with conclusion selected). Queue: 8753 rules.
4600 rules inserted. Base: 4600 rules (137 with conclusion selected). Queue: 8553 rules.
4800 rules inserted. Base: 4800 rules (137 with conclusion selected). Queue: 8353 rules.
5000 rules inserted. Base: 5000 rules (137 with conclusion selected). Queue: 8153 rules.
5200 rules inserted. Base: 5200 rules (137 with conclusion selected). Queue: 7953 rules.
5400 rules inserted. Base: 5400 rules (137 with conclusion selected). Queue: 7753 rules.
5600 rules inserted. Base: 5600 rules (137 with conclusion selected). Queue: 7553 rules.
5800 rules inserted. Base: 5800 rules (137 with conclusion selected). Queue: 7353 rules.
6000 rules inserted. Base: 6000 rules (137 with conclusion selected). Queue: 7153 rules.
6200 rules inserted. Base: 6200 rules (137 with conclusion selected). Queue: 6953 rules.
6400 rules inserted. Base: 6400 rules (137 with conclusion selected). Queue: 6753 rules.
6600 rules inserted. Base: 6600 rules (137 with conclusion selected). Queue: 6553 rules.
6800 rules inserted. Base: 6800 rules (137 with conclusion selected). Queue: 6353 rules.
7000 rules inserted. Base: 7000 rules (137 with conclusion selected). Queue: 6153 rules.
7200 rules inserted. Base: 7200 rules (137 with conclusion selected). Queue: 5953 rules.
7400 rules inserted. Base: 7400 rules (137 with conclusion selected). Queue: 5753 rules.
7600 rules inserted. Base: 7600 rules (137 with conclusion selected). Queue: 5553 rules.
7800 rules inserted. Base: 7800 rules (137 with conclusion selected). Queue: 5353 rules.
8000 rules inserted. Base: 8000 rules (137 with conclusion selected). Queue: 5153 rules.
8200 rules inserted. Base: 8200 rules (137 with conclusion selected). Queue: 4953 rules.
8400 rules inserted. Base: 8400 rules (137 with conclusion selected). Queue: 4753 rules.
8600 rules inserted. Base: 8600 rules (137 with conclusion selected). Queue: 4553 rules.
8800 rules inserted. Base: 8800 rules (137 with conclusion selected). Queue: 4353 rules.
9000 rules inserted. Base: 9000 rules (137 with conclusion selected). Queue: 4153 rules.
9200 rules inserted. Base: 9200 rules (137 with conclusion selected). Queue: 3953 rules.
9400 rules inserted. Base: 9400 rules (137 with conclusion selected). Queue: 3753 rules.
9600 rules inserted. Base: 9600 rules (137 with conclusion selected). Queue: 3553 rules.
9800 rules inserted. Base: 9800 rules (137 with conclusion selected). Queue: 3353 rules.
10000 rules inserted. Base: 10000 rules (137 with conclusion selected). Queue: 3153 rules.
10200 rules inserted. Base: 10200 rules (137 with conclusion selected). Queue: 2953 rules.
10400 rules inserted. Base: 10400 rules (137 with conclusion selected). Queue: 2753 rules.
10600 rules inserted. Base: 10600 rules (137 with conclusion selected). Queue: 2553 rules.
10800 rules inserted. Base: 10800 rules (137 with conclusion selected). Queue: 2353 rules.
11000 rules inserted. Base: 11000 rules (137 with conclusion selected). Queue: 2153 rules.
11200 rules inserted. Base: 11200 rules (137 with conclusion selected). Queue: 1953 rules.
11400 rules inserted. Base: 11400 rules (137 with conclusion selected). Queue: 1753 rules.
11600 rules inserted. Base: 11600 rules (137 with conclusion selected). Queue: 1553 rules.
11800 rules inserted. Base: 11800 rules (137 with conclusion selected). Queue: 1353 rules.
12000 rules inserted. Base: 12000 rules (137 with conclusion selected). Queue: 1153 rules.
12200 rules inserted. Base: 12200 rules (138 with conclusion selected). Queue: 1027 rules.
12400 rules inserted. Base: 12400 rules (139 with conclusion selected). Queue: 933 rules.
12600 rules inserted. Base: 12600 rules (140 with conclusion selected). Queue: 783 rules.
12800 rules inserted. Base: 12787 rules (142 with conclusion selected). Queue: 596 rules.
13000 rules inserted. Base: 12987 rules (142 with conclusion selected). Queue: 503 rules.
13200 rules inserted. Base: 13187 rules (144 with conclusion selected). Queue: 319 rules.
13400 rules inserted. Base: 13385 rules (163 with conclusion selected). Queue: 226 rules.
13600 rules inserted. Base: 13584 rules (199 with conclusion selected). Queue: 766 rules.
13800 rules inserted. Base: 13776 rules (237 with conclusion selected). Queue: 808 rules.
14000 rules inserted. Base: 13976 rules (237 with conclusion selected). Queue: 608 rules.
14200 rules inserted. Base: 14176 rules (237 with conclusion selected). Queue: 408 rules.
14400 rules inserted. Base: 14355 rules (278 with conclusion selected). Queue: 409 rules.
14600 rules inserted. Base: 14531 rules (332 with conclusion selected). Queue: 475 rules.
14800 rules inserted. Base: 14718 rules (368 with conclusion selected). Queue: 719 rules.
15000 rules inserted. Base: 14903 rules (419 with conclusion selected). Queue: 919 rules.
15200 rules inserted. Base: 15082 rules (439 with conclusion selected). Queue: 1031 rules.
15400 rules inserted. Base: 15276 rules (439 with conclusion selected). Queue: 1009 rules.
15600 rules inserted. Base: 15476 rules (439 with conclusion selected). Queue: 983 rules.
15800 rules inserted. Base: 15664 rules (440 with conclusion selected). Queue: 966 rules.
16000 rules inserted. Base: 15860 rules (481 with conclusion selected). Queue: 1102 rules.
16200 rules inserted. Base: 16038 rules (489 with conclusion selected). Queue: 1086 rules.
16400 rules inserted. Base: 16224 rules (489 with conclusion selected). Queue: 1046 rules.
16600 rules inserted. Base: 16413 rules (489 with conclusion selected). Queue: 1010 rules.
16800 rules inserted. Base: 16596 rules (489 with conclusion selected). Queue: 975 rules.
17000 rules inserted. Base: 16794 rules (511 with conclusion selected). Queue: 1058 rules.
17200 rules inserted. Base: 16984 rules (522 with conclusion selected). Queue: 1053 rules.
17400 rules inserted. Base: 17163 rules (526 with conclusion selected). Queue: 1169 rules.
17600 rules inserted. Base: 17351 rules (526 with conclusion selected). Queue: 1153 rules.
17800 rules inserted. Base: 17541 rules (526 with conclusion selected). Queue: 1131 rules.
18000 rules inserted. Base: 17741 rules (533 with conclusion selected). Queue: 1150 rules.
18200 rules inserted. Base: 17929 rules (542 with conclusion selected). Queue: 1205 rules.
18400 rules inserted. Base: 18129 rules (543 with conclusion selected). Queue: 1112 rules.
18600 rules inserted. Base: 18277 rules (543 with conclusion selected). Queue: 1097 rules.
18800 rules inserted. Base: 18438 rules (543 with conclusion selected). Queue: 1083 rules.
19000 rules inserted. Base: 18623 rules (543 with conclusion selected). Queue: 1067 rules.
19200 rules inserted. Base: 18823 rules (543 with conclusion selected). Queue: 1031 rules.
19400 rules inserted. Base: 19001 rules (555 with conclusion selected). Queue: 1042 rules.
19600 rules inserted. Base: 19157 rules (561 with conclusion selected). Queue: 1049 rules.
19800 rules inserted. Base: 19312 rules (561 with conclusion selected). Queue: 989 rules.
20000 rules inserted. Base: 19462 rules (561 with conclusion selected). Queue: 947 rules.
20200 rules inserted. Base: 19648 rules (561 with conclusion selected). Queue: 925 rules.
20400 rules inserted. Base: 19836 rules (579 with conclusion selected). Queue: 893 rules.
20600 rules inserted. Base: 19997 rules (587 with conclusion selected). Queue: 923 rules.
20800 rules inserted. Base: 20121 rules (587 with conclusion selected). Queue: 887 rules.
21000 rules inserted. Base: 20251 rules (587 with conclusion selected). Queue: 843 rules.
21200 rules inserted. Base: 20427 rules (587 with conclusion selected). Queue: 827 rules.
21400 rules inserted. Base: 20587 rules (611 with conclusion selected). Queue: 945 rules.
21600 rules inserted. Base: 20752 rules (617 with conclusion selected). Queue: 889 rules.
21800 rules inserted. Base: 20895 rules (617 with conclusion selected). Queue: 838 rules.
22000 rules inserted. Base: 21051 rules (617 with conclusion selected). Queue: 806 rules.
22200 rules inserted. Base: 21237 rules (625 with conclusion selected). Queue: 749 rules.
22400 rules inserted. Base: 21419 rules (633 with conclusion selected). Queue: 686 rules.
22600 rules inserted. Base: 21490 rules (633 with conclusion selected). Queue: 682 rules.
22800 rules inserted. Base: 21646 rules (633 with conclusion selected). Queue: 649 rules.
23000 rules inserted. Base: 21830 rules (649 with conclusion selected). Queue: 718 rules.
23200 rules inserted. Base: 21974 rules (657 with conclusion selected). Queue: 730 rules.
23400 rules inserted. Base: 22096 rules (657 with conclusion selected). Queue: 699 rules.
23600 rules inserted. Base: 22272 rules (657 with conclusion selected). Queue: 660 rules.
23800 rules inserted. Base: 22452 rules (659 with conclusion selected). Queue: 637 rules.
24000 rules inserted. Base: 22569 rules (671 with conclusion selected). Queue: 606 rules.
24200 rules inserted. Base: 22707 rules (675 with conclusion selected). Queue: 584 rules.
24400 rules inserted. Base: 22871 rules (679 with conclusion selected). Queue: 547 rules.
24600 rules inserted. Base: 23013 rules (698 with conclusion selected). Queue: 614 rules.
24800 rules inserted. Base: 23140 rules (699 with conclusion selected). Queue: 584 rules.
25000 rules inserted. Base: 23312 rules (704 with conclusion selected). Queue: 592 rules.
25200 rules inserted. Base: 23477 rules (718 with conclusion selected). Queue: 656 rules.
25400 rules inserted. Base: 23614 rules (728 with conclusion selected). Queue: 648 rules.
25600 rules inserted. Base: 23777 rules (740 with conclusion selected). Queue: 661 rules.
25800 rules inserted. Base: 23944 rules (740 with conclusion selected). Queue: 647 rules.
26000 rules inserted. Base: 24071 rules (744 with conclusion selected). Queue: 647 rules.
26200 rules inserted. Base: 24253 rules (744 with conclusion selected). Queue: 581 rules.
26400 rules inserted. Base: 24401 rules (744 with conclusion selected). Queue: 557 rules.
26600 rules inserted. Base: 24550 rules (750 with conclusion selected). Queue: 571 rules.
26800 rules inserted. Base: 24706 rules (766 with conclusion selected). Queue: 651 rules.
27000 rules inserted. Base: 24795 rules (766 with conclusion selected). Queue: 630 rules.
27200 rules inserted. Base: 24928 rules (772 with conclusion selected). Queue: 661 rules.
27400 rules inserted. Base: 25072 rules (777 with conclusion selected). Queue: 651 rules.
27600 rules inserted. Base: 25224 rules (784 with conclusion selected). Queue: 695 rules.
27800 rules inserted. Base: 25364 rules (794 with conclusion selected). Queue: 747 rules.
28000 rules inserted. Base: 25525 rules (802 with conclusion selected). Queue: 803 rules.
28200 rules inserted. Base: 25706 rules (806 with conclusion selected). Queue: 810 rules.
28400 rules inserted. Base: 25855 rules (806 with conclusion selected). Queue: 753 rules.
28600 rules inserted. Base: 25995 rules (810 with conclusion selected). Queue: 775 rules.
28800 rules inserted. Base: 26166 rules (834 with conclusion selected). Queue: 961 rules.
29000 rules inserted. Base: 26301 rules (870 with conclusion selected). Queue: 1276 rules.
29200 rules inserted. Base: 26353 rules (870 with conclusion selected). Queue: 1217 rules.
29400 rules inserted. Base: 26499 rules (874 with conclusion selected). Queue: 1207 rules.
29600 rules inserted. Base: 26646 rules (876 with conclusion selected). Queue: 1147 rules.
29800 rules inserted. Base: 26777 rules (878 with conclusion selected). Queue: 1103 rules.
30000 rules inserted. Base: 26929 rules (878 with conclusion selected). Queue: 1031 rules.
30200 rules inserted. Base: 27081 rules (878 with conclusion selected). Queue: 957 rules.
30400 rules inserted. Base: 27152 rules (878 with conclusion selected). Queue: 929 rules.
30600 rules inserted. Base: 27272 rules (878 with conclusion selected). Queue: 912 rules.
30800 rules inserted. Base: 27440 rules (880 with conclusion selected). Queue: 818 rules.
31000 rules inserted. Base: 27583 rules (882 with conclusion selected). Queue: 758 rules.
31200 rules inserted. Base: 27725 rules (882 with conclusion selected). Queue: 670 rules.
31400 rules inserted. Base: 27839 rules (882 with conclusion selected). Queue: 618 rules.
31600 rules inserted. Base: 27998 rules (882 with conclusion selected). Queue: 565 rules.
31800 rules inserted. Base: 28175 rules (882 with conclusion selected). Queue: 502 rules.
32000 rules inserted. Base: 28222 rules (882 with conclusion selected). Queue: 461 rules.
32200 rules inserted. Base: 28341 rules (882 with conclusion selected). Queue: 413 rules.
32400 rules inserted. Base: 28380 rules (889 with conclusion selected). Queue: 385 rules.
32600 rules inserted. Base: 28528 rules (889 with conclusion selected). Queue: 354 rules.
32800 rules inserted. Base: 28641 rules (897 with conclusion selected). Queue: 353 rules.
33000 rules inserted. Base: 28771 rules (897 with conclusion selected). Queue: 307 rules.
33200 rules inserted. Base: 28937 rules (958 with conclusion selected). Queue: 494 rules.
33400 rules inserted. Base: 29090 rules (959 with conclusion selected). Queue: 454 rules.
33600 rules inserted. Base: 29282 rules (959 with conclusion selected). Queue: 340 rules.
33800 rules inserted. Base: 29442 rules (959 with conclusion selected). Queue: 279 rules.
34000 rules inserted. Base: 29530 rules (962 with conclusion selected). Queue: 272 rules.
34200 rules inserted. Base: 29626 rules (962 with conclusion selected). Queue: 266 rules.
34400 rules inserted. Base: 29721 rules (964 with conclusion selected). Queue: 252 rules.
34600 rules inserted. Base: 29799 rules (970 with conclusion selected). Queue: 276 rules.
34800 rules inserted. Base: 29912 rules (971 with conclusion selected). Queue: 283 rules.
35000 rules inserted. Base: 30053 rules (971 with conclusion selected). Queue: 234 rules.
35200 rules inserted. Base: 30129 rules (976 with conclusion selected). Queue: 237 rules.
35400 rules inserted. Base: 30202 rules (976 with conclusion selected). Queue: 214 rules.
35600 rules inserted. Base: 30316 rules (1016 with conclusion selected). Queue: 327 rules.
35800 rules inserted. Base: 30464 rules (1016 with conclusion selected). Queue: 212 rules.
36000 rules inserted. Base: 30572 rules (1018 with conclusion selected). Queue: 181 rules.
36200 rules inserted. Base: 30640 rules (1018 with conclusion selected). Queue: 177 rules.
36400 rules inserted. Base: 30725 rules (1018 with conclusion selected). Queue: 161 rules.
36600 rules inserted. Base: 30814 rules (1018 with conclusion selected). Queue: 142 rules.
36800 rules inserted. Base: 30874 rules (1029 with conclusion selected). Queue: 238 rules.
37000 rules inserted. Base: 31018 rules (1030 with conclusion selected). Queue: 210 rules.
37200 rules inserted. Base: 31176 rules (1071 with conclusion selected). Queue: 440 rules.
37400 rules inserted. Base: 31374 rules (1081 with conclusion selected). Queue: 440 rules.
37600 rules inserted. Base: 31512 rules (1091 with conclusion selected). Queue: 448 rules.
37800 rules inserted. Base: 31697 rules (1092 with conclusion selected). Queue: 429 rules.
38000 rules inserted. Base: 31886 rules (1102 with conclusion selected). Queue: 537 rules.
38200 rules inserted. Base: 32022 rules (1105 with conclusion selected). Queue: 568 rules.
38400 rules inserted. Base: 32201 rules (1105 with conclusion selected). Queue: 552 rules.
38600 rules inserted. Base: 32370 rules (1109 with conclusion selected). Queue: 596 rules.
38800 rules inserted. Base: 32510 rules (1109 with conclusion selected). Queue: 589 rules.
39000 rules inserted. Base: 32687 rules (1109 with conclusion selected). Queue: 589 rules.
39200 rules inserted. Base: 32841 rules (1109 with conclusion selected). Queue: 581 rules.
39400 rules inserted. Base: 33010 rules (1109 with conclusion selected). Queue: 471 rules.
39600 rules inserted. Base: 33204 rules (1109 with conclusion selected). Queue: 365 rules.
39800 rules inserted. Base: 33385 rules (1111 with conclusion selected). Queue: 302 rules.
40000 rules inserted. Base: 33549 rules (1111 with conclusion selected). Queue: 258 rules.
40200 rules inserted. Base: 33649 rules (1113 with conclusion selected). Queue: 264 rules.
40400 rules inserted. Base: 33753 rules (1113 with conclusion selected). Queue: 260 rules.
40600 rules inserted. Base: 33825 rules (1135 with conclusion selected). Queue: 566 rules.
40800 rules inserted. Base: 33979 rules (1214 with conclusion selected). Queue: 1307 rules.
41000 rules inserted. Base: 34175 rules (1280 with conclusion selected). Queue: 1865 rules.
41200 rules inserted. Base: 34319 rules (1304 with conclusion selected). Queue: 2053 rules.
41400 rules inserted. Base: 34455 rules (1304 with conclusion selected). Queue: 1989 rules.
41600 rules inserted. Base: 34604 rules (1304 with conclusion selected). Queue: 1919 rules.
41800 rules inserted. Base: 34745 rules (1304 with conclusion selected). Queue: 1847 rules.
42000 rules inserted. Base: 34897 rules (1304 with conclusion selected). Queue: 1776 rules.
42200 rules inserted. Base: 35027 rules (1304 with conclusion selected). Queue: 1711 rules.
42400 rules inserted. Base: 35177 rules (1304 with conclusion selected). Queue: 1638 rules.
42600 rules inserted. Base: 35323 rules (1304 with conclusion selected). Queue: 1567 rules.
42800 rules inserted. Base: 35469 rules (1304 with conclusion selected). Queue: 1494 rules.
43000 rules inserted. Base: 35616 rules (1304 with conclusion selected). Queue: 1423 rules.
43200 rules inserted. Base: 35751 rules (1306 with conclusion selected). Queue: 1401 rules.
43400 rules inserted. Base: 35897 rules (1307 with conclusion selected). Queue: 1336 rules.
43600 rules inserted. Base: 36048 rules (1307 with conclusion selected). Queue: 1242 rules.
43800 rules inserted. Base: 36207 rules (1307 with conclusion selected). Queue: 1140 rules.
44000 rules inserted. Base: 36369 rules (1307 with conclusion selected). Queue: 1052 rules.
44200 rules inserted. Base: 36521 rules (1307 with conclusion selected). Queue: 952 rules.
44400 rules inserted. Base: 36679 rules (1307 with conclusion selected). Queue: 860 rules.
44600 rules inserted. Base: 36821 rules (1308 with conclusion selected). Queue: 801 rules.
44800 rules inserted. Base: 36993 rules (1309 with conclusion selected). Queue: 743 rules.
45000 rules inserted. Base: 37173 rules (1309 with conclusion selected). Queue: 638 rules.
45200 rules inserted. Base: 37365 rules (1309 with conclusion selected). Queue: 535 rules.
45400 rules inserted. Base: 37543 rules (1309 with conclusion selected). Queue: 454 rules.
45600 rules inserted. Base: 37665 rules (1309 with conclusion selected). Queue: 364 rules.
45800 rules inserted. Base: 37781 rules (1309 with conclusion selected). Queue: 232 rules.
46000 rules inserted. Base: 37813 rules (1309 with conclusion selected). Queue: 180 rules.
46200 rules inserted. Base: 37875 rules (1311 with conclusion selected). Queue: 179 rules.
46400 rules inserted. Base: 37955 rules (1311 with conclusion selected). Queue: 147 rules.
46600 rules inserted. Base: 37889 rules (1312 with conclusion selected). Queue: 120 rules.
46800 rules inserted. Base: 37924 rules (1328 with conclusion selected). Queue: 201 rules.
47000 rules inserted. Base: 37987 rules (1332 with conclusion selected). Queue: 185 rules.
47200 rules inserted. Base: 38109 rules (1333 with conclusion selected). Queue: 139 rules.
47400 rules inserted. Base: 38264 rules (1340 with conclusion selected). Queue: 173 rules.
47600 rules inserted. Base: 38404 rules (1342 with conclusion selected). Queue: 149 rules.
47800 rules inserted. Base: 38555 rules (1342 with conclusion selected). Queue: 135 rules.
48000 rules inserted. Base: 38636 rules (1342 with conclusion selected). Queue: 129 rules.
48200 rules inserted. Base: 38767 rules (1342 with conclusion selected). Queue: 113 rules.
48400 rules inserted. Base: 38835 rules (1342 with conclusion selected). Queue: 99 rules.
48600 rules inserted. Base: 38897 rules (1350 with conclusion selected). Queue: 163 rules.
48800 rules inserted. Base: 39036 rules (1352 with conclusion selected). Queue: 150 rules.
49000 rules inserted. Base: 39128 rules (1355 with conclusion selected). Queue: 171 rules.
49200 rules inserted. Base: 39252 rules (1357 with conclusion selected). Queue: 151 rules.
49400 rules inserted. Base: 39329 rules (1357 with conclusion selected). Queue: 126 rules.
49600 rules inserted. Base: 39412 rules (1357 with conclusion selected). Queue: 118 rules.
49800 rules inserted. Base: 39446 rules (1369 with conclusion selected). Queue: 150 rules.
50000 rules inserted. Base: 39553 rules (1369 with conclusion selected). Queue: 112 rules.
50200 rules inserted. Base: 39658 rules (1375 with conclusion selected). Queue: 132 rules.
50400 rules inserted. Base: 39762 rules (1387 with conclusion selected). Queue: 150 rules.
50600 rules inserted. Base: 39836 rules (1387 with conclusion selected). Queue: 106 rules.
50800 rules inserted. Base: 39946 rules (1393 with conclusion selected). Queue: 130 rules.
51000 rules inserted. Base: 40096 rules (1405 with conclusion selected). Queue: 178 rules.
51200 rules inserted. Base: 40248 rules (1405 with conclusion selected). Queue: 133 rules.
51400 rules inserted. Base: 40400 rules (1405 with conclusion selected). Queue: 134 rules.
51600 rules inserted. Base: 40576 rules (1411 with conclusion selected). Queue: 153 rules.
51800 rules inserted. Base: 40752 rules (1411 with conclusion selected). Queue: 148 rules.
52000 rules inserted. Base: 40892 rules (1411 with conclusion selected). Queue: 138 rules.
52200 rules inserted. Base: 41046 rules (1411 with conclusion selected). Queue: 138 rules.
52400 rules inserted. Base: 41194 rules (1411 with conclusion selected). Queue: 141 rules.
52600 rules inserted. Base: 41328 rules (1419 with conclusion selected). Queue: 178 rules.
52800 rules inserted. Base: 41496 rules (1419 with conclusion selected). Queue: 166 rules.
53000 rules inserted. Base: 41656 rules (1419 with conclusion selected). Queue: 173 rules.
53200 rules inserted. Base: 41792 rules (1423 with conclusion selected). Queue: 172 rules.
53400 rules inserted. Base: 41969 rules (1423 with conclusion selected). Queue: 162 rules.
53600 rules inserted. Base: 42112 rules (1423 with conclusion selected). Queue: 166 rules.
53800 rules inserted. Base: 42292 rules (1431 with conclusion selected). Queue: 161 rules.
54000 rules inserted. Base: 42412 rules (1431 with conclusion selected). Queue: 139 rules.
54200 rules inserted. Base: 42580 rules (1431 with conclusion selected). Queue: 143 rules.
54400 rules inserted. Base: 42740 rules (1435 with conclusion selected). Queue: 147 rules.
54600 rules inserted. Base: 42920 rules (1443 with conclusion selected). Queue: 167 rules.
54800 rules inserted. Base: 43116 rules (1443 with conclusion selected). Queue: 170 rules.
55000 rules inserted. Base: 43300 rules (1443 with conclusion selected). Queue: 148 rules.
55200 rules inserted. Base: 43500 rules (1447 with conclusion selected). Queue: 133 rules.
55400 rules inserted. Base: 43700 rules (1447 with conclusion selected). Queue: 128 rules.
55600 rules inserted. Base: 43900 rules (1447 with conclusion selected). Queue: 84 rules.
55800 rules inserted. Base: 44100 rules (1447 with conclusion selected). Queue: 26 rules.
ok, secrecy assumption verified: fact unreachable attacker2(ch_client_CFIN[],ch_client_CFIN[])
ok, secrecy assumption verified: fact unreachable attacker2(ch_client_FIN[],ch_client_FIN[])
ok, secrecy assumption verified: fact unreachable attacker2(ch_client_CRT[],ch_client_CRT[])
ok, secrecy assumption verified: fact unreachable attacker2(ch_client_after_EE[],ch_client_after_EE[])
ok, secrecy assumption verified: fact unreachable attacker2(ch_server_CFIN[],ch_server_CFIN[])
ok, secrecy assumption verified: fact unreachable attacker2(ch_server_FIN[],ch_server_FIN[])
ok, secrecy assumption verified: fact unreachable attacker2(ch_server_CRT[],ch_server_CRT[])
ok, secrecy assumption verified: fact unreachable attacker2(ch_server_SH[],ch_server_SH[])
ok, secrecy assumption verified: fact unreachable attacker2(uc_privkey(s_232),x_700)
ok, secrecy assumption verified: fact unreachable attacker2(x_700,uc_privkey(s_232))
ok, secrecy assumption verified: fact unreachable attacker2(uc_psk(s_232),x_700)
ok, secrecy assumption verified: fact unreachable attacker2(x_700,uc_psk(s_232))
ok, secrecy assumption verified: fact unreachable attacker2(x_700,dh_k(s_232))
ok, secrecy assumption verified: fact unreachable attacker2(dh_k(s_232),x_700)
ok, secrecy assumption verified: fact unreachable attacker2(x_700,hmac_ideal(i_7,zero,uc_psk(s_232)))
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_7,zero,uc_psk(s_232)),x_700)
ok, secrecy assumption verified: fact unreachable attacker2(x_700,hmac_ideal(i_7,hmac_ideal(i_7,zero,uc_psk(s_232)),(tls13_ext_res_binder,hash_ideal(i_7,zero))))
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_7,hmac_ideal(i_7,zero,uc_psk(s_232)),(tls13_ext_res_binder,hash_ideal(i_7,zero))),x_700)
ok, secrecy assumption verified: fact unreachable attacker2(x_700,dh_f(s_232))
ok, secrecy assumption verified: fact unreachable attacker2(dh_f(s_232),x_700)
ok, secrecy assumption verified: fact unreachable attacker2(x_700,dh_xy(s_xy,CH(r_5,nego(v_2237,h_586,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)))),sn,e,ex,p))))
ok, secrecy assumption verified: fact unreachable attacker2(dh_xy(s_xy,CH(r_5,nego(v_2237,h_586,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)))),sn,e,ex,p))),x_700)
ok, secrecy assumption verified: fact unreachable attacker2(x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,uc_psk(s_232)),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e))
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,uc_psk(s_232)),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),x_700)
ok, secrecy assumption verified: fact unreachable attacker2(x_700,hmac_ideal(i_7,extra_es,dh_f(s_232)))
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_7,extra_es,dh_f(s_232)),x_700)
ok, secrecy assumption verified: fact unreachable attacker2(x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,uc_psk(s_232)),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero)))
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,uc_psk(s_232)),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero)),x_700)
ok, secrecy assumption verified: fact unreachable attacker2(x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,uc_psk(s_232)),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero)))
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,uc_psk(s_232)),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero)),x_700)
ok, secrecy assumption verified: fact unreachable attacker2(x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,uc_psk(s_232)),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero)))
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,uc_psk(s_232)),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero)),x_700)
ok, secrecy assumption verified: fact unreachable attacker2(x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,uc_psk(s_232)),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero)))
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,uc_psk(s_232)),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero)),x_700)
ok, secrecy assumption verified: fact unreachable attacker2(t,aead_enc(a_2,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,extra_es,dh_f(s_232)),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero)),x_700,y,z))
ok, secrecy assumption verified: fact unreachable attacker2(aead_enc(a_2,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,extra_es,dh_f(s_232)),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero)),x_700,y,z),t)
ok, secrecy assumption verified: fact unreachable attacker2(t,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,extra_es,dh_f(s_232)),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero)))
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,extra_es,dh_f(s_232)),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero)),t)
ok, secrecy assumption verified: fact unreachable attacker2(t,aead_enc(a_2,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,extra_es,dh_f(s_232)),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero)),x_700,y,z))
ok, secrecy assumption verified: fact unreachable attacker2(aead_enc(a_2,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,extra_es,dh_f(s_232)),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero)),x_700,y,z),t)
ok, secrecy assumption verified: fact unreachable attacker2(t,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,extra_es,dh_f(s_232)),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero)))
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,extra_es,dh_f(s_232)),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero)),t)
200 rules inserted. Base: 200 rules (0 with conclusion selected). Queue: 20 rules.
ok, secrecy assumption verified: fact unreachable attacker2(t,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,extra_es,dh_xy(s_xy,CH(r_5,nego(v_2237,h_586,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)))),sn,e,ex,p)))),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,((log,CH(r_5,nego(v_2237,h_586,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)))),sn,e,ex,p))),SH(r',nego(v',h',a',server_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_encap_fun(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)),dh_xy(s_xy,CH(r_5,nego(v_2237,h_586,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)))),sn,e,ex,p)))))),sn',e',ex',p')))))),(tls13_key,zero)))
200 rules inserted. Base: 200 rules (0 with conclusion selected). Queue: 20 rules.
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,extra_es,dh_xy(s_xy,CH(r_5,nego(v_2237,h_586,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)))),sn,e,ex,p)))),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,((log,CH(r_5,nego(v_2237,h_586,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)))),sn,e,ex,p))),SH(r',nego(v',h',a',server_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_encap_fun(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)),dh_xy(s_xy,CH(r_5,nego(v_2237,h_586,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)))),sn,e,ex,p)))))),sn',e',ex',p')))))),(tls13_key,zero)),t)
200 rules inserted. Base: 200 rules (0 with conclusion selected). Queue: 20 rules.
ok, secrecy assumption verified: fact unreachable attacker2(t,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,extra_es,dh_xy(s_xy,CH(r_5,nego(v_2237,h_586,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)))),sn,e,ex,p)))),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,((log,CH(r_5,nego(v_2237,h_586,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)))),sn,e,ex,p))),SH(r',nego(v',h',a',server_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_encap_fun(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)),dh_xy(s_xy,CH(r_5,nego(v_2237,h_586,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)))),sn,e,ex,p)))))),sn',e',ex',p')))))),(tls13_finished,zero)))
200 rules inserted. Base: 200 rules (0 with conclusion selected). Queue: 20 rules.
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,extra_es,dh_xy(s_xy,CH(r_5,nego(v_2237,h_586,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)))),sn,e,ex,p)))),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,((log,CH(r_5,nego(v_2237,h_586,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)))),sn,e,ex,p))),SH(r',nego(v',h',a',server_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_encap_fun(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)),dh_xy(s_xy,CH(r_5,nego(v_2237,h_586,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)))),sn,e,ex,p)))))),sn',e',ex',p')))))),(tls13_finished,zero)),t)
200 rules inserted. Base: 200 rules (0 with conclusion selected). Queue: 20 rules.
ok, secrecy assumption verified: fact unreachable attacker2(t,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,extra_es,dh_xy(s_xy,CH(r_5,nego(v_2237,h_586,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)))),sn,e,ex,p)))),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,((log,CH(r_5,nego(v_2237,h_586,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)))),sn,e,ex,p))),SH(r',nego(v',h',a',server_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_encap_fun(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)),dh_xy(s_xy,CH(r_5,nego(v_2237,h_586,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)))),sn,e,ex,p)))))),sn',e',ex',p')))))),(tls13_key,zero)))
200 rules inserted. Base: 200 rules (0 with conclusion selected). Queue: 20 rules.
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,extra_es,dh_xy(s_xy,CH(r_5,nego(v_2237,h_586,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)))),sn,e,ex,p)))),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,((log,CH(r_5,nego(v_2237,h_586,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)))),sn,e,ex,p))),SH(r',nego(v',h',a',server_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_encap_fun(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)),dh_xy(s_xy,CH(r_5,nego(v_2237,h_586,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)))),sn,e,ex,p)))))),sn',e',ex',p')))))),(tls13_key,zero)),t)
200 rules inserted. Base: 200 rules (0 with conclusion selected). Queue: 20 rules.
ok, secrecy assumption verified: fact unreachable attacker2(t,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,extra_es,dh_xy(s_xy,CH(r_5,nego(v_2237,h_586,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)))),sn,e,ex,p)))),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,((log,CH(r_5,nego(v_2237,h_586,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)))),sn,e,ex,p))),SH(r',nego(v',h',a',server_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_encap_fun(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)),dh_xy(s_xy,CH(r_5,nego(v_2237,h_586,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)))),sn,e,ex,p)))))),sn',e',ex',p')))))),(tls13_finished,zero)))
200 rules inserted. Base: 200 rules (0 with conclusion selected). Queue: 20 rules.
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,extra_es,dh_xy(s_xy,CH(r_5,nego(v_2237,h_586,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)))),sn,e,ex,p)))),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,((log,CH(r_5,nego(v_2237,h_586,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)))),sn,e,ex,p))),SH(r',nego(v',h',a',server_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_encap_fun(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)),dh_xy(s_xy,CH(r_5,nego(v_2237,h_586,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_7),dh_pub(id_g(StrongDH,i_7),dh_k(s_x)))),sn,e,ex,p)))))),sn',e',ex',p')))))),(tls13_finished,zero)),t)
ok, secrecy assumption verified: fact unreachable attacker2(x_700,dh_xy(s',dh_pub(id_g(StrongDH,i_7),dh_k(s_232))))
ok, secrecy assumption verified: fact unreachable attacker2(dh_xy(s',dh_pub(id_g(StrongDH,i_7),dh_k(s_232))),x_700)
ok, secrecy assumption verified: fact unreachable attacker2(x_700,hmac_ideal(i_7,hmac_ideal(i_7,dh_xy(s',dh_pub(id_g(StrongDH,i_7),dh_k(s_232))),(hpke_secret,zero)),(hpke_key,hmac_ideal(i_7,zero,(hpke_info_hash,info_3)))))
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_7,hmac_ideal(i_7,dh_xy(s',dh_pub(id_g(StrongDH,i_7),dh_k(s_232))),(hpke_secret,zero)),(hpke_key,hmac_ideal(i_7,zero,(hpke_info_hash,info_3)))),x_700)
ok, secrecy assumption verified: fact unreachable attacker2(x_700,hmac_ideal(i_7,hmac_ideal(i_7,dh_f(s'),(hpke_secret,zero)),(hpke_key,hmac_ideal(i_7,zero,(hpke_info_hash,info_3)))))
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_7,hmac_ideal(i_7,dh_f(s'),(hpke_secret,zero)),(hpke_key,hmac_ideal(i_7,zero,(hpke_info_hash,info_3)))),x_700)
RESULT Diff-equivalence is true.

--------------------------------------------------------------
Verification summary:

Query(ies):
 - Diff-equivalence is true.
Associated axiom(s):
 - 
Axiom event(PreciseMess(ch,choice[id_108,id2_1],choice[st1_9,st2_2],choice[x1,x2])) && event(PreciseMess(ch,choice[id_108,id2'],choice[st1',st2'],choice[x1',x2'])) ==> st1_9 = st1' && x1 = x1' encoded as event2(PreciseMess(ch,id_108,st1_9,x1),PreciseMess(ch,id2_1,st2_2,x2)) && event2(PreciseMess(ch,id_108,st1',x1'),PreciseMess(ch,id2',st2',x2')) ==> st1_9 = st1' && x1 = x1'
axiom event(PreciseMess(ch,choice[id1_1,id_108],choice[st1_9,st2_2],choice[x1,x2])) && event(PreciseMess(ch,choice[id1',id_108],choice[st1',st2'],choice[x1',x2'])) ==> st2_2 = st2' && x2 = x2' encoded as event2(PreciseMess(ch,id1_1,st1_9,x1),PreciseMess(ch,id_108,st2_2,x2)) && event2(PreciseMess(ch,id1',st1',x1'),PreciseMess(ch,id_108,st2',x2')) ==> st2_2 = st2' && x2 = x2'
axiom event(PreciseMess(ch,choice[id1_1,id2_1],choice[st_16,st2_2],choice[x1,x2])) && event(PreciseMess(ch,choice[id1',id2'],choice[st_16,st2'],choice[x1',x2'])) ==> id1_1 = id1' && x1 = x1' encoded as event2(PreciseMess(ch,id1_1,st_16,x1),PreciseMess(ch,id2_1,st2_2,x2)) && event2(PreciseMess(ch,id1',st_16,x1'),PreciseMess(ch,id2',st2',x2')) ==> id1_1 = id1' && x1 = x1'
axiom event(PreciseMess(ch,choice[id1_1,id2_1],choice[st1_9,st_16],choice[x1,x2])) && event(PreciseMess(ch,choice[id1',id2'],choice[st1',st_16],choice[x1',x2'])) ==> id2_1 = id2' && x2 = x2' encoded as event2(PreciseMess(ch,id1_1,st1_9,x1),PreciseMess(ch,id2_1,st_16,x2)) && event2(PreciseMess(ch,id1',st1',x1'),PreciseMess(ch,id2',st_16,x2')) ==> id2_1 = id2' && x2 = x2'
 in biprocess 1.
 - Axiom event(PreciseInput(st_16,choice[x_700,x1])) && event(PreciseInput(st_16,choice[x',x2])) ==> x_700 = x' && x1 = x2 encoded as event2(PreciseInput(st_16,x_700),PreciseInput(st_16,x1)) && event2(PreciseInput(st_16,x'),PreciseInput(st_16,x2)) ==> x_700 = x' && x1 = x2 in biprocess 1.
 - 
Axiom event(Server_DH_client(choice[id_108,id1_1],choice[e,e1])) && event(Server_DH_client(choice[id_108,id2_1],choice[e',e2])) ==> e = e' encoded as event2(Server_DH_client(id_108,e),Server_DH_client(id1_1,e1)) && event2(Server_DH_client(id_108,e'),Server_DH_client(id2_1,e2)) ==> e = e'
axiom event(Server_DH_client(choice[id1_1,id_108],choice[e1,e])) && event(Server_DH_client(choice[id2_1,id_108],choice[e2,e'])) ==> e = e' encoded as event2(Server_DH_client(id1_1,e1),Server_DH_client(id_108,e)) && event2(Server_DH_client(id2_1,e2),Server_DH_client(id_108,e')) ==> e = e'
 in biprocess 1.
 - 
Axiom event(Server_new_PSK(choice[id_108,id1_1],choice[k_236,k1])) && event(Server_new_PSK(choice[id_108,id2_1],choice[k',k2])) ==> k_236 = k' encoded as event2(Server_new_PSK(id_108,k_236),Server_new_PSK(id1_1,k1)) && event2(Server_new_PSK(id_108,k'),Server_new_PSK(id2_1,k2)) ==> k_236 = k'
axiom event(Server_new_PSK(choice[id1_1,id_108],choice[k1,k_236])) && event(Server_new_PSK(choice[id2_1,id_108],choice[k2,k'])) ==> k_236 = k' encoded as event2(Server_new_PSK(id1_1,k1),Server_new_PSK(id_108,k_236)) && event2(Server_new_PSK(id2_1,k2),Server_new_PSK(id_108,k')) ==> k_236 = k'
 in biprocess 1.
 - 
Axiom not (table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,is_safe'])) && attacker(choice[psk_246,psk''])) encoded as not (table2(pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true),pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(psk_246,psk''))
axiom not (table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',true])) && attacker(choice[psk'',psk_246])) encoded as not (table2(pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true)) && attacker2(psk'',psk_246))
axiom table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[is_safe_96,is_safe'])) && attacker(choice[psk_246,psk'']) ==> is_safe_96 ≠ true encoded as table2(pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,is_safe_96),pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(psk_246,psk'') ==> is_safe_96 ≠ true
axiom table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',is_safe_96])) && attacker(choice[psk'',psk_246]) ==> is_safe_96 ≠ true encoded as table2(pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,is_safe_96)) && attacker2(psk'',psk_246) ==> is_safe_96 ≠ true
axiom table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[is_safe_96,is_safe'])) ==> psk_246 ≠ NoPsk && psk_246 ≠ zero encoded as table2(pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,is_safe_96),pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe')) ==> psk_246 ≠ NoPsk && psk_246 ≠ zero
axiom table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',is_safe_96])) ==> psk_246 ≠ NoPsk && psk_246 ≠ zero encoded as table2(pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,is_safe_96)) ==> psk_246 ≠ NoPsk && psk_246 ≠ zero
axiom attacker(choice[mk_idpsk(s_dom_15,h_586,psk_246),idpsk]) ==> psk_246 ≠ NoPsk && psk_246 ≠ zero encoded as attacker2(mk_idpsk(s_dom_15,h_586,psk_246),idpsk) ==> psk_246 ≠ NoPsk && psk_246 ≠ zero
axiom attacker(choice[idpsk,mk_idpsk(s_dom_15,h_586,psk_246)]) ==> psk_246 ≠ NoPsk && psk_246 ≠ zero encoded as attacker2(idpsk,mk_idpsk(s_dom_15,h_586,psk_246)) ==> psk_246 ≠ NoPsk && psk_246 ≠ zero
axiom not (table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_7,zero,psk_246),x_700])) encoded as not (table2(pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true),pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_7,zero,psk_246),x_700))
axiom not (table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',true])) && attacker(choice[x_700,hmac_ideal(i_7,zero,psk_246)])) encoded as not (table2(pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true)) && attacker2(x_700,hmac_ideal(i_7,zero,psk_246)))
axiom not (table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_ext_res_binder,hash_ideal(i_7,zero))),x_700])) encoded as not (table2(pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true),pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_ext_res_binder,hash_ideal(i_7,zero))),x_700))
axiom not (table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',true])) && attacker(choice[x_700,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_ext_res_binder,hash_ideal(i_7,zero)))])) encoded as not (table2(pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true)) && attacker2(x_700,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_ext_res_binder,hash_ideal(i_7,zero)))))
axiom not (table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),x_700])) encoded as not (table2(pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true),pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),x_700))
axiom not (table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',true])) && attacker(choice[x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e)])) encoded as not (table2(pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true)) && attacker2(x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e)))
axiom not (table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero)),x_700])) encoded as not (table2(pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true),pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero)),x_700))
axiom not (table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',true])) && attacker(choice[x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero))])) encoded as not (table2(pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true)) && attacker2(x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero))))
axiom not (table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero)),x_700])) encoded as not (table2(pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true),pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero)),x_700))
axiom not (table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',true])) && attacker(choice[x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero))])) encoded as not (table2(pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true)) && attacker2(x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero))))
axiom not (table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero)),x_700])) encoded as not (table2(pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true),pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero)),x_700))
axiom not (table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',true])) && attacker(choice[x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero))])) encoded as not (table2(pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true)) && attacker2(x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_key,zero))))
axiom not (table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero)),x_700])) encoded as not (table2(pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true),pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero)),x_700))
axiom not (table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[is_safe',true])) && attacker(choice[x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero))])) encoded as not (table2(pre_shared_keys(c_dom'_16,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,psk_246,idP_18,true)) && attacker2(x_700,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,hmac_ideal(i_7,zero,psk_246),(tls13_derived,hash_ideal(i_7,hash_ideal(i_7,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_7,log))),(tls13_finished,zero))))
 in biprocess 1.
 - 
Axiom not (event(Server_new_PSK(choice[id_s,id_s_1],choice[new_psk,new_psk'])) && table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[id_108,id'],choice[new_psk,new_psk''],choice[id_c,id_c'],choice[is_safe_96,is_safe'])) && event(Server_DH_client(choice[id_s,id_s_2],choice[dh_pub(g_63,x_700),e])) && attacker(choice[x_700,x'])) encoded as not (event2(Server_new_PSK(id_s,new_psk),Server_new_PSK(id_s_1,new_psk')) && table2(pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,new_psk,id_c,is_safe_96),pre_shared_keys(c_dom'_16,s_dom'_1,h',id',new_psk'',id_c',is_safe')) && event2(Server_DH_client(id_s,dh_pub(g_63,x_700)),Server_DH_client(id_s_2,e)) && attacker2(x_700,x'))
axiom not (event(Server_new_PSK(choice[id_s_1,id_s],choice[new_psk',new_psk])) && table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h',h_586],choice[id',id_108],choice[new_psk'',new_psk],choice[id_c',id_c],choice[is_safe',is_safe_96])) && event(Server_DH_client(choice[id_s_2,id_s],choice[e,dh_pub(g_63,x_700)])) && attacker(choice[x',x_700])) encoded as not (event2(Server_new_PSK(id_s_1,new_psk'),Server_new_PSK(id_s,new_psk)) && table2(pre_shared_keys(c_dom'_16,s_dom'_1,h',id',new_psk'',id_c',is_safe'),pre_shared_keys(c_dom_7,s_dom_15,h_586,id_108,new_psk,id_c,is_safe_96)) && event2(Server_DH_client(id_s_2,e),Server_DH_client(id_s,dh_pub(g_63,x_700))) && attacker2(x',x_700))
 in biprocess 1.
 - 
Axiom table(pre_shared_keys(choice[c_dom_7,c_dom'_16],choice[s_dom_15,s_dom'_1],choice[h_alg_21,h_alg'_1],choice[id_108,id'],choice[psk_246,psk'],choice[idP_18,idP'],choice[true,safe'])) ==> id_108 = mk_idpsk(s_dom_15,h_alg_21,psk_246) encoded as table2(pre_shared_keys(c_dom_7,s_dom_15,h_alg_21,id_108,psk_246,idP_18,true),pre_shared_keys(c_dom'_16,s_dom'_1,h_alg'_1,id',psk',idP',safe')) ==> id_108 = mk_idpsk(s_dom_15,h_alg_21,psk_246)
axiom table(pre_shared_keys(choice[c_dom'_16,c_dom_7],choice[s_dom'_1,s_dom_15],choice[h_alg'_1,h_alg_21],choice[id',id_108],choice[psk',psk_246],choice[idP',idP_18],choice[safe',true])) ==> id_108 = mk_idpsk(s_dom_15,h_alg_21,psk_246) encoded as table2(pre_shared_keys(c_dom'_16,s_dom'_1,h_alg'_1,id',psk',idP',safe'),pre_shared_keys(c_dom_7,s_dom_15,h_alg_21,id_108,psk_246,idP_18,true)) ==> id_108 = mk_idpsk(s_dom_15,h_alg_21,psk_246)
 in biprocess 1.
 - 
Axiom table(pre_shared_keys(choice[c_dom_7,c_dom1_1],choice[s_dom_15,s_dom1],choice[h_alg_21,h_alg1],choice[id_108,id1_1],choice[psk_246,psk1_1],choice[idP_18,idP1_2],choice[safe_6,safe1_1])) && table(pre_shared_keys(choice[c_dom'_16,c_dom2_1],choice[s_dom'_1,s_dom2],choice[h_alg'_1,h_alg2],choice[id',id2_1],choice[psk',psk2_1],choice[idP_18,idP2_2],choice[safe',safe2_1])) ==> c_dom_7 = c_dom'_16 && s_dom_15 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_108 = id' && psk_246 = psk' && safe_6 = safe' encoded as table2(pre_shared_keys(c_dom_7,s_dom_15,h_alg_21,id_108,psk_246,idP_18,safe_6),pre_shared_keys(c_dom1_1,s_dom1,h_alg1,id1_1,psk1_1,idP1_2,safe1_1)) && table2(pre_shared_keys(c_dom'_16,s_dom'_1,h_alg'_1,id',psk',idP_18,safe'),pre_shared_keys(c_dom2_1,s_dom2,h_alg2,id2_1,psk2_1,idP2_2,safe2_1)) ==> c_dom_7 = c_dom'_16 && s_dom_15 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_108 = id' && psk_246 = psk' && safe_6 = safe'
axiom table(pre_shared_keys(choice[c_dom1_1,c_dom_7],choice[s_dom1,s_dom_15],choice[h_alg1,h_alg_21],choice[id1_1,id_108],choice[psk1_1,psk_246],choice[idP1_2,idP_18],choice[safe1_1,safe_6])) && table(pre_shared_keys(choice[c_dom2_1,c_dom'_16],choice[s_dom2,s_dom'_1],choice[h_alg2,h_alg'_1],choice[id2_1,id'],choice[psk2_1,psk'],choice[idP2_2,idP_18],choice[safe2_1,safe'])) ==> c_dom_7 = c_dom'_16 && s_dom_15 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_108 = id' && psk_246 = psk' && safe_6 = safe' encoded as table2(pre_shared_keys(c_dom1_1,s_dom1,h_alg1,id1_1,psk1_1,idP1_2,safe1_1),pre_shared_keys(c_dom_7,s_dom_15,h_alg_21,id_108,psk_246,idP_18,safe_6)) && table2(pre_shared_keys(c_dom2_1,s_dom2,h_alg2,id2_1,psk2_1,idP2_2,safe2_1),pre_shared_keys(c_dom'_16,s_dom'_1,h_alg'_1,id',psk',idP_18,safe')) ==> c_dom_7 = c_dom'_16 && s_dom_15 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_108 = id' && psk_246 = psk' && safe_6 = safe'
axiom table(pre_shared_keys(choice[c_dom_7,c_dom1_1],choice[s_dom_15,s_dom1],choice[h_alg_21,h_alg1],choice[id_108,id1_1],choice[psk_246,psk1_1],choice[idP_18,idP1_2],choice[safe_6,safe1_1])) && table(pre_shared_keys(choice[c_dom'_16,c_dom2_1],choice[s_dom'_1,s_dom2],choice[h_alg'_1,h_alg2],choice[id',id2_1],choice[psk_246,psk2_1],choice[idP',idP2_2],choice[safe',safe2_1])) ==> c_dom_7 = c_dom'_16 && s_dom_15 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_108 = id' && idP_18 = idP' && safe_6 = safe' encoded as table2(pre_shared_keys(c_dom_7,s_dom_15,h_alg_21,id_108,psk_246,idP_18,safe_6),pre_shared_keys(c_dom1_1,s_dom1,h_alg1,id1_1,psk1_1,idP1_2,safe1_1)) && table2(pre_shared_keys(c_dom'_16,s_dom'_1,h_alg'_1,id',psk_246,idP',safe'),pre_shared_keys(c_dom2_1,s_dom2,h_alg2,id2_1,psk2_1,idP2_2,safe2_1)) ==> c_dom_7 = c_dom'_16 && s_dom_15 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_108 = id' && idP_18 = idP' && safe_6 = safe'
axiom table(pre_shared_keys(choice[c_dom1_1,c_dom_7],choice[s_dom1,s_dom_15],choice[h_alg1,h_alg_21],choice[id1_1,id_108],choice[psk1_1,psk_246],choice[idP1_2,idP_18],choice[safe1_1,safe_6])) && table(pre_shared_keys(choice[c_dom2_1,c_dom'_16],choice[s_dom2,s_dom'_1],choice[h_alg2,h_alg'_1],choice[id2_1,id'],choice[psk2_1,psk_246],choice[idP2_2,idP'],choice[safe2_1,safe'])) ==> c_dom_7 = c_dom'_16 && s_dom_15 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_108 = id' && idP_18 = idP' && safe_6 = safe' encoded as table2(pre_shared_keys(c_dom1_1,s_dom1,h_alg1,id1_1,psk1_1,idP1_2,safe1_1),pre_shared_keys(c_dom_7,s_dom_15,h_alg_21,id_108,psk_246,idP_18,safe_6)) && table2(pre_shared_keys(c_dom2_1,s_dom2,h_alg2,id2_1,psk2_1,idP2_2,safe2_1),pre_shared_keys(c_dom'_16,s_dom'_1,h_alg'_1,id',psk_246,idP',safe')) ==> c_dom_7 = c_dom'_16 && s_dom_15 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_108 = id' && idP_18 = idP' && safe_6 = safe'
 in biprocess 1.
Associated restriction(s):
 - Restriction event(Same(choice[x_700,x'])) ==> x_700 = x' encoded as event2(Same(x_700),Same(x')) ==> x_700 = x' in biprocess 1.
 - Restriction not (event(ConfigOffered(id_c,config_2)) && event(CompromisedEchKeyForEquiv(config_2))) encoded as not (event2(ConfigOffered(id_c,config_2),ConfigOffered(id_c,config_2)) && event2(CompromisedEchKeyForEquiv(config_2),CompromisedEchKeyForEquiv(config_2))) in biprocess 1.
 - Restriction not (event(ConfigOffered(idClientDiff(s_232),ech_config(id_108,g_63,pkR_22,frontend,h_alg_21,a_alg_19))) && event(Client_server_domain(idClientDiff(s_232),frontend)) && event(Client_Cert_server(idClientDiff(s_232),s_pkey_7)) && event(CompromisedLtkForEquiv(s_pkey_7))) encoded as not (event2(ConfigOffered(idClientDiff(s_232),ech_config(id_108,g_63,pkR_22,frontend,h_alg_21,a_alg_19)),ConfigOffered(idClientDiff(s_232),ech_config(id_108,g_63,pkR_22,frontend,h_alg_21,a_alg_19))) && event2(Client_server_domain(idClientDiff(s_232),frontend),Client_server_domain(idClientDiff(s_232),frontend)) && event2(Client_Cert_server(idClientDiff(s_232),s_pkey_7),Client_Cert_server(idClientDiff(s_232),s_pkey_7)) && event2(CompromisedLtkForEquiv(s_pkey_7),CompromisedLtkForEquiv(s_pkey_7))) in biprocess 1.
 - Restriction event(Selected_ltk(choice[dom1_1,dom1'],choice[dom2_1,dom2'],choice[idP_18,idP'])) ==> dom1_1 = dom2_1 && dom1' = dom2' && ((dom1_1 = dom1' && idP_18 = idP') || dom1_1 ≠ dom1') encoded as event2(Selected_ltk(dom1_1,dom2_1,idP_18),Selected_ltk(dom1',dom2',idP')) ==> dom1_1 = dom2_1 && dom1' = dom2' && ((dom1_1 = dom1' && idP_18 = idP') || dom1_1 ≠ dom1') in biprocess 1.
 - Restriction event(Selected_psk(choice[dom1_1,dom1'],choice[dom2_1,dom2'],choice[idP_18,idP'],choice[safe_6,safe'])) ==> dom1_1 = dom2_1 && dom1' = dom2' && (dom1_1 ≠ dom1' || (dom1_1 = dom1' && idP_18 = idP')) encoded as event2(Selected_psk(dom1_1,dom2_1,idP_18,safe_6),Selected_psk(dom1',dom2',idP',safe')) ==> dom1_1 = dom2_1 && dom1' = dom2' && (dom1_1 ≠ dom1' || (dom1_1 = dom1' && idP_18 = idP')) in biprocess 1.
 - Restriction event(Selected_psk_no_missmatch(idClientDiff(s_232),choice[s_dom_15,s_dom'_1],choice[h_586,h'],choice[psk_246,psk'],choice[id_108,id'])) ==> id_108 = mk_idpsk(s_dom_15,h_586,psk_246) && id' = mk_idpsk(s_dom'_1,h',psk') encoded as event2(Selected_psk_no_missmatch(idClientDiff(s_232),s_dom_15,h_586,psk_246,id_108),Selected_psk_no_missmatch(idClientDiff(s_232),s_dom'_1,h',psk',id')) ==> id_108 = mk_idpsk(s_dom_15,h_586,psk_246) && id' = mk_idpsk(s_dom'_1,h',psk') in biprocess 1.
 - 
Restriction event(ClientSequenceClientDataWriteKey(idP_18,st_16,i_7)) && event(ClientSequenceClientDataWriteKey(idP_18,st',i_7)) ==> st_16 = st' encoded as event2(ClientSequenceClientDataWriteKey(idP_18,st_16,i_7),ClientSequenceClientDataWriteKey(idP_18,st_16,i_7)) && event2(ClientSequenceClientDataWriteKey(idP_18,st',i_7),ClientSequenceClientDataWriteKey(idP_18,st',i_7)) ==> st_16 = st'
restriction event(ClientSequenceServerDataWriteKey(idP_18,st_16,i_7)) && event(ClientSequenceServerDataWriteKey(idP_18,st',i_7)) ==> st_16 = st' encoded as event2(ClientSequenceServerDataWriteKey(idP_18,st_16,i_7),ClientSequenceServerDataWriteKey(idP_18,st_16,i_7)) && event2(ClientSequenceServerDataWriteKey(idP_18,st',i_7),ClientSequenceServerDataWriteKey(idP_18,st',i_7)) ==> st_16 = st'
restriction event(ServerSequenceServerDataWriteKey(idP_18,st_16,i_7)) && event(ServerSequenceServerDataWriteKey(idP_18,st',i_7)) ==> st_16 = st' encoded as event2(ServerSequenceServerDataWriteKey(idP_18,st_16,i_7),ServerSequenceServerDataWriteKey(idP_18,st_16,i_7)) && event2(ServerSequenceServerDataWriteKey(idP_18,st',i_7),ServerSequenceServerDataWriteKey(idP_18,st',i_7)) ==> st_16 = st'
restriction event(ServerSequenceClientDataWriteKey(idP_18,st_16,i_7)) && event(ServerSequenceClientDataWriteKey(idP_18,st',i_7)) ==> st_16 = st' encoded as event2(ServerSequenceClientDataWriteKey(idP_18,st_16,i_7),ServerSequenceClientDataWriteKey(idP_18,st_16,i_7)) && event2(ServerSequenceClientDataWriteKey(idP_18,st',i_7),ServerSequenceClientDataWriteKey(idP_18,st',i_7)) ==> st_16 = st'
 in biprocess 1.

--------------------------------------------------------------

3351.88user 58.21system 56:53.57elapsed 99%CPU (0avgtext+0avgdata 45941080maxresident)k
0inputs+6376outputs (0major+13974022minor)pagefaults 0swaps
