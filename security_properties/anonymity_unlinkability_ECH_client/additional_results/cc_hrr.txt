mkdir -p ../../generated_libraries
m4 ../../libraries/client.m4.pvl > ../../generated_libraries/client.pvl
proverif \
-lib config.m4.pvl \
-lib ../../libraries/primitives.pvl \
-lib ../../libraries/format.pvl \
-lib ../../libraries/key_schedule.pvl \
-lib ../../libraries/events.pvl \
-lib config_proof_helper.m4.pvl \
-lib ../../libraries/tls_functions.pvl \
-lib ../../libraries/ech_functions.pvl \
-lib ../../libraries/server.pvl \
-lib ../../generated_libraries/client.pvl \
-lib ../../libraries/main_processes.pvl \
-lib ../../libraries/proof_helper_equivalence.pvl \
anonymity_unlinkability_ECH_client_no_ticket.pv
Biprocess 0 (that is, the initial process):
(
    {1}!
    {2}in(io, a: domain);
    {3}new lgt_id: idProc;
    {4}event Same(a);
    {5}new s: seed;
    {6}let sk_h: privkey = uc_privkey(s) in
    {7}let crt: certificate = valid_cert(a,pk(sk_h)) in
    {8}insert long_term_keys(a,sk_h,pk(sk_h),crt,lgt_id);
    {9}out(io, crt)
) | (
    {10}!
    {11}in(io, (c_dom: domain,s_dom: domain));
    {12}let h_alg: hash_alg = id_hash(StrongHash,1) in
    {13}new psk_id: idProc;
    {14}event Same(c_dom);
    {15}event Same(s_dom);
    {16}new s_1: seed;
    {17}let psk: preSharedKey = uc_psk(s_1) in
    {18}let id: identityPsk = mk_idpsk(s_dom,h_alg,psk) in
    {19}insert pre_shared_keys(c_dom,s_dom,h_alg,id,psk,psk_id,true)
) | (
    {20}!
    {21}in(io, s_dom_1: domain);
    {22}let ech_h: hash_alg = id_hash(StrongHash,2) in
    {23}let ech_a: aead_alg = id_aead(StrongAE,2) in
    {24}let ech_g: group = id_g(StrongDH,2) in
    {25}event Same(s_dom_1);
    {26}new id_1: configId;
    {27}new s_2[]: seed;
    {28}let gx: element = dh_pub(ech_g,dh_k(s_2)) in
    {29}let (skR: bitstring,pkR: element) = (dh_k(s_2),gx) in
    {30}let config: echConfig = ech_config(id_1,ech_g,pkR,s_dom_1,ech_h,ech_a) in
    {31}insert ech_configurations(config,skR);
    {32}out(io, config)
) | (
    {33}!
    {34}in(io, a_1: domain);
    {35}new idP: idProc;
    {36}new sk_d: privkey;
    {37}event CompromisedLtkForEquiv(pk(sk_d));
    {38}event Same(a_1);
    {39}let crt_1: certificate = valid_cert(a_1,pk(sk_d)) in
    {40}insert long_term_keys(a_1,sk_d,pk(sk_d),crt_1,idP);
    {41}event CompromisedLtk(pk(sk_d));
    {42}out(io, (sk_d,crt_1))
) | (
    0
) | (
    {43}!
    {44}in(io, s_dom_2: domain);
    {45}let ech_h_1: hash_alg = id_hash(StrongHash,2) in
    {46}let ech_a_1: aead_alg = id_aead(StrongAE,2) in
    {47}let ech_g_1: group = id_g(StrongDH,2) in
    {48}event Same(s_dom_2);
    {49}new id_2: configId;
    {50}new skR_d: bitstring;
    {51}let pkR_d: element = dh_pub(ech_g_1,skR_d) in
    {52}let config_1: echConfig = ech_config(id_2,ech_g_1,pkR_d,s_dom_2,ech_h_1,ech_a_1) in
    {53}event CompromisedEchKeyForEquiv(config_1);
    {54}insert ech_configurations(config_1,skR_d);
    {55}out(io, config_1);
    {56}event CompromisedEchKey(config_1);
    {57}out(io, skR_d)
) | (
    {58}!
    {59}in(ch_server_CFIN, (id_server: idProc,ArgsServerCFIN(cr: bytes32,sr: bytes32,h_alg_1: hash_alg,a_alg: aead_alg,s_dom_3: domain,s_pkey: pubkey,c_pkey: pubkey,psk_1: preSharedKey,master_secret: bitstring,chk: aead_key,c_seq: nat,cfin: mac_key,cur_log: bitstring)));
    {60}new st[]: stamp;
    {61}event PreciseIdProcess(ch_server_CFIN,id_server,st);
    {62}event Server_Rand_client(id_server,cr);
    {63}event Server_Rand_server(id_server,sr);
    {64}event Server_PSKChoosen(id_server,psk_1);
    {65}event Server_chk(id_server,chk);
    {66}event Server_cfin(id_server,cfin);
    {67}event Server_Cert_server(id_server,s_pkey);
    {68}event Server_Cert_client(id_server,c_pkey);
    {69}new st1[]: stamp;
    {70}event PreciseMess(ch_server_CFIN,id_server,st1,(chk,cfin,master_secret));
    {71}in(io, enc_fin: bitstring);
    {72}let fin_msg: msg = aead_dec(a_alg,chk,c_seq,zero,enc_fin) in
    {73}let FIN(hash_msg: bitstring) = fin_msg in
    {74}if (hash_msg = hmac(h_alg_1,cfin,cur_log)) then
    {75}let l: label = tls13_client_application_traffic_secret in
    {76}let h: bitstring = catch-fail(hash(h_alg_1,cur_log)) in
    {77}let v: bool = not-caught-fail(h) in
    {78}let x: bitstring = (if v then (l,h) else caught-fail) in
    {79}let client_ats: bitstring = catch-fail((if v then hmac(h_alg_1,master_secret,x) else fail-any)) in
    {80}let v_1: bool = not-caught-fail(client_ats) in
    {81}let l_1: label = (if v_1 then tls13_server_application_traffic_secret else caught-fail) in
    {82}let h_1: bitstring = (if v_1 then catch-fail(hash(h_alg_1,cur_log)) else caught-fail) in
    {83}let v_2: bool = not-caught-fail(h_1) in
    {84}let x_1: bitstring = (if v_2 then (l_1,h_1) else caught-fail) in
    {85}let server_ats: bitstring = (if v_1 then catch-fail((if v_2 then hmac(h_alg_1,master_secret,x_1) else fail-any)) else caught-fail) in
    {86}let v_3: bool = not-caught-fail(server_ats) in
    {87}let l_2: label = (if v_3 then tls13_exporter_master_secret else caught-fail) in
    {88}let h_2: bitstring = (if v_3 then catch-fail(hash(h_alg_1,cur_log)) else caught-fail) in
    {89}let v_4: bool = not-caught-fail(h_2) in
    {90}let x_2: bitstring = (if v_4 then (l_2,h_2) else caught-fail) in
    {91}let ems: bitstring = (if v_3 then catch-fail((if v_4 then hmac(h_alg_1,master_secret,x_2) else fail-any)) else caught-fail) in
    {92}let v_5: bool = not-caught-fail(ems) in
    {93}let l_3: label = (if v_5 then tls13_key else caught-fail) in
    {94}let h_3: bitstring = (if v_5 then zero else caught-fail) in
    {95}let x_3: bitstring = (if v_5 then (l_3,h_3) else caught-fail) in
    {96}let client_wkad: bitstring = (if v_5 then catch-fail(hmac(h_alg_1,client_ats,x_3)) else caught-fail) in
    {97}let v_6: bool = not-caught-fail(client_wkad) in
    {98}let l_4: label = (if v_6 then tls13_key else caught-fail) in
    {99}let h_4: bitstring = (if v_6 then zero else caught-fail) in
    {100}let x_4: bitstring = (if v_6 then (l_4,h_4) else caught-fail) in
    {101}let server_wkad: bitstring = (if v_6 then catch-fail(hmac(h_alg_1,server_ats,x_4)) else caught-fail) in
    {102}let v_7: bool = not-caught-fail(server_wkad) in
    {103}let l_5: label = (if v_7 then tls13_finished else caught-fail) in
    {104}let h_5: bitstring = (if v_7 then zero else caught-fail) in
    {105}let x_5: bitstring = (if v_7 then (l_5,h_5) else caught-fail) in
    {106}let client_fkad: bitstring = (if v_7 then catch-fail(hmac(h_alg_1,client_ats,x_5)) else caught-fail) in
    {107}let v_8: bool = not-caught-fail(client_fkad) in
    {108}let (cak: aead_key,sak: aead_key,cfkad: mac_key,ems_1: bitstring) = (if v_1 then (if v_3 then (if v_5 then (if v_6 then (if v_7 then (if v_8 then (client_wkad,server_wkad,client_fkad,ems) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
    {109}let cur_log_CFIN: bitstring = (cur_log,fin_msg) in
    {110}let l_6: label = tls13_resumption_master_secret in
    {111}let h_6: bitstring = catch-fail(hash(h_alg_1,cur_log_CFIN)) in
    {112}let v_9: bool = not-caught-fail(h_6) in
    {113}let x_6: bitstring = (if v_9 then (l_6,h_6) else caught-fail) in
    {114}let rms: bitstring = (if v_9 then hmac(h_alg_1,master_secret,x_6) else fail-any) in
    {115}event Server_cak(id_server,cak);
    {116}event Server_sak(id_server,sak);
    {117}event Server_cfkad(id_server,cfkad);
    {118}event Server_rms(id_server,rms);
    {119}event ServerFinished(id_server,cr,sr,psk_1,s_pkey,c_pkey,cak,sak,ems_1,rms);
    (
        0
    ) | (
        0
    ) | (
        {120}!
        {121}in(io, (seq_srv: nat,seq_client: nat));
        {122}if (is_nat(seq_srv) && is_nat(seq_client)) then
        {123}new req_rand: bitstring;
        {124}event ServerRequestPH(id_server,cr,sr,psk_1,s_pkey,c_pkey,req_rand);
        {125}let crtr_msg: msg = CRTR(req_rand) in
        {126}let enc_crt: bitstring = aead_enc(a_alg,sak,seq_srv,zero,crtr_msg) in
        {127}new st_1[]: stamp;
        {128}event ServerSequenceServerDataWriteKey(id_server,st_1,seq_srv);
        {129}event ServerSends(id_server,cr,sr,psk_1,s_pkey,c_pkey,seq_srv,zero,crtr_msg);
        {130}out(io, enc_crt);
        {131}let cur_log_CRTR: bitstring = (cur_log_CFIN,crtr_msg) in
        {132}in(io, enc_cert_msg: bitstring);
        {133}let cert_msg: msg = aead_dec(a_alg,cak,seq_client,zero,enc_cert_msg) in
        {134}new st1_1[]: stamp;
        {135}event ServerSequenceClientDataWriteKey(id_server,st1_1,seq_client);
        {136}event ServerReceives(id_server,cr,sr,psk_1,s_pkey,c_pkey,seq_client,zero,cert_msg);
        {137}let CRT(=req_rand,crt_2: certificate) = cert_msg in
        {138}let cur_log_CRT: bitstring = (cur_log_CRTR,cert_msg) in
        {139}in(io, enc_cert_verif_msg: bitstring);
        {140}let cert_verify_msg: msg = aead_dec(a_alg,cak,seq_client + 1,zero,enc_cert_verif_msg) in
        {141}new st2[]: stamp;
        {142}event ServerSequenceClientDataWriteKey(id_server,st2,seq_client + 1);
        {143}event ServerReceives(id_server,cr,sr,psk_1,s_pkey,c_pkey,seq_client + 1,zero,cert_verify_msg);
        {144}let CV(signed_log: bitstring) = cert_verify_msg in
        {145}if (verify(get_pkey(crt_2),hash(h_alg_1,cur_log_CRT),signed_log) && verify_cert(crt_2)) then
        {146}let c_pkey': pubkey = get_pkey(crt_2) in
        {147}let cur_log_CV: bitstring = (cur_log_CRT,cert_verify_msg) in
        {148}in(io, enc_fin_1: bitstring);
        {149}let fin_msg_1: msg = aead_dec(a_alg,cak,seq_client + 2,zero,enc_fin_1) in
        {150}new st3[]: stamp;
        {151}event ServerSequenceClientDataWriteKey(id_server,st3,seq_client + 2);
        {152}event ServerReceives(id_server,cr,sr,psk_1,s_pkey,c_pkey,seq_client + 2,zero,fin_msg_1);
        {153}let FIN(hash_msg_1: bitstring) = fin_msg_1 in
        {154}if (hash_msg_1 = hmac(h_alg_1,cfkad,cur_log_CV)) then
            {155}event ServerFinishedPH(id_server,cr,sr,psk_1,s_pkey,c_pkey,req_rand,c_pkey')
        else
            {156}out(io, handshake_failure)
    )
) | (
    {157}!
    {158}in(ch_server_FIN, (id_server_1: idProc,ArgsServerFIN(cr_1: bytes32,sr_1: bytes32,h_alg_2: hash_alg,a_alg_1: aead_alg,s_dom_4: domain,s_pkey_1: pubkey,req_cert: bool,psk_2: preSharedKey,master_secret_1: bitstring,chk_1: aead_key,c_seq_1: nat,shk: aead_key,s_seq: nat,cfin_1: mac_key,sfin: mac_key,cur_log_1: bitstring)));
    {159}new st_2[]: stamp;
    {160}event PreciseIdProcess(ch_server_FIN,id_server_1,st_2);
    {161}event Server_Rand_client(id_server_1,cr_1);
    {162}event Server_Rand_server(id_server_1,sr_1);
    {163}event Server_PSKChoosen(id_server_1,psk_2);
    {164}event Server_chk(id_server_1,chk_1);
    {165}event Server_shk(id_server_1,shk);
    {166}event Server_cfin(id_server_1,cfin_1);
    {167}event Server_sfin(id_server_1,sfin);
    {168}event Server_Cert_server(id_server_1,s_pkey_1);
    {169}new st1_2[]: stamp;
    {170}event PreciseMess(ch_server_FIN,id_server_1,st1_2,(chk_1,shk,master_secret_1));
    {171}let hash_msg_2: bitstring = hmac(h_alg_2,sfin,cur_log_1) in
    {172}let finished_msg: msg = FIN(hash_msg_2) in
    {173}let enc_finished: bitstring = aead_enc(a_alg_1,shk,s_seq,zero,finished_msg) in
    {174}event PreServerFinished(id_server_1,cr_1,sr_1,psk_2,s_pkey_1);
    {175}out(io, enc_finished);
    {176}let cur_log_FIN: bitstring = (cur_log_1,finished_msg) in
    {177}if (req_cert && (psk_2 = NoPsk)) then
    (
        {178}in(io, enc_cert_msg_1: bitstring);
        {179}let cert_msg_1: msg = aead_dec(a_alg_1,chk_1,c_seq_1,zero,enc_cert_msg_1) in
        {180}let CRT(=zero,crt_3: certificate) = cert_msg_1 in
        {181}let cur_log_CRT_1: bitstring = (cur_log_FIN,cert_msg_1) in
        {182}in(io, enc_cert_verif_msg_1: bitstring);
        {183}let cert_verify_msg_1: msg = aead_dec(a_alg_1,chk_1,c_seq_1 + 1,zero,enc_cert_verif_msg_1) in
        {184}let CV(signed_log_1: bitstring) = cert_verify_msg_1 in
        {185}if (verify(get_pkey(crt_3),hash(h_alg_2,cur_log_CRT_1),signed_log_1) && verify_cert(crt_3)) then
        {186}let c_pkey_1: pubkey = get_pkey(crt_3) in
        {187}let cur_log_CV_1: bitstring = (cur_log_CRT_1,cert_verify_msg_1) in
        {188}event Server_Cert_client(id_server_1,c_pkey_1);
        {189}out(ch_server_CFIN, (id_server_1,ArgsServerCFIN(cr_1,sr_1,h_alg_2,a_alg_1,s_dom_4,s_pkey_1,c_pkey_1,psk_2,master_secret_1,chk_1,c_seq_1 + 2,cfin_1,cur_log_CV_1)))
    )
    else
        {190}event Server_Cert_client(id_server_1,NoPubKey);
        {191}out(ch_server_CFIN, (id_server_1,ArgsServerCFIN(cr_1,sr_1,h_alg_2,a_alg_1,s_dom_4,s_pkey_1,NoPubKey,psk_2,master_secret_1,chk_1,c_seq_1,cfin_1,cur_log_FIN)))
) | (
    {192}!
    {193}in(ch_server_CRT, (id_server_2: idProc,ArgsServerCRT(cr_2: bytes32,sr_2: bytes32,h_alg_3: hash_alg,a_alg_2: aead_alg,s_dom_5: domain,req_cert_1: bool,master_secret_2: bitstring,chk_2: aead_key,c_seq_2: nat,shk_1: aead_key,s_seq_1: nat,cfin_2: mac_key,sfin_1: mac_key,cur_log_2: bitstring)));
    {194}new st_3[]: stamp;
    {195}event PreciseIdProcess(ch_server_CRT,id_server_2,st_3);
    {196}event Server_Rand_client(id_server_2,cr_2);
    {197}event Server_Rand_server(id_server_2,sr_2);
    {198}event Server_PSKChoosen(id_server_2,NoPsk);
    {199}event Server_chk(id_server_2,chk_2);
    {200}event Server_shk(id_server_2,shk_1);
    {201}event Server_cfin(id_server_2,cfin_2);
    {202}event Server_sfin(id_server_2,sfin_1);
    {203}new st1_3[]: stamp;
    {204}event PreciseMess(ch_server_CRT,id_server_2,st1_3,(master_secret_2,chk_2,shk_1));
    {222}get long_term_keys(s_dom': domain,sk: privkey,s_pkey_2: pubkey,crt_4: certificate,idP_1: idProc) in
    {205}let @3_x: bitstring = (s_dom',sk,s_pkey_2,crt_4,idP_1) in
    {206}new @3_st[]: stamp;
    {207}event PreciseInput(@3_st,@3_x);
    {208}let () = () in
    {209}event Selected_ltk(s_dom_5,s_dom',idP_1);
    {210}let (sk_1: privkey,s_pkey_3: pubkey,crt_5: certificate) = (sk,s_pkey_2,crt_4) in
    {211}event Server_Cert_server(id_server_2,s_pkey_3);
    {212}let certificate_msg: msg = CRT(zero,crt_5) in
    {213}let encrypted_certificate_msg: bitstring = aead_enc(a_alg_2,shk_1,s_seq_1,zero,certificate_msg) in
    {214}out(io, encrypted_certificate_msg);
    {215}let cur_log_CRT_2: bitstring = (cur_log_2,certificate_msg) in
    {216}let signed_log_2: bitstring = sign(sk_1,hash(h_alg_3,cur_log_CRT_2)) in
    {217}let certificate_verify_msg: msg = CV(signed_log_2) in
    {218}let encrypted_certificate_verify_msg: bitstring = aead_enc(a_alg_2,shk_1,s_seq_1 + 1,zero,certificate_verify_msg) in
    {219}out(io, encrypted_certificate_verify_msg);
    {220}let cur_log_CV_2: bitstring = (cur_log_CRT_2,certificate_verify_msg) in
    {221}out(ch_server_FIN, (id_server_2,ArgsServerFIN(cr_2,sr_2,h_alg_3,a_alg_2,s_dom_5,s_pkey_3,req_cert_1,NoPsk,master_secret_2,chk_2,c_seq_2,shk_1,s_seq_1 + 2,cfin_2,sfin_1,cur_log_CV_2)))
) | (
    {223}!
    {224}in(ch_server_SH, (id_server_3: idProc,ArgsServerSH(tls_g: group,tls_h: hash_alg,tls_a: aead_alg,s_dom_6: domain,req_cert_2: bool,is_backend: bool,use_psk: bool,no_HRR: bool,ee_msg: msg,client_hello: msg,cur_log_3: bitstring)));
    {225}new st_4[]: stamp;
    {226}event PreciseMess(ch_server_SH,id_server_3,st_4,(use_psk,client_hello));
    {227}let CH(cr_3: bytes32,offer: params) = client_hello in
    {228}event Server_Rand_client(id_server_3,cr_3);
    {229}let nego(=TLS13,=tls_h,=tls_a,client_kex_ext(DHE_kex(=tls_g,gx_1: element)),sni_ext: sniExt,ech_ext: echExt,extra_ext: extraExt,psk_ext: preSharedKeyExt) = offer in
    (
        {230}if (sni_ext = SNI(s_dom_6)) then
        (
            {231}event Server_DH_client(id_server_3,gx_1);
            {232}let v_10: msg = client_hello in
            {233}let v_11: bool = (((TLS13 =nf 1-proj-nego(2-proj-CH(v_10))) && success?(1-proj-nego(2-proj-CH(v_10)))) && success?(1-proj-CH(v_10))) in
            {234}let psk_ext_1: preSharedKeyExt = (if v_11 then 8-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {235}let extra_ext_1: extraExt = (if v_11 then 7-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {236}let ech_ext_1: echExt = (if v_11 then 6-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {237}let sni_ext_1: sniExt = (if v_11 then 5-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {238}let kex_ext: keyShareExt = (if v_11 then 4-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {239}let a_alg_3: aead_alg = (if v_11 then 3-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {240}let h_alg_4: hash_alg = (if v_11 then 2-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {241}let cr_4: bytes32 = (if v_11 then 1-proj-CH(v_10) else caught-fail) in
            {242}let v_12: bitstring = (if v_11 then catch-fail((use_psk,psk_ext_1)) else caught-fail) in
            {243}let v_13: bool = (not-caught-fail(v_12) && (((true =nf 1-proj-2-tuple(v_12)) && success?(1-proj-client_psk_ext(2-proj-2-tuple(v_12)))) && success?(1-proj-2-tuple(v_12)))) in
            {244}let binders: bitstring = (if v_13 then 2-proj-client_psk_ext(2-proj-2-tuple(v_12)) else caught-fail) in
            {245}let id_3: identityPsk = (if v_13 then 1-proj-client_psk_ext(2-proj-2-tuple(v_12)) else caught-fail) in
            {246}let v_14: bitstring = (if v_13 then catch-fail((get_server_psk(id_3),get_hash_psk(id_3))) else caught-fail) in
            {247}let v_15: bool = (not-caught-fail(v_14) && (((s_dom_6 =nf 1-proj-2-tuple(v_14)) && (h_alg_4 =nf 2-proj-2-tuple(v_14))) && success?(1-proj-2-tuple(v_14)))) in
            {248}let psk_3: preSharedKey = (if v_15 then catch-fail(get_psk(id_3)) else caught-fail) in
            {249}let v_16: bool = not-caught-fail(psk_3) in
            {250}let s_3: bitstring = (if v_16 then zero else caught-fail) in
            {251}let k: bitstring = (if v_16 then catch-fail(psk2b(psk_3)) else caught-fail) in
            {252}let v_17: bool = not-caught-fail(k) in
            {253}let early_secret: bitstring = (if v_16 then catch-fail((if v_17 then hmac(h_alg_4,s_3,k) else fail-any)) else caught-fail) in
            {254}let v_18: bool = not-caught-fail(early_secret) in
            {255}let l_7: label = (if v_18 then tls13_ext_res_binder else caught-fail) in
            {256}let m: bitstring = (if v_18 then zero else caught-fail) in
            {257}let h_7: bitstring = (if v_18 then catch-fail(hash(h_alg_4,m)) else caught-fail) in
            {258}let v_19: bool = not-caught-fail(h_7) in
            {259}let x_7: bitstring = (if v_19 then (l_7,h_7) else caught-fail) in
            {260}let binder_key: bitstring = (if v_18 then catch-fail((if v_19 then hmac(h_alg_4,early_secret,x_7) else fail-any)) else caught-fail) in
            {261}let v_20: bool = not-caught-fail(binder_key) in
            {262}let v_21: bitstring = (if v_16 then catch-fail((if v_18 then (if v_20 then (early_secret,binder_key) else fail-any) else fail-any)) else caught-fail) in
            {263}let v_22: bool = (not-caught-fail(v_21) && success?(1-proj-2-tuple(v_21))) in
            {264}let kb: mac_key = (if v_22 then 2-proj-2-tuple(v_21) else caught-fail) in
            {265}let early_secret_1: bitstring = (if v_22 then 1-proj-2-tuple(v_21) else caught-fail) in
            {266}let offer_1: params = (if v_22 then nego(TLS13,h_alg_4,a_alg_3,kex_ext,sni_ext_1,ech_ext_1,extra_ext_1,trunc_client_psk_ext(id_3)) else caught-fail) in
            {267}let cur_log': bitstring = (if v_22 then (cur_log_3,CH(cr_4,offer_1)) else caught-fail) in
            {268}let v_23: bool = (v_13 && not(v_15)) in
            {269}let psk_4: preSharedKey = (if v_23 then NoPsk else caught-fail) in
            {270}let s_4: bitstring = (if v_23 then zero else caught-fail) in
            {271}let k_1: bitstring = (if v_23 then catch-fail(psk2b(psk_4)) else caught-fail) in
            {272}let v_24: bool = not-caught-fail(k_1) in
            {273}let early_secret_2: bitstring = (if v_23 then catch-fail((if v_24 then hmac(h_alg_4,s_4,k_1) else fail-any)) else caught-fail) in
            {274}let v_25: bool = not-caught-fail(early_secret_2) in
            {275}let l_8: label = (if v_25 then tls13_ext_res_binder else caught-fail) in
            {276}let m_1: bitstring = (if v_25 then zero else caught-fail) in
            {277}let h_8: bitstring = (if v_25 then catch-fail(hash(h_alg_4,m_1)) else caught-fail) in
            {278}let v_26: bool = not-caught-fail(h_8) in
            {279}let x_8: bitstring = (if v_26 then (l_8,h_8) else caught-fail) in
            {280}let binder_key_1: bitstring = (if v_25 then catch-fail((if v_26 then hmac(h_alg_4,early_secret_2,x_8) else fail-any)) else caught-fail) in
            {281}let v_27: bool = not-caught-fail(binder_key_1) in
            {282}let v_28: bitstring = (if v_23 then catch-fail((if v_25 then (if v_27 then (early_secret_2,binder_key_1) else fail-any) else fail-any)) else caught-fail) in
            {283}let v_29: bool = (not-caught-fail(v_28) && success?(1-proj-2-tuple(v_28))) in
            {284}let kb_1: mac_key = (if v_29 then 2-proj-2-tuple(v_28) else caught-fail) in
            {285}let es: bitstring = (if v_29 then 1-proj-2-tuple(v_28) else caught-fail) in
            {286}let v_30: bool = (v_11 && not(v_13)) in
            {287}let psk_5: preSharedKey = (if v_30 then NoPsk else caught-fail) in
            {288}let s_5: bitstring = (if v_30 then zero else caught-fail) in
            {289}let k_2: bitstring = (if v_30 then catch-fail(psk2b(psk_5)) else caught-fail) in
            {290}let v_31: bool = not-caught-fail(k_2) in
            {291}let early_secret_3: bitstring = (if v_30 then catch-fail((if v_31 then hmac(h_alg_4,s_5,k_2) else fail-any)) else caught-fail) in
            {292}let v_32: bool = not-caught-fail(early_secret_3) in
            {293}let l_9: label = (if v_32 then tls13_ext_res_binder else caught-fail) in
            {294}let m_2: bitstring = (if v_32 then zero else caught-fail) in
            {295}let h_9: bitstring = (if v_32 then catch-fail(hash(h_alg_4,m_2)) else caught-fail) in
            {296}let v_33: bool = not-caught-fail(h_9) in
            {297}let x_9: bitstring = (if v_33 then (l_9,h_9) else caught-fail) in
            {298}let binder_key_2: bitstring = (if v_32 then catch-fail((if v_33 then hmac(h_alg_4,early_secret_3,x_9) else fail-any)) else caught-fail) in
            {299}let v_34: bool = not-caught-fail(binder_key_2) in
            {300}let v_35: bitstring = (if v_30 then catch-fail((if v_32 then (if v_34 then (early_secret_3,binder_key_2) else fail-any) else fail-any)) else caught-fail) in
            {301}let v_36: bool = (not-caught-fail(v_35) && success?(1-proj-2-tuple(v_35))) in
            {302}let kb_2: mac_key = (if v_36 then 2-proj-2-tuple(v_35) else caught-fail) in
            {303}let es_1: bitstring = (if v_36 then 1-proj-2-tuple(v_35) else caught-fail) in
            {304}let (early_secret_4: bitstring,s_psk_ext: preSharedKeyExt,psk_6: preSharedKey) = (if v_11 then (if v_13 then (if v_15 then (if v_16 then (if v_22 then (if (binders = hmac(h_alg_4,kb,cur_log')) then (early_secret_1,server_psk_ext(1),psk_3) else fail-any) else fail-any) else fail-any) else (if v_29 then (es,empty_psk_ext,NoPsk) else fail-any)) else (if v_36 then (es_1,empty_psk_ext,NoPsk) else fail-any)) else fail-any) in
            {305}event Server_PSKChoosen(id_server_3,psk_6);
            {306}let cur_log_CH: bitstring = (cur_log_3,client_hello) in
            (
                {307}if (false && (no_HRR && (psk_6 ≠ NoPsk))) then
                {308}!
                {309}in(io, (i: nat,ad: bitstring,enc_early_data: bitstring));
                {310}let l_10: label = tls13_client_early_traffic_secret in
                {311}let h_10: bitstring = catch-fail(hash(tls_h,cur_log_CH)) in
                {312}let v_37: bool = not-caught-fail(h_10) in
                {313}let x_10: bitstring = (if v_37 then (l_10,h_10) else caught-fail) in
                {314}let atsc0: bitstring = catch-fail((if v_37 then hmac(tls_h,early_secret_4,x_10) else fail-any)) in
                {315}let v_38: bool = not-caught-fail(atsc0) in
                {316}let l_11: label = (if v_38 then tls13_key else caught-fail) in
                {317}let h_11: bitstring = (if v_38 then zero else caught-fail) in
                {318}let x_11: bitstring = (if v_38 then (l_11,h_11) else caught-fail) in
                {319}let kc0: bitstring = (if v_38 then catch-fail(hmac(tls_h,atsc0,x_11)) else caught-fail) in
                {320}let v_39: bool = not-caught-fail(kc0) in
                {321}let l_12: label = (if v_39 then tls13_early_exporter_master_secret else caught-fail) in
                {322}let h_12: bitstring = (if v_39 then catch-fail(hash(tls_h,cur_log_CH)) else caught-fail) in
                {323}let v_40: bool = not-caught-fail(h_12) in
                {324}let x_12: bitstring = (if v_40 then (l_12,h_12) else caught-fail) in
                {325}let ems0: bitstring = (if v_39 then catch-fail((if v_40 then hmac(tls_h,early_secret_4,x_12) else fail-any)) else caught-fail) in
                {326}let v_41: bool = not-caught-fail(ems0) in
                {327}let (wkc0: aead_key,ems0_1: bitstring) = (if v_38 then (if v_39 then (if v_41 then (kc0,ems0) else fail-any) else fail-any) else fail-any) in
                {328}let early_data: bitstring = aead_dec(tls_a,wkc0,i,ad,enc_early_data) in
                    {329}new st1_4[]: stamp;
                    {330}event ServerSequenceClient0RTTDataWriteKey(id_server_3,st1_4,i);
                    {331}event ServerReceives0(id_server_3,s_dom_6,cr_3,psk_6,i,ad,early_data)
                else
                    {332}out(io, bad_record_mac)
            ) | (
                {333}new s_6[]: seed;
                {334}let (gxy: element,gy: element) = (dh_xy(s_6,client_hello),dh_encap_fun(tls_g,gx_1,dh_xy(s_6,client_hello))) in
                {335}event Server_DH_server(id_server_3,gy);
                {336}event Server_DH_gxy(id_server_3,gxy);
                {337}let l_13: label = tls13_derived in
                {338}let m_3: bitstring = catch-fail(hash(tls_h,zero)) in
                {339}let v_42: bool = not-caught-fail(m_3) in
                {340}let h_13: bitstring = (if v_42 then catch-fail(hash(tls_h,m_3)) else caught-fail) in
                {341}let v_43: bool = not-caught-fail(h_13) in
                {342}let x_13: bitstring = (if v_43 then (l_13,h_13) else caught-fail) in
                {343}let extra: bitstring = catch-fail((if v_42 then (if v_43 then hmac(tls_h,early_secret_4,x_13) else fail-any) else fail-any)) in
                {344}let v_44: bool = not-caught-fail(extra) in
                {345}let handshake_secret: bitstring = (if v_44 then hmac(tls_h,extra,gxy) else fail-any) in
                {346}let s_offer: params = nego(TLS13,tls_h,tls_a,server_kex_ext(DHE_kex(tls_g,gy)),empty_sni_ext,empty_ech_ext,empty_extra_ext,s_psk_ext) in
                {347}let v_45: bool = is_backend in
                {348}new sr24[]: bytes24;
                {349}let sr24_1: bytes24 = (if v_45 then sr24 else caught-fail) in
                {350}let sh_modified: msg = (if v_45 then SH(B32(sr24_1,zero8),s_offer) else caught-fail) in
                {351}let cur_log_sh: bitstring = (if v_45 then (cur_log_CH,sh_modified) else caught-fail) in
                {352}let transcript_ech_conf: bitstring = (if v_45 then catch-fail(hash(tls_h,cur_log_sh)) else caught-fail) in
                {353}let v_46: bool = not-caught-fail(transcript_ech_conf) in
                {354}let s_7: bitstring = (if v_46 then zero else caught-fail) in
                {355}let k_3: bitstring = (if v_46 then catch-fail(b32_2_b(get_random(client_hello))) else caught-fail) in
                {356}let v_47: bool = not-caught-fail(k_3) in
                {357}let k_4: bitstring = (if v_46 then catch-fail((if v_47 then hmac(tls_h,s_7,k_3) else fail-any)) else caught-fail) in
                {358}let v_48: bool = not-caught-fail(k_4) in
                {359}let l_14: label = (if v_48 then ech_accept_confirmation else caught-fail) in
                {360}let x_14: bitstring = (if v_48 then (l_14,cur_log_sh) else caught-fail) in
                {361}let sr8: bytes8 = (if v_46 then catch-fail(crop_into_bytes8((if v_48 then hmac(tls_h,k_4,x_14) else fail-any))) else caught-fail) in
                {362}let v_49: bool = not-caught-fail(sr8) in
                {363}new rand24[]: bytes24;
                {364}new rand8[]: bytes8;
                {365}let sr_3: bytes32 = (if v_45 then (if v_46 then (if v_49 then B32(sr24_1,sr8) else fail-any) else fail-any) else B32(rand24,rand8)) in
                {366}let server_hello: msg = SH(sr_3,s_offer) in
                {367}event Server_Rand_server(id_server_3,sr_3);
                {368}event ServerChoosesGroup(id_server_3,tls_g);
                {369}event ServerChoosesHash(cr_3,sr_3,tls_h);
                {370}event ServerChoosesAead(cr_3,sr_3,tls_a);
                {371}out(io, server_hello);
                {372}let cur_log_SH: bitstring = (cur_log_CH,server_hello) in
                {373}let l_15: label = tls13_derived in
                {374}let m_4: bitstring = catch-fail(hash(tls_h,zero)) in
                {375}let v_50: bool = not-caught-fail(m_4) in
                {376}let h_14: bitstring = (if v_50 then catch-fail(hash(tls_h,m_4)) else caught-fail) in
                {377}let v_51: bool = not-caught-fail(h_14) in
                {378}let x_15: bitstring = (if v_51 then (l_15,h_14) else caught-fail) in
                {379}let extra_1: bitstring = catch-fail((if v_50 then (if v_51 then hmac(tls_h,handshake_secret,x_15) else fail-any) else fail-any)) in
                {380}let v_52: bool = not-caught-fail(extra_1) in
                {381}let k_5: bitstring = (if v_52 then zero else caught-fail) in
                {382}let master_secret_3: bitstring = (if v_52 then catch-fail(hmac(tls_h,handshake_secret,k_5)) else caught-fail) in
                {383}let v_53: bool = not-caught-fail(master_secret_3) in
                {384}let l_16: label = (if v_53 then tls13_client_handshake_traffic_secret else caught-fail) in
                {385}let h_15: bitstring = (if v_53 then catch-fail(hash(tls_h,cur_log_SH)) else caught-fail) in
                {386}let v_54: bool = not-caught-fail(h_15) in
                {387}let x_16: bitstring = (if v_54 then (l_16,h_15) else caught-fail) in
                {388}let client_hts: bitstring = (if v_53 then catch-fail((if v_54 then hmac(tls_h,handshake_secret,x_16) else fail-any)) else caught-fail) in
                {389}let v_55: bool = not-caught-fail(client_hts) in
                {390}let l_17: label = (if v_55 then tls13_server_handshake_traffic_secret else caught-fail) in
                {391}let h_16: bitstring = (if v_55 then catch-fail(hash(tls_h,cur_log_SH)) else caught-fail) in
                {392}let v_56: bool = not-caught-fail(h_16) in
                {393}let x_17: bitstring = (if v_56 then (l_17,h_16) else caught-fail) in
                {394}let server_hts: bitstring = (if v_55 then catch-fail((if v_56 then hmac(tls_h,handshake_secret,x_17) else fail-any)) else caught-fail) in
                {395}let v_57: bool = not-caught-fail(server_hts) in
                {396}let l_18: label = (if v_57 then tls13_key else caught-fail) in
                {397}let h_17: bitstring = (if v_57 then zero else caught-fail) in
                {398}let x_18: bitstring = (if v_57 then (l_18,h_17) else caught-fail) in
                {399}let client_wkh: bitstring = (if v_57 then catch-fail(hmac(tls_h,client_hts,x_18)) else caught-fail) in
                {400}let v_58: bool = not-caught-fail(client_wkh) in
                {401}let l_19: label = (if v_58 then tls13_key else caught-fail) in
                {402}let h_18: bitstring = (if v_58 then zero else caught-fail) in
                {403}let x_19: bitstring = (if v_58 then (l_19,h_18) else caught-fail) in
                {404}let server_wkh: bitstring = (if v_58 then catch-fail(hmac(tls_h,server_hts,x_19)) else caught-fail) in
                {405}let v_59: bool = not-caught-fail(server_wkh) in
                {406}let l_20: label = (if v_59 then tls13_finished else caught-fail) in
                {407}let h_19: bitstring = (if v_59 then zero else caught-fail) in
                {408}let x_20: bitstring = (if v_59 then (l_20,h_19) else caught-fail) in
                {409}let client_fk: bitstring = (if v_59 then catch-fail(hmac(tls_h,client_hts,x_20)) else caught-fail) in
                {410}let v_60: bool = not-caught-fail(client_fk) in
                {411}let l_21: label = (if v_60 then tls13_finished else caught-fail) in
                {412}let h_20: bitstring = (if v_60 then zero else caught-fail) in
                {413}let x_21: bitstring = (if v_60 then (l_21,h_20) else caught-fail) in
                {414}let server_fk: bitstring = (if v_60 then catch-fail(hmac(tls_h,server_hts,x_21)) else caught-fail) in
                {415}let v_61: bool = not-caught-fail(server_fk) in
                {416}let (master_secret_4: bitstring,chk_3: aead_key,shk_2: aead_key,cfin_3: mac_key,sfin_2: mac_key) = (if v_52 then (if v_53 then (if v_55 then (if v_57 then (if v_58 then (if v_59 then (if v_60 then (if v_61 then (master_secret_3,client_wkh,server_wkh,client_fk,server_fk) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                {417}event Server_chk(id_server_3,chk_3);
                {418}event Server_shk(id_server_3,shk_2);
                {419}event Server_cfin(id_server_3,cfin_3);
                {420}event Server_sfin(id_server_3,sfin_2);
                {421}let enc_ee: bitstring = aead_enc(tls_a,shk_2,0,zero,ee_msg) in
                {422}out(io, enc_ee);
                {423}let cur_log_EE: bitstring = (cur_log_SH,ee_msg) in
                {424}if (psk_6 = NoPsk) then
                (
                    {425}if req_cert_2 then
                    (
                        {426}let crtr_msg_1: msg = CRTR(zero) in
                        {427}let enc_crt_1: bitstring = aead_enc(tls_a,shk_2,1,zero,crtr_msg_1) in
                        {428}out(io, enc_crt_1);
                        {429}let cur_log_CRTR_1: bitstring = (cur_log_EE,crtr_msg_1) in
                        {430}out(ch_server_CRT, (id_server_3,ArgsServerCRT(cr_3,sr_3,tls_h,tls_a,s_dom_6,req_cert_2,master_secret_4,chk_3,0,shk_2,2,cfin_3,sfin_2,cur_log_CRTR_1)))
                    )
                    else
                        {431}out(ch_server_CRT, (id_server_3,ArgsServerCRT(cr_3,sr_3,tls_h,tls_a,s_dom_6,req_cert_2,master_secret_4,chk_3,0,shk_2,1,cfin_3,sfin_2,cur_log_EE)))
                )
                else
                    {432}out(ch_server_FIN, (id_server_3,ArgsServerFIN(cr_3,sr_3,tls_h,tls_a,s_dom_6,NoPubKey,false,psk_6,master_secret_4,chk_3,0,shk_2,1,cfin_3,sfin_2,cur_log_EE)))
            )
        )
        else
            {433}out(io, illegal_parameter)
    )
    else
        {434}out(io, handshake_failure)
) | (
    {435}!
    {436}in(ch_client_CFIN, (id_client: idProc,ArgsClientCFIN(cr_5: bytes32,sr_4: bytes32,h_alg_5: hash_alg,a_alg_4: aead_alg,c_dom_1: domain,s_dom_7: domain,s_pkey_4: pubkey,c_pkey_2: pubkey,psk_7: preSharedKey,safe_psk: bool,comp_psk: bool,master_secret_5: bitstring,chk_4: aead_key,seq_client_1: nat,shk_3: aead_key,seq_srv_1: nat,cfin_4: mac_key,sfin_3: mac_key,cur_log_4: bitstring)));
    {437}new st_5[]: stamp;
    {438}event PreciseIdProcess(ch_client_CFIN,id_client,st_5);
    {439}event Client_server_domain(id_client,s_dom_7);
    {440}event Client_Rand_client(id_client,cr_5);
    {441}event Client_Rand_server(id_client,sr_4);
    {442}event Client_PSKChoosen(id_client,psk_7,safe_psk);
    {443}event Client_comp_psk(id_client,comp_psk);
    {444}event Client_chk(id_client,chk_4);
    {445}event Client_shk(id_client,shk_3);
    {446}event Client_cfin(id_client,cfin_4);
    {447}event Client_sfin(id_client,sfin_3);
    {448}event Client_Cert_server(id_client,s_pkey_4);
    {449}event Client_Cert_client(id_client,c_pkey_2);
    {450}new st1_5[]: stamp;
    {451}let args: bitstring = (c_dom_1,s_dom_7,psk_7,s_pkey_4,master_secret_5,safe_psk,comp_psk,cur_log_4) in
    {452}event PreciseMess(ch_client_CFIN,id_client,st1_5,args);
    {453}let l_22: label = tls13_client_application_traffic_secret in
    {454}let h_21: bitstring = catch-fail(hash(h_alg_5,cur_log_4)) in
    {455}let v_62: bool = not-caught-fail(h_21) in
    {456}let x_22: bitstring = (if v_62 then (l_22,h_21) else caught-fail) in
    {457}let client_ats_1: bitstring = catch-fail((if v_62 then hmac(h_alg_5,master_secret_5,x_22) else fail-any)) in
    {458}let v_63: bool = not-caught-fail(client_ats_1) in
    {459}let l_23: label = (if v_63 then tls13_server_application_traffic_secret else caught-fail) in
    {460}let h_22: bitstring = (if v_63 then catch-fail(hash(h_alg_5,cur_log_4)) else caught-fail) in
    {461}let v_64: bool = not-caught-fail(h_22) in
    {462}let x_23: bitstring = (if v_64 then (l_23,h_22) else caught-fail) in
    {463}let server_ats_1: bitstring = (if v_63 then catch-fail((if v_64 then hmac(h_alg_5,master_secret_5,x_23) else fail-any)) else caught-fail) in
    {464}let v_65: bool = not-caught-fail(server_ats_1) in
    {465}let l_24: label = (if v_65 then tls13_exporter_master_secret else caught-fail) in
    {466}let h_23: bitstring = (if v_65 then catch-fail(hash(h_alg_5,cur_log_4)) else caught-fail) in
    {467}let v_66: bool = not-caught-fail(h_23) in
    {468}let x_24: bitstring = (if v_66 then (l_24,h_23) else caught-fail) in
    {469}let ems_2: bitstring = (if v_65 then catch-fail((if v_66 then hmac(h_alg_5,master_secret_5,x_24) else fail-any)) else caught-fail) in
    {470}let v_67: bool = not-caught-fail(ems_2) in
    {471}let l_25: label = (if v_67 then tls13_key else caught-fail) in
    {472}let h_24: bitstring = (if v_67 then zero else caught-fail) in
    {473}let x_25: bitstring = (if v_67 then (l_25,h_24) else caught-fail) in
    {474}let client_wkad_1: bitstring = (if v_67 then catch-fail(hmac(h_alg_5,client_ats_1,x_25)) else caught-fail) in
    {475}let v_68: bool = not-caught-fail(client_wkad_1) in
    {476}let l_26: label = (if v_68 then tls13_key else caught-fail) in
    {477}let h_25: bitstring = (if v_68 then zero else caught-fail) in
    {478}let x_26: bitstring = (if v_68 then (l_26,h_25) else caught-fail) in
    {479}let server_wkad_1: bitstring = (if v_68 then catch-fail(hmac(h_alg_5,server_ats_1,x_26)) else caught-fail) in
    {480}let v_69: bool = not-caught-fail(server_wkad_1) in
    {481}let l_27: label = (if v_69 then tls13_finished else caught-fail) in
    {482}let h_26: bitstring = (if v_69 then zero else caught-fail) in
    {483}let x_27: bitstring = (if v_69 then (l_27,h_26) else caught-fail) in
    {484}let client_fkad_1: bitstring = (if v_69 then catch-fail(hmac(h_alg_5,client_ats_1,x_27)) else caught-fail) in
    {485}let v_70: bool = not-caught-fail(client_fkad_1) in
    {486}let (cak_1: aead_key,sak_1: aead_key,cfkad_1: mac_key,ems_3: bitstring) = (if v_63 then (if v_65 then (if v_67 then (if v_68 then (if v_69 then (if v_70 then (client_wkad_1,server_wkad_1,client_fkad_1,ems_2) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
    {487}event Client_cak(id_client,cak_1);
    {488}event Client_sak(id_client,sak_1);
    {489}event Client_cfkad(id_client,cfkad_1);
    {490}let client_hash_msg: bitstring = hmac(h_alg_5,cfin_4,cur_log_4) in
    {491}let client_finished_msg: msg = FIN(client_hash_msg) in
    {492}let cur_log'_1: bitstring = (cur_log_4,client_finished_msg) in
    {493}let l_28: label = tls13_resumption_master_secret in
    {494}let h_27: bitstring = catch-fail(hash(h_alg_5,cur_log'_1)) in
    {495}let v_71: bool = not-caught-fail(h_27) in
    {496}let x_28: bitstring = (if v_71 then (l_28,h_27) else caught-fail) in
    {497}let rms_1: bitstring = (if v_71 then hmac(h_alg_5,master_secret_5,x_28) else fail-any) in
    {498}event Client_rms(id_client,rms_1);
    {499}let enc_client_finished_msg: bitstring = aead_enc(a_alg_4,chk_4,seq_client_1,zero,client_finished_msg) in
    {500}event ClientFinished(id_client,cr_5,sr_4,psk_7,s_pkey_4,c_pkey_2,cak_1,sak_1,ems_3,rms_1);
    {501}out(io, enc_client_finished_msg);
    (
        0
    ) | (
        0
    ) | (
        {502}!
        {503}in(io, (seq_srv_2: nat,seq_client_2: nat));
        {504}if (is_nat(seq_srv_2) && is_nat(seq_client_2)) then
        {505}in(io, enc_msg: bitstring);
        {506}let CRTR(rand_crt: bitstring) = aead_dec(a_alg_4,sak_1,seq_srv_2,zero,enc_msg) in
        {507}new st_6[]: stamp;
        {508}event ClientSequenceServerDataWriteKey(id_client,st_6,seq_srv_2);
        {509}event ClientReceives(id_client,cr_5,sr_4,psk_7,s_pkey_4,c_pkey_2,seq_srv_2,zero,CRTR(rand_crt));
        {510}let cur_log_CRTR_2: bitstring = (cur_log'_1,CRTR(rand_crt)) in
        {539}get long_term_keys(c_dom': domain,sk_2: privkey,c_pkey'_1: pubkey,crt_6: certificate,idP_2: idProc) in
        {511}let @1_x: bitstring = (c_dom',sk_2,c_pkey'_1,crt_6,idP_2) in
        {512}new @1_st[]: stamp;
        {513}event PreciseInput(@1_st,@1_x);
        {514}let () = () in
        {515}event Selected_ltk(c_dom_1,c_dom',idP_2);
        {516}let (sk_3: privkey,c_pkey'_2: pubkey,crt_7: certificate) = (sk_2,c_pkey'_1,crt_6) in
        {517}let certificate_msg_1: msg = CRT(rand_crt,crt_7) in
        {518}let encrypted_certificate_msg_1: bitstring = aead_enc(a_alg_4,cak_1,seq_client_2,zero,certificate_msg_1) in
        {519}new st1_6[]: stamp;
        {520}event ClientSequenceClientDataWriteKey(id_client,st1_6,seq_client_2);
        {521}event ClientSends(id_client,cr_5,sr_4,psk_7,s_pkey_4,c_pkey_2,seq_client_2,zero,certificate_msg_1);
        {522}out(io, encrypted_certificate_msg_1);
        {523}let cur_log_CRT_3: bitstring = (cur_log_CRTR_2,certificate_msg_1) in
        {524}let signed_log_3: bitstring = sign(sk_3,hash(h_alg_5,cur_log_CRT_3)) in
        {525}let certificate_verify_msg_1: msg = CV(signed_log_3) in
        {526}let enc_verify_msg: bitstring = aead_enc(a_alg_4,cak_1,seq_client_2 + 1,zero,certificate_verify_msg_1) in
        {527}new st2_1[]: stamp;
        {528}event ClientSequenceClientDataWriteKey(id_client,st2_1,seq_client_2 + 1);
        {529}event ClientSends(id_client,cr_5,sr_4,psk_7,s_pkey_4,c_pkey_2,seq_client_2 + 1,zero,certificate_verify_msg_1);
        {530}out(io, enc_verify_msg);
        {531}let cur_log_CV_3: bitstring = (cur_log_CRT_3,certificate_verify_msg_1) in
        {532}let hash_msg_3: bitstring = hmac(h_alg_5,cfkad_1,cur_log_CV_3) in
        {533}let enc_fin_2: bitstring = aead_enc(a_alg_4,cak_1,seq_client_2 + 2,zero,FIN(hash_msg_3)) in
        {534}new st3_1[]: stamp;
        {535}event ClientSequenceClientDataWriteKey(id_client,st3_1,seq_client_2 + 2);
        {536}event ClientSends(id_client,cr_5,sr_4,psk_7,s_pkey_4,c_pkey_2,seq_client_2 + 2,zero,FIN(hash_msg_3));
        {537}event ClientFinishedPH(id_client,cr_5,sr_4,psk_7,s_pkey_4,c_pkey_2,rand_crt,c_pkey'_2);
        {538}out(io, enc_fin_2)
    )
) | (
    {540}!
    {541}in(ch_client_FIN, (id_client_1: idProc,ArgsClientFIN(cr_6: bytes32,sr_5: bytes32,h_alg_6: hash_alg,a_alg_5: aead_alg,c_dom_2: domain,s_dom_8: domain,s_pkey_5: pubkey,cert_req: bool,psk_8: preSharedKey,safe_psk_1: bool,comp_psk_1: bool,master_secret_6: bitstring,chk_5: aead_key,seq_client_3: nat,shk_4: aead_key,seq_srv_3: nat,cfin_5: mac_key,sfin_4: mac_key,cur_log_5: bitstring)));
    {542}new st_7[]: stamp;
    {543}event PreciseIdProcess(ch_client_FIN,id_client_1,st_7);
    {544}event Client_server_domain(id_client_1,s_dom_8);
    {545}event Client_Rand_client(id_client_1,cr_6);
    {546}event Client_Rand_server(id_client_1,sr_5);
    {547}event Client_PSKChoosen(id_client_1,psk_8,safe_psk_1);
    {548}event Client_comp_psk(id_client_1,comp_psk_1);
    {549}event Client_chk(id_client_1,chk_5);
    {550}event Client_shk(id_client_1,shk_4);
    {551}event Client_cfin(id_client_1,cfin_5);
    {552}event Client_sfin(id_client_1,sfin_4);
    {553}event Client_Cert_server(id_client_1,s_pkey_5);
    {554}new st1_7[]: stamp;
    {555}event PreciseMess(ch_client_FIN,id_client_1,st1_7,(master_secret_6,s_pkey_5,psk_8,safe_psk_1,comp_psk_1));
    {556}in(io, enc_finished_msg: bitstring);
    {557}let finished_msg_1: msg = aead_dec(a_alg_5,shk_4,seq_srv_3,zero,enc_finished_msg) in
    (
        {558}let FIN(hash_msg_4: bitstring) = finished_msg_1 in
        (
            {559}if (hash_msg_4 = hmac(h_alg_6,sfin_4,cur_log_5)) then
            {560}let cur_log2: bitstring = (cur_log_5,finished_msg_1) in
            {561}if cert_req then
            (
                {562}let seq_srv_4: nat = seq_srv_3 + 1 in
                {580}get long_term_keys(c_dom'_1: domain,sk_4: privkey,c_pkey_3: pubkey,crt_8: certificate,idP_3: idProc) in
                {563}let @2_x: bitstring = (c_dom'_1,sk_4,c_pkey_3,crt_8,idP_3) in
                {564}new @2_st[]: stamp;
                {565}event PreciseInput(@2_st,@2_x);
                {566}let () = () in
                {567}event Selected_ltk(c_dom_2,c_dom'_1,idP_3);
                {568}let (sk_5: privkey,c_pkey_4: pubkey,crt_9: certificate) = (sk_4,c_pkey_3,crt_8) in
                {569}event Client_Cert_client(id_client_1,c_pkey_4);
                {570}let certificate_msg_2: msg = CRT(zero,crt_9) in
                {571}let encrypted_certificate_msg_2: bitstring = aead_enc(a_alg_5,chk_5,seq_client_3,zero,certificate_msg_2) in
                {572}out(io, encrypted_certificate_msg_2);
                {573}let cur_log2_1: bitstring = (cur_log2,certificate_msg_2) in
                {574}let signed_log_4: bitstring = sign(sk_5,hash(h_alg_6,cur_log2_1)) in
                {575}let certificate_verify_msg_2: msg = CV(signed_log_4) in
                {576}let encrypted_certificate_verify_msg_1: bitstring = aead_enc(a_alg_5,chk_5,seq_client_3 + 1,zero,certificate_verify_msg_2) in
                {577}out(io, encrypted_certificate_verify_msg_1);
                {578}let cur_log3: bitstring = (cur_log2_1,certificate_verify_msg_2) in
                {579}out(ch_client_CFIN, (id_client_1,ArgsClientCFIN(cr_6,sr_5,h_alg_6,a_alg_5,c_dom_2,s_dom_8,s_pkey_5,c_pkey_4,NoPsk,false,comp_psk_1,master_secret_6,chk_5,seq_client_3 + 2,shk_4,seq_srv_4,cfin_5,sfin_4,cur_log3)))
            )
            else
                {581}event Client_Cert_client(id_client_1,NoPubKey);
                {582}out(ch_client_CFIN, (id_client_1,ArgsClientCFIN(cr_6,sr_5,h_alg_6,a_alg_5,c_dom_2,s_dom_8,s_pkey_5,NoPubKey,psk_8,safe_psk_1,comp_psk_1,master_secret_6,chk_5,seq_client_3,shk_4,seq_srv_3 + 1,cfin_5,sfin_4,cur_log2)))
        )
        else
            {583}out(io, unexpected_message)
    )
    else
        {584}out(io, bad_record_mac)
) | (
    {585}!
    {586}in(ch_client_CRT, (id_client_2: idProc,ArgsClientCRT(cr_7: bytes32,sr_6: bytes32,h_alg_7: hash_alg,a_alg_6: aead_alg,c_dom_3: domain,s_dom_9: domain,cert_req_1: bool,certificate_msg_3: msg,comp_psk_2: bool,master_secret_7: bitstring,chk_6: aead_key,seq_client_4: nat,shk_5: aead_key,seq_srv_5: nat,cfin_6: mac_key,sfin_5: mac_key,cur_log_6: bitstring)));
    {587}new st_8[]: stamp;
    {588}event PreciseIdProcess(ch_client_CRT,id_client_2,st_8);
    {589}event Client_server_domain(id_client_2,s_dom_9);
    {590}event Client_Rand_client(id_client_2,cr_7);
    {591}event Client_Rand_server(id_client_2,sr_6);
    {592}event Client_comp_psk(id_client_2,comp_psk_2);
    {593}event Client_chk(id_client_2,chk_6);
    {594}event Client_shk(id_client_2,shk_5);
    {595}event Client_cfin(id_client_2,cfin_6);
    {596}event Client_sfin(id_client_2,sfin_5);
    {597}let CRT(=zero,crt_10: certificate) = certificate_msg_3 in
    {598}let cur_log2_2: bitstring = (cur_log_6,certificate_msg_3) in
    {599}in(io, enc_crt_verif_msg: bitstring);
    {600}let certificate_verify_msg_3: msg = aead_dec(a_alg_6,shk_5,seq_srv_5,zero,enc_crt_verif_msg) in
    {601}let CV(signed_log_5: bitstring) = certificate_verify_msg_3 in
    {602}if (verify(get_pkey(crt_10),hash(h_alg_7,cur_log2_2),signed_log_5) && ((get_domain(crt_10) = s_dom_9) && verify_cert(crt_10))) then
    {603}let s_pkey_6: pubkey = get_pkey(crt_10) in
    {604}let cur_log3_1: bitstring = (cur_log2_2,certificate_verify_msg_3) in
    {605}event Client_Cert_server(id_client_2,s_pkey_6);
    {606}out(ch_client_FIN, (id_client_2,ArgsClientFIN(cr_7,sr_6,h_alg_7,a_alg_6,c_dom_3,s_dom_9,s_pkey_6,cert_req_1,NoPsk,false,comp_psk_2,master_secret_7,chk_6,seq_client_4,shk_5,seq_srv_5 + 1,cfin_6,sfin_5,cur_log3_1)))
) | (
    {607}!
    {608}in(ch_client_after_EE, (id_client_3: idProc,ArgsClientAfterEE(cr_8: bytes32,sr_7: bytes32,h_alg_8: hash_alg,a_alg_7: aead_alg,c_dom_4: domain,s_dom_10: domain,psk_9: preSharedKey,safe_psk_2: bool,comp_psk_3: bool,master_secret_8: bitstring,chk_7: aead_key,seq_client_5: nat,shk_6: aead_key,seq_srv_6: nat,cfin_7: mac_key,sfin_6: mac_key,cur_log_7: bitstring)));
    {609}new st_9[]: stamp;
    {610}event PreciseIdProcess(ch_client_after_EE,id_client_3,st_9);
    {611}event Client_server_domain(id_client_3,s_dom_10);
    {612}event Client_Rand_client(id_client_3,cr_8);
    {613}event Client_Rand_server(id_client_3,sr_7);
    {614}event Client_PSKChoosen(id_client_3,psk_9,safe_psk_2);
    {615}event Client_comp_psk(id_client_3,comp_psk_3);
    {616}event Client_chk(id_client_3,chk_7);
    {617}event Client_shk(id_client_3,shk_6);
    {618}event Client_cfin(id_client_3,cfin_7);
    {619}event Client_sfin(id_client_3,sfin_6);
    {620}new st1_8[]: stamp;
    {621}event PreciseMess(ch_client_after_EE,id_client_3,st1_8,master_secret_8);
    {622}if (psk_9 = NoPsk) then
    (
        {623}in(io, enc_msg_1: bitstring);
        {624}let msg': msg = aead_dec(a_alg_7,shk_6,seq_srv_6,zero,enc_msg_1) in
        {625}let CRTR(=zero) = msg' in
        (
            {626}let cur_log2_3: bitstring = (cur_log_7,msg') in
            {627}in(io, enc_crt_msg: bitstring);
            {628}let certificate_msg_4: msg = aead_dec(a_alg_7,shk_6,seq_srv_6 + 1,zero,enc_crt_msg) in
            {629}out(ch_client_CRT, (id_client_3,ArgsClientCRT(cr_8,sr_7,h_alg_8,a_alg_7,c_dom_4,s_dom_10,true,certificate_msg_4,comp_psk_3,master_secret_8,chk_7,seq_client_5,shk_6,seq_srv_6 + 2,cfin_7,sfin_6,cur_log2_3)))
        )
        else
            {630}let CRT(=zero,crt_11: certificate) = msg' in
                {631}out(ch_client_CRT, (id_client_3,ArgsClientCRT(cr_8,sr_7,h_alg_8,a_alg_7,c_dom_4,s_dom_10,false,msg',comp_psk_3,master_secret_8,chk_7,seq_client_5,shk_6,seq_srv_6 + 1,cfin_7,sfin_6,cur_log_7)))
            else
                {632}out(io, unexpected_message)
    )
    else
        {633}event Client_Cert_server(id_client_3,NoPubKey);
        {634}out(ch_client_FIN, (id_client_3,ArgsClientFIN(cr_8,sr_7,h_alg_8,a_alg_7,c_dom_4,s_dom_10,NoPubKey,false,psk_9,safe_psk_2,comp_psk_3,master_secret_8,chk_7,seq_client_5,shk_6,seq_srv_6,cfin_7,sfin_6,cur_log_7)))
) | (
    {635}!
    {641}get long_term_keys(dom1: domain,sk1: privkey,pk1: pubkey,cert1: certificate,idP1: idProc) in
    {636}event Same(idP1);
    {640}get long_term_keys(dom2: domain,sk2: privkey,pk2: pubkey,cert2: certificate,idP2: idProc) in
    {637}event Same(idP2);
    {638}insert long_term_keys(choice[dom1,dom2],choice[sk1,sk2],choice[pk1,pk2],choice[cert1,cert2],choice[idP1,idP2]);
    {639}insert long_term_keys(choice[dom2,dom1],choice[sk2,sk1],choice[pk2,pk1],choice[cert2,cert1],choice[idP2,idP1])
) | (
    {642}!
    {648}get pre_shared_keys(c_dom1: domain,s_dom_11: domain,h_alg_9: hash_alg,id1: identityPsk,psk1: preSharedKey,idP1_1: idProc,safe1: bool) in
    {643}event Same(idP1_1);
    {647}get pre_shared_keys(c_dom2: domain,=s_dom_11,=h_alg_9,id2: identityPsk,psk2: preSharedKey,idP2_1: idProc,safe2: bool) in
    {644}event Same(idP2_1);
    {645}insert pre_shared_keys(choice[c_dom1,c_dom2],s_dom_11,h_alg_9,choice[id1,id2],choice[psk1,psk2],choice[idP1_1,idP2_1],choice[safe1,safe2]);
    {646}insert pre_shared_keys(choice[c_dom2,c_dom1],s_dom_11,h_alg_9,choice[id2,id1],choice[psk2,psk1],choice[idP2_1,idP1_1],choice[safe2,safe1])
) | (
    {649}!
    {650}new id_tls_client: idProc;
    {651}in(io, s_dom_12: domain);
    {652}event Same(s_dom_12);
    {653}in(io, c_dom_5: domain);
    {654}event Same(c_dom_5);
    {655}let @7_id_client: idProc = id_tls_client in
    {656}let @7_tls_h: hash_alg = id_hash(StrongHash,1) in
    {657}let @7_tls_a: aead_alg = id_aead(StrongAE,1) in
    {658}let @7_tls_g: group = id_g(StrongDH,1) in
    {659}let @7_use_psk: bool = false in
    {660}in(io, @7_send_kex: bool);
    {661}event Same(@7_send_kex);
    {662}let () = () in
    {663}let @7_comp_psk: bool = false in
    {664}let send_kex: bool = (not(false) || @7_send_kex) in
    {665}let cur_log_8: bitstring = zero in
    {666}let old_psk_data: bitstring = zero in
    {667}new rand24_1[]: bytes24;
    {668}new rand8_1[]: bytes8;
    {669}let cr_9: bytes32 = B32(rand24_1,rand8_1) in
    {670}new s_8[]: seed;
    {671}let gx_2: element = dh_pub(@7_tls_g,dh_k(s_8)) in
    {672}let v_72: bitstring = (dh_k(s_8),gx_2) in
    {673}let v_73: bool = success?(1-proj-2-tuple(v_72)) in
    {674}let gx_3: element = (if v_73 then 2-proj-2-tuple(v_72) else caught-fail) in
    {675}let x_29: bitstring = (if v_73 then 1-proj-2-tuple(v_72) else caught-fail) in
    {676}let kex: kex_alg = (if v_73 then (if send_kex then DHE_kex(@7_tls_g,gx_3) else DHE_group(@7_tls_g)) else caught-fail) in
    {677}let (kex_ext_1: keyShareExt,kex_data: bitstring) = (if v_73 then (client_kex_ext(kex),(x_29,@7_tls_g)) else fail-any) in
    {678}let ech_ext_2: echExt = empty_ech_ext in
    {679}let extra_2: extraExt = empty_extra_ext in
    {680}if @7_use_psk then
    (
        {681}let (psk_10: preSharedKey,id_4: identityPsk,old_es: bitstring,is_safe: bool) = old_psk_data in
        (
            {682}let offer_2: params = nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_1,SNI(s_dom_12),ech_ext_2,extra_2,trunc_client_psk_ext(id_4)) in
            {683}let cur_log'_2: bitstring = (cur_log_8,CH(cr_9,offer_2)) in
            {684}let s_9: bitstring = zero in
            {685}let k_6: bitstring = catch-fail(psk2b(psk_10)) in
            {686}let v_74: bool = not-caught-fail(k_6) in
            {687}let early_secret_5: bitstring = catch-fail((if v_74 then hmac(@7_tls_h,s_9,k_6) else fail-any)) in
            {688}let v_75: bool = not-caught-fail(early_secret_5) in
            {689}let l_29: label = (if v_75 then tls13_ext_res_binder else caught-fail) in
            {690}let m_5: bitstring = (if v_75 then zero else caught-fail) in
            {691}let h_28: bitstring = (if v_75 then catch-fail(hash(@7_tls_h,m_5)) else caught-fail) in
            {692}let v_76: bool = not-caught-fail(h_28) in
            {693}let x_30: bitstring = (if v_76 then (l_29,h_28) else caught-fail) in
            {694}let binder_key_3: bitstring = (if v_75 then catch-fail((if v_76 then hmac(@7_tls_h,early_secret_5,x_30) else fail-any)) else caught-fail) in
            {695}let v_77: bool = not-caught-fail(binder_key_3) in
            {696}let v_78: bitstring = catch-fail((if v_75 then (if v_77 then (early_secret_5,binder_key_3) else fail-any) else fail-any)) in
            {697}let v_79: bool = (not-caught-fail(v_78) && success?(1-proj-2-tuple(v_78))) in
            {698}let kb_3: mac_key = (if v_79 then 2-proj-2-tuple(v_78) else caught-fail) in
            {699}let es_2: bitstring = (if v_79 then 1-proj-2-tuple(v_78) else caught-fail) in
            {700}let binders_1: bitstring = (if v_79 then catch-fail(hmac(@7_tls_h,kb_3,cur_log'_2)) else caught-fail) in
            {701}let v_80: bool = not-caught-fail(binders_1) in
            {702}let v_81: bitstring = catch-fail((if v_79 then (if v_80 then (client_psk_ext(id_4,binders_1),(psk_10,id_4,es_2,is_safe)) else fail-any) else fail-any)) in
            {703}let v_82: bool = (not-caught-fail(v_81) && success?(1-proj-2-tuple(v_81))) in
            {704}let psk_data: bitstring = (if v_82 then 2-proj-2-tuple(v_81) else caught-fail) in
            {705}let psk_ext_2: preSharedKeyExt = (if v_82 then 1-proj-2-tuple(v_81) else caught-fail) in
            {706}let offer_3: params = (if v_82 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_1,SNI(s_dom_12),empty_ech_ext,empty_extra_ext,psk_ext_2) else caught-fail) in
            {707}let (client_hello_1: msg,cr_10: bytes32,kex_data_1: bitstring,psk_data_1: bitstring) = (if v_82 then (CH(cr_9,offer_3),cr_9,kex_data,psk_data) else fail-any) in
            {708}event ClientOffersAead(cr_10,@7_tls_a);
            {709}event ClientOffersHash(cr_10,@7_tls_h);
            {710}event ClientOffersGroup(cr_10,@7_tls_g);
            {711}out(io, client_hello_1);
            {712}let cur_log2_4: bitstring = (cur_log_8,client_hello_1) in
            {713}let (psk_11: preSharedKey,id_5: identityPsk,es_3: bitstring,safe_psk_3: bool) = psk_data_1 in
            (
                {714}if (false && (psk_11 ≠ NoPsk)) then
                {715}let client_hello_2: bitstring = (zero,client_hello_1) in
                {716}let l_30: label = tls13_client_early_traffic_secret in
                {717}let h_29: bitstring = catch-fail(hash(@7_tls_h,client_hello_2)) in
                {718}let v_83: bool = not-caught-fail(h_29) in
                {719}let x_31: bitstring = (if v_83 then (l_30,h_29) else caught-fail) in
                {720}let atsc0_1: bitstring = catch-fail((if v_83 then hmac(@7_tls_h,es_3,x_31) else fail-any)) in
                {721}let v_84: bool = not-caught-fail(atsc0_1) in
                {722}let l_31: label = (if v_84 then tls13_key else caught-fail) in
                {723}let h_30: bitstring = (if v_84 then zero else caught-fail) in
                {724}let x_32: bitstring = (if v_84 then (l_31,h_30) else caught-fail) in
                {725}let kc0_1: bitstring = (if v_84 then catch-fail(hmac(@7_tls_h,atsc0_1,x_32)) else caught-fail) in
                {726}let v_85: bool = not-caught-fail(kc0_1) in
                {727}let l_32: label = (if v_85 then tls13_early_exporter_master_secret else caught-fail) in
                {728}let h_31: bitstring = (if v_85 then catch-fail(hash(@7_tls_h,client_hello_2)) else caught-fail) in
                {729}let v_86: bool = not-caught-fail(h_31) in
                {730}let x_33: bitstring = (if v_86 then (l_32,h_31) else caught-fail) in
                {731}let ems0_2: bitstring = (if v_85 then catch-fail((if v_86 then hmac(@7_tls_h,es_3,x_33) else fail-any)) else caught-fail) in
                {732}let v_87: bool = not-caught-fail(ems0_2) in
                {733}let (wkc0_1: aead_key,ems0_3: bitstring) = (if v_84 then (if v_85 then (if v_87 then (kc0_1,ems0_2) else fail-any) else fail-any) else fail-any) in
                {734}!
                {735}in(io, (i_1: nat,ad_1: bitstring));
                {736}if is_nat(i_1) then
                {737}new msg_ed[]: bitstring;
                {738}let enc_ed: bitstring = aead_enc(@7_tls_a,wkc0_1,i_1,ad_1,msg_ed) in
                {739}new st_10: stamp;
                {740}event ClientSequenceClient0RTTDataWriteKey(@7_id_client,st_10,i_1);
                {741}event ClientSends0(@7_id_client,cr_10,psk_11,i_1,ad_1,msg_ed);
                {742}out(io, enc_ed)
            ) | (
                {743}in(io, server_hello_1: msg);
                {744}let SH(sr_8: bytes32,mode: params) = server_hello_1 in
                (
                    {745}event ClientEchAcceptance(@7_id_client,false);
                    {746}if (false && (sr_8 = B32(HRR24,HRR8))) then
                    (
                        {747}if ((mode = nego(TLS13,@7_tls_h,@7_tls_a,hrr_kex_ext(@7_tls_g),empty_sni_ext,empty_ech_ext,empty_extra_ext,empty_psk_ext)) && (send_kex ≠ true)) then
                        (
                            {748}let cur_log3_2: bitstring = (cur_log2_4,server_hello_1) in
                            {749}let send_kex_1: bool = true in
                            {750}new rand24_2[]: bytes24;
                            {751}new rand8_2[]: bytes8;
                            {752}let cr_11: bytes32 = B32(rand24_2,rand8_2) in
                            {753}new s_10[]: seed;
                            {754}let gx_4: element = dh_pub(@7_tls_g,dh_k(s_10)) in
                            {755}let v_88: bitstring = (dh_k(s_10),gx_4) in
                            {756}let v_89: bool = success?(1-proj-2-tuple(v_88)) in
                            {757}let gx_5: element = (if v_89 then 2-proj-2-tuple(v_88) else caught-fail) in
                            {758}let x_34: bitstring = (if v_89 then 1-proj-2-tuple(v_88) else caught-fail) in
                            {759}let kex_1: kex_alg = (if v_89 then (if send_kex_1 then DHE_kex(@7_tls_g,gx_5) else DHE_group(@7_tls_g)) else caught-fail) in
                            {760}let (kex_ext_2: keyShareExt,kex_data_2: bitstring) = (if v_89 then (client_kex_ext(kex_1),(x_34,@7_tls_g)) else fail-any) in
                            {761}let ech_ext_3: echExt = empty_ech_ext in
                            {762}let extra_3: extraExt = empty_extra_ext in
                            {763}if @7_use_psk then
                            (
                                {764}let (psk_12: preSharedKey,id_6: identityPsk,old_es_1: bitstring,is_safe_1: bool) = psk_data_1 in
                                (
                                    {765}let offer_4: params = nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_2,SNI(s_dom_12),ech_ext_3,extra_3,trunc_client_psk_ext(id_6)) in
                                    {766}let cur_log'_3: bitstring = (cur_log3_2,CH(cr_11,offer_4)) in
                                    {767}let s_11: bitstring = zero in
                                    {768}let k_7: bitstring = catch-fail(psk2b(psk_12)) in
                                    {769}let v_90: bool = not-caught-fail(k_7) in
                                    {770}let early_secret_6: bitstring = catch-fail((if v_90 then hmac(@7_tls_h,s_11,k_7) else fail-any)) in
                                    {771}let v_91: bool = not-caught-fail(early_secret_6) in
                                    {772}let l_33: label = (if v_91 then tls13_ext_res_binder else caught-fail) in
                                    {773}let m_6: bitstring = (if v_91 then zero else caught-fail) in
                                    {774}let h_32: bitstring = (if v_91 then catch-fail(hash(@7_tls_h,m_6)) else caught-fail) in
                                    {775}let v_92: bool = not-caught-fail(h_32) in
                                    {776}let x_35: bitstring = (if v_92 then (l_33,h_32) else caught-fail) in
                                    {777}let binder_key_4: bitstring = (if v_91 then catch-fail((if v_92 then hmac(@7_tls_h,early_secret_6,x_35) else fail-any)) else caught-fail) in
                                    {778}let v_93: bool = not-caught-fail(binder_key_4) in
                                    {779}let v_94: bitstring = catch-fail((if v_91 then (if v_93 then (early_secret_6,binder_key_4) else fail-any) else fail-any)) in
                                    {780}let v_95: bool = (not-caught-fail(v_94) && success?(1-proj-2-tuple(v_94))) in
                                    {781}let kb_4: mac_key = (if v_95 then 2-proj-2-tuple(v_94) else caught-fail) in
                                    {782}let es_4: bitstring = (if v_95 then 1-proj-2-tuple(v_94) else caught-fail) in
                                    {783}let binders_2: bitstring = (if v_95 then catch-fail(hmac(@7_tls_h,kb_4,cur_log'_3)) else caught-fail) in
                                    {784}let v_96: bool = not-caught-fail(binders_2) in
                                    {785}let v_97: bitstring = catch-fail((if v_95 then (if v_96 then (client_psk_ext(id_6,binders_2),(psk_12,id_6,es_4,is_safe_1)) else fail-any) else fail-any)) in
                                    {786}let v_98: bool = (not-caught-fail(v_97) && success?(1-proj-2-tuple(v_97))) in
                                    {787}let psk_data_2: bitstring = (if v_98 then 2-proj-2-tuple(v_97) else caught-fail) in
                                    {788}let psk_ext_3: preSharedKeyExt = (if v_98 then 1-proj-2-tuple(v_97) else caught-fail) in
                                    {789}let offer_5: params = (if v_98 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_2,SNI(s_dom_12),empty_ech_ext,empty_extra_ext,psk_ext_3) else caught-fail) in
                                    {790}let (client_hello': msg,cr': bytes32,kex_data': bitstring,psk_data': bitstring) = (if v_98 then (CH(cr_11,offer_5),cr_11,kex_data_2,psk_data_2) else fail-any) in
                                    {791}event ClientOffersAead(cr',@7_tls_a);
                                    {792}event ClientOffersHash(cr',@7_tls_h);
                                    {793}event ClientOffersGroup(cr',@7_tls_g);
                                    {794}out(io, client_hello');
                                    {795}let cur_log4: bitstring = (cur_log3_2,client_hello') in
                                    {796}in(io, server_hello': msg);
                                    {797}let SH(sr': bytes32,mode': params) = server_hello' in
                                    (
                                        {798}if (sr' = B32(HRR24,HRR8)) then
                                            {799}out(io, unexpected_message)
                                        else
                                            {800}let (x_36: bitstring,g: group) = kex_data' in
                                            {801}let (psk_offer: preSharedKey,id_offer: identityPsk,es_offer: bitstring,is_safe_offer: bool) = psk_data' in
                                            {802}event Client_PSKOffer(@7_id_client,psk_offer,id_offer,is_safe_offer);
                                            {803}event Client_Rand_client(@7_id_client,cr');
                                            {804}event Client_DH_client(@7_id_client,dh_pub(g,x_36));
                                            {805}event Client_server_domain(@7_id_client,s_dom_12);
                                            {806}let SH(sr_9: bytes32,mode_1: params) = server_hello' in
                                            {807}event Client_Rand_server(@7_id_client,sr_9);
                                            {808}let nego(=TLS13,=@7_tls_h,=@7_tls_a,server_kex_ext(DHE_kex(=g,gy_1: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_4: preSharedKeyExt) = mode_1 in
                                            (
                                                {809}let cur_log2_5: bitstring = (cur_log4,server_hello') in
                                                {810}event Client_DH_server(@7_id_client,gy_1);
                                                {811}let v_99: bool = (psk_ext_4 = empty_psk_ext) in
                                                {812}let psk_13: preSharedKey = (if v_99 then NoPsk else caught-fail) in
                                                {813}let s_12: bitstring = (if v_99 then zero else caught-fail) in
                                                {814}let k_8: bitstring = (if v_99 then catch-fail(psk2b(psk_13)) else caught-fail) in
                                                {815}let v_100: bool = not-caught-fail(k_8) in
                                                {816}let early_secret_7: bitstring = (if v_99 then catch-fail((if v_100 then hmac(@7_tls_h,s_12,k_8) else fail-any)) else caught-fail) in
                                                {817}let v_101: bool = not-caught-fail(early_secret_7) in
                                                {818}let l_34: label = (if v_101 then tls13_ext_res_binder else caught-fail) in
                                                {819}let m_7: bitstring = (if v_101 then zero else caught-fail) in
                                                {820}let h_33: bitstring = (if v_101 then catch-fail(hash(@7_tls_h,m_7)) else caught-fail) in
                                                {821}let v_102: bool = not-caught-fail(h_33) in
                                                {822}let x_37: bitstring = (if v_102 then (l_34,h_33) else caught-fail) in
                                                {823}let binder_key_5: bitstring = (if v_101 then catch-fail((if v_102 then hmac(@7_tls_h,early_secret_7,x_37) else fail-any)) else caught-fail) in
                                                {824}let v_103: bool = not-caught-fail(binder_key_5) in
                                                {825}let v_104: bitstring = (if v_99 then catch-fail((if v_101 then (if v_103 then (early_secret_7,binder_key_5) else fail-any) else fail-any)) else caught-fail) in
                                                {826}let v_105: bool = (not-caught-fail(v_104) && success?(1-proj-2-tuple(v_104))) in
                                                {827}let kb_5: mac_key = (if v_105 then 2-proj-2-tuple(v_104) else caught-fail) in
                                                {828}let es_5: bitstring = (if v_105 then 1-proj-2-tuple(v_104) else caught-fail) in
                                                {829}let v_106: bitstring = (if not(v_99) then catch-fail(psk_data') else caught-fail) in
                                                {830}let v_107: bool = (not-caught-fail(v_106) && success?(1-proj-4-tuple(v_106))) in
                                                {831}let is_safe_2: bool = (if v_107 then 4-proj-4-tuple(v_106) else caught-fail) in
                                                {832}let es_6: bitstring = (if v_107 then 3-proj-4-tuple(v_106) else caught-fail) in
                                                {833}let id_7: identityPsk = (if v_107 then 2-proj-4-tuple(v_106) else caught-fail) in
                                                {834}let psk_14: preSharedKey = (if v_107 then 1-proj-4-tuple(v_106) else caught-fail) in
                                                {835}let (psk_15: preSharedKey,early_secret_8: bitstring,valid: bool,safe_psk_4: bool) = (if v_99 then (if v_105 then (NoPsk,es_5,true,false) else fail-any) else (if v_107 then (psk_14,es_6,((psk_14 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_4)),is_safe_2) else fail-any)) in
                                                {836}event Client_PSKChoosen(@7_id_client,psk_15,safe_psk_4);
                                                {837}if valid then
                                                (
                                                    {838}let gxy_1: element = catch-fail(dh_decap_fun(g,gy_1,x_36)) in
                                                    {839}let v_108: bool = not-caught-fail(gxy_1) in
                                                    {840}new s_13[]: seed;
                                                    {841}let gxy_2: element = (if v_108 then gxy_1 else dh_f(s_13)) in
                                                    {842}event Client_DH_gxy(@7_id_client,gxy_2);
                                                    {843}let l_35: label = tls13_derived in
                                                    {844}let m_8: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                    {845}let v_109: bool = not-caught-fail(m_8) in
                                                    {846}let h_34: bitstring = (if v_109 then catch-fail(hash(@7_tls_h,m_8)) else caught-fail) in
                                                    {847}let v_110: bool = not-caught-fail(h_34) in
                                                    {848}let x_38: bitstring = (if v_110 then (l_35,h_34) else caught-fail) in
                                                    {849}let extra_4: bitstring = catch-fail((if v_109 then (if v_110 then hmac(@7_tls_h,early_secret_8,x_38) else fail-any) else fail-any)) in
                                                    {850}let v_111: bool = not-caught-fail(extra_4) in
                                                    {851}let handshake_secret_1: bitstring = (if v_111 then hmac(@7_tls_h,extra_4,gxy_2) else fail-any) in
                                                    {852}let l_36: label = tls13_derived in
                                                    {853}let m_9: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                    {854}let v_112: bool = not-caught-fail(m_9) in
                                                    {855}let h_35: bitstring = (if v_112 then catch-fail(hash(@7_tls_h,m_9)) else caught-fail) in
                                                    {856}let v_113: bool = not-caught-fail(h_35) in
                                                    {857}let x_39: bitstring = (if v_113 then (l_36,h_35) else caught-fail) in
                                                    {858}let extra_5: bitstring = catch-fail((if v_112 then (if v_113 then hmac(@7_tls_h,handshake_secret_1,x_39) else fail-any) else fail-any)) in
                                                    {859}let v_114: bool = not-caught-fail(extra_5) in
                                                    {860}let k_9: bitstring = (if v_114 then zero else caught-fail) in
                                                    {861}let master_secret_9: bitstring = (if v_114 then catch-fail(hmac(@7_tls_h,handshake_secret_1,k_9)) else caught-fail) in
                                                    {862}let v_115: bool = not-caught-fail(master_secret_9) in
                                                    {863}let l_37: label = (if v_115 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {864}let h_36: bitstring = (if v_115 then catch-fail(hash(@7_tls_h,cur_log2_5)) else caught-fail) in
                                                    {865}let v_116: bool = not-caught-fail(h_36) in
                                                    {866}let x_40: bitstring = (if v_116 then (l_37,h_36) else caught-fail) in
                                                    {867}let client_hts_1: bitstring = (if v_115 then catch-fail((if v_116 then hmac(@7_tls_h,handshake_secret_1,x_40) else fail-any)) else caught-fail) in
                                                    {868}let v_117: bool = not-caught-fail(client_hts_1) in
                                                    {869}let l_38: label = (if v_117 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {870}let h_37: bitstring = (if v_117 then catch-fail(hash(@7_tls_h,cur_log2_5)) else caught-fail) in
                                                    {871}let v_118: bool = not-caught-fail(h_37) in
                                                    {872}let x_41: bitstring = (if v_118 then (l_38,h_37) else caught-fail) in
                                                    {873}let server_hts_1: bitstring = (if v_117 then catch-fail((if v_118 then hmac(@7_tls_h,handshake_secret_1,x_41) else fail-any)) else caught-fail) in
                                                    {874}let v_119: bool = not-caught-fail(server_hts_1) in
                                                    {875}let l_39: label = (if v_119 then tls13_key else caught-fail) in
                                                    {876}let h_38: bitstring = (if v_119 then zero else caught-fail) in
                                                    {877}let x_42: bitstring = (if v_119 then (l_39,h_38) else caught-fail) in
                                                    {878}let client_wkh_1: bitstring = (if v_119 then catch-fail(hmac(@7_tls_h,client_hts_1,x_42)) else caught-fail) in
                                                    {879}let v_120: bool = not-caught-fail(client_wkh_1) in
                                                    {880}let l_40: label = (if v_120 then tls13_key else caught-fail) in
                                                    {881}let h_39: bitstring = (if v_120 then zero else caught-fail) in
                                                    {882}let x_43: bitstring = (if v_120 then (l_40,h_39) else caught-fail) in
                                                    {883}let server_wkh_1: bitstring = (if v_120 then catch-fail(hmac(@7_tls_h,server_hts_1,x_43)) else caught-fail) in
                                                    {884}let v_121: bool = not-caught-fail(server_wkh_1) in
                                                    {885}let l_41: label = (if v_121 then tls13_finished else caught-fail) in
                                                    {886}let h_40: bitstring = (if v_121 then zero else caught-fail) in
                                                    {887}let x_44: bitstring = (if v_121 then (l_41,h_40) else caught-fail) in
                                                    {888}let client_fk_1: bitstring = (if v_121 then catch-fail(hmac(@7_tls_h,client_hts_1,x_44)) else caught-fail) in
                                                    {889}let v_122: bool = not-caught-fail(client_fk_1) in
                                                    {890}let l_42: label = (if v_122 then tls13_finished else caught-fail) in
                                                    {891}let h_41: bitstring = (if v_122 then zero else caught-fail) in
                                                    {892}let x_45: bitstring = (if v_122 then (l_42,h_41) else caught-fail) in
                                                    {893}let server_fk_1: bitstring = (if v_122 then catch-fail(hmac(@7_tls_h,server_hts_1,x_45)) else caught-fail) in
                                                    {894}let v_123: bool = not-caught-fail(server_fk_1) in
                                                    {895}let (master_secret_10: bitstring,chk_8: aead_key,shk_7: aead_key,cfin_8: mac_key,sfin_7: mac_key) = (if v_114 then (if v_115 then (if v_117 then (if v_119 then (if v_120 then (if v_121 then (if v_122 then (if v_123 then (master_secret_9,client_wkh_1,server_wkh_1,client_fk_1,server_fk_1) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {896}event Client_chk(@7_id_client,chk_8);
                                                    {897}event Client_shk(@7_id_client,shk_7);
                                                    {898}event Client_cfin(@7_id_client,cfin_8);
                                                    {899}event Client_sfin(@7_id_client,sfin_7);
                                                    {900}in(io, enc_ee_msg: bitstring);
                                                    {901}let ee_msg_1: msg = aead_dec(@7_tls_a,shk_7,0,zero,enc_ee_msg) in
                                                    {902}let EE(ech_ee: echExt,extra_ee: extraExt) = ee_msg_1 in
                                                    {903}let cur_log2_6: bitstring = (cur_log2_5,ee_msg_1) in
                                                    {904}out(ch_client_after_EE, (@7_id_client,ArgsClientAfterEE(cr',sr_9,@7_tls_h,@7_tls_a,c_dom_5,s_dom_12,psk_15,safe_psk_4,@7_comp_psk,master_secret_10,chk_8,0,shk_7,1,cfin_8,sfin_7,cur_log2_6)))
                                                )
                                                else
                                                    {905}out(io, illegal_parameter)
                                            )
                                            else
                                                {906}out(io, illegal_parameter)
                                    )
                                    else
                                        {907}out(io, unexpected_message)
                                )
                                else
                                    {1060}get pre_shared_keys(c_dom'_2: domain,=s_dom_12,=@7_tls_h,id_8: identityPsk,psk_16: preSharedKey,idP_4: idProc,is_safe_3: bool) in
                                    {908}event Selected_one_time_used_psk(@7_id_client,psk_16,is_safe_3);
                                    {909}event Selected_psk(c_dom_5,c_dom'_2,idP_4,is_safe_3);
                                    {910}event Selected_psk_no_missmatch(@7_id_client,s_dom_12,@7_tls_h,psk_16,id_8);
                                    {911}event Selected_psk_with_ID(c_dom_5,c_dom'_2,id_8,idP_4,is_safe_3);
                                    {912}let v_124: bitstring = (id_8,psk_16,is_safe_3) in
                                    {913}let v_125: bool = success?(1-proj-3-tuple(v_124)) in
                                    {914}let is_safe_4: bool = (if v_125 then 3-proj-3-tuple(v_124) else caught-fail) in
                                    {915}let psk_17: preSharedKey = (if v_125 then 2-proj-3-tuple(v_124) else caught-fail) in
                                    {916}let id_9: identityPsk = (if v_125 then 1-proj-3-tuple(v_124) else caught-fail) in
                                    {917}let offer_6: params = (if v_125 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_2,SNI(s_dom_12),ech_ext_3,extra_3,trunc_client_psk_ext(id_9)) else caught-fail) in
                                    {918}let cur_log'_4: bitstring = (if v_125 then (cur_log3_2,CH(cr_11,offer_6)) else caught-fail) in
                                    {919}let s_14: bitstring = (if v_125 then zero else caught-fail) in
                                    {920}let k_10: bitstring = (if v_125 then catch-fail(psk2b(psk_17)) else caught-fail) in
                                    {921}let v_126: bool = not-caught-fail(k_10) in
                                    {922}let early_secret_9: bitstring = (if v_125 then catch-fail((if v_126 then hmac(@7_tls_h,s_14,k_10) else fail-any)) else caught-fail) in
                                    {923}let v_127: bool = not-caught-fail(early_secret_9) in
                                    {924}let l_43: label = (if v_127 then tls13_ext_res_binder else caught-fail) in
                                    {925}let m_10: bitstring = (if v_127 then zero else caught-fail) in
                                    {926}let h_42: bitstring = (if v_127 then catch-fail(hash(@7_tls_h,m_10)) else caught-fail) in
                                    {927}let v_128: bool = not-caught-fail(h_42) in
                                    {928}let x_46: bitstring = (if v_128 then (l_43,h_42) else caught-fail) in
                                    {929}let binder_key_6: bitstring = (if v_127 then catch-fail((if v_128 then hmac(@7_tls_h,early_secret_9,x_46) else fail-any)) else caught-fail) in
                                    {930}let v_129: bool = not-caught-fail(binder_key_6) in
                                    {931}let v_130: bitstring = (if v_125 then catch-fail((if v_127 then (if v_129 then (early_secret_9,binder_key_6) else fail-any) else fail-any)) else caught-fail) in
                                    {932}let v_131: bool = (not-caught-fail(v_130) && success?(1-proj-2-tuple(v_130))) in
                                    {933}let kb_6: mac_key = (if v_131 then 2-proj-2-tuple(v_130) else caught-fail) in
                                    {934}let es_7: bitstring = (if v_131 then 1-proj-2-tuple(v_130) else caught-fail) in
                                    {935}let binders_3: bitstring = (if v_131 then catch-fail(hmac(@7_tls_h,kb_6,cur_log'_4)) else caught-fail) in
                                    {936}let v_132: bool = not-caught-fail(binders_3) in
                                    {937}let v_133: bitstring = catch-fail((if v_125 then (if v_131 then (if v_132 then (client_psk_ext(id_9,binders_3),(psk_17,id_9,es_7,is_safe_4)) else fail-any) else fail-any) else fail-any)) in
                                    {938}let v_134: bool = (not-caught-fail(v_133) && success?(1-proj-2-tuple(v_133))) in
                                    {939}let psk_data_3: bitstring = (if v_134 then 2-proj-2-tuple(v_133) else caught-fail) in
                                    {940}let psk_ext_5: preSharedKeyExt = (if v_134 then 1-proj-2-tuple(v_133) else caught-fail) in
                                    {941}let offer_7: params = (if v_134 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_2,SNI(s_dom_12),empty_ech_ext,empty_extra_ext,psk_ext_5) else caught-fail) in
                                    {942}let (client_hello'_1: msg,cr'_1: bytes32,kex_data'_1: bitstring,psk_data'_1: bitstring) = (if v_134 then (CH(cr_11,offer_7),cr_11,kex_data_2,psk_data_3) else fail-any) in
                                    {943}event ClientOffersAead(cr'_1,@7_tls_a);
                                    {944}event ClientOffersHash(cr'_1,@7_tls_h);
                                    {945}event ClientOffersGroup(cr'_1,@7_tls_g);
                                    {946}out(io, client_hello'_1);
                                    {947}let cur_log4_1: bitstring = (cur_log3_2,client_hello'_1) in
                                    {948}in(io, server_hello'_1: msg);
                                    {949}let SH(sr'_1: bytes32,mode'_1: params) = server_hello'_1 in
                                    (
                                        {950}if (sr'_1 = B32(HRR24,HRR8)) then
                                            {951}out(io, unexpected_message)
                                        else
                                            {952}let (x_47: bitstring,g_1: group) = kex_data'_1 in
                                            {953}let (psk_offer_1: preSharedKey,id_offer_1: identityPsk,es_offer_1: bitstring,is_safe_offer_1: bool) = psk_data'_1 in
                                            {954}event Client_PSKOffer(@7_id_client,psk_offer_1,id_offer_1,is_safe_offer_1);
                                            {955}event Client_Rand_client(@7_id_client,cr'_1);
                                            {956}event Client_DH_client(@7_id_client,dh_pub(g_1,x_47));
                                            {957}event Client_server_domain(@7_id_client,s_dom_12);
                                            {958}let SH(sr_10: bytes32,mode_2: params) = server_hello'_1 in
                                            {959}event Client_Rand_server(@7_id_client,sr_10);
                                            {960}let nego(=TLS13,=@7_tls_h,=@7_tls_a,server_kex_ext(DHE_kex(=g_1,gy_2: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_6: preSharedKeyExt) = mode_2 in
                                            (
                                                {961}let cur_log2_7: bitstring = (cur_log4_1,server_hello'_1) in
                                                {962}event Client_DH_server(@7_id_client,gy_2);
                                                {963}let v_135: bool = (psk_ext_6 = empty_psk_ext) in
                                                {964}let psk_18: preSharedKey = (if v_135 then NoPsk else caught-fail) in
                                                {965}let s_15: bitstring = (if v_135 then zero else caught-fail) in
                                                {966}let k_11: bitstring = (if v_135 then catch-fail(psk2b(psk_18)) else caught-fail) in
                                                {967}let v_136: bool = not-caught-fail(k_11) in
                                                {968}let early_secret_10: bitstring = (if v_135 then catch-fail((if v_136 then hmac(@7_tls_h,s_15,k_11) else fail-any)) else caught-fail) in
                                                {969}let v_137: bool = not-caught-fail(early_secret_10) in
                                                {970}let l_44: label = (if v_137 then tls13_ext_res_binder else caught-fail) in
                                                {971}let m_11: bitstring = (if v_137 then zero else caught-fail) in
                                                {972}let h_43: bitstring = (if v_137 then catch-fail(hash(@7_tls_h,m_11)) else caught-fail) in
                                                {973}let v_138: bool = not-caught-fail(h_43) in
                                                {974}let x_48: bitstring = (if v_138 then (l_44,h_43) else caught-fail) in
                                                {975}let binder_key_7: bitstring = (if v_137 then catch-fail((if v_138 then hmac(@7_tls_h,early_secret_10,x_48) else fail-any)) else caught-fail) in
                                                {976}let v_139: bool = not-caught-fail(binder_key_7) in
                                                {977}let v_140: bitstring = (if v_135 then catch-fail((if v_137 then (if v_139 then (early_secret_10,binder_key_7) else fail-any) else fail-any)) else caught-fail) in
                                                {978}let v_141: bool = (not-caught-fail(v_140) && success?(1-proj-2-tuple(v_140))) in
                                                {979}let kb_7: mac_key = (if v_141 then 2-proj-2-tuple(v_140) else caught-fail) in
                                                {980}let es_8: bitstring = (if v_141 then 1-proj-2-tuple(v_140) else caught-fail) in
                                                {981}let v_142: bitstring = (if not(v_135) then catch-fail(psk_data'_1) else caught-fail) in
                                                {982}let v_143: bool = (not-caught-fail(v_142) && success?(1-proj-4-tuple(v_142))) in
                                                {983}let is_safe_5: bool = (if v_143 then 4-proj-4-tuple(v_142) else caught-fail) in
                                                {984}let es_9: bitstring = (if v_143 then 3-proj-4-tuple(v_142) else caught-fail) in
                                                {985}let id_10: identityPsk = (if v_143 then 2-proj-4-tuple(v_142) else caught-fail) in
                                                {986}let psk_19: preSharedKey = (if v_143 then 1-proj-4-tuple(v_142) else caught-fail) in
                                                {987}let (psk_20: preSharedKey,early_secret_11: bitstring,valid_1: bool,safe_psk_5: bool) = (if v_135 then (if v_141 then (NoPsk,es_8,true,false) else fail-any) else (if v_143 then (psk_19,es_9,((psk_19 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_6)),is_safe_5) else fail-any)) in
                                                {988}event Client_PSKChoosen(@7_id_client,psk_20,safe_psk_5);
                                                {989}if valid_1 then
                                                (
                                                    {990}let gxy_3: element = catch-fail(dh_decap_fun(g_1,gy_2,x_47)) in
                                                    {991}let v_144: bool = not-caught-fail(gxy_3) in
                                                    {992}new s_16[]: seed;
                                                    {993}let gxy_4: element = (if v_144 then gxy_3 else dh_f(s_16)) in
                                                    {994}event Client_DH_gxy(@7_id_client,gxy_4);
                                                    {995}let l_45: label = tls13_derived in
                                                    {996}let m_12: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                    {997}let v_145: bool = not-caught-fail(m_12) in
                                                    {998}let h_44: bitstring = (if v_145 then catch-fail(hash(@7_tls_h,m_12)) else caught-fail) in
                                                    {999}let v_146: bool = not-caught-fail(h_44) in
                                                    {1000}let x_49: bitstring = (if v_146 then (l_45,h_44) else caught-fail) in
                                                    {1001}let extra_6: bitstring = catch-fail((if v_145 then (if v_146 then hmac(@7_tls_h,early_secret_11,x_49) else fail-any) else fail-any)) in
                                                    {1002}let v_147: bool = not-caught-fail(extra_6) in
                                                    {1003}let handshake_secret_2: bitstring = (if v_147 then hmac(@7_tls_h,extra_6,gxy_4) else fail-any) in
                                                    {1004}let l_46: label = tls13_derived in
                                                    {1005}let m_13: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                    {1006}let v_148: bool = not-caught-fail(m_13) in
                                                    {1007}let h_45: bitstring = (if v_148 then catch-fail(hash(@7_tls_h,m_13)) else caught-fail) in
                                                    {1008}let v_149: bool = not-caught-fail(h_45) in
                                                    {1009}let x_50: bitstring = (if v_149 then (l_46,h_45) else caught-fail) in
                                                    {1010}let extra_7: bitstring = catch-fail((if v_148 then (if v_149 then hmac(@7_tls_h,handshake_secret_2,x_50) else fail-any) else fail-any)) in
                                                    {1011}let v_150: bool = not-caught-fail(extra_7) in
                                                    {1012}let k_12: bitstring = (if v_150 then zero else caught-fail) in
                                                    {1013}let master_secret_11: bitstring = (if v_150 then catch-fail(hmac(@7_tls_h,handshake_secret_2,k_12)) else caught-fail) in
                                                    {1014}let v_151: bool = not-caught-fail(master_secret_11) in
                                                    {1015}let l_47: label = (if v_151 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {1016}let h_46: bitstring = (if v_151 then catch-fail(hash(@7_tls_h,cur_log2_7)) else caught-fail) in
                                                    {1017}let v_152: bool = not-caught-fail(h_46) in
                                                    {1018}let x_51: bitstring = (if v_152 then (l_47,h_46) else caught-fail) in
                                                    {1019}let client_hts_2: bitstring = (if v_151 then catch-fail((if v_152 then hmac(@7_tls_h,handshake_secret_2,x_51) else fail-any)) else caught-fail) in
                                                    {1020}let v_153: bool = not-caught-fail(client_hts_2) in
                                                    {1021}let l_48: label = (if v_153 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {1022}let h_47: bitstring = (if v_153 then catch-fail(hash(@7_tls_h,cur_log2_7)) else caught-fail) in
                                                    {1023}let v_154: bool = not-caught-fail(h_47) in
                                                    {1024}let x_52: bitstring = (if v_154 then (l_48,h_47) else caught-fail) in
                                                    {1025}let server_hts_2: bitstring = (if v_153 then catch-fail((if v_154 then hmac(@7_tls_h,handshake_secret_2,x_52) else fail-any)) else caught-fail) in
                                                    {1026}let v_155: bool = not-caught-fail(server_hts_2) in
                                                    {1027}let l_49: label = (if v_155 then tls13_key else caught-fail) in
                                                    {1028}let h_48: bitstring = (if v_155 then zero else caught-fail) in
                                                    {1029}let x_53: bitstring = (if v_155 then (l_49,h_48) else caught-fail) in
                                                    {1030}let client_wkh_2: bitstring = (if v_155 then catch-fail(hmac(@7_tls_h,client_hts_2,x_53)) else caught-fail) in
                                                    {1031}let v_156: bool = not-caught-fail(client_wkh_2) in
                                                    {1032}let l_50: label = (if v_156 then tls13_key else caught-fail) in
                                                    {1033}let h_49: bitstring = (if v_156 then zero else caught-fail) in
                                                    {1034}let x_54: bitstring = (if v_156 then (l_50,h_49) else caught-fail) in
                                                    {1035}let server_wkh_2: bitstring = (if v_156 then catch-fail(hmac(@7_tls_h,server_hts_2,x_54)) else caught-fail) in
                                                    {1036}let v_157: bool = not-caught-fail(server_wkh_2) in
                                                    {1037}let l_51: label = (if v_157 then tls13_finished else caught-fail) in
                                                    {1038}let h_50: bitstring = (if v_157 then zero else caught-fail) in
                                                    {1039}let x_55: bitstring = (if v_157 then (l_51,h_50) else caught-fail) in
                                                    {1040}let client_fk_2: bitstring = (if v_157 then catch-fail(hmac(@7_tls_h,client_hts_2,x_55)) else caught-fail) in
                                                    {1041}let v_158: bool = not-caught-fail(client_fk_2) in
                                                    {1042}let l_52: label = (if v_158 then tls13_finished else caught-fail) in
                                                    {1043}let h_51: bitstring = (if v_158 then zero else caught-fail) in
                                                    {1044}let x_56: bitstring = (if v_158 then (l_52,h_51) else caught-fail) in
                                                    {1045}let server_fk_2: bitstring = (if v_158 then catch-fail(hmac(@7_tls_h,server_hts_2,x_56)) else caught-fail) in
                                                    {1046}let v_159: bool = not-caught-fail(server_fk_2) in
                                                    {1047}let (master_secret_12: bitstring,chk_9: aead_key,shk_8: aead_key,cfin_9: mac_key,sfin_8: mac_key) = (if v_150 then (if v_151 then (if v_153 then (if v_155 then (if v_156 then (if v_157 then (if v_158 then (if v_159 then (master_secret_11,client_wkh_2,server_wkh_2,client_fk_2,server_fk_2) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {1048}event Client_chk(@7_id_client,chk_9);
                                                    {1049}event Client_shk(@7_id_client,shk_8);
                                                    {1050}event Client_cfin(@7_id_client,cfin_9);
                                                    {1051}event Client_sfin(@7_id_client,sfin_8);
                                                    {1052}in(io, enc_ee_msg_1: bitstring);
                                                    {1053}let ee_msg_2: msg = aead_dec(@7_tls_a,shk_8,0,zero,enc_ee_msg_1) in
                                                    {1054}let EE(ech_ee_1: echExt,extra_ee_1: extraExt) = ee_msg_2 in
                                                    {1055}let cur_log2_8: bitstring = (cur_log2_7,ee_msg_2) in
                                                    {1056}out(ch_client_after_EE, (@7_id_client,ArgsClientAfterEE(cr'_1,sr_10,@7_tls_h,@7_tls_a,c_dom_5,s_dom_12,psk_20,safe_psk_5,@7_comp_psk,master_secret_12,chk_9,0,shk_8,1,cfin_9,sfin_8,cur_log2_8)))
                                                )
                                                else
                                                    {1057}out(io, illegal_parameter)
                                            )
                                            else
                                                {1058}out(io, illegal_parameter)
                                    )
                                    else
                                        {1059}out(io, unexpected_message)
                            )
                            else
                                {1061}let psk_21: preSharedKey = NoPsk in
                                {1062}let s_17: bitstring = zero in
                                {1063}let k_13: bitstring = catch-fail(psk2b(psk_21)) in
                                {1064}let v_160: bool = not-caught-fail(k_13) in
                                {1065}let early_secret_12: bitstring = catch-fail((if v_160 then hmac(@7_tls_h,s_17,k_13) else fail-any)) in
                                {1066}let v_161: bool = not-caught-fail(early_secret_12) in
                                {1067}let l_53: label = (if v_161 then tls13_ext_res_binder else caught-fail) in
                                {1068}let m_14: bitstring = (if v_161 then zero else caught-fail) in
                                {1069}let h_52: bitstring = (if v_161 then catch-fail(hash(@7_tls_h,m_14)) else caught-fail) in
                                {1070}let v_162: bool = not-caught-fail(h_52) in
                                {1071}let x_57: bitstring = (if v_162 then (l_53,h_52) else caught-fail) in
                                {1072}let binder_key_8: bitstring = (if v_161 then catch-fail((if v_162 then hmac(@7_tls_h,early_secret_12,x_57) else fail-any)) else caught-fail) in
                                {1073}let v_163: bool = not-caught-fail(binder_key_8) in
                                {1074}let v_164: bitstring = catch-fail((if v_161 then (if v_163 then (early_secret_12,binder_key_8) else fail-any) else fail-any)) in
                                {1075}let v_165: bool = (not-caught-fail(v_164) && success?(1-proj-2-tuple(v_164))) in
                                {1076}let kb_8: mac_key = (if v_165 then 2-proj-2-tuple(v_164) else caught-fail) in
                                {1077}let es_10: bitstring = (if v_165 then 1-proj-2-tuple(v_164) else caught-fail) in
                                {1078}let v_166: bitstring = catch-fail((if v_165 then (empty_psk_ext,(NoPsk,zero,es_10,false)) else fail-any)) in
                                {1079}let v_167: bool = (not-caught-fail(v_166) && success?(1-proj-2-tuple(v_166))) in
                                {1080}let psk_data_4: bitstring = (if v_167 then 2-proj-2-tuple(v_166) else caught-fail) in
                                {1081}let psk_ext_7: preSharedKeyExt = (if v_167 then 1-proj-2-tuple(v_166) else caught-fail) in
                                {1082}let offer_8: params = (if v_167 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_2,SNI(s_dom_12),empty_ech_ext,empty_extra_ext,psk_ext_7) else caught-fail) in
                                {1083}let (client_hello'_2: msg,cr'_2: bytes32,kex_data'_2: bitstring,psk_data'_2: bitstring) = (if v_167 then (CH(cr_11,offer_8),cr_11,kex_data_2,psk_data_4) else fail-any) in
                                {1084}event ClientOffersAead(cr'_2,@7_tls_a);
                                {1085}event ClientOffersHash(cr'_2,@7_tls_h);
                                {1086}event ClientOffersGroup(cr'_2,@7_tls_g);
                                {1087}out(io, client_hello'_2);
                                {1088}let cur_log4_2: bitstring = (cur_log3_2,client_hello'_2) in
                                {1089}in(io, server_hello'_2: msg);
                                {1090}let SH(sr'_2: bytes32,mode'_2: params) = server_hello'_2 in
                                (
                                    {1091}if (sr'_2 = B32(HRR24,HRR8)) then
                                        {1092}out(io, unexpected_message)
                                    else
                                        {1093}let (x_58: bitstring,g_2: group) = kex_data'_2 in
                                        {1094}let (psk_offer_2: preSharedKey,id_offer_2: identityPsk,es_offer_2: bitstring,is_safe_offer_2: bool) = psk_data'_2 in
                                        {1095}event Client_PSKOffer(@7_id_client,psk_offer_2,id_offer_2,is_safe_offer_2);
                                        {1096}event Client_Rand_client(@7_id_client,cr'_2);
                                        {1097}event Client_DH_client(@7_id_client,dh_pub(g_2,x_58));
                                        {1098}event Client_server_domain(@7_id_client,s_dom_12);
                                        {1099}let SH(sr_11: bytes32,mode_3: params) = server_hello'_2 in
                                        {1100}event Client_Rand_server(@7_id_client,sr_11);
                                        {1101}let nego(=TLS13,=@7_tls_h,=@7_tls_a,server_kex_ext(DHE_kex(=g_2,gy_3: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_8: preSharedKeyExt) = mode_3 in
                                        (
                                            {1102}let cur_log2_9: bitstring = (cur_log4_2,server_hello'_2) in
                                            {1103}event Client_DH_server(@7_id_client,gy_3);
                                            {1104}let v_168: bool = (psk_ext_8 = empty_psk_ext) in
                                            {1105}let psk_22: preSharedKey = (if v_168 then NoPsk else caught-fail) in
                                            {1106}let s_18: bitstring = (if v_168 then zero else caught-fail) in
                                            {1107}let k_14: bitstring = (if v_168 then catch-fail(psk2b(psk_22)) else caught-fail) in
                                            {1108}let v_169: bool = not-caught-fail(k_14) in
                                            {1109}let early_secret_13: bitstring = (if v_168 then catch-fail((if v_169 then hmac(@7_tls_h,s_18,k_14) else fail-any)) else caught-fail) in
                                            {1110}let v_170: bool = not-caught-fail(early_secret_13) in
                                            {1111}let l_54: label = (if v_170 then tls13_ext_res_binder else caught-fail) in
                                            {1112}let m_15: bitstring = (if v_170 then zero else caught-fail) in
                                            {1113}let h_53: bitstring = (if v_170 then catch-fail(hash(@7_tls_h,m_15)) else caught-fail) in
                                            {1114}let v_171: bool = not-caught-fail(h_53) in
                                            {1115}let x_59: bitstring = (if v_171 then (l_54,h_53) else caught-fail) in
                                            {1116}let binder_key_9: bitstring = (if v_170 then catch-fail((if v_171 then hmac(@7_tls_h,early_secret_13,x_59) else fail-any)) else caught-fail) in
                                            {1117}let v_172: bool = not-caught-fail(binder_key_9) in
                                            {1118}let v_173: bitstring = (if v_168 then catch-fail((if v_170 then (if v_172 then (early_secret_13,binder_key_9) else fail-any) else fail-any)) else caught-fail) in
                                            {1119}let v_174: bool = (not-caught-fail(v_173) && success?(1-proj-2-tuple(v_173))) in
                                            {1120}let kb_9: mac_key = (if v_174 then 2-proj-2-tuple(v_173) else caught-fail) in
                                            {1121}let es_11: bitstring = (if v_174 then 1-proj-2-tuple(v_173) else caught-fail) in
                                            {1122}let v_175: bitstring = (if not(v_168) then catch-fail(psk_data'_2) else caught-fail) in
                                            {1123}let v_176: bool = (not-caught-fail(v_175) && success?(1-proj-4-tuple(v_175))) in
                                            {1124}let is_safe_6: bool = (if v_176 then 4-proj-4-tuple(v_175) else caught-fail) in
                                            {1125}let es_12: bitstring = (if v_176 then 3-proj-4-tuple(v_175) else caught-fail) in
                                            {1126}let id_11: identityPsk = (if v_176 then 2-proj-4-tuple(v_175) else caught-fail) in
                                            {1127}let psk_23: preSharedKey = (if v_176 then 1-proj-4-tuple(v_175) else caught-fail) in
                                            {1128}let (psk_24: preSharedKey,early_secret_14: bitstring,valid_2: bool,safe_psk_6: bool) = (if v_168 then (if v_174 then (NoPsk,es_11,true,false) else fail-any) else (if v_176 then (psk_23,es_12,((psk_23 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_8)),is_safe_6) else fail-any)) in
                                            {1129}event Client_PSKChoosen(@7_id_client,psk_24,safe_psk_6);
                                            {1130}if valid_2 then
                                            (
                                                {1131}let gxy_5: element = catch-fail(dh_decap_fun(g_2,gy_3,x_58)) in
                                                {1132}let v_177: bool = not-caught-fail(gxy_5) in
                                                {1133}new s_19[]: seed;
                                                {1134}let gxy_6: element = (if v_177 then gxy_5 else dh_f(s_19)) in
                                                {1135}event Client_DH_gxy(@7_id_client,gxy_6);
                                                {1136}let l_55: label = tls13_derived in
                                                {1137}let m_16: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                {1138}let v_178: bool = not-caught-fail(m_16) in
                                                {1139}let h_54: bitstring = (if v_178 then catch-fail(hash(@7_tls_h,m_16)) else caught-fail) in
                                                {1140}let v_179: bool = not-caught-fail(h_54) in
                                                {1141}let x_60: bitstring = (if v_179 then (l_55,h_54) else caught-fail) in
                                                {1142}let extra_8: bitstring = catch-fail((if v_178 then (if v_179 then hmac(@7_tls_h,early_secret_14,x_60) else fail-any) else fail-any)) in
                                                {1143}let v_180: bool = not-caught-fail(extra_8) in
                                                {1144}let handshake_secret_3: bitstring = (if v_180 then hmac(@7_tls_h,extra_8,gxy_6) else fail-any) in
                                                {1145}let l_56: label = tls13_derived in
                                                {1146}let m_17: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                {1147}let v_181: bool = not-caught-fail(m_17) in
                                                {1148}let h_55: bitstring = (if v_181 then catch-fail(hash(@7_tls_h,m_17)) else caught-fail) in
                                                {1149}let v_182: bool = not-caught-fail(h_55) in
                                                {1150}let x_61: bitstring = (if v_182 then (l_56,h_55) else caught-fail) in
                                                {1151}let extra_9: bitstring = catch-fail((if v_181 then (if v_182 then hmac(@7_tls_h,handshake_secret_3,x_61) else fail-any) else fail-any)) in
                                                {1152}let v_183: bool = not-caught-fail(extra_9) in
                                                {1153}let k_15: bitstring = (if v_183 then zero else caught-fail) in
                                                {1154}let master_secret_13: bitstring = (if v_183 then catch-fail(hmac(@7_tls_h,handshake_secret_3,k_15)) else caught-fail) in
                                                {1155}let v_184: bool = not-caught-fail(master_secret_13) in
                                                {1156}let l_57: label = (if v_184 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {1157}let h_56: bitstring = (if v_184 then catch-fail(hash(@7_tls_h,cur_log2_9)) else caught-fail) in
                                                {1158}let v_185: bool = not-caught-fail(h_56) in
                                                {1159}let x_62: bitstring = (if v_185 then (l_57,h_56) else caught-fail) in
                                                {1160}let client_hts_3: bitstring = (if v_184 then catch-fail((if v_185 then hmac(@7_tls_h,handshake_secret_3,x_62) else fail-any)) else caught-fail) in
                                                {1161}let v_186: bool = not-caught-fail(client_hts_3) in
                                                {1162}let l_58: label = (if v_186 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {1163}let h_57: bitstring = (if v_186 then catch-fail(hash(@7_tls_h,cur_log2_9)) else caught-fail) in
                                                {1164}let v_187: bool = not-caught-fail(h_57) in
                                                {1165}let x_63: bitstring = (if v_187 then (l_58,h_57) else caught-fail) in
                                                {1166}let server_hts_3: bitstring = (if v_186 then catch-fail((if v_187 then hmac(@7_tls_h,handshake_secret_3,x_63) else fail-any)) else caught-fail) in
                                                {1167}let v_188: bool = not-caught-fail(server_hts_3) in
                                                {1168}let l_59: label = (if v_188 then tls13_key else caught-fail) in
                                                {1169}let h_58: bitstring = (if v_188 then zero else caught-fail) in
                                                {1170}let x_64: bitstring = (if v_188 then (l_59,h_58) else caught-fail) in
                                                {1171}let client_wkh_3: bitstring = (if v_188 then catch-fail(hmac(@7_tls_h,client_hts_3,x_64)) else caught-fail) in
                                                {1172}let v_189: bool = not-caught-fail(client_wkh_3) in
                                                {1173}let l_60: label = (if v_189 then tls13_key else caught-fail) in
                                                {1174}let h_59: bitstring = (if v_189 then zero else caught-fail) in
                                                {1175}let x_65: bitstring = (if v_189 then (l_60,h_59) else caught-fail) in
                                                {1176}let server_wkh_3: bitstring = (if v_189 then catch-fail(hmac(@7_tls_h,server_hts_3,x_65)) else caught-fail) in
                                                {1177}let v_190: bool = not-caught-fail(server_wkh_3) in
                                                {1178}let l_61: label = (if v_190 then tls13_finished else caught-fail) in
                                                {1179}let h_60: bitstring = (if v_190 then zero else caught-fail) in
                                                {1180}let x_66: bitstring = (if v_190 then (l_61,h_60) else caught-fail) in
                                                {1181}let client_fk_3: bitstring = (if v_190 then catch-fail(hmac(@7_tls_h,client_hts_3,x_66)) else caught-fail) in
                                                {1182}let v_191: bool = not-caught-fail(client_fk_3) in
                                                {1183}let l_62: label = (if v_191 then tls13_finished else caught-fail) in
                                                {1184}let h_61: bitstring = (if v_191 then zero else caught-fail) in
                                                {1185}let x_67: bitstring = (if v_191 then (l_62,h_61) else caught-fail) in
                                                {1186}let server_fk_3: bitstring = (if v_191 then catch-fail(hmac(@7_tls_h,server_hts_3,x_67)) else caught-fail) in
                                                {1187}let v_192: bool = not-caught-fail(server_fk_3) in
                                                {1188}let (master_secret_14: bitstring,chk_10: aead_key,shk_9: aead_key,cfin_10: mac_key,sfin_9: mac_key) = (if v_183 then (if v_184 then (if v_186 then (if v_188 then (if v_189 then (if v_190 then (if v_191 then (if v_192 then (master_secret_13,client_wkh_3,server_wkh_3,client_fk_3,server_fk_3) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {1189}event Client_chk(@7_id_client,chk_10);
                                                {1190}event Client_shk(@7_id_client,shk_9);
                                                {1191}event Client_cfin(@7_id_client,cfin_10);
                                                {1192}event Client_sfin(@7_id_client,sfin_9);
                                                {1193}in(io, enc_ee_msg_2: bitstring);
                                                {1194}let ee_msg_3: msg = aead_dec(@7_tls_a,shk_9,0,zero,enc_ee_msg_2) in
                                                {1195}let EE(ech_ee_2: echExt,extra_ee_2: extraExt) = ee_msg_3 in
                                                {1196}let cur_log2_10: bitstring = (cur_log2_9,ee_msg_3) in
                                                {1197}out(ch_client_after_EE, (@7_id_client,ArgsClientAfterEE(cr'_2,sr_11,@7_tls_h,@7_tls_a,c_dom_5,s_dom_12,psk_24,safe_psk_6,@7_comp_psk,master_secret_14,chk_10,0,shk_9,1,cfin_10,sfin_9,cur_log2_10)))
                                            )
                                            else
                                                {1198}out(io, illegal_parameter)
                                        )
                                        else
                                            {1199}out(io, illegal_parameter)
                                )
                                else
                                    {1200}out(io, unexpected_message)
                        )
                        else
                            {1201}out(io, illegal_parameter)
                    )
                    else
                        {1202}if send_kex then
                        (
                            {1203}let (x_68: bitstring,g_3: group) = kex_data_1 in
                            {1204}let (psk_offer_3: preSharedKey,id_offer_3: identityPsk,es_offer_3: bitstring,is_safe_offer_3: bool) = psk_data_1 in
                            {1205}event Client_PSKOffer(@7_id_client,psk_offer_3,id_offer_3,is_safe_offer_3);
                            {1206}event Client_Rand_client(@7_id_client,cr_10);
                            {1207}event Client_DH_client(@7_id_client,dh_pub(g_3,x_68));
                            {1208}event Client_server_domain(@7_id_client,s_dom_12);
                            {1209}let SH(sr_12: bytes32,mode_4: params) = server_hello_1 in
                            {1210}event Client_Rand_server(@7_id_client,sr_12);
                            {1211}let nego(=TLS13,=@7_tls_h,=@7_tls_a,server_kex_ext(DHE_kex(=g_3,gy_4: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_9: preSharedKeyExt) = mode_4 in
                            (
                                {1212}let cur_log2_11: bitstring = (cur_log2_4,server_hello_1) in
                                {1213}event Client_DH_server(@7_id_client,gy_4);
                                {1214}let v_193: bool = (psk_ext_9 = empty_psk_ext) in
                                {1215}let psk_25: preSharedKey = (if v_193 then NoPsk else caught-fail) in
                                {1216}let s_20: bitstring = (if v_193 then zero else caught-fail) in
                                {1217}let k_16: bitstring = (if v_193 then catch-fail(psk2b(psk_25)) else caught-fail) in
                                {1218}let v_194: bool = not-caught-fail(k_16) in
                                {1219}let early_secret_15: bitstring = (if v_193 then catch-fail((if v_194 then hmac(@7_tls_h,s_20,k_16) else fail-any)) else caught-fail) in
                                {1220}let v_195: bool = not-caught-fail(early_secret_15) in
                                {1221}let l_63: label = (if v_195 then tls13_ext_res_binder else caught-fail) in
                                {1222}let m_18: bitstring = (if v_195 then zero else caught-fail) in
                                {1223}let h_62: bitstring = (if v_195 then catch-fail(hash(@7_tls_h,m_18)) else caught-fail) in
                                {1224}let v_196: bool = not-caught-fail(h_62) in
                                {1225}let x_69: bitstring = (if v_196 then (l_63,h_62) else caught-fail) in
                                {1226}let binder_key_10: bitstring = (if v_195 then catch-fail((if v_196 then hmac(@7_tls_h,early_secret_15,x_69) else fail-any)) else caught-fail) in
                                {1227}let v_197: bool = not-caught-fail(binder_key_10) in
                                {1228}let v_198: bitstring = (if v_193 then catch-fail((if v_195 then (if v_197 then (early_secret_15,binder_key_10) else fail-any) else fail-any)) else caught-fail) in
                                {1229}let v_199: bool = (not-caught-fail(v_198) && success?(1-proj-2-tuple(v_198))) in
                                {1230}let kb_10: mac_key = (if v_199 then 2-proj-2-tuple(v_198) else caught-fail) in
                                {1231}let es_13: bitstring = (if v_199 then 1-proj-2-tuple(v_198) else caught-fail) in
                                {1232}let v_200: bitstring = (if not(v_193) then catch-fail(psk_data_1) else caught-fail) in
                                {1233}let v_201: bool = (not-caught-fail(v_200) && success?(1-proj-4-tuple(v_200))) in
                                {1234}let is_safe_7: bool = (if v_201 then 4-proj-4-tuple(v_200) else caught-fail) in
                                {1235}let es_14: bitstring = (if v_201 then 3-proj-4-tuple(v_200) else caught-fail) in
                                {1236}let id_12: identityPsk = (if v_201 then 2-proj-4-tuple(v_200) else caught-fail) in
                                {1237}let psk_26: preSharedKey = (if v_201 then 1-proj-4-tuple(v_200) else caught-fail) in
                                {1238}let (psk_27: preSharedKey,early_secret_16: bitstring,valid_3: bool,safe_psk_7: bool) = (if v_193 then (if v_199 then (NoPsk,es_13,true,false) else fail-any) else (if v_201 then (psk_26,es_14,((psk_26 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_9)),is_safe_7) else fail-any)) in
                                {1239}event Client_PSKChoosen(@7_id_client,psk_27,safe_psk_7);
                                {1240}if valid_3 then
                                (
                                    {1241}let gxy_7: element = catch-fail(dh_decap_fun(g_3,gy_4,x_68)) in
                                    {1242}let v_202: bool = not-caught-fail(gxy_7) in
                                    {1243}new s_21[]: seed;
                                    {1244}let gxy_8: element = (if v_202 then gxy_7 else dh_f(s_21)) in
                                    {1245}event Client_DH_gxy(@7_id_client,gxy_8);
                                    {1246}let l_64: label = tls13_derived in
                                    {1247}let m_19: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                    {1248}let v_203: bool = not-caught-fail(m_19) in
                                    {1249}let h_63: bitstring = (if v_203 then catch-fail(hash(@7_tls_h,m_19)) else caught-fail) in
                                    {1250}let v_204: bool = not-caught-fail(h_63) in
                                    {1251}let x_70: bitstring = (if v_204 then (l_64,h_63) else caught-fail) in
                                    {1252}let extra_10: bitstring = catch-fail((if v_203 then (if v_204 then hmac(@7_tls_h,early_secret_16,x_70) else fail-any) else fail-any)) in
                                    {1253}let v_205: bool = not-caught-fail(extra_10) in
                                    {1254}let handshake_secret_4: bitstring = (if v_205 then hmac(@7_tls_h,extra_10,gxy_8) else fail-any) in
                                    {1255}let l_65: label = tls13_derived in
                                    {1256}let m_20: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                    {1257}let v_206: bool = not-caught-fail(m_20) in
                                    {1258}let h_64: bitstring = (if v_206 then catch-fail(hash(@7_tls_h,m_20)) else caught-fail) in
                                    {1259}let v_207: bool = not-caught-fail(h_64) in
                                    {1260}let x_71: bitstring = (if v_207 then (l_65,h_64) else caught-fail) in
                                    {1261}let extra_11: bitstring = catch-fail((if v_206 then (if v_207 then hmac(@7_tls_h,handshake_secret_4,x_71) else fail-any) else fail-any)) in
                                    {1262}let v_208: bool = not-caught-fail(extra_11) in
                                    {1263}let k_17: bitstring = (if v_208 then zero else caught-fail) in
                                    {1264}let master_secret_15: bitstring = (if v_208 then catch-fail(hmac(@7_tls_h,handshake_secret_4,k_17)) else caught-fail) in
                                    {1265}let v_209: bool = not-caught-fail(master_secret_15) in
                                    {1266}let l_66: label = (if v_209 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {1267}let h_65: bitstring = (if v_209 then catch-fail(hash(@7_tls_h,cur_log2_11)) else caught-fail) in
                                    {1268}let v_210: bool = not-caught-fail(h_65) in
                                    {1269}let x_72: bitstring = (if v_210 then (l_66,h_65) else caught-fail) in
                                    {1270}let client_hts_4: bitstring = (if v_209 then catch-fail((if v_210 then hmac(@7_tls_h,handshake_secret_4,x_72) else fail-any)) else caught-fail) in
                                    {1271}let v_211: bool = not-caught-fail(client_hts_4) in
                                    {1272}let l_67: label = (if v_211 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {1273}let h_66: bitstring = (if v_211 then catch-fail(hash(@7_tls_h,cur_log2_11)) else caught-fail) in
                                    {1274}let v_212: bool = not-caught-fail(h_66) in
                                    {1275}let x_73: bitstring = (if v_212 then (l_67,h_66) else caught-fail) in
                                    {1276}let server_hts_4: bitstring = (if v_211 then catch-fail((if v_212 then hmac(@7_tls_h,handshake_secret_4,x_73) else fail-any)) else caught-fail) in
                                    {1277}let v_213: bool = not-caught-fail(server_hts_4) in
                                    {1278}let l_68: label = (if v_213 then tls13_key else caught-fail) in
                                    {1279}let h_67: bitstring = (if v_213 then zero else caught-fail) in
                                    {1280}let x_74: bitstring = (if v_213 then (l_68,h_67) else caught-fail) in
                                    {1281}let client_wkh_4: bitstring = (if v_213 then catch-fail(hmac(@7_tls_h,client_hts_4,x_74)) else caught-fail) in
                                    {1282}let v_214: bool = not-caught-fail(client_wkh_4) in
                                    {1283}let l_69: label = (if v_214 then tls13_key else caught-fail) in
                                    {1284}let h_68: bitstring = (if v_214 then zero else caught-fail) in
                                    {1285}let x_75: bitstring = (if v_214 then (l_69,h_68) else caught-fail) in
                                    {1286}let server_wkh_4: bitstring = (if v_214 then catch-fail(hmac(@7_tls_h,server_hts_4,x_75)) else caught-fail) in
                                    {1287}let v_215: bool = not-caught-fail(server_wkh_4) in
                                    {1288}let l_70: label = (if v_215 then tls13_finished else caught-fail) in
                                    {1289}let h_69: bitstring = (if v_215 then zero else caught-fail) in
                                    {1290}let x_76: bitstring = (if v_215 then (l_70,h_69) else caught-fail) in
                                    {1291}let client_fk_4: bitstring = (if v_215 then catch-fail(hmac(@7_tls_h,client_hts_4,x_76)) else caught-fail) in
                                    {1292}let v_216: bool = not-caught-fail(client_fk_4) in
                                    {1293}let l_71: label = (if v_216 then tls13_finished else caught-fail) in
                                    {1294}let h_70: bitstring = (if v_216 then zero else caught-fail) in
                                    {1295}let x_77: bitstring = (if v_216 then (l_71,h_70) else caught-fail) in
                                    {1296}let server_fk_4: bitstring = (if v_216 then catch-fail(hmac(@7_tls_h,server_hts_4,x_77)) else caught-fail) in
                                    {1297}let v_217: bool = not-caught-fail(server_fk_4) in
                                    {1298}let (master_secret_16: bitstring,chk_11: aead_key,shk_10: aead_key,cfin_11: mac_key,sfin_10: mac_key) = (if v_208 then (if v_209 then (if v_211 then (if v_213 then (if v_214 then (if v_215 then (if v_216 then (if v_217 then (master_secret_15,client_wkh_4,server_wkh_4,client_fk_4,server_fk_4) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {1299}event Client_chk(@7_id_client,chk_11);
                                    {1300}event Client_shk(@7_id_client,shk_10);
                                    {1301}event Client_cfin(@7_id_client,cfin_11);
                                    {1302}event Client_sfin(@7_id_client,sfin_10);
                                    {1303}in(io, enc_ee_msg_3: bitstring);
                                    {1304}let ee_msg_4: msg = aead_dec(@7_tls_a,shk_10,0,zero,enc_ee_msg_3) in
                                    {1305}let EE(ech_ee_3: echExt,extra_ee_3: extraExt) = ee_msg_4 in
                                    {1306}let cur_log2_12: bitstring = (cur_log2_11,ee_msg_4) in
                                    {1307}out(ch_client_after_EE, (@7_id_client,ArgsClientAfterEE(cr_10,sr_12,@7_tls_h,@7_tls_a,c_dom_5,s_dom_12,psk_27,safe_psk_7,@7_comp_psk,master_secret_16,chk_11,0,shk_10,1,cfin_11,sfin_10,cur_log2_12)))
                                )
                                else
                                    {1308}out(io, illegal_parameter)
                            )
                            else
                                {1309}out(io, illegal_parameter)
                        )
                        else
                            {1310}out(io, illegal_parameter)
                )
                else
                    {1311}out(io, unexpected_message)
            )
        )
        else
            {1951}get pre_shared_keys(c_dom'_3: domain,=s_dom_12,=@7_tls_h,id_13: identityPsk,psk_28: preSharedKey,idP_5: idProc,is_safe_8: bool) in
            {1312}event Selected_one_time_used_psk(@7_id_client,psk_28,is_safe_8);
            {1313}event Selected_psk(c_dom_5,c_dom'_3,idP_5,is_safe_8);
            {1314}event Selected_psk_no_missmatch(@7_id_client,s_dom_12,@7_tls_h,psk_28,id_13);
            {1315}event Selected_psk_with_ID(c_dom_5,c_dom'_3,id_13,idP_5,is_safe_8);
            {1316}let v_218: bitstring = (id_13,psk_28,is_safe_8) in
            {1317}let v_219: bool = success?(1-proj-3-tuple(v_218)) in
            {1318}let is_safe_9: bool = (if v_219 then 3-proj-3-tuple(v_218) else caught-fail) in
            {1319}let psk_29: preSharedKey = (if v_219 then 2-proj-3-tuple(v_218) else caught-fail) in
            {1320}let id_14: identityPsk = (if v_219 then 1-proj-3-tuple(v_218) else caught-fail) in
            {1321}let offer_9: params = (if v_219 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_1,SNI(s_dom_12),ech_ext_2,extra_2,trunc_client_psk_ext(id_14)) else caught-fail) in
            {1322}let cur_log'_5: bitstring = (if v_219 then (cur_log_8,CH(cr_9,offer_9)) else caught-fail) in
            {1323}let s_22: bitstring = (if v_219 then zero else caught-fail) in
            {1324}let k_18: bitstring = (if v_219 then catch-fail(psk2b(psk_29)) else caught-fail) in
            {1325}let v_220: bool = not-caught-fail(k_18) in
            {1326}let early_secret_17: bitstring = (if v_219 then catch-fail((if v_220 then hmac(@7_tls_h,s_22,k_18) else fail-any)) else caught-fail) in
            {1327}let v_221: bool = not-caught-fail(early_secret_17) in
            {1328}let l_72: label = (if v_221 then tls13_ext_res_binder else caught-fail) in
            {1329}let m_21: bitstring = (if v_221 then zero else caught-fail) in
            {1330}let h_71: bitstring = (if v_221 then catch-fail(hash(@7_tls_h,m_21)) else caught-fail) in
            {1331}let v_222: bool = not-caught-fail(h_71) in
            {1332}let x_78: bitstring = (if v_222 then (l_72,h_71) else caught-fail) in
            {1333}let binder_key_11: bitstring = (if v_221 then catch-fail((if v_222 then hmac(@7_tls_h,early_secret_17,x_78) else fail-any)) else caught-fail) in
            {1334}let v_223: bool = not-caught-fail(binder_key_11) in
            {1335}let v_224: bitstring = (if v_219 then catch-fail((if v_221 then (if v_223 then (early_secret_17,binder_key_11) else fail-any) else fail-any)) else caught-fail) in
            {1336}let v_225: bool = (not-caught-fail(v_224) && success?(1-proj-2-tuple(v_224))) in
            {1337}let kb_11: mac_key = (if v_225 then 2-proj-2-tuple(v_224) else caught-fail) in
            {1338}let es_15: bitstring = (if v_225 then 1-proj-2-tuple(v_224) else caught-fail) in
            {1339}let binders_4: bitstring = (if v_225 then catch-fail(hmac(@7_tls_h,kb_11,cur_log'_5)) else caught-fail) in
            {1340}let v_226: bool = not-caught-fail(binders_4) in
            {1341}let v_227: bitstring = catch-fail((if v_219 then (if v_225 then (if v_226 then (client_psk_ext(id_14,binders_4),(psk_29,id_14,es_15,is_safe_9)) else fail-any) else fail-any) else fail-any)) in
            {1342}let v_228: bool = (not-caught-fail(v_227) && success?(1-proj-2-tuple(v_227))) in
            {1343}let psk_data_5: bitstring = (if v_228 then 2-proj-2-tuple(v_227) else caught-fail) in
            {1344}let psk_ext_10: preSharedKeyExt = (if v_228 then 1-proj-2-tuple(v_227) else caught-fail) in
            {1345}let offer_10: params = (if v_228 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_1,SNI(s_dom_12),empty_ech_ext,empty_extra_ext,psk_ext_10) else caught-fail) in
            {1346}let (client_hello_3: msg,cr_12: bytes32,kex_data_3: bitstring,psk_data_6: bitstring) = (if v_228 then (CH(cr_9,offer_10),cr_9,kex_data,psk_data_5) else fail-any) in
            {1347}event ClientOffersAead(cr_12,@7_tls_a);
            {1348}event ClientOffersHash(cr_12,@7_tls_h);
            {1349}event ClientOffersGroup(cr_12,@7_tls_g);
            {1350}out(io, client_hello_3);
            {1351}let cur_log2_13: bitstring = (cur_log_8,client_hello_3) in
            {1352}let (psk_30: preSharedKey,id_15: identityPsk,es_16: bitstring,safe_psk_8: bool) = psk_data_6 in
            (
                {1353}if (false && (psk_30 ≠ NoPsk)) then
                {1354}let client_hello_4: bitstring = (zero,client_hello_3) in
                {1355}let l_73: label = tls13_client_early_traffic_secret in
                {1356}let h_72: bitstring = catch-fail(hash(@7_tls_h,client_hello_4)) in
                {1357}let v_229: bool = not-caught-fail(h_72) in
                {1358}let x_79: bitstring = (if v_229 then (l_73,h_72) else caught-fail) in
                {1359}let atsc0_2: bitstring = catch-fail((if v_229 then hmac(@7_tls_h,es_16,x_79) else fail-any)) in
                {1360}let v_230: bool = not-caught-fail(atsc0_2) in
                {1361}let l_74: label = (if v_230 then tls13_key else caught-fail) in
                {1362}let h_73: bitstring = (if v_230 then zero else caught-fail) in
                {1363}let x_80: bitstring = (if v_230 then (l_74,h_73) else caught-fail) in
                {1364}let kc0_2: bitstring = (if v_230 then catch-fail(hmac(@7_tls_h,atsc0_2,x_80)) else caught-fail) in
                {1365}let v_231: bool = not-caught-fail(kc0_2) in
                {1366}let l_75: label = (if v_231 then tls13_early_exporter_master_secret else caught-fail) in
                {1367}let h_74: bitstring = (if v_231 then catch-fail(hash(@7_tls_h,client_hello_4)) else caught-fail) in
                {1368}let v_232: bool = not-caught-fail(h_74) in
                {1369}let x_81: bitstring = (if v_232 then (l_75,h_74) else caught-fail) in
                {1370}let ems0_4: bitstring = (if v_231 then catch-fail((if v_232 then hmac(@7_tls_h,es_16,x_81) else fail-any)) else caught-fail) in
                {1371}let v_233: bool = not-caught-fail(ems0_4) in
                {1372}let (wkc0_2: aead_key,ems0_5: bitstring) = (if v_230 then (if v_231 then (if v_233 then (kc0_2,ems0_4) else fail-any) else fail-any) else fail-any) in
                {1373}!
                {1374}in(io, (i_2: nat,ad_2: bitstring));
                {1375}if is_nat(i_2) then
                {1376}new msg_ed_1[]: bitstring;
                {1377}let enc_ed_1: bitstring = aead_enc(@7_tls_a,wkc0_2,i_2,ad_2,msg_ed_1) in
                {1378}new st_11: stamp;
                {1379}event ClientSequenceClient0RTTDataWriteKey(@7_id_client,st_11,i_2);
                {1380}event ClientSends0(@7_id_client,cr_12,psk_30,i_2,ad_2,msg_ed_1);
                {1381}out(io, enc_ed_1)
            ) | (
                {1382}in(io, server_hello_2: msg);
                {1383}let SH(sr_13: bytes32,mode_5: params) = server_hello_2 in
                (
                    {1384}event ClientEchAcceptance(@7_id_client,false);
                    {1385}if (false && (sr_13 = B32(HRR24,HRR8))) then
                    (
                        {1386}if ((mode_5 = nego(TLS13,@7_tls_h,@7_tls_a,hrr_kex_ext(@7_tls_g),empty_sni_ext,empty_ech_ext,empty_extra_ext,empty_psk_ext)) && (send_kex ≠ true)) then
                        (
                            {1387}let cur_log3_3: bitstring = (cur_log2_13,server_hello_2) in
                            {1388}let send_kex_2: bool = true in
                            {1389}new rand24_3[]: bytes24;
                            {1390}new rand8_3[]: bytes8;
                            {1391}let cr_13: bytes32 = B32(rand24_3,rand8_3) in
                            {1392}new s_23[]: seed;
                            {1393}let gx_6: element = dh_pub(@7_tls_g,dh_k(s_23)) in
                            {1394}let v_234: bitstring = (dh_k(s_23),gx_6) in
                            {1395}let v_235: bool = success?(1-proj-2-tuple(v_234)) in
                            {1396}let gx_7: element = (if v_235 then 2-proj-2-tuple(v_234) else caught-fail) in
                            {1397}let x_82: bitstring = (if v_235 then 1-proj-2-tuple(v_234) else caught-fail) in
                            {1398}let kex_2: kex_alg = (if v_235 then (if send_kex_2 then DHE_kex(@7_tls_g,gx_7) else DHE_group(@7_tls_g)) else caught-fail) in
                            {1399}let (kex_ext_3: keyShareExt,kex_data_4: bitstring) = (if v_235 then (client_kex_ext(kex_2),(x_82,@7_tls_g)) else fail-any) in
                            {1400}let ech_ext_4: echExt = empty_ech_ext in
                            {1401}let extra_12: extraExt = empty_extra_ext in
                            {1402}if @7_use_psk then
                            (
                                {1403}let (psk_31: preSharedKey,id_16: identityPsk,old_es_2: bitstring,is_safe_10: bool) = psk_data_6 in
                                (
                                    {1404}let offer_11: params = nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_3,SNI(s_dom_12),ech_ext_4,extra_12,trunc_client_psk_ext(id_16)) in
                                    {1405}let cur_log'_6: bitstring = (cur_log3_3,CH(cr_13,offer_11)) in
                                    {1406}let s_24: bitstring = zero in
                                    {1407}let k_19: bitstring = catch-fail(psk2b(psk_31)) in
                                    {1408}let v_236: bool = not-caught-fail(k_19) in
                                    {1409}let early_secret_18: bitstring = catch-fail((if v_236 then hmac(@7_tls_h,s_24,k_19) else fail-any)) in
                                    {1410}let v_237: bool = not-caught-fail(early_secret_18) in
                                    {1411}let l_76: label = (if v_237 then tls13_ext_res_binder else caught-fail) in
                                    {1412}let m_22: bitstring = (if v_237 then zero else caught-fail) in
                                    {1413}let h_75: bitstring = (if v_237 then catch-fail(hash(@7_tls_h,m_22)) else caught-fail) in
                                    {1414}let v_238: bool = not-caught-fail(h_75) in
                                    {1415}let x_83: bitstring = (if v_238 then (l_76,h_75) else caught-fail) in
                                    {1416}let binder_key_12: bitstring = (if v_237 then catch-fail((if v_238 then hmac(@7_tls_h,early_secret_18,x_83) else fail-any)) else caught-fail) in
                                    {1417}let v_239: bool = not-caught-fail(binder_key_12) in
                                    {1418}let v_240: bitstring = catch-fail((if v_237 then (if v_239 then (early_secret_18,binder_key_12) else fail-any) else fail-any)) in
                                    {1419}let v_241: bool = (not-caught-fail(v_240) && success?(1-proj-2-tuple(v_240))) in
                                    {1420}let kb_12: mac_key = (if v_241 then 2-proj-2-tuple(v_240) else caught-fail) in
                                    {1421}let es_17: bitstring = (if v_241 then 1-proj-2-tuple(v_240) else caught-fail) in
                                    {1422}let binders_5: bitstring = (if v_241 then catch-fail(hmac(@7_tls_h,kb_12,cur_log'_6)) else caught-fail) in
                                    {1423}let v_242: bool = not-caught-fail(binders_5) in
                                    {1424}let v_243: bitstring = catch-fail((if v_241 then (if v_242 then (client_psk_ext(id_16,binders_5),(psk_31,id_16,es_17,is_safe_10)) else fail-any) else fail-any)) in
                                    {1425}let v_244: bool = (not-caught-fail(v_243) && success?(1-proj-2-tuple(v_243))) in
                                    {1426}let psk_data_7: bitstring = (if v_244 then 2-proj-2-tuple(v_243) else caught-fail) in
                                    {1427}let psk_ext_11: preSharedKeyExt = (if v_244 then 1-proj-2-tuple(v_243) else caught-fail) in
                                    {1428}let offer_12: params = (if v_244 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_3,SNI(s_dom_12),empty_ech_ext,empty_extra_ext,psk_ext_11) else caught-fail) in
                                    {1429}let (client_hello'_3: msg,cr'_3: bytes32,kex_data'_3: bitstring,psk_data'_3: bitstring) = (if v_244 then (CH(cr_13,offer_12),cr_13,kex_data_4,psk_data_7) else fail-any) in
                                    {1430}event ClientOffersAead(cr'_3,@7_tls_a);
                                    {1431}event ClientOffersHash(cr'_3,@7_tls_h);
                                    {1432}event ClientOffersGroup(cr'_3,@7_tls_g);
                                    {1433}out(io, client_hello'_3);
                                    {1434}let cur_log4_3: bitstring = (cur_log3_3,client_hello'_3) in
                                    {1435}in(io, server_hello'_3: msg);
                                    {1436}let SH(sr'_3: bytes32,mode'_3: params) = server_hello'_3 in
                                    (
                                        {1437}if (sr'_3 = B32(HRR24,HRR8)) then
                                            {1438}out(io, unexpected_message)
                                        else
                                            {1439}let (x_84: bitstring,g_4: group) = kex_data'_3 in
                                            {1440}let (psk_offer_4: preSharedKey,id_offer_4: identityPsk,es_offer_4: bitstring,is_safe_offer_4: bool) = psk_data'_3 in
                                            {1441}event Client_PSKOffer(@7_id_client,psk_offer_4,id_offer_4,is_safe_offer_4);
                                            {1442}event Client_Rand_client(@7_id_client,cr'_3);
                                            {1443}event Client_DH_client(@7_id_client,dh_pub(g_4,x_84));
                                            {1444}event Client_server_domain(@7_id_client,s_dom_12);
                                            {1445}let SH(sr_14: bytes32,mode_6: params) = server_hello'_3 in
                                            {1446}event Client_Rand_server(@7_id_client,sr_14);
                                            {1447}let nego(=TLS13,=@7_tls_h,=@7_tls_a,server_kex_ext(DHE_kex(=g_4,gy_5: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_12: preSharedKeyExt) = mode_6 in
                                            (
                                                {1448}let cur_log2_14: bitstring = (cur_log4_3,server_hello'_3) in
                                                {1449}event Client_DH_server(@7_id_client,gy_5);
                                                {1450}let v_245: bool = (psk_ext_12 = empty_psk_ext) in
                                                {1451}let psk_32: preSharedKey = (if v_245 then NoPsk else caught-fail) in
                                                {1452}let s_25: bitstring = (if v_245 then zero else caught-fail) in
                                                {1453}let k_20: bitstring = (if v_245 then catch-fail(psk2b(psk_32)) else caught-fail) in
                                                {1454}let v_246: bool = not-caught-fail(k_20) in
                                                {1455}let early_secret_19: bitstring = (if v_245 then catch-fail((if v_246 then hmac(@7_tls_h,s_25,k_20) else fail-any)) else caught-fail) in
                                                {1456}let v_247: bool = not-caught-fail(early_secret_19) in
                                                {1457}let l_77: label = (if v_247 then tls13_ext_res_binder else caught-fail) in
                                                {1458}let m_23: bitstring = (if v_247 then zero else caught-fail) in
                                                {1459}let h_76: bitstring = (if v_247 then catch-fail(hash(@7_tls_h,m_23)) else caught-fail) in
                                                {1460}let v_248: bool = not-caught-fail(h_76) in
                                                {1461}let x_85: bitstring = (if v_248 then (l_77,h_76) else caught-fail) in
                                                {1462}let binder_key_13: bitstring = (if v_247 then catch-fail((if v_248 then hmac(@7_tls_h,early_secret_19,x_85) else fail-any)) else caught-fail) in
                                                {1463}let v_249: bool = not-caught-fail(binder_key_13) in
                                                {1464}let v_250: bitstring = (if v_245 then catch-fail((if v_247 then (if v_249 then (early_secret_19,binder_key_13) else fail-any) else fail-any)) else caught-fail) in
                                                {1465}let v_251: bool = (not-caught-fail(v_250) && success?(1-proj-2-tuple(v_250))) in
                                                {1466}let kb_13: mac_key = (if v_251 then 2-proj-2-tuple(v_250) else caught-fail) in
                                                {1467}let es_18: bitstring = (if v_251 then 1-proj-2-tuple(v_250) else caught-fail) in
                                                {1468}let v_252: bitstring = (if not(v_245) then catch-fail(psk_data'_3) else caught-fail) in
                                                {1469}let v_253: bool = (not-caught-fail(v_252) && success?(1-proj-4-tuple(v_252))) in
                                                {1470}let is_safe_11: bool = (if v_253 then 4-proj-4-tuple(v_252) else caught-fail) in
                                                {1471}let es_19: bitstring = (if v_253 then 3-proj-4-tuple(v_252) else caught-fail) in
                                                {1472}let id_17: identityPsk = (if v_253 then 2-proj-4-tuple(v_252) else caught-fail) in
                                                {1473}let psk_33: preSharedKey = (if v_253 then 1-proj-4-tuple(v_252) else caught-fail) in
                                                {1474}let (psk_34: preSharedKey,early_secret_20: bitstring,valid_4: bool,safe_psk_9: bool) = (if v_245 then (if v_251 then (NoPsk,es_18,true,false) else fail-any) else (if v_253 then (psk_33,es_19,((psk_33 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_12)),is_safe_11) else fail-any)) in
                                                {1475}event Client_PSKChoosen(@7_id_client,psk_34,safe_psk_9);
                                                {1476}if valid_4 then
                                                (
                                                    {1477}let gxy_9: element = catch-fail(dh_decap_fun(g_4,gy_5,x_84)) in
                                                    {1478}let v_254: bool = not-caught-fail(gxy_9) in
                                                    {1479}new s_26[]: seed;
                                                    {1480}let gxy_10: element = (if v_254 then gxy_9 else dh_f(s_26)) in
                                                    {1481}event Client_DH_gxy(@7_id_client,gxy_10);
                                                    {1482}let l_78: label = tls13_derived in
                                                    {1483}let m_24: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                    {1484}let v_255: bool = not-caught-fail(m_24) in
                                                    {1485}let h_77: bitstring = (if v_255 then catch-fail(hash(@7_tls_h,m_24)) else caught-fail) in
                                                    {1486}let v_256: bool = not-caught-fail(h_77) in
                                                    {1487}let x_86: bitstring = (if v_256 then (l_78,h_77) else caught-fail) in
                                                    {1488}let extra_13: bitstring = catch-fail((if v_255 then (if v_256 then hmac(@7_tls_h,early_secret_20,x_86) else fail-any) else fail-any)) in
                                                    {1489}let v_257: bool = not-caught-fail(extra_13) in
                                                    {1490}let handshake_secret_5: bitstring = (if v_257 then hmac(@7_tls_h,extra_13,gxy_10) else fail-any) in
                                                    {1491}let l_79: label = tls13_derived in
                                                    {1492}let m_25: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                    {1493}let v_258: bool = not-caught-fail(m_25) in
                                                    {1494}let h_78: bitstring = (if v_258 then catch-fail(hash(@7_tls_h,m_25)) else caught-fail) in
                                                    {1495}let v_259: bool = not-caught-fail(h_78) in
                                                    {1496}let x_87: bitstring = (if v_259 then (l_79,h_78) else caught-fail) in
                                                    {1497}let extra_14: bitstring = catch-fail((if v_258 then (if v_259 then hmac(@7_tls_h,handshake_secret_5,x_87) else fail-any) else fail-any)) in
                                                    {1498}let v_260: bool = not-caught-fail(extra_14) in
                                                    {1499}let k_21: bitstring = (if v_260 then zero else caught-fail) in
                                                    {1500}let master_secret_17: bitstring = (if v_260 then catch-fail(hmac(@7_tls_h,handshake_secret_5,k_21)) else caught-fail) in
                                                    {1501}let v_261: bool = not-caught-fail(master_secret_17) in
                                                    {1502}let l_80: label = (if v_261 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {1503}let h_79: bitstring = (if v_261 then catch-fail(hash(@7_tls_h,cur_log2_14)) else caught-fail) in
                                                    {1504}let v_262: bool = not-caught-fail(h_79) in
                                                    {1505}let x_88: bitstring = (if v_262 then (l_80,h_79) else caught-fail) in
                                                    {1506}let client_hts_5: bitstring = (if v_261 then catch-fail((if v_262 then hmac(@7_tls_h,handshake_secret_5,x_88) else fail-any)) else caught-fail) in
                                                    {1507}let v_263: bool = not-caught-fail(client_hts_5) in
                                                    {1508}let l_81: label = (if v_263 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {1509}let h_80: bitstring = (if v_263 then catch-fail(hash(@7_tls_h,cur_log2_14)) else caught-fail) in
                                                    {1510}let v_264: bool = not-caught-fail(h_80) in
                                                    {1511}let x_89: bitstring = (if v_264 then (l_81,h_80) else caught-fail) in
                                                    {1512}let server_hts_5: bitstring = (if v_263 then catch-fail((if v_264 then hmac(@7_tls_h,handshake_secret_5,x_89) else fail-any)) else caught-fail) in
                                                    {1513}let v_265: bool = not-caught-fail(server_hts_5) in
                                                    {1514}let l_82: label = (if v_265 then tls13_key else caught-fail) in
                                                    {1515}let h_81: bitstring = (if v_265 then zero else caught-fail) in
                                                    {1516}let x_90: bitstring = (if v_265 then (l_82,h_81) else caught-fail) in
                                                    {1517}let client_wkh_5: bitstring = (if v_265 then catch-fail(hmac(@7_tls_h,client_hts_5,x_90)) else caught-fail) in
                                                    {1518}let v_266: bool = not-caught-fail(client_wkh_5) in
                                                    {1519}let l_83: label = (if v_266 then tls13_key else caught-fail) in
                                                    {1520}let h_82: bitstring = (if v_266 then zero else caught-fail) in
                                                    {1521}let x_91: bitstring = (if v_266 then (l_83,h_82) else caught-fail) in
                                                    {1522}let server_wkh_5: bitstring = (if v_266 then catch-fail(hmac(@7_tls_h,server_hts_5,x_91)) else caught-fail) in
                                                    {1523}let v_267: bool = not-caught-fail(server_wkh_5) in
                                                    {1524}let l_84: label = (if v_267 then tls13_finished else caught-fail) in
                                                    {1525}let h_83: bitstring = (if v_267 then zero else caught-fail) in
                                                    {1526}let x_92: bitstring = (if v_267 then (l_84,h_83) else caught-fail) in
                                                    {1527}let client_fk_5: bitstring = (if v_267 then catch-fail(hmac(@7_tls_h,client_hts_5,x_92)) else caught-fail) in
                                                    {1528}let v_268: bool = not-caught-fail(client_fk_5) in
                                                    {1529}let l_85: label = (if v_268 then tls13_finished else caught-fail) in
                                                    {1530}let h_84: bitstring = (if v_268 then zero else caught-fail) in
                                                    {1531}let x_93: bitstring = (if v_268 then (l_85,h_84) else caught-fail) in
                                                    {1532}let server_fk_5: bitstring = (if v_268 then catch-fail(hmac(@7_tls_h,server_hts_5,x_93)) else caught-fail) in
                                                    {1533}let v_269: bool = not-caught-fail(server_fk_5) in
                                                    {1534}let (master_secret_18: bitstring,chk_12: aead_key,shk_11: aead_key,cfin_12: mac_key,sfin_11: mac_key) = (if v_260 then (if v_261 then (if v_263 then (if v_265 then (if v_266 then (if v_267 then (if v_268 then (if v_269 then (master_secret_17,client_wkh_5,server_wkh_5,client_fk_5,server_fk_5) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {1535}event Client_chk(@7_id_client,chk_12);
                                                    {1536}event Client_shk(@7_id_client,shk_11);
                                                    {1537}event Client_cfin(@7_id_client,cfin_12);
                                                    {1538}event Client_sfin(@7_id_client,sfin_11);
                                                    {1539}in(io, enc_ee_msg_4: bitstring);
                                                    {1540}let ee_msg_5: msg = aead_dec(@7_tls_a,shk_11,0,zero,enc_ee_msg_4) in
                                                    {1541}let EE(ech_ee_4: echExt,extra_ee_4: extraExt) = ee_msg_5 in
                                                    {1542}let cur_log2_15: bitstring = (cur_log2_14,ee_msg_5) in
                                                    {1543}out(ch_client_after_EE, (@7_id_client,ArgsClientAfterEE(cr'_3,sr_14,@7_tls_h,@7_tls_a,c_dom_5,s_dom_12,psk_34,safe_psk_9,@7_comp_psk,master_secret_18,chk_12,0,shk_11,1,cfin_12,sfin_11,cur_log2_15)))
                                                )
                                                else
                                                    {1544}out(io, illegal_parameter)
                                            )
                                            else
                                                {1545}out(io, illegal_parameter)
                                    )
                                    else
                                        {1546}out(io, unexpected_message)
                                )
                                else
                                    {1699}get pre_shared_keys(c_dom'_4: domain,=s_dom_12,=@7_tls_h,id_18: identityPsk,psk_35: preSharedKey,idP_6: idProc,is_safe_12: bool) in
                                    {1547}event Selected_one_time_used_psk(@7_id_client,psk_35,is_safe_12);
                                    {1548}event Selected_psk(c_dom_5,c_dom'_4,idP_6,is_safe_12);
                                    {1549}event Selected_psk_no_missmatch(@7_id_client,s_dom_12,@7_tls_h,psk_35,id_18);
                                    {1550}event Selected_psk_with_ID(c_dom_5,c_dom'_4,id_18,idP_6,is_safe_12);
                                    {1551}let v_270: bitstring = (id_18,psk_35,is_safe_12) in
                                    {1552}let v_271: bool = success?(1-proj-3-tuple(v_270)) in
                                    {1553}let is_safe_13: bool = (if v_271 then 3-proj-3-tuple(v_270) else caught-fail) in
                                    {1554}let psk_36: preSharedKey = (if v_271 then 2-proj-3-tuple(v_270) else caught-fail) in
                                    {1555}let id_19: identityPsk = (if v_271 then 1-proj-3-tuple(v_270) else caught-fail) in
                                    {1556}let offer_13: params = (if v_271 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_3,SNI(s_dom_12),ech_ext_4,extra_12,trunc_client_psk_ext(id_19)) else caught-fail) in
                                    {1557}let cur_log'_7: bitstring = (if v_271 then (cur_log3_3,CH(cr_13,offer_13)) else caught-fail) in
                                    {1558}let s_27: bitstring = (if v_271 then zero else caught-fail) in
                                    {1559}let k_22: bitstring = (if v_271 then catch-fail(psk2b(psk_36)) else caught-fail) in
                                    {1560}let v_272: bool = not-caught-fail(k_22) in
                                    {1561}let early_secret_21: bitstring = (if v_271 then catch-fail((if v_272 then hmac(@7_tls_h,s_27,k_22) else fail-any)) else caught-fail) in
                                    {1562}let v_273: bool = not-caught-fail(early_secret_21) in
                                    {1563}let l_86: label = (if v_273 then tls13_ext_res_binder else caught-fail) in
                                    {1564}let m_26: bitstring = (if v_273 then zero else caught-fail) in
                                    {1565}let h_85: bitstring = (if v_273 then catch-fail(hash(@7_tls_h,m_26)) else caught-fail) in
                                    {1566}let v_274: bool = not-caught-fail(h_85) in
                                    {1567}let x_94: bitstring = (if v_274 then (l_86,h_85) else caught-fail) in
                                    {1568}let binder_key_14: bitstring = (if v_273 then catch-fail((if v_274 then hmac(@7_tls_h,early_secret_21,x_94) else fail-any)) else caught-fail) in
                                    {1569}let v_275: bool = not-caught-fail(binder_key_14) in
                                    {1570}let v_276: bitstring = (if v_271 then catch-fail((if v_273 then (if v_275 then (early_secret_21,binder_key_14) else fail-any) else fail-any)) else caught-fail) in
                                    {1571}let v_277: bool = (not-caught-fail(v_276) && success?(1-proj-2-tuple(v_276))) in
                                    {1572}let kb_14: mac_key = (if v_277 then 2-proj-2-tuple(v_276) else caught-fail) in
                                    {1573}let es_20: bitstring = (if v_277 then 1-proj-2-tuple(v_276) else caught-fail) in
                                    {1574}let binders_6: bitstring = (if v_277 then catch-fail(hmac(@7_tls_h,kb_14,cur_log'_7)) else caught-fail) in
                                    {1575}let v_278: bool = not-caught-fail(binders_6) in
                                    {1576}let v_279: bitstring = catch-fail((if v_271 then (if v_277 then (if v_278 then (client_psk_ext(id_19,binders_6),(psk_36,id_19,es_20,is_safe_13)) else fail-any) else fail-any) else fail-any)) in
                                    {1577}let v_280: bool = (not-caught-fail(v_279) && success?(1-proj-2-tuple(v_279))) in
                                    {1578}let psk_data_8: bitstring = (if v_280 then 2-proj-2-tuple(v_279) else caught-fail) in
                                    {1579}let psk_ext_13: preSharedKeyExt = (if v_280 then 1-proj-2-tuple(v_279) else caught-fail) in
                                    {1580}let offer_14: params = (if v_280 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_3,SNI(s_dom_12),empty_ech_ext,empty_extra_ext,psk_ext_13) else caught-fail) in
                                    {1581}let (client_hello'_4: msg,cr'_4: bytes32,kex_data'_4: bitstring,psk_data'_4: bitstring) = (if v_280 then (CH(cr_13,offer_14),cr_13,kex_data_4,psk_data_8) else fail-any) in
                                    {1582}event ClientOffersAead(cr'_4,@7_tls_a);
                                    {1583}event ClientOffersHash(cr'_4,@7_tls_h);
                                    {1584}event ClientOffersGroup(cr'_4,@7_tls_g);
                                    {1585}out(io, client_hello'_4);
                                    {1586}let cur_log4_4: bitstring = (cur_log3_3,client_hello'_4) in
                                    {1587}in(io, server_hello'_4: msg);
                                    {1588}let SH(sr'_4: bytes32,mode'_4: params) = server_hello'_4 in
                                    (
                                        {1589}if (sr'_4 = B32(HRR24,HRR8)) then
                                            {1590}out(io, unexpected_message)
                                        else
                                            {1591}let (x_95: bitstring,g_5: group) = kex_data'_4 in
                                            {1592}let (psk_offer_5: preSharedKey,id_offer_5: identityPsk,es_offer_5: bitstring,is_safe_offer_5: bool) = psk_data'_4 in
                                            {1593}event Client_PSKOffer(@7_id_client,psk_offer_5,id_offer_5,is_safe_offer_5);
                                            {1594}event Client_Rand_client(@7_id_client,cr'_4);
                                            {1595}event Client_DH_client(@7_id_client,dh_pub(g_5,x_95));
                                            {1596}event Client_server_domain(@7_id_client,s_dom_12);
                                            {1597}let SH(sr_15: bytes32,mode_7: params) = server_hello'_4 in
                                            {1598}event Client_Rand_server(@7_id_client,sr_15);
                                            {1599}let nego(=TLS13,=@7_tls_h,=@7_tls_a,server_kex_ext(DHE_kex(=g_5,gy_6: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_14: preSharedKeyExt) = mode_7 in
                                            (
                                                {1600}let cur_log2_16: bitstring = (cur_log4_4,server_hello'_4) in
                                                {1601}event Client_DH_server(@7_id_client,gy_6);
                                                {1602}let v_281: bool = (psk_ext_14 = empty_psk_ext) in
                                                {1603}let psk_37: preSharedKey = (if v_281 then NoPsk else caught-fail) in
                                                {1604}let s_28: bitstring = (if v_281 then zero else caught-fail) in
                                                {1605}let k_23: bitstring = (if v_281 then catch-fail(psk2b(psk_37)) else caught-fail) in
                                                {1606}let v_282: bool = not-caught-fail(k_23) in
                                                {1607}let early_secret_22: bitstring = (if v_281 then catch-fail((if v_282 then hmac(@7_tls_h,s_28,k_23) else fail-any)) else caught-fail) in
                                                {1608}let v_283: bool = not-caught-fail(early_secret_22) in
                                                {1609}let l_87: label = (if v_283 then tls13_ext_res_binder else caught-fail) in
                                                {1610}let m_27: bitstring = (if v_283 then zero else caught-fail) in
                                                {1611}let h_86: bitstring = (if v_283 then catch-fail(hash(@7_tls_h,m_27)) else caught-fail) in
                                                {1612}let v_284: bool = not-caught-fail(h_86) in
                                                {1613}let x_96: bitstring = (if v_284 then (l_87,h_86) else caught-fail) in
                                                {1614}let binder_key_15: bitstring = (if v_283 then catch-fail((if v_284 then hmac(@7_tls_h,early_secret_22,x_96) else fail-any)) else caught-fail) in
                                                {1615}let v_285: bool = not-caught-fail(binder_key_15) in
                                                {1616}let v_286: bitstring = (if v_281 then catch-fail((if v_283 then (if v_285 then (early_secret_22,binder_key_15) else fail-any) else fail-any)) else caught-fail) in
                                                {1617}let v_287: bool = (not-caught-fail(v_286) && success?(1-proj-2-tuple(v_286))) in
                                                {1618}let kb_15: mac_key = (if v_287 then 2-proj-2-tuple(v_286) else caught-fail) in
                                                {1619}let es_21: bitstring = (if v_287 then 1-proj-2-tuple(v_286) else caught-fail) in
                                                {1620}let v_288: bitstring = (if not(v_281) then catch-fail(psk_data'_4) else caught-fail) in
                                                {1621}let v_289: bool = (not-caught-fail(v_288) && success?(1-proj-4-tuple(v_288))) in
                                                {1622}let is_safe_14: bool = (if v_289 then 4-proj-4-tuple(v_288) else caught-fail) in
                                                {1623}let es_22: bitstring = (if v_289 then 3-proj-4-tuple(v_288) else caught-fail) in
                                                {1624}let id_20: identityPsk = (if v_289 then 2-proj-4-tuple(v_288) else caught-fail) in
                                                {1625}let psk_38: preSharedKey = (if v_289 then 1-proj-4-tuple(v_288) else caught-fail) in
                                                {1626}let (psk_39: preSharedKey,early_secret_23: bitstring,valid_5: bool,safe_psk_10: bool) = (if v_281 then (if v_287 then (NoPsk,es_21,true,false) else fail-any) else (if v_289 then (psk_38,es_22,((psk_38 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_14)),is_safe_14) else fail-any)) in
                                                {1627}event Client_PSKChoosen(@7_id_client,psk_39,safe_psk_10);
                                                {1628}if valid_5 then
                                                (
                                                    {1629}let gxy_11: element = catch-fail(dh_decap_fun(g_5,gy_6,x_95)) in
                                                    {1630}let v_290: bool = not-caught-fail(gxy_11) in
                                                    {1631}new s_29[]: seed;
                                                    {1632}let gxy_12: element = (if v_290 then gxy_11 else dh_f(s_29)) in
                                                    {1633}event Client_DH_gxy(@7_id_client,gxy_12);
                                                    {1634}let l_88: label = tls13_derived in
                                                    {1635}let m_28: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                    {1636}let v_291: bool = not-caught-fail(m_28) in
                                                    {1637}let h_87: bitstring = (if v_291 then catch-fail(hash(@7_tls_h,m_28)) else caught-fail) in
                                                    {1638}let v_292: bool = not-caught-fail(h_87) in
                                                    {1639}let x_97: bitstring = (if v_292 then (l_88,h_87) else caught-fail) in
                                                    {1640}let extra_15: bitstring = catch-fail((if v_291 then (if v_292 then hmac(@7_tls_h,early_secret_23,x_97) else fail-any) else fail-any)) in
                                                    {1641}let v_293: bool = not-caught-fail(extra_15) in
                                                    {1642}let handshake_secret_6: bitstring = (if v_293 then hmac(@7_tls_h,extra_15,gxy_12) else fail-any) in
                                                    {1643}let l_89: label = tls13_derived in
                                                    {1644}let m_29: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                    {1645}let v_294: bool = not-caught-fail(m_29) in
                                                    {1646}let h_88: bitstring = (if v_294 then catch-fail(hash(@7_tls_h,m_29)) else caught-fail) in
                                                    {1647}let v_295: bool = not-caught-fail(h_88) in
                                                    {1648}let x_98: bitstring = (if v_295 then (l_89,h_88) else caught-fail) in
                                                    {1649}let extra_16: bitstring = catch-fail((if v_294 then (if v_295 then hmac(@7_tls_h,handshake_secret_6,x_98) else fail-any) else fail-any)) in
                                                    {1650}let v_296: bool = not-caught-fail(extra_16) in
                                                    {1651}let k_24: bitstring = (if v_296 then zero else caught-fail) in
                                                    {1652}let master_secret_19: bitstring = (if v_296 then catch-fail(hmac(@7_tls_h,handshake_secret_6,k_24)) else caught-fail) in
                                                    {1653}let v_297: bool = not-caught-fail(master_secret_19) in
                                                    {1654}let l_90: label = (if v_297 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {1655}let h_89: bitstring = (if v_297 then catch-fail(hash(@7_tls_h,cur_log2_16)) else caught-fail) in
                                                    {1656}let v_298: bool = not-caught-fail(h_89) in
                                                    {1657}let x_99: bitstring = (if v_298 then (l_90,h_89) else caught-fail) in
                                                    {1658}let client_hts_6: bitstring = (if v_297 then catch-fail((if v_298 then hmac(@7_tls_h,handshake_secret_6,x_99) else fail-any)) else caught-fail) in
                                                    {1659}let v_299: bool = not-caught-fail(client_hts_6) in
                                                    {1660}let l_91: label = (if v_299 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {1661}let h_90: bitstring = (if v_299 then catch-fail(hash(@7_tls_h,cur_log2_16)) else caught-fail) in
                                                    {1662}let v_300: bool = not-caught-fail(h_90) in
                                                    {1663}let x_100: bitstring = (if v_300 then (l_91,h_90) else caught-fail) in
                                                    {1664}let server_hts_6: bitstring = (if v_299 then catch-fail((if v_300 then hmac(@7_tls_h,handshake_secret_6,x_100) else fail-any)) else caught-fail) in
                                                    {1665}let v_301: bool = not-caught-fail(server_hts_6) in
                                                    {1666}let l_92: label = (if v_301 then tls13_key else caught-fail) in
                                                    {1667}let h_91: bitstring = (if v_301 then zero else caught-fail) in
                                                    {1668}let x_101: bitstring = (if v_301 then (l_92,h_91) else caught-fail) in
                                                    {1669}let client_wkh_6: bitstring = (if v_301 then catch-fail(hmac(@7_tls_h,client_hts_6,x_101)) else caught-fail) in
                                                    {1670}let v_302: bool = not-caught-fail(client_wkh_6) in
                                                    {1671}let l_93: label = (if v_302 then tls13_key else caught-fail) in
                                                    {1672}let h_92: bitstring = (if v_302 then zero else caught-fail) in
                                                    {1673}let x_102: bitstring = (if v_302 then (l_93,h_92) else caught-fail) in
                                                    {1674}let server_wkh_6: bitstring = (if v_302 then catch-fail(hmac(@7_tls_h,server_hts_6,x_102)) else caught-fail) in
                                                    {1675}let v_303: bool = not-caught-fail(server_wkh_6) in
                                                    {1676}let l_94: label = (if v_303 then tls13_finished else caught-fail) in
                                                    {1677}let h_93: bitstring = (if v_303 then zero else caught-fail) in
                                                    {1678}let x_103: bitstring = (if v_303 then (l_94,h_93) else caught-fail) in
                                                    {1679}let client_fk_6: bitstring = (if v_303 then catch-fail(hmac(@7_tls_h,client_hts_6,x_103)) else caught-fail) in
                                                    {1680}let v_304: bool = not-caught-fail(client_fk_6) in
                                                    {1681}let l_95: label = (if v_304 then tls13_finished else caught-fail) in
                                                    {1682}let h_94: bitstring = (if v_304 then zero else caught-fail) in
                                                    {1683}let x_104: bitstring = (if v_304 then (l_95,h_94) else caught-fail) in
                                                    {1684}let server_fk_6: bitstring = (if v_304 then catch-fail(hmac(@7_tls_h,server_hts_6,x_104)) else caught-fail) in
                                                    {1685}let v_305: bool = not-caught-fail(server_fk_6) in
                                                    {1686}let (master_secret_20: bitstring,chk_13: aead_key,shk_12: aead_key,cfin_13: mac_key,sfin_12: mac_key) = (if v_296 then (if v_297 then (if v_299 then (if v_301 then (if v_302 then (if v_303 then (if v_304 then (if v_305 then (master_secret_19,client_wkh_6,server_wkh_6,client_fk_6,server_fk_6) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {1687}event Client_chk(@7_id_client,chk_13);
                                                    {1688}event Client_shk(@7_id_client,shk_12);
                                                    {1689}event Client_cfin(@7_id_client,cfin_13);
                                                    {1690}event Client_sfin(@7_id_client,sfin_12);
                                                    {1691}in(io, enc_ee_msg_5: bitstring);
                                                    {1692}let ee_msg_6: msg = aead_dec(@7_tls_a,shk_12,0,zero,enc_ee_msg_5) in
                                                    {1693}let EE(ech_ee_5: echExt,extra_ee_5: extraExt) = ee_msg_6 in
                                                    {1694}let cur_log2_17: bitstring = (cur_log2_16,ee_msg_6) in
                                                    {1695}out(ch_client_after_EE, (@7_id_client,ArgsClientAfterEE(cr'_4,sr_15,@7_tls_h,@7_tls_a,c_dom_5,s_dom_12,psk_39,safe_psk_10,@7_comp_psk,master_secret_20,chk_13,0,shk_12,1,cfin_13,sfin_12,cur_log2_17)))
                                                )
                                                else
                                                    {1696}out(io, illegal_parameter)
                                            )
                                            else
                                                {1697}out(io, illegal_parameter)
                                    )
                                    else
                                        {1698}out(io, unexpected_message)
                            )
                            else
                                {1700}let psk_40: preSharedKey = NoPsk in
                                {1701}let s_30: bitstring = zero in
                                {1702}let k_25: bitstring = catch-fail(psk2b(psk_40)) in
                                {1703}let v_306: bool = not-caught-fail(k_25) in
                                {1704}let early_secret_24: bitstring = catch-fail((if v_306 then hmac(@7_tls_h,s_30,k_25) else fail-any)) in
                                {1705}let v_307: bool = not-caught-fail(early_secret_24) in
                                {1706}let l_96: label = (if v_307 then tls13_ext_res_binder else caught-fail) in
                                {1707}let m_30: bitstring = (if v_307 then zero else caught-fail) in
                                {1708}let h_95: bitstring = (if v_307 then catch-fail(hash(@7_tls_h,m_30)) else caught-fail) in
                                {1709}let v_308: bool = not-caught-fail(h_95) in
                                {1710}let x_105: bitstring = (if v_308 then (l_96,h_95) else caught-fail) in
                                {1711}let binder_key_16: bitstring = (if v_307 then catch-fail((if v_308 then hmac(@7_tls_h,early_secret_24,x_105) else fail-any)) else caught-fail) in
                                {1712}let v_309: bool = not-caught-fail(binder_key_16) in
                                {1713}let v_310: bitstring = catch-fail((if v_307 then (if v_309 then (early_secret_24,binder_key_16) else fail-any) else fail-any)) in
                                {1714}let v_311: bool = (not-caught-fail(v_310) && success?(1-proj-2-tuple(v_310))) in
                                {1715}let kb_16: mac_key = (if v_311 then 2-proj-2-tuple(v_310) else caught-fail) in
                                {1716}let es_23: bitstring = (if v_311 then 1-proj-2-tuple(v_310) else caught-fail) in
                                {1717}let v_312: bitstring = catch-fail((if v_311 then (empty_psk_ext,(NoPsk,zero,es_23,false)) else fail-any)) in
                                {1718}let v_313: bool = (not-caught-fail(v_312) && success?(1-proj-2-tuple(v_312))) in
                                {1719}let psk_data_9: bitstring = (if v_313 then 2-proj-2-tuple(v_312) else caught-fail) in
                                {1720}let psk_ext_15: preSharedKeyExt = (if v_313 then 1-proj-2-tuple(v_312) else caught-fail) in
                                {1721}let offer_15: params = (if v_313 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_3,SNI(s_dom_12),empty_ech_ext,empty_extra_ext,psk_ext_15) else caught-fail) in
                                {1722}let (client_hello'_5: msg,cr'_5: bytes32,kex_data'_5: bitstring,psk_data'_5: bitstring) = (if v_313 then (CH(cr_13,offer_15),cr_13,kex_data_4,psk_data_9) else fail-any) in
                                {1723}event ClientOffersAead(cr'_5,@7_tls_a);
                                {1724}event ClientOffersHash(cr'_5,@7_tls_h);
                                {1725}event ClientOffersGroup(cr'_5,@7_tls_g);
                                {1726}out(io, client_hello'_5);
                                {1727}let cur_log4_5: bitstring = (cur_log3_3,client_hello'_5) in
                                {1728}in(io, server_hello'_5: msg);
                                {1729}let SH(sr'_5: bytes32,mode'_5: params) = server_hello'_5 in
                                (
                                    {1730}if (sr'_5 = B32(HRR24,HRR8)) then
                                        {1731}out(io, unexpected_message)
                                    else
                                        {1732}let (x_106: bitstring,g_6: group) = kex_data'_5 in
                                        {1733}let (psk_offer_6: preSharedKey,id_offer_6: identityPsk,es_offer_6: bitstring,is_safe_offer_6: bool) = psk_data'_5 in
                                        {1734}event Client_PSKOffer(@7_id_client,psk_offer_6,id_offer_6,is_safe_offer_6);
                                        {1735}event Client_Rand_client(@7_id_client,cr'_5);
                                        {1736}event Client_DH_client(@7_id_client,dh_pub(g_6,x_106));
                                        {1737}event Client_server_domain(@7_id_client,s_dom_12);
                                        {1738}let SH(sr_16: bytes32,mode_8: params) = server_hello'_5 in
                                        {1739}event Client_Rand_server(@7_id_client,sr_16);
                                        {1740}let nego(=TLS13,=@7_tls_h,=@7_tls_a,server_kex_ext(DHE_kex(=g_6,gy_7: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_16: preSharedKeyExt) = mode_8 in
                                        (
                                            {1741}let cur_log2_18: bitstring = (cur_log4_5,server_hello'_5) in
                                            {1742}event Client_DH_server(@7_id_client,gy_7);
                                            {1743}let v_314: bool = (psk_ext_16 = empty_psk_ext) in
                                            {1744}let psk_41: preSharedKey = (if v_314 then NoPsk else caught-fail) in
                                            {1745}let s_31: bitstring = (if v_314 then zero else caught-fail) in
                                            {1746}let k_26: bitstring = (if v_314 then catch-fail(psk2b(psk_41)) else caught-fail) in
                                            {1747}let v_315: bool = not-caught-fail(k_26) in
                                            {1748}let early_secret_25: bitstring = (if v_314 then catch-fail((if v_315 then hmac(@7_tls_h,s_31,k_26) else fail-any)) else caught-fail) in
                                            {1749}let v_316: bool = not-caught-fail(early_secret_25) in
                                            {1750}let l_97: label = (if v_316 then tls13_ext_res_binder else caught-fail) in
                                            {1751}let m_31: bitstring = (if v_316 then zero else caught-fail) in
                                            {1752}let h_96: bitstring = (if v_316 then catch-fail(hash(@7_tls_h,m_31)) else caught-fail) in
                                            {1753}let v_317: bool = not-caught-fail(h_96) in
                                            {1754}let x_107: bitstring = (if v_317 then (l_97,h_96) else caught-fail) in
                                            {1755}let binder_key_17: bitstring = (if v_316 then catch-fail((if v_317 then hmac(@7_tls_h,early_secret_25,x_107) else fail-any)) else caught-fail) in
                                            {1756}let v_318: bool = not-caught-fail(binder_key_17) in
                                            {1757}let v_319: bitstring = (if v_314 then catch-fail((if v_316 then (if v_318 then (early_secret_25,binder_key_17) else fail-any) else fail-any)) else caught-fail) in
                                            {1758}let v_320: bool = (not-caught-fail(v_319) && success?(1-proj-2-tuple(v_319))) in
                                            {1759}let kb_17: mac_key = (if v_320 then 2-proj-2-tuple(v_319) else caught-fail) in
                                            {1760}let es_24: bitstring = (if v_320 then 1-proj-2-tuple(v_319) else caught-fail) in
                                            {1761}let v_321: bitstring = (if not(v_314) then catch-fail(psk_data'_5) else caught-fail) in
                                            {1762}let v_322: bool = (not-caught-fail(v_321) && success?(1-proj-4-tuple(v_321))) in
                                            {1763}let is_safe_15: bool = (if v_322 then 4-proj-4-tuple(v_321) else caught-fail) in
                                            {1764}let es_25: bitstring = (if v_322 then 3-proj-4-tuple(v_321) else caught-fail) in
                                            {1765}let id_21: identityPsk = (if v_322 then 2-proj-4-tuple(v_321) else caught-fail) in
                                            {1766}let psk_42: preSharedKey = (if v_322 then 1-proj-4-tuple(v_321) else caught-fail) in
                                            {1767}let (psk_43: preSharedKey,early_secret_26: bitstring,valid_6: bool,safe_psk_11: bool) = (if v_314 then (if v_320 then (NoPsk,es_24,true,false) else fail-any) else (if v_322 then (psk_42,es_25,((psk_42 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_16)),is_safe_15) else fail-any)) in
                                            {1768}event Client_PSKChoosen(@7_id_client,psk_43,safe_psk_11);
                                            {1769}if valid_6 then
                                            (
                                                {1770}let gxy_13: element = catch-fail(dh_decap_fun(g_6,gy_7,x_106)) in
                                                {1771}let v_323: bool = not-caught-fail(gxy_13) in
                                                {1772}new s_32[]: seed;
                                                {1773}let gxy_14: element = (if v_323 then gxy_13 else dh_f(s_32)) in
                                                {1774}event Client_DH_gxy(@7_id_client,gxy_14);
                                                {1775}let l_98: label = tls13_derived in
                                                {1776}let m_32: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                {1777}let v_324: bool = not-caught-fail(m_32) in
                                                {1778}let h_97: bitstring = (if v_324 then catch-fail(hash(@7_tls_h,m_32)) else caught-fail) in
                                                {1779}let v_325: bool = not-caught-fail(h_97) in
                                                {1780}let x_108: bitstring = (if v_325 then (l_98,h_97) else caught-fail) in
                                                {1781}let extra_17: bitstring = catch-fail((if v_324 then (if v_325 then hmac(@7_tls_h,early_secret_26,x_108) else fail-any) else fail-any)) in
                                                {1782}let v_326: bool = not-caught-fail(extra_17) in
                                                {1783}let handshake_secret_7: bitstring = (if v_326 then hmac(@7_tls_h,extra_17,gxy_14) else fail-any) in
                                                {1784}let l_99: label = tls13_derived in
                                                {1785}let m_33: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                {1786}let v_327: bool = not-caught-fail(m_33) in
                                                {1787}let h_98: bitstring = (if v_327 then catch-fail(hash(@7_tls_h,m_33)) else caught-fail) in
                                                {1788}let v_328: bool = not-caught-fail(h_98) in
                                                {1789}let x_109: bitstring = (if v_328 then (l_99,h_98) else caught-fail) in
                                                {1790}let extra_18: bitstring = catch-fail((if v_327 then (if v_328 then hmac(@7_tls_h,handshake_secret_7,x_109) else fail-any) else fail-any)) in
                                                {1791}let v_329: bool = not-caught-fail(extra_18) in
                                                {1792}let k_27: bitstring = (if v_329 then zero else caught-fail) in
                                                {1793}let master_secret_21: bitstring = (if v_329 then catch-fail(hmac(@7_tls_h,handshake_secret_7,k_27)) else caught-fail) in
                                                {1794}let v_330: bool = not-caught-fail(master_secret_21) in
                                                {1795}let l_100: label = (if v_330 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {1796}let h_99: bitstring = (if v_330 then catch-fail(hash(@7_tls_h,cur_log2_18)) else caught-fail) in
                                                {1797}let v_331: bool = not-caught-fail(h_99) in
                                                {1798}let x_110: bitstring = (if v_331 then (l_100,h_99) else caught-fail) in
                                                {1799}let client_hts_7: bitstring = (if v_330 then catch-fail((if v_331 then hmac(@7_tls_h,handshake_secret_7,x_110) else fail-any)) else caught-fail) in
                                                {1800}let v_332: bool = not-caught-fail(client_hts_7) in
                                                {1801}let l_101: label = (if v_332 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {1802}let h_100: bitstring = (if v_332 then catch-fail(hash(@7_tls_h,cur_log2_18)) else caught-fail) in
                                                {1803}let v_333: bool = not-caught-fail(h_100) in
                                                {1804}let x_111: bitstring = (if v_333 then (l_101,h_100) else caught-fail) in
                                                {1805}let server_hts_7: bitstring = (if v_332 then catch-fail((if v_333 then hmac(@7_tls_h,handshake_secret_7,x_111) else fail-any)) else caught-fail) in
                                                {1806}let v_334: bool = not-caught-fail(server_hts_7) in
                                                {1807}let l_102: label = (if v_334 then tls13_key else caught-fail) in
                                                {1808}let h_101: bitstring = (if v_334 then zero else caught-fail) in
                                                {1809}let x_112: bitstring = (if v_334 then (l_102,h_101) else caught-fail) in
                                                {1810}let client_wkh_7: bitstring = (if v_334 then catch-fail(hmac(@7_tls_h,client_hts_7,x_112)) else caught-fail) in
                                                {1811}let v_335: bool = not-caught-fail(client_wkh_7) in
                                                {1812}let l_103: label = (if v_335 then tls13_key else caught-fail) in
                                                {1813}let h_102: bitstring = (if v_335 then zero else caught-fail) in
                                                {1814}let x_113: bitstring = (if v_335 then (l_103,h_102) else caught-fail) in
                                                {1815}let server_wkh_7: bitstring = (if v_335 then catch-fail(hmac(@7_tls_h,server_hts_7,x_113)) else caught-fail) in
                                                {1816}let v_336: bool = not-caught-fail(server_wkh_7) in
                                                {1817}let l_104: label = (if v_336 then tls13_finished else caught-fail) in
                                                {1818}let h_103: bitstring = (if v_336 then zero else caught-fail) in
                                                {1819}let x_114: bitstring = (if v_336 then (l_104,h_103) else caught-fail) in
                                                {1820}let client_fk_7: bitstring = (if v_336 then catch-fail(hmac(@7_tls_h,client_hts_7,x_114)) else caught-fail) in
                                                {1821}let v_337: bool = not-caught-fail(client_fk_7) in
                                                {1822}let l_105: label = (if v_337 then tls13_finished else caught-fail) in
                                                {1823}let h_104: bitstring = (if v_337 then zero else caught-fail) in
                                                {1824}let x_115: bitstring = (if v_337 then (l_105,h_104) else caught-fail) in
                                                {1825}let server_fk_7: bitstring = (if v_337 then catch-fail(hmac(@7_tls_h,server_hts_7,x_115)) else caught-fail) in
                                                {1826}let v_338: bool = not-caught-fail(server_fk_7) in
                                                {1827}let (master_secret_22: bitstring,chk_14: aead_key,shk_13: aead_key,cfin_14: mac_key,sfin_13: mac_key) = (if v_329 then (if v_330 then (if v_332 then (if v_334 then (if v_335 then (if v_336 then (if v_337 then (if v_338 then (master_secret_21,client_wkh_7,server_wkh_7,client_fk_7,server_fk_7) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {1828}event Client_chk(@7_id_client,chk_14);
                                                {1829}event Client_shk(@7_id_client,shk_13);
                                                {1830}event Client_cfin(@7_id_client,cfin_14);
                                                {1831}event Client_sfin(@7_id_client,sfin_13);
                                                {1832}in(io, enc_ee_msg_6: bitstring);
                                                {1833}let ee_msg_7: msg = aead_dec(@7_tls_a,shk_13,0,zero,enc_ee_msg_6) in
                                                {1834}let EE(ech_ee_6: echExt,extra_ee_6: extraExt) = ee_msg_7 in
                                                {1835}let cur_log2_19: bitstring = (cur_log2_18,ee_msg_7) in
                                                {1836}out(ch_client_after_EE, (@7_id_client,ArgsClientAfterEE(cr'_5,sr_16,@7_tls_h,@7_tls_a,c_dom_5,s_dom_12,psk_43,safe_psk_11,@7_comp_psk,master_secret_22,chk_14,0,shk_13,1,cfin_14,sfin_13,cur_log2_19)))
                                            )
                                            else
                                                {1837}out(io, illegal_parameter)
                                        )
                                        else
                                            {1838}out(io, illegal_parameter)
                                )
                                else
                                    {1839}out(io, unexpected_message)
                        )
                        else
                            {1840}out(io, illegal_parameter)
                    )
                    else
                        {1841}if send_kex then
                        (
                            {1842}let (x_116: bitstring,g_7: group) = kex_data_3 in
                            {1843}let (psk_offer_7: preSharedKey,id_offer_7: identityPsk,es_offer_7: bitstring,is_safe_offer_7: bool) = psk_data_6 in
                            {1844}event Client_PSKOffer(@7_id_client,psk_offer_7,id_offer_7,is_safe_offer_7);
                            {1845}event Client_Rand_client(@7_id_client,cr_12);
                            {1846}event Client_DH_client(@7_id_client,dh_pub(g_7,x_116));
                            {1847}event Client_server_domain(@7_id_client,s_dom_12);
                            {1848}let SH(sr_17: bytes32,mode_9: params) = server_hello_2 in
                            {1849}event Client_Rand_server(@7_id_client,sr_17);
                            {1850}let nego(=TLS13,=@7_tls_h,=@7_tls_a,server_kex_ext(DHE_kex(=g_7,gy_8: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_17: preSharedKeyExt) = mode_9 in
                            (
                                {1851}let cur_log2_20: bitstring = (cur_log2_13,server_hello_2) in
                                {1852}event Client_DH_server(@7_id_client,gy_8);
                                {1853}let v_339: bool = (psk_ext_17 = empty_psk_ext) in
                                {1854}let psk_44: preSharedKey = (if v_339 then NoPsk else caught-fail) in
                                {1855}let s_33: bitstring = (if v_339 then zero else caught-fail) in
                                {1856}let k_28: bitstring = (if v_339 then catch-fail(psk2b(psk_44)) else caught-fail) in
                                {1857}let v_340: bool = not-caught-fail(k_28) in
                                {1858}let early_secret_27: bitstring = (if v_339 then catch-fail((if v_340 then hmac(@7_tls_h,s_33,k_28) else fail-any)) else caught-fail) in
                                {1859}let v_341: bool = not-caught-fail(early_secret_27) in
                                {1860}let l_106: label = (if v_341 then tls13_ext_res_binder else caught-fail) in
                                {1861}let m_34: bitstring = (if v_341 then zero else caught-fail) in
                                {1862}let h_105: bitstring = (if v_341 then catch-fail(hash(@7_tls_h,m_34)) else caught-fail) in
                                {1863}let v_342: bool = not-caught-fail(h_105) in
                                {1864}let x_117: bitstring = (if v_342 then (l_106,h_105) else caught-fail) in
                                {1865}let binder_key_18: bitstring = (if v_341 then catch-fail((if v_342 then hmac(@7_tls_h,early_secret_27,x_117) else fail-any)) else caught-fail) in
                                {1866}let v_343: bool = not-caught-fail(binder_key_18) in
                                {1867}let v_344: bitstring = (if v_339 then catch-fail((if v_341 then (if v_343 then (early_secret_27,binder_key_18) else fail-any) else fail-any)) else caught-fail) in
                                {1868}let v_345: bool = (not-caught-fail(v_344) && success?(1-proj-2-tuple(v_344))) in
                                {1869}let kb_18: mac_key = (if v_345 then 2-proj-2-tuple(v_344) else caught-fail) in
                                {1870}let es_26: bitstring = (if v_345 then 1-proj-2-tuple(v_344) else caught-fail) in
                                {1871}let v_346: bitstring = (if not(v_339) then catch-fail(psk_data_6) else caught-fail) in
                                {1872}let v_347: bool = (not-caught-fail(v_346) && success?(1-proj-4-tuple(v_346))) in
                                {1873}let is_safe_16: bool = (if v_347 then 4-proj-4-tuple(v_346) else caught-fail) in
                                {1874}let es_27: bitstring = (if v_347 then 3-proj-4-tuple(v_346) else caught-fail) in
                                {1875}let id_22: identityPsk = (if v_347 then 2-proj-4-tuple(v_346) else caught-fail) in
                                {1876}let psk_45: preSharedKey = (if v_347 then 1-proj-4-tuple(v_346) else caught-fail) in
                                {1877}let (psk_46: preSharedKey,early_secret_28: bitstring,valid_7: bool,safe_psk_12: bool) = (if v_339 then (if v_345 then (NoPsk,es_26,true,false) else fail-any) else (if v_347 then (psk_45,es_27,((psk_45 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_17)),is_safe_16) else fail-any)) in
                                {1878}event Client_PSKChoosen(@7_id_client,psk_46,safe_psk_12);
                                {1879}if valid_7 then
                                (
                                    {1880}let gxy_15: element = catch-fail(dh_decap_fun(g_7,gy_8,x_116)) in
                                    {1881}let v_348: bool = not-caught-fail(gxy_15) in
                                    {1882}new s_34[]: seed;
                                    {1883}let gxy_16: element = (if v_348 then gxy_15 else dh_f(s_34)) in
                                    {1884}event Client_DH_gxy(@7_id_client,gxy_16);
                                    {1885}let l_107: label = tls13_derived in
                                    {1886}let m_35: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                    {1887}let v_349: bool = not-caught-fail(m_35) in
                                    {1888}let h_106: bitstring = (if v_349 then catch-fail(hash(@7_tls_h,m_35)) else caught-fail) in
                                    {1889}let v_350: bool = not-caught-fail(h_106) in
                                    {1890}let x_118: bitstring = (if v_350 then (l_107,h_106) else caught-fail) in
                                    {1891}let extra_19: bitstring = catch-fail((if v_349 then (if v_350 then hmac(@7_tls_h,early_secret_28,x_118) else fail-any) else fail-any)) in
                                    {1892}let v_351: bool = not-caught-fail(extra_19) in
                                    {1893}let handshake_secret_8: bitstring = (if v_351 then hmac(@7_tls_h,extra_19,gxy_16) else fail-any) in
                                    {1894}let l_108: label = tls13_derived in
                                    {1895}let m_36: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                    {1896}let v_352: bool = not-caught-fail(m_36) in
                                    {1897}let h_107: bitstring = (if v_352 then catch-fail(hash(@7_tls_h,m_36)) else caught-fail) in
                                    {1898}let v_353: bool = not-caught-fail(h_107) in
                                    {1899}let x_119: bitstring = (if v_353 then (l_108,h_107) else caught-fail) in
                                    {1900}let extra_20: bitstring = catch-fail((if v_352 then (if v_353 then hmac(@7_tls_h,handshake_secret_8,x_119) else fail-any) else fail-any)) in
                                    {1901}let v_354: bool = not-caught-fail(extra_20) in
                                    {1902}let k_29: bitstring = (if v_354 then zero else caught-fail) in
                                    {1903}let master_secret_23: bitstring = (if v_354 then catch-fail(hmac(@7_tls_h,handshake_secret_8,k_29)) else caught-fail) in
                                    {1904}let v_355: bool = not-caught-fail(master_secret_23) in
                                    {1905}let l_109: label = (if v_355 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {1906}let h_108: bitstring = (if v_355 then catch-fail(hash(@7_tls_h,cur_log2_20)) else caught-fail) in
                                    {1907}let v_356: bool = not-caught-fail(h_108) in
                                    {1908}let x_120: bitstring = (if v_356 then (l_109,h_108) else caught-fail) in
                                    {1909}let client_hts_8: bitstring = (if v_355 then catch-fail((if v_356 then hmac(@7_tls_h,handshake_secret_8,x_120) else fail-any)) else caught-fail) in
                                    {1910}let v_357: bool = not-caught-fail(client_hts_8) in
                                    {1911}let l_110: label = (if v_357 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {1912}let h_109: bitstring = (if v_357 then catch-fail(hash(@7_tls_h,cur_log2_20)) else caught-fail) in
                                    {1913}let v_358: bool = not-caught-fail(h_109) in
                                    {1914}let x_121: bitstring = (if v_358 then (l_110,h_109) else caught-fail) in
                                    {1915}let server_hts_8: bitstring = (if v_357 then catch-fail((if v_358 then hmac(@7_tls_h,handshake_secret_8,x_121) else fail-any)) else caught-fail) in
                                    {1916}let v_359: bool = not-caught-fail(server_hts_8) in
                                    {1917}let l_111: label = (if v_359 then tls13_key else caught-fail) in
                                    {1918}let h_110: bitstring = (if v_359 then zero else caught-fail) in
                                    {1919}let x_122: bitstring = (if v_359 then (l_111,h_110) else caught-fail) in
                                    {1920}let client_wkh_8: bitstring = (if v_359 then catch-fail(hmac(@7_tls_h,client_hts_8,x_122)) else caught-fail) in
                                    {1921}let v_360: bool = not-caught-fail(client_wkh_8) in
                                    {1922}let l_112: label = (if v_360 then tls13_key else caught-fail) in
                                    {1923}let h_111: bitstring = (if v_360 then zero else caught-fail) in
                                    {1924}let x_123: bitstring = (if v_360 then (l_112,h_111) else caught-fail) in
                                    {1925}let server_wkh_8: bitstring = (if v_360 then catch-fail(hmac(@7_tls_h,server_hts_8,x_123)) else caught-fail) in
                                    {1926}let v_361: bool = not-caught-fail(server_wkh_8) in
                                    {1927}let l_113: label = (if v_361 then tls13_finished else caught-fail) in
                                    {1928}let h_112: bitstring = (if v_361 then zero else caught-fail) in
                                    {1929}let x_124: bitstring = (if v_361 then (l_113,h_112) else caught-fail) in
                                    {1930}let client_fk_8: bitstring = (if v_361 then catch-fail(hmac(@7_tls_h,client_hts_8,x_124)) else caught-fail) in
                                    {1931}let v_362: bool = not-caught-fail(client_fk_8) in
                                    {1932}let l_114: label = (if v_362 then tls13_finished else caught-fail) in
                                    {1933}let h_113: bitstring = (if v_362 then zero else caught-fail) in
                                    {1934}let x_125: bitstring = (if v_362 then (l_114,h_113) else caught-fail) in
                                    {1935}let server_fk_8: bitstring = (if v_362 then catch-fail(hmac(@7_tls_h,server_hts_8,x_125)) else caught-fail) in
                                    {1936}let v_363: bool = not-caught-fail(server_fk_8) in
                                    {1937}let (master_secret_24: bitstring,chk_15: aead_key,shk_14: aead_key,cfin_15: mac_key,sfin_14: mac_key) = (if v_354 then (if v_355 then (if v_357 then (if v_359 then (if v_360 then (if v_361 then (if v_362 then (if v_363 then (master_secret_23,client_wkh_8,server_wkh_8,client_fk_8,server_fk_8) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {1938}event Client_chk(@7_id_client,chk_15);
                                    {1939}event Client_shk(@7_id_client,shk_14);
                                    {1940}event Client_cfin(@7_id_client,cfin_15);
                                    {1941}event Client_sfin(@7_id_client,sfin_14);
                                    {1942}in(io, enc_ee_msg_7: bitstring);
                                    {1943}let ee_msg_8: msg = aead_dec(@7_tls_a,shk_14,0,zero,enc_ee_msg_7) in
                                    {1944}let EE(ech_ee_7: echExt,extra_ee_7: extraExt) = ee_msg_8 in
                                    {1945}let cur_log2_21: bitstring = (cur_log2_20,ee_msg_8) in
                                    {1946}out(ch_client_after_EE, (@7_id_client,ArgsClientAfterEE(cr_12,sr_17,@7_tls_h,@7_tls_a,c_dom_5,s_dom_12,psk_46,safe_psk_12,@7_comp_psk,master_secret_24,chk_15,0,shk_14,1,cfin_15,sfin_14,cur_log2_21)))
                                )
                                else
                                    {1947}out(io, illegal_parameter)
                            )
                            else
                                {1948}out(io, illegal_parameter)
                        )
                        else
                            {1949}out(io, illegal_parameter)
                )
                else
                    {1950}out(io, unexpected_message)
            )
    )
    else
        {1952}let psk_47: preSharedKey = NoPsk in
        {1953}let s_35: bitstring = zero in
        {1954}let k_30: bitstring = catch-fail(psk2b(psk_47)) in
        {1955}let v_364: bool = not-caught-fail(k_30) in
        {1956}let early_secret_29: bitstring = catch-fail((if v_364 then hmac(@7_tls_h,s_35,k_30) else fail-any)) in
        {1957}let v_365: bool = not-caught-fail(early_secret_29) in
        {1958}let l_115: label = (if v_365 then tls13_ext_res_binder else caught-fail) in
        {1959}let m_37: bitstring = (if v_365 then zero else caught-fail) in
        {1960}let h_114: bitstring = (if v_365 then catch-fail(hash(@7_tls_h,m_37)) else caught-fail) in
        {1961}let v_366: bool = not-caught-fail(h_114) in
        {1962}let x_126: bitstring = (if v_366 then (l_115,h_114) else caught-fail) in
        {1963}let binder_key_19: bitstring = (if v_365 then catch-fail((if v_366 then hmac(@7_tls_h,early_secret_29,x_126) else fail-any)) else caught-fail) in
        {1964}let v_367: bool = not-caught-fail(binder_key_19) in
        {1965}let v_368: bitstring = catch-fail((if v_365 then (if v_367 then (early_secret_29,binder_key_19) else fail-any) else fail-any)) in
        {1966}let v_369: bool = (not-caught-fail(v_368) && success?(1-proj-2-tuple(v_368))) in
        {1967}let kb_19: mac_key = (if v_369 then 2-proj-2-tuple(v_368) else caught-fail) in
        {1968}let es_28: bitstring = (if v_369 then 1-proj-2-tuple(v_368) else caught-fail) in
        {1969}let v_370: bitstring = catch-fail((if v_369 then (empty_psk_ext,(NoPsk,zero,es_28,false)) else fail-any)) in
        {1970}let v_371: bool = (not-caught-fail(v_370) && success?(1-proj-2-tuple(v_370))) in
        {1971}let psk_data_10: bitstring = (if v_371 then 2-proj-2-tuple(v_370) else caught-fail) in
        {1972}let psk_ext_18: preSharedKeyExt = (if v_371 then 1-proj-2-tuple(v_370) else caught-fail) in
        {1973}let offer_16: params = (if v_371 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_1,SNI(s_dom_12),empty_ech_ext,empty_extra_ext,psk_ext_18) else caught-fail) in
        {1974}let (client_hello_5: msg,cr_14: bytes32,kex_data_5: bitstring,psk_data_11: bitstring) = (if v_371 then (CH(cr_9,offer_16),cr_9,kex_data,psk_data_10) else fail-any) in
        {1975}event ClientOffersAead(cr_14,@7_tls_a);
        {1976}event ClientOffersHash(cr_14,@7_tls_h);
        {1977}event ClientOffersGroup(cr_14,@7_tls_g);
        {1978}out(io, client_hello_5);
        {1979}let cur_log2_22: bitstring = (cur_log_8,client_hello_5) in
        {1980}let (psk_48: preSharedKey,id_23: identityPsk,es_29: bitstring,safe_psk_13: bool) = psk_data_11 in
        (
            {1981}if (false && (psk_48 ≠ NoPsk)) then
            {1982}let client_hello_6: bitstring = (zero,client_hello_5) in
            {1983}let l_116: label = tls13_client_early_traffic_secret in
            {1984}let h_115: bitstring = catch-fail(hash(@7_tls_h,client_hello_6)) in
            {1985}let v_372: bool = not-caught-fail(h_115) in
            {1986}let x_127: bitstring = (if v_372 then (l_116,h_115) else caught-fail) in
            {1987}let atsc0_3: bitstring = catch-fail((if v_372 then hmac(@7_tls_h,es_29,x_127) else fail-any)) in
            {1988}let v_373: bool = not-caught-fail(atsc0_3) in
            {1989}let l_117: label = (if v_373 then tls13_key else caught-fail) in
            {1990}let h_116: bitstring = (if v_373 then zero else caught-fail) in
            {1991}let x_128: bitstring = (if v_373 then (l_117,h_116) else caught-fail) in
            {1992}let kc0_3: bitstring = (if v_373 then catch-fail(hmac(@7_tls_h,atsc0_3,x_128)) else caught-fail) in
            {1993}let v_374: bool = not-caught-fail(kc0_3) in
            {1994}let l_118: label = (if v_374 then tls13_early_exporter_master_secret else caught-fail) in
            {1995}let h_117: bitstring = (if v_374 then catch-fail(hash(@7_tls_h,client_hello_6)) else caught-fail) in
            {1996}let v_375: bool = not-caught-fail(h_117) in
            {1997}let x_129: bitstring = (if v_375 then (l_118,h_117) else caught-fail) in
            {1998}let ems0_6: bitstring = (if v_374 then catch-fail((if v_375 then hmac(@7_tls_h,es_29,x_129) else fail-any)) else caught-fail) in
            {1999}let v_376: bool = not-caught-fail(ems0_6) in
            {2000}let (wkc0_3: aead_key,ems0_7: bitstring) = (if v_373 then (if v_374 then (if v_376 then (kc0_3,ems0_6) else fail-any) else fail-any) else fail-any) in
            {2001}!
            {2002}in(io, (i_3: nat,ad_3: bitstring));
            {2003}if is_nat(i_3) then
            {2004}new msg_ed_2[]: bitstring;
            {2005}let enc_ed_2: bitstring = aead_enc(@7_tls_a,wkc0_3,i_3,ad_3,msg_ed_2) in
            {2006}new st_12: stamp;
            {2007}event ClientSequenceClient0RTTDataWriteKey(@7_id_client,st_12,i_3);
            {2008}event ClientSends0(@7_id_client,cr_14,psk_48,i_3,ad_3,msg_ed_2);
            {2009}out(io, enc_ed_2)
        ) | (
            {2010}in(io, server_hello_3: msg);
            {2011}let SH(sr_18: bytes32,mode_10: params) = server_hello_3 in
            (
                {2012}event ClientEchAcceptance(@7_id_client,false);
                {2013}if (false && (sr_18 = B32(HRR24,HRR8))) then
                (
                    {2014}if ((mode_10 = nego(TLS13,@7_tls_h,@7_tls_a,hrr_kex_ext(@7_tls_g),empty_sni_ext,empty_ech_ext,empty_extra_ext,empty_psk_ext)) && (send_kex ≠ true)) then
                    (
                        {2015}let cur_log3_4: bitstring = (cur_log2_22,server_hello_3) in
                        {2016}let send_kex_3: bool = true in
                        {2017}new rand24_4[]: bytes24;
                        {2018}new rand8_4[]: bytes8;
                        {2019}let cr_15: bytes32 = B32(rand24_4,rand8_4) in
                        {2020}new s_36[]: seed;
                        {2021}let gx_8: element = dh_pub(@7_tls_g,dh_k(s_36)) in
                        {2022}let v_377: bitstring = (dh_k(s_36),gx_8) in
                        {2023}let v_378: bool = success?(1-proj-2-tuple(v_377)) in
                        {2024}let gx_9: element = (if v_378 then 2-proj-2-tuple(v_377) else caught-fail) in
                        {2025}let x_130: bitstring = (if v_378 then 1-proj-2-tuple(v_377) else caught-fail) in
                        {2026}let kex_3: kex_alg = (if v_378 then (if send_kex_3 then DHE_kex(@7_tls_g,gx_9) else DHE_group(@7_tls_g)) else caught-fail) in
                        {2027}let (kex_ext_4: keyShareExt,kex_data_6: bitstring) = (if v_378 then (client_kex_ext(kex_3),(x_130,@7_tls_g)) else fail-any) in
                        {2028}let ech_ext_5: echExt = empty_ech_ext in
                        {2029}let extra_21: extraExt = empty_extra_ext in
                        {2030}if @7_use_psk then
                        (
                            {2031}let (psk_49: preSharedKey,id_24: identityPsk,old_es_3: bitstring,is_safe_17: bool) = psk_data_11 in
                            (
                                {2032}let offer_17: params = nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_4,SNI(s_dom_12),ech_ext_5,extra_21,trunc_client_psk_ext(id_24)) in
                                {2033}let cur_log'_8: bitstring = (cur_log3_4,CH(cr_15,offer_17)) in
                                {2034}let s_37: bitstring = zero in
                                {2035}let k_31: bitstring = catch-fail(psk2b(psk_49)) in
                                {2036}let v_379: bool = not-caught-fail(k_31) in
                                {2037}let early_secret_30: bitstring = catch-fail((if v_379 then hmac(@7_tls_h,s_37,k_31) else fail-any)) in
                                {2038}let v_380: bool = not-caught-fail(early_secret_30) in
                                {2039}let l_119: label = (if v_380 then tls13_ext_res_binder else caught-fail) in
                                {2040}let m_38: bitstring = (if v_380 then zero else caught-fail) in
                                {2041}let h_118: bitstring = (if v_380 then catch-fail(hash(@7_tls_h,m_38)) else caught-fail) in
                                {2042}let v_381: bool = not-caught-fail(h_118) in
                                {2043}let x_131: bitstring = (if v_381 then (l_119,h_118) else caught-fail) in
                                {2044}let binder_key_20: bitstring = (if v_380 then catch-fail((if v_381 then hmac(@7_tls_h,early_secret_30,x_131) else fail-any)) else caught-fail) in
                                {2045}let v_382: bool = not-caught-fail(binder_key_20) in
                                {2046}let v_383: bitstring = catch-fail((if v_380 then (if v_382 then (early_secret_30,binder_key_20) else fail-any) else fail-any)) in
                                {2047}let v_384: bool = (not-caught-fail(v_383) && success?(1-proj-2-tuple(v_383))) in
                                {2048}let kb_20: mac_key = (if v_384 then 2-proj-2-tuple(v_383) else caught-fail) in
                                {2049}let es_30: bitstring = (if v_384 then 1-proj-2-tuple(v_383) else caught-fail) in
                                {2050}let binders_7: bitstring = (if v_384 then catch-fail(hmac(@7_tls_h,kb_20,cur_log'_8)) else caught-fail) in
                                {2051}let v_385: bool = not-caught-fail(binders_7) in
                                {2052}let v_386: bitstring = catch-fail((if v_384 then (if v_385 then (client_psk_ext(id_24,binders_7),(psk_49,id_24,es_30,is_safe_17)) else fail-any) else fail-any)) in
                                {2053}let v_387: bool = (not-caught-fail(v_386) && success?(1-proj-2-tuple(v_386))) in
                                {2054}let psk_data_12: bitstring = (if v_387 then 2-proj-2-tuple(v_386) else caught-fail) in
                                {2055}let psk_ext_19: preSharedKeyExt = (if v_387 then 1-proj-2-tuple(v_386) else caught-fail) in
                                {2056}let offer_18: params = (if v_387 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_4,SNI(s_dom_12),empty_ech_ext,empty_extra_ext,psk_ext_19) else caught-fail) in
                                {2057}let (client_hello'_6: msg,cr'_6: bytes32,kex_data'_6: bitstring,psk_data'_6: bitstring) = (if v_387 then (CH(cr_15,offer_18),cr_15,kex_data_6,psk_data_12) else fail-any) in
                                {2058}event ClientOffersAead(cr'_6,@7_tls_a);
                                {2059}event ClientOffersHash(cr'_6,@7_tls_h);
                                {2060}event ClientOffersGroup(cr'_6,@7_tls_g);
                                {2061}out(io, client_hello'_6);
                                {2062}let cur_log4_6: bitstring = (cur_log3_4,client_hello'_6) in
                                {2063}in(io, server_hello'_6: msg);
                                {2064}let SH(sr'_6: bytes32,mode'_6: params) = server_hello'_6 in
                                (
                                    {2065}if (sr'_6 = B32(HRR24,HRR8)) then
                                        {2066}out(io, unexpected_message)
                                    else
                                        {2067}let (x_132: bitstring,g_8: group) = kex_data'_6 in
                                        {2068}let (psk_offer_8: preSharedKey,id_offer_8: identityPsk,es_offer_8: bitstring,is_safe_offer_8: bool) = psk_data'_6 in
                                        {2069}event Client_PSKOffer(@7_id_client,psk_offer_8,id_offer_8,is_safe_offer_8);
                                        {2070}event Client_Rand_client(@7_id_client,cr'_6);
                                        {2071}event Client_DH_client(@7_id_client,dh_pub(g_8,x_132));
                                        {2072}event Client_server_domain(@7_id_client,s_dom_12);
                                        {2073}let SH(sr_19: bytes32,mode_11: params) = server_hello'_6 in
                                        {2074}event Client_Rand_server(@7_id_client,sr_19);
                                        {2075}let nego(=TLS13,=@7_tls_h,=@7_tls_a,server_kex_ext(DHE_kex(=g_8,gy_9: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_20: preSharedKeyExt) = mode_11 in
                                        (
                                            {2076}let cur_log2_23: bitstring = (cur_log4_6,server_hello'_6) in
                                            {2077}event Client_DH_server(@7_id_client,gy_9);
                                            {2078}let v_388: bool = (psk_ext_20 = empty_psk_ext) in
                                            {2079}let psk_50: preSharedKey = (if v_388 then NoPsk else caught-fail) in
                                            {2080}let s_38: bitstring = (if v_388 then zero else caught-fail) in
                                            {2081}let k_32: bitstring = (if v_388 then catch-fail(psk2b(psk_50)) else caught-fail) in
                                            {2082}let v_389: bool = not-caught-fail(k_32) in
                                            {2083}let early_secret_31: bitstring = (if v_388 then catch-fail((if v_389 then hmac(@7_tls_h,s_38,k_32) else fail-any)) else caught-fail) in
                                            {2084}let v_390: bool = not-caught-fail(early_secret_31) in
                                            {2085}let l_120: label = (if v_390 then tls13_ext_res_binder else caught-fail) in
                                            {2086}let m_39: bitstring = (if v_390 then zero else caught-fail) in
                                            {2087}let h_119: bitstring = (if v_390 then catch-fail(hash(@7_tls_h,m_39)) else caught-fail) in
                                            {2088}let v_391: bool = not-caught-fail(h_119) in
                                            {2089}let x_133: bitstring = (if v_391 then (l_120,h_119) else caught-fail) in
                                            {2090}let binder_key_21: bitstring = (if v_390 then catch-fail((if v_391 then hmac(@7_tls_h,early_secret_31,x_133) else fail-any)) else caught-fail) in
                                            {2091}let v_392: bool = not-caught-fail(binder_key_21) in
                                            {2092}let v_393: bitstring = (if v_388 then catch-fail((if v_390 then (if v_392 then (early_secret_31,binder_key_21) else fail-any) else fail-any)) else caught-fail) in
                                            {2093}let v_394: bool = (not-caught-fail(v_393) && success?(1-proj-2-tuple(v_393))) in
                                            {2094}let kb_21: mac_key = (if v_394 then 2-proj-2-tuple(v_393) else caught-fail) in
                                            {2095}let es_31: bitstring = (if v_394 then 1-proj-2-tuple(v_393) else caught-fail) in
                                            {2096}let v_395: bitstring = (if not(v_388) then catch-fail(psk_data'_6) else caught-fail) in
                                            {2097}let v_396: bool = (not-caught-fail(v_395) && success?(1-proj-4-tuple(v_395))) in
                                            {2098}let is_safe_18: bool = (if v_396 then 4-proj-4-tuple(v_395) else caught-fail) in
                                            {2099}let es_32: bitstring = (if v_396 then 3-proj-4-tuple(v_395) else caught-fail) in
                                            {2100}let id_25: identityPsk = (if v_396 then 2-proj-4-tuple(v_395) else caught-fail) in
                                            {2101}let psk_51: preSharedKey = (if v_396 then 1-proj-4-tuple(v_395) else caught-fail) in
                                            {2102}let (psk_52: preSharedKey,early_secret_32: bitstring,valid_8: bool,safe_psk_14: bool) = (if v_388 then (if v_394 then (NoPsk,es_31,true,false) else fail-any) else (if v_396 then (psk_51,es_32,((psk_51 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_20)),is_safe_18) else fail-any)) in
                                            {2103}event Client_PSKChoosen(@7_id_client,psk_52,safe_psk_14);
                                            {2104}if valid_8 then
                                            (
                                                {2105}let gxy_17: element = catch-fail(dh_decap_fun(g_8,gy_9,x_132)) in
                                                {2106}let v_397: bool = not-caught-fail(gxy_17) in
                                                {2107}new s_39[]: seed;
                                                {2108}let gxy_18: element = (if v_397 then gxy_17 else dh_f(s_39)) in
                                                {2109}event Client_DH_gxy(@7_id_client,gxy_18);
                                                {2110}let l_121: label = tls13_derived in
                                                {2111}let m_40: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                {2112}let v_398: bool = not-caught-fail(m_40) in
                                                {2113}let h_120: bitstring = (if v_398 then catch-fail(hash(@7_tls_h,m_40)) else caught-fail) in
                                                {2114}let v_399: bool = not-caught-fail(h_120) in
                                                {2115}let x_134: bitstring = (if v_399 then (l_121,h_120) else caught-fail) in
                                                {2116}let extra_22: bitstring = catch-fail((if v_398 then (if v_399 then hmac(@7_tls_h,early_secret_32,x_134) else fail-any) else fail-any)) in
                                                {2117}let v_400: bool = not-caught-fail(extra_22) in
                                                {2118}let handshake_secret_9: bitstring = (if v_400 then hmac(@7_tls_h,extra_22,gxy_18) else fail-any) in
                                                {2119}let l_122: label = tls13_derived in
                                                {2120}let m_41: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                {2121}let v_401: bool = not-caught-fail(m_41) in
                                                {2122}let h_121: bitstring = (if v_401 then catch-fail(hash(@7_tls_h,m_41)) else caught-fail) in
                                                {2123}let v_402: bool = not-caught-fail(h_121) in
                                                {2124}let x_135: bitstring = (if v_402 then (l_122,h_121) else caught-fail) in
                                                {2125}let extra_23: bitstring = catch-fail((if v_401 then (if v_402 then hmac(@7_tls_h,handshake_secret_9,x_135) else fail-any) else fail-any)) in
                                                {2126}let v_403: bool = not-caught-fail(extra_23) in
                                                {2127}let k_33: bitstring = (if v_403 then zero else caught-fail) in
                                                {2128}let master_secret_25: bitstring = (if v_403 then catch-fail(hmac(@7_tls_h,handshake_secret_9,k_33)) else caught-fail) in
                                                {2129}let v_404: bool = not-caught-fail(master_secret_25) in
                                                {2130}let l_123: label = (if v_404 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {2131}let h_122: bitstring = (if v_404 then catch-fail(hash(@7_tls_h,cur_log2_23)) else caught-fail) in
                                                {2132}let v_405: bool = not-caught-fail(h_122) in
                                                {2133}let x_136: bitstring = (if v_405 then (l_123,h_122) else caught-fail) in
                                                {2134}let client_hts_9: bitstring = (if v_404 then catch-fail((if v_405 then hmac(@7_tls_h,handshake_secret_9,x_136) else fail-any)) else caught-fail) in
                                                {2135}let v_406: bool = not-caught-fail(client_hts_9) in
                                                {2136}let l_124: label = (if v_406 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {2137}let h_123: bitstring = (if v_406 then catch-fail(hash(@7_tls_h,cur_log2_23)) else caught-fail) in
                                                {2138}let v_407: bool = not-caught-fail(h_123) in
                                                {2139}let x_137: bitstring = (if v_407 then (l_124,h_123) else caught-fail) in
                                                {2140}let server_hts_9: bitstring = (if v_406 then catch-fail((if v_407 then hmac(@7_tls_h,handshake_secret_9,x_137) else fail-any)) else caught-fail) in
                                                {2141}let v_408: bool = not-caught-fail(server_hts_9) in
                                                {2142}let l_125: label = (if v_408 then tls13_key else caught-fail) in
                                                {2143}let h_124: bitstring = (if v_408 then zero else caught-fail) in
                                                {2144}let x_138: bitstring = (if v_408 then (l_125,h_124) else caught-fail) in
                                                {2145}let client_wkh_9: bitstring = (if v_408 then catch-fail(hmac(@7_tls_h,client_hts_9,x_138)) else caught-fail) in
                                                {2146}let v_409: bool = not-caught-fail(client_wkh_9) in
                                                {2147}let l_126: label = (if v_409 then tls13_key else caught-fail) in
                                                {2148}let h_125: bitstring = (if v_409 then zero else caught-fail) in
                                                {2149}let x_139: bitstring = (if v_409 then (l_126,h_125) else caught-fail) in
                                                {2150}let server_wkh_9: bitstring = (if v_409 then catch-fail(hmac(@7_tls_h,server_hts_9,x_139)) else caught-fail) in
                                                {2151}let v_410: bool = not-caught-fail(server_wkh_9) in
                                                {2152}let l_127: label = (if v_410 then tls13_finished else caught-fail) in
                                                {2153}let h_126: bitstring = (if v_410 then zero else caught-fail) in
                                                {2154}let x_140: bitstring = (if v_410 then (l_127,h_126) else caught-fail) in
                                                {2155}let client_fk_9: bitstring = (if v_410 then catch-fail(hmac(@7_tls_h,client_hts_9,x_140)) else caught-fail) in
                                                {2156}let v_411: bool = not-caught-fail(client_fk_9) in
                                                {2157}let l_128: label = (if v_411 then tls13_finished else caught-fail) in
                                                {2158}let h_127: bitstring = (if v_411 then zero else caught-fail) in
                                                {2159}let x_141: bitstring = (if v_411 then (l_128,h_127) else caught-fail) in
                                                {2160}let server_fk_9: bitstring = (if v_411 then catch-fail(hmac(@7_tls_h,server_hts_9,x_141)) else caught-fail) in
                                                {2161}let v_412: bool = not-caught-fail(server_fk_9) in
                                                {2162}let (master_secret_26: bitstring,chk_16: aead_key,shk_15: aead_key,cfin_16: mac_key,sfin_15: mac_key) = (if v_403 then (if v_404 then (if v_406 then (if v_408 then (if v_409 then (if v_410 then (if v_411 then (if v_412 then (master_secret_25,client_wkh_9,server_wkh_9,client_fk_9,server_fk_9) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {2163}event Client_chk(@7_id_client,chk_16);
                                                {2164}event Client_shk(@7_id_client,shk_15);
                                                {2165}event Client_cfin(@7_id_client,cfin_16);
                                                {2166}event Client_sfin(@7_id_client,sfin_15);
                                                {2167}in(io, enc_ee_msg_8: bitstring);
                                                {2168}let ee_msg_9: msg = aead_dec(@7_tls_a,shk_15,0,zero,enc_ee_msg_8) in
                                                {2169}let EE(ech_ee_8: echExt,extra_ee_8: extraExt) = ee_msg_9 in
                                                {2170}let cur_log2_24: bitstring = (cur_log2_23,ee_msg_9) in
                                                {2171}out(ch_client_after_EE, (@7_id_client,ArgsClientAfterEE(cr'_6,sr_19,@7_tls_h,@7_tls_a,c_dom_5,s_dom_12,psk_52,safe_psk_14,@7_comp_psk,master_secret_26,chk_16,0,shk_15,1,cfin_16,sfin_15,cur_log2_24)))
                                            )
                                            else
                                                {2172}out(io, illegal_parameter)
                                        )
                                        else
                                            {2173}out(io, illegal_parameter)
                                )
                                else
                                    {2174}out(io, unexpected_message)
                            )
                            else
                                {2327}get pre_shared_keys(c_dom'_5: domain,=s_dom_12,=@7_tls_h,id_26: identityPsk,psk_53: preSharedKey,idP_7: idProc,is_safe_19: bool) in
                                {2175}event Selected_one_time_used_psk(@7_id_client,psk_53,is_safe_19);
                                {2176}event Selected_psk(c_dom_5,c_dom'_5,idP_7,is_safe_19);
                                {2177}event Selected_psk_no_missmatch(@7_id_client,s_dom_12,@7_tls_h,psk_53,id_26);
                                {2178}event Selected_psk_with_ID(c_dom_5,c_dom'_5,id_26,idP_7,is_safe_19);
                                {2179}let v_413: bitstring = (id_26,psk_53,is_safe_19) in
                                {2180}let v_414: bool = success?(1-proj-3-tuple(v_413)) in
                                {2181}let is_safe_20: bool = (if v_414 then 3-proj-3-tuple(v_413) else caught-fail) in
                                {2182}let psk_54: preSharedKey = (if v_414 then 2-proj-3-tuple(v_413) else caught-fail) in
                                {2183}let id_27: identityPsk = (if v_414 then 1-proj-3-tuple(v_413) else caught-fail) in
                                {2184}let offer_19: params = (if v_414 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_4,SNI(s_dom_12),ech_ext_5,extra_21,trunc_client_psk_ext(id_27)) else caught-fail) in
                                {2185}let cur_log'_9: bitstring = (if v_414 then (cur_log3_4,CH(cr_15,offer_19)) else caught-fail) in
                                {2186}let s_40: bitstring = (if v_414 then zero else caught-fail) in
                                {2187}let k_34: bitstring = (if v_414 then catch-fail(psk2b(psk_54)) else caught-fail) in
                                {2188}let v_415: bool = not-caught-fail(k_34) in
                                {2189}let early_secret_33: bitstring = (if v_414 then catch-fail((if v_415 then hmac(@7_tls_h,s_40,k_34) else fail-any)) else caught-fail) in
                                {2190}let v_416: bool = not-caught-fail(early_secret_33) in
                                {2191}let l_129: label = (if v_416 then tls13_ext_res_binder else caught-fail) in
                                {2192}let m_42: bitstring = (if v_416 then zero else caught-fail) in
                                {2193}let h_128: bitstring = (if v_416 then catch-fail(hash(@7_tls_h,m_42)) else caught-fail) in
                                {2194}let v_417: bool = not-caught-fail(h_128) in
                                {2195}let x_142: bitstring = (if v_417 then (l_129,h_128) else caught-fail) in
                                {2196}let binder_key_22: bitstring = (if v_416 then catch-fail((if v_417 then hmac(@7_tls_h,early_secret_33,x_142) else fail-any)) else caught-fail) in
                                {2197}let v_418: bool = not-caught-fail(binder_key_22) in
                                {2198}let v_419: bitstring = (if v_414 then catch-fail((if v_416 then (if v_418 then (early_secret_33,binder_key_22) else fail-any) else fail-any)) else caught-fail) in
                                {2199}let v_420: bool = (not-caught-fail(v_419) && success?(1-proj-2-tuple(v_419))) in
                                {2200}let kb_22: mac_key = (if v_420 then 2-proj-2-tuple(v_419) else caught-fail) in
                                {2201}let es_33: bitstring = (if v_420 then 1-proj-2-tuple(v_419) else caught-fail) in
                                {2202}let binders_8: bitstring = (if v_420 then catch-fail(hmac(@7_tls_h,kb_22,cur_log'_9)) else caught-fail) in
                                {2203}let v_421: bool = not-caught-fail(binders_8) in
                                {2204}let v_422: bitstring = catch-fail((if v_414 then (if v_420 then (if v_421 then (client_psk_ext(id_27,binders_8),(psk_54,id_27,es_33,is_safe_20)) else fail-any) else fail-any) else fail-any)) in
                                {2205}let v_423: bool = (not-caught-fail(v_422) && success?(1-proj-2-tuple(v_422))) in
                                {2206}let psk_data_13: bitstring = (if v_423 then 2-proj-2-tuple(v_422) else caught-fail) in
                                {2207}let psk_ext_21: preSharedKeyExt = (if v_423 then 1-proj-2-tuple(v_422) else caught-fail) in
                                {2208}let offer_20: params = (if v_423 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_4,SNI(s_dom_12),empty_ech_ext,empty_extra_ext,psk_ext_21) else caught-fail) in
                                {2209}let (client_hello'_7: msg,cr'_7: bytes32,kex_data'_7: bitstring,psk_data'_7: bitstring) = (if v_423 then (CH(cr_15,offer_20),cr_15,kex_data_6,psk_data_13) else fail-any) in
                                {2210}event ClientOffersAead(cr'_7,@7_tls_a);
                                {2211}event ClientOffersHash(cr'_7,@7_tls_h);
                                {2212}event ClientOffersGroup(cr'_7,@7_tls_g);
                                {2213}out(io, client_hello'_7);
                                {2214}let cur_log4_7: bitstring = (cur_log3_4,client_hello'_7) in
                                {2215}in(io, server_hello'_7: msg);
                                {2216}let SH(sr'_7: bytes32,mode'_7: params) = server_hello'_7 in
                                (
                                    {2217}if (sr'_7 = B32(HRR24,HRR8)) then
                                        {2218}out(io, unexpected_message)
                                    else
                                        {2219}let (x_143: bitstring,g_9: group) = kex_data'_7 in
                                        {2220}let (psk_offer_9: preSharedKey,id_offer_9: identityPsk,es_offer_9: bitstring,is_safe_offer_9: bool) = psk_data'_7 in
                                        {2221}event Client_PSKOffer(@7_id_client,psk_offer_9,id_offer_9,is_safe_offer_9);
                                        {2222}event Client_Rand_client(@7_id_client,cr'_7);
                                        {2223}event Client_DH_client(@7_id_client,dh_pub(g_9,x_143));
                                        {2224}event Client_server_domain(@7_id_client,s_dom_12);
                                        {2225}let SH(sr_20: bytes32,mode_12: params) = server_hello'_7 in
                                        {2226}event Client_Rand_server(@7_id_client,sr_20);
                                        {2227}let nego(=TLS13,=@7_tls_h,=@7_tls_a,server_kex_ext(DHE_kex(=g_9,gy_10: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_22: preSharedKeyExt) = mode_12 in
                                        (
                                            {2228}let cur_log2_25: bitstring = (cur_log4_7,server_hello'_7) in
                                            {2229}event Client_DH_server(@7_id_client,gy_10);
                                            {2230}let v_424: bool = (psk_ext_22 = empty_psk_ext) in
                                            {2231}let psk_55: preSharedKey = (if v_424 then NoPsk else caught-fail) in
                                            {2232}let s_41: bitstring = (if v_424 then zero else caught-fail) in
                                            {2233}let k_35: bitstring = (if v_424 then catch-fail(psk2b(psk_55)) else caught-fail) in
                                            {2234}let v_425: bool = not-caught-fail(k_35) in
                                            {2235}let early_secret_34: bitstring = (if v_424 then catch-fail((if v_425 then hmac(@7_tls_h,s_41,k_35) else fail-any)) else caught-fail) in
                                            {2236}let v_426: bool = not-caught-fail(early_secret_34) in
                                            {2237}let l_130: label = (if v_426 then tls13_ext_res_binder else caught-fail) in
                                            {2238}let m_43: bitstring = (if v_426 then zero else caught-fail) in
                                            {2239}let h_129: bitstring = (if v_426 then catch-fail(hash(@7_tls_h,m_43)) else caught-fail) in
                                            {2240}let v_427: bool = not-caught-fail(h_129) in
                                            {2241}let x_144: bitstring = (if v_427 then (l_130,h_129) else caught-fail) in
                                            {2242}let binder_key_23: bitstring = (if v_426 then catch-fail((if v_427 then hmac(@7_tls_h,early_secret_34,x_144) else fail-any)) else caught-fail) in
                                            {2243}let v_428: bool = not-caught-fail(binder_key_23) in
                                            {2244}let v_429: bitstring = (if v_424 then catch-fail((if v_426 then (if v_428 then (early_secret_34,binder_key_23) else fail-any) else fail-any)) else caught-fail) in
                                            {2245}let v_430: bool = (not-caught-fail(v_429) && success?(1-proj-2-tuple(v_429))) in
                                            {2246}let kb_23: mac_key = (if v_430 then 2-proj-2-tuple(v_429) else caught-fail) in
                                            {2247}let es_34: bitstring = (if v_430 then 1-proj-2-tuple(v_429) else caught-fail) in
                                            {2248}let v_431: bitstring = (if not(v_424) then catch-fail(psk_data'_7) else caught-fail) in
                                            {2249}let v_432: bool = (not-caught-fail(v_431) && success?(1-proj-4-tuple(v_431))) in
                                            {2250}let is_safe_21: bool = (if v_432 then 4-proj-4-tuple(v_431) else caught-fail) in
                                            {2251}let es_35: bitstring = (if v_432 then 3-proj-4-tuple(v_431) else caught-fail) in
                                            {2252}let id_28: identityPsk = (if v_432 then 2-proj-4-tuple(v_431) else caught-fail) in
                                            {2253}let psk_56: preSharedKey = (if v_432 then 1-proj-4-tuple(v_431) else caught-fail) in
                                            {2254}let (psk_57: preSharedKey,early_secret_35: bitstring,valid_9: bool,safe_psk_15: bool) = (if v_424 then (if v_430 then (NoPsk,es_34,true,false) else fail-any) else (if v_432 then (psk_56,es_35,((psk_56 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_22)),is_safe_21) else fail-any)) in
                                            {2255}event Client_PSKChoosen(@7_id_client,psk_57,safe_psk_15);
                                            {2256}if valid_9 then
                                            (
                                                {2257}let gxy_19: element = catch-fail(dh_decap_fun(g_9,gy_10,x_143)) in
                                                {2258}let v_433: bool = not-caught-fail(gxy_19) in
                                                {2259}new s_42[]: seed;
                                                {2260}let gxy_20: element = (if v_433 then gxy_19 else dh_f(s_42)) in
                                                {2261}event Client_DH_gxy(@7_id_client,gxy_20);
                                                {2262}let l_131: label = tls13_derived in
                                                {2263}let m_44: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                {2264}let v_434: bool = not-caught-fail(m_44) in
                                                {2265}let h_130: bitstring = (if v_434 then catch-fail(hash(@7_tls_h,m_44)) else caught-fail) in
                                                {2266}let v_435: bool = not-caught-fail(h_130) in
                                                {2267}let x_145: bitstring = (if v_435 then (l_131,h_130) else caught-fail) in
                                                {2268}let extra_24: bitstring = catch-fail((if v_434 then (if v_435 then hmac(@7_tls_h,early_secret_35,x_145) else fail-any) else fail-any)) in
                                                {2269}let v_436: bool = not-caught-fail(extra_24) in
                                                {2270}let handshake_secret_10: bitstring = (if v_436 then hmac(@7_tls_h,extra_24,gxy_20) else fail-any) in
                                                {2271}let l_132: label = tls13_derived in
                                                {2272}let m_45: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                {2273}let v_437: bool = not-caught-fail(m_45) in
                                                {2274}let h_131: bitstring = (if v_437 then catch-fail(hash(@7_tls_h,m_45)) else caught-fail) in
                                                {2275}let v_438: bool = not-caught-fail(h_131) in
                                                {2276}let x_146: bitstring = (if v_438 then (l_132,h_131) else caught-fail) in
                                                {2277}let extra_25: bitstring = catch-fail((if v_437 then (if v_438 then hmac(@7_tls_h,handshake_secret_10,x_146) else fail-any) else fail-any)) in
                                                {2278}let v_439: bool = not-caught-fail(extra_25) in
                                                {2279}let k_36: bitstring = (if v_439 then zero else caught-fail) in
                                                {2280}let master_secret_27: bitstring = (if v_439 then catch-fail(hmac(@7_tls_h,handshake_secret_10,k_36)) else caught-fail) in
                                                {2281}let v_440: bool = not-caught-fail(master_secret_27) in
                                                {2282}let l_133: label = (if v_440 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {2283}let h_132: bitstring = (if v_440 then catch-fail(hash(@7_tls_h,cur_log2_25)) else caught-fail) in
                                                {2284}let v_441: bool = not-caught-fail(h_132) in
                                                {2285}let x_147: bitstring = (if v_441 then (l_133,h_132) else caught-fail) in
                                                {2286}let client_hts_10: bitstring = (if v_440 then catch-fail((if v_441 then hmac(@7_tls_h,handshake_secret_10,x_147) else fail-any)) else caught-fail) in
                                                {2287}let v_442: bool = not-caught-fail(client_hts_10) in
                                                {2288}let l_134: label = (if v_442 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {2289}let h_133: bitstring = (if v_442 then catch-fail(hash(@7_tls_h,cur_log2_25)) else caught-fail) in
                                                {2290}let v_443: bool = not-caught-fail(h_133) in
                                                {2291}let x_148: bitstring = (if v_443 then (l_134,h_133) else caught-fail) in
                                                {2292}let server_hts_10: bitstring = (if v_442 then catch-fail((if v_443 then hmac(@7_tls_h,handshake_secret_10,x_148) else fail-any)) else caught-fail) in
                                                {2293}let v_444: bool = not-caught-fail(server_hts_10) in
                                                {2294}let l_135: label = (if v_444 then tls13_key else caught-fail) in
                                                {2295}let h_134: bitstring = (if v_444 then zero else caught-fail) in
                                                {2296}let x_149: bitstring = (if v_444 then (l_135,h_134) else caught-fail) in
                                                {2297}let client_wkh_10: bitstring = (if v_444 then catch-fail(hmac(@7_tls_h,client_hts_10,x_149)) else caught-fail) in
                                                {2298}let v_445: bool = not-caught-fail(client_wkh_10) in
                                                {2299}let l_136: label = (if v_445 then tls13_key else caught-fail) in
                                                {2300}let h_135: bitstring = (if v_445 then zero else caught-fail) in
                                                {2301}let x_150: bitstring = (if v_445 then (l_136,h_135) else caught-fail) in
                                                {2302}let server_wkh_10: bitstring = (if v_445 then catch-fail(hmac(@7_tls_h,server_hts_10,x_150)) else caught-fail) in
                                                {2303}let v_446: bool = not-caught-fail(server_wkh_10) in
                                                {2304}let l_137: label = (if v_446 then tls13_finished else caught-fail) in
                                                {2305}let h_136: bitstring = (if v_446 then zero else caught-fail) in
                                                {2306}let x_151: bitstring = (if v_446 then (l_137,h_136) else caught-fail) in
                                                {2307}let client_fk_10: bitstring = (if v_446 then catch-fail(hmac(@7_tls_h,client_hts_10,x_151)) else caught-fail) in
                                                {2308}let v_447: bool = not-caught-fail(client_fk_10) in
                                                {2309}let l_138: label = (if v_447 then tls13_finished else caught-fail) in
                                                {2310}let h_137: bitstring = (if v_447 then zero else caught-fail) in
                                                {2311}let x_152: bitstring = (if v_447 then (l_138,h_137) else caught-fail) in
                                                {2312}let server_fk_10: bitstring = (if v_447 then catch-fail(hmac(@7_tls_h,server_hts_10,x_152)) else caught-fail) in
                                                {2313}let v_448: bool = not-caught-fail(server_fk_10) in
                                                {2314}let (master_secret_28: bitstring,chk_17: aead_key,shk_16: aead_key,cfin_17: mac_key,sfin_16: mac_key) = (if v_439 then (if v_440 then (if v_442 then (if v_444 then (if v_445 then (if v_446 then (if v_447 then (if v_448 then (master_secret_27,client_wkh_10,server_wkh_10,client_fk_10,server_fk_10) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {2315}event Client_chk(@7_id_client,chk_17);
                                                {2316}event Client_shk(@7_id_client,shk_16);
                                                {2317}event Client_cfin(@7_id_client,cfin_17);
                                                {2318}event Client_sfin(@7_id_client,sfin_16);
                                                {2319}in(io, enc_ee_msg_9: bitstring);
                                                {2320}let ee_msg_10: msg = aead_dec(@7_tls_a,shk_16,0,zero,enc_ee_msg_9) in
                                                {2321}let EE(ech_ee_9: echExt,extra_ee_9: extraExt) = ee_msg_10 in
                                                {2322}let cur_log2_26: bitstring = (cur_log2_25,ee_msg_10) in
                                                {2323}out(ch_client_after_EE, (@7_id_client,ArgsClientAfterEE(cr'_7,sr_20,@7_tls_h,@7_tls_a,c_dom_5,s_dom_12,psk_57,safe_psk_15,@7_comp_psk,master_secret_28,chk_17,0,shk_16,1,cfin_17,sfin_16,cur_log2_26)))
                                            )
                                            else
                                                {2324}out(io, illegal_parameter)
                                        )
                                        else
                                            {2325}out(io, illegal_parameter)
                                )
                                else
                                    {2326}out(io, unexpected_message)
                        )
                        else
                            {2328}let psk_58: preSharedKey = NoPsk in
                            {2329}let s_43: bitstring = zero in
                            {2330}let k_37: bitstring = catch-fail(psk2b(psk_58)) in
                            {2331}let v_449: bool = not-caught-fail(k_37) in
                            {2332}let early_secret_36: bitstring = catch-fail((if v_449 then hmac(@7_tls_h,s_43,k_37) else fail-any)) in
                            {2333}let v_450: bool = not-caught-fail(early_secret_36) in
                            {2334}let l_139: label = (if v_450 then tls13_ext_res_binder else caught-fail) in
                            {2335}let m_46: bitstring = (if v_450 then zero else caught-fail) in
                            {2336}let h_138: bitstring = (if v_450 then catch-fail(hash(@7_tls_h,m_46)) else caught-fail) in
                            {2337}let v_451: bool = not-caught-fail(h_138) in
                            {2338}let x_153: bitstring = (if v_451 then (l_139,h_138) else caught-fail) in
                            {2339}let binder_key_24: bitstring = (if v_450 then catch-fail((if v_451 then hmac(@7_tls_h,early_secret_36,x_153) else fail-any)) else caught-fail) in
                            {2340}let v_452: bool = not-caught-fail(binder_key_24) in
                            {2341}let v_453: bitstring = catch-fail((if v_450 then (if v_452 then (early_secret_36,binder_key_24) else fail-any) else fail-any)) in
                            {2342}let v_454: bool = (not-caught-fail(v_453) && success?(1-proj-2-tuple(v_453))) in
                            {2343}let kb_24: mac_key = (if v_454 then 2-proj-2-tuple(v_453) else caught-fail) in
                            {2344}let es_36: bitstring = (if v_454 then 1-proj-2-tuple(v_453) else caught-fail) in
                            {2345}let v_455: bitstring = catch-fail((if v_454 then (empty_psk_ext,(NoPsk,zero,es_36,false)) else fail-any)) in
                            {2346}let v_456: bool = (not-caught-fail(v_455) && success?(1-proj-2-tuple(v_455))) in
                            {2347}let psk_data_14: bitstring = (if v_456 then 2-proj-2-tuple(v_455) else caught-fail) in
                            {2348}let psk_ext_23: preSharedKeyExt = (if v_456 then 1-proj-2-tuple(v_455) else caught-fail) in
                            {2349}let offer_21: params = (if v_456 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_4,SNI(s_dom_12),empty_ech_ext,empty_extra_ext,psk_ext_23) else caught-fail) in
                            {2350}let (client_hello'_8: msg,cr'_8: bytes32,kex_data'_8: bitstring,psk_data'_8: bitstring) = (if v_456 then (CH(cr_15,offer_21),cr_15,kex_data_6,psk_data_14) else fail-any) in
                            {2351}event ClientOffersAead(cr'_8,@7_tls_a);
                            {2352}event ClientOffersHash(cr'_8,@7_tls_h);
                            {2353}event ClientOffersGroup(cr'_8,@7_tls_g);
                            {2354}out(io, client_hello'_8);
                            {2355}let cur_log4_8: bitstring = (cur_log3_4,client_hello'_8) in
                            {2356}in(io, server_hello'_8: msg);
                            {2357}let SH(sr'_8: bytes32,mode'_8: params) = server_hello'_8 in
                            (
                                {2358}if (sr'_8 = B32(HRR24,HRR8)) then
                                    {2359}out(io, unexpected_message)
                                else
                                    {2360}let (x_154: bitstring,g_10: group) = kex_data'_8 in
                                    {2361}let (psk_offer_10: preSharedKey,id_offer_10: identityPsk,es_offer_10: bitstring,is_safe_offer_10: bool) = psk_data'_8 in
                                    {2362}event Client_PSKOffer(@7_id_client,psk_offer_10,id_offer_10,is_safe_offer_10);
                                    {2363}event Client_Rand_client(@7_id_client,cr'_8);
                                    {2364}event Client_DH_client(@7_id_client,dh_pub(g_10,x_154));
                                    {2365}event Client_server_domain(@7_id_client,s_dom_12);
                                    {2366}let SH(sr_21: bytes32,mode_13: params) = server_hello'_8 in
                                    {2367}event Client_Rand_server(@7_id_client,sr_21);
                                    {2368}let nego(=TLS13,=@7_tls_h,=@7_tls_a,server_kex_ext(DHE_kex(=g_10,gy_11: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_24: preSharedKeyExt) = mode_13 in
                                    (
                                        {2369}let cur_log2_27: bitstring = (cur_log4_8,server_hello'_8) in
                                        {2370}event Client_DH_server(@7_id_client,gy_11);
                                        {2371}let v_457: bool = (psk_ext_24 = empty_psk_ext) in
                                        {2372}let psk_59: preSharedKey = (if v_457 then NoPsk else caught-fail) in
                                        {2373}let s_44: bitstring = (if v_457 then zero else caught-fail) in
                                        {2374}let k_38: bitstring = (if v_457 then catch-fail(psk2b(psk_59)) else caught-fail) in
                                        {2375}let v_458: bool = not-caught-fail(k_38) in
                                        {2376}let early_secret_37: bitstring = (if v_457 then catch-fail((if v_458 then hmac(@7_tls_h,s_44,k_38) else fail-any)) else caught-fail) in
                                        {2377}let v_459: bool = not-caught-fail(early_secret_37) in
                                        {2378}let l_140: label = (if v_459 then tls13_ext_res_binder else caught-fail) in
                                        {2379}let m_47: bitstring = (if v_459 then zero else caught-fail) in
                                        {2380}let h_139: bitstring = (if v_459 then catch-fail(hash(@7_tls_h,m_47)) else caught-fail) in
                                        {2381}let v_460: bool = not-caught-fail(h_139) in
                                        {2382}let x_155: bitstring = (if v_460 then (l_140,h_139) else caught-fail) in
                                        {2383}let binder_key_25: bitstring = (if v_459 then catch-fail((if v_460 then hmac(@7_tls_h,early_secret_37,x_155) else fail-any)) else caught-fail) in
                                        {2384}let v_461: bool = not-caught-fail(binder_key_25) in
                                        {2385}let v_462: bitstring = (if v_457 then catch-fail((if v_459 then (if v_461 then (early_secret_37,binder_key_25) else fail-any) else fail-any)) else caught-fail) in
                                        {2386}let v_463: bool = (not-caught-fail(v_462) && success?(1-proj-2-tuple(v_462))) in
                                        {2387}let kb_25: mac_key = (if v_463 then 2-proj-2-tuple(v_462) else caught-fail) in
                                        {2388}let es_37: bitstring = (if v_463 then 1-proj-2-tuple(v_462) else caught-fail) in
                                        {2389}let v_464: bitstring = (if not(v_457) then catch-fail(psk_data'_8) else caught-fail) in
                                        {2390}let v_465: bool = (not-caught-fail(v_464) && success?(1-proj-4-tuple(v_464))) in
                                        {2391}let is_safe_22: bool = (if v_465 then 4-proj-4-tuple(v_464) else caught-fail) in
                                        {2392}let es_38: bitstring = (if v_465 then 3-proj-4-tuple(v_464) else caught-fail) in
                                        {2393}let id_29: identityPsk = (if v_465 then 2-proj-4-tuple(v_464) else caught-fail) in
                                        {2394}let psk_60: preSharedKey = (if v_465 then 1-proj-4-tuple(v_464) else caught-fail) in
                                        {2395}let (psk_61: preSharedKey,early_secret_38: bitstring,valid_10: bool,safe_psk_16: bool) = (if v_457 then (if v_463 then (NoPsk,es_37,true,false) else fail-any) else (if v_465 then (psk_60,es_38,((psk_60 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_24)),is_safe_22) else fail-any)) in
                                        {2396}event Client_PSKChoosen(@7_id_client,psk_61,safe_psk_16);
                                        {2397}if valid_10 then
                                        (
                                            {2398}let gxy_21: element = catch-fail(dh_decap_fun(g_10,gy_11,x_154)) in
                                            {2399}let v_466: bool = not-caught-fail(gxy_21) in
                                            {2400}new s_45[]: seed;
                                            {2401}let gxy_22: element = (if v_466 then gxy_21 else dh_f(s_45)) in
                                            {2402}event Client_DH_gxy(@7_id_client,gxy_22);
                                            {2403}let l_141: label = tls13_derived in
                                            {2404}let m_48: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                            {2405}let v_467: bool = not-caught-fail(m_48) in
                                            {2406}let h_140: bitstring = (if v_467 then catch-fail(hash(@7_tls_h,m_48)) else caught-fail) in
                                            {2407}let v_468: bool = not-caught-fail(h_140) in
                                            {2408}let x_156: bitstring = (if v_468 then (l_141,h_140) else caught-fail) in
                                            {2409}let extra_26: bitstring = catch-fail((if v_467 then (if v_468 then hmac(@7_tls_h,early_secret_38,x_156) else fail-any) else fail-any)) in
                                            {2410}let v_469: bool = not-caught-fail(extra_26) in
                                            {2411}let handshake_secret_11: bitstring = (if v_469 then hmac(@7_tls_h,extra_26,gxy_22) else fail-any) in
                                            {2412}let l_142: label = tls13_derived in
                                            {2413}let m_49: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                            {2414}let v_470: bool = not-caught-fail(m_49) in
                                            {2415}let h_141: bitstring = (if v_470 then catch-fail(hash(@7_tls_h,m_49)) else caught-fail) in
                                            {2416}let v_471: bool = not-caught-fail(h_141) in
                                            {2417}let x_157: bitstring = (if v_471 then (l_142,h_141) else caught-fail) in
                                            {2418}let extra_27: bitstring = catch-fail((if v_470 then (if v_471 then hmac(@7_tls_h,handshake_secret_11,x_157) else fail-any) else fail-any)) in
                                            {2419}let v_472: bool = not-caught-fail(extra_27) in
                                            {2420}let k_39: bitstring = (if v_472 then zero else caught-fail) in
                                            {2421}let master_secret_29: bitstring = (if v_472 then catch-fail(hmac(@7_tls_h,handshake_secret_11,k_39)) else caught-fail) in
                                            {2422}let v_473: bool = not-caught-fail(master_secret_29) in
                                            {2423}let l_143: label = (if v_473 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {2424}let h_142: bitstring = (if v_473 then catch-fail(hash(@7_tls_h,cur_log2_27)) else caught-fail) in
                                            {2425}let v_474: bool = not-caught-fail(h_142) in
                                            {2426}let x_158: bitstring = (if v_474 then (l_143,h_142) else caught-fail) in
                                            {2427}let client_hts_11: bitstring = (if v_473 then catch-fail((if v_474 then hmac(@7_tls_h,handshake_secret_11,x_158) else fail-any)) else caught-fail) in
                                            {2428}let v_475: bool = not-caught-fail(client_hts_11) in
                                            {2429}let l_144: label = (if v_475 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {2430}let h_143: bitstring = (if v_475 then catch-fail(hash(@7_tls_h,cur_log2_27)) else caught-fail) in
                                            {2431}let v_476: bool = not-caught-fail(h_143) in
                                            {2432}let x_159: bitstring = (if v_476 then (l_144,h_143) else caught-fail) in
                                            {2433}let server_hts_11: bitstring = (if v_475 then catch-fail((if v_476 then hmac(@7_tls_h,handshake_secret_11,x_159) else fail-any)) else caught-fail) in
                                            {2434}let v_477: bool = not-caught-fail(server_hts_11) in
                                            {2435}let l_145: label = (if v_477 then tls13_key else caught-fail) in
                                            {2436}let h_144: bitstring = (if v_477 then zero else caught-fail) in
                                            {2437}let x_160: bitstring = (if v_477 then (l_145,h_144) else caught-fail) in
                                            {2438}let client_wkh_11: bitstring = (if v_477 then catch-fail(hmac(@7_tls_h,client_hts_11,x_160)) else caught-fail) in
                                            {2439}let v_478: bool = not-caught-fail(client_wkh_11) in
                                            {2440}let l_146: label = (if v_478 then tls13_key else caught-fail) in
                                            {2441}let h_145: bitstring = (if v_478 then zero else caught-fail) in
                                            {2442}let x_161: bitstring = (if v_478 then (l_146,h_145) else caught-fail) in
                                            {2443}let server_wkh_11: bitstring = (if v_478 then catch-fail(hmac(@7_tls_h,server_hts_11,x_161)) else caught-fail) in
                                            {2444}let v_479: bool = not-caught-fail(server_wkh_11) in
                                            {2445}let l_147: label = (if v_479 then tls13_finished else caught-fail) in
                                            {2446}let h_146: bitstring = (if v_479 then zero else caught-fail) in
                                            {2447}let x_162: bitstring = (if v_479 then (l_147,h_146) else caught-fail) in
                                            {2448}let client_fk_11: bitstring = (if v_479 then catch-fail(hmac(@7_tls_h,client_hts_11,x_162)) else caught-fail) in
                                            {2449}let v_480: bool = not-caught-fail(client_fk_11) in
                                            {2450}let l_148: label = (if v_480 then tls13_finished else caught-fail) in
                                            {2451}let h_147: bitstring = (if v_480 then zero else caught-fail) in
                                            {2452}let x_163: bitstring = (if v_480 then (l_148,h_147) else caught-fail) in
                                            {2453}let server_fk_11: bitstring = (if v_480 then catch-fail(hmac(@7_tls_h,server_hts_11,x_163)) else caught-fail) in
                                            {2454}let v_481: bool = not-caught-fail(server_fk_11) in
                                            {2455}let (master_secret_30: bitstring,chk_18: aead_key,shk_17: aead_key,cfin_18: mac_key,sfin_17: mac_key) = (if v_472 then (if v_473 then (if v_475 then (if v_477 then (if v_478 then (if v_479 then (if v_480 then (if v_481 then (master_secret_29,client_wkh_11,server_wkh_11,client_fk_11,server_fk_11) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {2456}event Client_chk(@7_id_client,chk_18);
                                            {2457}event Client_shk(@7_id_client,shk_17);
                                            {2458}event Client_cfin(@7_id_client,cfin_18);
                                            {2459}event Client_sfin(@7_id_client,sfin_17);
                                            {2460}in(io, enc_ee_msg_10: bitstring);
                                            {2461}let ee_msg_11: msg = aead_dec(@7_tls_a,shk_17,0,zero,enc_ee_msg_10) in
                                            {2462}let EE(ech_ee_10: echExt,extra_ee_10: extraExt) = ee_msg_11 in
                                            {2463}let cur_log2_28: bitstring = (cur_log2_27,ee_msg_11) in
                                            {2464}out(ch_client_after_EE, (@7_id_client,ArgsClientAfterEE(cr'_8,sr_21,@7_tls_h,@7_tls_a,c_dom_5,s_dom_12,psk_61,safe_psk_16,@7_comp_psk,master_secret_30,chk_18,0,shk_17,1,cfin_18,sfin_17,cur_log2_28)))
                                        )
                                        else
                                            {2465}out(io, illegal_parameter)
                                    )
                                    else
                                        {2466}out(io, illegal_parameter)
                            )
                            else
                                {2467}out(io, unexpected_message)
                    )
                    else
                        {2468}out(io, illegal_parameter)
                )
                else
                    {2469}if send_kex then
                    (
                        {2470}let (x_164: bitstring,g_11: group) = kex_data_5 in
                        {2471}let (psk_offer_11: preSharedKey,id_offer_11: identityPsk,es_offer_11: bitstring,is_safe_offer_11: bool) = psk_data_11 in
                        {2472}event Client_PSKOffer(@7_id_client,psk_offer_11,id_offer_11,is_safe_offer_11);
                        {2473}event Client_Rand_client(@7_id_client,cr_14);
                        {2474}event Client_DH_client(@7_id_client,dh_pub(g_11,x_164));
                        {2475}event Client_server_domain(@7_id_client,s_dom_12);
                        {2476}let SH(sr_22: bytes32,mode_14: params) = server_hello_3 in
                        {2477}event Client_Rand_server(@7_id_client,sr_22);
                        {2478}let nego(=TLS13,=@7_tls_h,=@7_tls_a,server_kex_ext(DHE_kex(=g_11,gy_12: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_25: preSharedKeyExt) = mode_14 in
                        (
                            {2479}let cur_log2_29: bitstring = (cur_log2_22,server_hello_3) in
                            {2480}event Client_DH_server(@7_id_client,gy_12);
                            {2481}let v_482: bool = (psk_ext_25 = empty_psk_ext) in
                            {2482}let psk_62: preSharedKey = (if v_482 then NoPsk else caught-fail) in
                            {2483}let s_46: bitstring = (if v_482 then zero else caught-fail) in
                            {2484}let k_40: bitstring = (if v_482 then catch-fail(psk2b(psk_62)) else caught-fail) in
                            {2485}let v_483: bool = not-caught-fail(k_40) in
                            {2486}let early_secret_39: bitstring = (if v_482 then catch-fail((if v_483 then hmac(@7_tls_h,s_46,k_40) else fail-any)) else caught-fail) in
                            {2487}let v_484: bool = not-caught-fail(early_secret_39) in
                            {2488}let l_149: label = (if v_484 then tls13_ext_res_binder else caught-fail) in
                            {2489}let m_50: bitstring = (if v_484 then zero else caught-fail) in
                            {2490}let h_148: bitstring = (if v_484 then catch-fail(hash(@7_tls_h,m_50)) else caught-fail) in
                            {2491}let v_485: bool = not-caught-fail(h_148) in
                            {2492}let x_165: bitstring = (if v_485 then (l_149,h_148) else caught-fail) in
                            {2493}let binder_key_26: bitstring = (if v_484 then catch-fail((if v_485 then hmac(@7_tls_h,early_secret_39,x_165) else fail-any)) else caught-fail) in
                            {2494}let v_486: bool = not-caught-fail(binder_key_26) in
                            {2495}let v_487: bitstring = (if v_482 then catch-fail((if v_484 then (if v_486 then (early_secret_39,binder_key_26) else fail-any) else fail-any)) else caught-fail) in
                            {2496}let v_488: bool = (not-caught-fail(v_487) && success?(1-proj-2-tuple(v_487))) in
                            {2497}let kb_26: mac_key = (if v_488 then 2-proj-2-tuple(v_487) else caught-fail) in
                            {2498}let es_39: bitstring = (if v_488 then 1-proj-2-tuple(v_487) else caught-fail) in
                            {2499}let v_489: bitstring = (if not(v_482) then catch-fail(psk_data_11) else caught-fail) in
                            {2500}let v_490: bool = (not-caught-fail(v_489) && success?(1-proj-4-tuple(v_489))) in
                            {2501}let is_safe_23: bool = (if v_490 then 4-proj-4-tuple(v_489) else caught-fail) in
                            {2502}let es_40: bitstring = (if v_490 then 3-proj-4-tuple(v_489) else caught-fail) in
                            {2503}let id_30: identityPsk = (if v_490 then 2-proj-4-tuple(v_489) else caught-fail) in
                            {2504}let psk_63: preSharedKey = (if v_490 then 1-proj-4-tuple(v_489) else caught-fail) in
                            {2505}let (psk_64: preSharedKey,early_secret_40: bitstring,valid_11: bool,safe_psk_17: bool) = (if v_482 then (if v_488 then (NoPsk,es_39,true,false) else fail-any) else (if v_490 then (psk_63,es_40,((psk_63 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_25)),is_safe_23) else fail-any)) in
                            {2506}event Client_PSKChoosen(@7_id_client,psk_64,safe_psk_17);
                            {2507}if valid_11 then
                            (
                                {2508}let gxy_23: element = catch-fail(dh_decap_fun(g_11,gy_12,x_164)) in
                                {2509}let v_491: bool = not-caught-fail(gxy_23) in
                                {2510}new s_47[]: seed;
                                {2511}let gxy_24: element = (if v_491 then gxy_23 else dh_f(s_47)) in
                                {2512}event Client_DH_gxy(@7_id_client,gxy_24);
                                {2513}let l_150: label = tls13_derived in
                                {2514}let m_51: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                {2515}let v_492: bool = not-caught-fail(m_51) in
                                {2516}let h_149: bitstring = (if v_492 then catch-fail(hash(@7_tls_h,m_51)) else caught-fail) in
                                {2517}let v_493: bool = not-caught-fail(h_149) in
                                {2518}let x_166: bitstring = (if v_493 then (l_150,h_149) else caught-fail) in
                                {2519}let extra_28: bitstring = catch-fail((if v_492 then (if v_493 then hmac(@7_tls_h,early_secret_40,x_166) else fail-any) else fail-any)) in
                                {2520}let v_494: bool = not-caught-fail(extra_28) in
                                {2521}let handshake_secret_12: bitstring = (if v_494 then hmac(@7_tls_h,extra_28,gxy_24) else fail-any) in
                                {2522}let l_151: label = tls13_derived in
                                {2523}let m_52: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                {2524}let v_495: bool = not-caught-fail(m_52) in
                                {2525}let h_150: bitstring = (if v_495 then catch-fail(hash(@7_tls_h,m_52)) else caught-fail) in
                                {2526}let v_496: bool = not-caught-fail(h_150) in
                                {2527}let x_167: bitstring = (if v_496 then (l_151,h_150) else caught-fail) in
                                {2528}let extra_29: bitstring = catch-fail((if v_495 then (if v_496 then hmac(@7_tls_h,handshake_secret_12,x_167) else fail-any) else fail-any)) in
                                {2529}let v_497: bool = not-caught-fail(extra_29) in
                                {2530}let k_41: bitstring = (if v_497 then zero else caught-fail) in
                                {2531}let master_secret_31: bitstring = (if v_497 then catch-fail(hmac(@7_tls_h,handshake_secret_12,k_41)) else caught-fail) in
                                {2532}let v_498: bool = not-caught-fail(master_secret_31) in
                                {2533}let l_152: label = (if v_498 then tls13_client_handshake_traffic_secret else caught-fail) in
                                {2534}let h_151: bitstring = (if v_498 then catch-fail(hash(@7_tls_h,cur_log2_29)) else caught-fail) in
                                {2535}let v_499: bool = not-caught-fail(h_151) in
                                {2536}let x_168: bitstring = (if v_499 then (l_152,h_151) else caught-fail) in
                                {2537}let client_hts_12: bitstring = (if v_498 then catch-fail((if v_499 then hmac(@7_tls_h,handshake_secret_12,x_168) else fail-any)) else caught-fail) in
                                {2538}let v_500: bool = not-caught-fail(client_hts_12) in
                                {2539}let l_153: label = (if v_500 then tls13_server_handshake_traffic_secret else caught-fail) in
                                {2540}let h_152: bitstring = (if v_500 then catch-fail(hash(@7_tls_h,cur_log2_29)) else caught-fail) in
                                {2541}let v_501: bool = not-caught-fail(h_152) in
                                {2542}let x_169: bitstring = (if v_501 then (l_153,h_152) else caught-fail) in
                                {2543}let server_hts_12: bitstring = (if v_500 then catch-fail((if v_501 then hmac(@7_tls_h,handshake_secret_12,x_169) else fail-any)) else caught-fail) in
                                {2544}let v_502: bool = not-caught-fail(server_hts_12) in
                                {2545}let l_154: label = (if v_502 then tls13_key else caught-fail) in
                                {2546}let h_153: bitstring = (if v_502 then zero else caught-fail) in
                                {2547}let x_170: bitstring = (if v_502 then (l_154,h_153) else caught-fail) in
                                {2548}let client_wkh_12: bitstring = (if v_502 then catch-fail(hmac(@7_tls_h,client_hts_12,x_170)) else caught-fail) in
                                {2549}let v_503: bool = not-caught-fail(client_wkh_12) in
                                {2550}let l_155: label = (if v_503 then tls13_key else caught-fail) in
                                {2551}let h_154: bitstring = (if v_503 then zero else caught-fail) in
                                {2552}let x_171: bitstring = (if v_503 then (l_155,h_154) else caught-fail) in
                                {2553}let server_wkh_12: bitstring = (if v_503 then catch-fail(hmac(@7_tls_h,server_hts_12,x_171)) else caught-fail) in
                                {2554}let v_504: bool = not-caught-fail(server_wkh_12) in
                                {2555}let l_156: label = (if v_504 then tls13_finished else caught-fail) in
                                {2556}let h_155: bitstring = (if v_504 then zero else caught-fail) in
                                {2557}let x_172: bitstring = (if v_504 then (l_156,h_155) else caught-fail) in
                                {2558}let client_fk_12: bitstring = (if v_504 then catch-fail(hmac(@7_tls_h,client_hts_12,x_172)) else caught-fail) in
                                {2559}let v_505: bool = not-caught-fail(client_fk_12) in
                                {2560}let l_157: label = (if v_505 then tls13_finished else caught-fail) in
                                {2561}let h_156: bitstring = (if v_505 then zero else caught-fail) in
                                {2562}let x_173: bitstring = (if v_505 then (l_157,h_156) else caught-fail) in
                                {2563}let server_fk_12: bitstring = (if v_505 then catch-fail(hmac(@7_tls_h,server_hts_12,x_173)) else caught-fail) in
                                {2564}let v_506: bool = not-caught-fail(server_fk_12) in
                                {2565}let (master_secret_32: bitstring,chk_19: aead_key,shk_18: aead_key,cfin_19: mac_key,sfin_18: mac_key) = (if v_497 then (if v_498 then (if v_500 then (if v_502 then (if v_503 then (if v_504 then (if v_505 then (if v_506 then (master_secret_31,client_wkh_12,server_wkh_12,client_fk_12,server_fk_12) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                {2566}event Client_chk(@7_id_client,chk_19);
                                {2567}event Client_shk(@7_id_client,shk_18);
                                {2568}event Client_cfin(@7_id_client,cfin_19);
                                {2569}event Client_sfin(@7_id_client,sfin_18);
                                {2570}in(io, enc_ee_msg_11: bitstring);
                                {2571}let ee_msg_12: msg = aead_dec(@7_tls_a,shk_18,0,zero,enc_ee_msg_11) in
                                {2572}let EE(ech_ee_11: echExt,extra_ee_11: extraExt) = ee_msg_12 in
                                {2573}let cur_log2_30: bitstring = (cur_log2_29,ee_msg_12) in
                                {2574}out(ch_client_after_EE, (@7_id_client,ArgsClientAfterEE(cr_14,sr_22,@7_tls_h,@7_tls_a,c_dom_5,s_dom_12,psk_64,safe_psk_17,@7_comp_psk,master_secret_32,chk_19,0,shk_18,1,cfin_19,sfin_18,cur_log2_30)))
                            )
                            else
                                {2575}out(io, illegal_parameter)
                        )
                        else
                            {2576}out(io, illegal_parameter)
                    )
                    else
                        {2577}out(io, illegal_parameter)
            )
            else
                {2578}out(io, unexpected_message)
        )
) | (
    {2579}!
    {2580}new id_client_4: idProc;
    {2581}in(io, backend_dom: domain);
    {2582}event Same(backend_dom);
    {2583}in(io, frontend_dom: domain);
    {2584}event Same(frontend_dom);
    {2585}in(io, c_dom_6: domain);
    {2586}event Same(c_dom_6);
    {7100}get ech_configurations(ech_config(id_31: configId,g_12: group,pkR_1: element,=frontend_dom,h_alg_10: hash_alg,a_alg_8: aead_alg),skR_1: bitstring) in
    {2587}let ech_conf: echConfig = ech_config(id_31,g_12,pkR_1,frontend_dom,h_alg_10,a_alg_8) in
    {2588}let @6_id_client: idProc = id_client_4 in
    {2589}let @6_i_extra_ext: extraExt = empty_extra_ext in
    {2590}let @6_tls_h: hash_alg = id_hash(StrongHash,1) in
    {2591}let @6_tls_a: aead_alg = id_aead(StrongAE,1) in
    {2592}let @6_tls_g: group = id_g(StrongDH,1) in
    {2593}let @6_backend_h: hash_alg = id_hash(StrongHash,1) in
    {2594}let @6_backend_a: aead_alg = id_aead(StrongAE,1) in
    {2595}let @6_backend_g: group = id_g(StrongDH,1) in
    {2596}let @6_use_psk: bool = false in
    {2597}let @6_comp_psk: bool = false in
    {2598}in(io, @6_send_kex: bool);
    {2599}let () = () in
    {2600}event Same(@6_send_kex);
    {2601}let @6_use_grease: bool = false in
    {2602}let send_kex_4: bool = (not(false) || @6_send_kex) in
    {2603}let ech_config(config_id: configId,ech_g_2: group,pkR_2: element,o_dom: domain,ech_h_2: hash_alg,ech_a_2: aead_alg) = ech_conf in
    {2604}event ClientOffersEchConfig(@6_id_client,ech_conf);
    {2605}let info: bitstring = (tls_ech_str,ech_conf) in
    {2606}new s_48[]: seed;
    {2607}let v_507: bitstring = (dh_xy(s_48,pkR_2),dh_encap_fun(ech_g_2,pkR_2,dh_xy(s_48,pkR_2))) in
    {2608}let v_508: bool = success?(1-proj-2-tuple(v_507)) in
    {2609}let enc: element = (if v_508 then 2-proj-2-tuple(v_507) else caught-fail) in
    {2610}let shared_secret: element = (if v_508 then 1-proj-2-tuple(v_507) else caught-fail) in
    {2611}let r: hpkeRole = (if v_508 then S else caught-fail) in
    {2612}let salt: bitstring = (if v_508 then zero else caught-fail) in
    {2613}let label_1: label = (if v_508 then hpke_info_hash else caught-fail) in
    {2614}let k_42: bitstring = (if v_508 then (label_1,info) else caught-fail) in
    {2615}let info_hash: bitstring = (if v_508 then catch-fail(hmac(ech_h_2,salt,k_42)) else caught-fail) in
    {2616}let v_509: bool = not-caught-fail(info_hash) in
    {2617}let label_2: label = (if v_509 then hpke_secret else caught-fail) in
    {2618}let ikm: bitstring = (if v_509 then zero else caught-fail) in
    {2619}let k_43: bitstring = (if v_509 then (label_2,ikm) else caught-fail) in
    {2620}let xsecret: bitstring = (if v_509 then catch-fail(hmac(ech_h_2,shared_secret,k_43)) else caught-fail) in
    {2621}let v_510: bool = not-caught-fail(xsecret) in
    {2622}let label_3: label = (if v_510 then hpke_key else caught-fail) in
    {2623}let x_174: bitstring = (if v_510 then (label_3,info_hash) else caught-fail) in
    {2624}let key: aead_key = (if v_510 then catch-fail(hmac(ech_h_2,xsecret,x_174)) else caught-fail) in
    {2625}let v_511: bool = not-caught-fail(key) in
    {2626}let label_4: label = (if v_511 then hpke_base_nonce else caught-fail) in
    {2627}let x_175: bitstring = (if v_511 then (label_4,info_hash) else caught-fail) in
    {2628}let base_nonce: bitstring = (if v_511 then catch-fail(hmac(ech_h_2,xsecret,x_175)) else caught-fail) in
    {2629}let v_512: bool = not-caught-fail(base_nonce) in
    {2630}let (enc_1: element,context: hpkeContext) = (if v_508 then (enc,(if v_509 then (if v_510 then (if v_511 then (if v_512 then hpke_context(r,key,base_nonce) else fail-any) else fail-any) else fail-any) else fail-any)) else fail-any) in
    {2631}let ech_config(config_id_1: configId,ech_g_3: group,pkR_3: element,o_dom_1: domain,ech_h_3: hash_alg,ech_a_3: aead_alg) = ech_conf in
    {2632}new s_49[]: seed;
    {2633}let gx_10: element = dh_pub(@6_backend_g,dh_k(s_49)) in
    {2634}let v_513: bitstring = (dh_k(s_49),gx_10) in
    {2635}let v_514: bool = success?(1-proj-2-tuple(v_513)) in
    {2636}let gx_11: element = (if v_514 then 2-proj-2-tuple(v_513) else caught-fail) in
    {2637}let x_176: bitstring = (if v_514 then 1-proj-2-tuple(v_513) else caught-fail) in
    {2638}let kex_4: kex_alg = (if v_514 then (if send_kex_4 then DHE_kex(@6_backend_g,gx_11) else DHE_group(@6_backend_g)) else caught-fail) in
    {2639}let (i_kex_ext: keyShareExt,i_kex_data: bitstring) = (if v_514 then (client_kex_ext(kex_4),(x_176,@6_backend_g)) else fail-any) in
    {2640}new s_50[]: seed;
    {2641}let gx_12: element = dh_pub(@6_tls_g,dh_k(s_50)) in
    {2642}let v_515: bitstring = (dh_k(s_50),gx_12) in
    {2643}let v_516: bool = success?(1-proj-2-tuple(v_515)) in
    {2644}let gx_13: element = (if v_516 then 2-proj-2-tuple(v_515) else caught-fail) in
    {2645}let x_177: bitstring = (if v_516 then 1-proj-2-tuple(v_515) else caught-fail) in
    {2646}let kex_5: kex_alg = (if v_516 then (if send_kex_4 then DHE_kex(@6_tls_g,gx_13) else DHE_group(@6_tls_g)) else caught-fail) in
    {2647}let (o_kex_ext: keyShareExt,o_kex_data: bitstring) = (if v_516 then (client_kex_ext(kex_5),(x_177,@6_tls_g)) else fail-any) in
    {2648}new rand24_5[]: bytes24;
    {2649}new rand8_5[]: bytes8;
    {2650}let i_cr: bytes32 = B32(rand24_5,rand8_5) in
    {2651}new rand24_6[]: bytes24;
    {2652}new rand8_6[]: bytes8;
    {2653}let o_cr: bytes32 = B32(rand24_6,rand8_6) in
    {2654}let v_517: bool = @6_use_grease in
    {2655}new payload[]: bitstring;
    {2656}new configid[]: configId;
    {2657}new s_51[]: seed;
    {2658}let gx_14: element = (if v_517 then dh_pub(ech_g_3,dh_k(s_51)) else caught-fail) in
    {2659}let v_518: bitstring = (if v_517 then catch-fail((dh_k(s_51),gx_14)) else caught-fail) in
    {2660}let v_519: bool = (not-caught-fail(v_518) && success?(1-proj-2-tuple(v_518))) in
    {2661}let gx_grease: element = (if v_519 then 2-proj-2-tuple(v_518) else caught-fail) in
    {2662}let x_grease: bitstring = (if v_519 then 1-proj-2-tuple(v_518) else caught-fail) in
    {2663}new s_52[]: seed;
    {2664}let v_520: bitstring = (if v_519 then catch-fail((dh_xy(s_52,gx_grease),dh_encap_fun(ech_g_3,gx_grease,dh_xy(s_52,gx_grease)))) else caught-fail) in
    {2665}let v_521: bool = (not-caught-fail(v_520) && success?(1-proj-2-tuple(v_520))) in
    {2666}let enc_grease: element = (if v_521 then 2-proj-2-tuple(v_520) else caught-fail) in
    {2667}let secret_grease: element = (if v_521 then 1-proj-2-tuple(v_520) else caught-fail) in
    {2668}let ech_inner_or_grease: echExt = (if v_517 then (if v_519 then (if v_521 then ECHClientHelloOuter(ech_h_3,ech_a_3,configid,enc_grease,payload) else fail-any) else fail-any) else ECHClientHelloInner) in
    {2669}let (dom_psk: domain,cr_psk: bytes32,kex_ext_psk: keyShareExt,extra_psk: extraExt,h_psk: hash_alg,a_psk: aead_alg) = (if @6_use_grease then (o_dom_1,o_cr,o_kex_ext,empty_extra_ext,@6_tls_h,@6_tls_a) else (backend_dom,i_cr,i_kex_ext,@6_i_extra_ext,@6_backend_h,@6_backend_a)) in
    {2670}let old_psk_data_1: bitstring = zero in
    {2671}let cur_log_9: bitstring = zero in
    {2672}if @6_use_psk then
    (
        {2673}let (psk_65: preSharedKey,id_32: identityPsk,old_es_4: bitstring,is_safe_24: bool) = old_psk_data_1 in
        (
            {2674}let offer_22: params = nego(TLS13,h_psk,a_psk,kex_ext_psk,SNI(dom_psk),ech_inner_or_grease,extra_psk,trunc_client_psk_ext(id_32)) in
            {2675}let cur_log'_10: bitstring = (cur_log_9,CH(cr_psk,offer_22)) in
            {2676}let s_53: bitstring = zero in
            {2677}let k_44: bitstring = catch-fail(psk2b(psk_65)) in
            {2678}let v_522: bool = not-caught-fail(k_44) in
            {2679}let early_secret_41: bitstring = catch-fail((if v_522 then hmac(h_psk,s_53,k_44) else fail-any)) in
            {2680}let v_523: bool = not-caught-fail(early_secret_41) in
            {2681}let l_158: label = (if v_523 then tls13_ext_res_binder else caught-fail) in
            {2682}let m_53: bitstring = (if v_523 then zero else caught-fail) in
            {2683}let h_157: bitstring = (if v_523 then catch-fail(hash(h_psk,m_53)) else caught-fail) in
            {2684}let v_524: bool = not-caught-fail(h_157) in
            {2685}let x_178: bitstring = (if v_524 then (l_158,h_157) else caught-fail) in
            {2686}let binder_key_27: bitstring = (if v_523 then catch-fail((if v_524 then hmac(h_psk,early_secret_41,x_178) else fail-any)) else caught-fail) in
            {2687}let v_525: bool = not-caught-fail(binder_key_27) in
            {2688}let v_526: bitstring = catch-fail((if v_523 then (if v_525 then (early_secret_41,binder_key_27) else fail-any) else fail-any)) in
            {2689}let v_527: bool = (not-caught-fail(v_526) && success?(1-proj-2-tuple(v_526))) in
            {2690}let kb_27: mac_key = (if v_527 then 2-proj-2-tuple(v_526) else caught-fail) in
            {2691}let es_41: bitstring = (if v_527 then 1-proj-2-tuple(v_526) else caught-fail) in
            {2692}let binders_9: bitstring = (if v_527 then catch-fail(hmac(h_psk,kb_27,cur_log'_10)) else caught-fail) in
            {2693}let v_528: bool = not-caught-fail(binders_9) in
            {2694}let v_529: bitstring = catch-fail((if v_527 then (if v_528 then (client_psk_ext(id_32,binders_9),(psk_65,id_32,es_41,is_safe_24)) else fail-any) else fail-any)) in
            {2695}let v_530: bool = (not-caught-fail(v_529) && success?(1-proj-2-tuple(v_529))) in
            {2696}let psk_data_15: bitstring = (if v_530 then 2-proj-2-tuple(v_529) else caught-fail) in
            {2697}let psk_ext_26: preSharedKeyExt = (if v_530 then 1-proj-2-tuple(v_529) else caught-fail) in
            {2698}let i_offer: params = (if v_530 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_26) else caught-fail) in
            {2699}let i_client_hello: msg = (if v_530 then CH(i_cr,i_offer) else caught-fail) in
            {2700}let v_531: bool = (if v_530 then catch-fail(@6_use_grease) else caught-fail) in
            {2701}let o_offer: params = (if v_531 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),ech_inner_or_grease,empty_extra_ext,psk_ext_26) else caught-fail) in
            {2702}new fake_id[]: identityPsk;
            {2703}new fake_binder[]: bitstring;
            {2704}let o_psk_ext: preSharedKeyExt = (if is-false(v_531) then (if @6_use_psk then client_psk_ext(fake_id,fake_binder) else empty_psk_ext) else caught-fail) in
            {2705}let o_ech_ext_ADD: echExt = (if is-false(v_531) then ECHClientHelloOuter(ech_h_3,ech_a_3,config_id_1,enc_1,zero) else caught-fail) in
            {2706}let o_offer_ADD: params = (if is-false(v_531) then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),o_ech_ext_ADD,empty_extra_ext,o_psk_ext) else caught-fail) in
            {2707}let o_client_hello_ADD: msg = (if is-false(v_531) then CH(o_cr,o_offer_ADD) else caught-fail) in
            {2708}let n: nat = (if is-false(v_531) then 1 else caught-fail) in
            {2709}let v_532: hpkeContext = (if is-false(v_531) then catch-fail(context) else caught-fail) in
            {2710}let v_533: bool = (not-caught-fail(v_532) && ((S =nf 1-proj-hpke_context(v_532)) && success?(1-proj-hpke_context(v_532)))) in
            {2711}let base_nonce_1: bitstring = (if v_533 then 3-proj-hpke_context(v_532) else caught-fail) in
            {2712}let key_1: aead_key = (if v_533 then 2-proj-hpke_context(v_532) else caught-fail) in
            {2713}let payload_1: bitstring = (if is-false(v_531) then catch-fail((if v_533 then aead_enc(ech_a_3,key_1,(base_nonce_1,n),o_client_hello_ADD,i_client_hello) else fail-any)) else caught-fail) in
            {2714}let v_534: bool = not-caught-fail(payload_1) in
            {2715}let o_ech_ext: echExt = (if v_534 then ECHClientHelloOuter(ech_h_3,ech_a_3,config_id_1,enc_1,payload_1) else caught-fail) in
            {2716}let o_offer_1: params = (if v_534 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),o_ech_ext,empty_extra_ext,o_psk_ext) else caught-fail) in
            {2717}let (o_client_hello: msg,i_client_hello_1: msg,o_cr_1: bytes32,i_cr_1: bytes32,o_kex_data_1: bitstring,i_kex_data_1: bitstring,o_psk_ext_1: preSharedKeyExt,psk_data_16: bitstring,o_ech_ext_1: echExt) = (if v_530 then (if undo-catch-fail(v_531) then (CH(o_cr,o_offer),CH(o_cr,o_offer),o_cr,o_cr,o_kex_data,o_kex_data,psk_ext_26,psk_data_15,ech_inner_or_grease) else (if v_534 then (CH(o_cr,o_offer_1),i_client_hello,o_cr,i_cr,o_kex_data,i_kex_data,o_psk_ext,psk_data_15,o_ech_ext) else fail-any)) else fail-any) in
            {2718}out(io, o_client_hello);
            {2719}let (psk_66: preSharedKey,id_33: identityPsk,es_42: bitstring,safe: bool) = psk_data_16 in
            (
                {2720}if (false && (not(@6_use_grease) && (psk_66 ≠ NoPsk))) then
                {2721}let client_hello_7: bitstring = (zero,i_client_hello_1) in
                {2722}let l_159: label = tls13_client_early_traffic_secret in
                {2723}let h_158: bitstring = catch-fail(hash(@6_backend_h,client_hello_7)) in
                {2724}let v_535: bool = not-caught-fail(h_158) in
                {2725}let x_179: bitstring = (if v_535 then (l_159,h_158) else caught-fail) in
                {2726}let atsc0_4: bitstring = catch-fail((if v_535 then hmac(@6_backend_h,es_42,x_179) else fail-any)) in
                {2727}let v_536: bool = not-caught-fail(atsc0_4) in
                {2728}let l_160: label = (if v_536 then tls13_key else caught-fail) in
                {2729}let h_159: bitstring = (if v_536 then zero else caught-fail) in
                {2730}let x_180: bitstring = (if v_536 then (l_160,h_159) else caught-fail) in
                {2731}let kc0_4: bitstring = (if v_536 then catch-fail(hmac(@6_backend_h,atsc0_4,x_180)) else caught-fail) in
                {2732}let v_537: bool = not-caught-fail(kc0_4) in
                {2733}let l_161: label = (if v_537 then tls13_early_exporter_master_secret else caught-fail) in
                {2734}let h_160: bitstring = (if v_537 then catch-fail(hash(@6_backend_h,client_hello_7)) else caught-fail) in
                {2735}let v_538: bool = not-caught-fail(h_160) in
                {2736}let x_181: bitstring = (if v_538 then (l_161,h_160) else caught-fail) in
                {2737}let ems0_8: bitstring = (if v_537 then catch-fail((if v_538 then hmac(@6_backend_h,es_42,x_181) else fail-any)) else caught-fail) in
                {2738}let v_539: bool = not-caught-fail(ems0_8) in
                {2739}let (wkc0_4: aead_key,ems0_9: bitstring) = (if v_536 then (if v_537 then (if v_539 then (kc0_4,ems0_8) else fail-any) else fail-any) else fail-any) in
                {2740}!
                {2741}in(io, (i_4: nat,ad_4: bitstring));
                {2742}if is_nat(i_4) then
                {2743}new msg_ed_3[]: bitstring;
                {2744}let enc_ed_3: bitstring = aead_enc(@6_backend_a,wkc0_4,i_4,ad_4,msg_ed_3) in
                {2745}new st_13: stamp;
                {2746}event ClientSequenceClient0RTTDataWriteKey(@6_id_client,st_13,i_4);
                {2747}event ClientSends0(@6_id_client,i_cr_1,psk_66,i_4,ad_4,msg_ed_3);
                {2748}out(io, enc_ed_3)
            ) | (
                {2749}in(io, server_hello_4: msg);
                {2750}let SH(B32(sr24_2: bytes24,sr8_1: bytes8),mode_15: params) = server_hello_4 in
                (
                    {2751}if (false && (B32(sr24_2,sr8_1) = B32(HRR24,HRR8))) then
                    (
                        {2752}if (send_kex_4 ≠ true) then
                        {2753}let nego(=TLS13,h_alg_11: hash_alg,a_alg_9: aead_alg,hrr_kex_ext(g_13: group),=empty_sni_ext,ech_ext_6: echExt,=empty_extra_ext,=empty_psk_ext) = mode_15 in
                        {2754}let v_540: bool = (ech_ext_6 = empty_ech_ext) in
                        {2755}let hrr_mode: params = (if not(v_540) then nego(TLS13,@6_backend_h,@6_backend_a,hrr_kex_ext(@6_backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) else caught-fail) in
                        {2756}let hrr: msg = (if not(v_540) then SH(B32(HRR24,HRR8),hrr_mode) else caught-fail) in
                        {2757}let cur_log_10: bitstring = (if not(v_540) then ((zero,i_client_hello_1),hrr) else caught-fail) in
                        {2758}let transcript_hrr_ech_conf: bitstring = (if not(v_540) then catch-fail(hash(@6_backend_h,cur_log_10)) else caught-fail) in
                        {2759}let v_541: bool = not-caught-fail(transcript_hrr_ech_conf) in
                        {2760}let s_54: bitstring = (if v_541 then zero else caught-fail) in
                        {2761}let k_45: bitstring = (if v_541 then catch-fail(b32_2_b(get_random(i_client_hello_1))) else caught-fail) in
                        {2762}let v_542: bool = not-caught-fail(k_45) in
                        {2763}let k_46: bitstring = (if v_541 then catch-fail((if v_542 then hmac(@6_backend_h,s_54,k_45) else fail-any)) else caught-fail) in
                        {2764}let v_543: bool = not-caught-fail(k_46) in
                        {2765}let l_162: label = (if v_543 then hrr_ech_accept_confirmation else caught-fail) in
                        {2766}let x_182: bitstring = (if v_543 then (l_162,cur_log_10) else caught-fail) in
                        {2767}let is_ech_accepted: bool = (if v_540 then false else (if (ech_ext_6 = ECHHelloRetryRequest((if v_541 then crop_into_bytes8((if v_543 then hmac(@6_backend_h,k_46,x_182) else fail-any)) else fail-any))) then true else false)) in
                        {2768}event ClientEchAcceptance(@6_id_client,is_ech_accepted);
                        {2769}if is_ech_accepted then
                        (
                            {2770}let cur_log_IN1_HRR: bitstring = ((zero,i_client_hello_1),server_hello_4) in
                            {2771}let ech_config(config_id_2: configId,ech_g_4: group,pkR_4: element,o_dom_2: domain,ech_h_4: hash_alg,ech_a_4: aead_alg) = ech_conf in
                            {2772}let send_key_share: bool = true in
                            {2773}new s_55[]: seed;
                            {2774}let gx_15: element = dh_pub(@6_backend_g,dh_k(s_55)) in
                            {2775}let v_544: bitstring = (dh_k(s_55),gx_15) in
                            {2776}let v_545: bool = success?(1-proj-2-tuple(v_544)) in
                            {2777}let gx_16: element = (if v_545 then 2-proj-2-tuple(v_544) else caught-fail) in
                            {2778}let x_183: bitstring = (if v_545 then 1-proj-2-tuple(v_544) else caught-fail) in
                            {2779}let kex_6: kex_alg = (if v_545 then (if send_key_share then DHE_kex(@6_backend_g,gx_16) else DHE_group(@6_backend_g)) else caught-fail) in
                            {2780}let (i_kex_ext_1: keyShareExt,i_kex_data_2: bitstring) = (if v_545 then (client_kex_ext(kex_6),(x_183,@6_backend_g)) else fail-any) in
                            {2781}let send_key_share_1: bool = true in
                            {2782}new s_56[]: seed;
                            {2783}let gx_17: element = dh_pub(@6_tls_g,dh_k(s_56)) in
                            {2784}let v_546: bitstring = (dh_k(s_56),gx_17) in
                            {2785}let v_547: bool = success?(1-proj-2-tuple(v_546)) in
                            {2786}let gx_18: element = (if v_547 then 2-proj-2-tuple(v_546) else caught-fail) in
                            {2787}let x_184: bitstring = (if v_547 then 1-proj-2-tuple(v_546) else caught-fail) in
                            {2788}let kex_7: kex_alg = (if v_547 then (if send_key_share_1 then DHE_kex(@6_tls_g,gx_18) else DHE_group(@6_tls_g)) else caught-fail) in
                            {2789}let (o_kex_ext_1: keyShareExt,o_kex_data_2: bitstring) = (if v_547 then (client_kex_ext(kex_7),(x_184,@6_tls_g)) else fail-any) in
                            {2790}new rand24_7[]: bytes24;
                            {2791}new rand8_7[]: bytes8;
                            {2792}let i_cr_2: bytes32 = B32(rand24_7,rand8_7) in
                            {2793}new rand24_8[]: bytes24;
                            {2794}new rand8_8[]: bytes8;
                            {2795}let o_cr_2: bytes32 = B32(rand24_8,rand8_8) in
                            {2796}let ech_ext_7: echExt = ECHClientHelloInner in
                            {2797}if @6_use_psk then
                            (
                                {2798}let (psk_67: preSharedKey,id_34: identityPsk,old_es_5: bitstring,is_safe_25: bool) = psk_data_16 in
                                (
                                    {2799}let offer_23: params = nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_1,SNI(backend_dom),ech_ext_7,@6_i_extra_ext,trunc_client_psk_ext(id_34)) in
                                    {2800}let cur_log'_11: bitstring = (cur_log_IN1_HRR,CH(i_cr_2,offer_23)) in
                                    {2801}let s_57: bitstring = zero in
                                    {2802}let k_47: bitstring = catch-fail(psk2b(psk_67)) in
                                    {2803}let v_548: bool = not-caught-fail(k_47) in
                                    {2804}let early_secret_42: bitstring = catch-fail((if v_548 then hmac(@6_backend_h,s_57,k_47) else fail-any)) in
                                    {2805}let v_549: bool = not-caught-fail(early_secret_42) in
                                    {2806}let l_163: label = (if v_549 then tls13_ext_res_binder else caught-fail) in
                                    {2807}let m_54: bitstring = (if v_549 then zero else caught-fail) in
                                    {2808}let h_161: bitstring = (if v_549 then catch-fail(hash(@6_backend_h,m_54)) else caught-fail) in
                                    {2809}let v_550: bool = not-caught-fail(h_161) in
                                    {2810}let x_185: bitstring = (if v_550 then (l_163,h_161) else caught-fail) in
                                    {2811}let binder_key_28: bitstring = (if v_549 then catch-fail((if v_550 then hmac(@6_backend_h,early_secret_42,x_185) else fail-any)) else caught-fail) in
                                    {2812}let v_551: bool = not-caught-fail(binder_key_28) in
                                    {2813}let v_552: bitstring = catch-fail((if v_549 then (if v_551 then (early_secret_42,binder_key_28) else fail-any) else fail-any)) in
                                    {2814}let v_553: bool = (not-caught-fail(v_552) && success?(1-proj-2-tuple(v_552))) in
                                    {2815}let kb_28: mac_key = (if v_553 then 2-proj-2-tuple(v_552) else caught-fail) in
                                    {2816}let es_43: bitstring = (if v_553 then 1-proj-2-tuple(v_552) else caught-fail) in
                                    {2817}let binders_10: bitstring = (if v_553 then catch-fail(hmac(@6_backend_h,kb_28,cur_log'_11)) else caught-fail) in
                                    {2818}let v_554: bool = not-caught-fail(binders_10) in
                                    {2819}let v_555: bitstring = catch-fail((if v_553 then (if v_554 then (client_psk_ext(id_34,binders_10),(psk_67,id_34,es_43,is_safe_25)) else fail-any) else fail-any)) in
                                    {2820}let v_556: bool = (not-caught-fail(v_555) && success?(1-proj-2-tuple(v_555))) in
                                    {2821}let psk_data_17: bitstring = (if v_556 then 2-proj-2-tuple(v_555) else caught-fail) in
                                    {2822}let psk_ext_27: preSharedKeyExt = (if v_556 then 1-proj-2-tuple(v_555) else caught-fail) in
                                    {2823}let i_offer_1: params = (if v_556 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_1,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_27) else caught-fail) in
                                    {2824}let i_client_hello_2: msg = (if v_556 then CH(i_cr_2,i_offer_1) else caught-fail) in
                                    {2825}new fake_id_1[]: identityPsk;
                                    {2826}new fake_binder_1[]: bitstring;
                                    {2827}let o_psk_ext_2: preSharedKeyExt = (if v_556 then (if @6_use_psk then client_psk_ext(fake_id_1,fake_binder_1) else empty_psk_ext) else caught-fail) in
                                    {2828}let o_ech_ext_ADD_1: echExt = (if v_556 then ECHClientHelloOuter(ech_h_4,ech_a_4,config_id_2,zero,zero) else caught-fail) in
                                    {2829}let o_offer_ADD_1: params = (if v_556 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_1,SNI(o_dom_2),o_ech_ext_ADD_1,empty_extra_ext,o_psk_ext_2) else caught-fail) in
                                    {2830}let o_client_hello_ADD_1: msg = (if v_556 then CH(o_cr_2,o_offer_ADD_1) else caught-fail) in
                                    {2831}let n_1: nat = (if v_556 then 2 else caught-fail) in
                                    {2832}let v_557: hpkeContext = (if v_556 then catch-fail(context) else caught-fail) in
                                    {2833}let v_558: bool = (not-caught-fail(v_557) && ((S =nf 1-proj-hpke_context(v_557)) && success?(1-proj-hpke_context(v_557)))) in
                                    {2834}let base_nonce_2: bitstring = (if v_558 then 3-proj-hpke_context(v_557) else caught-fail) in
                                    {2835}let key_2: aead_key = (if v_558 then 2-proj-hpke_context(v_557) else caught-fail) in
                                    {2836}let payload_2: bitstring = (if v_556 then catch-fail((if v_558 then aead_enc(ech_a_4,key_2,(base_nonce_2,n_1),o_client_hello_ADD_1,i_client_hello_2) else fail-any)) else caught-fail) in
                                    {2837}let v_559: bool = not-caught-fail(payload_2) in
                                    {2838}let o_ech_ext_2: echExt = (if v_559 then ECHClientHelloOuter(ech_h_4,ech_a_4,config_id_2,zero,payload_2) else caught-fail) in
                                    {2839}let o_offer_2: params = (if v_559 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_1,SNI(o_dom_2),o_ech_ext_2,empty_extra_ext,o_psk_ext_2) else caught-fail) in
                                    {2840}let (o_client_hello': msg,i_client_hello': msg,i_cr': bytes32,i_kex_data': bitstring,psk_data'_9: bitstring) = (if v_556 then (if v_559 then (CH(o_cr_2,o_offer_2),i_client_hello_2,i_cr_2,i_kex_data_2,psk_data_17) else fail-any) else fail-any) in
                                    {2841}out(io, o_client_hello');
                                    {2842}in(io, server_hello'_9: msg);
                                    {2843}let SH(B32(sr24': bytes24,sr8': bytes8),params': params) = server_hello'_9 in
                                    {2844}let cur_log_IN1_HRR_IN2: bitstring = (cur_log_IN1_HRR,i_client_hello') in
                                    {2845}let sh_modified_1: msg = SH(B32(sr24',zero8),params') in
                                    {2846}let cur_log_sh_1: bitstring = (cur_log_IN1_HRR_IN2,sh_modified_1) in
                                    {2847}let transcript_ech_conf_1: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_1)) in
                                    {2848}let v_560: bool = not-caught-fail(transcript_ech_conf_1) in
                                    {2849}let s_58: bitstring = (if v_560 then zero else caught-fail) in
                                    {2850}let k_48: bitstring = (if v_560 then catch-fail(b32_2_b(get_random(i_client_hello'))) else caught-fail) in
                                    {2851}let v_561: bool = not-caught-fail(k_48) in
                                    {2852}let k_49: bitstring = (if v_560 then catch-fail((if v_561 then hmac(@6_backend_h,s_58,k_48) else fail-any)) else caught-fail) in
                                    {2853}let v_562: bool = not-caught-fail(k_49) in
                                    {2854}let l_164: label = (if v_562 then ech_accept_confirmation else caught-fail) in
                                    {2855}let x_186: bitstring = (if v_562 then (l_164,cur_log_sh_1) else caught-fail) in
                                    {2856}let sr8_2: bytes8 = (if v_560 then catch-fail(crop_into_bytes8((if v_562 then hmac(@6_backend_h,k_49,x_186) else fail-any))) else caught-fail) in
                                    {2857}let v_563: bool = not-caught-fail(sr8_2) in
                                    {2858}if (B32(sr24',sr8') = (if v_560 then (if v_563 then B32(sr24',sr8_2) else fail-any) else fail-any)) then
                                    {2859}let (x_187: bitstring,g_14: group) = i_kex_data' in
                                    {2860}let (psk_offer_12: preSharedKey,id_offer_12: identityPsk,es_offer_12: bitstring,is_safe_offer_12: bool) = psk_data'_9 in
                                    {2861}event Client_PSKOffer(@6_id_client,psk_offer_12,id_offer_12,is_safe_offer_12);
                                    {2862}event Client_Rand_client(@6_id_client,i_cr');
                                    {2863}event Client_DH_client(@6_id_client,dh_pub(g_14,x_187));
                                    {2864}event Client_server_domain(@6_id_client,backend_dom);
                                    {2865}let SH(sr_23: bytes32,mode_16: params) = server_hello'_9 in
                                    {2866}event Client_Rand_server(@6_id_client,sr_23);
                                    {2867}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_14,gy_13: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_28: preSharedKeyExt) = mode_16 in
                                    (
                                        {2868}let cur_log2_31: bitstring = (cur_log_IN1_HRR_IN2,server_hello'_9) in
                                        {2869}event Client_DH_server(@6_id_client,gy_13);
                                        {2870}let v_564: bool = (psk_ext_28 = empty_psk_ext) in
                                        {2871}let psk_68: preSharedKey = (if v_564 then NoPsk else caught-fail) in
                                        {2872}let s_59: bitstring = (if v_564 then zero else caught-fail) in
                                        {2873}let k_50: bitstring = (if v_564 then catch-fail(psk2b(psk_68)) else caught-fail) in
                                        {2874}let v_565: bool = not-caught-fail(k_50) in
                                        {2875}let early_secret_43: bitstring = (if v_564 then catch-fail((if v_565 then hmac(@6_backend_h,s_59,k_50) else fail-any)) else caught-fail) in
                                        {2876}let v_566: bool = not-caught-fail(early_secret_43) in
                                        {2877}let l_165: label = (if v_566 then tls13_ext_res_binder else caught-fail) in
                                        {2878}let m_55: bitstring = (if v_566 then zero else caught-fail) in
                                        {2879}let h_162: bitstring = (if v_566 then catch-fail(hash(@6_backend_h,m_55)) else caught-fail) in
                                        {2880}let v_567: bool = not-caught-fail(h_162) in
                                        {2881}let x_188: bitstring = (if v_567 then (l_165,h_162) else caught-fail) in
                                        {2882}let binder_key_29: bitstring = (if v_566 then catch-fail((if v_567 then hmac(@6_backend_h,early_secret_43,x_188) else fail-any)) else caught-fail) in
                                        {2883}let v_568: bool = not-caught-fail(binder_key_29) in
                                        {2884}let v_569: bitstring = (if v_564 then catch-fail((if v_566 then (if v_568 then (early_secret_43,binder_key_29) else fail-any) else fail-any)) else caught-fail) in
                                        {2885}let v_570: bool = (not-caught-fail(v_569) && success?(1-proj-2-tuple(v_569))) in
                                        {2886}let kb_29: mac_key = (if v_570 then 2-proj-2-tuple(v_569) else caught-fail) in
                                        {2887}let es_44: bitstring = (if v_570 then 1-proj-2-tuple(v_569) else caught-fail) in
                                        {2888}let v_571: bitstring = (if not(v_564) then catch-fail(psk_data'_9) else caught-fail) in
                                        {2889}let v_572: bool = (not-caught-fail(v_571) && success?(1-proj-4-tuple(v_571))) in
                                        {2890}let is_safe_26: bool = (if v_572 then 4-proj-4-tuple(v_571) else caught-fail) in
                                        {2891}let es_45: bitstring = (if v_572 then 3-proj-4-tuple(v_571) else caught-fail) in
                                        {2892}let id_35: identityPsk = (if v_572 then 2-proj-4-tuple(v_571) else caught-fail) in
                                        {2893}let psk_69: preSharedKey = (if v_572 then 1-proj-4-tuple(v_571) else caught-fail) in
                                        {2894}let (psk_70: preSharedKey,early_secret_44: bitstring,valid_12: bool,safe_psk_18: bool) = (if v_564 then (if v_570 then (NoPsk,es_44,true,false) else fail-any) else (if v_572 then (psk_69,es_45,((psk_69 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_28)),is_safe_26) else fail-any)) in
                                        {2895}event Client_PSKChoosen(@6_id_client,psk_70,safe_psk_18);
                                        {2896}if valid_12 then
                                        (
                                            {2897}let gxy_25: element = catch-fail(dh_decap_fun(g_14,gy_13,x_187)) in
                                            {2898}let v_573: bool = not-caught-fail(gxy_25) in
                                            {2899}new s_60[]: seed;
                                            {2900}let gxy_26: element = (if v_573 then gxy_25 else dh_f(s_60)) in
                                            {2901}event Client_DH_gxy(@6_id_client,gxy_26);
                                            {2902}let l_166: label = tls13_derived in
                                            {2903}let m_56: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {2904}let v_574: bool = not-caught-fail(m_56) in
                                            {2905}let h_163: bitstring = (if v_574 then catch-fail(hash(@6_backend_h,m_56)) else caught-fail) in
                                            {2906}let v_575: bool = not-caught-fail(h_163) in
                                            {2907}let x_189: bitstring = (if v_575 then (l_166,h_163) else caught-fail) in
                                            {2908}let extra_30: bitstring = catch-fail((if v_574 then (if v_575 then hmac(@6_backend_h,early_secret_44,x_189) else fail-any) else fail-any)) in
                                            {2909}let v_576: bool = not-caught-fail(extra_30) in
                                            {2910}let handshake_secret_13: bitstring = (if v_576 then hmac(@6_backend_h,extra_30,gxy_26) else fail-any) in
                                            {2911}let l_167: label = tls13_derived in
                                            {2912}let m_57: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {2913}let v_577: bool = not-caught-fail(m_57) in
                                            {2914}let h_164: bitstring = (if v_577 then catch-fail(hash(@6_backend_h,m_57)) else caught-fail) in
                                            {2915}let v_578: bool = not-caught-fail(h_164) in
                                            {2916}let x_190: bitstring = (if v_578 then (l_167,h_164) else caught-fail) in
                                            {2917}let extra_31: bitstring = catch-fail((if v_577 then (if v_578 then hmac(@6_backend_h,handshake_secret_13,x_190) else fail-any) else fail-any)) in
                                            {2918}let v_579: bool = not-caught-fail(extra_31) in
                                            {2919}let k_51: bitstring = (if v_579 then zero else caught-fail) in
                                            {2920}let master_secret_33: bitstring = (if v_579 then catch-fail(hmac(@6_backend_h,handshake_secret_13,k_51)) else caught-fail) in
                                            {2921}let v_580: bool = not-caught-fail(master_secret_33) in
                                            {2922}let l_168: label = (if v_580 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {2923}let h_165: bitstring = (if v_580 then catch-fail(hash(@6_backend_h,cur_log2_31)) else caught-fail) in
                                            {2924}let v_581: bool = not-caught-fail(h_165) in
                                            {2925}let x_191: bitstring = (if v_581 then (l_168,h_165) else caught-fail) in
                                            {2926}let client_hts_13: bitstring = (if v_580 then catch-fail((if v_581 then hmac(@6_backend_h,handshake_secret_13,x_191) else fail-any)) else caught-fail) in
                                            {2927}let v_582: bool = not-caught-fail(client_hts_13) in
                                            {2928}let l_169: label = (if v_582 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {2929}let h_166: bitstring = (if v_582 then catch-fail(hash(@6_backend_h,cur_log2_31)) else caught-fail) in
                                            {2930}let v_583: bool = not-caught-fail(h_166) in
                                            {2931}let x_192: bitstring = (if v_583 then (l_169,h_166) else caught-fail) in
                                            {2932}let server_hts_13: bitstring = (if v_582 then catch-fail((if v_583 then hmac(@6_backend_h,handshake_secret_13,x_192) else fail-any)) else caught-fail) in
                                            {2933}let v_584: bool = not-caught-fail(server_hts_13) in
                                            {2934}let l_170: label = (if v_584 then tls13_key else caught-fail) in
                                            {2935}let h_167: bitstring = (if v_584 then zero else caught-fail) in
                                            {2936}let x_193: bitstring = (if v_584 then (l_170,h_167) else caught-fail) in
                                            {2937}let client_wkh_13: bitstring = (if v_584 then catch-fail(hmac(@6_backend_h,client_hts_13,x_193)) else caught-fail) in
                                            {2938}let v_585: bool = not-caught-fail(client_wkh_13) in
                                            {2939}let l_171: label = (if v_585 then tls13_key else caught-fail) in
                                            {2940}let h_168: bitstring = (if v_585 then zero else caught-fail) in
                                            {2941}let x_194: bitstring = (if v_585 then (l_171,h_168) else caught-fail) in
                                            {2942}let server_wkh_13: bitstring = (if v_585 then catch-fail(hmac(@6_backend_h,server_hts_13,x_194)) else caught-fail) in
                                            {2943}let v_586: bool = not-caught-fail(server_wkh_13) in
                                            {2944}let l_172: label = (if v_586 then tls13_finished else caught-fail) in
                                            {2945}let h_169: bitstring = (if v_586 then zero else caught-fail) in
                                            {2946}let x_195: bitstring = (if v_586 then (l_172,h_169) else caught-fail) in
                                            {2947}let client_fk_13: bitstring = (if v_586 then catch-fail(hmac(@6_backend_h,client_hts_13,x_195)) else caught-fail) in
                                            {2948}let v_587: bool = not-caught-fail(client_fk_13) in
                                            {2949}let l_173: label = (if v_587 then tls13_finished else caught-fail) in
                                            {2950}let h_170: bitstring = (if v_587 then zero else caught-fail) in
                                            {2951}let x_196: bitstring = (if v_587 then (l_173,h_170) else caught-fail) in
                                            {2952}let server_fk_13: bitstring = (if v_587 then catch-fail(hmac(@6_backend_h,server_hts_13,x_196)) else caught-fail) in
                                            {2953}let v_588: bool = not-caught-fail(server_fk_13) in
                                            {2954}let (master_secret_34: bitstring,chk_20: aead_key,shk_19: aead_key,cfin_20: mac_key,sfin_19: mac_key) = (if v_579 then (if v_580 then (if v_582 then (if v_584 then (if v_585 then (if v_586 then (if v_587 then (if v_588 then (master_secret_33,client_wkh_13,server_wkh_13,client_fk_13,server_fk_13) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {2955}event Client_chk(@6_id_client,chk_20);
                                            {2956}event Client_shk(@6_id_client,shk_19);
                                            {2957}event Client_cfin(@6_id_client,cfin_20);
                                            {2958}event Client_sfin(@6_id_client,sfin_19);
                                            {2959}in(io, enc_ee_msg_12: bitstring);
                                            {2960}let ee_msg_13: msg = aead_dec(@6_backend_a,shk_19,0,zero,enc_ee_msg_12) in
                                            {2961}let EE(ech_ee_12: echExt,extra_ee_12: extraExt) = ee_msg_13 in
                                            {2962}let cur_log2_32: bitstring = (cur_log2_31,ee_msg_13) in
                                            {2963}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr',sr_23,@6_backend_h,@6_backend_a,c_dom_6,backend_dom,psk_70,safe_psk_18,@6_comp_psk,master_secret_34,chk_20,0,shk_19,1,cfin_20,sfin_19,cur_log2_32)))
                                        )
                                        else
                                            {2964}out(io, illegal_parameter)
                                    )
                                    else
                                        {2965}out(io, illegal_parameter)
                                )
                                else
                                    {3142}get pre_shared_keys(c_dom'_6: domain,=backend_dom,=@6_backend_h,id_36: identityPsk,psk_71: preSharedKey,idP_8: idProc,is_safe_27: bool) in
                                    {2966}event Selected_one_time_used_psk(@6_id_client,psk_71,is_safe_27);
                                    {2967}event Selected_psk(c_dom_6,c_dom'_6,idP_8,is_safe_27);
                                    {2968}event Selected_psk_no_missmatch(@6_id_client,backend_dom,@6_backend_h,psk_71,id_36);
                                    {2969}event Selected_psk_with_ID(c_dom_6,c_dom'_6,id_36,idP_8,is_safe_27);
                                    {2970}let v_589: bitstring = (id_36,psk_71,is_safe_27) in
                                    {2971}let v_590: bool = success?(1-proj-3-tuple(v_589)) in
                                    {2972}let is_safe_28: bool = (if v_590 then 3-proj-3-tuple(v_589) else caught-fail) in
                                    {2973}let psk_72: preSharedKey = (if v_590 then 2-proj-3-tuple(v_589) else caught-fail) in
                                    {2974}let id_37: identityPsk = (if v_590 then 1-proj-3-tuple(v_589) else caught-fail) in
                                    {2975}let offer_24: params = (if v_590 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_1,SNI(backend_dom),ech_ext_7,@6_i_extra_ext,trunc_client_psk_ext(id_37)) else caught-fail) in
                                    {2976}let cur_log'_12: bitstring = (if v_590 then (cur_log_IN1_HRR,CH(i_cr_2,offer_24)) else caught-fail) in
                                    {2977}let s_61: bitstring = (if v_590 then zero else caught-fail) in
                                    {2978}let k_52: bitstring = (if v_590 then catch-fail(psk2b(psk_72)) else caught-fail) in
                                    {2979}let v_591: bool = not-caught-fail(k_52) in
                                    {2980}let early_secret_45: bitstring = (if v_590 then catch-fail((if v_591 then hmac(@6_backend_h,s_61,k_52) else fail-any)) else caught-fail) in
                                    {2981}let v_592: bool = not-caught-fail(early_secret_45) in
                                    {2982}let l_174: label = (if v_592 then tls13_ext_res_binder else caught-fail) in
                                    {2983}let m_58: bitstring = (if v_592 then zero else caught-fail) in
                                    {2984}let h_171: bitstring = (if v_592 then catch-fail(hash(@6_backend_h,m_58)) else caught-fail) in
                                    {2985}let v_593: bool = not-caught-fail(h_171) in
                                    {2986}let x_197: bitstring = (if v_593 then (l_174,h_171) else caught-fail) in
                                    {2987}let binder_key_30: bitstring = (if v_592 then catch-fail((if v_593 then hmac(@6_backend_h,early_secret_45,x_197) else fail-any)) else caught-fail) in
                                    {2988}let v_594: bool = not-caught-fail(binder_key_30) in
                                    {2989}let v_595: bitstring = (if v_590 then catch-fail((if v_592 then (if v_594 then (early_secret_45,binder_key_30) else fail-any) else fail-any)) else caught-fail) in
                                    {2990}let v_596: bool = (not-caught-fail(v_595) && success?(1-proj-2-tuple(v_595))) in
                                    {2991}let kb_30: mac_key = (if v_596 then 2-proj-2-tuple(v_595) else caught-fail) in
                                    {2992}let es_46: bitstring = (if v_596 then 1-proj-2-tuple(v_595) else caught-fail) in
                                    {2993}let binders_11: bitstring = (if v_596 then catch-fail(hmac(@6_backend_h,kb_30,cur_log'_12)) else caught-fail) in
                                    {2994}let v_597: bool = not-caught-fail(binders_11) in
                                    {2995}let v_598: bitstring = catch-fail((if v_590 then (if v_596 then (if v_597 then (client_psk_ext(id_37,binders_11),(psk_72,id_37,es_46,is_safe_28)) else fail-any) else fail-any) else fail-any)) in
                                    {2996}let v_599: bool = (not-caught-fail(v_598) && success?(1-proj-2-tuple(v_598))) in
                                    {2997}let psk_data_18: bitstring = (if v_599 then 2-proj-2-tuple(v_598) else caught-fail) in
                                    {2998}let psk_ext_29: preSharedKeyExt = (if v_599 then 1-proj-2-tuple(v_598) else caught-fail) in
                                    {2999}let i_offer_2: params = (if v_599 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_1,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_29) else caught-fail) in
                                    {3000}let i_client_hello_3: msg = (if v_599 then CH(i_cr_2,i_offer_2) else caught-fail) in
                                    {3001}new fake_id_2[]: identityPsk;
                                    {3002}new fake_binder_2[]: bitstring;
                                    {3003}let o_psk_ext_3: preSharedKeyExt = (if v_599 then (if @6_use_psk then client_psk_ext(fake_id_2,fake_binder_2) else empty_psk_ext) else caught-fail) in
                                    {3004}let o_ech_ext_ADD_2: echExt = (if v_599 then ECHClientHelloOuter(ech_h_4,ech_a_4,config_id_2,zero,zero) else caught-fail) in
                                    {3005}let o_offer_ADD_2: params = (if v_599 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_1,SNI(o_dom_2),o_ech_ext_ADD_2,empty_extra_ext,o_psk_ext_3) else caught-fail) in
                                    {3006}let o_client_hello_ADD_2: msg = (if v_599 then CH(o_cr_2,o_offer_ADD_2) else caught-fail) in
                                    {3007}let n_2: nat = (if v_599 then 2 else caught-fail) in
                                    {3008}let v_600: hpkeContext = (if v_599 then catch-fail(context) else caught-fail) in
                                    {3009}let v_601: bool = (not-caught-fail(v_600) && ((S =nf 1-proj-hpke_context(v_600)) && success?(1-proj-hpke_context(v_600)))) in
                                    {3010}let base_nonce_3: bitstring = (if v_601 then 3-proj-hpke_context(v_600) else caught-fail) in
                                    {3011}let key_3: aead_key = (if v_601 then 2-proj-hpke_context(v_600) else caught-fail) in
                                    {3012}let payload_3: bitstring = (if v_599 then catch-fail((if v_601 then aead_enc(ech_a_4,key_3,(base_nonce_3,n_2),o_client_hello_ADD_2,i_client_hello_3) else fail-any)) else caught-fail) in
                                    {3013}let v_602: bool = not-caught-fail(payload_3) in
                                    {3014}let o_ech_ext_3: echExt = (if v_602 then ECHClientHelloOuter(ech_h_4,ech_a_4,config_id_2,zero,payload_3) else caught-fail) in
                                    {3015}let o_offer_3: params = (if v_602 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_1,SNI(o_dom_2),o_ech_ext_3,empty_extra_ext,o_psk_ext_3) else caught-fail) in
                                    {3016}let (o_client_hello'_1: msg,i_client_hello'_1: msg,i_cr'_1: bytes32,i_kex_data'_1: bitstring,psk_data'_10: bitstring) = (if v_599 then (if v_602 then (CH(o_cr_2,o_offer_3),i_client_hello_3,i_cr_2,i_kex_data_2,psk_data_18) else fail-any) else fail-any) in
                                    {3017}out(io, o_client_hello'_1);
                                    {3018}in(io, server_hello'_10: msg);
                                    {3019}let SH(B32(sr24'_1: bytes24,sr8'_1: bytes8),params'_1: params) = server_hello'_10 in
                                    {3020}let cur_log_IN1_HRR_IN2_1: bitstring = (cur_log_IN1_HRR,i_client_hello'_1) in
                                    {3021}let sh_modified_2: msg = SH(B32(sr24'_1,zero8),params'_1) in
                                    {3022}let cur_log_sh_2: bitstring = (cur_log_IN1_HRR_IN2_1,sh_modified_2) in
                                    {3023}let transcript_ech_conf_2: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_2)) in
                                    {3024}let v_603: bool = not-caught-fail(transcript_ech_conf_2) in
                                    {3025}let s_62: bitstring = (if v_603 then zero else caught-fail) in
                                    {3026}let k_53: bitstring = (if v_603 then catch-fail(b32_2_b(get_random(i_client_hello'_1))) else caught-fail) in
                                    {3027}let v_604: bool = not-caught-fail(k_53) in
                                    {3028}let k_54: bitstring = (if v_603 then catch-fail((if v_604 then hmac(@6_backend_h,s_62,k_53) else fail-any)) else caught-fail) in
                                    {3029}let v_605: bool = not-caught-fail(k_54) in
                                    {3030}let l_175: label = (if v_605 then ech_accept_confirmation else caught-fail) in
                                    {3031}let x_198: bitstring = (if v_605 then (l_175,cur_log_sh_2) else caught-fail) in
                                    {3032}let sr8_3: bytes8 = (if v_603 then catch-fail(crop_into_bytes8((if v_605 then hmac(@6_backend_h,k_54,x_198) else fail-any))) else caught-fail) in
                                    {3033}let v_606: bool = not-caught-fail(sr8_3) in
                                    {3034}if (B32(sr24'_1,sr8'_1) = (if v_603 then (if v_606 then B32(sr24'_1,sr8_3) else fail-any) else fail-any)) then
                                    {3035}let (x_199: bitstring,g_15: group) = i_kex_data'_1 in
                                    {3036}let (psk_offer_13: preSharedKey,id_offer_13: identityPsk,es_offer_13: bitstring,is_safe_offer_13: bool) = psk_data'_10 in
                                    {3037}event Client_PSKOffer(@6_id_client,psk_offer_13,id_offer_13,is_safe_offer_13);
                                    {3038}event Client_Rand_client(@6_id_client,i_cr'_1);
                                    {3039}event Client_DH_client(@6_id_client,dh_pub(g_15,x_199));
                                    {3040}event Client_server_domain(@6_id_client,backend_dom);
                                    {3041}let SH(sr_24: bytes32,mode_17: params) = server_hello'_10 in
                                    {3042}event Client_Rand_server(@6_id_client,sr_24);
                                    {3043}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_15,gy_14: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_30: preSharedKeyExt) = mode_17 in
                                    (
                                        {3044}let cur_log2_33: bitstring = (cur_log_IN1_HRR_IN2_1,server_hello'_10) in
                                        {3045}event Client_DH_server(@6_id_client,gy_14);
                                        {3046}let v_607: bool = (psk_ext_30 = empty_psk_ext) in
                                        {3047}let psk_73: preSharedKey = (if v_607 then NoPsk else caught-fail) in
                                        {3048}let s_63: bitstring = (if v_607 then zero else caught-fail) in
                                        {3049}let k_55: bitstring = (if v_607 then catch-fail(psk2b(psk_73)) else caught-fail) in
                                        {3050}let v_608: bool = not-caught-fail(k_55) in
                                        {3051}let early_secret_46: bitstring = (if v_607 then catch-fail((if v_608 then hmac(@6_backend_h,s_63,k_55) else fail-any)) else caught-fail) in
                                        {3052}let v_609: bool = not-caught-fail(early_secret_46) in
                                        {3053}let l_176: label = (if v_609 then tls13_ext_res_binder else caught-fail) in
                                        {3054}let m_59: bitstring = (if v_609 then zero else caught-fail) in
                                        {3055}let h_172: bitstring = (if v_609 then catch-fail(hash(@6_backend_h,m_59)) else caught-fail) in
                                        {3056}let v_610: bool = not-caught-fail(h_172) in
                                        {3057}let x_200: bitstring = (if v_610 then (l_176,h_172) else caught-fail) in
                                        {3058}let binder_key_31: bitstring = (if v_609 then catch-fail((if v_610 then hmac(@6_backend_h,early_secret_46,x_200) else fail-any)) else caught-fail) in
                                        {3059}let v_611: bool = not-caught-fail(binder_key_31) in
                                        {3060}let v_612: bitstring = (if v_607 then catch-fail((if v_609 then (if v_611 then (early_secret_46,binder_key_31) else fail-any) else fail-any)) else caught-fail) in
                                        {3061}let v_613: bool = (not-caught-fail(v_612) && success?(1-proj-2-tuple(v_612))) in
                                        {3062}let kb_31: mac_key = (if v_613 then 2-proj-2-tuple(v_612) else caught-fail) in
                                        {3063}let es_47: bitstring = (if v_613 then 1-proj-2-tuple(v_612) else caught-fail) in
                                        {3064}let v_614: bitstring = (if not(v_607) then catch-fail(psk_data'_10) else caught-fail) in
                                        {3065}let v_615: bool = (not-caught-fail(v_614) && success?(1-proj-4-tuple(v_614))) in
                                        {3066}let is_safe_29: bool = (if v_615 then 4-proj-4-tuple(v_614) else caught-fail) in
                                        {3067}let es_48: bitstring = (if v_615 then 3-proj-4-tuple(v_614) else caught-fail) in
                                        {3068}let id_38: identityPsk = (if v_615 then 2-proj-4-tuple(v_614) else caught-fail) in
                                        {3069}let psk_74: preSharedKey = (if v_615 then 1-proj-4-tuple(v_614) else caught-fail) in
                                        {3070}let (psk_75: preSharedKey,early_secret_47: bitstring,valid_13: bool,safe_psk_19: bool) = (if v_607 then (if v_613 then (NoPsk,es_47,true,false) else fail-any) else (if v_615 then (psk_74,es_48,((psk_74 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_30)),is_safe_29) else fail-any)) in
                                        {3071}event Client_PSKChoosen(@6_id_client,psk_75,safe_psk_19);
                                        {3072}if valid_13 then
                                        (
                                            {3073}let gxy_27: element = catch-fail(dh_decap_fun(g_15,gy_14,x_199)) in
                                            {3074}let v_616: bool = not-caught-fail(gxy_27) in
                                            {3075}new s_64[]: seed;
                                            {3076}let gxy_28: element = (if v_616 then gxy_27 else dh_f(s_64)) in
                                            {3077}event Client_DH_gxy(@6_id_client,gxy_28);
                                            {3078}let l_177: label = tls13_derived in
                                            {3079}let m_60: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {3080}let v_617: bool = not-caught-fail(m_60) in
                                            {3081}let h_173: bitstring = (if v_617 then catch-fail(hash(@6_backend_h,m_60)) else caught-fail) in
                                            {3082}let v_618: bool = not-caught-fail(h_173) in
                                            {3083}let x_201: bitstring = (if v_618 then (l_177,h_173) else caught-fail) in
                                            {3084}let extra_32: bitstring = catch-fail((if v_617 then (if v_618 then hmac(@6_backend_h,early_secret_47,x_201) else fail-any) else fail-any)) in
                                            {3085}let v_619: bool = not-caught-fail(extra_32) in
                                            {3086}let handshake_secret_14: bitstring = (if v_619 then hmac(@6_backend_h,extra_32,gxy_28) else fail-any) in
                                            {3087}let l_178: label = tls13_derived in
                                            {3088}let m_61: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {3089}let v_620: bool = not-caught-fail(m_61) in
                                            {3090}let h_174: bitstring = (if v_620 then catch-fail(hash(@6_backend_h,m_61)) else caught-fail) in
                                            {3091}let v_621: bool = not-caught-fail(h_174) in
                                            {3092}let x_202: bitstring = (if v_621 then (l_178,h_174) else caught-fail) in
                                            {3093}let extra_33: bitstring = catch-fail((if v_620 then (if v_621 then hmac(@6_backend_h,handshake_secret_14,x_202) else fail-any) else fail-any)) in
                                            {3094}let v_622: bool = not-caught-fail(extra_33) in
                                            {3095}let k_56: bitstring = (if v_622 then zero else caught-fail) in
                                            {3096}let master_secret_35: bitstring = (if v_622 then catch-fail(hmac(@6_backend_h,handshake_secret_14,k_56)) else caught-fail) in
                                            {3097}let v_623: bool = not-caught-fail(master_secret_35) in
                                            {3098}let l_179: label = (if v_623 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {3099}let h_175: bitstring = (if v_623 then catch-fail(hash(@6_backend_h,cur_log2_33)) else caught-fail) in
                                            {3100}let v_624: bool = not-caught-fail(h_175) in
                                            {3101}let x_203: bitstring = (if v_624 then (l_179,h_175) else caught-fail) in
                                            {3102}let client_hts_14: bitstring = (if v_623 then catch-fail((if v_624 then hmac(@6_backend_h,handshake_secret_14,x_203) else fail-any)) else caught-fail) in
                                            {3103}let v_625: bool = not-caught-fail(client_hts_14) in
                                            {3104}let l_180: label = (if v_625 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {3105}let h_176: bitstring = (if v_625 then catch-fail(hash(@6_backend_h,cur_log2_33)) else caught-fail) in
                                            {3106}let v_626: bool = not-caught-fail(h_176) in
                                            {3107}let x_204: bitstring = (if v_626 then (l_180,h_176) else caught-fail) in
                                            {3108}let server_hts_14: bitstring = (if v_625 then catch-fail((if v_626 then hmac(@6_backend_h,handshake_secret_14,x_204) else fail-any)) else caught-fail) in
                                            {3109}let v_627: bool = not-caught-fail(server_hts_14) in
                                            {3110}let l_181: label = (if v_627 then tls13_key else caught-fail) in
                                            {3111}let h_177: bitstring = (if v_627 then zero else caught-fail) in
                                            {3112}let x_205: bitstring = (if v_627 then (l_181,h_177) else caught-fail) in
                                            {3113}let client_wkh_14: bitstring = (if v_627 then catch-fail(hmac(@6_backend_h,client_hts_14,x_205)) else caught-fail) in
                                            {3114}let v_628: bool = not-caught-fail(client_wkh_14) in
                                            {3115}let l_182: label = (if v_628 then tls13_key else caught-fail) in
                                            {3116}let h_178: bitstring = (if v_628 then zero else caught-fail) in
                                            {3117}let x_206: bitstring = (if v_628 then (l_182,h_178) else caught-fail) in
                                            {3118}let server_wkh_14: bitstring = (if v_628 then catch-fail(hmac(@6_backend_h,server_hts_14,x_206)) else caught-fail) in
                                            {3119}let v_629: bool = not-caught-fail(server_wkh_14) in
                                            {3120}let l_183: label = (if v_629 then tls13_finished else caught-fail) in
                                            {3121}let h_179: bitstring = (if v_629 then zero else caught-fail) in
                                            {3122}let x_207: bitstring = (if v_629 then (l_183,h_179) else caught-fail) in
                                            {3123}let client_fk_14: bitstring = (if v_629 then catch-fail(hmac(@6_backend_h,client_hts_14,x_207)) else caught-fail) in
                                            {3124}let v_630: bool = not-caught-fail(client_fk_14) in
                                            {3125}let l_184: label = (if v_630 then tls13_finished else caught-fail) in
                                            {3126}let h_180: bitstring = (if v_630 then zero else caught-fail) in
                                            {3127}let x_208: bitstring = (if v_630 then (l_184,h_180) else caught-fail) in
                                            {3128}let server_fk_14: bitstring = (if v_630 then catch-fail(hmac(@6_backend_h,server_hts_14,x_208)) else caught-fail) in
                                            {3129}let v_631: bool = not-caught-fail(server_fk_14) in
                                            {3130}let (master_secret_36: bitstring,chk_21: aead_key,shk_20: aead_key,cfin_21: mac_key,sfin_20: mac_key) = (if v_622 then (if v_623 then (if v_625 then (if v_627 then (if v_628 then (if v_629 then (if v_630 then (if v_631 then (master_secret_35,client_wkh_14,server_wkh_14,client_fk_14,server_fk_14) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {3131}event Client_chk(@6_id_client,chk_21);
                                            {3132}event Client_shk(@6_id_client,shk_20);
                                            {3133}event Client_cfin(@6_id_client,cfin_21);
                                            {3134}event Client_sfin(@6_id_client,sfin_20);
                                            {3135}in(io, enc_ee_msg_13: bitstring);
                                            {3136}let ee_msg_14: msg = aead_dec(@6_backend_a,shk_20,0,zero,enc_ee_msg_13) in
                                            {3137}let EE(ech_ee_13: echExt,extra_ee_13: extraExt) = ee_msg_14 in
                                            {3138}let cur_log2_34: bitstring = (cur_log2_33,ee_msg_14) in
                                            {3139}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_1,sr_24,@6_backend_h,@6_backend_a,c_dom_6,backend_dom,psk_75,safe_psk_19,@6_comp_psk,master_secret_36,chk_21,0,shk_20,1,cfin_21,sfin_20,cur_log2_34)))
                                        )
                                        else
                                            {3140}out(io, illegal_parameter)
                                    )
                                    else
                                        {3141}out(io, illegal_parameter)
                            )
                            else
                                {3143}let psk_76: preSharedKey = NoPsk in
                                {3144}let s_65: bitstring = zero in
                                {3145}let k_57: bitstring = catch-fail(psk2b(psk_76)) in
                                {3146}let v_632: bool = not-caught-fail(k_57) in
                                {3147}let early_secret_48: bitstring = catch-fail((if v_632 then hmac(@6_backend_h,s_65,k_57) else fail-any)) in
                                {3148}let v_633: bool = not-caught-fail(early_secret_48) in
                                {3149}let l_185: label = (if v_633 then tls13_ext_res_binder else caught-fail) in
                                {3150}let m_62: bitstring = (if v_633 then zero else caught-fail) in
                                {3151}let h_181: bitstring = (if v_633 then catch-fail(hash(@6_backend_h,m_62)) else caught-fail) in
                                {3152}let v_634: bool = not-caught-fail(h_181) in
                                {3153}let x_209: bitstring = (if v_634 then (l_185,h_181) else caught-fail) in
                                {3154}let binder_key_32: bitstring = (if v_633 then catch-fail((if v_634 then hmac(@6_backend_h,early_secret_48,x_209) else fail-any)) else caught-fail) in
                                {3155}let v_635: bool = not-caught-fail(binder_key_32) in
                                {3156}let v_636: bitstring = catch-fail((if v_633 then (if v_635 then (early_secret_48,binder_key_32) else fail-any) else fail-any)) in
                                {3157}let v_637: bool = (not-caught-fail(v_636) && success?(1-proj-2-tuple(v_636))) in
                                {3158}let kb_32: mac_key = (if v_637 then 2-proj-2-tuple(v_636) else caught-fail) in
                                {3159}let es_49: bitstring = (if v_637 then 1-proj-2-tuple(v_636) else caught-fail) in
                                {3160}let v_638: bitstring = catch-fail((if v_637 then (empty_psk_ext,(NoPsk,zero,es_49,false)) else fail-any)) in
                                {3161}let v_639: bool = (not-caught-fail(v_638) && success?(1-proj-2-tuple(v_638))) in
                                {3162}let psk_data_19: bitstring = (if v_639 then 2-proj-2-tuple(v_638) else caught-fail) in
                                {3163}let psk_ext_31: preSharedKeyExt = (if v_639 then 1-proj-2-tuple(v_638) else caught-fail) in
                                {3164}let i_offer_3: params = (if v_639 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_1,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_31) else caught-fail) in
                                {3165}let i_client_hello_4: msg = (if v_639 then CH(i_cr_2,i_offer_3) else caught-fail) in
                                {3166}new fake_id_3[]: identityPsk;
                                {3167}new fake_binder_3[]: bitstring;
                                {3168}let o_psk_ext_4: preSharedKeyExt = (if v_639 then (if @6_use_psk then client_psk_ext(fake_id_3,fake_binder_3) else empty_psk_ext) else caught-fail) in
                                {3169}let o_ech_ext_ADD_3: echExt = (if v_639 then ECHClientHelloOuter(ech_h_4,ech_a_4,config_id_2,zero,zero) else caught-fail) in
                                {3170}let o_offer_ADD_3: params = (if v_639 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_1,SNI(o_dom_2),o_ech_ext_ADD_3,empty_extra_ext,o_psk_ext_4) else caught-fail) in
                                {3171}let o_client_hello_ADD_3: msg = (if v_639 then CH(o_cr_2,o_offer_ADD_3) else caught-fail) in
                                {3172}let n_3: nat = (if v_639 then 2 else caught-fail) in
                                {3173}let v_640: hpkeContext = (if v_639 then catch-fail(context) else caught-fail) in
                                {3174}let v_641: bool = (not-caught-fail(v_640) && ((S =nf 1-proj-hpke_context(v_640)) && success?(1-proj-hpke_context(v_640)))) in
                                {3175}let base_nonce_4: bitstring = (if v_641 then 3-proj-hpke_context(v_640) else caught-fail) in
                                {3176}let key_4: aead_key = (if v_641 then 2-proj-hpke_context(v_640) else caught-fail) in
                                {3177}let payload_4: bitstring = (if v_639 then catch-fail((if v_641 then aead_enc(ech_a_4,key_4,(base_nonce_4,n_3),o_client_hello_ADD_3,i_client_hello_4) else fail-any)) else caught-fail) in
                                {3178}let v_642: bool = not-caught-fail(payload_4) in
                                {3179}let o_ech_ext_4: echExt = (if v_642 then ECHClientHelloOuter(ech_h_4,ech_a_4,config_id_2,zero,payload_4) else caught-fail) in
                                {3180}let o_offer_4: params = (if v_642 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_1,SNI(o_dom_2),o_ech_ext_4,empty_extra_ext,o_psk_ext_4) else caught-fail) in
                                {3181}let (o_client_hello'_2: msg,i_client_hello'_2: msg,i_cr'_2: bytes32,i_kex_data'_2: bitstring,psk_data'_11: bitstring) = (if v_639 then (if v_642 then (CH(o_cr_2,o_offer_4),i_client_hello_4,i_cr_2,i_kex_data_2,psk_data_19) else fail-any) else fail-any) in
                                {3182}out(io, o_client_hello'_2);
                                {3183}in(io, server_hello'_11: msg);
                                {3184}let SH(B32(sr24'_2: bytes24,sr8'_2: bytes8),params'_2: params) = server_hello'_11 in
                                {3185}let cur_log_IN1_HRR_IN2_2: bitstring = (cur_log_IN1_HRR,i_client_hello'_2) in
                                {3186}let sh_modified_3: msg = SH(B32(sr24'_2,zero8),params'_2) in
                                {3187}let cur_log_sh_3: bitstring = (cur_log_IN1_HRR_IN2_2,sh_modified_3) in
                                {3188}let transcript_ech_conf_3: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_3)) in
                                {3189}let v_643: bool = not-caught-fail(transcript_ech_conf_3) in
                                {3190}let s_66: bitstring = (if v_643 then zero else caught-fail) in
                                {3191}let k_58: bitstring = (if v_643 then catch-fail(b32_2_b(get_random(i_client_hello'_2))) else caught-fail) in
                                {3192}let v_644: bool = not-caught-fail(k_58) in
                                {3193}let k_59: bitstring = (if v_643 then catch-fail((if v_644 then hmac(@6_backend_h,s_66,k_58) else fail-any)) else caught-fail) in
                                {3194}let v_645: bool = not-caught-fail(k_59) in
                                {3195}let l_186: label = (if v_645 then ech_accept_confirmation else caught-fail) in
                                {3196}let x_210: bitstring = (if v_645 then (l_186,cur_log_sh_3) else caught-fail) in
                                {3197}let sr8_4: bytes8 = (if v_643 then catch-fail(crop_into_bytes8((if v_645 then hmac(@6_backend_h,k_59,x_210) else fail-any))) else caught-fail) in
                                {3198}let v_646: bool = not-caught-fail(sr8_4) in
                                {3199}if (B32(sr24'_2,sr8'_2) = (if v_643 then (if v_646 then B32(sr24'_2,sr8_4) else fail-any) else fail-any)) then
                                {3200}let (x_211: bitstring,g_16: group) = i_kex_data'_2 in
                                {3201}let (psk_offer_14: preSharedKey,id_offer_14: identityPsk,es_offer_14: bitstring,is_safe_offer_14: bool) = psk_data'_11 in
                                {3202}event Client_PSKOffer(@6_id_client,psk_offer_14,id_offer_14,is_safe_offer_14);
                                {3203}event Client_Rand_client(@6_id_client,i_cr'_2);
                                {3204}event Client_DH_client(@6_id_client,dh_pub(g_16,x_211));
                                {3205}event Client_server_domain(@6_id_client,backend_dom);
                                {3206}let SH(sr_25: bytes32,mode_18: params) = server_hello'_11 in
                                {3207}event Client_Rand_server(@6_id_client,sr_25);
                                {3208}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_16,gy_15: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_32: preSharedKeyExt) = mode_18 in
                                (
                                    {3209}let cur_log2_35: bitstring = (cur_log_IN1_HRR_IN2_2,server_hello'_11) in
                                    {3210}event Client_DH_server(@6_id_client,gy_15);
                                    {3211}let v_647: bool = (psk_ext_32 = empty_psk_ext) in
                                    {3212}let psk_77: preSharedKey = (if v_647 then NoPsk else caught-fail) in
                                    {3213}let s_67: bitstring = (if v_647 then zero else caught-fail) in
                                    {3214}let k_60: bitstring = (if v_647 then catch-fail(psk2b(psk_77)) else caught-fail) in
                                    {3215}let v_648: bool = not-caught-fail(k_60) in
                                    {3216}let early_secret_49: bitstring = (if v_647 then catch-fail((if v_648 then hmac(@6_backend_h,s_67,k_60) else fail-any)) else caught-fail) in
                                    {3217}let v_649: bool = not-caught-fail(early_secret_49) in
                                    {3218}let l_187: label = (if v_649 then tls13_ext_res_binder else caught-fail) in
                                    {3219}let m_63: bitstring = (if v_649 then zero else caught-fail) in
                                    {3220}let h_182: bitstring = (if v_649 then catch-fail(hash(@6_backend_h,m_63)) else caught-fail) in
                                    {3221}let v_650: bool = not-caught-fail(h_182) in
                                    {3222}let x_212: bitstring = (if v_650 then (l_187,h_182) else caught-fail) in
                                    {3223}let binder_key_33: bitstring = (if v_649 then catch-fail((if v_650 then hmac(@6_backend_h,early_secret_49,x_212) else fail-any)) else caught-fail) in
                                    {3224}let v_651: bool = not-caught-fail(binder_key_33) in
                                    {3225}let v_652: bitstring = (if v_647 then catch-fail((if v_649 then (if v_651 then (early_secret_49,binder_key_33) else fail-any) else fail-any)) else caught-fail) in
                                    {3226}let v_653: bool = (not-caught-fail(v_652) && success?(1-proj-2-tuple(v_652))) in
                                    {3227}let kb_33: mac_key = (if v_653 then 2-proj-2-tuple(v_652) else caught-fail) in
                                    {3228}let es_50: bitstring = (if v_653 then 1-proj-2-tuple(v_652) else caught-fail) in
                                    {3229}let v_654: bitstring = (if not(v_647) then catch-fail(psk_data'_11) else caught-fail) in
                                    {3230}let v_655: bool = (not-caught-fail(v_654) && success?(1-proj-4-tuple(v_654))) in
                                    {3231}let is_safe_30: bool = (if v_655 then 4-proj-4-tuple(v_654) else caught-fail) in
                                    {3232}let es_51: bitstring = (if v_655 then 3-proj-4-tuple(v_654) else caught-fail) in
                                    {3233}let id_39: identityPsk = (if v_655 then 2-proj-4-tuple(v_654) else caught-fail) in
                                    {3234}let psk_78: preSharedKey = (if v_655 then 1-proj-4-tuple(v_654) else caught-fail) in
                                    {3235}let (psk_79: preSharedKey,early_secret_50: bitstring,valid_14: bool,safe_psk_20: bool) = (if v_647 then (if v_653 then (NoPsk,es_50,true,false) else fail-any) else (if v_655 then (psk_78,es_51,((psk_78 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_32)),is_safe_30) else fail-any)) in
                                    {3236}event Client_PSKChoosen(@6_id_client,psk_79,safe_psk_20);
                                    {3237}if valid_14 then
                                    (
                                        {3238}let gxy_29: element = catch-fail(dh_decap_fun(g_16,gy_15,x_211)) in
                                        {3239}let v_656: bool = not-caught-fail(gxy_29) in
                                        {3240}new s_68[]: seed;
                                        {3241}let gxy_30: element = (if v_656 then gxy_29 else dh_f(s_68)) in
                                        {3242}event Client_DH_gxy(@6_id_client,gxy_30);
                                        {3243}let l_188: label = tls13_derived in
                                        {3244}let m_64: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {3245}let v_657: bool = not-caught-fail(m_64) in
                                        {3246}let h_183: bitstring = (if v_657 then catch-fail(hash(@6_backend_h,m_64)) else caught-fail) in
                                        {3247}let v_658: bool = not-caught-fail(h_183) in
                                        {3248}let x_213: bitstring = (if v_658 then (l_188,h_183) else caught-fail) in
                                        {3249}let extra_34: bitstring = catch-fail((if v_657 then (if v_658 then hmac(@6_backend_h,early_secret_50,x_213) else fail-any) else fail-any)) in
                                        {3250}let v_659: bool = not-caught-fail(extra_34) in
                                        {3251}let handshake_secret_15: bitstring = (if v_659 then hmac(@6_backend_h,extra_34,gxy_30) else fail-any) in
                                        {3252}let l_189: label = tls13_derived in
                                        {3253}let m_65: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {3254}let v_660: bool = not-caught-fail(m_65) in
                                        {3255}let h_184: bitstring = (if v_660 then catch-fail(hash(@6_backend_h,m_65)) else caught-fail) in
                                        {3256}let v_661: bool = not-caught-fail(h_184) in
                                        {3257}let x_214: bitstring = (if v_661 then (l_189,h_184) else caught-fail) in
                                        {3258}let extra_35: bitstring = catch-fail((if v_660 then (if v_661 then hmac(@6_backend_h,handshake_secret_15,x_214) else fail-any) else fail-any)) in
                                        {3259}let v_662: bool = not-caught-fail(extra_35) in
                                        {3260}let k_61: bitstring = (if v_662 then zero else caught-fail) in
                                        {3261}let master_secret_37: bitstring = (if v_662 then catch-fail(hmac(@6_backend_h,handshake_secret_15,k_61)) else caught-fail) in
                                        {3262}let v_663: bool = not-caught-fail(master_secret_37) in
                                        {3263}let l_190: label = (if v_663 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {3264}let h_185: bitstring = (if v_663 then catch-fail(hash(@6_backend_h,cur_log2_35)) else caught-fail) in
                                        {3265}let v_664: bool = not-caught-fail(h_185) in
                                        {3266}let x_215: bitstring = (if v_664 then (l_190,h_185) else caught-fail) in
                                        {3267}let client_hts_15: bitstring = (if v_663 then catch-fail((if v_664 then hmac(@6_backend_h,handshake_secret_15,x_215) else fail-any)) else caught-fail) in
                                        {3268}let v_665: bool = not-caught-fail(client_hts_15) in
                                        {3269}let l_191: label = (if v_665 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {3270}let h_186: bitstring = (if v_665 then catch-fail(hash(@6_backend_h,cur_log2_35)) else caught-fail) in
                                        {3271}let v_666: bool = not-caught-fail(h_186) in
                                        {3272}let x_216: bitstring = (if v_666 then (l_191,h_186) else caught-fail) in
                                        {3273}let server_hts_15: bitstring = (if v_665 then catch-fail((if v_666 then hmac(@6_backend_h,handshake_secret_15,x_216) else fail-any)) else caught-fail) in
                                        {3274}let v_667: bool = not-caught-fail(server_hts_15) in
                                        {3275}let l_192: label = (if v_667 then tls13_key else caught-fail) in
                                        {3276}let h_187: bitstring = (if v_667 then zero else caught-fail) in
                                        {3277}let x_217: bitstring = (if v_667 then (l_192,h_187) else caught-fail) in
                                        {3278}let client_wkh_15: bitstring = (if v_667 then catch-fail(hmac(@6_backend_h,client_hts_15,x_217)) else caught-fail) in
                                        {3279}let v_668: bool = not-caught-fail(client_wkh_15) in
                                        {3280}let l_193: label = (if v_668 then tls13_key else caught-fail) in
                                        {3281}let h_188: bitstring = (if v_668 then zero else caught-fail) in
                                        {3282}let x_218: bitstring = (if v_668 then (l_193,h_188) else caught-fail) in
                                        {3283}let server_wkh_15: bitstring = (if v_668 then catch-fail(hmac(@6_backend_h,server_hts_15,x_218)) else caught-fail) in
                                        {3284}let v_669: bool = not-caught-fail(server_wkh_15) in
                                        {3285}let l_194: label = (if v_669 then tls13_finished else caught-fail) in
                                        {3286}let h_189: bitstring = (if v_669 then zero else caught-fail) in
                                        {3287}let x_219: bitstring = (if v_669 then (l_194,h_189) else caught-fail) in
                                        {3288}let client_fk_15: bitstring = (if v_669 then catch-fail(hmac(@6_backend_h,client_hts_15,x_219)) else caught-fail) in
                                        {3289}let v_670: bool = not-caught-fail(client_fk_15) in
                                        {3290}let l_195: label = (if v_670 then tls13_finished else caught-fail) in
                                        {3291}let h_190: bitstring = (if v_670 then zero else caught-fail) in
                                        {3292}let x_220: bitstring = (if v_670 then (l_195,h_190) else caught-fail) in
                                        {3293}let server_fk_15: bitstring = (if v_670 then catch-fail(hmac(@6_backend_h,server_hts_15,x_220)) else caught-fail) in
                                        {3294}let v_671: bool = not-caught-fail(server_fk_15) in
                                        {3295}let (master_secret_38: bitstring,chk_22: aead_key,shk_21: aead_key,cfin_22: mac_key,sfin_21: mac_key) = (if v_662 then (if v_663 then (if v_665 then (if v_667 then (if v_668 then (if v_669 then (if v_670 then (if v_671 then (master_secret_37,client_wkh_15,server_wkh_15,client_fk_15,server_fk_15) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {3296}event Client_chk(@6_id_client,chk_22);
                                        {3297}event Client_shk(@6_id_client,shk_21);
                                        {3298}event Client_cfin(@6_id_client,cfin_22);
                                        {3299}event Client_sfin(@6_id_client,sfin_21);
                                        {3300}in(io, enc_ee_msg_14: bitstring);
                                        {3301}let ee_msg_15: msg = aead_dec(@6_backend_a,shk_21,0,zero,enc_ee_msg_14) in
                                        {3302}let EE(ech_ee_14: echExt,extra_ee_14: extraExt) = ee_msg_15 in
                                        {3303}let cur_log2_36: bitstring = (cur_log2_35,ee_msg_15) in
                                        {3304}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_2,sr_25,@6_backend_h,@6_backend_a,c_dom_6,backend_dom,psk_79,safe_psk_20,@6_comp_psk,master_secret_38,chk_22,0,shk_21,1,cfin_22,sfin_21,cur_log2_36)))
                                    )
                                    else
                                        {3305}out(io, illegal_parameter)
                                )
                                else
                                    {3306}out(io, illegal_parameter)
                        )
                        else
                            {3307}let cur_log_OU1_HRR: bitstring = ((zero,o_client_hello),server_hello_4) in
                            {3308}let ech_config(config_id_3: configId,ech_g_5: group,pkR_5: element,o_dom_3: domain,ech_h_5: hash_alg,ech_a_5: aead_alg) = ech_conf in
                            {3309}new rand24_9[]: bytes24;
                            {3310}new rand8_9[]: bytes8;
                            {3311}let o_cr_3: bytes32 = B32(rand24_9,rand8_9) in
                            {3312}let send_key_share_2: bool = true in
                            {3313}new s_69[]: seed;
                            {3314}let gx_19: element = dh_pub(@6_tls_g,dh_k(s_69)) in
                            {3315}let v_672: bitstring = (dh_k(s_69),gx_19) in
                            {3316}let v_673: bool = success?(1-proj-2-tuple(v_672)) in
                            {3317}let gx_20: element = (if v_673 then 2-proj-2-tuple(v_672) else caught-fail) in
                            {3318}let x_221: bitstring = (if v_673 then 1-proj-2-tuple(v_672) else caught-fail) in
                            {3319}let kex_8: kex_alg = (if v_673 then (if send_key_share_2 then DHE_kex(@6_tls_g,gx_20) else DHE_group(@6_tls_g)) else caught-fail) in
                            {3320}let (o_kex_ext_2: keyShareExt,kex_data_7: bitstring) = (if v_673 then (client_kex_ext(kex_8),(x_221,@6_tls_g)) else fail-any) in
                            {3321}if @6_use_grease then
                            (
                                {3322}let extra_36: extraExt = empty_extra_ext in
                                {3323}if @6_use_psk then
                                (
                                    {3324}let (psk_80: preSharedKey,id_40: identityPsk,old_es_6: bitstring,is_safe_31: bool) = psk_data_16 in
                                    (
                                        {3325}let offer_25: params = nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_2,SNI(o_dom_3),o_ech_ext_1,extra_36,trunc_client_psk_ext(id_40)) in
                                        {3326}let cur_log'_13: bitstring = (cur_log_OU1_HRR,CH(o_cr_3,offer_25)) in
                                        {3327}let s_70: bitstring = zero in
                                        {3328}let k_62: bitstring = catch-fail(psk2b(psk_80)) in
                                        {3329}let v_674: bool = not-caught-fail(k_62) in
                                        {3330}let early_secret_51: bitstring = catch-fail((if v_674 then hmac(@6_tls_h,s_70,k_62) else fail-any)) in
                                        {3331}let v_675: bool = not-caught-fail(early_secret_51) in
                                        {3332}let l_196: label = (if v_675 then tls13_ext_res_binder else caught-fail) in
                                        {3333}let m_66: bitstring = (if v_675 then zero else caught-fail) in
                                        {3334}let h_191: bitstring = (if v_675 then catch-fail(hash(@6_tls_h,m_66)) else caught-fail) in
                                        {3335}let v_676: bool = not-caught-fail(h_191) in
                                        {3336}let x_222: bitstring = (if v_676 then (l_196,h_191) else caught-fail) in
                                        {3337}let binder_key_34: bitstring = (if v_675 then catch-fail((if v_676 then hmac(@6_tls_h,early_secret_51,x_222) else fail-any)) else caught-fail) in
                                        {3338}let v_677: bool = not-caught-fail(binder_key_34) in
                                        {3339}let v_678: bitstring = catch-fail((if v_675 then (if v_677 then (early_secret_51,binder_key_34) else fail-any) else fail-any)) in
                                        {3340}let v_679: bool = (not-caught-fail(v_678) && success?(1-proj-2-tuple(v_678))) in
                                        {3341}let kb_34: mac_key = (if v_679 then 2-proj-2-tuple(v_678) else caught-fail) in
                                        {3342}let es_52: bitstring = (if v_679 then 1-proj-2-tuple(v_678) else caught-fail) in
                                        {3343}let binders_12: bitstring = (if v_679 then catch-fail(hmac(@6_tls_h,kb_34,cur_log'_13)) else caught-fail) in
                                        {3344}let v_680: bool = not-caught-fail(binders_12) in
                                        {3345}let v_681: bitstring = catch-fail((if v_679 then (if v_680 then (client_psk_ext(id_40,binders_12),(psk_80,id_40,es_52,is_safe_31)) else fail-any) else fail-any)) in
                                        {3346}let v_682: bool = (not-caught-fail(v_681) && success?(1-proj-2-tuple(v_681))) in
                                        {3347}let psk_data_20: bitstring = (if v_682 then 2-proj-2-tuple(v_681) else caught-fail) in
                                        {3348}let psk_ext_33: preSharedKeyExt = (if v_682 then 1-proj-2-tuple(v_681) else caught-fail) in
                                        {3349}let o_offer_5: params = (if v_682 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_2,SNI(o_dom_3),o_ech_ext_1,empty_extra_ext,psk_ext_33) else caught-fail) in
                                        {3350}let (client_hello'_9: msg,cr'_9: bytes32,kex_data'_9: bitstring,psk_data'_12: bitstring) = (if v_682 then (CH(o_cr_3,o_offer_5),o_cr_3,kex_data_7,psk_data_20) else fail-any) in
                                        {3351}out(io, client_hello'_9);
                                        {3352}let cur_log_OU1_HRR_OU2: bitstring = (cur_log_OU1_HRR,client_hello'_9) in
                                        {3353}in(io, server_hello'_12: msg);
                                        {3354}let SH(sr'_9: bytes32,mode'_9: params) = server_hello'_12 in
                                        (
                                            {3355}if (sr'_9 = B32(HRR24,HRR8)) then
                                                {3356}out(io, unexpected_message)
                                            else
                                                {3357}let (x_223: bitstring,g_17: group) = kex_data'_9 in
                                                {3358}let (psk_offer_15: preSharedKey,id_offer_15: identityPsk,es_offer_15: bitstring,is_safe_offer_15: bool) = psk_data'_12 in
                                                {3359}event Client_PSKOffer(@6_id_client,psk_offer_15,id_offer_15,is_safe_offer_15);
                                                {3360}event Client_Rand_client(@6_id_client,cr'_9);
                                                {3361}event Client_DH_client(@6_id_client,dh_pub(g_17,x_223));
                                                {3362}event Client_server_domain(@6_id_client,o_dom);
                                                {3363}let SH(sr_26: bytes32,mode_19: params) = server_hello'_12 in
                                                {3364}event Client_Rand_server(@6_id_client,sr_26);
                                                {3365}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_17,gy_16: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_34: preSharedKeyExt) = mode_19 in
                                                (
                                                    {3366}let cur_log2_37: bitstring = (cur_log_OU1_HRR_OU2,server_hello'_12) in
                                                    {3367}event Client_DH_server(@6_id_client,gy_16);
                                                    {3368}let v_683: bool = (psk_ext_34 = empty_psk_ext) in
                                                    {3369}let psk_81: preSharedKey = (if v_683 then NoPsk else caught-fail) in
                                                    {3370}let s_71: bitstring = (if v_683 then zero else caught-fail) in
                                                    {3371}let k_63: bitstring = (if v_683 then catch-fail(psk2b(psk_81)) else caught-fail) in
                                                    {3372}let v_684: bool = not-caught-fail(k_63) in
                                                    {3373}let early_secret_52: bitstring = (if v_683 then catch-fail((if v_684 then hmac(@6_tls_h,s_71,k_63) else fail-any)) else caught-fail) in
                                                    {3374}let v_685: bool = not-caught-fail(early_secret_52) in
                                                    {3375}let l_197: label = (if v_685 then tls13_ext_res_binder else caught-fail) in
                                                    {3376}let m_67: bitstring = (if v_685 then zero else caught-fail) in
                                                    {3377}let h_192: bitstring = (if v_685 then catch-fail(hash(@6_tls_h,m_67)) else caught-fail) in
                                                    {3378}let v_686: bool = not-caught-fail(h_192) in
                                                    {3379}let x_224: bitstring = (if v_686 then (l_197,h_192) else caught-fail) in
                                                    {3380}let binder_key_35: bitstring = (if v_685 then catch-fail((if v_686 then hmac(@6_tls_h,early_secret_52,x_224) else fail-any)) else caught-fail) in
                                                    {3381}let v_687: bool = not-caught-fail(binder_key_35) in
                                                    {3382}let v_688: bitstring = (if v_683 then catch-fail((if v_685 then (if v_687 then (early_secret_52,binder_key_35) else fail-any) else fail-any)) else caught-fail) in
                                                    {3383}let v_689: bool = (not-caught-fail(v_688) && success?(1-proj-2-tuple(v_688))) in
                                                    {3384}let kb_35: mac_key = (if v_689 then 2-proj-2-tuple(v_688) else caught-fail) in
                                                    {3385}let es_53: bitstring = (if v_689 then 1-proj-2-tuple(v_688) else caught-fail) in
                                                    {3386}let v_690: bitstring = (if not(v_683) then catch-fail(psk_data'_12) else caught-fail) in
                                                    {3387}let v_691: bool = (not-caught-fail(v_690) && success?(1-proj-4-tuple(v_690))) in
                                                    {3388}let is_safe_32: bool = (if v_691 then 4-proj-4-tuple(v_690) else caught-fail) in
                                                    {3389}let es_54: bitstring = (if v_691 then 3-proj-4-tuple(v_690) else caught-fail) in
                                                    {3390}let id_41: identityPsk = (if v_691 then 2-proj-4-tuple(v_690) else caught-fail) in
                                                    {3391}let psk_82: preSharedKey = (if v_691 then 1-proj-4-tuple(v_690) else caught-fail) in
                                                    {3392}let (psk_83: preSharedKey,early_secret_53: bitstring,valid_15: bool,safe_psk_21: bool) = (if v_683 then (if v_689 then (NoPsk,es_53,true,false) else fail-any) else (if v_691 then (psk_82,es_54,((psk_82 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_34)),is_safe_32) else fail-any)) in
                                                    {3393}event Client_PSKChoosen(@6_id_client,psk_83,safe_psk_21);
                                                    {3394}if valid_15 then
                                                    (
                                                        {3395}let gxy_31: element = catch-fail(dh_decap_fun(g_17,gy_16,x_223)) in
                                                        {3396}let v_692: bool = not-caught-fail(gxy_31) in
                                                        {3397}new s_72[]: seed;
                                                        {3398}let gxy_32: element = (if v_692 then gxy_31 else dh_f(s_72)) in
                                                        {3399}event Client_DH_gxy(@6_id_client,gxy_32);
                                                        {3400}let l_198: label = tls13_derived in
                                                        {3401}let m_68: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {3402}let v_693: bool = not-caught-fail(m_68) in
                                                        {3403}let h_193: bitstring = (if v_693 then catch-fail(hash(@6_tls_h,m_68)) else caught-fail) in
                                                        {3404}let v_694: bool = not-caught-fail(h_193) in
                                                        {3405}let x_225: bitstring = (if v_694 then (l_198,h_193) else caught-fail) in
                                                        {3406}let extra_37: bitstring = catch-fail((if v_693 then (if v_694 then hmac(@6_tls_h,early_secret_53,x_225) else fail-any) else fail-any)) in
                                                        {3407}let v_695: bool = not-caught-fail(extra_37) in
                                                        {3408}let handshake_secret_16: bitstring = (if v_695 then hmac(@6_tls_h,extra_37,gxy_32) else fail-any) in
                                                        {3409}let l_199: label = tls13_derived in
                                                        {3410}let m_69: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {3411}let v_696: bool = not-caught-fail(m_69) in
                                                        {3412}let h_194: bitstring = (if v_696 then catch-fail(hash(@6_tls_h,m_69)) else caught-fail) in
                                                        {3413}let v_697: bool = not-caught-fail(h_194) in
                                                        {3414}let x_226: bitstring = (if v_697 then (l_199,h_194) else caught-fail) in
                                                        {3415}let extra_38: bitstring = catch-fail((if v_696 then (if v_697 then hmac(@6_tls_h,handshake_secret_16,x_226) else fail-any) else fail-any)) in
                                                        {3416}let v_698: bool = not-caught-fail(extra_38) in
                                                        {3417}let k_64: bitstring = (if v_698 then zero else caught-fail) in
                                                        {3418}let master_secret_39: bitstring = (if v_698 then catch-fail(hmac(@6_tls_h,handshake_secret_16,k_64)) else caught-fail) in
                                                        {3419}let v_699: bool = not-caught-fail(master_secret_39) in
                                                        {3420}let l_200: label = (if v_699 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {3421}let h_195: bitstring = (if v_699 then catch-fail(hash(@6_tls_h,cur_log2_37)) else caught-fail) in
                                                        {3422}let v_700: bool = not-caught-fail(h_195) in
                                                        {3423}let x_227: bitstring = (if v_700 then (l_200,h_195) else caught-fail) in
                                                        {3424}let client_hts_16: bitstring = (if v_699 then catch-fail((if v_700 then hmac(@6_tls_h,handshake_secret_16,x_227) else fail-any)) else caught-fail) in
                                                        {3425}let v_701: bool = not-caught-fail(client_hts_16) in
                                                        {3426}let l_201: label = (if v_701 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {3427}let h_196: bitstring = (if v_701 then catch-fail(hash(@6_tls_h,cur_log2_37)) else caught-fail) in
                                                        {3428}let v_702: bool = not-caught-fail(h_196) in
                                                        {3429}let x_228: bitstring = (if v_702 then (l_201,h_196) else caught-fail) in
                                                        {3430}let server_hts_16: bitstring = (if v_701 then catch-fail((if v_702 then hmac(@6_tls_h,handshake_secret_16,x_228) else fail-any)) else caught-fail) in
                                                        {3431}let v_703: bool = not-caught-fail(server_hts_16) in
                                                        {3432}let l_202: label = (if v_703 then tls13_key else caught-fail) in
                                                        {3433}let h_197: bitstring = (if v_703 then zero else caught-fail) in
                                                        {3434}let x_229: bitstring = (if v_703 then (l_202,h_197) else caught-fail) in
                                                        {3435}let client_wkh_16: bitstring = (if v_703 then catch-fail(hmac(@6_tls_h,client_hts_16,x_229)) else caught-fail) in
                                                        {3436}let v_704: bool = not-caught-fail(client_wkh_16) in
                                                        {3437}let l_203: label = (if v_704 then tls13_key else caught-fail) in
                                                        {3438}let h_198: bitstring = (if v_704 then zero else caught-fail) in
                                                        {3439}let x_230: bitstring = (if v_704 then (l_203,h_198) else caught-fail) in
                                                        {3440}let server_wkh_16: bitstring = (if v_704 then catch-fail(hmac(@6_tls_h,server_hts_16,x_230)) else caught-fail) in
                                                        {3441}let v_705: bool = not-caught-fail(server_wkh_16) in
                                                        {3442}let l_204: label = (if v_705 then tls13_finished else caught-fail) in
                                                        {3443}let h_199: bitstring = (if v_705 then zero else caught-fail) in
                                                        {3444}let x_231: bitstring = (if v_705 then (l_204,h_199) else caught-fail) in
                                                        {3445}let client_fk_16: bitstring = (if v_705 then catch-fail(hmac(@6_tls_h,client_hts_16,x_231)) else caught-fail) in
                                                        {3446}let v_706: bool = not-caught-fail(client_fk_16) in
                                                        {3447}let l_205: label = (if v_706 then tls13_finished else caught-fail) in
                                                        {3448}let h_200: bitstring = (if v_706 then zero else caught-fail) in
                                                        {3449}let x_232: bitstring = (if v_706 then (l_205,h_200) else caught-fail) in
                                                        {3450}let server_fk_16: bitstring = (if v_706 then catch-fail(hmac(@6_tls_h,server_hts_16,x_232)) else caught-fail) in
                                                        {3451}let v_707: bool = not-caught-fail(server_fk_16) in
                                                        {3452}let (master_secret_40: bitstring,chk_23: aead_key,shk_22: aead_key,cfin_23: mac_key,sfin_22: mac_key) = (if v_698 then (if v_699 then (if v_701 then (if v_703 then (if v_704 then (if v_705 then (if v_706 then (if v_707 then (master_secret_39,client_wkh_16,server_wkh_16,client_fk_16,server_fk_16) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {3453}event Client_chk(@6_id_client,chk_23);
                                                        {3454}event Client_shk(@6_id_client,shk_22);
                                                        {3455}event Client_cfin(@6_id_client,cfin_23);
                                                        {3456}event Client_sfin(@6_id_client,sfin_22);
                                                        {3457}in(io, enc_ee_msg_15: bitstring);
                                                        {3458}let ee_msg_16: msg = aead_dec(@6_tls_a,shk_22,0,zero,enc_ee_msg_15) in
                                                        {3459}let EE(ech_ee_15: echExt,extra_ee_15: extraExt) = ee_msg_16 in
                                                        {3460}let cur_log2_38: bitstring = (cur_log2_37,ee_msg_16) in
                                                        {3461}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_9,sr_26,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_83,safe_psk_21,@6_comp_psk,master_secret_40,chk_23,0,shk_22,1,cfin_23,sfin_22,cur_log2_38)))
                                                    )
                                                    else
                                                        {3462}out(io, illegal_parameter)
                                                )
                                                else
                                                    {3463}out(io, illegal_parameter)
                                        )
                                        else
                                            {3464}out(io, unexpected_message)
                                    )
                                    else
                                        {3614}get pre_shared_keys(c_dom'_7: domain,=o_dom_3,=@6_tls_h,id_42: identityPsk,psk_84: preSharedKey,idP_9: idProc,is_safe_33: bool) in
                                        {3465}event Selected_one_time_used_psk(@6_id_client,psk_84,is_safe_33);
                                        {3466}event Selected_psk(c_dom_6,c_dom'_7,idP_9,is_safe_33);
                                        {3467}event Selected_psk_no_missmatch(@6_id_client,o_dom_3,@6_tls_h,psk_84,id_42);
                                        {3468}event Selected_psk_with_ID(c_dom_6,c_dom'_7,id_42,idP_9,is_safe_33);
                                        {3469}let v_708: bitstring = (id_42,psk_84,is_safe_33) in
                                        {3470}let v_709: bool = success?(1-proj-3-tuple(v_708)) in
                                        {3471}let is_safe_34: bool = (if v_709 then 3-proj-3-tuple(v_708) else caught-fail) in
                                        {3472}let psk_85: preSharedKey = (if v_709 then 2-proj-3-tuple(v_708) else caught-fail) in
                                        {3473}let id_43: identityPsk = (if v_709 then 1-proj-3-tuple(v_708) else caught-fail) in
                                        {3474}let offer_26: params = (if v_709 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_2,SNI(o_dom_3),o_ech_ext_1,extra_36,trunc_client_psk_ext(id_43)) else caught-fail) in
                                        {3475}let cur_log'_14: bitstring = (if v_709 then (cur_log_OU1_HRR,CH(o_cr_3,offer_26)) else caught-fail) in
                                        {3476}let s_73: bitstring = (if v_709 then zero else caught-fail) in
                                        {3477}let k_65: bitstring = (if v_709 then catch-fail(psk2b(psk_85)) else caught-fail) in
                                        {3478}let v_710: bool = not-caught-fail(k_65) in
                                        {3479}let early_secret_54: bitstring = (if v_709 then catch-fail((if v_710 then hmac(@6_tls_h,s_73,k_65) else fail-any)) else caught-fail) in
                                        {3480}let v_711: bool = not-caught-fail(early_secret_54) in
                                        {3481}let l_206: label = (if v_711 then tls13_ext_res_binder else caught-fail) in
                                        {3482}let m_70: bitstring = (if v_711 then zero else caught-fail) in
                                        {3483}let h_201: bitstring = (if v_711 then catch-fail(hash(@6_tls_h,m_70)) else caught-fail) in
                                        {3484}let v_712: bool = not-caught-fail(h_201) in
                                        {3485}let x_233: bitstring = (if v_712 then (l_206,h_201) else caught-fail) in
                                        {3486}let binder_key_36: bitstring = (if v_711 then catch-fail((if v_712 then hmac(@6_tls_h,early_secret_54,x_233) else fail-any)) else caught-fail) in
                                        {3487}let v_713: bool = not-caught-fail(binder_key_36) in
                                        {3488}let v_714: bitstring = (if v_709 then catch-fail((if v_711 then (if v_713 then (early_secret_54,binder_key_36) else fail-any) else fail-any)) else caught-fail) in
                                        {3489}let v_715: bool = (not-caught-fail(v_714) && success?(1-proj-2-tuple(v_714))) in
                                        {3490}let kb_36: mac_key = (if v_715 then 2-proj-2-tuple(v_714) else caught-fail) in
                                        {3491}let es_55: bitstring = (if v_715 then 1-proj-2-tuple(v_714) else caught-fail) in
                                        {3492}let binders_13: bitstring = (if v_715 then catch-fail(hmac(@6_tls_h,kb_36,cur_log'_14)) else caught-fail) in
                                        {3493}let v_716: bool = not-caught-fail(binders_13) in
                                        {3494}let v_717: bitstring = catch-fail((if v_709 then (if v_715 then (if v_716 then (client_psk_ext(id_43,binders_13),(psk_85,id_43,es_55,is_safe_34)) else fail-any) else fail-any) else fail-any)) in
                                        {3495}let v_718: bool = (not-caught-fail(v_717) && success?(1-proj-2-tuple(v_717))) in
                                        {3496}let psk_data_21: bitstring = (if v_718 then 2-proj-2-tuple(v_717) else caught-fail) in
                                        {3497}let psk_ext_35: preSharedKeyExt = (if v_718 then 1-proj-2-tuple(v_717) else caught-fail) in
                                        {3498}let o_offer_6: params = (if v_718 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_2,SNI(o_dom_3),o_ech_ext_1,empty_extra_ext,psk_ext_35) else caught-fail) in
                                        {3499}let (client_hello'_10: msg,cr'_10: bytes32,kex_data'_10: bitstring,psk_data'_13: bitstring) = (if v_718 then (CH(o_cr_3,o_offer_6),o_cr_3,kex_data_7,psk_data_21) else fail-any) in
                                        {3500}out(io, client_hello'_10);
                                        {3501}let cur_log_OU1_HRR_OU2_1: bitstring = (cur_log_OU1_HRR,client_hello'_10) in
                                        {3502}in(io, server_hello'_13: msg);
                                        {3503}let SH(sr'_10: bytes32,mode'_10: params) = server_hello'_13 in
                                        (
                                            {3504}if (sr'_10 = B32(HRR24,HRR8)) then
                                                {3505}out(io, unexpected_message)
                                            else
                                                {3506}let (x_234: bitstring,g_18: group) = kex_data'_10 in
                                                {3507}let (psk_offer_16: preSharedKey,id_offer_16: identityPsk,es_offer_16: bitstring,is_safe_offer_16: bool) = psk_data'_13 in
                                                {3508}event Client_PSKOffer(@6_id_client,psk_offer_16,id_offer_16,is_safe_offer_16);
                                                {3509}event Client_Rand_client(@6_id_client,cr'_10);
                                                {3510}event Client_DH_client(@6_id_client,dh_pub(g_18,x_234));
                                                {3511}event Client_server_domain(@6_id_client,o_dom);
                                                {3512}let SH(sr_27: bytes32,mode_20: params) = server_hello'_13 in
                                                {3513}event Client_Rand_server(@6_id_client,sr_27);
                                                {3514}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_18,gy_17: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_36: preSharedKeyExt) = mode_20 in
                                                (
                                                    {3515}let cur_log2_39: bitstring = (cur_log_OU1_HRR_OU2_1,server_hello'_13) in
                                                    {3516}event Client_DH_server(@6_id_client,gy_17);
                                                    {3517}let v_719: bool = (psk_ext_36 = empty_psk_ext) in
                                                    {3518}let psk_86: preSharedKey = (if v_719 then NoPsk else caught-fail) in
                                                    {3519}let s_74: bitstring = (if v_719 then zero else caught-fail) in
                                                    {3520}let k_66: bitstring = (if v_719 then catch-fail(psk2b(psk_86)) else caught-fail) in
                                                    {3521}let v_720: bool = not-caught-fail(k_66) in
                                                    {3522}let early_secret_55: bitstring = (if v_719 then catch-fail((if v_720 then hmac(@6_tls_h,s_74,k_66) else fail-any)) else caught-fail) in
                                                    {3523}let v_721: bool = not-caught-fail(early_secret_55) in
                                                    {3524}let l_207: label = (if v_721 then tls13_ext_res_binder else caught-fail) in
                                                    {3525}let m_71: bitstring = (if v_721 then zero else caught-fail) in
                                                    {3526}let h_202: bitstring = (if v_721 then catch-fail(hash(@6_tls_h,m_71)) else caught-fail) in
                                                    {3527}let v_722: bool = not-caught-fail(h_202) in
                                                    {3528}let x_235: bitstring = (if v_722 then (l_207,h_202) else caught-fail) in
                                                    {3529}let binder_key_37: bitstring = (if v_721 then catch-fail((if v_722 then hmac(@6_tls_h,early_secret_55,x_235) else fail-any)) else caught-fail) in
                                                    {3530}let v_723: bool = not-caught-fail(binder_key_37) in
                                                    {3531}let v_724: bitstring = (if v_719 then catch-fail((if v_721 then (if v_723 then (early_secret_55,binder_key_37) else fail-any) else fail-any)) else caught-fail) in
                                                    {3532}let v_725: bool = (not-caught-fail(v_724) && success?(1-proj-2-tuple(v_724))) in
                                                    {3533}let kb_37: mac_key = (if v_725 then 2-proj-2-tuple(v_724) else caught-fail) in
                                                    {3534}let es_56: bitstring = (if v_725 then 1-proj-2-tuple(v_724) else caught-fail) in
                                                    {3535}let v_726: bitstring = (if not(v_719) then catch-fail(psk_data'_13) else caught-fail) in
                                                    {3536}let v_727: bool = (not-caught-fail(v_726) && success?(1-proj-4-tuple(v_726))) in
                                                    {3537}let is_safe_35: bool = (if v_727 then 4-proj-4-tuple(v_726) else caught-fail) in
                                                    {3538}let es_57: bitstring = (if v_727 then 3-proj-4-tuple(v_726) else caught-fail) in
                                                    {3539}let id_44: identityPsk = (if v_727 then 2-proj-4-tuple(v_726) else caught-fail) in
                                                    {3540}let psk_87: preSharedKey = (if v_727 then 1-proj-4-tuple(v_726) else caught-fail) in
                                                    {3541}let (psk_88: preSharedKey,early_secret_56: bitstring,valid_16: bool,safe_psk_22: bool) = (if v_719 then (if v_725 then (NoPsk,es_56,true,false) else fail-any) else (if v_727 then (psk_87,es_57,((psk_87 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_36)),is_safe_35) else fail-any)) in
                                                    {3542}event Client_PSKChoosen(@6_id_client,psk_88,safe_psk_22);
                                                    {3543}if valid_16 then
                                                    (
                                                        {3544}let gxy_33: element = catch-fail(dh_decap_fun(g_18,gy_17,x_234)) in
                                                        {3545}let v_728: bool = not-caught-fail(gxy_33) in
                                                        {3546}new s_75[]: seed;
                                                        {3547}let gxy_34: element = (if v_728 then gxy_33 else dh_f(s_75)) in
                                                        {3548}event Client_DH_gxy(@6_id_client,gxy_34);
                                                        {3549}let l_208: label = tls13_derived in
                                                        {3550}let m_72: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {3551}let v_729: bool = not-caught-fail(m_72) in
                                                        {3552}let h_203: bitstring = (if v_729 then catch-fail(hash(@6_tls_h,m_72)) else caught-fail) in
                                                        {3553}let v_730: bool = not-caught-fail(h_203) in
                                                        {3554}let x_236: bitstring = (if v_730 then (l_208,h_203) else caught-fail) in
                                                        {3555}let extra_39: bitstring = catch-fail((if v_729 then (if v_730 then hmac(@6_tls_h,early_secret_56,x_236) else fail-any) else fail-any)) in
                                                        {3556}let v_731: bool = not-caught-fail(extra_39) in
                                                        {3557}let handshake_secret_17: bitstring = (if v_731 then hmac(@6_tls_h,extra_39,gxy_34) else fail-any) in
                                                        {3558}let l_209: label = tls13_derived in
                                                        {3559}let m_73: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {3560}let v_732: bool = not-caught-fail(m_73) in
                                                        {3561}let h_204: bitstring = (if v_732 then catch-fail(hash(@6_tls_h,m_73)) else caught-fail) in
                                                        {3562}let v_733: bool = not-caught-fail(h_204) in
                                                        {3563}let x_237: bitstring = (if v_733 then (l_209,h_204) else caught-fail) in
                                                        {3564}let extra_40: bitstring = catch-fail((if v_732 then (if v_733 then hmac(@6_tls_h,handshake_secret_17,x_237) else fail-any) else fail-any)) in
                                                        {3565}let v_734: bool = not-caught-fail(extra_40) in
                                                        {3566}let k_67: bitstring = (if v_734 then zero else caught-fail) in
                                                        {3567}let master_secret_41: bitstring = (if v_734 then catch-fail(hmac(@6_tls_h,handshake_secret_17,k_67)) else caught-fail) in
                                                        {3568}let v_735: bool = not-caught-fail(master_secret_41) in
                                                        {3569}let l_210: label = (if v_735 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {3570}let h_205: bitstring = (if v_735 then catch-fail(hash(@6_tls_h,cur_log2_39)) else caught-fail) in
                                                        {3571}let v_736: bool = not-caught-fail(h_205) in
                                                        {3572}let x_238: bitstring = (if v_736 then (l_210,h_205) else caught-fail) in
                                                        {3573}let client_hts_17: bitstring = (if v_735 then catch-fail((if v_736 then hmac(@6_tls_h,handshake_secret_17,x_238) else fail-any)) else caught-fail) in
                                                        {3574}let v_737: bool = not-caught-fail(client_hts_17) in
                                                        {3575}let l_211: label = (if v_737 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {3576}let h_206: bitstring = (if v_737 then catch-fail(hash(@6_tls_h,cur_log2_39)) else caught-fail) in
                                                        {3577}let v_738: bool = not-caught-fail(h_206) in
                                                        {3578}let x_239: bitstring = (if v_738 then (l_211,h_206) else caught-fail) in
                                                        {3579}let server_hts_17: bitstring = (if v_737 then catch-fail((if v_738 then hmac(@6_tls_h,handshake_secret_17,x_239) else fail-any)) else caught-fail) in
                                                        {3580}let v_739: bool = not-caught-fail(server_hts_17) in
                                                        {3581}let l_212: label = (if v_739 then tls13_key else caught-fail) in
                                                        {3582}let h_207: bitstring = (if v_739 then zero else caught-fail) in
                                                        {3583}let x_240: bitstring = (if v_739 then (l_212,h_207) else caught-fail) in
                                                        {3584}let client_wkh_17: bitstring = (if v_739 then catch-fail(hmac(@6_tls_h,client_hts_17,x_240)) else caught-fail) in
                                                        {3585}let v_740: bool = not-caught-fail(client_wkh_17) in
                                                        {3586}let l_213: label = (if v_740 then tls13_key else caught-fail) in
                                                        {3587}let h_208: bitstring = (if v_740 then zero else caught-fail) in
                                                        {3588}let x_241: bitstring = (if v_740 then (l_213,h_208) else caught-fail) in
                                                        {3589}let server_wkh_17: bitstring = (if v_740 then catch-fail(hmac(@6_tls_h,server_hts_17,x_241)) else caught-fail) in
                                                        {3590}let v_741: bool = not-caught-fail(server_wkh_17) in
                                                        {3591}let l_214: label = (if v_741 then tls13_finished else caught-fail) in
                                                        {3592}let h_209: bitstring = (if v_741 then zero else caught-fail) in
                                                        {3593}let x_242: bitstring = (if v_741 then (l_214,h_209) else caught-fail) in
                                                        {3594}let client_fk_17: bitstring = (if v_741 then catch-fail(hmac(@6_tls_h,client_hts_17,x_242)) else caught-fail) in
                                                        {3595}let v_742: bool = not-caught-fail(client_fk_17) in
                                                        {3596}let l_215: label = (if v_742 then tls13_finished else caught-fail) in
                                                        {3597}let h_210: bitstring = (if v_742 then zero else caught-fail) in
                                                        {3598}let x_243: bitstring = (if v_742 then (l_215,h_210) else caught-fail) in
                                                        {3599}let server_fk_17: bitstring = (if v_742 then catch-fail(hmac(@6_tls_h,server_hts_17,x_243)) else caught-fail) in
                                                        {3600}let v_743: bool = not-caught-fail(server_fk_17) in
                                                        {3601}let (master_secret_42: bitstring,chk_24: aead_key,shk_23: aead_key,cfin_24: mac_key,sfin_23: mac_key) = (if v_734 then (if v_735 then (if v_737 then (if v_739 then (if v_740 then (if v_741 then (if v_742 then (if v_743 then (master_secret_41,client_wkh_17,server_wkh_17,client_fk_17,server_fk_17) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {3602}event Client_chk(@6_id_client,chk_24);
                                                        {3603}event Client_shk(@6_id_client,shk_23);
                                                        {3604}event Client_cfin(@6_id_client,cfin_24);
                                                        {3605}event Client_sfin(@6_id_client,sfin_23);
                                                        {3606}in(io, enc_ee_msg_16: bitstring);
                                                        {3607}let ee_msg_17: msg = aead_dec(@6_tls_a,shk_23,0,zero,enc_ee_msg_16) in
                                                        {3608}let EE(ech_ee_16: echExt,extra_ee_16: extraExt) = ee_msg_17 in
                                                        {3609}let cur_log2_40: bitstring = (cur_log2_39,ee_msg_17) in
                                                        {3610}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_10,sr_27,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_88,safe_psk_22,@6_comp_psk,master_secret_42,chk_24,0,shk_23,1,cfin_24,sfin_23,cur_log2_40)))
                                                    )
                                                    else
                                                        {3611}out(io, illegal_parameter)
                                                )
                                                else
                                                    {3612}out(io, illegal_parameter)
                                        )
                                        else
                                            {3613}out(io, unexpected_message)
                                )
                                else
                                    {3615}let psk_89: preSharedKey = NoPsk in
                                    {3616}let s_76: bitstring = zero in
                                    {3617}let k_68: bitstring = catch-fail(psk2b(psk_89)) in
                                    {3618}let v_744: bool = not-caught-fail(k_68) in
                                    {3619}let early_secret_57: bitstring = catch-fail((if v_744 then hmac(@6_tls_h,s_76,k_68) else fail-any)) in
                                    {3620}let v_745: bool = not-caught-fail(early_secret_57) in
                                    {3621}let l_216: label = (if v_745 then tls13_ext_res_binder else caught-fail) in
                                    {3622}let m_74: bitstring = (if v_745 then zero else caught-fail) in
                                    {3623}let h_211: bitstring = (if v_745 then catch-fail(hash(@6_tls_h,m_74)) else caught-fail) in
                                    {3624}let v_746: bool = not-caught-fail(h_211) in
                                    {3625}let x_244: bitstring = (if v_746 then (l_216,h_211) else caught-fail) in
                                    {3626}let binder_key_38: bitstring = (if v_745 then catch-fail((if v_746 then hmac(@6_tls_h,early_secret_57,x_244) else fail-any)) else caught-fail) in
                                    {3627}let v_747: bool = not-caught-fail(binder_key_38) in
                                    {3628}let v_748: bitstring = catch-fail((if v_745 then (if v_747 then (early_secret_57,binder_key_38) else fail-any) else fail-any)) in
                                    {3629}let v_749: bool = (not-caught-fail(v_748) && success?(1-proj-2-tuple(v_748))) in
                                    {3630}let kb_38: mac_key = (if v_749 then 2-proj-2-tuple(v_748) else caught-fail) in
                                    {3631}let es_58: bitstring = (if v_749 then 1-proj-2-tuple(v_748) else caught-fail) in
                                    {3632}let v_750: bitstring = catch-fail((if v_749 then (empty_psk_ext,(NoPsk,zero,es_58,false)) else fail-any)) in
                                    {3633}let v_751: bool = (not-caught-fail(v_750) && success?(1-proj-2-tuple(v_750))) in
                                    {3634}let psk_data_22: bitstring = (if v_751 then 2-proj-2-tuple(v_750) else caught-fail) in
                                    {3635}let psk_ext_37: preSharedKeyExt = (if v_751 then 1-proj-2-tuple(v_750) else caught-fail) in
                                    {3636}let o_offer_7: params = (if v_751 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_2,SNI(o_dom_3),o_ech_ext_1,empty_extra_ext,psk_ext_37) else caught-fail) in
                                    {3637}let (client_hello'_11: msg,cr'_11: bytes32,kex_data'_11: bitstring,psk_data'_14: bitstring) = (if v_751 then (CH(o_cr_3,o_offer_7),o_cr_3,kex_data_7,psk_data_22) else fail-any) in
                                    {3638}out(io, client_hello'_11);
                                    {3639}let cur_log_OU1_HRR_OU2_2: bitstring = (cur_log_OU1_HRR,client_hello'_11) in
                                    {3640}in(io, server_hello'_14: msg);
                                    {3641}let SH(sr'_11: bytes32,mode'_11: params) = server_hello'_14 in
                                    (
                                        {3642}if (sr'_11 = B32(HRR24,HRR8)) then
                                            {3643}out(io, unexpected_message)
                                        else
                                            {3644}let (x_245: bitstring,g_19: group) = kex_data'_11 in
                                            {3645}let (psk_offer_17: preSharedKey,id_offer_17: identityPsk,es_offer_17: bitstring,is_safe_offer_17: bool) = psk_data'_14 in
                                            {3646}event Client_PSKOffer(@6_id_client,psk_offer_17,id_offer_17,is_safe_offer_17);
                                            {3647}event Client_Rand_client(@6_id_client,cr'_11);
                                            {3648}event Client_DH_client(@6_id_client,dh_pub(g_19,x_245));
                                            {3649}event Client_server_domain(@6_id_client,o_dom);
                                            {3650}let SH(sr_28: bytes32,mode_21: params) = server_hello'_14 in
                                            {3651}event Client_Rand_server(@6_id_client,sr_28);
                                            {3652}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_19,gy_18: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_38: preSharedKeyExt) = mode_21 in
                                            (
                                                {3653}let cur_log2_41: bitstring = (cur_log_OU1_HRR_OU2_2,server_hello'_14) in
                                                {3654}event Client_DH_server(@6_id_client,gy_18);
                                                {3655}let v_752: bool = (psk_ext_38 = empty_psk_ext) in
                                                {3656}let psk_90: preSharedKey = (if v_752 then NoPsk else caught-fail) in
                                                {3657}let s_77: bitstring = (if v_752 then zero else caught-fail) in
                                                {3658}let k_69: bitstring = (if v_752 then catch-fail(psk2b(psk_90)) else caught-fail) in
                                                {3659}let v_753: bool = not-caught-fail(k_69) in
                                                {3660}let early_secret_58: bitstring = (if v_752 then catch-fail((if v_753 then hmac(@6_tls_h,s_77,k_69) else fail-any)) else caught-fail) in
                                                {3661}let v_754: bool = not-caught-fail(early_secret_58) in
                                                {3662}let l_217: label = (if v_754 then tls13_ext_res_binder else caught-fail) in
                                                {3663}let m_75: bitstring = (if v_754 then zero else caught-fail) in
                                                {3664}let h_212: bitstring = (if v_754 then catch-fail(hash(@6_tls_h,m_75)) else caught-fail) in
                                                {3665}let v_755: bool = not-caught-fail(h_212) in
                                                {3666}let x_246: bitstring = (if v_755 then (l_217,h_212) else caught-fail) in
                                                {3667}let binder_key_39: bitstring = (if v_754 then catch-fail((if v_755 then hmac(@6_tls_h,early_secret_58,x_246) else fail-any)) else caught-fail) in
                                                {3668}let v_756: bool = not-caught-fail(binder_key_39) in
                                                {3669}let v_757: bitstring = (if v_752 then catch-fail((if v_754 then (if v_756 then (early_secret_58,binder_key_39) else fail-any) else fail-any)) else caught-fail) in
                                                {3670}let v_758: bool = (not-caught-fail(v_757) && success?(1-proj-2-tuple(v_757))) in
                                                {3671}let kb_39: mac_key = (if v_758 then 2-proj-2-tuple(v_757) else caught-fail) in
                                                {3672}let es_59: bitstring = (if v_758 then 1-proj-2-tuple(v_757) else caught-fail) in
                                                {3673}let v_759: bitstring = (if not(v_752) then catch-fail(psk_data'_14) else caught-fail) in
                                                {3674}let v_760: bool = (not-caught-fail(v_759) && success?(1-proj-4-tuple(v_759))) in
                                                {3675}let is_safe_36: bool = (if v_760 then 4-proj-4-tuple(v_759) else caught-fail) in
                                                {3676}let es_60: bitstring = (if v_760 then 3-proj-4-tuple(v_759) else caught-fail) in
                                                {3677}let id_45: identityPsk = (if v_760 then 2-proj-4-tuple(v_759) else caught-fail) in
                                                {3678}let psk_91: preSharedKey = (if v_760 then 1-proj-4-tuple(v_759) else caught-fail) in
                                                {3679}let (psk_92: preSharedKey,early_secret_59: bitstring,valid_17: bool,safe_psk_23: bool) = (if v_752 then (if v_758 then (NoPsk,es_59,true,false) else fail-any) else (if v_760 then (psk_91,es_60,((psk_91 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_38)),is_safe_36) else fail-any)) in
                                                {3680}event Client_PSKChoosen(@6_id_client,psk_92,safe_psk_23);
                                                {3681}if valid_17 then
                                                (
                                                    {3682}let gxy_35: element = catch-fail(dh_decap_fun(g_19,gy_18,x_245)) in
                                                    {3683}let v_761: bool = not-caught-fail(gxy_35) in
                                                    {3684}new s_78[]: seed;
                                                    {3685}let gxy_36: element = (if v_761 then gxy_35 else dh_f(s_78)) in
                                                    {3686}event Client_DH_gxy(@6_id_client,gxy_36);
                                                    {3687}let l_218: label = tls13_derived in
                                                    {3688}let m_76: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {3689}let v_762: bool = not-caught-fail(m_76) in
                                                    {3690}let h_213: bitstring = (if v_762 then catch-fail(hash(@6_tls_h,m_76)) else caught-fail) in
                                                    {3691}let v_763: bool = not-caught-fail(h_213) in
                                                    {3692}let x_247: bitstring = (if v_763 then (l_218,h_213) else caught-fail) in
                                                    {3693}let extra_41: bitstring = catch-fail((if v_762 then (if v_763 then hmac(@6_tls_h,early_secret_59,x_247) else fail-any) else fail-any)) in
                                                    {3694}let v_764: bool = not-caught-fail(extra_41) in
                                                    {3695}let handshake_secret_18: bitstring = (if v_764 then hmac(@6_tls_h,extra_41,gxy_36) else fail-any) in
                                                    {3696}let l_219: label = tls13_derived in
                                                    {3697}let m_77: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {3698}let v_765: bool = not-caught-fail(m_77) in
                                                    {3699}let h_214: bitstring = (if v_765 then catch-fail(hash(@6_tls_h,m_77)) else caught-fail) in
                                                    {3700}let v_766: bool = not-caught-fail(h_214) in
                                                    {3701}let x_248: bitstring = (if v_766 then (l_219,h_214) else caught-fail) in
                                                    {3702}let extra_42: bitstring = catch-fail((if v_765 then (if v_766 then hmac(@6_tls_h,handshake_secret_18,x_248) else fail-any) else fail-any)) in
                                                    {3703}let v_767: bool = not-caught-fail(extra_42) in
                                                    {3704}let k_70: bitstring = (if v_767 then zero else caught-fail) in
                                                    {3705}let master_secret_43: bitstring = (if v_767 then catch-fail(hmac(@6_tls_h,handshake_secret_18,k_70)) else caught-fail) in
                                                    {3706}let v_768: bool = not-caught-fail(master_secret_43) in
                                                    {3707}let l_220: label = (if v_768 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {3708}let h_215: bitstring = (if v_768 then catch-fail(hash(@6_tls_h,cur_log2_41)) else caught-fail) in
                                                    {3709}let v_769: bool = not-caught-fail(h_215) in
                                                    {3710}let x_249: bitstring = (if v_769 then (l_220,h_215) else caught-fail) in
                                                    {3711}let client_hts_18: bitstring = (if v_768 then catch-fail((if v_769 then hmac(@6_tls_h,handshake_secret_18,x_249) else fail-any)) else caught-fail) in
                                                    {3712}let v_770: bool = not-caught-fail(client_hts_18) in
                                                    {3713}let l_221: label = (if v_770 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {3714}let h_216: bitstring = (if v_770 then catch-fail(hash(@6_tls_h,cur_log2_41)) else caught-fail) in
                                                    {3715}let v_771: bool = not-caught-fail(h_216) in
                                                    {3716}let x_250: bitstring = (if v_771 then (l_221,h_216) else caught-fail) in
                                                    {3717}let server_hts_18: bitstring = (if v_770 then catch-fail((if v_771 then hmac(@6_tls_h,handshake_secret_18,x_250) else fail-any)) else caught-fail) in
                                                    {3718}let v_772: bool = not-caught-fail(server_hts_18) in
                                                    {3719}let l_222: label = (if v_772 then tls13_key else caught-fail) in
                                                    {3720}let h_217: bitstring = (if v_772 then zero else caught-fail) in
                                                    {3721}let x_251: bitstring = (if v_772 then (l_222,h_217) else caught-fail) in
                                                    {3722}let client_wkh_18: bitstring = (if v_772 then catch-fail(hmac(@6_tls_h,client_hts_18,x_251)) else caught-fail) in
                                                    {3723}let v_773: bool = not-caught-fail(client_wkh_18) in
                                                    {3724}let l_223: label = (if v_773 then tls13_key else caught-fail) in
                                                    {3725}let h_218: bitstring = (if v_773 then zero else caught-fail) in
                                                    {3726}let x_252: bitstring = (if v_773 then (l_223,h_218) else caught-fail) in
                                                    {3727}let server_wkh_18: bitstring = (if v_773 then catch-fail(hmac(@6_tls_h,server_hts_18,x_252)) else caught-fail) in
                                                    {3728}let v_774: bool = not-caught-fail(server_wkh_18) in
                                                    {3729}let l_224: label = (if v_774 then tls13_finished else caught-fail) in
                                                    {3730}let h_219: bitstring = (if v_774 then zero else caught-fail) in
                                                    {3731}let x_253: bitstring = (if v_774 then (l_224,h_219) else caught-fail) in
                                                    {3732}let client_fk_18: bitstring = (if v_774 then catch-fail(hmac(@6_tls_h,client_hts_18,x_253)) else caught-fail) in
                                                    {3733}let v_775: bool = not-caught-fail(client_fk_18) in
                                                    {3734}let l_225: label = (if v_775 then tls13_finished else caught-fail) in
                                                    {3735}let h_220: bitstring = (if v_775 then zero else caught-fail) in
                                                    {3736}let x_254: bitstring = (if v_775 then (l_225,h_220) else caught-fail) in
                                                    {3737}let server_fk_18: bitstring = (if v_775 then catch-fail(hmac(@6_tls_h,server_hts_18,x_254)) else caught-fail) in
                                                    {3738}let v_776: bool = not-caught-fail(server_fk_18) in
                                                    {3739}let (master_secret_44: bitstring,chk_25: aead_key,shk_24: aead_key,cfin_25: mac_key,sfin_24: mac_key) = (if v_767 then (if v_768 then (if v_770 then (if v_772 then (if v_773 then (if v_774 then (if v_775 then (if v_776 then (master_secret_43,client_wkh_18,server_wkh_18,client_fk_18,server_fk_18) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {3740}event Client_chk(@6_id_client,chk_25);
                                                    {3741}event Client_shk(@6_id_client,shk_24);
                                                    {3742}event Client_cfin(@6_id_client,cfin_25);
                                                    {3743}event Client_sfin(@6_id_client,sfin_24);
                                                    {3744}in(io, enc_ee_msg_17: bitstring);
                                                    {3745}let ee_msg_18: msg = aead_dec(@6_tls_a,shk_24,0,zero,enc_ee_msg_17) in
                                                    {3746}let EE(ech_ee_17: echExt,extra_ee_17: extraExt) = ee_msg_18 in
                                                    {3747}let cur_log2_42: bitstring = (cur_log2_41,ee_msg_18) in
                                                    {3748}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_11,sr_28,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_92,safe_psk_23,@6_comp_psk,master_secret_44,chk_25,0,shk_24,1,cfin_25,sfin_24,cur_log2_42)))
                                                )
                                                else
                                                    {3749}out(io, illegal_parameter)
                                            )
                                            else
                                                {3750}out(io, illegal_parameter)
                                    )
                                    else
                                        {3751}out(io, unexpected_message)
                            )
                            else
                                {3752}let psk_93: preSharedKey = NoPsk in
                                {3753}let s_79: bitstring = zero in
                                {3754}let k_71: bitstring = catch-fail(psk2b(psk_93)) in
                                {3755}let v_777: bool = not-caught-fail(k_71) in
                                {3756}let early_secret_60: bitstring = catch-fail((if v_777 then hmac(@6_tls_h,s_79,k_71) else fail-any)) in
                                {3757}let v_778: bool = not-caught-fail(early_secret_60) in
                                {3758}let l_226: label = (if v_778 then tls13_ext_res_binder else caught-fail) in
                                {3759}let m_78: bitstring = (if v_778 then zero else caught-fail) in
                                {3760}let h_221: bitstring = (if v_778 then catch-fail(hash(@6_tls_h,m_78)) else caught-fail) in
                                {3761}let v_779: bool = not-caught-fail(h_221) in
                                {3762}let x_255: bitstring = (if v_779 then (l_226,h_221) else caught-fail) in
                                {3763}let binder_key_40: bitstring = (if v_778 then catch-fail((if v_779 then hmac(@6_tls_h,early_secret_60,x_255) else fail-any)) else caught-fail) in
                                {3764}let v_780: bool = not-caught-fail(binder_key_40) in
                                {3765}let v_781: bitstring = catch-fail((if v_778 then (if v_780 then (early_secret_60,binder_key_40) else fail-any) else fail-any)) in
                                {3766}let v_782: bool = (not-caught-fail(v_781) && success?(1-proj-2-tuple(v_781))) in
                                {3767}let kb_40: mac_key = (if v_782 then 2-proj-2-tuple(v_781) else caught-fail) in
                                {3768}let es_61: bitstring = (if v_782 then 1-proj-2-tuple(v_781) else caught-fail) in
                                {3769}let v_783: preSharedKeyExt = (if v_782 then catch-fail(o_psk_ext_1) else caught-fail) in
                                {3770}let v_784: bool = (not-caught-fail(v_783) && success?(1-proj-client_psk_ext(v_783))) in
                                {3771}let fake_binder_4: bitstring = (if v_784 then 2-proj-client_psk_ext(v_783) else caught-fail) in
                                {3772}let fake_id_4: identityPsk = (if v_784 then 1-proj-client_psk_ext(v_783) else caught-fail) in
                                {3773}new fake_binder'[]: bitstring;
                                {3774}let v_785: bitstring = catch-fail((if v_782 then (if v_784 then (client_psk_ext(fake_id_4,fake_binder'),(NoPsk,zero,es_61,false)) else (empty_psk_ext,(NoPsk,zero,es_61,false))) else fail-any)) in
                                {3775}let v_786: bool = (not-caught-fail(v_785) && success?(1-proj-2-tuple(v_785))) in
                                {3776}let psk_data_23: bitstring = (if v_786 then 2-proj-2-tuple(v_785) else caught-fail) in
                                {3777}let psk_ext_39: preSharedKeyExt = (if v_786 then 1-proj-2-tuple(v_785) else caught-fail) in
                                {3778}let o_offer_8: params = (if v_786 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_2,SNI(o_dom_3),o_ech_ext_1,empty_extra_ext,psk_ext_39) else caught-fail) in
                                {3779}let (client_hello'_12: msg,cr'_12: bytes32,kex_data'_12: bitstring,psk_data'_15: bitstring) = (if v_786 then (CH(o_cr_3,o_offer_8),o_cr_3,kex_data_7,psk_data_23) else fail-any) in
                                {3780}out(io, client_hello'_12);
                                {3781}let cur_log_OU1_HRR_OU2_3: bitstring = (cur_log_OU1_HRR,client_hello'_12) in
                                {3782}in(io, server_hello'_15: msg);
                                {3783}let SH(sr'_12: bytes32,mode'_12: params) = server_hello'_15 in
                                (
                                    {3784}if (sr'_12 = B32(HRR24,HRR8)) then
                                        {3785}out(io, unexpected_message)
                                    else
                                        {3786}let (x_256: bitstring,g_20: group) = kex_data'_12 in
                                        {3787}let (psk_offer_18: preSharedKey,id_offer_18: identityPsk,es_offer_18: bitstring,is_safe_offer_18: bool) = psk_data'_15 in
                                        {3788}event Client_PSKOffer(@6_id_client,psk_offer_18,id_offer_18,is_safe_offer_18);
                                        {3789}event Client_Rand_client(@6_id_client,cr'_12);
                                        {3790}event Client_DH_client(@6_id_client,dh_pub(g_20,x_256));
                                        {3791}event Client_server_domain(@6_id_client,o_dom);
                                        {3792}let SH(sr_29: bytes32,mode_22: params) = server_hello'_15 in
                                        {3793}event Client_Rand_server(@6_id_client,sr_29);
                                        {3794}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_20,gy_19: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_40: preSharedKeyExt) = mode_22 in
                                        (
                                            {3795}let cur_log2_43: bitstring = (cur_log_OU1_HRR_OU2_3,server_hello'_15) in
                                            {3796}event Client_DH_server(@6_id_client,gy_19);
                                            {3797}let v_787: bool = (psk_ext_40 = empty_psk_ext) in
                                            {3798}let psk_94: preSharedKey = (if v_787 then NoPsk else caught-fail) in
                                            {3799}let s_80: bitstring = (if v_787 then zero else caught-fail) in
                                            {3800}let k_72: bitstring = (if v_787 then catch-fail(psk2b(psk_94)) else caught-fail) in
                                            {3801}let v_788: bool = not-caught-fail(k_72) in
                                            {3802}let early_secret_61: bitstring = (if v_787 then catch-fail((if v_788 then hmac(@6_tls_h,s_80,k_72) else fail-any)) else caught-fail) in
                                            {3803}let v_789: bool = not-caught-fail(early_secret_61) in
                                            {3804}let l_227: label = (if v_789 then tls13_ext_res_binder else caught-fail) in
                                            {3805}let m_79: bitstring = (if v_789 then zero else caught-fail) in
                                            {3806}let h_222: bitstring = (if v_789 then catch-fail(hash(@6_tls_h,m_79)) else caught-fail) in
                                            {3807}let v_790: bool = not-caught-fail(h_222) in
                                            {3808}let x_257: bitstring = (if v_790 then (l_227,h_222) else caught-fail) in
                                            {3809}let binder_key_41: bitstring = (if v_789 then catch-fail((if v_790 then hmac(@6_tls_h,early_secret_61,x_257) else fail-any)) else caught-fail) in
                                            {3810}let v_791: bool = not-caught-fail(binder_key_41) in
                                            {3811}let v_792: bitstring = (if v_787 then catch-fail((if v_789 then (if v_791 then (early_secret_61,binder_key_41) else fail-any) else fail-any)) else caught-fail) in
                                            {3812}let v_793: bool = (not-caught-fail(v_792) && success?(1-proj-2-tuple(v_792))) in
                                            {3813}let kb_41: mac_key = (if v_793 then 2-proj-2-tuple(v_792) else caught-fail) in
                                            {3814}let es_62: bitstring = (if v_793 then 1-proj-2-tuple(v_792) else caught-fail) in
                                            {3815}let v_794: bitstring = (if not(v_787) then catch-fail(psk_data'_15) else caught-fail) in
                                            {3816}let v_795: bool = (not-caught-fail(v_794) && success?(1-proj-4-tuple(v_794))) in
                                            {3817}let is_safe_37: bool = (if v_795 then 4-proj-4-tuple(v_794) else caught-fail) in
                                            {3818}let es_63: bitstring = (if v_795 then 3-proj-4-tuple(v_794) else caught-fail) in
                                            {3819}let id_46: identityPsk = (if v_795 then 2-proj-4-tuple(v_794) else caught-fail) in
                                            {3820}let psk_95: preSharedKey = (if v_795 then 1-proj-4-tuple(v_794) else caught-fail) in
                                            {3821}let (psk_96: preSharedKey,early_secret_62: bitstring,valid_18: bool,safe_psk_24: bool) = (if v_787 then (if v_793 then (NoPsk,es_62,true,false) else fail-any) else (if v_795 then (psk_95,es_63,((psk_95 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_40)),is_safe_37) else fail-any)) in
                                            {3822}event Client_PSKChoosen(@6_id_client,psk_96,safe_psk_24);
                                            {3823}if valid_18 then
                                            (
                                                {3824}let gxy_37: element = catch-fail(dh_decap_fun(g_20,gy_19,x_256)) in
                                                {3825}let v_796: bool = not-caught-fail(gxy_37) in
                                                {3826}new s_81[]: seed;
                                                {3827}let gxy_38: element = (if v_796 then gxy_37 else dh_f(s_81)) in
                                                {3828}event Client_DH_gxy(@6_id_client,gxy_38);
                                                {3829}let l_228: label = tls13_derived in
                                                {3830}let m_80: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                {3831}let v_797: bool = not-caught-fail(m_80) in
                                                {3832}let h_223: bitstring = (if v_797 then catch-fail(hash(@6_tls_h,m_80)) else caught-fail) in
                                                {3833}let v_798: bool = not-caught-fail(h_223) in
                                                {3834}let x_258: bitstring = (if v_798 then (l_228,h_223) else caught-fail) in
                                                {3835}let extra_43: bitstring = catch-fail((if v_797 then (if v_798 then hmac(@6_tls_h,early_secret_62,x_258) else fail-any) else fail-any)) in
                                                {3836}let v_799: bool = not-caught-fail(extra_43) in
                                                {3837}let handshake_secret_19: bitstring = (if v_799 then hmac(@6_tls_h,extra_43,gxy_38) else fail-any) in
                                                {3838}let l_229: label = tls13_derived in
                                                {3839}let m_81: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                {3840}let v_800: bool = not-caught-fail(m_81) in
                                                {3841}let h_224: bitstring = (if v_800 then catch-fail(hash(@6_tls_h,m_81)) else caught-fail) in
                                                {3842}let v_801: bool = not-caught-fail(h_224) in
                                                {3843}let x_259: bitstring = (if v_801 then (l_229,h_224) else caught-fail) in
                                                {3844}let extra_44: bitstring = catch-fail((if v_800 then (if v_801 then hmac(@6_tls_h,handshake_secret_19,x_259) else fail-any) else fail-any)) in
                                                {3845}let v_802: bool = not-caught-fail(extra_44) in
                                                {3846}let k_73: bitstring = (if v_802 then zero else caught-fail) in
                                                {3847}let master_secret_45: bitstring = (if v_802 then catch-fail(hmac(@6_tls_h,handshake_secret_19,k_73)) else caught-fail) in
                                                {3848}let v_803: bool = not-caught-fail(master_secret_45) in
                                                {3849}let l_230: label = (if v_803 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {3850}let h_225: bitstring = (if v_803 then catch-fail(hash(@6_tls_h,cur_log2_43)) else caught-fail) in
                                                {3851}let v_804: bool = not-caught-fail(h_225) in
                                                {3852}let x_260: bitstring = (if v_804 then (l_230,h_225) else caught-fail) in
                                                {3853}let client_hts_19: bitstring = (if v_803 then catch-fail((if v_804 then hmac(@6_tls_h,handshake_secret_19,x_260) else fail-any)) else caught-fail) in
                                                {3854}let v_805: bool = not-caught-fail(client_hts_19) in
                                                {3855}let l_231: label = (if v_805 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {3856}let h_226: bitstring = (if v_805 then catch-fail(hash(@6_tls_h,cur_log2_43)) else caught-fail) in
                                                {3857}let v_806: bool = not-caught-fail(h_226) in
                                                {3858}let x_261: bitstring = (if v_806 then (l_231,h_226) else caught-fail) in
                                                {3859}let server_hts_19: bitstring = (if v_805 then catch-fail((if v_806 then hmac(@6_tls_h,handshake_secret_19,x_261) else fail-any)) else caught-fail) in
                                                {3860}let v_807: bool = not-caught-fail(server_hts_19) in
                                                {3861}let l_232: label = (if v_807 then tls13_key else caught-fail) in
                                                {3862}let h_227: bitstring = (if v_807 then zero else caught-fail) in
                                                {3863}let x_262: bitstring = (if v_807 then (l_232,h_227) else caught-fail) in
                                                {3864}let client_wkh_19: bitstring = (if v_807 then catch-fail(hmac(@6_tls_h,client_hts_19,x_262)) else caught-fail) in
                                                {3865}let v_808: bool = not-caught-fail(client_wkh_19) in
                                                {3866}let l_233: label = (if v_808 then tls13_key else caught-fail) in
                                                {3867}let h_228: bitstring = (if v_808 then zero else caught-fail) in
                                                {3868}let x_263: bitstring = (if v_808 then (l_233,h_228) else caught-fail) in
                                                {3869}let server_wkh_19: bitstring = (if v_808 then catch-fail(hmac(@6_tls_h,server_hts_19,x_263)) else caught-fail) in
                                                {3870}let v_809: bool = not-caught-fail(server_wkh_19) in
                                                {3871}let l_234: label = (if v_809 then tls13_finished else caught-fail) in
                                                {3872}let h_229: bitstring = (if v_809 then zero else caught-fail) in
                                                {3873}let x_264: bitstring = (if v_809 then (l_234,h_229) else caught-fail) in
                                                {3874}let client_fk_19: bitstring = (if v_809 then catch-fail(hmac(@6_tls_h,client_hts_19,x_264)) else caught-fail) in
                                                {3875}let v_810: bool = not-caught-fail(client_fk_19) in
                                                {3876}let l_235: label = (if v_810 then tls13_finished else caught-fail) in
                                                {3877}let h_230: bitstring = (if v_810 then zero else caught-fail) in
                                                {3878}let x_265: bitstring = (if v_810 then (l_235,h_230) else caught-fail) in
                                                {3879}let server_fk_19: bitstring = (if v_810 then catch-fail(hmac(@6_tls_h,server_hts_19,x_265)) else caught-fail) in
                                                {3880}let v_811: bool = not-caught-fail(server_fk_19) in
                                                {3881}let (master_secret_46: bitstring,chk_26: aead_key,shk_25: aead_key,cfin_26: mac_key,sfin_25: mac_key) = (if v_802 then (if v_803 then (if v_805 then (if v_807 then (if v_808 then (if v_809 then (if v_810 then (if v_811 then (master_secret_45,client_wkh_19,server_wkh_19,client_fk_19,server_fk_19) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {3882}event Client_chk(@6_id_client,chk_26);
                                                {3883}event Client_shk(@6_id_client,shk_25);
                                                {3884}event Client_cfin(@6_id_client,cfin_26);
                                                {3885}event Client_sfin(@6_id_client,sfin_25);
                                                {3886}in(io, enc_ee_msg_18: bitstring);
                                                {3887}let ee_msg_19: msg = aead_dec(@6_tls_a,shk_25,0,zero,enc_ee_msg_18) in
                                                {3888}let EE(ech_ee_18: echExt,extra_ee_18: extraExt) = ee_msg_19 in
                                                {3889}let cur_log2_44: bitstring = (cur_log2_43,ee_msg_19) in
                                                {3890}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_12,sr_29,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_96,safe_psk_24,@6_comp_psk,master_secret_46,chk_26,0,shk_25,1,cfin_26,sfin_25,cur_log2_44)))
                                            )
                                            else
                                                {3891}out(io, illegal_parameter)
                                        )
                                        else
                                            {3892}out(io, illegal_parameter)
                                )
                                else
                                    {3893}out(io, unexpected_message)
                    )
                    else
                        {3894}let cur_log_11: bitstring = (zero,i_client_hello_1) in
                        {3895}let sh_modified_4: msg = SH(B32(sr24_2,zero8),mode_15) in
                        {3896}let cur_log_sh_4: bitstring = (cur_log_11,sh_modified_4) in
                        {3897}let transcript_ech_conf_4: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_4)) in
                        {3898}let v_812: bool = not-caught-fail(transcript_ech_conf_4) in
                        {3899}let s_82: bitstring = (if v_812 then zero else caught-fail) in
                        {3900}let k_74: bitstring = (if v_812 then catch-fail(b32_2_b(get_random(i_client_hello_1))) else caught-fail) in
                        {3901}let v_813: bool = not-caught-fail(k_74) in
                        {3902}let k_75: bitstring = (if v_812 then catch-fail((if v_813 then hmac(@6_backend_h,s_82,k_74) else fail-any)) else caught-fail) in
                        {3903}let v_814: bool = not-caught-fail(k_75) in
                        {3904}let l_236: label = (if v_814 then ech_accept_confirmation else caught-fail) in
                        {3905}let x_266: bitstring = (if v_814 then (l_236,cur_log_sh_4) else caught-fail) in
                        {3906}let sr8_5: bytes8 = (if v_812 then catch-fail(crop_into_bytes8((if v_814 then hmac(@6_backend_h,k_75,x_266) else fail-any))) else caught-fail) in
                        {3907}let v_815: bool = not-caught-fail(sr8_5) in
                        {3908}if (B32(sr24_2,sr8_1) = (if v_812 then (if v_815 then B32(sr24_2,sr8_5) else fail-any) else fail-any)) then
                        (
                            {3909}event ClientEchAcceptance(@6_id_client,true);
                            {3910}let cur_log_12: bitstring = (zero,i_client_hello_1) in
                            {3911}let (x_267: bitstring,g_21: group) = i_kex_data_1 in
                            {3912}let (psk_offer_19: preSharedKey,id_offer_19: identityPsk,es_offer_19: bitstring,is_safe_offer_19: bool) = psk_data_16 in
                            {3913}event Client_PSKOffer(@6_id_client,psk_offer_19,id_offer_19,is_safe_offer_19);
                            {3914}event Client_Rand_client(@6_id_client,i_cr_1);
                            {3915}event Client_DH_client(@6_id_client,dh_pub(g_21,x_267));
                            {3916}event Client_server_domain(@6_id_client,backend_dom);
                            {3917}let SH(sr_30: bytes32,mode_23: params) = server_hello_4 in
                            {3918}event Client_Rand_server(@6_id_client,sr_30);
                            {3919}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_21,gy_20: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_41: preSharedKeyExt) = mode_23 in
                            (
                                {3920}let cur_log2_45: bitstring = (cur_log_12,server_hello_4) in
                                {3921}event Client_DH_server(@6_id_client,gy_20);
                                {3922}let v_816: bool = (psk_ext_41 = empty_psk_ext) in
                                {3923}let psk_97: preSharedKey = (if v_816 then NoPsk else caught-fail) in
                                {3924}let s_83: bitstring = (if v_816 then zero else caught-fail) in
                                {3925}let k_76: bitstring = (if v_816 then catch-fail(psk2b(psk_97)) else caught-fail) in
                                {3926}let v_817: bool = not-caught-fail(k_76) in
                                {3927}let early_secret_63: bitstring = (if v_816 then catch-fail((if v_817 then hmac(@6_backend_h,s_83,k_76) else fail-any)) else caught-fail) in
                                {3928}let v_818: bool = not-caught-fail(early_secret_63) in
                                {3929}let l_237: label = (if v_818 then tls13_ext_res_binder else caught-fail) in
                                {3930}let m_82: bitstring = (if v_818 then zero else caught-fail) in
                                {3931}let h_231: bitstring = (if v_818 then catch-fail(hash(@6_backend_h,m_82)) else caught-fail) in
                                {3932}let v_819: bool = not-caught-fail(h_231) in
                                {3933}let x_268: bitstring = (if v_819 then (l_237,h_231) else caught-fail) in
                                {3934}let binder_key_42: bitstring = (if v_818 then catch-fail((if v_819 then hmac(@6_backend_h,early_secret_63,x_268) else fail-any)) else caught-fail) in
                                {3935}let v_820: bool = not-caught-fail(binder_key_42) in
                                {3936}let v_821: bitstring = (if v_816 then catch-fail((if v_818 then (if v_820 then (early_secret_63,binder_key_42) else fail-any) else fail-any)) else caught-fail) in
                                {3937}let v_822: bool = (not-caught-fail(v_821) && success?(1-proj-2-tuple(v_821))) in
                                {3938}let kb_42: mac_key = (if v_822 then 2-proj-2-tuple(v_821) else caught-fail) in
                                {3939}let es_64: bitstring = (if v_822 then 1-proj-2-tuple(v_821) else caught-fail) in
                                {3940}let v_823: bitstring = (if not(v_816) then catch-fail(psk_data_16) else caught-fail) in
                                {3941}let v_824: bool = (not-caught-fail(v_823) && success?(1-proj-4-tuple(v_823))) in
                                {3942}let is_safe_38: bool = (if v_824 then 4-proj-4-tuple(v_823) else caught-fail) in
                                {3943}let es_65: bitstring = (if v_824 then 3-proj-4-tuple(v_823) else caught-fail) in
                                {3944}let id_47: identityPsk = (if v_824 then 2-proj-4-tuple(v_823) else caught-fail) in
                                {3945}let psk_98: preSharedKey = (if v_824 then 1-proj-4-tuple(v_823) else caught-fail) in
                                {3946}let (psk_99: preSharedKey,early_secret_64: bitstring,valid_19: bool,safe_psk_25: bool) = (if v_816 then (if v_822 then (NoPsk,es_64,true,false) else fail-any) else (if v_824 then (psk_98,es_65,((psk_98 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_41)),is_safe_38) else fail-any)) in
                                {3947}event Client_PSKChoosen(@6_id_client,psk_99,safe_psk_25);
                                {3948}if valid_19 then
                                (
                                    {3949}let gxy_39: element = catch-fail(dh_decap_fun(g_21,gy_20,x_267)) in
                                    {3950}let v_825: bool = not-caught-fail(gxy_39) in
                                    {3951}new s_84[]: seed;
                                    {3952}let gxy_40: element = (if v_825 then gxy_39 else dh_f(s_84)) in
                                    {3953}event Client_DH_gxy(@6_id_client,gxy_40);
                                    {3954}let l_238: label = tls13_derived in
                                    {3955}let m_83: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                    {3956}let v_826: bool = not-caught-fail(m_83) in
                                    {3957}let h_232: bitstring = (if v_826 then catch-fail(hash(@6_backend_h,m_83)) else caught-fail) in
                                    {3958}let v_827: bool = not-caught-fail(h_232) in
                                    {3959}let x_269: bitstring = (if v_827 then (l_238,h_232) else caught-fail) in
                                    {3960}let extra_45: bitstring = catch-fail((if v_826 then (if v_827 then hmac(@6_backend_h,early_secret_64,x_269) else fail-any) else fail-any)) in
                                    {3961}let v_828: bool = not-caught-fail(extra_45) in
                                    {3962}let handshake_secret_20: bitstring = (if v_828 then hmac(@6_backend_h,extra_45,gxy_40) else fail-any) in
                                    {3963}let l_239: label = tls13_derived in
                                    {3964}let m_84: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                    {3965}let v_829: bool = not-caught-fail(m_84) in
                                    {3966}let h_233: bitstring = (if v_829 then catch-fail(hash(@6_backend_h,m_84)) else caught-fail) in
                                    {3967}let v_830: bool = not-caught-fail(h_233) in
                                    {3968}let x_270: bitstring = (if v_830 then (l_239,h_233) else caught-fail) in
                                    {3969}let extra_46: bitstring = catch-fail((if v_829 then (if v_830 then hmac(@6_backend_h,handshake_secret_20,x_270) else fail-any) else fail-any)) in
                                    {3970}let v_831: bool = not-caught-fail(extra_46) in
                                    {3971}let k_77: bitstring = (if v_831 then zero else caught-fail) in
                                    {3972}let master_secret_47: bitstring = (if v_831 then catch-fail(hmac(@6_backend_h,handshake_secret_20,k_77)) else caught-fail) in
                                    {3973}let v_832: bool = not-caught-fail(master_secret_47) in
                                    {3974}let l_240: label = (if v_832 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {3975}let h_234: bitstring = (if v_832 then catch-fail(hash(@6_backend_h,cur_log2_45)) else caught-fail) in
                                    {3976}let v_833: bool = not-caught-fail(h_234) in
                                    {3977}let x_271: bitstring = (if v_833 then (l_240,h_234) else caught-fail) in
                                    {3978}let client_hts_20: bitstring = (if v_832 then catch-fail((if v_833 then hmac(@6_backend_h,handshake_secret_20,x_271) else fail-any)) else caught-fail) in
                                    {3979}let v_834: bool = not-caught-fail(client_hts_20) in
                                    {3980}let l_241: label = (if v_834 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {3981}let h_235: bitstring = (if v_834 then catch-fail(hash(@6_backend_h,cur_log2_45)) else caught-fail) in
                                    {3982}let v_835: bool = not-caught-fail(h_235) in
                                    {3983}let x_272: bitstring = (if v_835 then (l_241,h_235) else caught-fail) in
                                    {3984}let server_hts_20: bitstring = (if v_834 then catch-fail((if v_835 then hmac(@6_backend_h,handshake_secret_20,x_272) else fail-any)) else caught-fail) in
                                    {3985}let v_836: bool = not-caught-fail(server_hts_20) in
                                    {3986}let l_242: label = (if v_836 then tls13_key else caught-fail) in
                                    {3987}let h_236: bitstring = (if v_836 then zero else caught-fail) in
                                    {3988}let x_273: bitstring = (if v_836 then (l_242,h_236) else caught-fail) in
                                    {3989}let client_wkh_20: bitstring = (if v_836 then catch-fail(hmac(@6_backend_h,client_hts_20,x_273)) else caught-fail) in
                                    {3990}let v_837: bool = not-caught-fail(client_wkh_20) in
                                    {3991}let l_243: label = (if v_837 then tls13_key else caught-fail) in
                                    {3992}let h_237: bitstring = (if v_837 then zero else caught-fail) in
                                    {3993}let x_274: bitstring = (if v_837 then (l_243,h_237) else caught-fail) in
                                    {3994}let server_wkh_20: bitstring = (if v_837 then catch-fail(hmac(@6_backend_h,server_hts_20,x_274)) else caught-fail) in
                                    {3995}let v_838: bool = not-caught-fail(server_wkh_20) in
                                    {3996}let l_244: label = (if v_838 then tls13_finished else caught-fail) in
                                    {3997}let h_238: bitstring = (if v_838 then zero else caught-fail) in
                                    {3998}let x_275: bitstring = (if v_838 then (l_244,h_238) else caught-fail) in
                                    {3999}let client_fk_20: bitstring = (if v_838 then catch-fail(hmac(@6_backend_h,client_hts_20,x_275)) else caught-fail) in
                                    {4000}let v_839: bool = not-caught-fail(client_fk_20) in
                                    {4001}let l_245: label = (if v_839 then tls13_finished else caught-fail) in
                                    {4002}let h_239: bitstring = (if v_839 then zero else caught-fail) in
                                    {4003}let x_276: bitstring = (if v_839 then (l_245,h_239) else caught-fail) in
                                    {4004}let server_fk_20: bitstring = (if v_839 then catch-fail(hmac(@6_backend_h,server_hts_20,x_276)) else caught-fail) in
                                    {4005}let v_840: bool = not-caught-fail(server_fk_20) in
                                    {4006}let (master_secret_48: bitstring,chk_27: aead_key,shk_26: aead_key,cfin_27: mac_key,sfin_26: mac_key) = (if v_831 then (if v_832 then (if v_834 then (if v_836 then (if v_837 then (if v_838 then (if v_839 then (if v_840 then (master_secret_47,client_wkh_20,server_wkh_20,client_fk_20,server_fk_20) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {4007}event Client_chk(@6_id_client,chk_27);
                                    {4008}event Client_shk(@6_id_client,shk_26);
                                    {4009}event Client_cfin(@6_id_client,cfin_27);
                                    {4010}event Client_sfin(@6_id_client,sfin_26);
                                    {4011}in(io, enc_ee_msg_19: bitstring);
                                    {4012}let ee_msg_20: msg = aead_dec(@6_backend_a,shk_26,0,zero,enc_ee_msg_19) in
                                    {4013}let EE(ech_ee_19: echExt,extra_ee_19: extraExt) = ee_msg_20 in
                                    {4014}let cur_log2_46: bitstring = (cur_log2_45,ee_msg_20) in
                                    {4015}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr_1,sr_30,@6_backend_h,@6_backend_a,c_dom_6,backend_dom,psk_99,safe_psk_25,@6_comp_psk,master_secret_48,chk_27,0,shk_26,1,cfin_27,sfin_26,cur_log2_46)))
                                )
                                else
                                    {4016}out(io, illegal_parameter)
                            )
                            else
                                {4017}out(io, illegal_parameter)
                        )
                        else
                            {4018}event ClientEchAcceptance(@6_id_client,false);
                            {4019}let v_841: bool = @6_use_grease in
                            {4020}let psk_100: preSharedKey = (if not(v_841) then NoPsk else caught-fail) in
                            {4021}let s_85: bitstring = (if not(v_841) then zero else caught-fail) in
                            {4022}let k_78: bitstring = (if not(v_841) then catch-fail(psk2b(psk_100)) else caught-fail) in
                            {4023}let v_842: bool = not-caught-fail(k_78) in
                            {4024}let early_secret_65: bitstring = (if not(v_841) then catch-fail((if v_842 then hmac(@6_tls_h,s_85,k_78) else fail-any)) else caught-fail) in
                            {4025}let v_843: bool = not-caught-fail(early_secret_65) in
                            {4026}let l_246: label = (if v_843 then tls13_ext_res_binder else caught-fail) in
                            {4027}let m_85: bitstring = (if v_843 then zero else caught-fail) in
                            {4028}let h_240: bitstring = (if v_843 then catch-fail(hash(@6_tls_h,m_85)) else caught-fail) in
                            {4029}let v_844: bool = not-caught-fail(h_240) in
                            {4030}let x_277: bitstring = (if v_844 then (l_246,h_240) else caught-fail) in
                            {4031}let binder_key_43: bitstring = (if v_843 then catch-fail((if v_844 then hmac(@6_tls_h,early_secret_65,x_277) else fail-any)) else caught-fail) in
                            {4032}let v_845: bool = not-caught-fail(binder_key_43) in
                            {4033}let v_846: bitstring = (if not(v_841) then catch-fail((if v_843 then (if v_845 then (early_secret_65,binder_key_43) else fail-any) else fail-any)) else caught-fail) in
                            {4034}let v_847: bool = (not-caught-fail(v_846) && success?(1-proj-2-tuple(v_846))) in
                            {4035}let kb_43: mac_key = (if v_847 then 2-proj-2-tuple(v_846) else caught-fail) in
                            {4036}let es': bitstring = (if v_847 then 1-proj-2-tuple(v_846) else caught-fail) in
                            {4037}let psk_data'_16: bitstring = (if v_841 then psk_data_16 else (if v_847 then (NoPsk,zero,es',false) else fail-any)) in
                            {4038}let cur_log_13: bitstring = (zero,o_client_hello) in
                            {4039}let (x_278: bitstring,g_22: group) = o_kex_data_1 in
                            {4040}let (psk_offer_20: preSharedKey,id_offer_20: identityPsk,es_offer_20: bitstring,is_safe_offer_20: bool) = psk_data'_16 in
                            {4041}event Client_PSKOffer(@6_id_client,psk_offer_20,id_offer_20,is_safe_offer_20);
                            {4042}event Client_Rand_client(@6_id_client,o_cr_1);
                            {4043}event Client_DH_client(@6_id_client,dh_pub(g_22,x_278));
                            {4044}event Client_server_domain(@6_id_client,o_dom);
                            {4045}let SH(sr_31: bytes32,mode_24: params) = server_hello_4 in
                            {4046}event Client_Rand_server(@6_id_client,sr_31);
                            {4047}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_22,gy_21: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_42: preSharedKeyExt) = mode_24 in
                            (
                                {4048}let cur_log2_47: bitstring = (cur_log_13,server_hello_4) in
                                {4049}event Client_DH_server(@6_id_client,gy_21);
                                {4050}let v_848: bool = (psk_ext_42 = empty_psk_ext) in
                                {4051}let psk_101: preSharedKey = (if v_848 then NoPsk else caught-fail) in
                                {4052}let s_86: bitstring = (if v_848 then zero else caught-fail) in
                                {4053}let k_79: bitstring = (if v_848 then catch-fail(psk2b(psk_101)) else caught-fail) in
                                {4054}let v_849: bool = not-caught-fail(k_79) in
                                {4055}let early_secret_66: bitstring = (if v_848 then catch-fail((if v_849 then hmac(@6_tls_h,s_86,k_79) else fail-any)) else caught-fail) in
                                {4056}let v_850: bool = not-caught-fail(early_secret_66) in
                                {4057}let l_247: label = (if v_850 then tls13_ext_res_binder else caught-fail) in
                                {4058}let m_86: bitstring = (if v_850 then zero else caught-fail) in
                                {4059}let h_241: bitstring = (if v_850 then catch-fail(hash(@6_tls_h,m_86)) else caught-fail) in
                                {4060}let v_851: bool = not-caught-fail(h_241) in
                                {4061}let x_279: bitstring = (if v_851 then (l_247,h_241) else caught-fail) in
                                {4062}let binder_key_44: bitstring = (if v_850 then catch-fail((if v_851 then hmac(@6_tls_h,early_secret_66,x_279) else fail-any)) else caught-fail) in
                                {4063}let v_852: bool = not-caught-fail(binder_key_44) in
                                {4064}let v_853: bitstring = (if v_848 then catch-fail((if v_850 then (if v_852 then (early_secret_66,binder_key_44) else fail-any) else fail-any)) else caught-fail) in
                                {4065}let v_854: bool = (not-caught-fail(v_853) && success?(1-proj-2-tuple(v_853))) in
                                {4066}let kb_44: mac_key = (if v_854 then 2-proj-2-tuple(v_853) else caught-fail) in
                                {4067}let es_66: bitstring = (if v_854 then 1-proj-2-tuple(v_853) else caught-fail) in
                                {4068}let v_855: bitstring = (if not(v_848) then catch-fail(psk_data'_16) else caught-fail) in
                                {4069}let v_856: bool = (not-caught-fail(v_855) && success?(1-proj-4-tuple(v_855))) in
                                {4070}let is_safe_39: bool = (if v_856 then 4-proj-4-tuple(v_855) else caught-fail) in
                                {4071}let es_67: bitstring = (if v_856 then 3-proj-4-tuple(v_855) else caught-fail) in
                                {4072}let id_48: identityPsk = (if v_856 then 2-proj-4-tuple(v_855) else caught-fail) in
                                {4073}let psk_102: preSharedKey = (if v_856 then 1-proj-4-tuple(v_855) else caught-fail) in
                                {4074}let (psk_103: preSharedKey,early_secret_67: bitstring,valid_20: bool,safe_psk_26: bool) = (if v_848 then (if v_854 then (NoPsk,es_66,true,false) else fail-any) else (if v_856 then (psk_102,es_67,((psk_102 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_42)),is_safe_39) else fail-any)) in
                                {4075}event Client_PSKChoosen(@6_id_client,psk_103,safe_psk_26);
                                {4076}if valid_20 then
                                (
                                    {4077}let gxy_41: element = catch-fail(dh_decap_fun(g_22,gy_21,x_278)) in
                                    {4078}let v_857: bool = not-caught-fail(gxy_41) in
                                    {4079}new s_87[]: seed;
                                    {4080}let gxy_42: element = (if v_857 then gxy_41 else dh_f(s_87)) in
                                    {4081}event Client_DH_gxy(@6_id_client,gxy_42);
                                    {4082}let l_248: label = tls13_derived in
                                    {4083}let m_87: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                    {4084}let v_858: bool = not-caught-fail(m_87) in
                                    {4085}let h_242: bitstring = (if v_858 then catch-fail(hash(@6_tls_h,m_87)) else caught-fail) in
                                    {4086}let v_859: bool = not-caught-fail(h_242) in
                                    {4087}let x_280: bitstring = (if v_859 then (l_248,h_242) else caught-fail) in
                                    {4088}let extra_47: bitstring = catch-fail((if v_858 then (if v_859 then hmac(@6_tls_h,early_secret_67,x_280) else fail-any) else fail-any)) in
                                    {4089}let v_860: bool = not-caught-fail(extra_47) in
                                    {4090}let handshake_secret_21: bitstring = (if v_860 then hmac(@6_tls_h,extra_47,gxy_42) else fail-any) in
                                    {4091}let l_249: label = tls13_derived in
                                    {4092}let m_88: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                    {4093}let v_861: bool = not-caught-fail(m_88) in
                                    {4094}let h_243: bitstring = (if v_861 then catch-fail(hash(@6_tls_h,m_88)) else caught-fail) in
                                    {4095}let v_862: bool = not-caught-fail(h_243) in
                                    {4096}let x_281: bitstring = (if v_862 then (l_249,h_243) else caught-fail) in
                                    {4097}let extra_48: bitstring = catch-fail((if v_861 then (if v_862 then hmac(@6_tls_h,handshake_secret_21,x_281) else fail-any) else fail-any)) in
                                    {4098}let v_863: bool = not-caught-fail(extra_48) in
                                    {4099}let k_80: bitstring = (if v_863 then zero else caught-fail) in
                                    {4100}let master_secret_49: bitstring = (if v_863 then catch-fail(hmac(@6_tls_h,handshake_secret_21,k_80)) else caught-fail) in
                                    {4101}let v_864: bool = not-caught-fail(master_secret_49) in
                                    {4102}let l_250: label = (if v_864 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {4103}let h_244: bitstring = (if v_864 then catch-fail(hash(@6_tls_h,cur_log2_47)) else caught-fail) in
                                    {4104}let v_865: bool = not-caught-fail(h_244) in
                                    {4105}let x_282: bitstring = (if v_865 then (l_250,h_244) else caught-fail) in
                                    {4106}let client_hts_21: bitstring = (if v_864 then catch-fail((if v_865 then hmac(@6_tls_h,handshake_secret_21,x_282) else fail-any)) else caught-fail) in
                                    {4107}let v_866: bool = not-caught-fail(client_hts_21) in
                                    {4108}let l_251: label = (if v_866 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {4109}let h_245: bitstring = (if v_866 then catch-fail(hash(@6_tls_h,cur_log2_47)) else caught-fail) in
                                    {4110}let v_867: bool = not-caught-fail(h_245) in
                                    {4111}let x_283: bitstring = (if v_867 then (l_251,h_245) else caught-fail) in
                                    {4112}let server_hts_21: bitstring = (if v_866 then catch-fail((if v_867 then hmac(@6_tls_h,handshake_secret_21,x_283) else fail-any)) else caught-fail) in
                                    {4113}let v_868: bool = not-caught-fail(server_hts_21) in
                                    {4114}let l_252: label = (if v_868 then tls13_key else caught-fail) in
                                    {4115}let h_246: bitstring = (if v_868 then zero else caught-fail) in
                                    {4116}let x_284: bitstring = (if v_868 then (l_252,h_246) else caught-fail) in
                                    {4117}let client_wkh_21: bitstring = (if v_868 then catch-fail(hmac(@6_tls_h,client_hts_21,x_284)) else caught-fail) in
                                    {4118}let v_869: bool = not-caught-fail(client_wkh_21) in
                                    {4119}let l_253: label = (if v_869 then tls13_key else caught-fail) in
                                    {4120}let h_247: bitstring = (if v_869 then zero else caught-fail) in
                                    {4121}let x_285: bitstring = (if v_869 then (l_253,h_247) else caught-fail) in
                                    {4122}let server_wkh_21: bitstring = (if v_869 then catch-fail(hmac(@6_tls_h,server_hts_21,x_285)) else caught-fail) in
                                    {4123}let v_870: bool = not-caught-fail(server_wkh_21) in
                                    {4124}let l_254: label = (if v_870 then tls13_finished else caught-fail) in
                                    {4125}let h_248: bitstring = (if v_870 then zero else caught-fail) in
                                    {4126}let x_286: bitstring = (if v_870 then (l_254,h_248) else caught-fail) in
                                    {4127}let client_fk_21: bitstring = (if v_870 then catch-fail(hmac(@6_tls_h,client_hts_21,x_286)) else caught-fail) in
                                    {4128}let v_871: bool = not-caught-fail(client_fk_21) in
                                    {4129}let l_255: label = (if v_871 then tls13_finished else caught-fail) in
                                    {4130}let h_249: bitstring = (if v_871 then zero else caught-fail) in
                                    {4131}let x_287: bitstring = (if v_871 then (l_255,h_249) else caught-fail) in
                                    {4132}let server_fk_21: bitstring = (if v_871 then catch-fail(hmac(@6_tls_h,server_hts_21,x_287)) else caught-fail) in
                                    {4133}let v_872: bool = not-caught-fail(server_fk_21) in
                                    {4134}let (master_secret_50: bitstring,chk_28: aead_key,shk_27: aead_key,cfin_28: mac_key,sfin_27: mac_key) = (if v_863 then (if v_864 then (if v_866 then (if v_868 then (if v_869 then (if v_870 then (if v_871 then (if v_872 then (master_secret_49,client_wkh_21,server_wkh_21,client_fk_21,server_fk_21) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {4135}event Client_chk(@6_id_client,chk_28);
                                    {4136}event Client_shk(@6_id_client,shk_27);
                                    {4137}event Client_cfin(@6_id_client,cfin_28);
                                    {4138}event Client_sfin(@6_id_client,sfin_27);
                                    {4139}in(io, enc_ee_msg_20: bitstring);
                                    {4140}let ee_msg_21: msg = aead_dec(@6_tls_a,shk_27,0,zero,enc_ee_msg_20) in
                                    {4141}let EE(ech_ee_20: echExt,extra_ee_20: extraExt) = ee_msg_21 in
                                    {4142}let cur_log2_48: bitstring = (cur_log2_47,ee_msg_21) in
                                    {4143}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(o_cr_1,sr_31,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_103,safe_psk_26,@6_comp_psk,master_secret_50,chk_28,0,shk_27,1,cfin_28,sfin_27,cur_log2_48)))
                                )
                                else
                                    {4144}out(io, illegal_parameter)
                            )
                            else
                                {4145}out(io, illegal_parameter)
                )
                else
                    {4146}out(io, unexpected_message)
            )
        )
        else
            {5629}get pre_shared_keys(c_dom'_8: domain,=dom_psk,=h_psk,id_49: identityPsk,psk_104: preSharedKey,idP_10: idProc,is_safe_40: bool) in
            {4147}event Selected_one_time_used_psk(@6_id_client,psk_104,is_safe_40);
            {4148}event Selected_psk(c_dom_6,c_dom'_8,idP_10,is_safe_40);
            {4149}event Selected_psk_no_missmatch(@6_id_client,dom_psk,h_psk,psk_104,id_49);
            {4150}event Selected_psk_with_ID(c_dom_6,c_dom'_8,id_49,idP_10,is_safe_40);
            {4151}let v_873: bitstring = (id_49,psk_104,is_safe_40) in
            {4152}let v_874: bool = success?(1-proj-3-tuple(v_873)) in
            {4153}let is_safe_41: bool = (if v_874 then 3-proj-3-tuple(v_873) else caught-fail) in
            {4154}let psk_105: preSharedKey = (if v_874 then 2-proj-3-tuple(v_873) else caught-fail) in
            {4155}let id_50: identityPsk = (if v_874 then 1-proj-3-tuple(v_873) else caught-fail) in
            {4156}let offer_27: params = (if v_874 then nego(TLS13,h_psk,a_psk,kex_ext_psk,SNI(dom_psk),ech_inner_or_grease,extra_psk,trunc_client_psk_ext(id_50)) else caught-fail) in
            {4157}let cur_log'_15: bitstring = (if v_874 then (cur_log_9,CH(cr_psk,offer_27)) else caught-fail) in
            {4158}let s_88: bitstring = (if v_874 then zero else caught-fail) in
            {4159}let k_81: bitstring = (if v_874 then catch-fail(psk2b(psk_105)) else caught-fail) in
            {4160}let v_875: bool = not-caught-fail(k_81) in
            {4161}let early_secret_68: bitstring = (if v_874 then catch-fail((if v_875 then hmac(h_psk,s_88,k_81) else fail-any)) else caught-fail) in
            {4162}let v_876: bool = not-caught-fail(early_secret_68) in
            {4163}let l_256: label = (if v_876 then tls13_ext_res_binder else caught-fail) in
            {4164}let m_89: bitstring = (if v_876 then zero else caught-fail) in
            {4165}let h_250: bitstring = (if v_876 then catch-fail(hash(h_psk,m_89)) else caught-fail) in
            {4166}let v_877: bool = not-caught-fail(h_250) in
            {4167}let x_288: bitstring = (if v_877 then (l_256,h_250) else caught-fail) in
            {4168}let binder_key_45: bitstring = (if v_876 then catch-fail((if v_877 then hmac(h_psk,early_secret_68,x_288) else fail-any)) else caught-fail) in
            {4169}let v_878: bool = not-caught-fail(binder_key_45) in
            {4170}let v_879: bitstring = (if v_874 then catch-fail((if v_876 then (if v_878 then (early_secret_68,binder_key_45) else fail-any) else fail-any)) else caught-fail) in
            {4171}let v_880: bool = (not-caught-fail(v_879) && success?(1-proj-2-tuple(v_879))) in
            {4172}let kb_45: mac_key = (if v_880 then 2-proj-2-tuple(v_879) else caught-fail) in
            {4173}let es_68: bitstring = (if v_880 then 1-proj-2-tuple(v_879) else caught-fail) in
            {4174}let binders_14: bitstring = (if v_880 then catch-fail(hmac(h_psk,kb_45,cur_log'_15)) else caught-fail) in
            {4175}let v_881: bool = not-caught-fail(binders_14) in
            {4176}let v_882: bitstring = catch-fail((if v_874 then (if v_880 then (if v_881 then (client_psk_ext(id_50,binders_14),(psk_105,id_50,es_68,is_safe_41)) else fail-any) else fail-any) else fail-any)) in
            {4177}let v_883: bool = (not-caught-fail(v_882) && success?(1-proj-2-tuple(v_882))) in
            {4178}let psk_data_24: bitstring = (if v_883 then 2-proj-2-tuple(v_882) else caught-fail) in
            {4179}let psk_ext_43: preSharedKeyExt = (if v_883 then 1-proj-2-tuple(v_882) else caught-fail) in
            {4180}let i_offer_4: params = (if v_883 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_43) else caught-fail) in
            {4181}let i_client_hello_5: msg = (if v_883 then CH(i_cr,i_offer_4) else caught-fail) in
            {4182}let v_884: bool = (if v_883 then catch-fail(@6_use_grease) else caught-fail) in
            {4183}let o_offer_9: params = (if v_884 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),ech_inner_or_grease,empty_extra_ext,psk_ext_43) else caught-fail) in
            {4184}new fake_id_5[]: identityPsk;
            {4185}new fake_binder_5[]: bitstring;
            {4186}let o_psk_ext_5: preSharedKeyExt = (if is-false(v_884) then (if @6_use_psk then client_psk_ext(fake_id_5,fake_binder_5) else empty_psk_ext) else caught-fail) in
            {4187}let o_ech_ext_ADD_4: echExt = (if is-false(v_884) then ECHClientHelloOuter(ech_h_3,ech_a_3,config_id_1,enc_1,zero) else caught-fail) in
            {4188}let o_offer_ADD_4: params = (if is-false(v_884) then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),o_ech_ext_ADD_4,empty_extra_ext,o_psk_ext_5) else caught-fail) in
            {4189}let o_client_hello_ADD_4: msg = (if is-false(v_884) then CH(o_cr,o_offer_ADD_4) else caught-fail) in
            {4190}let n_4: nat = (if is-false(v_884) then 1 else caught-fail) in
            {4191}let v_885: hpkeContext = (if is-false(v_884) then catch-fail(context) else caught-fail) in
            {4192}let v_886: bool = (not-caught-fail(v_885) && ((S =nf 1-proj-hpke_context(v_885)) && success?(1-proj-hpke_context(v_885)))) in
            {4193}let base_nonce_5: bitstring = (if v_886 then 3-proj-hpke_context(v_885) else caught-fail) in
            {4194}let key_5: aead_key = (if v_886 then 2-proj-hpke_context(v_885) else caught-fail) in
            {4195}let payload_5: bitstring = (if is-false(v_884) then catch-fail((if v_886 then aead_enc(ech_a_3,key_5,(base_nonce_5,n_4),o_client_hello_ADD_4,i_client_hello_5) else fail-any)) else caught-fail) in
            {4196}let v_887: bool = not-caught-fail(payload_5) in
            {4197}let o_ech_ext_5: echExt = (if v_887 then ECHClientHelloOuter(ech_h_3,ech_a_3,config_id_1,enc_1,payload_5) else caught-fail) in
            {4198}let o_offer_10: params = (if v_887 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),o_ech_ext_5,empty_extra_ext,o_psk_ext_5) else caught-fail) in
            {4199}let (o_client_hello_1: msg,i_client_hello_6: msg,o_cr_4: bytes32,i_cr_3: bytes32,o_kex_data_3: bitstring,i_kex_data_3: bitstring,o_psk_ext_6: preSharedKeyExt,psk_data_25: bitstring,o_ech_ext_6: echExt) = (if v_883 then (if undo-catch-fail(v_884) then (CH(o_cr,o_offer_9),CH(o_cr,o_offer_9),o_cr,o_cr,o_kex_data,o_kex_data,psk_ext_43,psk_data_24,ech_inner_or_grease) else (if v_887 then (CH(o_cr,o_offer_10),i_client_hello_5,o_cr,i_cr,o_kex_data,i_kex_data,o_psk_ext_5,psk_data_24,o_ech_ext_5) else fail-any)) else fail-any) in
            {4200}out(io, o_client_hello_1);
            {4201}let (psk_106: preSharedKey,id_51: identityPsk,es_69: bitstring,safe_1: bool) = psk_data_25 in
            (
                {4202}if (false && (not(@6_use_grease) && (psk_106 ≠ NoPsk))) then
                {4203}let client_hello_8: bitstring = (zero,i_client_hello_6) in
                {4204}let l_257: label = tls13_client_early_traffic_secret in
                {4205}let h_251: bitstring = catch-fail(hash(@6_backend_h,client_hello_8)) in
                {4206}let v_888: bool = not-caught-fail(h_251) in
                {4207}let x_289: bitstring = (if v_888 then (l_257,h_251) else caught-fail) in
                {4208}let atsc0_5: bitstring = catch-fail((if v_888 then hmac(@6_backend_h,es_69,x_289) else fail-any)) in
                {4209}let v_889: bool = not-caught-fail(atsc0_5) in
                {4210}let l_258: label = (if v_889 then tls13_key else caught-fail) in
                {4211}let h_252: bitstring = (if v_889 then zero else caught-fail) in
                {4212}let x_290: bitstring = (if v_889 then (l_258,h_252) else caught-fail) in
                {4213}let kc0_5: bitstring = (if v_889 then catch-fail(hmac(@6_backend_h,atsc0_5,x_290)) else caught-fail) in
                {4214}let v_890: bool = not-caught-fail(kc0_5) in
                {4215}let l_259: label = (if v_890 then tls13_early_exporter_master_secret else caught-fail) in
                {4216}let h_253: bitstring = (if v_890 then catch-fail(hash(@6_backend_h,client_hello_8)) else caught-fail) in
                {4217}let v_891: bool = not-caught-fail(h_253) in
                {4218}let x_291: bitstring = (if v_891 then (l_259,h_253) else caught-fail) in
                {4219}let ems0_10: bitstring = (if v_890 then catch-fail((if v_891 then hmac(@6_backend_h,es_69,x_291) else fail-any)) else caught-fail) in
                {4220}let v_892: bool = not-caught-fail(ems0_10) in
                {4221}let (wkc0_5: aead_key,ems0_11: bitstring) = (if v_889 then (if v_890 then (if v_892 then (kc0_5,ems0_10) else fail-any) else fail-any) else fail-any) in
                {4222}!
                {4223}in(io, (i_5: nat,ad_5: bitstring));
                {4224}if is_nat(i_5) then
                {4225}new msg_ed_4[]: bitstring;
                {4226}let enc_ed_4: bitstring = aead_enc(@6_backend_a,wkc0_5,i_5,ad_5,msg_ed_4) in
                {4227}new st_14: stamp;
                {4228}event ClientSequenceClient0RTTDataWriteKey(@6_id_client,st_14,i_5);
                {4229}event ClientSends0(@6_id_client,i_cr_3,psk_106,i_5,ad_5,msg_ed_4);
                {4230}out(io, enc_ed_4)
            ) | (
                {4231}in(io, server_hello_5: msg);
                {4232}let SH(B32(sr24_3: bytes24,sr8_6: bytes8),mode_25: params) = server_hello_5 in
                (
                    {4233}if (false && (B32(sr24_3,sr8_6) = B32(HRR24,HRR8))) then
                    (
                        {4234}if (send_kex_4 ≠ true) then
                        {4235}let nego(=TLS13,h_alg_12: hash_alg,a_alg_10: aead_alg,hrr_kex_ext(g_23: group),=empty_sni_ext,ech_ext_8: echExt,=empty_extra_ext,=empty_psk_ext) = mode_25 in
                        {4236}let v_893: bool = (ech_ext_8 = empty_ech_ext) in
                        {4237}let hrr_mode_1: params = (if not(v_893) then nego(TLS13,@6_backend_h,@6_backend_a,hrr_kex_ext(@6_backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) else caught-fail) in
                        {4238}let hrr_1: msg = (if not(v_893) then SH(B32(HRR24,HRR8),hrr_mode_1) else caught-fail) in
                        {4239}let cur_log_14: bitstring = (if not(v_893) then ((zero,i_client_hello_6),hrr_1) else caught-fail) in
                        {4240}let transcript_hrr_ech_conf_1: bitstring = (if not(v_893) then catch-fail(hash(@6_backend_h,cur_log_14)) else caught-fail) in
                        {4241}let v_894: bool = not-caught-fail(transcript_hrr_ech_conf_1) in
                        {4242}let s_89: bitstring = (if v_894 then zero else caught-fail) in
                        {4243}let k_82: bitstring = (if v_894 then catch-fail(b32_2_b(get_random(i_client_hello_6))) else caught-fail) in
                        {4244}let v_895: bool = not-caught-fail(k_82) in
                        {4245}let k_83: bitstring = (if v_894 then catch-fail((if v_895 then hmac(@6_backend_h,s_89,k_82) else fail-any)) else caught-fail) in
                        {4246}let v_896: bool = not-caught-fail(k_83) in
                        {4247}let l_260: label = (if v_896 then hrr_ech_accept_confirmation else caught-fail) in
                        {4248}let x_292: bitstring = (if v_896 then (l_260,cur_log_14) else caught-fail) in
                        {4249}let is_ech_accepted_1: bool = (if v_893 then false else (if (ech_ext_8 = ECHHelloRetryRequest((if v_894 then crop_into_bytes8((if v_896 then hmac(@6_backend_h,k_83,x_292) else fail-any)) else fail-any))) then true else false)) in
                        {4250}event ClientEchAcceptance(@6_id_client,is_ech_accepted_1);
                        {4251}if is_ech_accepted_1 then
                        (
                            {4252}let cur_log_IN1_HRR_1: bitstring = ((zero,i_client_hello_6),server_hello_5) in
                            {4253}let ech_config(config_id_4: configId,ech_g_6: group,pkR_6: element,o_dom_4: domain,ech_h_6: hash_alg,ech_a_6: aead_alg) = ech_conf in
                            {4254}let send_key_share_3: bool = true in
                            {4255}new s_90[]: seed;
                            {4256}let gx_21: element = dh_pub(@6_backend_g,dh_k(s_90)) in
                            {4257}let v_897: bitstring = (dh_k(s_90),gx_21) in
                            {4258}let v_898: bool = success?(1-proj-2-tuple(v_897)) in
                            {4259}let gx_22: element = (if v_898 then 2-proj-2-tuple(v_897) else caught-fail) in
                            {4260}let x_293: bitstring = (if v_898 then 1-proj-2-tuple(v_897) else caught-fail) in
                            {4261}let kex_9: kex_alg = (if v_898 then (if send_key_share_3 then DHE_kex(@6_backend_g,gx_22) else DHE_group(@6_backend_g)) else caught-fail) in
                            {4262}let (i_kex_ext_2: keyShareExt,i_kex_data_4: bitstring) = (if v_898 then (client_kex_ext(kex_9),(x_293,@6_backend_g)) else fail-any) in
                            {4263}let send_key_share_4: bool = true in
                            {4264}new s_91[]: seed;
                            {4265}let gx_23: element = dh_pub(@6_tls_g,dh_k(s_91)) in
                            {4266}let v_899: bitstring = (dh_k(s_91),gx_23) in
                            {4267}let v_900: bool = success?(1-proj-2-tuple(v_899)) in
                            {4268}let gx_24: element = (if v_900 then 2-proj-2-tuple(v_899) else caught-fail) in
                            {4269}let x_294: bitstring = (if v_900 then 1-proj-2-tuple(v_899) else caught-fail) in
                            {4270}let kex_10: kex_alg = (if v_900 then (if send_key_share_4 then DHE_kex(@6_tls_g,gx_24) else DHE_group(@6_tls_g)) else caught-fail) in
                            {4271}let (o_kex_ext_3: keyShareExt,o_kex_data_4: bitstring) = (if v_900 then (client_kex_ext(kex_10),(x_294,@6_tls_g)) else fail-any) in
                            {4272}new rand24_10[]: bytes24;
                            {4273}new rand8_10[]: bytes8;
                            {4274}let i_cr_4: bytes32 = B32(rand24_10,rand8_10) in
                            {4275}new rand24_11[]: bytes24;
                            {4276}new rand8_11[]: bytes8;
                            {4277}let o_cr_5: bytes32 = B32(rand24_11,rand8_11) in
                            {4278}let ech_ext_9: echExt = ECHClientHelloInner in
                            {4279}if @6_use_psk then
                            (
                                {4280}let (psk_107: preSharedKey,id_52: identityPsk,old_es_7: bitstring,is_safe_42: bool) = psk_data_25 in
                                (
                                    {4281}let offer_28: params = nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_2,SNI(backend_dom),ech_ext_9,@6_i_extra_ext,trunc_client_psk_ext(id_52)) in
                                    {4282}let cur_log'_16: bitstring = (cur_log_IN1_HRR_1,CH(i_cr_4,offer_28)) in
                                    {4283}let s_92: bitstring = zero in
                                    {4284}let k_84: bitstring = catch-fail(psk2b(psk_107)) in
                                    {4285}let v_901: bool = not-caught-fail(k_84) in
                                    {4286}let early_secret_69: bitstring = catch-fail((if v_901 then hmac(@6_backend_h,s_92,k_84) else fail-any)) in
                                    {4287}let v_902: bool = not-caught-fail(early_secret_69) in
                                    {4288}let l_261: label = (if v_902 then tls13_ext_res_binder else caught-fail) in
                                    {4289}let m_90: bitstring = (if v_902 then zero else caught-fail) in
                                    {4290}let h_254: bitstring = (if v_902 then catch-fail(hash(@6_backend_h,m_90)) else caught-fail) in
                                    {4291}let v_903: bool = not-caught-fail(h_254) in
                                    {4292}let x_295: bitstring = (if v_903 then (l_261,h_254) else caught-fail) in
                                    {4293}let binder_key_46: bitstring = (if v_902 then catch-fail((if v_903 then hmac(@6_backend_h,early_secret_69,x_295) else fail-any)) else caught-fail) in
                                    {4294}let v_904: bool = not-caught-fail(binder_key_46) in
                                    {4295}let v_905: bitstring = catch-fail((if v_902 then (if v_904 then (early_secret_69,binder_key_46) else fail-any) else fail-any)) in
                                    {4296}let v_906: bool = (not-caught-fail(v_905) && success?(1-proj-2-tuple(v_905))) in
                                    {4297}let kb_46: mac_key = (if v_906 then 2-proj-2-tuple(v_905) else caught-fail) in
                                    {4298}let es_70: bitstring = (if v_906 then 1-proj-2-tuple(v_905) else caught-fail) in
                                    {4299}let binders_15: bitstring = (if v_906 then catch-fail(hmac(@6_backend_h,kb_46,cur_log'_16)) else caught-fail) in
                                    {4300}let v_907: bool = not-caught-fail(binders_15) in
                                    {4301}let v_908: bitstring = catch-fail((if v_906 then (if v_907 then (client_psk_ext(id_52,binders_15),(psk_107,id_52,es_70,is_safe_42)) else fail-any) else fail-any)) in
                                    {4302}let v_909: bool = (not-caught-fail(v_908) && success?(1-proj-2-tuple(v_908))) in
                                    {4303}let psk_data_26: bitstring = (if v_909 then 2-proj-2-tuple(v_908) else caught-fail) in
                                    {4304}let psk_ext_44: preSharedKeyExt = (if v_909 then 1-proj-2-tuple(v_908) else caught-fail) in
                                    {4305}let i_offer_5: params = (if v_909 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_2,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_44) else caught-fail) in
                                    {4306}let i_client_hello_7: msg = (if v_909 then CH(i_cr_4,i_offer_5) else caught-fail) in
                                    {4307}new fake_id_6[]: identityPsk;
                                    {4308}new fake_binder_6[]: bitstring;
                                    {4309}let o_psk_ext_7: preSharedKeyExt = (if v_909 then (if @6_use_psk then client_psk_ext(fake_id_6,fake_binder_6) else empty_psk_ext) else caught-fail) in
                                    {4310}let o_ech_ext_ADD_5: echExt = (if v_909 then ECHClientHelloOuter(ech_h_6,ech_a_6,config_id_4,zero,zero) else caught-fail) in
                                    {4311}let o_offer_ADD_5: params = (if v_909 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_3,SNI(o_dom_4),o_ech_ext_ADD_5,empty_extra_ext,o_psk_ext_7) else caught-fail) in
                                    {4312}let o_client_hello_ADD_5: msg = (if v_909 then CH(o_cr_5,o_offer_ADD_5) else caught-fail) in
                                    {4313}let n_5: nat = (if v_909 then 2 else caught-fail) in
                                    {4314}let v_910: hpkeContext = (if v_909 then catch-fail(context) else caught-fail) in
                                    {4315}let v_911: bool = (not-caught-fail(v_910) && ((S =nf 1-proj-hpke_context(v_910)) && success?(1-proj-hpke_context(v_910)))) in
                                    {4316}let base_nonce_6: bitstring = (if v_911 then 3-proj-hpke_context(v_910) else caught-fail) in
                                    {4317}let key_6: aead_key = (if v_911 then 2-proj-hpke_context(v_910) else caught-fail) in
                                    {4318}let payload_6: bitstring = (if v_909 then catch-fail((if v_911 then aead_enc(ech_a_6,key_6,(base_nonce_6,n_5),o_client_hello_ADD_5,i_client_hello_7) else fail-any)) else caught-fail) in
                                    {4319}let v_912: bool = not-caught-fail(payload_6) in
                                    {4320}let o_ech_ext_7: echExt = (if v_912 then ECHClientHelloOuter(ech_h_6,ech_a_6,config_id_4,zero,payload_6) else caught-fail) in
                                    {4321}let o_offer_11: params = (if v_912 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_3,SNI(o_dom_4),o_ech_ext_7,empty_extra_ext,o_psk_ext_7) else caught-fail) in
                                    {4322}let (o_client_hello'_3: msg,i_client_hello'_3: msg,i_cr'_3: bytes32,i_kex_data'_3: bitstring,psk_data'_17: bitstring) = (if v_909 then (if v_912 then (CH(o_cr_5,o_offer_11),i_client_hello_7,i_cr_4,i_kex_data_4,psk_data_26) else fail-any) else fail-any) in
                                    {4323}out(io, o_client_hello'_3);
                                    {4324}in(io, server_hello'_16: msg);
                                    {4325}let SH(B32(sr24'_3: bytes24,sr8'_3: bytes8),params'_3: params) = server_hello'_16 in
                                    {4326}let cur_log_IN1_HRR_IN2_3: bitstring = (cur_log_IN1_HRR_1,i_client_hello'_3) in
                                    {4327}let sh_modified_5: msg = SH(B32(sr24'_3,zero8),params'_3) in
                                    {4328}let cur_log_sh_5: bitstring = (cur_log_IN1_HRR_IN2_3,sh_modified_5) in
                                    {4329}let transcript_ech_conf_5: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_5)) in
                                    {4330}let v_913: bool = not-caught-fail(transcript_ech_conf_5) in
                                    {4331}let s_93: bitstring = (if v_913 then zero else caught-fail) in
                                    {4332}let k_85: bitstring = (if v_913 then catch-fail(b32_2_b(get_random(i_client_hello'_3))) else caught-fail) in
                                    {4333}let v_914: bool = not-caught-fail(k_85) in
                                    {4334}let k_86: bitstring = (if v_913 then catch-fail((if v_914 then hmac(@6_backend_h,s_93,k_85) else fail-any)) else caught-fail) in
                                    {4335}let v_915: bool = not-caught-fail(k_86) in
                                    {4336}let l_262: label = (if v_915 then ech_accept_confirmation else caught-fail) in
                                    {4337}let x_296: bitstring = (if v_915 then (l_262,cur_log_sh_5) else caught-fail) in
                                    {4338}let sr8_7: bytes8 = (if v_913 then catch-fail(crop_into_bytes8((if v_915 then hmac(@6_backend_h,k_86,x_296) else fail-any))) else caught-fail) in
                                    {4339}let v_916: bool = not-caught-fail(sr8_7) in
                                    {4340}if (B32(sr24'_3,sr8'_3) = (if v_913 then (if v_916 then B32(sr24'_3,sr8_7) else fail-any) else fail-any)) then
                                    {4341}let (x_297: bitstring,g_24: group) = i_kex_data'_3 in
                                    {4342}let (psk_offer_21: preSharedKey,id_offer_21: identityPsk,es_offer_21: bitstring,is_safe_offer_21: bool) = psk_data'_17 in
                                    {4343}event Client_PSKOffer(@6_id_client,psk_offer_21,id_offer_21,is_safe_offer_21);
                                    {4344}event Client_Rand_client(@6_id_client,i_cr'_3);
                                    {4345}event Client_DH_client(@6_id_client,dh_pub(g_24,x_297));
                                    {4346}event Client_server_domain(@6_id_client,backend_dom);
                                    {4347}let SH(sr_32: bytes32,mode_26: params) = server_hello'_16 in
                                    {4348}event Client_Rand_server(@6_id_client,sr_32);
                                    {4349}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_24,gy_22: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_45: preSharedKeyExt) = mode_26 in
                                    (
                                        {4350}let cur_log2_49: bitstring = (cur_log_IN1_HRR_IN2_3,server_hello'_16) in
                                        {4351}event Client_DH_server(@6_id_client,gy_22);
                                        {4352}let v_917: bool = (psk_ext_45 = empty_psk_ext) in
                                        {4353}let psk_108: preSharedKey = (if v_917 then NoPsk else caught-fail) in
                                        {4354}let s_94: bitstring = (if v_917 then zero else caught-fail) in
                                        {4355}let k_87: bitstring = (if v_917 then catch-fail(psk2b(psk_108)) else caught-fail) in
                                        {4356}let v_918: bool = not-caught-fail(k_87) in
                                        {4357}let early_secret_70: bitstring = (if v_917 then catch-fail((if v_918 then hmac(@6_backend_h,s_94,k_87) else fail-any)) else caught-fail) in
                                        {4358}let v_919: bool = not-caught-fail(early_secret_70) in
                                        {4359}let l_263: label = (if v_919 then tls13_ext_res_binder else caught-fail) in
                                        {4360}let m_91: bitstring = (if v_919 then zero else caught-fail) in
                                        {4361}let h_255: bitstring = (if v_919 then catch-fail(hash(@6_backend_h,m_91)) else caught-fail) in
                                        {4362}let v_920: bool = not-caught-fail(h_255) in
                                        {4363}let x_298: bitstring = (if v_920 then (l_263,h_255) else caught-fail) in
                                        {4364}let binder_key_47: bitstring = (if v_919 then catch-fail((if v_920 then hmac(@6_backend_h,early_secret_70,x_298) else fail-any)) else caught-fail) in
                                        {4365}let v_921: bool = not-caught-fail(binder_key_47) in
                                        {4366}let v_922: bitstring = (if v_917 then catch-fail((if v_919 then (if v_921 then (early_secret_70,binder_key_47) else fail-any) else fail-any)) else caught-fail) in
                                        {4367}let v_923: bool = (not-caught-fail(v_922) && success?(1-proj-2-tuple(v_922))) in
                                        {4368}let kb_47: mac_key = (if v_923 then 2-proj-2-tuple(v_922) else caught-fail) in
                                        {4369}let es_71: bitstring = (if v_923 then 1-proj-2-tuple(v_922) else caught-fail) in
                                        {4370}let v_924: bitstring = (if not(v_917) then catch-fail(psk_data'_17) else caught-fail) in
                                        {4371}let v_925: bool = (not-caught-fail(v_924) && success?(1-proj-4-tuple(v_924))) in
                                        {4372}let is_safe_43: bool = (if v_925 then 4-proj-4-tuple(v_924) else caught-fail) in
                                        {4373}let es_72: bitstring = (if v_925 then 3-proj-4-tuple(v_924) else caught-fail) in
                                        {4374}let id_53: identityPsk = (if v_925 then 2-proj-4-tuple(v_924) else caught-fail) in
                                        {4375}let psk_109: preSharedKey = (if v_925 then 1-proj-4-tuple(v_924) else caught-fail) in
                                        {4376}let (psk_110: preSharedKey,early_secret_71: bitstring,valid_21: bool,safe_psk_27: bool) = (if v_917 then (if v_923 then (NoPsk,es_71,true,false) else fail-any) else (if v_925 then (psk_109,es_72,((psk_109 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_45)),is_safe_43) else fail-any)) in
                                        {4377}event Client_PSKChoosen(@6_id_client,psk_110,safe_psk_27);
                                        {4378}if valid_21 then
                                        (
                                            {4379}let gxy_43: element = catch-fail(dh_decap_fun(g_24,gy_22,x_297)) in
                                            {4380}let v_926: bool = not-caught-fail(gxy_43) in
                                            {4381}new s_95[]: seed;
                                            {4382}let gxy_44: element = (if v_926 then gxy_43 else dh_f(s_95)) in
                                            {4383}event Client_DH_gxy(@6_id_client,gxy_44);
                                            {4384}let l_264: label = tls13_derived in
                                            {4385}let m_92: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {4386}let v_927: bool = not-caught-fail(m_92) in
                                            {4387}let h_256: bitstring = (if v_927 then catch-fail(hash(@6_backend_h,m_92)) else caught-fail) in
                                            {4388}let v_928: bool = not-caught-fail(h_256) in
                                            {4389}let x_299: bitstring = (if v_928 then (l_264,h_256) else caught-fail) in
                                            {4390}let extra_49: bitstring = catch-fail((if v_927 then (if v_928 then hmac(@6_backend_h,early_secret_71,x_299) else fail-any) else fail-any)) in
                                            {4391}let v_929: bool = not-caught-fail(extra_49) in
                                            {4392}let handshake_secret_22: bitstring = (if v_929 then hmac(@6_backend_h,extra_49,gxy_44) else fail-any) in
                                            {4393}let l_265: label = tls13_derived in
                                            {4394}let m_93: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {4395}let v_930: bool = not-caught-fail(m_93) in
                                            {4396}let h_257: bitstring = (if v_930 then catch-fail(hash(@6_backend_h,m_93)) else caught-fail) in
                                            {4397}let v_931: bool = not-caught-fail(h_257) in
                                            {4398}let x_300: bitstring = (if v_931 then (l_265,h_257) else caught-fail) in
                                            {4399}let extra_50: bitstring = catch-fail((if v_930 then (if v_931 then hmac(@6_backend_h,handshake_secret_22,x_300) else fail-any) else fail-any)) in
                                            {4400}let v_932: bool = not-caught-fail(extra_50) in
                                            {4401}let k_88: bitstring = (if v_932 then zero else caught-fail) in
                                            {4402}let master_secret_51: bitstring = (if v_932 then catch-fail(hmac(@6_backend_h,handshake_secret_22,k_88)) else caught-fail) in
                                            {4403}let v_933: bool = not-caught-fail(master_secret_51) in
                                            {4404}let l_266: label = (if v_933 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {4405}let h_258: bitstring = (if v_933 then catch-fail(hash(@6_backend_h,cur_log2_49)) else caught-fail) in
                                            {4406}let v_934: bool = not-caught-fail(h_258) in
                                            {4407}let x_301: bitstring = (if v_934 then (l_266,h_258) else caught-fail) in
                                            {4408}let client_hts_22: bitstring = (if v_933 then catch-fail((if v_934 then hmac(@6_backend_h,handshake_secret_22,x_301) else fail-any)) else caught-fail) in
                                            {4409}let v_935: bool = not-caught-fail(client_hts_22) in
                                            {4410}let l_267: label = (if v_935 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {4411}let h_259: bitstring = (if v_935 then catch-fail(hash(@6_backend_h,cur_log2_49)) else caught-fail) in
                                            {4412}let v_936: bool = not-caught-fail(h_259) in
                                            {4413}let x_302: bitstring = (if v_936 then (l_267,h_259) else caught-fail) in
                                            {4414}let server_hts_22: bitstring = (if v_935 then catch-fail((if v_936 then hmac(@6_backend_h,handshake_secret_22,x_302) else fail-any)) else caught-fail) in
                                            {4415}let v_937: bool = not-caught-fail(server_hts_22) in
                                            {4416}let l_268: label = (if v_937 then tls13_key else caught-fail) in
                                            {4417}let h_260: bitstring = (if v_937 then zero else caught-fail) in
                                            {4418}let x_303: bitstring = (if v_937 then (l_268,h_260) else caught-fail) in
                                            {4419}let client_wkh_22: bitstring = (if v_937 then catch-fail(hmac(@6_backend_h,client_hts_22,x_303)) else caught-fail) in
                                            {4420}let v_938: bool = not-caught-fail(client_wkh_22) in
                                            {4421}let l_269: label = (if v_938 then tls13_key else caught-fail) in
                                            {4422}let h_261: bitstring = (if v_938 then zero else caught-fail) in
                                            {4423}let x_304: bitstring = (if v_938 then (l_269,h_261) else caught-fail) in
                                            {4424}let server_wkh_22: bitstring = (if v_938 then catch-fail(hmac(@6_backend_h,server_hts_22,x_304)) else caught-fail) in
                                            {4425}let v_939: bool = not-caught-fail(server_wkh_22) in
                                            {4426}let l_270: label = (if v_939 then tls13_finished else caught-fail) in
                                            {4427}let h_262: bitstring = (if v_939 then zero else caught-fail) in
                                            {4428}let x_305: bitstring = (if v_939 then (l_270,h_262) else caught-fail) in
                                            {4429}let client_fk_22: bitstring = (if v_939 then catch-fail(hmac(@6_backend_h,client_hts_22,x_305)) else caught-fail) in
                                            {4430}let v_940: bool = not-caught-fail(client_fk_22) in
                                            {4431}let l_271: label = (if v_940 then tls13_finished else caught-fail) in
                                            {4432}let h_263: bitstring = (if v_940 then zero else caught-fail) in
                                            {4433}let x_306: bitstring = (if v_940 then (l_271,h_263) else caught-fail) in
                                            {4434}let server_fk_22: bitstring = (if v_940 then catch-fail(hmac(@6_backend_h,server_hts_22,x_306)) else caught-fail) in
                                            {4435}let v_941: bool = not-caught-fail(server_fk_22) in
                                            {4436}let (master_secret_52: bitstring,chk_29: aead_key,shk_28: aead_key,cfin_29: mac_key,sfin_28: mac_key) = (if v_932 then (if v_933 then (if v_935 then (if v_937 then (if v_938 then (if v_939 then (if v_940 then (if v_941 then (master_secret_51,client_wkh_22,server_wkh_22,client_fk_22,server_fk_22) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {4437}event Client_chk(@6_id_client,chk_29);
                                            {4438}event Client_shk(@6_id_client,shk_28);
                                            {4439}event Client_cfin(@6_id_client,cfin_29);
                                            {4440}event Client_sfin(@6_id_client,sfin_28);
                                            {4441}in(io, enc_ee_msg_21: bitstring);
                                            {4442}let ee_msg_22: msg = aead_dec(@6_backend_a,shk_28,0,zero,enc_ee_msg_21) in
                                            {4443}let EE(ech_ee_21: echExt,extra_ee_21: extraExt) = ee_msg_22 in
                                            {4444}let cur_log2_50: bitstring = (cur_log2_49,ee_msg_22) in
                                            {4445}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_3,sr_32,@6_backend_h,@6_backend_a,c_dom_6,backend_dom,psk_110,safe_psk_27,@6_comp_psk,master_secret_52,chk_29,0,shk_28,1,cfin_29,sfin_28,cur_log2_50)))
                                        )
                                        else
                                            {4446}out(io, illegal_parameter)
                                    )
                                    else
                                        {4447}out(io, illegal_parameter)
                                )
                                else
                                    {4624}get pre_shared_keys(c_dom'_9: domain,=backend_dom,=@6_backend_h,id_54: identityPsk,psk_111: preSharedKey,idP_11: idProc,is_safe_44: bool) in
                                    {4448}event Selected_one_time_used_psk(@6_id_client,psk_111,is_safe_44);
                                    {4449}event Selected_psk(c_dom_6,c_dom'_9,idP_11,is_safe_44);
                                    {4450}event Selected_psk_no_missmatch(@6_id_client,backend_dom,@6_backend_h,psk_111,id_54);
                                    {4451}event Selected_psk_with_ID(c_dom_6,c_dom'_9,id_54,idP_11,is_safe_44);
                                    {4452}let v_942: bitstring = (id_54,psk_111,is_safe_44) in
                                    {4453}let v_943: bool = success?(1-proj-3-tuple(v_942)) in
                                    {4454}let is_safe_45: bool = (if v_943 then 3-proj-3-tuple(v_942) else caught-fail) in
                                    {4455}let psk_112: preSharedKey = (if v_943 then 2-proj-3-tuple(v_942) else caught-fail) in
                                    {4456}let id_55: identityPsk = (if v_943 then 1-proj-3-tuple(v_942) else caught-fail) in
                                    {4457}let offer_29: params = (if v_943 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_2,SNI(backend_dom),ech_ext_9,@6_i_extra_ext,trunc_client_psk_ext(id_55)) else caught-fail) in
                                    {4458}let cur_log'_17: bitstring = (if v_943 then (cur_log_IN1_HRR_1,CH(i_cr_4,offer_29)) else caught-fail) in
                                    {4459}let s_96: bitstring = (if v_943 then zero else caught-fail) in
                                    {4460}let k_89: bitstring = (if v_943 then catch-fail(psk2b(psk_112)) else caught-fail) in
                                    {4461}let v_944: bool = not-caught-fail(k_89) in
                                    {4462}let early_secret_72: bitstring = (if v_943 then catch-fail((if v_944 then hmac(@6_backend_h,s_96,k_89) else fail-any)) else caught-fail) in
                                    {4463}let v_945: bool = not-caught-fail(early_secret_72) in
                                    {4464}let l_272: label = (if v_945 then tls13_ext_res_binder else caught-fail) in
                                    {4465}let m_94: bitstring = (if v_945 then zero else caught-fail) in
                                    {4466}let h_264: bitstring = (if v_945 then catch-fail(hash(@6_backend_h,m_94)) else caught-fail) in
                                    {4467}let v_946: bool = not-caught-fail(h_264) in
                                    {4468}let x_307: bitstring = (if v_946 then (l_272,h_264) else caught-fail) in
                                    {4469}let binder_key_48: bitstring = (if v_945 then catch-fail((if v_946 then hmac(@6_backend_h,early_secret_72,x_307) else fail-any)) else caught-fail) in
                                    {4470}let v_947: bool = not-caught-fail(binder_key_48) in
                                    {4471}let v_948: bitstring = (if v_943 then catch-fail((if v_945 then (if v_947 then (early_secret_72,binder_key_48) else fail-any) else fail-any)) else caught-fail) in
                                    {4472}let v_949: bool = (not-caught-fail(v_948) && success?(1-proj-2-tuple(v_948))) in
                                    {4473}let kb_48: mac_key = (if v_949 then 2-proj-2-tuple(v_948) else caught-fail) in
                                    {4474}let es_73: bitstring = (if v_949 then 1-proj-2-tuple(v_948) else caught-fail) in
                                    {4475}let binders_16: bitstring = (if v_949 then catch-fail(hmac(@6_backend_h,kb_48,cur_log'_17)) else caught-fail) in
                                    {4476}let v_950: bool = not-caught-fail(binders_16) in
                                    {4477}let v_951: bitstring = catch-fail((if v_943 then (if v_949 then (if v_950 then (client_psk_ext(id_55,binders_16),(psk_112,id_55,es_73,is_safe_45)) else fail-any) else fail-any) else fail-any)) in
                                    {4478}let v_952: bool = (not-caught-fail(v_951) && success?(1-proj-2-tuple(v_951))) in
                                    {4479}let psk_data_27: bitstring = (if v_952 then 2-proj-2-tuple(v_951) else caught-fail) in
                                    {4480}let psk_ext_46: preSharedKeyExt = (if v_952 then 1-proj-2-tuple(v_951) else caught-fail) in
                                    {4481}let i_offer_6: params = (if v_952 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_2,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_46) else caught-fail) in
                                    {4482}let i_client_hello_8: msg = (if v_952 then CH(i_cr_4,i_offer_6) else caught-fail) in
                                    {4483}new fake_id_7[]: identityPsk;
                                    {4484}new fake_binder_7[]: bitstring;
                                    {4485}let o_psk_ext_8: preSharedKeyExt = (if v_952 then (if @6_use_psk then client_psk_ext(fake_id_7,fake_binder_7) else empty_psk_ext) else caught-fail) in
                                    {4486}let o_ech_ext_ADD_6: echExt = (if v_952 then ECHClientHelloOuter(ech_h_6,ech_a_6,config_id_4,zero,zero) else caught-fail) in
                                    {4487}let o_offer_ADD_6: params = (if v_952 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_3,SNI(o_dom_4),o_ech_ext_ADD_6,empty_extra_ext,o_psk_ext_8) else caught-fail) in
                                    {4488}let o_client_hello_ADD_6: msg = (if v_952 then CH(o_cr_5,o_offer_ADD_6) else caught-fail) in
                                    {4489}let n_6: nat = (if v_952 then 2 else caught-fail) in
                                    {4490}let v_953: hpkeContext = (if v_952 then catch-fail(context) else caught-fail) in
                                    {4491}let v_954: bool = (not-caught-fail(v_953) && ((S =nf 1-proj-hpke_context(v_953)) && success?(1-proj-hpke_context(v_953)))) in
                                    {4492}let base_nonce_7: bitstring = (if v_954 then 3-proj-hpke_context(v_953) else caught-fail) in
                                    {4493}let key_7: aead_key = (if v_954 then 2-proj-hpke_context(v_953) else caught-fail) in
                                    {4494}let payload_7: bitstring = (if v_952 then catch-fail((if v_954 then aead_enc(ech_a_6,key_7,(base_nonce_7,n_6),o_client_hello_ADD_6,i_client_hello_8) else fail-any)) else caught-fail) in
                                    {4495}let v_955: bool = not-caught-fail(payload_7) in
                                    {4496}let o_ech_ext_8: echExt = (if v_955 then ECHClientHelloOuter(ech_h_6,ech_a_6,config_id_4,zero,payload_7) else caught-fail) in
                                    {4497}let o_offer_12: params = (if v_955 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_3,SNI(o_dom_4),o_ech_ext_8,empty_extra_ext,o_psk_ext_8) else caught-fail) in
                                    {4498}let (o_client_hello'_4: msg,i_client_hello'_4: msg,i_cr'_4: bytes32,i_kex_data'_4: bitstring,psk_data'_18: bitstring) = (if v_952 then (if v_955 then (CH(o_cr_5,o_offer_12),i_client_hello_8,i_cr_4,i_kex_data_4,psk_data_27) else fail-any) else fail-any) in
                                    {4499}out(io, o_client_hello'_4);
                                    {4500}in(io, server_hello'_17: msg);
                                    {4501}let SH(B32(sr24'_4: bytes24,sr8'_4: bytes8),params'_4: params) = server_hello'_17 in
                                    {4502}let cur_log_IN1_HRR_IN2_4: bitstring = (cur_log_IN1_HRR_1,i_client_hello'_4) in
                                    {4503}let sh_modified_6: msg = SH(B32(sr24'_4,zero8),params'_4) in
                                    {4504}let cur_log_sh_6: bitstring = (cur_log_IN1_HRR_IN2_4,sh_modified_6) in
                                    {4505}let transcript_ech_conf_6: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_6)) in
                                    {4506}let v_956: bool = not-caught-fail(transcript_ech_conf_6) in
                                    {4507}let s_97: bitstring = (if v_956 then zero else caught-fail) in
                                    {4508}let k_90: bitstring = (if v_956 then catch-fail(b32_2_b(get_random(i_client_hello'_4))) else caught-fail) in
                                    {4509}let v_957: bool = not-caught-fail(k_90) in
                                    {4510}let k_91: bitstring = (if v_956 then catch-fail((if v_957 then hmac(@6_backend_h,s_97,k_90) else fail-any)) else caught-fail) in
                                    {4511}let v_958: bool = not-caught-fail(k_91) in
                                    {4512}let l_273: label = (if v_958 then ech_accept_confirmation else caught-fail) in
                                    {4513}let x_308: bitstring = (if v_958 then (l_273,cur_log_sh_6) else caught-fail) in
                                    {4514}let sr8_8: bytes8 = (if v_956 then catch-fail(crop_into_bytes8((if v_958 then hmac(@6_backend_h,k_91,x_308) else fail-any))) else caught-fail) in
                                    {4515}let v_959: bool = not-caught-fail(sr8_8) in
                                    {4516}if (B32(sr24'_4,sr8'_4) = (if v_956 then (if v_959 then B32(sr24'_4,sr8_8) else fail-any) else fail-any)) then
                                    {4517}let (x_309: bitstring,g_25: group) = i_kex_data'_4 in
                                    {4518}let (psk_offer_22: preSharedKey,id_offer_22: identityPsk,es_offer_22: bitstring,is_safe_offer_22: bool) = psk_data'_18 in
                                    {4519}event Client_PSKOffer(@6_id_client,psk_offer_22,id_offer_22,is_safe_offer_22);
                                    {4520}event Client_Rand_client(@6_id_client,i_cr'_4);
                                    {4521}event Client_DH_client(@6_id_client,dh_pub(g_25,x_309));
                                    {4522}event Client_server_domain(@6_id_client,backend_dom);
                                    {4523}let SH(sr_33: bytes32,mode_27: params) = server_hello'_17 in
                                    {4524}event Client_Rand_server(@6_id_client,sr_33);
                                    {4525}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_25,gy_23: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_47: preSharedKeyExt) = mode_27 in
                                    (
                                        {4526}let cur_log2_51: bitstring = (cur_log_IN1_HRR_IN2_4,server_hello'_17) in
                                        {4527}event Client_DH_server(@6_id_client,gy_23);
                                        {4528}let v_960: bool = (psk_ext_47 = empty_psk_ext) in
                                        {4529}let psk_113: preSharedKey = (if v_960 then NoPsk else caught-fail) in
                                        {4530}let s_98: bitstring = (if v_960 then zero else caught-fail) in
                                        {4531}let k_92: bitstring = (if v_960 then catch-fail(psk2b(psk_113)) else caught-fail) in
                                        {4532}let v_961: bool = not-caught-fail(k_92) in
                                        {4533}let early_secret_73: bitstring = (if v_960 then catch-fail((if v_961 then hmac(@6_backend_h,s_98,k_92) else fail-any)) else caught-fail) in
                                        {4534}let v_962: bool = not-caught-fail(early_secret_73) in
                                        {4535}let l_274: label = (if v_962 then tls13_ext_res_binder else caught-fail) in
                                        {4536}let m_95: bitstring = (if v_962 then zero else caught-fail) in
                                        {4537}let h_265: bitstring = (if v_962 then catch-fail(hash(@6_backend_h,m_95)) else caught-fail) in
                                        {4538}let v_963: bool = not-caught-fail(h_265) in
                                        {4539}let x_310: bitstring = (if v_963 then (l_274,h_265) else caught-fail) in
                                        {4540}let binder_key_49: bitstring = (if v_962 then catch-fail((if v_963 then hmac(@6_backend_h,early_secret_73,x_310) else fail-any)) else caught-fail) in
                                        {4541}let v_964: bool = not-caught-fail(binder_key_49) in
                                        {4542}let v_965: bitstring = (if v_960 then catch-fail((if v_962 then (if v_964 then (early_secret_73,binder_key_49) else fail-any) else fail-any)) else caught-fail) in
                                        {4543}let v_966: bool = (not-caught-fail(v_965) && success?(1-proj-2-tuple(v_965))) in
                                        {4544}let kb_49: mac_key = (if v_966 then 2-proj-2-tuple(v_965) else caught-fail) in
                                        {4545}let es_74: bitstring = (if v_966 then 1-proj-2-tuple(v_965) else caught-fail) in
                                        {4546}let v_967: bitstring = (if not(v_960) then catch-fail(psk_data'_18) else caught-fail) in
                                        {4547}let v_968: bool = (not-caught-fail(v_967) && success?(1-proj-4-tuple(v_967))) in
                                        {4548}let is_safe_46: bool = (if v_968 then 4-proj-4-tuple(v_967) else caught-fail) in
                                        {4549}let es_75: bitstring = (if v_968 then 3-proj-4-tuple(v_967) else caught-fail) in
                                        {4550}let id_56: identityPsk = (if v_968 then 2-proj-4-tuple(v_967) else caught-fail) in
                                        {4551}let psk_114: preSharedKey = (if v_968 then 1-proj-4-tuple(v_967) else caught-fail) in
                                        {4552}let (psk_115: preSharedKey,early_secret_74: bitstring,valid_22: bool,safe_psk_28: bool) = (if v_960 then (if v_966 then (NoPsk,es_74,true,false) else fail-any) else (if v_968 then (psk_114,es_75,((psk_114 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_47)),is_safe_46) else fail-any)) in
                                        {4553}event Client_PSKChoosen(@6_id_client,psk_115,safe_psk_28);
                                        {4554}if valid_22 then
                                        (
                                            {4555}let gxy_45: element = catch-fail(dh_decap_fun(g_25,gy_23,x_309)) in
                                            {4556}let v_969: bool = not-caught-fail(gxy_45) in
                                            {4557}new s_99[]: seed;
                                            {4558}let gxy_46: element = (if v_969 then gxy_45 else dh_f(s_99)) in
                                            {4559}event Client_DH_gxy(@6_id_client,gxy_46);
                                            {4560}let l_275: label = tls13_derived in
                                            {4561}let m_96: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {4562}let v_970: bool = not-caught-fail(m_96) in
                                            {4563}let h_266: bitstring = (if v_970 then catch-fail(hash(@6_backend_h,m_96)) else caught-fail) in
                                            {4564}let v_971: bool = not-caught-fail(h_266) in
                                            {4565}let x_311: bitstring = (if v_971 then (l_275,h_266) else caught-fail) in
                                            {4566}let extra_51: bitstring = catch-fail((if v_970 then (if v_971 then hmac(@6_backend_h,early_secret_74,x_311) else fail-any) else fail-any)) in
                                            {4567}let v_972: bool = not-caught-fail(extra_51) in
                                            {4568}let handshake_secret_23: bitstring = (if v_972 then hmac(@6_backend_h,extra_51,gxy_46) else fail-any) in
                                            {4569}let l_276: label = tls13_derived in
                                            {4570}let m_97: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {4571}let v_973: bool = not-caught-fail(m_97) in
                                            {4572}let h_267: bitstring = (if v_973 then catch-fail(hash(@6_backend_h,m_97)) else caught-fail) in
                                            {4573}let v_974: bool = not-caught-fail(h_267) in
                                            {4574}let x_312: bitstring = (if v_974 then (l_276,h_267) else caught-fail) in
                                            {4575}let extra_52: bitstring = catch-fail((if v_973 then (if v_974 then hmac(@6_backend_h,handshake_secret_23,x_312) else fail-any) else fail-any)) in
                                            {4576}let v_975: bool = not-caught-fail(extra_52) in
                                            {4577}let k_93: bitstring = (if v_975 then zero else caught-fail) in
                                            {4578}let master_secret_53: bitstring = (if v_975 then catch-fail(hmac(@6_backend_h,handshake_secret_23,k_93)) else caught-fail) in
                                            {4579}let v_976: bool = not-caught-fail(master_secret_53) in
                                            {4580}let l_277: label = (if v_976 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {4581}let h_268: bitstring = (if v_976 then catch-fail(hash(@6_backend_h,cur_log2_51)) else caught-fail) in
                                            {4582}let v_977: bool = not-caught-fail(h_268) in
                                            {4583}let x_313: bitstring = (if v_977 then (l_277,h_268) else caught-fail) in
                                            {4584}let client_hts_23: bitstring = (if v_976 then catch-fail((if v_977 then hmac(@6_backend_h,handshake_secret_23,x_313) else fail-any)) else caught-fail) in
                                            {4585}let v_978: bool = not-caught-fail(client_hts_23) in
                                            {4586}let l_278: label = (if v_978 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {4587}let h_269: bitstring = (if v_978 then catch-fail(hash(@6_backend_h,cur_log2_51)) else caught-fail) in
                                            {4588}let v_979: bool = not-caught-fail(h_269) in
                                            {4589}let x_314: bitstring = (if v_979 then (l_278,h_269) else caught-fail) in
                                            {4590}let server_hts_23: bitstring = (if v_978 then catch-fail((if v_979 then hmac(@6_backend_h,handshake_secret_23,x_314) else fail-any)) else caught-fail) in
                                            {4591}let v_980: bool = not-caught-fail(server_hts_23) in
                                            {4592}let l_279: label = (if v_980 then tls13_key else caught-fail) in
                                            {4593}let h_270: bitstring = (if v_980 then zero else caught-fail) in
                                            {4594}let x_315: bitstring = (if v_980 then (l_279,h_270) else caught-fail) in
                                            {4595}let client_wkh_23: bitstring = (if v_980 then catch-fail(hmac(@6_backend_h,client_hts_23,x_315)) else caught-fail) in
                                            {4596}let v_981: bool = not-caught-fail(client_wkh_23) in
                                            {4597}let l_280: label = (if v_981 then tls13_key else caught-fail) in
                                            {4598}let h_271: bitstring = (if v_981 then zero else caught-fail) in
                                            {4599}let x_316: bitstring = (if v_981 then (l_280,h_271) else caught-fail) in
                                            {4600}let server_wkh_23: bitstring = (if v_981 then catch-fail(hmac(@6_backend_h,server_hts_23,x_316)) else caught-fail) in
                                            {4601}let v_982: bool = not-caught-fail(server_wkh_23) in
                                            {4602}let l_281: label = (if v_982 then tls13_finished else caught-fail) in
                                            {4603}let h_272: bitstring = (if v_982 then zero else caught-fail) in
                                            {4604}let x_317: bitstring = (if v_982 then (l_281,h_272) else caught-fail) in
                                            {4605}let client_fk_23: bitstring = (if v_982 then catch-fail(hmac(@6_backend_h,client_hts_23,x_317)) else caught-fail) in
                                            {4606}let v_983: bool = not-caught-fail(client_fk_23) in
                                            {4607}let l_282: label = (if v_983 then tls13_finished else caught-fail) in
                                            {4608}let h_273: bitstring = (if v_983 then zero else caught-fail) in
                                            {4609}let x_318: bitstring = (if v_983 then (l_282,h_273) else caught-fail) in
                                            {4610}let server_fk_23: bitstring = (if v_983 then catch-fail(hmac(@6_backend_h,server_hts_23,x_318)) else caught-fail) in
                                            {4611}let v_984: bool = not-caught-fail(server_fk_23) in
                                            {4612}let (master_secret_54: bitstring,chk_30: aead_key,shk_29: aead_key,cfin_30: mac_key,sfin_29: mac_key) = (if v_975 then (if v_976 then (if v_978 then (if v_980 then (if v_981 then (if v_982 then (if v_983 then (if v_984 then (master_secret_53,client_wkh_23,server_wkh_23,client_fk_23,server_fk_23) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {4613}event Client_chk(@6_id_client,chk_30);
                                            {4614}event Client_shk(@6_id_client,shk_29);
                                            {4615}event Client_cfin(@6_id_client,cfin_30);
                                            {4616}event Client_sfin(@6_id_client,sfin_29);
                                            {4617}in(io, enc_ee_msg_22: bitstring);
                                            {4618}let ee_msg_23: msg = aead_dec(@6_backend_a,shk_29,0,zero,enc_ee_msg_22) in
                                            {4619}let EE(ech_ee_22: echExt,extra_ee_22: extraExt) = ee_msg_23 in
                                            {4620}let cur_log2_52: bitstring = (cur_log2_51,ee_msg_23) in
                                            {4621}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_4,sr_33,@6_backend_h,@6_backend_a,c_dom_6,backend_dom,psk_115,safe_psk_28,@6_comp_psk,master_secret_54,chk_30,0,shk_29,1,cfin_30,sfin_29,cur_log2_52)))
                                        )
                                        else
                                            {4622}out(io, illegal_parameter)
                                    )
                                    else
                                        {4623}out(io, illegal_parameter)
                            )
                            else
                                {4625}let psk_116: preSharedKey = NoPsk in
                                {4626}let s_100: bitstring = zero in
                                {4627}let k_94: bitstring = catch-fail(psk2b(psk_116)) in
                                {4628}let v_985: bool = not-caught-fail(k_94) in
                                {4629}let early_secret_75: bitstring = catch-fail((if v_985 then hmac(@6_backend_h,s_100,k_94) else fail-any)) in
                                {4630}let v_986: bool = not-caught-fail(early_secret_75) in
                                {4631}let l_283: label = (if v_986 then tls13_ext_res_binder else caught-fail) in
                                {4632}let m_98: bitstring = (if v_986 then zero else caught-fail) in
                                {4633}let h_274: bitstring = (if v_986 then catch-fail(hash(@6_backend_h,m_98)) else caught-fail) in
                                {4634}let v_987: bool = not-caught-fail(h_274) in
                                {4635}let x_319: bitstring = (if v_987 then (l_283,h_274) else caught-fail) in
                                {4636}let binder_key_50: bitstring = (if v_986 then catch-fail((if v_987 then hmac(@6_backend_h,early_secret_75,x_319) else fail-any)) else caught-fail) in
                                {4637}let v_988: bool = not-caught-fail(binder_key_50) in
                                {4638}let v_989: bitstring = catch-fail((if v_986 then (if v_988 then (early_secret_75,binder_key_50) else fail-any) else fail-any)) in
                                {4639}let v_990: bool = (not-caught-fail(v_989) && success?(1-proj-2-tuple(v_989))) in
                                {4640}let kb_50: mac_key = (if v_990 then 2-proj-2-tuple(v_989) else caught-fail) in
                                {4641}let es_76: bitstring = (if v_990 then 1-proj-2-tuple(v_989) else caught-fail) in
                                {4642}let v_991: bitstring = catch-fail((if v_990 then (empty_psk_ext,(NoPsk,zero,es_76,false)) else fail-any)) in
                                {4643}let v_992: bool = (not-caught-fail(v_991) && success?(1-proj-2-tuple(v_991))) in
                                {4644}let psk_data_28: bitstring = (if v_992 then 2-proj-2-tuple(v_991) else caught-fail) in
                                {4645}let psk_ext_48: preSharedKeyExt = (if v_992 then 1-proj-2-tuple(v_991) else caught-fail) in
                                {4646}let i_offer_7: params = (if v_992 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_2,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_48) else caught-fail) in
                                {4647}let i_client_hello_9: msg = (if v_992 then CH(i_cr_4,i_offer_7) else caught-fail) in
                                {4648}new fake_id_8[]: identityPsk;
                                {4649}new fake_binder_8[]: bitstring;
                                {4650}let o_psk_ext_9: preSharedKeyExt = (if v_992 then (if @6_use_psk then client_psk_ext(fake_id_8,fake_binder_8) else empty_psk_ext) else caught-fail) in
                                {4651}let o_ech_ext_ADD_7: echExt = (if v_992 then ECHClientHelloOuter(ech_h_6,ech_a_6,config_id_4,zero,zero) else caught-fail) in
                                {4652}let o_offer_ADD_7: params = (if v_992 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_3,SNI(o_dom_4),o_ech_ext_ADD_7,empty_extra_ext,o_psk_ext_9) else caught-fail) in
                                {4653}let o_client_hello_ADD_7: msg = (if v_992 then CH(o_cr_5,o_offer_ADD_7) else caught-fail) in
                                {4654}let n_7: nat = (if v_992 then 2 else caught-fail) in
                                {4655}let v_993: hpkeContext = (if v_992 then catch-fail(context) else caught-fail) in
                                {4656}let v_994: bool = (not-caught-fail(v_993) && ((S =nf 1-proj-hpke_context(v_993)) && success?(1-proj-hpke_context(v_993)))) in
                                {4657}let base_nonce_8: bitstring = (if v_994 then 3-proj-hpke_context(v_993) else caught-fail) in
                                {4658}let key_8: aead_key = (if v_994 then 2-proj-hpke_context(v_993) else caught-fail) in
                                {4659}let payload_8: bitstring = (if v_992 then catch-fail((if v_994 then aead_enc(ech_a_6,key_8,(base_nonce_8,n_7),o_client_hello_ADD_7,i_client_hello_9) else fail-any)) else caught-fail) in
                                {4660}let v_995: bool = not-caught-fail(payload_8) in
                                {4661}let o_ech_ext_9: echExt = (if v_995 then ECHClientHelloOuter(ech_h_6,ech_a_6,config_id_4,zero,payload_8) else caught-fail) in
                                {4662}let o_offer_13: params = (if v_995 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_3,SNI(o_dom_4),o_ech_ext_9,empty_extra_ext,o_psk_ext_9) else caught-fail) in
                                {4663}let (o_client_hello'_5: msg,i_client_hello'_5: msg,i_cr'_5: bytes32,i_kex_data'_5: bitstring,psk_data'_19: bitstring) = (if v_992 then (if v_995 then (CH(o_cr_5,o_offer_13),i_client_hello_9,i_cr_4,i_kex_data_4,psk_data_28) else fail-any) else fail-any) in
                                {4664}out(io, o_client_hello'_5);
                                {4665}in(io, server_hello'_18: msg);
                                {4666}let SH(B32(sr24'_5: bytes24,sr8'_5: bytes8),params'_5: params) = server_hello'_18 in
                                {4667}let cur_log_IN1_HRR_IN2_5: bitstring = (cur_log_IN1_HRR_1,i_client_hello'_5) in
                                {4668}let sh_modified_7: msg = SH(B32(sr24'_5,zero8),params'_5) in
                                {4669}let cur_log_sh_7: bitstring = (cur_log_IN1_HRR_IN2_5,sh_modified_7) in
                                {4670}let transcript_ech_conf_7: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_7)) in
                                {4671}let v_996: bool = not-caught-fail(transcript_ech_conf_7) in
                                {4672}let s_101: bitstring = (if v_996 then zero else caught-fail) in
                                {4673}let k_95: bitstring = (if v_996 then catch-fail(b32_2_b(get_random(i_client_hello'_5))) else caught-fail) in
                                {4674}let v_997: bool = not-caught-fail(k_95) in
                                {4675}let k_96: bitstring = (if v_996 then catch-fail((if v_997 then hmac(@6_backend_h,s_101,k_95) else fail-any)) else caught-fail) in
                                {4676}let v_998: bool = not-caught-fail(k_96) in
                                {4677}let l_284: label = (if v_998 then ech_accept_confirmation else caught-fail) in
                                {4678}let x_320: bitstring = (if v_998 then (l_284,cur_log_sh_7) else caught-fail) in
                                {4679}let sr8_9: bytes8 = (if v_996 then catch-fail(crop_into_bytes8((if v_998 then hmac(@6_backend_h,k_96,x_320) else fail-any))) else caught-fail) in
                                {4680}let v_999: bool = not-caught-fail(sr8_9) in
                                {4681}if (B32(sr24'_5,sr8'_5) = (if v_996 then (if v_999 then B32(sr24'_5,sr8_9) else fail-any) else fail-any)) then
                                {4682}let (x_321: bitstring,g_26: group) = i_kex_data'_5 in
                                {4683}let (psk_offer_23: preSharedKey,id_offer_23: identityPsk,es_offer_23: bitstring,is_safe_offer_23: bool) = psk_data'_19 in
                                {4684}event Client_PSKOffer(@6_id_client,psk_offer_23,id_offer_23,is_safe_offer_23);
                                {4685}event Client_Rand_client(@6_id_client,i_cr'_5);
                                {4686}event Client_DH_client(@6_id_client,dh_pub(g_26,x_321));
                                {4687}event Client_server_domain(@6_id_client,backend_dom);
                                {4688}let SH(sr_34: bytes32,mode_28: params) = server_hello'_18 in
                                {4689}event Client_Rand_server(@6_id_client,sr_34);
                                {4690}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_26,gy_24: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_49: preSharedKeyExt) = mode_28 in
                                (
                                    {4691}let cur_log2_53: bitstring = (cur_log_IN1_HRR_IN2_5,server_hello'_18) in
                                    {4692}event Client_DH_server(@6_id_client,gy_24);
                                    {4693}let v_1000: bool = (psk_ext_49 = empty_psk_ext) in
                                    {4694}let psk_117: preSharedKey = (if v_1000 then NoPsk else caught-fail) in
                                    {4695}let s_102: bitstring = (if v_1000 then zero else caught-fail) in
                                    {4696}let k_97: bitstring = (if v_1000 then catch-fail(psk2b(psk_117)) else caught-fail) in
                                    {4697}let v_1001: bool = not-caught-fail(k_97) in
                                    {4698}let early_secret_76: bitstring = (if v_1000 then catch-fail((if v_1001 then hmac(@6_backend_h,s_102,k_97) else fail-any)) else caught-fail) in
                                    {4699}let v_1002: bool = not-caught-fail(early_secret_76) in
                                    {4700}let l_285: label = (if v_1002 then tls13_ext_res_binder else caught-fail) in
                                    {4701}let m_99: bitstring = (if v_1002 then zero else caught-fail) in
                                    {4702}let h_275: bitstring = (if v_1002 then catch-fail(hash(@6_backend_h,m_99)) else caught-fail) in
                                    {4703}let v_1003: bool = not-caught-fail(h_275) in
                                    {4704}let x_322: bitstring = (if v_1003 then (l_285,h_275) else caught-fail) in
                                    {4705}let binder_key_51: bitstring = (if v_1002 then catch-fail((if v_1003 then hmac(@6_backend_h,early_secret_76,x_322) else fail-any)) else caught-fail) in
                                    {4706}let v_1004: bool = not-caught-fail(binder_key_51) in
                                    {4707}let v_1005: bitstring = (if v_1000 then catch-fail((if v_1002 then (if v_1004 then (early_secret_76,binder_key_51) else fail-any) else fail-any)) else caught-fail) in
                                    {4708}let v_1006: bool = (not-caught-fail(v_1005) && success?(1-proj-2-tuple(v_1005))) in
                                    {4709}let kb_51: mac_key = (if v_1006 then 2-proj-2-tuple(v_1005) else caught-fail) in
                                    {4710}let es_77: bitstring = (if v_1006 then 1-proj-2-tuple(v_1005) else caught-fail) in
                                    {4711}let v_1007: bitstring = (if not(v_1000) then catch-fail(psk_data'_19) else caught-fail) in
                                    {4712}let v_1008: bool = (not-caught-fail(v_1007) && success?(1-proj-4-tuple(v_1007))) in
                                    {4713}let is_safe_47: bool = (if v_1008 then 4-proj-4-tuple(v_1007) else caught-fail) in
                                    {4714}let es_78: bitstring = (if v_1008 then 3-proj-4-tuple(v_1007) else caught-fail) in
                                    {4715}let id_57: identityPsk = (if v_1008 then 2-proj-4-tuple(v_1007) else caught-fail) in
                                    {4716}let psk_118: preSharedKey = (if v_1008 then 1-proj-4-tuple(v_1007) else caught-fail) in
                                    {4717}let (psk_119: preSharedKey,early_secret_77: bitstring,valid_23: bool,safe_psk_29: bool) = (if v_1000 then (if v_1006 then (NoPsk,es_77,true,false) else fail-any) else (if v_1008 then (psk_118,es_78,((psk_118 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_49)),is_safe_47) else fail-any)) in
                                    {4718}event Client_PSKChoosen(@6_id_client,psk_119,safe_psk_29);
                                    {4719}if valid_23 then
                                    (
                                        {4720}let gxy_47: element = catch-fail(dh_decap_fun(g_26,gy_24,x_321)) in
                                        {4721}let v_1009: bool = not-caught-fail(gxy_47) in
                                        {4722}new s_103[]: seed;
                                        {4723}let gxy_48: element = (if v_1009 then gxy_47 else dh_f(s_103)) in
                                        {4724}event Client_DH_gxy(@6_id_client,gxy_48);
                                        {4725}let l_286: label = tls13_derived in
                                        {4726}let m_100: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {4727}let v_1010: bool = not-caught-fail(m_100) in
                                        {4728}let h_276: bitstring = (if v_1010 then catch-fail(hash(@6_backend_h,m_100)) else caught-fail) in
                                        {4729}let v_1011: bool = not-caught-fail(h_276) in
                                        {4730}let x_323: bitstring = (if v_1011 then (l_286,h_276) else caught-fail) in
                                        {4731}let extra_53: bitstring = catch-fail((if v_1010 then (if v_1011 then hmac(@6_backend_h,early_secret_77,x_323) else fail-any) else fail-any)) in
                                        {4732}let v_1012: bool = not-caught-fail(extra_53) in
                                        {4733}let handshake_secret_24: bitstring = (if v_1012 then hmac(@6_backend_h,extra_53,gxy_48) else fail-any) in
                                        {4734}let l_287: label = tls13_derived in
                                        {4735}let m_101: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {4736}let v_1013: bool = not-caught-fail(m_101) in
                                        {4737}let h_277: bitstring = (if v_1013 then catch-fail(hash(@6_backend_h,m_101)) else caught-fail) in
                                        {4738}let v_1014: bool = not-caught-fail(h_277) in
                                        {4739}let x_324: bitstring = (if v_1014 then (l_287,h_277) else caught-fail) in
                                        {4740}let extra_54: bitstring = catch-fail((if v_1013 then (if v_1014 then hmac(@6_backend_h,handshake_secret_24,x_324) else fail-any) else fail-any)) in
                                        {4741}let v_1015: bool = not-caught-fail(extra_54) in
                                        {4742}let k_98: bitstring = (if v_1015 then zero else caught-fail) in
                                        {4743}let master_secret_55: bitstring = (if v_1015 then catch-fail(hmac(@6_backend_h,handshake_secret_24,k_98)) else caught-fail) in
                                        {4744}let v_1016: bool = not-caught-fail(master_secret_55) in
                                        {4745}let l_288: label = (if v_1016 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {4746}let h_278: bitstring = (if v_1016 then catch-fail(hash(@6_backend_h,cur_log2_53)) else caught-fail) in
                                        {4747}let v_1017: bool = not-caught-fail(h_278) in
                                        {4748}let x_325: bitstring = (if v_1017 then (l_288,h_278) else caught-fail) in
                                        {4749}let client_hts_24: bitstring = (if v_1016 then catch-fail((if v_1017 then hmac(@6_backend_h,handshake_secret_24,x_325) else fail-any)) else caught-fail) in
                                        {4750}let v_1018: bool = not-caught-fail(client_hts_24) in
                                        {4751}let l_289: label = (if v_1018 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {4752}let h_279: bitstring = (if v_1018 then catch-fail(hash(@6_backend_h,cur_log2_53)) else caught-fail) in
                                        {4753}let v_1019: bool = not-caught-fail(h_279) in
                                        {4754}let x_326: bitstring = (if v_1019 then (l_289,h_279) else caught-fail) in
                                        {4755}let server_hts_24: bitstring = (if v_1018 then catch-fail((if v_1019 then hmac(@6_backend_h,handshake_secret_24,x_326) else fail-any)) else caught-fail) in
                                        {4756}let v_1020: bool = not-caught-fail(server_hts_24) in
                                        {4757}let l_290: label = (if v_1020 then tls13_key else caught-fail) in
                                        {4758}let h_280: bitstring = (if v_1020 then zero else caught-fail) in
                                        {4759}let x_327: bitstring = (if v_1020 then (l_290,h_280) else caught-fail) in
                                        {4760}let client_wkh_24: bitstring = (if v_1020 then catch-fail(hmac(@6_backend_h,client_hts_24,x_327)) else caught-fail) in
                                        {4761}let v_1021: bool = not-caught-fail(client_wkh_24) in
                                        {4762}let l_291: label = (if v_1021 then tls13_key else caught-fail) in
                                        {4763}let h_281: bitstring = (if v_1021 then zero else caught-fail) in
                                        {4764}let x_328: bitstring = (if v_1021 then (l_291,h_281) else caught-fail) in
                                        {4765}let server_wkh_24: bitstring = (if v_1021 then catch-fail(hmac(@6_backend_h,server_hts_24,x_328)) else caught-fail) in
                                        {4766}let v_1022: bool = not-caught-fail(server_wkh_24) in
                                        {4767}let l_292: label = (if v_1022 then tls13_finished else caught-fail) in
                                        {4768}let h_282: bitstring = (if v_1022 then zero else caught-fail) in
                                        {4769}let x_329: bitstring = (if v_1022 then (l_292,h_282) else caught-fail) in
                                        {4770}let client_fk_24: bitstring = (if v_1022 then catch-fail(hmac(@6_backend_h,client_hts_24,x_329)) else caught-fail) in
                                        {4771}let v_1023: bool = not-caught-fail(client_fk_24) in
                                        {4772}let l_293: label = (if v_1023 then tls13_finished else caught-fail) in
                                        {4773}let h_283: bitstring = (if v_1023 then zero else caught-fail) in
                                        {4774}let x_330: bitstring = (if v_1023 then (l_293,h_283) else caught-fail) in
                                        {4775}let server_fk_24: bitstring = (if v_1023 then catch-fail(hmac(@6_backend_h,server_hts_24,x_330)) else caught-fail) in
                                        {4776}let v_1024: bool = not-caught-fail(server_fk_24) in
                                        {4777}let (master_secret_56: bitstring,chk_31: aead_key,shk_30: aead_key,cfin_31: mac_key,sfin_30: mac_key) = (if v_1015 then (if v_1016 then (if v_1018 then (if v_1020 then (if v_1021 then (if v_1022 then (if v_1023 then (if v_1024 then (master_secret_55,client_wkh_24,server_wkh_24,client_fk_24,server_fk_24) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {4778}event Client_chk(@6_id_client,chk_31);
                                        {4779}event Client_shk(@6_id_client,shk_30);
                                        {4780}event Client_cfin(@6_id_client,cfin_31);
                                        {4781}event Client_sfin(@6_id_client,sfin_30);
                                        {4782}in(io, enc_ee_msg_23: bitstring);
                                        {4783}let ee_msg_24: msg = aead_dec(@6_backend_a,shk_30,0,zero,enc_ee_msg_23) in
                                        {4784}let EE(ech_ee_23: echExt,extra_ee_23: extraExt) = ee_msg_24 in
                                        {4785}let cur_log2_54: bitstring = (cur_log2_53,ee_msg_24) in
                                        {4786}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_5,sr_34,@6_backend_h,@6_backend_a,c_dom_6,backend_dom,psk_119,safe_psk_29,@6_comp_psk,master_secret_56,chk_31,0,shk_30,1,cfin_31,sfin_30,cur_log2_54)))
                                    )
                                    else
                                        {4787}out(io, illegal_parameter)
                                )
                                else
                                    {4788}out(io, illegal_parameter)
                        )
                        else
                            {4789}let cur_log_OU1_HRR_1: bitstring = ((zero,o_client_hello_1),server_hello_5) in
                            {4790}let ech_config(config_id_5: configId,ech_g_7: group,pkR_7: element,o_dom_5: domain,ech_h_7: hash_alg,ech_a_7: aead_alg) = ech_conf in
                            {4791}new rand24_12[]: bytes24;
                            {4792}new rand8_12[]: bytes8;
                            {4793}let o_cr_6: bytes32 = B32(rand24_12,rand8_12) in
                            {4794}let send_key_share_5: bool = true in
                            {4795}new s_104[]: seed;
                            {4796}let gx_25: element = dh_pub(@6_tls_g,dh_k(s_104)) in
                            {4797}let v_1025: bitstring = (dh_k(s_104),gx_25) in
                            {4798}let v_1026: bool = success?(1-proj-2-tuple(v_1025)) in
                            {4799}let gx_26: element = (if v_1026 then 2-proj-2-tuple(v_1025) else caught-fail) in
                            {4800}let x_331: bitstring = (if v_1026 then 1-proj-2-tuple(v_1025) else caught-fail) in
                            {4801}let kex_11: kex_alg = (if v_1026 then (if send_key_share_5 then DHE_kex(@6_tls_g,gx_26) else DHE_group(@6_tls_g)) else caught-fail) in
                            {4802}let (o_kex_ext_4: keyShareExt,kex_data_8: bitstring) = (if v_1026 then (client_kex_ext(kex_11),(x_331,@6_tls_g)) else fail-any) in
                            {4803}if @6_use_grease then
                            (
                                {4804}let extra_55: extraExt = empty_extra_ext in
                                {4805}if @6_use_psk then
                                (
                                    {4806}let (psk_120: preSharedKey,id_58: identityPsk,old_es_8: bitstring,is_safe_48: bool) = psk_data_25 in
                                    (
                                        {4807}let offer_30: params = nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_4,SNI(o_dom_5),o_ech_ext_6,extra_55,trunc_client_psk_ext(id_58)) in
                                        {4808}let cur_log'_18: bitstring = (cur_log_OU1_HRR_1,CH(o_cr_6,offer_30)) in
                                        {4809}let s_105: bitstring = zero in
                                        {4810}let k_99: bitstring = catch-fail(psk2b(psk_120)) in
                                        {4811}let v_1027: bool = not-caught-fail(k_99) in
                                        {4812}let early_secret_78: bitstring = catch-fail((if v_1027 then hmac(@6_tls_h,s_105,k_99) else fail-any)) in
                                        {4813}let v_1028: bool = not-caught-fail(early_secret_78) in
                                        {4814}let l_294: label = (if v_1028 then tls13_ext_res_binder else caught-fail) in
                                        {4815}let m_102: bitstring = (if v_1028 then zero else caught-fail) in
                                        {4816}let h_284: bitstring = (if v_1028 then catch-fail(hash(@6_tls_h,m_102)) else caught-fail) in
                                        {4817}let v_1029: bool = not-caught-fail(h_284) in
                                        {4818}let x_332: bitstring = (if v_1029 then (l_294,h_284) else caught-fail) in
                                        {4819}let binder_key_52: bitstring = (if v_1028 then catch-fail((if v_1029 then hmac(@6_tls_h,early_secret_78,x_332) else fail-any)) else caught-fail) in
                                        {4820}let v_1030: bool = not-caught-fail(binder_key_52) in
                                        {4821}let v_1031: bitstring = catch-fail((if v_1028 then (if v_1030 then (early_secret_78,binder_key_52) else fail-any) else fail-any)) in
                                        {4822}let v_1032: bool = (not-caught-fail(v_1031) && success?(1-proj-2-tuple(v_1031))) in
                                        {4823}let kb_52: mac_key = (if v_1032 then 2-proj-2-tuple(v_1031) else caught-fail) in
                                        {4824}let es_79: bitstring = (if v_1032 then 1-proj-2-tuple(v_1031) else caught-fail) in
                                        {4825}let binders_17: bitstring = (if v_1032 then catch-fail(hmac(@6_tls_h,kb_52,cur_log'_18)) else caught-fail) in
                                        {4826}let v_1033: bool = not-caught-fail(binders_17) in
                                        {4827}let v_1034: bitstring = catch-fail((if v_1032 then (if v_1033 then (client_psk_ext(id_58,binders_17),(psk_120,id_58,es_79,is_safe_48)) else fail-any) else fail-any)) in
                                        {4828}let v_1035: bool = (not-caught-fail(v_1034) && success?(1-proj-2-tuple(v_1034))) in
                                        {4829}let psk_data_29: bitstring = (if v_1035 then 2-proj-2-tuple(v_1034) else caught-fail) in
                                        {4830}let psk_ext_50: preSharedKeyExt = (if v_1035 then 1-proj-2-tuple(v_1034) else caught-fail) in
                                        {4831}let o_offer_14: params = (if v_1035 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_4,SNI(o_dom_5),o_ech_ext_6,empty_extra_ext,psk_ext_50) else caught-fail) in
                                        {4832}let (client_hello'_13: msg,cr'_13: bytes32,kex_data'_13: bitstring,psk_data'_20: bitstring) = (if v_1035 then (CH(o_cr_6,o_offer_14),o_cr_6,kex_data_8,psk_data_29) else fail-any) in
                                        {4833}out(io, client_hello'_13);
                                        {4834}let cur_log_OU1_HRR_OU2_4: bitstring = (cur_log_OU1_HRR_1,client_hello'_13) in
                                        {4835}in(io, server_hello'_19: msg);
                                        {4836}let SH(sr'_13: bytes32,mode'_13: params) = server_hello'_19 in
                                        (
                                            {4837}if (sr'_13 = B32(HRR24,HRR8)) then
                                                {4838}out(io, unexpected_message)
                                            else
                                                {4839}let (x_333: bitstring,g_27: group) = kex_data'_13 in
                                                {4840}let (psk_offer_24: preSharedKey,id_offer_24: identityPsk,es_offer_24: bitstring,is_safe_offer_24: bool) = psk_data'_20 in
                                                {4841}event Client_PSKOffer(@6_id_client,psk_offer_24,id_offer_24,is_safe_offer_24);
                                                {4842}event Client_Rand_client(@6_id_client,cr'_13);
                                                {4843}event Client_DH_client(@6_id_client,dh_pub(g_27,x_333));
                                                {4844}event Client_server_domain(@6_id_client,o_dom);
                                                {4845}let SH(sr_35: bytes32,mode_29: params) = server_hello'_19 in
                                                {4846}event Client_Rand_server(@6_id_client,sr_35);
                                                {4847}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_27,gy_25: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_51: preSharedKeyExt) = mode_29 in
                                                (
                                                    {4848}let cur_log2_55: bitstring = (cur_log_OU1_HRR_OU2_4,server_hello'_19) in
                                                    {4849}event Client_DH_server(@6_id_client,gy_25);
                                                    {4850}let v_1036: bool = (psk_ext_51 = empty_psk_ext) in
                                                    {4851}let psk_121: preSharedKey = (if v_1036 then NoPsk else caught-fail) in
                                                    {4852}let s_106: bitstring = (if v_1036 then zero else caught-fail) in
                                                    {4853}let k_100: bitstring = (if v_1036 then catch-fail(psk2b(psk_121)) else caught-fail) in
                                                    {4854}let v_1037: bool = not-caught-fail(k_100) in
                                                    {4855}let early_secret_79: bitstring = (if v_1036 then catch-fail((if v_1037 then hmac(@6_tls_h,s_106,k_100) else fail-any)) else caught-fail) in
                                                    {4856}let v_1038: bool = not-caught-fail(early_secret_79) in
                                                    {4857}let l_295: label = (if v_1038 then tls13_ext_res_binder else caught-fail) in
                                                    {4858}let m_103: bitstring = (if v_1038 then zero else caught-fail) in
                                                    {4859}let h_285: bitstring = (if v_1038 then catch-fail(hash(@6_tls_h,m_103)) else caught-fail) in
                                                    {4860}let v_1039: bool = not-caught-fail(h_285) in
                                                    {4861}let x_334: bitstring = (if v_1039 then (l_295,h_285) else caught-fail) in
                                                    {4862}let binder_key_53: bitstring = (if v_1038 then catch-fail((if v_1039 then hmac(@6_tls_h,early_secret_79,x_334) else fail-any)) else caught-fail) in
                                                    {4863}let v_1040: bool = not-caught-fail(binder_key_53) in
                                                    {4864}let v_1041: bitstring = (if v_1036 then catch-fail((if v_1038 then (if v_1040 then (early_secret_79,binder_key_53) else fail-any) else fail-any)) else caught-fail) in
                                                    {4865}let v_1042: bool = (not-caught-fail(v_1041) && success?(1-proj-2-tuple(v_1041))) in
                                                    {4866}let kb_53: mac_key = (if v_1042 then 2-proj-2-tuple(v_1041) else caught-fail) in
                                                    {4867}let es_80: bitstring = (if v_1042 then 1-proj-2-tuple(v_1041) else caught-fail) in
                                                    {4868}let v_1043: bitstring = (if not(v_1036) then catch-fail(psk_data'_20) else caught-fail) in
                                                    {4869}let v_1044: bool = (not-caught-fail(v_1043) && success?(1-proj-4-tuple(v_1043))) in
                                                    {4870}let is_safe_49: bool = (if v_1044 then 4-proj-4-tuple(v_1043) else caught-fail) in
                                                    {4871}let es_81: bitstring = (if v_1044 then 3-proj-4-tuple(v_1043) else caught-fail) in
                                                    {4872}let id_59: identityPsk = (if v_1044 then 2-proj-4-tuple(v_1043) else caught-fail) in
                                                    {4873}let psk_122: preSharedKey = (if v_1044 then 1-proj-4-tuple(v_1043) else caught-fail) in
                                                    {4874}let (psk_123: preSharedKey,early_secret_80: bitstring,valid_24: bool,safe_psk_30: bool) = (if v_1036 then (if v_1042 then (NoPsk,es_80,true,false) else fail-any) else (if v_1044 then (psk_122,es_81,((psk_122 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_51)),is_safe_49) else fail-any)) in
                                                    {4875}event Client_PSKChoosen(@6_id_client,psk_123,safe_psk_30);
                                                    {4876}if valid_24 then
                                                    (
                                                        {4877}let gxy_49: element = catch-fail(dh_decap_fun(g_27,gy_25,x_333)) in
                                                        {4878}let v_1045: bool = not-caught-fail(gxy_49) in
                                                        {4879}new s_107[]: seed;
                                                        {4880}let gxy_50: element = (if v_1045 then gxy_49 else dh_f(s_107)) in
                                                        {4881}event Client_DH_gxy(@6_id_client,gxy_50);
                                                        {4882}let l_296: label = tls13_derived in
                                                        {4883}let m_104: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {4884}let v_1046: bool = not-caught-fail(m_104) in
                                                        {4885}let h_286: bitstring = (if v_1046 then catch-fail(hash(@6_tls_h,m_104)) else caught-fail) in
                                                        {4886}let v_1047: bool = not-caught-fail(h_286) in
                                                        {4887}let x_335: bitstring = (if v_1047 then (l_296,h_286) else caught-fail) in
                                                        {4888}let extra_56: bitstring = catch-fail((if v_1046 then (if v_1047 then hmac(@6_tls_h,early_secret_80,x_335) else fail-any) else fail-any)) in
                                                        {4889}let v_1048: bool = not-caught-fail(extra_56) in
                                                        {4890}let handshake_secret_25: bitstring = (if v_1048 then hmac(@6_tls_h,extra_56,gxy_50) else fail-any) in
                                                        {4891}let l_297: label = tls13_derived in
                                                        {4892}let m_105: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {4893}let v_1049: bool = not-caught-fail(m_105) in
                                                        {4894}let h_287: bitstring = (if v_1049 then catch-fail(hash(@6_tls_h,m_105)) else caught-fail) in
                                                        {4895}let v_1050: bool = not-caught-fail(h_287) in
                                                        {4896}let x_336: bitstring = (if v_1050 then (l_297,h_287) else caught-fail) in
                                                        {4897}let extra_57: bitstring = catch-fail((if v_1049 then (if v_1050 then hmac(@6_tls_h,handshake_secret_25,x_336) else fail-any) else fail-any)) in
                                                        {4898}let v_1051: bool = not-caught-fail(extra_57) in
                                                        {4899}let k_101: bitstring = (if v_1051 then zero else caught-fail) in
                                                        {4900}let master_secret_57: bitstring = (if v_1051 then catch-fail(hmac(@6_tls_h,handshake_secret_25,k_101)) else caught-fail) in
                                                        {4901}let v_1052: bool = not-caught-fail(master_secret_57) in
                                                        {4902}let l_298: label = (if v_1052 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {4903}let h_288: bitstring = (if v_1052 then catch-fail(hash(@6_tls_h,cur_log2_55)) else caught-fail) in
                                                        {4904}let v_1053: bool = not-caught-fail(h_288) in
                                                        {4905}let x_337: bitstring = (if v_1053 then (l_298,h_288) else caught-fail) in
                                                        {4906}let client_hts_25: bitstring = (if v_1052 then catch-fail((if v_1053 then hmac(@6_tls_h,handshake_secret_25,x_337) else fail-any)) else caught-fail) in
                                                        {4907}let v_1054: bool = not-caught-fail(client_hts_25) in
                                                        {4908}let l_299: label = (if v_1054 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {4909}let h_289: bitstring = (if v_1054 then catch-fail(hash(@6_tls_h,cur_log2_55)) else caught-fail) in
                                                        {4910}let v_1055: bool = not-caught-fail(h_289) in
                                                        {4911}let x_338: bitstring = (if v_1055 then (l_299,h_289) else caught-fail) in
                                                        {4912}let server_hts_25: bitstring = (if v_1054 then catch-fail((if v_1055 then hmac(@6_tls_h,handshake_secret_25,x_338) else fail-any)) else caught-fail) in
                                                        {4913}let v_1056: bool = not-caught-fail(server_hts_25) in
                                                        {4914}let l_300: label = (if v_1056 then tls13_key else caught-fail) in
                                                        {4915}let h_290: bitstring = (if v_1056 then zero else caught-fail) in
                                                        {4916}let x_339: bitstring = (if v_1056 then (l_300,h_290) else caught-fail) in
                                                        {4917}let client_wkh_25: bitstring = (if v_1056 then catch-fail(hmac(@6_tls_h,client_hts_25,x_339)) else caught-fail) in
                                                        {4918}let v_1057: bool = not-caught-fail(client_wkh_25) in
                                                        {4919}let l_301: label = (if v_1057 then tls13_key else caught-fail) in
                                                        {4920}let h_291: bitstring = (if v_1057 then zero else caught-fail) in
                                                        {4921}let x_340: bitstring = (if v_1057 then (l_301,h_291) else caught-fail) in
                                                        {4922}let server_wkh_25: bitstring = (if v_1057 then catch-fail(hmac(@6_tls_h,server_hts_25,x_340)) else caught-fail) in
                                                        {4923}let v_1058: bool = not-caught-fail(server_wkh_25) in
                                                        {4924}let l_302: label = (if v_1058 then tls13_finished else caught-fail) in
                                                        {4925}let h_292: bitstring = (if v_1058 then zero else caught-fail) in
                                                        {4926}let x_341: bitstring = (if v_1058 then (l_302,h_292) else caught-fail) in
                                                        {4927}let client_fk_25: bitstring = (if v_1058 then catch-fail(hmac(@6_tls_h,client_hts_25,x_341)) else caught-fail) in
                                                        {4928}let v_1059: bool = not-caught-fail(client_fk_25) in
                                                        {4929}let l_303: label = (if v_1059 then tls13_finished else caught-fail) in
                                                        {4930}let h_293: bitstring = (if v_1059 then zero else caught-fail) in
                                                        {4931}let x_342: bitstring = (if v_1059 then (l_303,h_293) else caught-fail) in
                                                        {4932}let server_fk_25: bitstring = (if v_1059 then catch-fail(hmac(@6_tls_h,server_hts_25,x_342)) else caught-fail) in
                                                        {4933}let v_1060: bool = not-caught-fail(server_fk_25) in
                                                        {4934}let (master_secret_58: bitstring,chk_32: aead_key,shk_31: aead_key,cfin_32: mac_key,sfin_31: mac_key) = (if v_1051 then (if v_1052 then (if v_1054 then (if v_1056 then (if v_1057 then (if v_1058 then (if v_1059 then (if v_1060 then (master_secret_57,client_wkh_25,server_wkh_25,client_fk_25,server_fk_25) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {4935}event Client_chk(@6_id_client,chk_32);
                                                        {4936}event Client_shk(@6_id_client,shk_31);
                                                        {4937}event Client_cfin(@6_id_client,cfin_32);
                                                        {4938}event Client_sfin(@6_id_client,sfin_31);
                                                        {4939}in(io, enc_ee_msg_24: bitstring);
                                                        {4940}let ee_msg_25: msg = aead_dec(@6_tls_a,shk_31,0,zero,enc_ee_msg_24) in
                                                        {4941}let EE(ech_ee_24: echExt,extra_ee_24: extraExt) = ee_msg_25 in
                                                        {4942}let cur_log2_56: bitstring = (cur_log2_55,ee_msg_25) in
                                                        {4943}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_13,sr_35,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_123,safe_psk_30,@6_comp_psk,master_secret_58,chk_32,0,shk_31,1,cfin_32,sfin_31,cur_log2_56)))
                                                    )
                                                    else
                                                        {4944}out(io, illegal_parameter)
                                                )
                                                else
                                                    {4945}out(io, illegal_parameter)
                                        )
                                        else
                                            {4946}out(io, unexpected_message)
                                    )
                                    else
                                        {5096}get pre_shared_keys(c_dom'_10: domain,=o_dom_5,=@6_tls_h,id_60: identityPsk,psk_124: preSharedKey,idP_12: idProc,is_safe_50: bool) in
                                        {4947}event Selected_one_time_used_psk(@6_id_client,psk_124,is_safe_50);
                                        {4948}event Selected_psk(c_dom_6,c_dom'_10,idP_12,is_safe_50);
                                        {4949}event Selected_psk_no_missmatch(@6_id_client,o_dom_5,@6_tls_h,psk_124,id_60);
                                        {4950}event Selected_psk_with_ID(c_dom_6,c_dom'_10,id_60,idP_12,is_safe_50);
                                        {4951}let v_1061: bitstring = (id_60,psk_124,is_safe_50) in
                                        {4952}let v_1062: bool = success?(1-proj-3-tuple(v_1061)) in
                                        {4953}let is_safe_51: bool = (if v_1062 then 3-proj-3-tuple(v_1061) else caught-fail) in
                                        {4954}let psk_125: preSharedKey = (if v_1062 then 2-proj-3-tuple(v_1061) else caught-fail) in
                                        {4955}let id_61: identityPsk = (if v_1062 then 1-proj-3-tuple(v_1061) else caught-fail) in
                                        {4956}let offer_31: params = (if v_1062 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_4,SNI(o_dom_5),o_ech_ext_6,extra_55,trunc_client_psk_ext(id_61)) else caught-fail) in
                                        {4957}let cur_log'_19: bitstring = (if v_1062 then (cur_log_OU1_HRR_1,CH(o_cr_6,offer_31)) else caught-fail) in
                                        {4958}let s_108: bitstring = (if v_1062 then zero else caught-fail) in
                                        {4959}let k_102: bitstring = (if v_1062 then catch-fail(psk2b(psk_125)) else caught-fail) in
                                        {4960}let v_1063: bool = not-caught-fail(k_102) in
                                        {4961}let early_secret_81: bitstring = (if v_1062 then catch-fail((if v_1063 then hmac(@6_tls_h,s_108,k_102) else fail-any)) else caught-fail) in
                                        {4962}let v_1064: bool = not-caught-fail(early_secret_81) in
                                        {4963}let l_304: label = (if v_1064 then tls13_ext_res_binder else caught-fail) in
                                        {4964}let m_106: bitstring = (if v_1064 then zero else caught-fail) in
                                        {4965}let h_294: bitstring = (if v_1064 then catch-fail(hash(@6_tls_h,m_106)) else caught-fail) in
                                        {4966}let v_1065: bool = not-caught-fail(h_294) in
                                        {4967}let x_343: bitstring = (if v_1065 then (l_304,h_294) else caught-fail) in
                                        {4968}let binder_key_54: bitstring = (if v_1064 then catch-fail((if v_1065 then hmac(@6_tls_h,early_secret_81,x_343) else fail-any)) else caught-fail) in
                                        {4969}let v_1066: bool = not-caught-fail(binder_key_54) in
                                        {4970}let v_1067: bitstring = (if v_1062 then catch-fail((if v_1064 then (if v_1066 then (early_secret_81,binder_key_54) else fail-any) else fail-any)) else caught-fail) in
                                        {4971}let v_1068: bool = (not-caught-fail(v_1067) && success?(1-proj-2-tuple(v_1067))) in
                                        {4972}let kb_54: mac_key = (if v_1068 then 2-proj-2-tuple(v_1067) else caught-fail) in
                                        {4973}let es_82: bitstring = (if v_1068 then 1-proj-2-tuple(v_1067) else caught-fail) in
                                        {4974}let binders_18: bitstring = (if v_1068 then catch-fail(hmac(@6_tls_h,kb_54,cur_log'_19)) else caught-fail) in
                                        {4975}let v_1069: bool = not-caught-fail(binders_18) in
                                        {4976}let v_1070: bitstring = catch-fail((if v_1062 then (if v_1068 then (if v_1069 then (client_psk_ext(id_61,binders_18),(psk_125,id_61,es_82,is_safe_51)) else fail-any) else fail-any) else fail-any)) in
                                        {4977}let v_1071: bool = (not-caught-fail(v_1070) && success?(1-proj-2-tuple(v_1070))) in
                                        {4978}let psk_data_30: bitstring = (if v_1071 then 2-proj-2-tuple(v_1070) else caught-fail) in
                                        {4979}let psk_ext_52: preSharedKeyExt = (if v_1071 then 1-proj-2-tuple(v_1070) else caught-fail) in
                                        {4980}let o_offer_15: params = (if v_1071 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_4,SNI(o_dom_5),o_ech_ext_6,empty_extra_ext,psk_ext_52) else caught-fail) in
                                        {4981}let (client_hello'_14: msg,cr'_14: bytes32,kex_data'_14: bitstring,psk_data'_21: bitstring) = (if v_1071 then (CH(o_cr_6,o_offer_15),o_cr_6,kex_data_8,psk_data_30) else fail-any) in
                                        {4982}out(io, client_hello'_14);
                                        {4983}let cur_log_OU1_HRR_OU2_5: bitstring = (cur_log_OU1_HRR_1,client_hello'_14) in
                                        {4984}in(io, server_hello'_20: msg);
                                        {4985}let SH(sr'_14: bytes32,mode'_14: params) = server_hello'_20 in
                                        (
                                            {4986}if (sr'_14 = B32(HRR24,HRR8)) then
                                                {4987}out(io, unexpected_message)
                                            else
                                                {4988}let (x_344: bitstring,g_28: group) = kex_data'_14 in
                                                {4989}let (psk_offer_25: preSharedKey,id_offer_25: identityPsk,es_offer_25: bitstring,is_safe_offer_25: bool) = psk_data'_21 in
                                                {4990}event Client_PSKOffer(@6_id_client,psk_offer_25,id_offer_25,is_safe_offer_25);
                                                {4991}event Client_Rand_client(@6_id_client,cr'_14);
                                                {4992}event Client_DH_client(@6_id_client,dh_pub(g_28,x_344));
                                                {4993}event Client_server_domain(@6_id_client,o_dom);
                                                {4994}let SH(sr_36: bytes32,mode_30: params) = server_hello'_20 in
                                                {4995}event Client_Rand_server(@6_id_client,sr_36);
                                                {4996}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_28,gy_26: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_53: preSharedKeyExt) = mode_30 in
                                                (
                                                    {4997}let cur_log2_57: bitstring = (cur_log_OU1_HRR_OU2_5,server_hello'_20) in
                                                    {4998}event Client_DH_server(@6_id_client,gy_26);
                                                    {4999}let v_1072: bool = (psk_ext_53 = empty_psk_ext) in
                                                    {5000}let psk_126: preSharedKey = (if v_1072 then NoPsk else caught-fail) in
                                                    {5001}let s_109: bitstring = (if v_1072 then zero else caught-fail) in
                                                    {5002}let k_103: bitstring = (if v_1072 then catch-fail(psk2b(psk_126)) else caught-fail) in
                                                    {5003}let v_1073: bool = not-caught-fail(k_103) in
                                                    {5004}let early_secret_82: bitstring = (if v_1072 then catch-fail((if v_1073 then hmac(@6_tls_h,s_109,k_103) else fail-any)) else caught-fail) in
                                                    {5005}let v_1074: bool = not-caught-fail(early_secret_82) in
                                                    {5006}let l_305: label = (if v_1074 then tls13_ext_res_binder else caught-fail) in
                                                    {5007}let m_107: bitstring = (if v_1074 then zero else caught-fail) in
                                                    {5008}let h_295: bitstring = (if v_1074 then catch-fail(hash(@6_tls_h,m_107)) else caught-fail) in
                                                    {5009}let v_1075: bool = not-caught-fail(h_295) in
                                                    {5010}let x_345: bitstring = (if v_1075 then (l_305,h_295) else caught-fail) in
                                                    {5011}let binder_key_55: bitstring = (if v_1074 then catch-fail((if v_1075 then hmac(@6_tls_h,early_secret_82,x_345) else fail-any)) else caught-fail) in
                                                    {5012}let v_1076: bool = not-caught-fail(binder_key_55) in
                                                    {5013}let v_1077: bitstring = (if v_1072 then catch-fail((if v_1074 then (if v_1076 then (early_secret_82,binder_key_55) else fail-any) else fail-any)) else caught-fail) in
                                                    {5014}let v_1078: bool = (not-caught-fail(v_1077) && success?(1-proj-2-tuple(v_1077))) in
                                                    {5015}let kb_55: mac_key = (if v_1078 then 2-proj-2-tuple(v_1077) else caught-fail) in
                                                    {5016}let es_83: bitstring = (if v_1078 then 1-proj-2-tuple(v_1077) else caught-fail) in
                                                    {5017}let v_1079: bitstring = (if not(v_1072) then catch-fail(psk_data'_21) else caught-fail) in
                                                    {5018}let v_1080: bool = (not-caught-fail(v_1079) && success?(1-proj-4-tuple(v_1079))) in
                                                    {5019}let is_safe_52: bool = (if v_1080 then 4-proj-4-tuple(v_1079) else caught-fail) in
                                                    {5020}let es_84: bitstring = (if v_1080 then 3-proj-4-tuple(v_1079) else caught-fail) in
                                                    {5021}let id_62: identityPsk = (if v_1080 then 2-proj-4-tuple(v_1079) else caught-fail) in
                                                    {5022}let psk_127: preSharedKey = (if v_1080 then 1-proj-4-tuple(v_1079) else caught-fail) in
                                                    {5023}let (psk_128: preSharedKey,early_secret_83: bitstring,valid_25: bool,safe_psk_31: bool) = (if v_1072 then (if v_1078 then (NoPsk,es_83,true,false) else fail-any) else (if v_1080 then (psk_127,es_84,((psk_127 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_53)),is_safe_52) else fail-any)) in
                                                    {5024}event Client_PSKChoosen(@6_id_client,psk_128,safe_psk_31);
                                                    {5025}if valid_25 then
                                                    (
                                                        {5026}let gxy_51: element = catch-fail(dh_decap_fun(g_28,gy_26,x_344)) in
                                                        {5027}let v_1081: bool = not-caught-fail(gxy_51) in
                                                        {5028}new s_110[]: seed;
                                                        {5029}let gxy_52: element = (if v_1081 then gxy_51 else dh_f(s_110)) in
                                                        {5030}event Client_DH_gxy(@6_id_client,gxy_52);
                                                        {5031}let l_306: label = tls13_derived in
                                                        {5032}let m_108: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {5033}let v_1082: bool = not-caught-fail(m_108) in
                                                        {5034}let h_296: bitstring = (if v_1082 then catch-fail(hash(@6_tls_h,m_108)) else caught-fail) in
                                                        {5035}let v_1083: bool = not-caught-fail(h_296) in
                                                        {5036}let x_346: bitstring = (if v_1083 then (l_306,h_296) else caught-fail) in
                                                        {5037}let extra_58: bitstring = catch-fail((if v_1082 then (if v_1083 then hmac(@6_tls_h,early_secret_83,x_346) else fail-any) else fail-any)) in
                                                        {5038}let v_1084: bool = not-caught-fail(extra_58) in
                                                        {5039}let handshake_secret_26: bitstring = (if v_1084 then hmac(@6_tls_h,extra_58,gxy_52) else fail-any) in
                                                        {5040}let l_307: label = tls13_derived in
                                                        {5041}let m_109: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {5042}let v_1085: bool = not-caught-fail(m_109) in
                                                        {5043}let h_297: bitstring = (if v_1085 then catch-fail(hash(@6_tls_h,m_109)) else caught-fail) in
                                                        {5044}let v_1086: bool = not-caught-fail(h_297) in
                                                        {5045}let x_347: bitstring = (if v_1086 then (l_307,h_297) else caught-fail) in
                                                        {5046}let extra_59: bitstring = catch-fail((if v_1085 then (if v_1086 then hmac(@6_tls_h,handshake_secret_26,x_347) else fail-any) else fail-any)) in
                                                        {5047}let v_1087: bool = not-caught-fail(extra_59) in
                                                        {5048}let k_104: bitstring = (if v_1087 then zero else caught-fail) in
                                                        {5049}let master_secret_59: bitstring = (if v_1087 then catch-fail(hmac(@6_tls_h,handshake_secret_26,k_104)) else caught-fail) in
                                                        {5050}let v_1088: bool = not-caught-fail(master_secret_59) in
                                                        {5051}let l_308: label = (if v_1088 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {5052}let h_298: bitstring = (if v_1088 then catch-fail(hash(@6_tls_h,cur_log2_57)) else caught-fail) in
                                                        {5053}let v_1089: bool = not-caught-fail(h_298) in
                                                        {5054}let x_348: bitstring = (if v_1089 then (l_308,h_298) else caught-fail) in
                                                        {5055}let client_hts_26: bitstring = (if v_1088 then catch-fail((if v_1089 then hmac(@6_tls_h,handshake_secret_26,x_348) else fail-any)) else caught-fail) in
                                                        {5056}let v_1090: bool = not-caught-fail(client_hts_26) in
                                                        {5057}let l_309: label = (if v_1090 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {5058}let h_299: bitstring = (if v_1090 then catch-fail(hash(@6_tls_h,cur_log2_57)) else caught-fail) in
                                                        {5059}let v_1091: bool = not-caught-fail(h_299) in
                                                        {5060}let x_349: bitstring = (if v_1091 then (l_309,h_299) else caught-fail) in
                                                        {5061}let server_hts_26: bitstring = (if v_1090 then catch-fail((if v_1091 then hmac(@6_tls_h,handshake_secret_26,x_349) else fail-any)) else caught-fail) in
                                                        {5062}let v_1092: bool = not-caught-fail(server_hts_26) in
                                                        {5063}let l_310: label = (if v_1092 then tls13_key else caught-fail) in
                                                        {5064}let h_300: bitstring = (if v_1092 then zero else caught-fail) in
                                                        {5065}let x_350: bitstring = (if v_1092 then (l_310,h_300) else caught-fail) in
                                                        {5066}let client_wkh_26: bitstring = (if v_1092 then catch-fail(hmac(@6_tls_h,client_hts_26,x_350)) else caught-fail) in
                                                        {5067}let v_1093: bool = not-caught-fail(client_wkh_26) in
                                                        {5068}let l_311: label = (if v_1093 then tls13_key else caught-fail) in
                                                        {5069}let h_301: bitstring = (if v_1093 then zero else caught-fail) in
                                                        {5070}let x_351: bitstring = (if v_1093 then (l_311,h_301) else caught-fail) in
                                                        {5071}let server_wkh_26: bitstring = (if v_1093 then catch-fail(hmac(@6_tls_h,server_hts_26,x_351)) else caught-fail) in
                                                        {5072}let v_1094: bool = not-caught-fail(server_wkh_26) in
                                                        {5073}let l_312: label = (if v_1094 then tls13_finished else caught-fail) in
                                                        {5074}let h_302: bitstring = (if v_1094 then zero else caught-fail) in
                                                        {5075}let x_352: bitstring = (if v_1094 then (l_312,h_302) else caught-fail) in
                                                        {5076}let client_fk_26: bitstring = (if v_1094 then catch-fail(hmac(@6_tls_h,client_hts_26,x_352)) else caught-fail) in
                                                        {5077}let v_1095: bool = not-caught-fail(client_fk_26) in
                                                        {5078}let l_313: label = (if v_1095 then tls13_finished else caught-fail) in
                                                        {5079}let h_303: bitstring = (if v_1095 then zero else caught-fail) in
                                                        {5080}let x_353: bitstring = (if v_1095 then (l_313,h_303) else caught-fail) in
                                                        {5081}let server_fk_26: bitstring = (if v_1095 then catch-fail(hmac(@6_tls_h,server_hts_26,x_353)) else caught-fail) in
                                                        {5082}let v_1096: bool = not-caught-fail(server_fk_26) in
                                                        {5083}let (master_secret_60: bitstring,chk_33: aead_key,shk_32: aead_key,cfin_33: mac_key,sfin_32: mac_key) = (if v_1087 then (if v_1088 then (if v_1090 then (if v_1092 then (if v_1093 then (if v_1094 then (if v_1095 then (if v_1096 then (master_secret_59,client_wkh_26,server_wkh_26,client_fk_26,server_fk_26) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {5084}event Client_chk(@6_id_client,chk_33);
                                                        {5085}event Client_shk(@6_id_client,shk_32);
                                                        {5086}event Client_cfin(@6_id_client,cfin_33);
                                                        {5087}event Client_sfin(@6_id_client,sfin_32);
                                                        {5088}in(io, enc_ee_msg_25: bitstring);
                                                        {5089}let ee_msg_26: msg = aead_dec(@6_tls_a,shk_32,0,zero,enc_ee_msg_25) in
                                                        {5090}let EE(ech_ee_25: echExt,extra_ee_25: extraExt) = ee_msg_26 in
                                                        {5091}let cur_log2_58: bitstring = (cur_log2_57,ee_msg_26) in
                                                        {5092}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_14,sr_36,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_128,safe_psk_31,@6_comp_psk,master_secret_60,chk_33,0,shk_32,1,cfin_33,sfin_32,cur_log2_58)))
                                                    )
                                                    else
                                                        {5093}out(io, illegal_parameter)
                                                )
                                                else
                                                    {5094}out(io, illegal_parameter)
                                        )
                                        else
                                            {5095}out(io, unexpected_message)
                                )
                                else
                                    {5097}let psk_129: preSharedKey = NoPsk in
                                    {5098}let s_111: bitstring = zero in
                                    {5099}let k_105: bitstring = catch-fail(psk2b(psk_129)) in
                                    {5100}let v_1097: bool = not-caught-fail(k_105) in
                                    {5101}let early_secret_84: bitstring = catch-fail((if v_1097 then hmac(@6_tls_h,s_111,k_105) else fail-any)) in
                                    {5102}let v_1098: bool = not-caught-fail(early_secret_84) in
                                    {5103}let l_314: label = (if v_1098 then tls13_ext_res_binder else caught-fail) in
                                    {5104}let m_110: bitstring = (if v_1098 then zero else caught-fail) in
                                    {5105}let h_304: bitstring = (if v_1098 then catch-fail(hash(@6_tls_h,m_110)) else caught-fail) in
                                    {5106}let v_1099: bool = not-caught-fail(h_304) in
                                    {5107}let x_354: bitstring = (if v_1099 then (l_314,h_304) else caught-fail) in
                                    {5108}let binder_key_56: bitstring = (if v_1098 then catch-fail((if v_1099 then hmac(@6_tls_h,early_secret_84,x_354) else fail-any)) else caught-fail) in
                                    {5109}let v_1100: bool = not-caught-fail(binder_key_56) in
                                    {5110}let v_1101: bitstring = catch-fail((if v_1098 then (if v_1100 then (early_secret_84,binder_key_56) else fail-any) else fail-any)) in
                                    {5111}let v_1102: bool = (not-caught-fail(v_1101) && success?(1-proj-2-tuple(v_1101))) in
                                    {5112}let kb_56: mac_key = (if v_1102 then 2-proj-2-tuple(v_1101) else caught-fail) in
                                    {5113}let es_85: bitstring = (if v_1102 then 1-proj-2-tuple(v_1101) else caught-fail) in
                                    {5114}let v_1103: bitstring = catch-fail((if v_1102 then (empty_psk_ext,(NoPsk,zero,es_85,false)) else fail-any)) in
                                    {5115}let v_1104: bool = (not-caught-fail(v_1103) && success?(1-proj-2-tuple(v_1103))) in
                                    {5116}let psk_data_31: bitstring = (if v_1104 then 2-proj-2-tuple(v_1103) else caught-fail) in
                                    {5117}let psk_ext_54: preSharedKeyExt = (if v_1104 then 1-proj-2-tuple(v_1103) else caught-fail) in
                                    {5118}let o_offer_16: params = (if v_1104 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_4,SNI(o_dom_5),o_ech_ext_6,empty_extra_ext,psk_ext_54) else caught-fail) in
                                    {5119}let (client_hello'_15: msg,cr'_15: bytes32,kex_data'_15: bitstring,psk_data'_22: bitstring) = (if v_1104 then (CH(o_cr_6,o_offer_16),o_cr_6,kex_data_8,psk_data_31) else fail-any) in
                                    {5120}out(io, client_hello'_15);
                                    {5121}let cur_log_OU1_HRR_OU2_6: bitstring = (cur_log_OU1_HRR_1,client_hello'_15) in
                                    {5122}in(io, server_hello'_21: msg);
                                    {5123}let SH(sr'_15: bytes32,mode'_15: params) = server_hello'_21 in
                                    (
                                        {5124}if (sr'_15 = B32(HRR24,HRR8)) then
                                            {5125}out(io, unexpected_message)
                                        else
                                            {5126}let (x_355: bitstring,g_29: group) = kex_data'_15 in
                                            {5127}let (psk_offer_26: preSharedKey,id_offer_26: identityPsk,es_offer_26: bitstring,is_safe_offer_26: bool) = psk_data'_22 in
                                            {5128}event Client_PSKOffer(@6_id_client,psk_offer_26,id_offer_26,is_safe_offer_26);
                                            {5129}event Client_Rand_client(@6_id_client,cr'_15);
                                            {5130}event Client_DH_client(@6_id_client,dh_pub(g_29,x_355));
                                            {5131}event Client_server_domain(@6_id_client,o_dom);
                                            {5132}let SH(sr_37: bytes32,mode_31: params) = server_hello'_21 in
                                            {5133}event Client_Rand_server(@6_id_client,sr_37);
                                            {5134}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_29,gy_27: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_55: preSharedKeyExt) = mode_31 in
                                            (
                                                {5135}let cur_log2_59: bitstring = (cur_log_OU1_HRR_OU2_6,server_hello'_21) in
                                                {5136}event Client_DH_server(@6_id_client,gy_27);
                                                {5137}let v_1105: bool = (psk_ext_55 = empty_psk_ext) in
                                                {5138}let psk_130: preSharedKey = (if v_1105 then NoPsk else caught-fail) in
                                                {5139}let s_112: bitstring = (if v_1105 then zero else caught-fail) in
                                                {5140}let k_106: bitstring = (if v_1105 then catch-fail(psk2b(psk_130)) else caught-fail) in
                                                {5141}let v_1106: bool = not-caught-fail(k_106) in
                                                {5142}let early_secret_85: bitstring = (if v_1105 then catch-fail((if v_1106 then hmac(@6_tls_h,s_112,k_106) else fail-any)) else caught-fail) in
                                                {5143}let v_1107: bool = not-caught-fail(early_secret_85) in
                                                {5144}let l_315: label = (if v_1107 then tls13_ext_res_binder else caught-fail) in
                                                {5145}let m_111: bitstring = (if v_1107 then zero else caught-fail) in
                                                {5146}let h_305: bitstring = (if v_1107 then catch-fail(hash(@6_tls_h,m_111)) else caught-fail) in
                                                {5147}let v_1108: bool = not-caught-fail(h_305) in
                                                {5148}let x_356: bitstring = (if v_1108 then (l_315,h_305) else caught-fail) in
                                                {5149}let binder_key_57: bitstring = (if v_1107 then catch-fail((if v_1108 then hmac(@6_tls_h,early_secret_85,x_356) else fail-any)) else caught-fail) in
                                                {5150}let v_1109: bool = not-caught-fail(binder_key_57) in
                                                {5151}let v_1110: bitstring = (if v_1105 then catch-fail((if v_1107 then (if v_1109 then (early_secret_85,binder_key_57) else fail-any) else fail-any)) else caught-fail) in
                                                {5152}let v_1111: bool = (not-caught-fail(v_1110) && success?(1-proj-2-tuple(v_1110))) in
                                                {5153}let kb_57: mac_key = (if v_1111 then 2-proj-2-tuple(v_1110) else caught-fail) in
                                                {5154}let es_86: bitstring = (if v_1111 then 1-proj-2-tuple(v_1110) else caught-fail) in
                                                {5155}let v_1112: bitstring = (if not(v_1105) then catch-fail(psk_data'_22) else caught-fail) in
                                                {5156}let v_1113: bool = (not-caught-fail(v_1112) && success?(1-proj-4-tuple(v_1112))) in
                                                {5157}let is_safe_53: bool = (if v_1113 then 4-proj-4-tuple(v_1112) else caught-fail) in
                                                {5158}let es_87: bitstring = (if v_1113 then 3-proj-4-tuple(v_1112) else caught-fail) in
                                                {5159}let id_63: identityPsk = (if v_1113 then 2-proj-4-tuple(v_1112) else caught-fail) in
                                                {5160}let psk_131: preSharedKey = (if v_1113 then 1-proj-4-tuple(v_1112) else caught-fail) in
                                                {5161}let (psk_132: preSharedKey,early_secret_86: bitstring,valid_26: bool,safe_psk_32: bool) = (if v_1105 then (if v_1111 then (NoPsk,es_86,true,false) else fail-any) else (if v_1113 then (psk_131,es_87,((psk_131 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_55)),is_safe_53) else fail-any)) in
                                                {5162}event Client_PSKChoosen(@6_id_client,psk_132,safe_psk_32);
                                                {5163}if valid_26 then
                                                (
                                                    {5164}let gxy_53: element = catch-fail(dh_decap_fun(g_29,gy_27,x_355)) in
                                                    {5165}let v_1114: bool = not-caught-fail(gxy_53) in
                                                    {5166}new s_113[]: seed;
                                                    {5167}let gxy_54: element = (if v_1114 then gxy_53 else dh_f(s_113)) in
                                                    {5168}event Client_DH_gxy(@6_id_client,gxy_54);
                                                    {5169}let l_316: label = tls13_derived in
                                                    {5170}let m_112: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {5171}let v_1115: bool = not-caught-fail(m_112) in
                                                    {5172}let h_306: bitstring = (if v_1115 then catch-fail(hash(@6_tls_h,m_112)) else caught-fail) in
                                                    {5173}let v_1116: bool = not-caught-fail(h_306) in
                                                    {5174}let x_357: bitstring = (if v_1116 then (l_316,h_306) else caught-fail) in
                                                    {5175}let extra_60: bitstring = catch-fail((if v_1115 then (if v_1116 then hmac(@6_tls_h,early_secret_86,x_357) else fail-any) else fail-any)) in
                                                    {5176}let v_1117: bool = not-caught-fail(extra_60) in
                                                    {5177}let handshake_secret_27: bitstring = (if v_1117 then hmac(@6_tls_h,extra_60,gxy_54) else fail-any) in
                                                    {5178}let l_317: label = tls13_derived in
                                                    {5179}let m_113: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {5180}let v_1118: bool = not-caught-fail(m_113) in
                                                    {5181}let h_307: bitstring = (if v_1118 then catch-fail(hash(@6_tls_h,m_113)) else caught-fail) in
                                                    {5182}let v_1119: bool = not-caught-fail(h_307) in
                                                    {5183}let x_358: bitstring = (if v_1119 then (l_317,h_307) else caught-fail) in
                                                    {5184}let extra_61: bitstring = catch-fail((if v_1118 then (if v_1119 then hmac(@6_tls_h,handshake_secret_27,x_358) else fail-any) else fail-any)) in
                                                    {5185}let v_1120: bool = not-caught-fail(extra_61) in
                                                    {5186}let k_107: bitstring = (if v_1120 then zero else caught-fail) in
                                                    {5187}let master_secret_61: bitstring = (if v_1120 then catch-fail(hmac(@6_tls_h,handshake_secret_27,k_107)) else caught-fail) in
                                                    {5188}let v_1121: bool = not-caught-fail(master_secret_61) in
                                                    {5189}let l_318: label = (if v_1121 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {5190}let h_308: bitstring = (if v_1121 then catch-fail(hash(@6_tls_h,cur_log2_59)) else caught-fail) in
                                                    {5191}let v_1122: bool = not-caught-fail(h_308) in
                                                    {5192}let x_359: bitstring = (if v_1122 then (l_318,h_308) else caught-fail) in
                                                    {5193}let client_hts_27: bitstring = (if v_1121 then catch-fail((if v_1122 then hmac(@6_tls_h,handshake_secret_27,x_359) else fail-any)) else caught-fail) in
                                                    {5194}let v_1123: bool = not-caught-fail(client_hts_27) in
                                                    {5195}let l_319: label = (if v_1123 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {5196}let h_309: bitstring = (if v_1123 then catch-fail(hash(@6_tls_h,cur_log2_59)) else caught-fail) in
                                                    {5197}let v_1124: bool = not-caught-fail(h_309) in
                                                    {5198}let x_360: bitstring = (if v_1124 then (l_319,h_309) else caught-fail) in
                                                    {5199}let server_hts_27: bitstring = (if v_1123 then catch-fail((if v_1124 then hmac(@6_tls_h,handshake_secret_27,x_360) else fail-any)) else caught-fail) in
                                                    {5200}let v_1125: bool = not-caught-fail(server_hts_27) in
                                                    {5201}let l_320: label = (if v_1125 then tls13_key else caught-fail) in
                                                    {5202}let h_310: bitstring = (if v_1125 then zero else caught-fail) in
                                                    {5203}let x_361: bitstring = (if v_1125 then (l_320,h_310) else caught-fail) in
                                                    {5204}let client_wkh_27: bitstring = (if v_1125 then catch-fail(hmac(@6_tls_h,client_hts_27,x_361)) else caught-fail) in
                                                    {5205}let v_1126: bool = not-caught-fail(client_wkh_27) in
                                                    {5206}let l_321: label = (if v_1126 then tls13_key else caught-fail) in
                                                    {5207}let h_311: bitstring = (if v_1126 then zero else caught-fail) in
                                                    {5208}let x_362: bitstring = (if v_1126 then (l_321,h_311) else caught-fail) in
                                                    {5209}let server_wkh_27: bitstring = (if v_1126 then catch-fail(hmac(@6_tls_h,server_hts_27,x_362)) else caught-fail) in
                                                    {5210}let v_1127: bool = not-caught-fail(server_wkh_27) in
                                                    {5211}let l_322: label = (if v_1127 then tls13_finished else caught-fail) in
                                                    {5212}let h_312: bitstring = (if v_1127 then zero else caught-fail) in
                                                    {5213}let x_363: bitstring = (if v_1127 then (l_322,h_312) else caught-fail) in
                                                    {5214}let client_fk_27: bitstring = (if v_1127 then catch-fail(hmac(@6_tls_h,client_hts_27,x_363)) else caught-fail) in
                                                    {5215}let v_1128: bool = not-caught-fail(client_fk_27) in
                                                    {5216}let l_323: label = (if v_1128 then tls13_finished else caught-fail) in
                                                    {5217}let h_313: bitstring = (if v_1128 then zero else caught-fail) in
                                                    {5218}let x_364: bitstring = (if v_1128 then (l_323,h_313) else caught-fail) in
                                                    {5219}let server_fk_27: bitstring = (if v_1128 then catch-fail(hmac(@6_tls_h,server_hts_27,x_364)) else caught-fail) in
                                                    {5220}let v_1129: bool = not-caught-fail(server_fk_27) in
                                                    {5221}let (master_secret_62: bitstring,chk_34: aead_key,shk_33: aead_key,cfin_34: mac_key,sfin_33: mac_key) = (if v_1120 then (if v_1121 then (if v_1123 then (if v_1125 then (if v_1126 then (if v_1127 then (if v_1128 then (if v_1129 then (master_secret_61,client_wkh_27,server_wkh_27,client_fk_27,server_fk_27) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {5222}event Client_chk(@6_id_client,chk_34);
                                                    {5223}event Client_shk(@6_id_client,shk_33);
                                                    {5224}event Client_cfin(@6_id_client,cfin_34);
                                                    {5225}event Client_sfin(@6_id_client,sfin_33);
                                                    {5226}in(io, enc_ee_msg_26: bitstring);
                                                    {5227}let ee_msg_27: msg = aead_dec(@6_tls_a,shk_33,0,zero,enc_ee_msg_26) in
                                                    {5228}let EE(ech_ee_26: echExt,extra_ee_26: extraExt) = ee_msg_27 in
                                                    {5229}let cur_log2_60: bitstring = (cur_log2_59,ee_msg_27) in
                                                    {5230}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_15,sr_37,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_132,safe_psk_32,@6_comp_psk,master_secret_62,chk_34,0,shk_33,1,cfin_34,sfin_33,cur_log2_60)))
                                                )
                                                else
                                                    {5231}out(io, illegal_parameter)
                                            )
                                            else
                                                {5232}out(io, illegal_parameter)
                                    )
                                    else
                                        {5233}out(io, unexpected_message)
                            )
                            else
                                {5234}let psk_133: preSharedKey = NoPsk in
                                {5235}let s_114: bitstring = zero in
                                {5236}let k_108: bitstring = catch-fail(psk2b(psk_133)) in
                                {5237}let v_1130: bool = not-caught-fail(k_108) in
                                {5238}let early_secret_87: bitstring = catch-fail((if v_1130 then hmac(@6_tls_h,s_114,k_108) else fail-any)) in
                                {5239}let v_1131: bool = not-caught-fail(early_secret_87) in
                                {5240}let l_324: label = (if v_1131 then tls13_ext_res_binder else caught-fail) in
                                {5241}let m_114: bitstring = (if v_1131 then zero else caught-fail) in
                                {5242}let h_314: bitstring = (if v_1131 then catch-fail(hash(@6_tls_h,m_114)) else caught-fail) in
                                {5243}let v_1132: bool = not-caught-fail(h_314) in
                                {5244}let x_365: bitstring = (if v_1132 then (l_324,h_314) else caught-fail) in
                                {5245}let binder_key_58: bitstring = (if v_1131 then catch-fail((if v_1132 then hmac(@6_tls_h,early_secret_87,x_365) else fail-any)) else caught-fail) in
                                {5246}let v_1133: bool = not-caught-fail(binder_key_58) in
                                {5247}let v_1134: bitstring = catch-fail((if v_1131 then (if v_1133 then (early_secret_87,binder_key_58) else fail-any) else fail-any)) in
                                {5248}let v_1135: bool = (not-caught-fail(v_1134) && success?(1-proj-2-tuple(v_1134))) in
                                {5249}let kb_58: mac_key = (if v_1135 then 2-proj-2-tuple(v_1134) else caught-fail) in
                                {5250}let es_88: bitstring = (if v_1135 then 1-proj-2-tuple(v_1134) else caught-fail) in
                                {5251}let v_1136: preSharedKeyExt = (if v_1135 then catch-fail(o_psk_ext_6) else caught-fail) in
                                {5252}let v_1137: bool = (not-caught-fail(v_1136) && success?(1-proj-client_psk_ext(v_1136))) in
                                {5253}let fake_binder_9: bitstring = (if v_1137 then 2-proj-client_psk_ext(v_1136) else caught-fail) in
                                {5254}let fake_id_9: identityPsk = (if v_1137 then 1-proj-client_psk_ext(v_1136) else caught-fail) in
                                {5255}new fake_binder'_1[]: bitstring;
                                {5256}let v_1138: bitstring = catch-fail((if v_1135 then (if v_1137 then (client_psk_ext(fake_id_9,fake_binder'_1),(NoPsk,zero,es_88,false)) else (empty_psk_ext,(NoPsk,zero,es_88,false))) else fail-any)) in
                                {5257}let v_1139: bool = (not-caught-fail(v_1138) && success?(1-proj-2-tuple(v_1138))) in
                                {5258}let psk_data_32: bitstring = (if v_1139 then 2-proj-2-tuple(v_1138) else caught-fail) in
                                {5259}let psk_ext_56: preSharedKeyExt = (if v_1139 then 1-proj-2-tuple(v_1138) else caught-fail) in
                                {5260}let o_offer_17: params = (if v_1139 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_4,SNI(o_dom_5),o_ech_ext_6,empty_extra_ext,psk_ext_56) else caught-fail) in
                                {5261}let (client_hello'_16: msg,cr'_16: bytes32,kex_data'_16: bitstring,psk_data'_23: bitstring) = (if v_1139 then (CH(o_cr_6,o_offer_17),o_cr_6,kex_data_8,psk_data_32) else fail-any) in
                                {5262}out(io, client_hello'_16);
                                {5263}let cur_log_OU1_HRR_OU2_7: bitstring = (cur_log_OU1_HRR_1,client_hello'_16) in
                                {5264}in(io, server_hello'_22: msg);
                                {5265}let SH(sr'_16: bytes32,mode'_16: params) = server_hello'_22 in
                                (
                                    {5266}if (sr'_16 = B32(HRR24,HRR8)) then
                                        {5267}out(io, unexpected_message)
                                    else
                                        {5268}let (x_366: bitstring,g_30: group) = kex_data'_16 in
                                        {5269}let (psk_offer_27: preSharedKey,id_offer_27: identityPsk,es_offer_27: bitstring,is_safe_offer_27: bool) = psk_data'_23 in
                                        {5270}event Client_PSKOffer(@6_id_client,psk_offer_27,id_offer_27,is_safe_offer_27);
                                        {5271}event Client_Rand_client(@6_id_client,cr'_16);
                                        {5272}event Client_DH_client(@6_id_client,dh_pub(g_30,x_366));
                                        {5273}event Client_server_domain(@6_id_client,o_dom);
                                        {5274}let SH(sr_38: bytes32,mode_32: params) = server_hello'_22 in
                                        {5275}event Client_Rand_server(@6_id_client,sr_38);
                                        {5276}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_30,gy_28: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_57: preSharedKeyExt) = mode_32 in
                                        (
                                            {5277}let cur_log2_61: bitstring = (cur_log_OU1_HRR_OU2_7,server_hello'_22) in
                                            {5278}event Client_DH_server(@6_id_client,gy_28);
                                            {5279}let v_1140: bool = (psk_ext_57 = empty_psk_ext) in
                                            {5280}let psk_134: preSharedKey = (if v_1140 then NoPsk else caught-fail) in
                                            {5281}let s_115: bitstring = (if v_1140 then zero else caught-fail) in
                                            {5282}let k_109: bitstring = (if v_1140 then catch-fail(psk2b(psk_134)) else caught-fail) in
                                            {5283}let v_1141: bool = not-caught-fail(k_109) in
                                            {5284}let early_secret_88: bitstring = (if v_1140 then catch-fail((if v_1141 then hmac(@6_tls_h,s_115,k_109) else fail-any)) else caught-fail) in
                                            {5285}let v_1142: bool = not-caught-fail(early_secret_88) in
                                            {5286}let l_325: label = (if v_1142 then tls13_ext_res_binder else caught-fail) in
                                            {5287}let m_115: bitstring = (if v_1142 then zero else caught-fail) in
                                            {5288}let h_315: bitstring = (if v_1142 then catch-fail(hash(@6_tls_h,m_115)) else caught-fail) in
                                            {5289}let v_1143: bool = not-caught-fail(h_315) in
                                            {5290}let x_367: bitstring = (if v_1143 then (l_325,h_315) else caught-fail) in
                                            {5291}let binder_key_59: bitstring = (if v_1142 then catch-fail((if v_1143 then hmac(@6_tls_h,early_secret_88,x_367) else fail-any)) else caught-fail) in
                                            {5292}let v_1144: bool = not-caught-fail(binder_key_59) in
                                            {5293}let v_1145: bitstring = (if v_1140 then catch-fail((if v_1142 then (if v_1144 then (early_secret_88,binder_key_59) else fail-any) else fail-any)) else caught-fail) in
                                            {5294}let v_1146: bool = (not-caught-fail(v_1145) && success?(1-proj-2-tuple(v_1145))) in
                                            {5295}let kb_59: mac_key = (if v_1146 then 2-proj-2-tuple(v_1145) else caught-fail) in
                                            {5296}let es_89: bitstring = (if v_1146 then 1-proj-2-tuple(v_1145) else caught-fail) in
                                            {5297}let v_1147: bitstring = (if not(v_1140) then catch-fail(psk_data'_23) else caught-fail) in
                                            {5298}let v_1148: bool = (not-caught-fail(v_1147) && success?(1-proj-4-tuple(v_1147))) in
                                            {5299}let is_safe_54: bool = (if v_1148 then 4-proj-4-tuple(v_1147) else caught-fail) in
                                            {5300}let es_90: bitstring = (if v_1148 then 3-proj-4-tuple(v_1147) else caught-fail) in
                                            {5301}let id_64: identityPsk = (if v_1148 then 2-proj-4-tuple(v_1147) else caught-fail) in
                                            {5302}let psk_135: preSharedKey = (if v_1148 then 1-proj-4-tuple(v_1147) else caught-fail) in
                                            {5303}let (psk_136: preSharedKey,early_secret_89: bitstring,valid_27: bool,safe_psk_33: bool) = (if v_1140 then (if v_1146 then (NoPsk,es_89,true,false) else fail-any) else (if v_1148 then (psk_135,es_90,((psk_135 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_57)),is_safe_54) else fail-any)) in
                                            {5304}event Client_PSKChoosen(@6_id_client,psk_136,safe_psk_33);
                                            {5305}if valid_27 then
                                            (
                                                {5306}let gxy_55: element = catch-fail(dh_decap_fun(g_30,gy_28,x_366)) in
                                                {5307}let v_1149: bool = not-caught-fail(gxy_55) in
                                                {5308}new s_116[]: seed;
                                                {5309}let gxy_56: element = (if v_1149 then gxy_55 else dh_f(s_116)) in
                                                {5310}event Client_DH_gxy(@6_id_client,gxy_56);
                                                {5311}let l_326: label = tls13_derived in
                                                {5312}let m_116: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                {5313}let v_1150: bool = not-caught-fail(m_116) in
                                                {5314}let h_316: bitstring = (if v_1150 then catch-fail(hash(@6_tls_h,m_116)) else caught-fail) in
                                                {5315}let v_1151: bool = not-caught-fail(h_316) in
                                                {5316}let x_368: bitstring = (if v_1151 then (l_326,h_316) else caught-fail) in
                                                {5317}let extra_62: bitstring = catch-fail((if v_1150 then (if v_1151 then hmac(@6_tls_h,early_secret_89,x_368) else fail-any) else fail-any)) in
                                                {5318}let v_1152: bool = not-caught-fail(extra_62) in
                                                {5319}let handshake_secret_28: bitstring = (if v_1152 then hmac(@6_tls_h,extra_62,gxy_56) else fail-any) in
                                                {5320}let l_327: label = tls13_derived in
                                                {5321}let m_117: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                {5322}let v_1153: bool = not-caught-fail(m_117) in
                                                {5323}let h_317: bitstring = (if v_1153 then catch-fail(hash(@6_tls_h,m_117)) else caught-fail) in
                                                {5324}let v_1154: bool = not-caught-fail(h_317) in
                                                {5325}let x_369: bitstring = (if v_1154 then (l_327,h_317) else caught-fail) in
                                                {5326}let extra_63: bitstring = catch-fail((if v_1153 then (if v_1154 then hmac(@6_tls_h,handshake_secret_28,x_369) else fail-any) else fail-any)) in
                                                {5327}let v_1155: bool = not-caught-fail(extra_63) in
                                                {5328}let k_110: bitstring = (if v_1155 then zero else caught-fail) in
                                                {5329}let master_secret_63: bitstring = (if v_1155 then catch-fail(hmac(@6_tls_h,handshake_secret_28,k_110)) else caught-fail) in
                                                {5330}let v_1156: bool = not-caught-fail(master_secret_63) in
                                                {5331}let l_328: label = (if v_1156 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {5332}let h_318: bitstring = (if v_1156 then catch-fail(hash(@6_tls_h,cur_log2_61)) else caught-fail) in
                                                {5333}let v_1157: bool = not-caught-fail(h_318) in
                                                {5334}let x_370: bitstring = (if v_1157 then (l_328,h_318) else caught-fail) in
                                                {5335}let client_hts_28: bitstring = (if v_1156 then catch-fail((if v_1157 then hmac(@6_tls_h,handshake_secret_28,x_370) else fail-any)) else caught-fail) in
                                                {5336}let v_1158: bool = not-caught-fail(client_hts_28) in
                                                {5337}let l_329: label = (if v_1158 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {5338}let h_319: bitstring = (if v_1158 then catch-fail(hash(@6_tls_h,cur_log2_61)) else caught-fail) in
                                                {5339}let v_1159: bool = not-caught-fail(h_319) in
                                                {5340}let x_371: bitstring = (if v_1159 then (l_329,h_319) else caught-fail) in
                                                {5341}let server_hts_28: bitstring = (if v_1158 then catch-fail((if v_1159 then hmac(@6_tls_h,handshake_secret_28,x_371) else fail-any)) else caught-fail) in
                                                {5342}let v_1160: bool = not-caught-fail(server_hts_28) in
                                                {5343}let l_330: label = (if v_1160 then tls13_key else caught-fail) in
                                                {5344}let h_320: bitstring = (if v_1160 then zero else caught-fail) in
                                                {5345}let x_372: bitstring = (if v_1160 then (l_330,h_320) else caught-fail) in
                                                {5346}let client_wkh_28: bitstring = (if v_1160 then catch-fail(hmac(@6_tls_h,client_hts_28,x_372)) else caught-fail) in
                                                {5347}let v_1161: bool = not-caught-fail(client_wkh_28) in
                                                {5348}let l_331: label = (if v_1161 then tls13_key else caught-fail) in
                                                {5349}let h_321: bitstring = (if v_1161 then zero else caught-fail) in
                                                {5350}let x_373: bitstring = (if v_1161 then (l_331,h_321) else caught-fail) in
                                                {5351}let server_wkh_28: bitstring = (if v_1161 then catch-fail(hmac(@6_tls_h,server_hts_28,x_373)) else caught-fail) in
                                                {5352}let v_1162: bool = not-caught-fail(server_wkh_28) in
                                                {5353}let l_332: label = (if v_1162 then tls13_finished else caught-fail) in
                                                {5354}let h_322: bitstring = (if v_1162 then zero else caught-fail) in
                                                {5355}let x_374: bitstring = (if v_1162 then (l_332,h_322) else caught-fail) in
                                                {5356}let client_fk_28: bitstring = (if v_1162 then catch-fail(hmac(@6_tls_h,client_hts_28,x_374)) else caught-fail) in
                                                {5357}let v_1163: bool = not-caught-fail(client_fk_28) in
                                                {5358}let l_333: label = (if v_1163 then tls13_finished else caught-fail) in
                                                {5359}let h_323: bitstring = (if v_1163 then zero else caught-fail) in
                                                {5360}let x_375: bitstring = (if v_1163 then (l_333,h_323) else caught-fail) in
                                                {5361}let server_fk_28: bitstring = (if v_1163 then catch-fail(hmac(@6_tls_h,server_hts_28,x_375)) else caught-fail) in
                                                {5362}let v_1164: bool = not-caught-fail(server_fk_28) in
                                                {5363}let (master_secret_64: bitstring,chk_35: aead_key,shk_34: aead_key,cfin_35: mac_key,sfin_34: mac_key) = (if v_1155 then (if v_1156 then (if v_1158 then (if v_1160 then (if v_1161 then (if v_1162 then (if v_1163 then (if v_1164 then (master_secret_63,client_wkh_28,server_wkh_28,client_fk_28,server_fk_28) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {5364}event Client_chk(@6_id_client,chk_35);
                                                {5365}event Client_shk(@6_id_client,shk_34);
                                                {5366}event Client_cfin(@6_id_client,cfin_35);
                                                {5367}event Client_sfin(@6_id_client,sfin_34);
                                                {5368}in(io, enc_ee_msg_27: bitstring);
                                                {5369}let ee_msg_28: msg = aead_dec(@6_tls_a,shk_34,0,zero,enc_ee_msg_27) in
                                                {5370}let EE(ech_ee_27: echExt,extra_ee_27: extraExt) = ee_msg_28 in
                                                {5371}let cur_log2_62: bitstring = (cur_log2_61,ee_msg_28) in
                                                {5372}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_16,sr_38,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_136,safe_psk_33,@6_comp_psk,master_secret_64,chk_35,0,shk_34,1,cfin_35,sfin_34,cur_log2_62)))
                                            )
                                            else
                                                {5373}out(io, illegal_parameter)
                                        )
                                        else
                                            {5374}out(io, illegal_parameter)
                                )
                                else
                                    {5375}out(io, unexpected_message)
                    )
                    else
                        {5376}let cur_log_15: bitstring = (zero,i_client_hello_6) in
                        {5377}let sh_modified_8: msg = SH(B32(sr24_3,zero8),mode_25) in
                        {5378}let cur_log_sh_8: bitstring = (cur_log_15,sh_modified_8) in
                        {5379}let transcript_ech_conf_8: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_8)) in
                        {5380}let v_1165: bool = not-caught-fail(transcript_ech_conf_8) in
                        {5381}let s_117: bitstring = (if v_1165 then zero else caught-fail) in
                        {5382}let k_111: bitstring = (if v_1165 then catch-fail(b32_2_b(get_random(i_client_hello_6))) else caught-fail) in
                        {5383}let v_1166: bool = not-caught-fail(k_111) in
                        {5384}let k_112: bitstring = (if v_1165 then catch-fail((if v_1166 then hmac(@6_backend_h,s_117,k_111) else fail-any)) else caught-fail) in
                        {5385}let v_1167: bool = not-caught-fail(k_112) in
                        {5386}let l_334: label = (if v_1167 then ech_accept_confirmation else caught-fail) in
                        {5387}let x_376: bitstring = (if v_1167 then (l_334,cur_log_sh_8) else caught-fail) in
                        {5388}let sr8_10: bytes8 = (if v_1165 then catch-fail(crop_into_bytes8((if v_1167 then hmac(@6_backend_h,k_112,x_376) else fail-any))) else caught-fail) in
                        {5389}let v_1168: bool = not-caught-fail(sr8_10) in
                        {5390}if (B32(sr24_3,sr8_6) = (if v_1165 then (if v_1168 then B32(sr24_3,sr8_10) else fail-any) else fail-any)) then
                        (
                            {5391}event ClientEchAcceptance(@6_id_client,true);
                            {5392}let cur_log_16: bitstring = (zero,i_client_hello_6) in
                            {5393}let (x_377: bitstring,g_31: group) = i_kex_data_3 in
                            {5394}let (psk_offer_28: preSharedKey,id_offer_28: identityPsk,es_offer_28: bitstring,is_safe_offer_28: bool) = psk_data_25 in
                            {5395}event Client_PSKOffer(@6_id_client,psk_offer_28,id_offer_28,is_safe_offer_28);
                            {5396}event Client_Rand_client(@6_id_client,i_cr_3);
                            {5397}event Client_DH_client(@6_id_client,dh_pub(g_31,x_377));
                            {5398}event Client_server_domain(@6_id_client,backend_dom);
                            {5399}let SH(sr_39: bytes32,mode_33: params) = server_hello_5 in
                            {5400}event Client_Rand_server(@6_id_client,sr_39);
                            {5401}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_31,gy_29: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_58: preSharedKeyExt) = mode_33 in
                            (
                                {5402}let cur_log2_63: bitstring = (cur_log_16,server_hello_5) in
                                {5403}event Client_DH_server(@6_id_client,gy_29);
                                {5404}let v_1169: bool = (psk_ext_58 = empty_psk_ext) in
                                {5405}let psk_137: preSharedKey = (if v_1169 then NoPsk else caught-fail) in
                                {5406}let s_118: bitstring = (if v_1169 then zero else caught-fail) in
                                {5407}let k_113: bitstring = (if v_1169 then catch-fail(psk2b(psk_137)) else caught-fail) in
                                {5408}let v_1170: bool = not-caught-fail(k_113) in
                                {5409}let early_secret_90: bitstring = (if v_1169 then catch-fail((if v_1170 then hmac(@6_backend_h,s_118,k_113) else fail-any)) else caught-fail) in
                                {5410}let v_1171: bool = not-caught-fail(early_secret_90) in
                                {5411}let l_335: label = (if v_1171 then tls13_ext_res_binder else caught-fail) in
                                {5412}let m_118: bitstring = (if v_1171 then zero else caught-fail) in
                                {5413}let h_324: bitstring = (if v_1171 then catch-fail(hash(@6_backend_h,m_118)) else caught-fail) in
                                {5414}let v_1172: bool = not-caught-fail(h_324) in
                                {5415}let x_378: bitstring = (if v_1172 then (l_335,h_324) else caught-fail) in
                                {5416}let binder_key_60: bitstring = (if v_1171 then catch-fail((if v_1172 then hmac(@6_backend_h,early_secret_90,x_378) else fail-any)) else caught-fail) in
                                {5417}let v_1173: bool = not-caught-fail(binder_key_60) in
                                {5418}let v_1174: bitstring = (if v_1169 then catch-fail((if v_1171 then (if v_1173 then (early_secret_90,binder_key_60) else fail-any) else fail-any)) else caught-fail) in
                                {5419}let v_1175: bool = (not-caught-fail(v_1174) && success?(1-proj-2-tuple(v_1174))) in
                                {5420}let kb_60: mac_key = (if v_1175 then 2-proj-2-tuple(v_1174) else caught-fail) in
                                {5421}let es_91: bitstring = (if v_1175 then 1-proj-2-tuple(v_1174) else caught-fail) in
                                {5422}let v_1176: bitstring = (if not(v_1169) then catch-fail(psk_data_25) else caught-fail) in
                                {5423}let v_1177: bool = (not-caught-fail(v_1176) && success?(1-proj-4-tuple(v_1176))) in
                                {5424}let is_safe_55: bool = (if v_1177 then 4-proj-4-tuple(v_1176) else caught-fail) in
                                {5425}let es_92: bitstring = (if v_1177 then 3-proj-4-tuple(v_1176) else caught-fail) in
                                {5426}let id_65: identityPsk = (if v_1177 then 2-proj-4-tuple(v_1176) else caught-fail) in
                                {5427}let psk_138: preSharedKey = (if v_1177 then 1-proj-4-tuple(v_1176) else caught-fail) in
                                {5428}let (psk_139: preSharedKey,early_secret_91: bitstring,valid_28: bool,safe_psk_34: bool) = (if v_1169 then (if v_1175 then (NoPsk,es_91,true,false) else fail-any) else (if v_1177 then (psk_138,es_92,((psk_138 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_58)),is_safe_55) else fail-any)) in
                                {5429}event Client_PSKChoosen(@6_id_client,psk_139,safe_psk_34);
                                {5430}if valid_28 then
                                (
                                    {5431}let gxy_57: element = catch-fail(dh_decap_fun(g_31,gy_29,x_377)) in
                                    {5432}let v_1178: bool = not-caught-fail(gxy_57) in
                                    {5433}new s_119[]: seed;
                                    {5434}let gxy_58: element = (if v_1178 then gxy_57 else dh_f(s_119)) in
                                    {5435}event Client_DH_gxy(@6_id_client,gxy_58);
                                    {5436}let l_336: label = tls13_derived in
                                    {5437}let m_119: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                    {5438}let v_1179: bool = not-caught-fail(m_119) in
                                    {5439}let h_325: bitstring = (if v_1179 then catch-fail(hash(@6_backend_h,m_119)) else caught-fail) in
                                    {5440}let v_1180: bool = not-caught-fail(h_325) in
                                    {5441}let x_379: bitstring = (if v_1180 then (l_336,h_325) else caught-fail) in
                                    {5442}let extra_64: bitstring = catch-fail((if v_1179 then (if v_1180 then hmac(@6_backend_h,early_secret_91,x_379) else fail-any) else fail-any)) in
                                    {5443}let v_1181: bool = not-caught-fail(extra_64) in
                                    {5444}let handshake_secret_29: bitstring = (if v_1181 then hmac(@6_backend_h,extra_64,gxy_58) else fail-any) in
                                    {5445}let l_337: label = tls13_derived in
                                    {5446}let m_120: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                    {5447}let v_1182: bool = not-caught-fail(m_120) in
                                    {5448}let h_326: bitstring = (if v_1182 then catch-fail(hash(@6_backend_h,m_120)) else caught-fail) in
                                    {5449}let v_1183: bool = not-caught-fail(h_326) in
                                    {5450}let x_380: bitstring = (if v_1183 then (l_337,h_326) else caught-fail) in
                                    {5451}let extra_65: bitstring = catch-fail((if v_1182 then (if v_1183 then hmac(@6_backend_h,handshake_secret_29,x_380) else fail-any) else fail-any)) in
                                    {5452}let v_1184: bool = not-caught-fail(extra_65) in
                                    {5453}let k_114: bitstring = (if v_1184 then zero else caught-fail) in
                                    {5454}let master_secret_65: bitstring = (if v_1184 then catch-fail(hmac(@6_backend_h,handshake_secret_29,k_114)) else caught-fail) in
                                    {5455}let v_1185: bool = not-caught-fail(master_secret_65) in
                                    {5456}let l_338: label = (if v_1185 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {5457}let h_327: bitstring = (if v_1185 then catch-fail(hash(@6_backend_h,cur_log2_63)) else caught-fail) in
                                    {5458}let v_1186: bool = not-caught-fail(h_327) in
                                    {5459}let x_381: bitstring = (if v_1186 then (l_338,h_327) else caught-fail) in
                                    {5460}let client_hts_29: bitstring = (if v_1185 then catch-fail((if v_1186 then hmac(@6_backend_h,handshake_secret_29,x_381) else fail-any)) else caught-fail) in
                                    {5461}let v_1187: bool = not-caught-fail(client_hts_29) in
                                    {5462}let l_339: label = (if v_1187 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {5463}let h_328: bitstring = (if v_1187 then catch-fail(hash(@6_backend_h,cur_log2_63)) else caught-fail) in
                                    {5464}let v_1188: bool = not-caught-fail(h_328) in
                                    {5465}let x_382: bitstring = (if v_1188 then (l_339,h_328) else caught-fail) in
                                    {5466}let server_hts_29: bitstring = (if v_1187 then catch-fail((if v_1188 then hmac(@6_backend_h,handshake_secret_29,x_382) else fail-any)) else caught-fail) in
                                    {5467}let v_1189: bool = not-caught-fail(server_hts_29) in
                                    {5468}let l_340: label = (if v_1189 then tls13_key else caught-fail) in
                                    {5469}let h_329: bitstring = (if v_1189 then zero else caught-fail) in
                                    {5470}let x_383: bitstring = (if v_1189 then (l_340,h_329) else caught-fail) in
                                    {5471}let client_wkh_29: bitstring = (if v_1189 then catch-fail(hmac(@6_backend_h,client_hts_29,x_383)) else caught-fail) in
                                    {5472}let v_1190: bool = not-caught-fail(client_wkh_29) in
                                    {5473}let l_341: label = (if v_1190 then tls13_key else caught-fail) in
                                    {5474}let h_330: bitstring = (if v_1190 then zero else caught-fail) in
                                    {5475}let x_384: bitstring = (if v_1190 then (l_341,h_330) else caught-fail) in
                                    {5476}let server_wkh_29: bitstring = (if v_1190 then catch-fail(hmac(@6_backend_h,server_hts_29,x_384)) else caught-fail) in
                                    {5477}let v_1191: bool = not-caught-fail(server_wkh_29) in
                                    {5478}let l_342: label = (if v_1191 then tls13_finished else caught-fail) in
                                    {5479}let h_331: bitstring = (if v_1191 then zero else caught-fail) in
                                    {5480}let x_385: bitstring = (if v_1191 then (l_342,h_331) else caught-fail) in
                                    {5481}let client_fk_29: bitstring = (if v_1191 then catch-fail(hmac(@6_backend_h,client_hts_29,x_385)) else caught-fail) in
                                    {5482}let v_1192: bool = not-caught-fail(client_fk_29) in
                                    {5483}let l_343: label = (if v_1192 then tls13_finished else caught-fail) in
                                    {5484}let h_332: bitstring = (if v_1192 then zero else caught-fail) in
                                    {5485}let x_386: bitstring = (if v_1192 then (l_343,h_332) else caught-fail) in
                                    {5486}let server_fk_29: bitstring = (if v_1192 then catch-fail(hmac(@6_backend_h,server_hts_29,x_386)) else caught-fail) in
                                    {5487}let v_1193: bool = not-caught-fail(server_fk_29) in
                                    {5488}let (master_secret_66: bitstring,chk_36: aead_key,shk_35: aead_key,cfin_36: mac_key,sfin_35: mac_key) = (if v_1184 then (if v_1185 then (if v_1187 then (if v_1189 then (if v_1190 then (if v_1191 then (if v_1192 then (if v_1193 then (master_secret_65,client_wkh_29,server_wkh_29,client_fk_29,server_fk_29) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {5489}event Client_chk(@6_id_client,chk_36);
                                    {5490}event Client_shk(@6_id_client,shk_35);
                                    {5491}event Client_cfin(@6_id_client,cfin_36);
                                    {5492}event Client_sfin(@6_id_client,sfin_35);
                                    {5493}in(io, enc_ee_msg_28: bitstring);
                                    {5494}let ee_msg_29: msg = aead_dec(@6_backend_a,shk_35,0,zero,enc_ee_msg_28) in
                                    {5495}let EE(ech_ee_28: echExt,extra_ee_28: extraExt) = ee_msg_29 in
                                    {5496}let cur_log2_64: bitstring = (cur_log2_63,ee_msg_29) in
                                    {5497}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr_3,sr_39,@6_backend_h,@6_backend_a,c_dom_6,backend_dom,psk_139,safe_psk_34,@6_comp_psk,master_secret_66,chk_36,0,shk_35,1,cfin_36,sfin_35,cur_log2_64)))
                                )
                                else
                                    {5498}out(io, illegal_parameter)
                            )
                            else
                                {5499}out(io, illegal_parameter)
                        )
                        else
                            {5500}event ClientEchAcceptance(@6_id_client,false);
                            {5501}let v_1194: bool = @6_use_grease in
                            {5502}let psk_140: preSharedKey = (if not(v_1194) then NoPsk else caught-fail) in
                            {5503}let s_120: bitstring = (if not(v_1194) then zero else caught-fail) in
                            {5504}let k_115: bitstring = (if not(v_1194) then catch-fail(psk2b(psk_140)) else caught-fail) in
                            {5505}let v_1195: bool = not-caught-fail(k_115) in
                            {5506}let early_secret_92: bitstring = (if not(v_1194) then catch-fail((if v_1195 then hmac(@6_tls_h,s_120,k_115) else fail-any)) else caught-fail) in
                            {5507}let v_1196: bool = not-caught-fail(early_secret_92) in
                            {5508}let l_344: label = (if v_1196 then tls13_ext_res_binder else caught-fail) in
                            {5509}let m_121: bitstring = (if v_1196 then zero else caught-fail) in
                            {5510}let h_333: bitstring = (if v_1196 then catch-fail(hash(@6_tls_h,m_121)) else caught-fail) in
                            {5511}let v_1197: bool = not-caught-fail(h_333) in
                            {5512}let x_387: bitstring = (if v_1197 then (l_344,h_333) else caught-fail) in
                            {5513}let binder_key_61: bitstring = (if v_1196 then catch-fail((if v_1197 then hmac(@6_tls_h,early_secret_92,x_387) else fail-any)) else caught-fail) in
                            {5514}let v_1198: bool = not-caught-fail(binder_key_61) in
                            {5515}let v_1199: bitstring = (if not(v_1194) then catch-fail((if v_1196 then (if v_1198 then (early_secret_92,binder_key_61) else fail-any) else fail-any)) else caught-fail) in
                            {5516}let v_1200: bool = (not-caught-fail(v_1199) && success?(1-proj-2-tuple(v_1199))) in
                            {5517}let kb_61: mac_key = (if v_1200 then 2-proj-2-tuple(v_1199) else caught-fail) in
                            {5518}let es'_1: bitstring = (if v_1200 then 1-proj-2-tuple(v_1199) else caught-fail) in
                            {5519}let psk_data'_24: bitstring = (if v_1194 then psk_data_25 else (if v_1200 then (NoPsk,zero,es'_1,false) else fail-any)) in
                            {5520}let cur_log_17: bitstring = (zero,o_client_hello_1) in
                            {5521}let (x_388: bitstring,g_32: group) = o_kex_data_3 in
                            {5522}let (psk_offer_29: preSharedKey,id_offer_29: identityPsk,es_offer_29: bitstring,is_safe_offer_29: bool) = psk_data'_24 in
                            {5523}event Client_PSKOffer(@6_id_client,psk_offer_29,id_offer_29,is_safe_offer_29);
                            {5524}event Client_Rand_client(@6_id_client,o_cr_4);
                            {5525}event Client_DH_client(@6_id_client,dh_pub(g_32,x_388));
                            {5526}event Client_server_domain(@6_id_client,o_dom);
                            {5527}let SH(sr_40: bytes32,mode_34: params) = server_hello_5 in
                            {5528}event Client_Rand_server(@6_id_client,sr_40);
                            {5529}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_32,gy_30: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_59: preSharedKeyExt) = mode_34 in
                            (
                                {5530}let cur_log2_65: bitstring = (cur_log_17,server_hello_5) in
                                {5531}event Client_DH_server(@6_id_client,gy_30);
                                {5532}let v_1201: bool = (psk_ext_59 = empty_psk_ext) in
                                {5533}let psk_141: preSharedKey = (if v_1201 then NoPsk else caught-fail) in
                                {5534}let s_121: bitstring = (if v_1201 then zero else caught-fail) in
                                {5535}let k_116: bitstring = (if v_1201 then catch-fail(psk2b(psk_141)) else caught-fail) in
                                {5536}let v_1202: bool = not-caught-fail(k_116) in
                                {5537}let early_secret_93: bitstring = (if v_1201 then catch-fail((if v_1202 then hmac(@6_tls_h,s_121,k_116) else fail-any)) else caught-fail) in
                                {5538}let v_1203: bool = not-caught-fail(early_secret_93) in
                                {5539}let l_345: label = (if v_1203 then tls13_ext_res_binder else caught-fail) in
                                {5540}let m_122: bitstring = (if v_1203 then zero else caught-fail) in
                                {5541}let h_334: bitstring = (if v_1203 then catch-fail(hash(@6_tls_h,m_122)) else caught-fail) in
                                {5542}let v_1204: bool = not-caught-fail(h_334) in
                                {5543}let x_389: bitstring = (if v_1204 then (l_345,h_334) else caught-fail) in
                                {5544}let binder_key_62: bitstring = (if v_1203 then catch-fail((if v_1204 then hmac(@6_tls_h,early_secret_93,x_389) else fail-any)) else caught-fail) in
                                {5545}let v_1205: bool = not-caught-fail(binder_key_62) in
                                {5546}let v_1206: bitstring = (if v_1201 then catch-fail((if v_1203 then (if v_1205 then (early_secret_93,binder_key_62) else fail-any) else fail-any)) else caught-fail) in
                                {5547}let v_1207: bool = (not-caught-fail(v_1206) && success?(1-proj-2-tuple(v_1206))) in
                                {5548}let kb_62: mac_key = (if v_1207 then 2-proj-2-tuple(v_1206) else caught-fail) in
                                {5549}let es_93: bitstring = (if v_1207 then 1-proj-2-tuple(v_1206) else caught-fail) in
                                {5550}let v_1208: bitstring = (if not(v_1201) then catch-fail(psk_data'_24) else caught-fail) in
                                {5551}let v_1209: bool = (not-caught-fail(v_1208) && success?(1-proj-4-tuple(v_1208))) in
                                {5552}let is_safe_56: bool = (if v_1209 then 4-proj-4-tuple(v_1208) else caught-fail) in
                                {5553}let es_94: bitstring = (if v_1209 then 3-proj-4-tuple(v_1208) else caught-fail) in
                                {5554}let id_66: identityPsk = (if v_1209 then 2-proj-4-tuple(v_1208) else caught-fail) in
                                {5555}let psk_142: preSharedKey = (if v_1209 then 1-proj-4-tuple(v_1208) else caught-fail) in
                                {5556}let (psk_143: preSharedKey,early_secret_94: bitstring,valid_29: bool,safe_psk_35: bool) = (if v_1201 then (if v_1207 then (NoPsk,es_93,true,false) else fail-any) else (if v_1209 then (psk_142,es_94,((psk_142 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_59)),is_safe_56) else fail-any)) in
                                {5557}event Client_PSKChoosen(@6_id_client,psk_143,safe_psk_35);
                                {5558}if valid_29 then
                                (
                                    {5559}let gxy_59: element = catch-fail(dh_decap_fun(g_32,gy_30,x_388)) in
                                    {5560}let v_1210: bool = not-caught-fail(gxy_59) in
                                    {5561}new s_122[]: seed;
                                    {5562}let gxy_60: element = (if v_1210 then gxy_59 else dh_f(s_122)) in
                                    {5563}event Client_DH_gxy(@6_id_client,gxy_60);
                                    {5564}let l_346: label = tls13_derived in
                                    {5565}let m_123: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                    {5566}let v_1211: bool = not-caught-fail(m_123) in
                                    {5567}let h_335: bitstring = (if v_1211 then catch-fail(hash(@6_tls_h,m_123)) else caught-fail) in
                                    {5568}let v_1212: bool = not-caught-fail(h_335) in
                                    {5569}let x_390: bitstring = (if v_1212 then (l_346,h_335) else caught-fail) in
                                    {5570}let extra_66: bitstring = catch-fail((if v_1211 then (if v_1212 then hmac(@6_tls_h,early_secret_94,x_390) else fail-any) else fail-any)) in
                                    {5571}let v_1213: bool = not-caught-fail(extra_66) in
                                    {5572}let handshake_secret_30: bitstring = (if v_1213 then hmac(@6_tls_h,extra_66,gxy_60) else fail-any) in
                                    {5573}let l_347: label = tls13_derived in
                                    {5574}let m_124: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                    {5575}let v_1214: bool = not-caught-fail(m_124) in
                                    {5576}let h_336: bitstring = (if v_1214 then catch-fail(hash(@6_tls_h,m_124)) else caught-fail) in
                                    {5577}let v_1215: bool = not-caught-fail(h_336) in
                                    {5578}let x_391: bitstring = (if v_1215 then (l_347,h_336) else caught-fail) in
                                    {5579}let extra_67: bitstring = catch-fail((if v_1214 then (if v_1215 then hmac(@6_tls_h,handshake_secret_30,x_391) else fail-any) else fail-any)) in
                                    {5580}let v_1216: bool = not-caught-fail(extra_67) in
                                    {5581}let k_117: bitstring = (if v_1216 then zero else caught-fail) in
                                    {5582}let master_secret_67: bitstring = (if v_1216 then catch-fail(hmac(@6_tls_h,handshake_secret_30,k_117)) else caught-fail) in
                                    {5583}let v_1217: bool = not-caught-fail(master_secret_67) in
                                    {5584}let l_348: label = (if v_1217 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {5585}let h_337: bitstring = (if v_1217 then catch-fail(hash(@6_tls_h,cur_log2_65)) else caught-fail) in
                                    {5586}let v_1218: bool = not-caught-fail(h_337) in
                                    {5587}let x_392: bitstring = (if v_1218 then (l_348,h_337) else caught-fail) in
                                    {5588}let client_hts_30: bitstring = (if v_1217 then catch-fail((if v_1218 then hmac(@6_tls_h,handshake_secret_30,x_392) else fail-any)) else caught-fail) in
                                    {5589}let v_1219: bool = not-caught-fail(client_hts_30) in
                                    {5590}let l_349: label = (if v_1219 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {5591}let h_338: bitstring = (if v_1219 then catch-fail(hash(@6_tls_h,cur_log2_65)) else caught-fail) in
                                    {5592}let v_1220: bool = not-caught-fail(h_338) in
                                    {5593}let x_393: bitstring = (if v_1220 then (l_349,h_338) else caught-fail) in
                                    {5594}let server_hts_30: bitstring = (if v_1219 then catch-fail((if v_1220 then hmac(@6_tls_h,handshake_secret_30,x_393) else fail-any)) else caught-fail) in
                                    {5595}let v_1221: bool = not-caught-fail(server_hts_30) in
                                    {5596}let l_350: label = (if v_1221 then tls13_key else caught-fail) in
                                    {5597}let h_339: bitstring = (if v_1221 then zero else caught-fail) in
                                    {5598}let x_394: bitstring = (if v_1221 then (l_350,h_339) else caught-fail) in
                                    {5599}let client_wkh_30: bitstring = (if v_1221 then catch-fail(hmac(@6_tls_h,client_hts_30,x_394)) else caught-fail) in
                                    {5600}let v_1222: bool = not-caught-fail(client_wkh_30) in
                                    {5601}let l_351: label = (if v_1222 then tls13_key else caught-fail) in
                                    {5602}let h_340: bitstring = (if v_1222 then zero else caught-fail) in
                                    {5603}let x_395: bitstring = (if v_1222 then (l_351,h_340) else caught-fail) in
                                    {5604}let server_wkh_30: bitstring = (if v_1222 then catch-fail(hmac(@6_tls_h,server_hts_30,x_395)) else caught-fail) in
                                    {5605}let v_1223: bool = not-caught-fail(server_wkh_30) in
                                    {5606}let l_352: label = (if v_1223 then tls13_finished else caught-fail) in
                                    {5607}let h_341: bitstring = (if v_1223 then zero else caught-fail) in
                                    {5608}let x_396: bitstring = (if v_1223 then (l_352,h_341) else caught-fail) in
                                    {5609}let client_fk_30: bitstring = (if v_1223 then catch-fail(hmac(@6_tls_h,client_hts_30,x_396)) else caught-fail) in
                                    {5610}let v_1224: bool = not-caught-fail(client_fk_30) in
                                    {5611}let l_353: label = (if v_1224 then tls13_finished else caught-fail) in
                                    {5612}let h_342: bitstring = (if v_1224 then zero else caught-fail) in
                                    {5613}let x_397: bitstring = (if v_1224 then (l_353,h_342) else caught-fail) in
                                    {5614}let server_fk_30: bitstring = (if v_1224 then catch-fail(hmac(@6_tls_h,server_hts_30,x_397)) else caught-fail) in
                                    {5615}let v_1225: bool = not-caught-fail(server_fk_30) in
                                    {5616}let (master_secret_68: bitstring,chk_37: aead_key,shk_36: aead_key,cfin_37: mac_key,sfin_36: mac_key) = (if v_1216 then (if v_1217 then (if v_1219 then (if v_1221 then (if v_1222 then (if v_1223 then (if v_1224 then (if v_1225 then (master_secret_67,client_wkh_30,server_wkh_30,client_fk_30,server_fk_30) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {5617}event Client_chk(@6_id_client,chk_37);
                                    {5618}event Client_shk(@6_id_client,shk_36);
                                    {5619}event Client_cfin(@6_id_client,cfin_37);
                                    {5620}event Client_sfin(@6_id_client,sfin_36);
                                    {5621}in(io, enc_ee_msg_29: bitstring);
                                    {5622}let ee_msg_30: msg = aead_dec(@6_tls_a,shk_36,0,zero,enc_ee_msg_29) in
                                    {5623}let EE(ech_ee_29: echExt,extra_ee_29: extraExt) = ee_msg_30 in
                                    {5624}let cur_log2_66: bitstring = (cur_log2_65,ee_msg_30) in
                                    {5625}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(o_cr_4,sr_40,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_143,safe_psk_35,@6_comp_psk,master_secret_68,chk_37,0,shk_36,1,cfin_37,sfin_36,cur_log2_66)))
                                )
                                else
                                    {5626}out(io, illegal_parameter)
                            )
                            else
                                {5627}out(io, illegal_parameter)
                )
                else
                    {5628}out(io, unexpected_message)
            )
    )
    else
        {5630}let psk_144: preSharedKey = NoPsk in
        {5631}let s_123: bitstring = zero in
        {5632}let k_118: bitstring = catch-fail(psk2b(psk_144)) in
        {5633}let v_1226: bool = not-caught-fail(k_118) in
        {5634}let early_secret_95: bitstring = catch-fail((if v_1226 then hmac(h_psk,s_123,k_118) else fail-any)) in
        {5635}let v_1227: bool = not-caught-fail(early_secret_95) in
        {5636}let l_354: label = (if v_1227 then tls13_ext_res_binder else caught-fail) in
        {5637}let m_125: bitstring = (if v_1227 then zero else caught-fail) in
        {5638}let h_343: bitstring = (if v_1227 then catch-fail(hash(h_psk,m_125)) else caught-fail) in
        {5639}let v_1228: bool = not-caught-fail(h_343) in
        {5640}let x_398: bitstring = (if v_1228 then (l_354,h_343) else caught-fail) in
        {5641}let binder_key_63: bitstring = (if v_1227 then catch-fail((if v_1228 then hmac(h_psk,early_secret_95,x_398) else fail-any)) else caught-fail) in
        {5642}let v_1229: bool = not-caught-fail(binder_key_63) in
        {5643}let v_1230: bitstring = catch-fail((if v_1227 then (if v_1229 then (early_secret_95,binder_key_63) else fail-any) else fail-any)) in
        {5644}let v_1231: bool = (not-caught-fail(v_1230) && success?(1-proj-2-tuple(v_1230))) in
        {5645}let kb_63: mac_key = (if v_1231 then 2-proj-2-tuple(v_1230) else caught-fail) in
        {5646}let es_95: bitstring = (if v_1231 then 1-proj-2-tuple(v_1230) else caught-fail) in
        {5647}let v_1232: bitstring = catch-fail((if v_1231 then (empty_psk_ext,(NoPsk,zero,es_95,false)) else fail-any)) in
        {5648}let v_1233: bool = (not-caught-fail(v_1232) && success?(1-proj-2-tuple(v_1232))) in
        {5649}let psk_data_33: bitstring = (if v_1233 then 2-proj-2-tuple(v_1232) else caught-fail) in
        {5650}let psk_ext_60: preSharedKeyExt = (if v_1233 then 1-proj-2-tuple(v_1232) else caught-fail) in
        {5651}let i_offer_8: params = (if v_1233 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_60) else caught-fail) in
        {5652}let i_client_hello_10: msg = (if v_1233 then CH(i_cr,i_offer_8) else caught-fail) in
        {5653}let v_1234: bool = (if v_1233 then catch-fail(@6_use_grease) else caught-fail) in
        {5654}let o_offer_18: params = (if v_1234 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),ech_inner_or_grease,empty_extra_ext,psk_ext_60) else caught-fail) in
        {5655}new fake_id_10[]: identityPsk;
        {5656}new fake_binder_10[]: bitstring;
        {5657}let o_psk_ext_10: preSharedKeyExt = (if is-false(v_1234) then (if @6_use_psk then client_psk_ext(fake_id_10,fake_binder_10) else empty_psk_ext) else caught-fail) in
        {5658}let o_ech_ext_ADD_8: echExt = (if is-false(v_1234) then ECHClientHelloOuter(ech_h_3,ech_a_3,config_id_1,enc_1,zero) else caught-fail) in
        {5659}let o_offer_ADD_8: params = (if is-false(v_1234) then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),o_ech_ext_ADD_8,empty_extra_ext,o_psk_ext_10) else caught-fail) in
        {5660}let o_client_hello_ADD_8: msg = (if is-false(v_1234) then CH(o_cr,o_offer_ADD_8) else caught-fail) in
        {5661}let n_8: nat = (if is-false(v_1234) then 1 else caught-fail) in
        {5662}let v_1235: hpkeContext = (if is-false(v_1234) then catch-fail(context) else caught-fail) in
        {5663}let v_1236: bool = (not-caught-fail(v_1235) && ((S =nf 1-proj-hpke_context(v_1235)) && success?(1-proj-hpke_context(v_1235)))) in
        {5664}let base_nonce_9: bitstring = (if v_1236 then 3-proj-hpke_context(v_1235) else caught-fail) in
        {5665}let key_9: aead_key = (if v_1236 then 2-proj-hpke_context(v_1235) else caught-fail) in
        {5666}let payload_9: bitstring = (if is-false(v_1234) then catch-fail((if v_1236 then aead_enc(ech_a_3,key_9,(base_nonce_9,n_8),o_client_hello_ADD_8,i_client_hello_10) else fail-any)) else caught-fail) in
        {5667}let v_1237: bool = not-caught-fail(payload_9) in
        {5668}let o_ech_ext_10: echExt = (if v_1237 then ECHClientHelloOuter(ech_h_3,ech_a_3,config_id_1,enc_1,payload_9) else caught-fail) in
        {5669}let o_offer_19: params = (if v_1237 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),o_ech_ext_10,empty_extra_ext,o_psk_ext_10) else caught-fail) in
        {5670}let (o_client_hello_2: msg,i_client_hello_11: msg,o_cr_7: bytes32,i_cr_5: bytes32,o_kex_data_5: bitstring,i_kex_data_5: bitstring,o_psk_ext_11: preSharedKeyExt,psk_data_34: bitstring,o_ech_ext_11: echExt) = (if v_1233 then (if undo-catch-fail(v_1234) then (CH(o_cr,o_offer_18),CH(o_cr,o_offer_18),o_cr,o_cr,o_kex_data,o_kex_data,psk_ext_60,psk_data_33,ech_inner_or_grease) else (if v_1237 then (CH(o_cr,o_offer_19),i_client_hello_10,o_cr,i_cr,o_kex_data,i_kex_data,o_psk_ext_10,psk_data_33,o_ech_ext_10) else fail-any)) else fail-any) in
        {5671}out(io, o_client_hello_2);
        {5672}let (psk_145: preSharedKey,id_67: identityPsk,es_96: bitstring,safe_2: bool) = psk_data_34 in
        (
            {5673}if (false && (not(@6_use_grease) && (psk_145 ≠ NoPsk))) then
            {5674}let client_hello_9: bitstring = (zero,i_client_hello_11) in
            {5675}let l_355: label = tls13_client_early_traffic_secret in
            {5676}let h_344: bitstring = catch-fail(hash(@6_backend_h,client_hello_9)) in
            {5677}let v_1238: bool = not-caught-fail(h_344) in
            {5678}let x_399: bitstring = (if v_1238 then (l_355,h_344) else caught-fail) in
            {5679}let atsc0_6: bitstring = catch-fail((if v_1238 then hmac(@6_backend_h,es_96,x_399) else fail-any)) in
            {5680}let v_1239: bool = not-caught-fail(atsc0_6) in
            {5681}let l_356: label = (if v_1239 then tls13_key else caught-fail) in
            {5682}let h_345: bitstring = (if v_1239 then zero else caught-fail) in
            {5683}let x_400: bitstring = (if v_1239 then (l_356,h_345) else caught-fail) in
            {5684}let kc0_6: bitstring = (if v_1239 then catch-fail(hmac(@6_backend_h,atsc0_6,x_400)) else caught-fail) in
            {5685}let v_1240: bool = not-caught-fail(kc0_6) in
            {5686}let l_357: label = (if v_1240 then tls13_early_exporter_master_secret else caught-fail) in
            {5687}let h_346: bitstring = (if v_1240 then catch-fail(hash(@6_backend_h,client_hello_9)) else caught-fail) in
            {5688}let v_1241: bool = not-caught-fail(h_346) in
            {5689}let x_401: bitstring = (if v_1241 then (l_357,h_346) else caught-fail) in
            {5690}let ems0_12: bitstring = (if v_1240 then catch-fail((if v_1241 then hmac(@6_backend_h,es_96,x_401) else fail-any)) else caught-fail) in
            {5691}let v_1242: bool = not-caught-fail(ems0_12) in
            {5692}let (wkc0_6: aead_key,ems0_13: bitstring) = (if v_1239 then (if v_1240 then (if v_1242 then (kc0_6,ems0_12) else fail-any) else fail-any) else fail-any) in
            {5693}!
            {5694}in(io, (i_6: nat,ad_6: bitstring));
            {5695}if is_nat(i_6) then
            {5696}new msg_ed_5[]: bitstring;
            {5697}let enc_ed_5: bitstring = aead_enc(@6_backend_a,wkc0_6,i_6,ad_6,msg_ed_5) in
            {5698}new st_15: stamp;
            {5699}event ClientSequenceClient0RTTDataWriteKey(@6_id_client,st_15,i_6);
            {5700}event ClientSends0(@6_id_client,i_cr_5,psk_145,i_6,ad_6,msg_ed_5);
            {5701}out(io, enc_ed_5)
        ) | (
            {5702}in(io, server_hello_6: msg);
            {5703}let SH(B32(sr24_4: bytes24,sr8_11: bytes8),mode_35: params) = server_hello_6 in
            (
                {5704}if (false && (B32(sr24_4,sr8_11) = B32(HRR24,HRR8))) then
                (
                    {5705}if (send_kex_4 ≠ true) then
                    {5706}let nego(=TLS13,h_alg_13: hash_alg,a_alg_11: aead_alg,hrr_kex_ext(g_33: group),=empty_sni_ext,ech_ext_10: echExt,=empty_extra_ext,=empty_psk_ext) = mode_35 in
                    {5707}let v_1243: bool = (ech_ext_10 = empty_ech_ext) in
                    {5708}let hrr_mode_2: params = (if not(v_1243) then nego(TLS13,@6_backend_h,@6_backend_a,hrr_kex_ext(@6_backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) else caught-fail) in
                    {5709}let hrr_2: msg = (if not(v_1243) then SH(B32(HRR24,HRR8),hrr_mode_2) else caught-fail) in
                    {5710}let cur_log_18: bitstring = (if not(v_1243) then ((zero,i_client_hello_11),hrr_2) else caught-fail) in
                    {5711}let transcript_hrr_ech_conf_2: bitstring = (if not(v_1243) then catch-fail(hash(@6_backend_h,cur_log_18)) else caught-fail) in
                    {5712}let v_1244: bool = not-caught-fail(transcript_hrr_ech_conf_2) in
                    {5713}let s_124: bitstring = (if v_1244 then zero else caught-fail) in
                    {5714}let k_119: bitstring = (if v_1244 then catch-fail(b32_2_b(get_random(i_client_hello_11))) else caught-fail) in
                    {5715}let v_1245: bool = not-caught-fail(k_119) in
                    {5716}let k_120: bitstring = (if v_1244 then catch-fail((if v_1245 then hmac(@6_backend_h,s_124,k_119) else fail-any)) else caught-fail) in
                    {5717}let v_1246: bool = not-caught-fail(k_120) in
                    {5718}let l_358: label = (if v_1246 then hrr_ech_accept_confirmation else caught-fail) in
                    {5719}let x_402: bitstring = (if v_1246 then (l_358,cur_log_18) else caught-fail) in
                    {5720}let is_ech_accepted_2: bool = (if v_1243 then false else (if (ech_ext_10 = ECHHelloRetryRequest((if v_1244 then crop_into_bytes8((if v_1246 then hmac(@6_backend_h,k_120,x_402) else fail-any)) else fail-any))) then true else false)) in
                    {5721}event ClientEchAcceptance(@6_id_client,is_ech_accepted_2);
                    {5722}if is_ech_accepted_2 then
                    (
                        {5723}let cur_log_IN1_HRR_2: bitstring = ((zero,i_client_hello_11),server_hello_6) in
                        {5724}let ech_config(config_id_6: configId,ech_g_8: group,pkR_8: element,o_dom_6: domain,ech_h_8: hash_alg,ech_a_8: aead_alg) = ech_conf in
                        {5725}let send_key_share_6: bool = true in
                        {5726}new s_125[]: seed;
                        {5727}let gx_27: element = dh_pub(@6_backend_g,dh_k(s_125)) in
                        {5728}let v_1247: bitstring = (dh_k(s_125),gx_27) in
                        {5729}let v_1248: bool = success?(1-proj-2-tuple(v_1247)) in
                        {5730}let gx_28: element = (if v_1248 then 2-proj-2-tuple(v_1247) else caught-fail) in
                        {5731}let x_403: bitstring = (if v_1248 then 1-proj-2-tuple(v_1247) else caught-fail) in
                        {5732}let kex_12: kex_alg = (if v_1248 then (if send_key_share_6 then DHE_kex(@6_backend_g,gx_28) else DHE_group(@6_backend_g)) else caught-fail) in
                        {5733}let (i_kex_ext_3: keyShareExt,i_kex_data_6: bitstring) = (if v_1248 then (client_kex_ext(kex_12),(x_403,@6_backend_g)) else fail-any) in
                        {5734}let send_key_share_7: bool = true in
                        {5735}new s_126[]: seed;
                        {5736}let gx_29: element = dh_pub(@6_tls_g,dh_k(s_126)) in
                        {5737}let v_1249: bitstring = (dh_k(s_126),gx_29) in
                        {5738}let v_1250: bool = success?(1-proj-2-tuple(v_1249)) in
                        {5739}let gx_30: element = (if v_1250 then 2-proj-2-tuple(v_1249) else caught-fail) in
                        {5740}let x_404: bitstring = (if v_1250 then 1-proj-2-tuple(v_1249) else caught-fail) in
                        {5741}let kex_13: kex_alg = (if v_1250 then (if send_key_share_7 then DHE_kex(@6_tls_g,gx_30) else DHE_group(@6_tls_g)) else caught-fail) in
                        {5742}let (o_kex_ext_5: keyShareExt,o_kex_data_6: bitstring) = (if v_1250 then (client_kex_ext(kex_13),(x_404,@6_tls_g)) else fail-any) in
                        {5743}new rand24_13[]: bytes24;
                        {5744}new rand8_13[]: bytes8;
                        {5745}let i_cr_6: bytes32 = B32(rand24_13,rand8_13) in
                        {5746}new rand24_14[]: bytes24;
                        {5747}new rand8_14[]: bytes8;
                        {5748}let o_cr_8: bytes32 = B32(rand24_14,rand8_14) in
                        {5749}let ech_ext_11: echExt = ECHClientHelloInner in
                        {5750}if @6_use_psk then
                        (
                            {5751}let (psk_146: preSharedKey,id_68: identityPsk,old_es_9: bitstring,is_safe_57: bool) = psk_data_34 in
                            (
                                {5752}let offer_32: params = nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_3,SNI(backend_dom),ech_ext_11,@6_i_extra_ext,trunc_client_psk_ext(id_68)) in
                                {5753}let cur_log'_20: bitstring = (cur_log_IN1_HRR_2,CH(i_cr_6,offer_32)) in
                                {5754}let s_127: bitstring = zero in
                                {5755}let k_121: bitstring = catch-fail(psk2b(psk_146)) in
                                {5756}let v_1251: bool = not-caught-fail(k_121) in
                                {5757}let early_secret_96: bitstring = catch-fail((if v_1251 then hmac(@6_backend_h,s_127,k_121) else fail-any)) in
                                {5758}let v_1252: bool = not-caught-fail(early_secret_96) in
                                {5759}let l_359: label = (if v_1252 then tls13_ext_res_binder else caught-fail) in
                                {5760}let m_126: bitstring = (if v_1252 then zero else caught-fail) in
                                {5761}let h_347: bitstring = (if v_1252 then catch-fail(hash(@6_backend_h,m_126)) else caught-fail) in
                                {5762}let v_1253: bool = not-caught-fail(h_347) in
                                {5763}let x_405: bitstring = (if v_1253 then (l_359,h_347) else caught-fail) in
                                {5764}let binder_key_64: bitstring = (if v_1252 then catch-fail((if v_1253 then hmac(@6_backend_h,early_secret_96,x_405) else fail-any)) else caught-fail) in
                                {5765}let v_1254: bool = not-caught-fail(binder_key_64) in
                                {5766}let v_1255: bitstring = catch-fail((if v_1252 then (if v_1254 then (early_secret_96,binder_key_64) else fail-any) else fail-any)) in
                                {5767}let v_1256: bool = (not-caught-fail(v_1255) && success?(1-proj-2-tuple(v_1255))) in
                                {5768}let kb_64: mac_key = (if v_1256 then 2-proj-2-tuple(v_1255) else caught-fail) in
                                {5769}let es_97: bitstring = (if v_1256 then 1-proj-2-tuple(v_1255) else caught-fail) in
                                {5770}let binders_19: bitstring = (if v_1256 then catch-fail(hmac(@6_backend_h,kb_64,cur_log'_20)) else caught-fail) in
                                {5771}let v_1257: bool = not-caught-fail(binders_19) in
                                {5772}let v_1258: bitstring = catch-fail((if v_1256 then (if v_1257 then (client_psk_ext(id_68,binders_19),(psk_146,id_68,es_97,is_safe_57)) else fail-any) else fail-any)) in
                                {5773}let v_1259: bool = (not-caught-fail(v_1258) && success?(1-proj-2-tuple(v_1258))) in
                                {5774}let psk_data_35: bitstring = (if v_1259 then 2-proj-2-tuple(v_1258) else caught-fail) in
                                {5775}let psk_ext_61: preSharedKeyExt = (if v_1259 then 1-proj-2-tuple(v_1258) else caught-fail) in
                                {5776}let i_offer_9: params = (if v_1259 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_3,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_61) else caught-fail) in
                                {5777}let i_client_hello_12: msg = (if v_1259 then CH(i_cr_6,i_offer_9) else caught-fail) in
                                {5778}new fake_id_11[]: identityPsk;
                                {5779}new fake_binder_11[]: bitstring;
                                {5780}let o_psk_ext_12: preSharedKeyExt = (if v_1259 then (if @6_use_psk then client_psk_ext(fake_id_11,fake_binder_11) else empty_psk_ext) else caught-fail) in
                                {5781}let o_ech_ext_ADD_9: echExt = (if v_1259 then ECHClientHelloOuter(ech_h_8,ech_a_8,config_id_6,zero,zero) else caught-fail) in
                                {5782}let o_offer_ADD_9: params = (if v_1259 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_5,SNI(o_dom_6),o_ech_ext_ADD_9,empty_extra_ext,o_psk_ext_12) else caught-fail) in
                                {5783}let o_client_hello_ADD_9: msg = (if v_1259 then CH(o_cr_8,o_offer_ADD_9) else caught-fail) in
                                {5784}let n_9: nat = (if v_1259 then 2 else caught-fail) in
                                {5785}let v_1260: hpkeContext = (if v_1259 then catch-fail(context) else caught-fail) in
                                {5786}let v_1261: bool = (not-caught-fail(v_1260) && ((S =nf 1-proj-hpke_context(v_1260)) && success?(1-proj-hpke_context(v_1260)))) in
                                {5787}let base_nonce_10: bitstring = (if v_1261 then 3-proj-hpke_context(v_1260) else caught-fail) in
                                {5788}let key_10: aead_key = (if v_1261 then 2-proj-hpke_context(v_1260) else caught-fail) in
                                {5789}let payload_10: bitstring = (if v_1259 then catch-fail((if v_1261 then aead_enc(ech_a_8,key_10,(base_nonce_10,n_9),o_client_hello_ADD_9,i_client_hello_12) else fail-any)) else caught-fail) in
                                {5790}let v_1262: bool = not-caught-fail(payload_10) in
                                {5791}let o_ech_ext_12: echExt = (if v_1262 then ECHClientHelloOuter(ech_h_8,ech_a_8,config_id_6,zero,payload_10) else caught-fail) in
                                {5792}let o_offer_20: params = (if v_1262 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_5,SNI(o_dom_6),o_ech_ext_12,empty_extra_ext,o_psk_ext_12) else caught-fail) in
                                {5793}let (o_client_hello'_6: msg,i_client_hello'_6: msg,i_cr'_6: bytes32,i_kex_data'_6: bitstring,psk_data'_25: bitstring) = (if v_1259 then (if v_1262 then (CH(o_cr_8,o_offer_20),i_client_hello_12,i_cr_6,i_kex_data_6,psk_data_35) else fail-any) else fail-any) in
                                {5794}out(io, o_client_hello'_6);
                                {5795}in(io, server_hello'_23: msg);
                                {5796}let SH(B32(sr24'_6: bytes24,sr8'_6: bytes8),params'_6: params) = server_hello'_23 in
                                {5797}let cur_log_IN1_HRR_IN2_6: bitstring = (cur_log_IN1_HRR_2,i_client_hello'_6) in
                                {5798}let sh_modified_9: msg = SH(B32(sr24'_6,zero8),params'_6) in
                                {5799}let cur_log_sh_9: bitstring = (cur_log_IN1_HRR_IN2_6,sh_modified_9) in
                                {5800}let transcript_ech_conf_9: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_9)) in
                                {5801}let v_1263: bool = not-caught-fail(transcript_ech_conf_9) in
                                {5802}let s_128: bitstring = (if v_1263 then zero else caught-fail) in
                                {5803}let k_122: bitstring = (if v_1263 then catch-fail(b32_2_b(get_random(i_client_hello'_6))) else caught-fail) in
                                {5804}let v_1264: bool = not-caught-fail(k_122) in
                                {5805}let k_123: bitstring = (if v_1263 then catch-fail((if v_1264 then hmac(@6_backend_h,s_128,k_122) else fail-any)) else caught-fail) in
                                {5806}let v_1265: bool = not-caught-fail(k_123) in
                                {5807}let l_360: label = (if v_1265 then ech_accept_confirmation else caught-fail) in
                                {5808}let x_406: bitstring = (if v_1265 then (l_360,cur_log_sh_9) else caught-fail) in
                                {5809}let sr8_12: bytes8 = (if v_1263 then catch-fail(crop_into_bytes8((if v_1265 then hmac(@6_backend_h,k_123,x_406) else fail-any))) else caught-fail) in
                                {5810}let v_1266: bool = not-caught-fail(sr8_12) in
                                {5811}if (B32(sr24'_6,sr8'_6) = (if v_1263 then (if v_1266 then B32(sr24'_6,sr8_12) else fail-any) else fail-any)) then
                                {5812}let (x_407: bitstring,g_34: group) = i_kex_data'_6 in
                                {5813}let (psk_offer_30: preSharedKey,id_offer_30: identityPsk,es_offer_30: bitstring,is_safe_offer_30: bool) = psk_data'_25 in
                                {5814}event Client_PSKOffer(@6_id_client,psk_offer_30,id_offer_30,is_safe_offer_30);
                                {5815}event Client_Rand_client(@6_id_client,i_cr'_6);
                                {5816}event Client_DH_client(@6_id_client,dh_pub(g_34,x_407));
                                {5817}event Client_server_domain(@6_id_client,backend_dom);
                                {5818}let SH(sr_41: bytes32,mode_36: params) = server_hello'_23 in
                                {5819}event Client_Rand_server(@6_id_client,sr_41);
                                {5820}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_34,gy_31: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_62: preSharedKeyExt) = mode_36 in
                                (
                                    {5821}let cur_log2_67: bitstring = (cur_log_IN1_HRR_IN2_6,server_hello'_23) in
                                    {5822}event Client_DH_server(@6_id_client,gy_31);
                                    {5823}let v_1267: bool = (psk_ext_62 = empty_psk_ext) in
                                    {5824}let psk_147: preSharedKey = (if v_1267 then NoPsk else caught-fail) in
                                    {5825}let s_129: bitstring = (if v_1267 then zero else caught-fail) in
                                    {5826}let k_124: bitstring = (if v_1267 then catch-fail(psk2b(psk_147)) else caught-fail) in
                                    {5827}let v_1268: bool = not-caught-fail(k_124) in
                                    {5828}let early_secret_97: bitstring = (if v_1267 then catch-fail((if v_1268 then hmac(@6_backend_h,s_129,k_124) else fail-any)) else caught-fail) in
                                    {5829}let v_1269: bool = not-caught-fail(early_secret_97) in
                                    {5830}let l_361: label = (if v_1269 then tls13_ext_res_binder else caught-fail) in
                                    {5831}let m_127: bitstring = (if v_1269 then zero else caught-fail) in
                                    {5832}let h_348: bitstring = (if v_1269 then catch-fail(hash(@6_backend_h,m_127)) else caught-fail) in
                                    {5833}let v_1270: bool = not-caught-fail(h_348) in
                                    {5834}let x_408: bitstring = (if v_1270 then (l_361,h_348) else caught-fail) in
                                    {5835}let binder_key_65: bitstring = (if v_1269 then catch-fail((if v_1270 then hmac(@6_backend_h,early_secret_97,x_408) else fail-any)) else caught-fail) in
                                    {5836}let v_1271: bool = not-caught-fail(binder_key_65) in
                                    {5837}let v_1272: bitstring = (if v_1267 then catch-fail((if v_1269 then (if v_1271 then (early_secret_97,binder_key_65) else fail-any) else fail-any)) else caught-fail) in
                                    {5838}let v_1273: bool = (not-caught-fail(v_1272) && success?(1-proj-2-tuple(v_1272))) in
                                    {5839}let kb_65: mac_key = (if v_1273 then 2-proj-2-tuple(v_1272) else caught-fail) in
                                    {5840}let es_98: bitstring = (if v_1273 then 1-proj-2-tuple(v_1272) else caught-fail) in
                                    {5841}let v_1274: bitstring = (if not(v_1267) then catch-fail(psk_data'_25) else caught-fail) in
                                    {5842}let v_1275: bool = (not-caught-fail(v_1274) && success?(1-proj-4-tuple(v_1274))) in
                                    {5843}let is_safe_58: bool = (if v_1275 then 4-proj-4-tuple(v_1274) else caught-fail) in
                                    {5844}let es_99: bitstring = (if v_1275 then 3-proj-4-tuple(v_1274) else caught-fail) in
                                    {5845}let id_69: identityPsk = (if v_1275 then 2-proj-4-tuple(v_1274) else caught-fail) in
                                    {5846}let psk_148: preSharedKey = (if v_1275 then 1-proj-4-tuple(v_1274) else caught-fail) in
                                    {5847}let (psk_149: preSharedKey,early_secret_98: bitstring,valid_30: bool,safe_psk_36: bool) = (if v_1267 then (if v_1273 then (NoPsk,es_98,true,false) else fail-any) else (if v_1275 then (psk_148,es_99,((psk_148 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_62)),is_safe_58) else fail-any)) in
                                    {5848}event Client_PSKChoosen(@6_id_client,psk_149,safe_psk_36);
                                    {5849}if valid_30 then
                                    (
                                        {5850}let gxy_61: element = catch-fail(dh_decap_fun(g_34,gy_31,x_407)) in
                                        {5851}let v_1276: bool = not-caught-fail(gxy_61) in
                                        {5852}new s_130[]: seed;
                                        {5853}let gxy_62: element = (if v_1276 then gxy_61 else dh_f(s_130)) in
                                        {5854}event Client_DH_gxy(@6_id_client,gxy_62);
                                        {5855}let l_362: label = tls13_derived in
                                        {5856}let m_128: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {5857}let v_1277: bool = not-caught-fail(m_128) in
                                        {5858}let h_349: bitstring = (if v_1277 then catch-fail(hash(@6_backend_h,m_128)) else caught-fail) in
                                        {5859}let v_1278: bool = not-caught-fail(h_349) in
                                        {5860}let x_409: bitstring = (if v_1278 then (l_362,h_349) else caught-fail) in
                                        {5861}let extra_68: bitstring = catch-fail((if v_1277 then (if v_1278 then hmac(@6_backend_h,early_secret_98,x_409) else fail-any) else fail-any)) in
                                        {5862}let v_1279: bool = not-caught-fail(extra_68) in
                                        {5863}let handshake_secret_31: bitstring = (if v_1279 then hmac(@6_backend_h,extra_68,gxy_62) else fail-any) in
                                        {5864}let l_363: label = tls13_derived in
                                        {5865}let m_129: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {5866}let v_1280: bool = not-caught-fail(m_129) in
                                        {5867}let h_350: bitstring = (if v_1280 then catch-fail(hash(@6_backend_h,m_129)) else caught-fail) in
                                        {5868}let v_1281: bool = not-caught-fail(h_350) in
                                        {5869}let x_410: bitstring = (if v_1281 then (l_363,h_350) else caught-fail) in
                                        {5870}let extra_69: bitstring = catch-fail((if v_1280 then (if v_1281 then hmac(@6_backend_h,handshake_secret_31,x_410) else fail-any) else fail-any)) in
                                        {5871}let v_1282: bool = not-caught-fail(extra_69) in
                                        {5872}let k_125: bitstring = (if v_1282 then zero else caught-fail) in
                                        {5873}let master_secret_69: bitstring = (if v_1282 then catch-fail(hmac(@6_backend_h,handshake_secret_31,k_125)) else caught-fail) in
                                        {5874}let v_1283: bool = not-caught-fail(master_secret_69) in
                                        {5875}let l_364: label = (if v_1283 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {5876}let h_351: bitstring = (if v_1283 then catch-fail(hash(@6_backend_h,cur_log2_67)) else caught-fail) in
                                        {5877}let v_1284: bool = not-caught-fail(h_351) in
                                        {5878}let x_411: bitstring = (if v_1284 then (l_364,h_351) else caught-fail) in
                                        {5879}let client_hts_31: bitstring = (if v_1283 then catch-fail((if v_1284 then hmac(@6_backend_h,handshake_secret_31,x_411) else fail-any)) else caught-fail) in
                                        {5880}let v_1285: bool = not-caught-fail(client_hts_31) in
                                        {5881}let l_365: label = (if v_1285 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {5882}let h_352: bitstring = (if v_1285 then catch-fail(hash(@6_backend_h,cur_log2_67)) else caught-fail) in
                                        {5883}let v_1286: bool = not-caught-fail(h_352) in
                                        {5884}let x_412: bitstring = (if v_1286 then (l_365,h_352) else caught-fail) in
                                        {5885}let server_hts_31: bitstring = (if v_1285 then catch-fail((if v_1286 then hmac(@6_backend_h,handshake_secret_31,x_412) else fail-any)) else caught-fail) in
                                        {5886}let v_1287: bool = not-caught-fail(server_hts_31) in
                                        {5887}let l_366: label = (if v_1287 then tls13_key else caught-fail) in
                                        {5888}let h_353: bitstring = (if v_1287 then zero else caught-fail) in
                                        {5889}let x_413: bitstring = (if v_1287 then (l_366,h_353) else caught-fail) in
                                        {5890}let client_wkh_31: bitstring = (if v_1287 then catch-fail(hmac(@6_backend_h,client_hts_31,x_413)) else caught-fail) in
                                        {5891}let v_1288: bool = not-caught-fail(client_wkh_31) in
                                        {5892}let l_367: label = (if v_1288 then tls13_key else caught-fail) in
                                        {5893}let h_354: bitstring = (if v_1288 then zero else caught-fail) in
                                        {5894}let x_414: bitstring = (if v_1288 then (l_367,h_354) else caught-fail) in
                                        {5895}let server_wkh_31: bitstring = (if v_1288 then catch-fail(hmac(@6_backend_h,server_hts_31,x_414)) else caught-fail) in
                                        {5896}let v_1289: bool = not-caught-fail(server_wkh_31) in
                                        {5897}let l_368: label = (if v_1289 then tls13_finished else caught-fail) in
                                        {5898}let h_355: bitstring = (if v_1289 then zero else caught-fail) in
                                        {5899}let x_415: bitstring = (if v_1289 then (l_368,h_355) else caught-fail) in
                                        {5900}let client_fk_31: bitstring = (if v_1289 then catch-fail(hmac(@6_backend_h,client_hts_31,x_415)) else caught-fail) in
                                        {5901}let v_1290: bool = not-caught-fail(client_fk_31) in
                                        {5902}let l_369: label = (if v_1290 then tls13_finished else caught-fail) in
                                        {5903}let h_356: bitstring = (if v_1290 then zero else caught-fail) in
                                        {5904}let x_416: bitstring = (if v_1290 then (l_369,h_356) else caught-fail) in
                                        {5905}let server_fk_31: bitstring = (if v_1290 then catch-fail(hmac(@6_backend_h,server_hts_31,x_416)) else caught-fail) in
                                        {5906}let v_1291: bool = not-caught-fail(server_fk_31) in
                                        {5907}let (master_secret_70: bitstring,chk_38: aead_key,shk_37: aead_key,cfin_38: mac_key,sfin_37: mac_key) = (if v_1282 then (if v_1283 then (if v_1285 then (if v_1287 then (if v_1288 then (if v_1289 then (if v_1290 then (if v_1291 then (master_secret_69,client_wkh_31,server_wkh_31,client_fk_31,server_fk_31) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {5908}event Client_chk(@6_id_client,chk_38);
                                        {5909}event Client_shk(@6_id_client,shk_37);
                                        {5910}event Client_cfin(@6_id_client,cfin_38);
                                        {5911}event Client_sfin(@6_id_client,sfin_37);
                                        {5912}in(io, enc_ee_msg_30: bitstring);
                                        {5913}let ee_msg_31: msg = aead_dec(@6_backend_a,shk_37,0,zero,enc_ee_msg_30) in
                                        {5914}let EE(ech_ee_30: echExt,extra_ee_30: extraExt) = ee_msg_31 in
                                        {5915}let cur_log2_68: bitstring = (cur_log2_67,ee_msg_31) in
                                        {5916}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_6,sr_41,@6_backend_h,@6_backend_a,c_dom_6,backend_dom,psk_149,safe_psk_36,@6_comp_psk,master_secret_70,chk_38,0,shk_37,1,cfin_38,sfin_37,cur_log2_68)))
                                    )
                                    else
                                        {5917}out(io, illegal_parameter)
                                )
                                else
                                    {5918}out(io, illegal_parameter)
                            )
                            else
                                {6095}get pre_shared_keys(c_dom'_11: domain,=backend_dom,=@6_backend_h,id_70: identityPsk,psk_150: preSharedKey,idP_13: idProc,is_safe_59: bool) in
                                {5919}event Selected_one_time_used_psk(@6_id_client,psk_150,is_safe_59);
                                {5920}event Selected_psk(c_dom_6,c_dom'_11,idP_13,is_safe_59);
                                {5921}event Selected_psk_no_missmatch(@6_id_client,backend_dom,@6_backend_h,psk_150,id_70);
                                {5922}event Selected_psk_with_ID(c_dom_6,c_dom'_11,id_70,idP_13,is_safe_59);
                                {5923}let v_1292: bitstring = (id_70,psk_150,is_safe_59) in
                                {5924}let v_1293: bool = success?(1-proj-3-tuple(v_1292)) in
                                {5925}let is_safe_60: bool = (if v_1293 then 3-proj-3-tuple(v_1292) else caught-fail) in
                                {5926}let psk_151: preSharedKey = (if v_1293 then 2-proj-3-tuple(v_1292) else caught-fail) in
                                {5927}let id_71: identityPsk = (if v_1293 then 1-proj-3-tuple(v_1292) else caught-fail) in
                                {5928}let offer_33: params = (if v_1293 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_3,SNI(backend_dom),ech_ext_11,@6_i_extra_ext,trunc_client_psk_ext(id_71)) else caught-fail) in
                                {5929}let cur_log'_21: bitstring = (if v_1293 then (cur_log_IN1_HRR_2,CH(i_cr_6,offer_33)) else caught-fail) in
                                {5930}let s_131: bitstring = (if v_1293 then zero else caught-fail) in
                                {5931}let k_126: bitstring = (if v_1293 then catch-fail(psk2b(psk_151)) else caught-fail) in
                                {5932}let v_1294: bool = not-caught-fail(k_126) in
                                {5933}let early_secret_99: bitstring = (if v_1293 then catch-fail((if v_1294 then hmac(@6_backend_h,s_131,k_126) else fail-any)) else caught-fail) in
                                {5934}let v_1295: bool = not-caught-fail(early_secret_99) in
                                {5935}let l_370: label = (if v_1295 then tls13_ext_res_binder else caught-fail) in
                                {5936}let m_130: bitstring = (if v_1295 then zero else caught-fail) in
                                {5937}let h_357: bitstring = (if v_1295 then catch-fail(hash(@6_backend_h,m_130)) else caught-fail) in
                                {5938}let v_1296: bool = not-caught-fail(h_357) in
                                {5939}let x_417: bitstring = (if v_1296 then (l_370,h_357) else caught-fail) in
                                {5940}let binder_key_66: bitstring = (if v_1295 then catch-fail((if v_1296 then hmac(@6_backend_h,early_secret_99,x_417) else fail-any)) else caught-fail) in
                                {5941}let v_1297: bool = not-caught-fail(binder_key_66) in
                                {5942}let v_1298: bitstring = (if v_1293 then catch-fail((if v_1295 then (if v_1297 then (early_secret_99,binder_key_66) else fail-any) else fail-any)) else caught-fail) in
                                {5943}let v_1299: bool = (not-caught-fail(v_1298) && success?(1-proj-2-tuple(v_1298))) in
                                {5944}let kb_66: mac_key = (if v_1299 then 2-proj-2-tuple(v_1298) else caught-fail) in
                                {5945}let es_100: bitstring = (if v_1299 then 1-proj-2-tuple(v_1298) else caught-fail) in
                                {5946}let binders_20: bitstring = (if v_1299 then catch-fail(hmac(@6_backend_h,kb_66,cur_log'_21)) else caught-fail) in
                                {5947}let v_1300: bool = not-caught-fail(binders_20) in
                                {5948}let v_1301: bitstring = catch-fail((if v_1293 then (if v_1299 then (if v_1300 then (client_psk_ext(id_71,binders_20),(psk_151,id_71,es_100,is_safe_60)) else fail-any) else fail-any) else fail-any)) in
                                {5949}let v_1302: bool = (not-caught-fail(v_1301) && success?(1-proj-2-tuple(v_1301))) in
                                {5950}let psk_data_36: bitstring = (if v_1302 then 2-proj-2-tuple(v_1301) else caught-fail) in
                                {5951}let psk_ext_63: preSharedKeyExt = (if v_1302 then 1-proj-2-tuple(v_1301) else caught-fail) in
                                {5952}let i_offer_10: params = (if v_1302 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_3,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_63) else caught-fail) in
                                {5953}let i_client_hello_13: msg = (if v_1302 then CH(i_cr_6,i_offer_10) else caught-fail) in
                                {5954}new fake_id_12[]: identityPsk;
                                {5955}new fake_binder_12[]: bitstring;
                                {5956}let o_psk_ext_13: preSharedKeyExt = (if v_1302 then (if @6_use_psk then client_psk_ext(fake_id_12,fake_binder_12) else empty_psk_ext) else caught-fail) in
                                {5957}let o_ech_ext_ADD_10: echExt = (if v_1302 then ECHClientHelloOuter(ech_h_8,ech_a_8,config_id_6,zero,zero) else caught-fail) in
                                {5958}let o_offer_ADD_10: params = (if v_1302 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_5,SNI(o_dom_6),o_ech_ext_ADD_10,empty_extra_ext,o_psk_ext_13) else caught-fail) in
                                {5959}let o_client_hello_ADD_10: msg = (if v_1302 then CH(o_cr_8,o_offer_ADD_10) else caught-fail) in
                                {5960}let n_10: nat = (if v_1302 then 2 else caught-fail) in
                                {5961}let v_1303: hpkeContext = (if v_1302 then catch-fail(context) else caught-fail) in
                                {5962}let v_1304: bool = (not-caught-fail(v_1303) && ((S =nf 1-proj-hpke_context(v_1303)) && success?(1-proj-hpke_context(v_1303)))) in
                                {5963}let base_nonce_11: bitstring = (if v_1304 then 3-proj-hpke_context(v_1303) else caught-fail) in
                                {5964}let key_11: aead_key = (if v_1304 then 2-proj-hpke_context(v_1303) else caught-fail) in
                                {5965}let payload_11: bitstring = (if v_1302 then catch-fail((if v_1304 then aead_enc(ech_a_8,key_11,(base_nonce_11,n_10),o_client_hello_ADD_10,i_client_hello_13) else fail-any)) else caught-fail) in
                                {5966}let v_1305: bool = not-caught-fail(payload_11) in
                                {5967}let o_ech_ext_13: echExt = (if v_1305 then ECHClientHelloOuter(ech_h_8,ech_a_8,config_id_6,zero,payload_11) else caught-fail) in
                                {5968}let o_offer_21: params = (if v_1305 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_5,SNI(o_dom_6),o_ech_ext_13,empty_extra_ext,o_psk_ext_13) else caught-fail) in
                                {5969}let (o_client_hello'_7: msg,i_client_hello'_7: msg,i_cr'_7: bytes32,i_kex_data'_7: bitstring,psk_data'_26: bitstring) = (if v_1302 then (if v_1305 then (CH(o_cr_8,o_offer_21),i_client_hello_13,i_cr_6,i_kex_data_6,psk_data_36) else fail-any) else fail-any) in
                                {5970}out(io, o_client_hello'_7);
                                {5971}in(io, server_hello'_24: msg);
                                {5972}let SH(B32(sr24'_7: bytes24,sr8'_7: bytes8),params'_7: params) = server_hello'_24 in
                                {5973}let cur_log_IN1_HRR_IN2_7: bitstring = (cur_log_IN1_HRR_2,i_client_hello'_7) in
                                {5974}let sh_modified_10: msg = SH(B32(sr24'_7,zero8),params'_7) in
                                {5975}let cur_log_sh_10: bitstring = (cur_log_IN1_HRR_IN2_7,sh_modified_10) in
                                {5976}let transcript_ech_conf_10: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_10)) in
                                {5977}let v_1306: bool = not-caught-fail(transcript_ech_conf_10) in
                                {5978}let s_132: bitstring = (if v_1306 then zero else caught-fail) in
                                {5979}let k_127: bitstring = (if v_1306 then catch-fail(b32_2_b(get_random(i_client_hello'_7))) else caught-fail) in
                                {5980}let v_1307: bool = not-caught-fail(k_127) in
                                {5981}let k_128: bitstring = (if v_1306 then catch-fail((if v_1307 then hmac(@6_backend_h,s_132,k_127) else fail-any)) else caught-fail) in
                                {5982}let v_1308: bool = not-caught-fail(k_128) in
                                {5983}let l_371: label = (if v_1308 then ech_accept_confirmation else caught-fail) in
                                {5984}let x_418: bitstring = (if v_1308 then (l_371,cur_log_sh_10) else caught-fail) in
                                {5985}let sr8_13: bytes8 = (if v_1306 then catch-fail(crop_into_bytes8((if v_1308 then hmac(@6_backend_h,k_128,x_418) else fail-any))) else caught-fail) in
                                {5986}let v_1309: bool = not-caught-fail(sr8_13) in
                                {5987}if (B32(sr24'_7,sr8'_7) = (if v_1306 then (if v_1309 then B32(sr24'_7,sr8_13) else fail-any) else fail-any)) then
                                {5988}let (x_419: bitstring,g_35: group) = i_kex_data'_7 in
                                {5989}let (psk_offer_31: preSharedKey,id_offer_31: identityPsk,es_offer_31: bitstring,is_safe_offer_31: bool) = psk_data'_26 in
                                {5990}event Client_PSKOffer(@6_id_client,psk_offer_31,id_offer_31,is_safe_offer_31);
                                {5991}event Client_Rand_client(@6_id_client,i_cr'_7);
                                {5992}event Client_DH_client(@6_id_client,dh_pub(g_35,x_419));
                                {5993}event Client_server_domain(@6_id_client,backend_dom);
                                {5994}let SH(sr_42: bytes32,mode_37: params) = server_hello'_24 in
                                {5995}event Client_Rand_server(@6_id_client,sr_42);
                                {5996}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_35,gy_32: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_64: preSharedKeyExt) = mode_37 in
                                (
                                    {5997}let cur_log2_69: bitstring = (cur_log_IN1_HRR_IN2_7,server_hello'_24) in
                                    {5998}event Client_DH_server(@6_id_client,gy_32);
                                    {5999}let v_1310: bool = (psk_ext_64 = empty_psk_ext) in
                                    {6000}let psk_152: preSharedKey = (if v_1310 then NoPsk else caught-fail) in
                                    {6001}let s_133: bitstring = (if v_1310 then zero else caught-fail) in
                                    {6002}let k_129: bitstring = (if v_1310 then catch-fail(psk2b(psk_152)) else caught-fail) in
                                    {6003}let v_1311: bool = not-caught-fail(k_129) in
                                    {6004}let early_secret_100: bitstring = (if v_1310 then catch-fail((if v_1311 then hmac(@6_backend_h,s_133,k_129) else fail-any)) else caught-fail) in
                                    {6005}let v_1312: bool = not-caught-fail(early_secret_100) in
                                    {6006}let l_372: label = (if v_1312 then tls13_ext_res_binder else caught-fail) in
                                    {6007}let m_131: bitstring = (if v_1312 then zero else caught-fail) in
                                    {6008}let h_358: bitstring = (if v_1312 then catch-fail(hash(@6_backend_h,m_131)) else caught-fail) in
                                    {6009}let v_1313: bool = not-caught-fail(h_358) in
                                    {6010}let x_420: bitstring = (if v_1313 then (l_372,h_358) else caught-fail) in
                                    {6011}let binder_key_67: bitstring = (if v_1312 then catch-fail((if v_1313 then hmac(@6_backend_h,early_secret_100,x_420) else fail-any)) else caught-fail) in
                                    {6012}let v_1314: bool = not-caught-fail(binder_key_67) in
                                    {6013}let v_1315: bitstring = (if v_1310 then catch-fail((if v_1312 then (if v_1314 then (early_secret_100,binder_key_67) else fail-any) else fail-any)) else caught-fail) in
                                    {6014}let v_1316: bool = (not-caught-fail(v_1315) && success?(1-proj-2-tuple(v_1315))) in
                                    {6015}let kb_67: mac_key = (if v_1316 then 2-proj-2-tuple(v_1315) else caught-fail) in
                                    {6016}let es_101: bitstring = (if v_1316 then 1-proj-2-tuple(v_1315) else caught-fail) in
                                    {6017}let v_1317: bitstring = (if not(v_1310) then catch-fail(psk_data'_26) else caught-fail) in
                                    {6018}let v_1318: bool = (not-caught-fail(v_1317) && success?(1-proj-4-tuple(v_1317))) in
                                    {6019}let is_safe_61: bool = (if v_1318 then 4-proj-4-tuple(v_1317) else caught-fail) in
                                    {6020}let es_102: bitstring = (if v_1318 then 3-proj-4-tuple(v_1317) else caught-fail) in
                                    {6021}let id_72: identityPsk = (if v_1318 then 2-proj-4-tuple(v_1317) else caught-fail) in
                                    {6022}let psk_153: preSharedKey = (if v_1318 then 1-proj-4-tuple(v_1317) else caught-fail) in
                                    {6023}let (psk_154: preSharedKey,early_secret_101: bitstring,valid_31: bool,safe_psk_37: bool) = (if v_1310 then (if v_1316 then (NoPsk,es_101,true,false) else fail-any) else (if v_1318 then (psk_153,es_102,((psk_153 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_64)),is_safe_61) else fail-any)) in
                                    {6024}event Client_PSKChoosen(@6_id_client,psk_154,safe_psk_37);
                                    {6025}if valid_31 then
                                    (
                                        {6026}let gxy_63: element = catch-fail(dh_decap_fun(g_35,gy_32,x_419)) in
                                        {6027}let v_1319: bool = not-caught-fail(gxy_63) in
                                        {6028}new s_134[]: seed;
                                        {6029}let gxy_64: element = (if v_1319 then gxy_63 else dh_f(s_134)) in
                                        {6030}event Client_DH_gxy(@6_id_client,gxy_64);
                                        {6031}let l_373: label = tls13_derived in
                                        {6032}let m_132: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {6033}let v_1320: bool = not-caught-fail(m_132) in
                                        {6034}let h_359: bitstring = (if v_1320 then catch-fail(hash(@6_backend_h,m_132)) else caught-fail) in
                                        {6035}let v_1321: bool = not-caught-fail(h_359) in
                                        {6036}let x_421: bitstring = (if v_1321 then (l_373,h_359) else caught-fail) in
                                        {6037}let extra_70: bitstring = catch-fail((if v_1320 then (if v_1321 then hmac(@6_backend_h,early_secret_101,x_421) else fail-any) else fail-any)) in
                                        {6038}let v_1322: bool = not-caught-fail(extra_70) in
                                        {6039}let handshake_secret_32: bitstring = (if v_1322 then hmac(@6_backend_h,extra_70,gxy_64) else fail-any) in
                                        {6040}let l_374: label = tls13_derived in
                                        {6041}let m_133: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {6042}let v_1323: bool = not-caught-fail(m_133) in
                                        {6043}let h_360: bitstring = (if v_1323 then catch-fail(hash(@6_backend_h,m_133)) else caught-fail) in
                                        {6044}let v_1324: bool = not-caught-fail(h_360) in
                                        {6045}let x_422: bitstring = (if v_1324 then (l_374,h_360) else caught-fail) in
                                        {6046}let extra_71: bitstring = catch-fail((if v_1323 then (if v_1324 then hmac(@6_backend_h,handshake_secret_32,x_422) else fail-any) else fail-any)) in
                                        {6047}let v_1325: bool = not-caught-fail(extra_71) in
                                        {6048}let k_130: bitstring = (if v_1325 then zero else caught-fail) in
                                        {6049}let master_secret_71: bitstring = (if v_1325 then catch-fail(hmac(@6_backend_h,handshake_secret_32,k_130)) else caught-fail) in
                                        {6050}let v_1326: bool = not-caught-fail(master_secret_71) in
                                        {6051}let l_375: label = (if v_1326 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {6052}let h_361: bitstring = (if v_1326 then catch-fail(hash(@6_backend_h,cur_log2_69)) else caught-fail) in
                                        {6053}let v_1327: bool = not-caught-fail(h_361) in
                                        {6054}let x_423: bitstring = (if v_1327 then (l_375,h_361) else caught-fail) in
                                        {6055}let client_hts_32: bitstring = (if v_1326 then catch-fail((if v_1327 then hmac(@6_backend_h,handshake_secret_32,x_423) else fail-any)) else caught-fail) in
                                        {6056}let v_1328: bool = not-caught-fail(client_hts_32) in
                                        {6057}let l_376: label = (if v_1328 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {6058}let h_362: bitstring = (if v_1328 then catch-fail(hash(@6_backend_h,cur_log2_69)) else caught-fail) in
                                        {6059}let v_1329: bool = not-caught-fail(h_362) in
                                        {6060}let x_424: bitstring = (if v_1329 then (l_376,h_362) else caught-fail) in
                                        {6061}let server_hts_32: bitstring = (if v_1328 then catch-fail((if v_1329 then hmac(@6_backend_h,handshake_secret_32,x_424) else fail-any)) else caught-fail) in
                                        {6062}let v_1330: bool = not-caught-fail(server_hts_32) in
                                        {6063}let l_377: label = (if v_1330 then tls13_key else caught-fail) in
                                        {6064}let h_363: bitstring = (if v_1330 then zero else caught-fail) in
                                        {6065}let x_425: bitstring = (if v_1330 then (l_377,h_363) else caught-fail) in
                                        {6066}let client_wkh_32: bitstring = (if v_1330 then catch-fail(hmac(@6_backend_h,client_hts_32,x_425)) else caught-fail) in
                                        {6067}let v_1331: bool = not-caught-fail(client_wkh_32) in
                                        {6068}let l_378: label = (if v_1331 then tls13_key else caught-fail) in
                                        {6069}let h_364: bitstring = (if v_1331 then zero else caught-fail) in
                                        {6070}let x_426: bitstring = (if v_1331 then (l_378,h_364) else caught-fail) in
                                        {6071}let server_wkh_32: bitstring = (if v_1331 then catch-fail(hmac(@6_backend_h,server_hts_32,x_426)) else caught-fail) in
                                        {6072}let v_1332: bool = not-caught-fail(server_wkh_32) in
                                        {6073}let l_379: label = (if v_1332 then tls13_finished else caught-fail) in
                                        {6074}let h_365: bitstring = (if v_1332 then zero else caught-fail) in
                                        {6075}let x_427: bitstring = (if v_1332 then (l_379,h_365) else caught-fail) in
                                        {6076}let client_fk_32: bitstring = (if v_1332 then catch-fail(hmac(@6_backend_h,client_hts_32,x_427)) else caught-fail) in
                                        {6077}let v_1333: bool = not-caught-fail(client_fk_32) in
                                        {6078}let l_380: label = (if v_1333 then tls13_finished else caught-fail) in
                                        {6079}let h_366: bitstring = (if v_1333 then zero else caught-fail) in
                                        {6080}let x_428: bitstring = (if v_1333 then (l_380,h_366) else caught-fail) in
                                        {6081}let server_fk_32: bitstring = (if v_1333 then catch-fail(hmac(@6_backend_h,server_hts_32,x_428)) else caught-fail) in
                                        {6082}let v_1334: bool = not-caught-fail(server_fk_32) in
                                        {6083}let (master_secret_72: bitstring,chk_39: aead_key,shk_38: aead_key,cfin_39: mac_key,sfin_38: mac_key) = (if v_1325 then (if v_1326 then (if v_1328 then (if v_1330 then (if v_1331 then (if v_1332 then (if v_1333 then (if v_1334 then (master_secret_71,client_wkh_32,server_wkh_32,client_fk_32,server_fk_32) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {6084}event Client_chk(@6_id_client,chk_39);
                                        {6085}event Client_shk(@6_id_client,shk_38);
                                        {6086}event Client_cfin(@6_id_client,cfin_39);
                                        {6087}event Client_sfin(@6_id_client,sfin_38);
                                        {6088}in(io, enc_ee_msg_31: bitstring);
                                        {6089}let ee_msg_32: msg = aead_dec(@6_backend_a,shk_38,0,zero,enc_ee_msg_31) in
                                        {6090}let EE(ech_ee_31: echExt,extra_ee_31: extraExt) = ee_msg_32 in
                                        {6091}let cur_log2_70: bitstring = (cur_log2_69,ee_msg_32) in
                                        {6092}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_7,sr_42,@6_backend_h,@6_backend_a,c_dom_6,backend_dom,psk_154,safe_psk_37,@6_comp_psk,master_secret_72,chk_39,0,shk_38,1,cfin_39,sfin_38,cur_log2_70)))
                                    )
                                    else
                                        {6093}out(io, illegal_parameter)
                                )
                                else
                                    {6094}out(io, illegal_parameter)
                        )
                        else
                            {6096}let psk_155: preSharedKey = NoPsk in
                            {6097}let s_135: bitstring = zero in
                            {6098}let k_131: bitstring = catch-fail(psk2b(psk_155)) in
                            {6099}let v_1335: bool = not-caught-fail(k_131) in
                            {6100}let early_secret_102: bitstring = catch-fail((if v_1335 then hmac(@6_backend_h,s_135,k_131) else fail-any)) in
                            {6101}let v_1336: bool = not-caught-fail(early_secret_102) in
                            {6102}let l_381: label = (if v_1336 then tls13_ext_res_binder else caught-fail) in
                            {6103}let m_134: bitstring = (if v_1336 then zero else caught-fail) in
                            {6104}let h_367: bitstring = (if v_1336 then catch-fail(hash(@6_backend_h,m_134)) else caught-fail) in
                            {6105}let v_1337: bool = not-caught-fail(h_367) in
                            {6106}let x_429: bitstring = (if v_1337 then (l_381,h_367) else caught-fail) in
                            {6107}let binder_key_68: bitstring = (if v_1336 then catch-fail((if v_1337 then hmac(@6_backend_h,early_secret_102,x_429) else fail-any)) else caught-fail) in
                            {6108}let v_1338: bool = not-caught-fail(binder_key_68) in
                            {6109}let v_1339: bitstring = catch-fail((if v_1336 then (if v_1338 then (early_secret_102,binder_key_68) else fail-any) else fail-any)) in
                            {6110}let v_1340: bool = (not-caught-fail(v_1339) && success?(1-proj-2-tuple(v_1339))) in
                            {6111}let kb_68: mac_key = (if v_1340 then 2-proj-2-tuple(v_1339) else caught-fail) in
                            {6112}let es_103: bitstring = (if v_1340 then 1-proj-2-tuple(v_1339) else caught-fail) in
                            {6113}let v_1341: bitstring = catch-fail((if v_1340 then (empty_psk_ext,(NoPsk,zero,es_103,false)) else fail-any)) in
                            {6114}let v_1342: bool = (not-caught-fail(v_1341) && success?(1-proj-2-tuple(v_1341))) in
                            {6115}let psk_data_37: bitstring = (if v_1342 then 2-proj-2-tuple(v_1341) else caught-fail) in
                            {6116}let psk_ext_65: preSharedKeyExt = (if v_1342 then 1-proj-2-tuple(v_1341) else caught-fail) in
                            {6117}let i_offer_11: params = (if v_1342 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_3,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_65) else caught-fail) in
                            {6118}let i_client_hello_14: msg = (if v_1342 then CH(i_cr_6,i_offer_11) else caught-fail) in
                            {6119}new fake_id_13[]: identityPsk;
                            {6120}new fake_binder_13[]: bitstring;
                            {6121}let o_psk_ext_14: preSharedKeyExt = (if v_1342 then (if @6_use_psk then client_psk_ext(fake_id_13,fake_binder_13) else empty_psk_ext) else caught-fail) in
                            {6122}let o_ech_ext_ADD_11: echExt = (if v_1342 then ECHClientHelloOuter(ech_h_8,ech_a_8,config_id_6,zero,zero) else caught-fail) in
                            {6123}let o_offer_ADD_11: params = (if v_1342 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_5,SNI(o_dom_6),o_ech_ext_ADD_11,empty_extra_ext,o_psk_ext_14) else caught-fail) in
                            {6124}let o_client_hello_ADD_11: msg = (if v_1342 then CH(o_cr_8,o_offer_ADD_11) else caught-fail) in
                            {6125}let n_11: nat = (if v_1342 then 2 else caught-fail) in
                            {6126}let v_1343: hpkeContext = (if v_1342 then catch-fail(context) else caught-fail) in
                            {6127}let v_1344: bool = (not-caught-fail(v_1343) && ((S =nf 1-proj-hpke_context(v_1343)) && success?(1-proj-hpke_context(v_1343)))) in
                            {6128}let base_nonce_12: bitstring = (if v_1344 then 3-proj-hpke_context(v_1343) else caught-fail) in
                            {6129}let key_12: aead_key = (if v_1344 then 2-proj-hpke_context(v_1343) else caught-fail) in
                            {6130}let payload_12: bitstring = (if v_1342 then catch-fail((if v_1344 then aead_enc(ech_a_8,key_12,(base_nonce_12,n_11),o_client_hello_ADD_11,i_client_hello_14) else fail-any)) else caught-fail) in
                            {6131}let v_1345: bool = not-caught-fail(payload_12) in
                            {6132}let o_ech_ext_14: echExt = (if v_1345 then ECHClientHelloOuter(ech_h_8,ech_a_8,config_id_6,zero,payload_12) else caught-fail) in
                            {6133}let o_offer_22: params = (if v_1345 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_5,SNI(o_dom_6),o_ech_ext_14,empty_extra_ext,o_psk_ext_14) else caught-fail) in
                            {6134}let (o_client_hello'_8: msg,i_client_hello'_8: msg,i_cr'_8: bytes32,i_kex_data'_8: bitstring,psk_data'_27: bitstring) = (if v_1342 then (if v_1345 then (CH(o_cr_8,o_offer_22),i_client_hello_14,i_cr_6,i_kex_data_6,psk_data_37) else fail-any) else fail-any) in
                            {6135}out(io, o_client_hello'_8);
                            {6136}in(io, server_hello'_25: msg);
                            {6137}let SH(B32(sr24'_8: bytes24,sr8'_8: bytes8),params'_8: params) = server_hello'_25 in
                            {6138}let cur_log_IN1_HRR_IN2_8: bitstring = (cur_log_IN1_HRR_2,i_client_hello'_8) in
                            {6139}let sh_modified_11: msg = SH(B32(sr24'_8,zero8),params'_8) in
                            {6140}let cur_log_sh_11: bitstring = (cur_log_IN1_HRR_IN2_8,sh_modified_11) in
                            {6141}let transcript_ech_conf_11: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_11)) in
                            {6142}let v_1346: bool = not-caught-fail(transcript_ech_conf_11) in
                            {6143}let s_136: bitstring = (if v_1346 then zero else caught-fail) in
                            {6144}let k_132: bitstring = (if v_1346 then catch-fail(b32_2_b(get_random(i_client_hello'_8))) else caught-fail) in
                            {6145}let v_1347: bool = not-caught-fail(k_132) in
                            {6146}let k_133: bitstring = (if v_1346 then catch-fail((if v_1347 then hmac(@6_backend_h,s_136,k_132) else fail-any)) else caught-fail) in
                            {6147}let v_1348: bool = not-caught-fail(k_133) in
                            {6148}let l_382: label = (if v_1348 then ech_accept_confirmation else caught-fail) in
                            {6149}let x_430: bitstring = (if v_1348 then (l_382,cur_log_sh_11) else caught-fail) in
                            {6150}let sr8_14: bytes8 = (if v_1346 then catch-fail(crop_into_bytes8((if v_1348 then hmac(@6_backend_h,k_133,x_430) else fail-any))) else caught-fail) in
                            {6151}let v_1349: bool = not-caught-fail(sr8_14) in
                            {6152}if (B32(sr24'_8,sr8'_8) = (if v_1346 then (if v_1349 then B32(sr24'_8,sr8_14) else fail-any) else fail-any)) then
                            {6153}let (x_431: bitstring,g_36: group) = i_kex_data'_8 in
                            {6154}let (psk_offer_32: preSharedKey,id_offer_32: identityPsk,es_offer_32: bitstring,is_safe_offer_32: bool) = psk_data'_27 in
                            {6155}event Client_PSKOffer(@6_id_client,psk_offer_32,id_offer_32,is_safe_offer_32);
                            {6156}event Client_Rand_client(@6_id_client,i_cr'_8);
                            {6157}event Client_DH_client(@6_id_client,dh_pub(g_36,x_431));
                            {6158}event Client_server_domain(@6_id_client,backend_dom);
                            {6159}let SH(sr_43: bytes32,mode_38: params) = server_hello'_25 in
                            {6160}event Client_Rand_server(@6_id_client,sr_43);
                            {6161}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_36,gy_33: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_66: preSharedKeyExt) = mode_38 in
                            (
                                {6162}let cur_log2_71: bitstring = (cur_log_IN1_HRR_IN2_8,server_hello'_25) in
                                {6163}event Client_DH_server(@6_id_client,gy_33);
                                {6164}let v_1350: bool = (psk_ext_66 = empty_psk_ext) in
                                {6165}let psk_156: preSharedKey = (if v_1350 then NoPsk else caught-fail) in
                                {6166}let s_137: bitstring = (if v_1350 then zero else caught-fail) in
                                {6167}let k_134: bitstring = (if v_1350 then catch-fail(psk2b(psk_156)) else caught-fail) in
                                {6168}let v_1351: bool = not-caught-fail(k_134) in
                                {6169}let early_secret_103: bitstring = (if v_1350 then catch-fail((if v_1351 then hmac(@6_backend_h,s_137,k_134) else fail-any)) else caught-fail) in
                                {6170}let v_1352: bool = not-caught-fail(early_secret_103) in
                                {6171}let l_383: label = (if v_1352 then tls13_ext_res_binder else caught-fail) in
                                {6172}let m_135: bitstring = (if v_1352 then zero else caught-fail) in
                                {6173}let h_368: bitstring = (if v_1352 then catch-fail(hash(@6_backend_h,m_135)) else caught-fail) in
                                {6174}let v_1353: bool = not-caught-fail(h_368) in
                                {6175}let x_432: bitstring = (if v_1353 then (l_383,h_368) else caught-fail) in
                                {6176}let binder_key_69: bitstring = (if v_1352 then catch-fail((if v_1353 then hmac(@6_backend_h,early_secret_103,x_432) else fail-any)) else caught-fail) in
                                {6177}let v_1354: bool = not-caught-fail(binder_key_69) in
                                {6178}let v_1355: bitstring = (if v_1350 then catch-fail((if v_1352 then (if v_1354 then (early_secret_103,binder_key_69) else fail-any) else fail-any)) else caught-fail) in
                                {6179}let v_1356: bool = (not-caught-fail(v_1355) && success?(1-proj-2-tuple(v_1355))) in
                                {6180}let kb_69: mac_key = (if v_1356 then 2-proj-2-tuple(v_1355) else caught-fail) in
                                {6181}let es_104: bitstring = (if v_1356 then 1-proj-2-tuple(v_1355) else caught-fail) in
                                {6182}let v_1357: bitstring = (if not(v_1350) then catch-fail(psk_data'_27) else caught-fail) in
                                {6183}let v_1358: bool = (not-caught-fail(v_1357) && success?(1-proj-4-tuple(v_1357))) in
                                {6184}let is_safe_62: bool = (if v_1358 then 4-proj-4-tuple(v_1357) else caught-fail) in
                                {6185}let es_105: bitstring = (if v_1358 then 3-proj-4-tuple(v_1357) else caught-fail) in
                                {6186}let id_73: identityPsk = (if v_1358 then 2-proj-4-tuple(v_1357) else caught-fail) in
                                {6187}let psk_157: preSharedKey = (if v_1358 then 1-proj-4-tuple(v_1357) else caught-fail) in
                                {6188}let (psk_158: preSharedKey,early_secret_104: bitstring,valid_32: bool,safe_psk_38: bool) = (if v_1350 then (if v_1356 then (NoPsk,es_104,true,false) else fail-any) else (if v_1358 then (psk_157,es_105,((psk_157 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_66)),is_safe_62) else fail-any)) in
                                {6189}event Client_PSKChoosen(@6_id_client,psk_158,safe_psk_38);
                                {6190}if valid_32 then
                                (
                                    {6191}let gxy_65: element = catch-fail(dh_decap_fun(g_36,gy_33,x_431)) in
                                    {6192}let v_1359: bool = not-caught-fail(gxy_65) in
                                    {6193}new s_138[]: seed;
                                    {6194}let gxy_66: element = (if v_1359 then gxy_65 else dh_f(s_138)) in
                                    {6195}event Client_DH_gxy(@6_id_client,gxy_66);
                                    {6196}let l_384: label = tls13_derived in
                                    {6197}let m_136: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                    {6198}let v_1360: bool = not-caught-fail(m_136) in
                                    {6199}let h_369: bitstring = (if v_1360 then catch-fail(hash(@6_backend_h,m_136)) else caught-fail) in
                                    {6200}let v_1361: bool = not-caught-fail(h_369) in
                                    {6201}let x_433: bitstring = (if v_1361 then (l_384,h_369) else caught-fail) in
                                    {6202}let extra_72: bitstring = catch-fail((if v_1360 then (if v_1361 then hmac(@6_backend_h,early_secret_104,x_433) else fail-any) else fail-any)) in
                                    {6203}let v_1362: bool = not-caught-fail(extra_72) in
                                    {6204}let handshake_secret_33: bitstring = (if v_1362 then hmac(@6_backend_h,extra_72,gxy_66) else fail-any) in
                                    {6205}let l_385: label = tls13_derived in
                                    {6206}let m_137: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                    {6207}let v_1363: bool = not-caught-fail(m_137) in
                                    {6208}let h_370: bitstring = (if v_1363 then catch-fail(hash(@6_backend_h,m_137)) else caught-fail) in
                                    {6209}let v_1364: bool = not-caught-fail(h_370) in
                                    {6210}let x_434: bitstring = (if v_1364 then (l_385,h_370) else caught-fail) in
                                    {6211}let extra_73: bitstring = catch-fail((if v_1363 then (if v_1364 then hmac(@6_backend_h,handshake_secret_33,x_434) else fail-any) else fail-any)) in
                                    {6212}let v_1365: bool = not-caught-fail(extra_73) in
                                    {6213}let k_135: bitstring = (if v_1365 then zero else caught-fail) in
                                    {6214}let master_secret_73: bitstring = (if v_1365 then catch-fail(hmac(@6_backend_h,handshake_secret_33,k_135)) else caught-fail) in
                                    {6215}let v_1366: bool = not-caught-fail(master_secret_73) in
                                    {6216}let l_386: label = (if v_1366 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {6217}let h_371: bitstring = (if v_1366 then catch-fail(hash(@6_backend_h,cur_log2_71)) else caught-fail) in
                                    {6218}let v_1367: bool = not-caught-fail(h_371) in
                                    {6219}let x_435: bitstring = (if v_1367 then (l_386,h_371) else caught-fail) in
                                    {6220}let client_hts_33: bitstring = (if v_1366 then catch-fail((if v_1367 then hmac(@6_backend_h,handshake_secret_33,x_435) else fail-any)) else caught-fail) in
                                    {6221}let v_1368: bool = not-caught-fail(client_hts_33) in
                                    {6222}let l_387: label = (if v_1368 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {6223}let h_372: bitstring = (if v_1368 then catch-fail(hash(@6_backend_h,cur_log2_71)) else caught-fail) in
                                    {6224}let v_1369: bool = not-caught-fail(h_372) in
                                    {6225}let x_436: bitstring = (if v_1369 then (l_387,h_372) else caught-fail) in
                                    {6226}let server_hts_33: bitstring = (if v_1368 then catch-fail((if v_1369 then hmac(@6_backend_h,handshake_secret_33,x_436) else fail-any)) else caught-fail) in
                                    {6227}let v_1370: bool = not-caught-fail(server_hts_33) in
                                    {6228}let l_388: label = (if v_1370 then tls13_key else caught-fail) in
                                    {6229}let h_373: bitstring = (if v_1370 then zero else caught-fail) in
                                    {6230}let x_437: bitstring = (if v_1370 then (l_388,h_373) else caught-fail) in
                                    {6231}let client_wkh_33: bitstring = (if v_1370 then catch-fail(hmac(@6_backend_h,client_hts_33,x_437)) else caught-fail) in
                                    {6232}let v_1371: bool = not-caught-fail(client_wkh_33) in
                                    {6233}let l_389: label = (if v_1371 then tls13_key else caught-fail) in
                                    {6234}let h_374: bitstring = (if v_1371 then zero else caught-fail) in
                                    {6235}let x_438: bitstring = (if v_1371 then (l_389,h_374) else caught-fail) in
                                    {6236}let server_wkh_33: bitstring = (if v_1371 then catch-fail(hmac(@6_backend_h,server_hts_33,x_438)) else caught-fail) in
                                    {6237}let v_1372: bool = not-caught-fail(server_wkh_33) in
                                    {6238}let l_390: label = (if v_1372 then tls13_finished else caught-fail) in
                                    {6239}let h_375: bitstring = (if v_1372 then zero else caught-fail) in
                                    {6240}let x_439: bitstring = (if v_1372 then (l_390,h_375) else caught-fail) in
                                    {6241}let client_fk_33: bitstring = (if v_1372 then catch-fail(hmac(@6_backend_h,client_hts_33,x_439)) else caught-fail) in
                                    {6242}let v_1373: bool = not-caught-fail(client_fk_33) in
                                    {6243}let l_391: label = (if v_1373 then tls13_finished else caught-fail) in
                                    {6244}let h_376: bitstring = (if v_1373 then zero else caught-fail) in
                                    {6245}let x_440: bitstring = (if v_1373 then (l_391,h_376) else caught-fail) in
                                    {6246}let server_fk_33: bitstring = (if v_1373 then catch-fail(hmac(@6_backend_h,server_hts_33,x_440)) else caught-fail) in
                                    {6247}let v_1374: bool = not-caught-fail(server_fk_33) in
                                    {6248}let (master_secret_74: bitstring,chk_40: aead_key,shk_39: aead_key,cfin_40: mac_key,sfin_39: mac_key) = (if v_1365 then (if v_1366 then (if v_1368 then (if v_1370 then (if v_1371 then (if v_1372 then (if v_1373 then (if v_1374 then (master_secret_73,client_wkh_33,server_wkh_33,client_fk_33,server_fk_33) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {6249}event Client_chk(@6_id_client,chk_40);
                                    {6250}event Client_shk(@6_id_client,shk_39);
                                    {6251}event Client_cfin(@6_id_client,cfin_40);
                                    {6252}event Client_sfin(@6_id_client,sfin_39);
                                    {6253}in(io, enc_ee_msg_32: bitstring);
                                    {6254}let ee_msg_33: msg = aead_dec(@6_backend_a,shk_39,0,zero,enc_ee_msg_32) in
                                    {6255}let EE(ech_ee_32: echExt,extra_ee_32: extraExt) = ee_msg_33 in
                                    {6256}let cur_log2_72: bitstring = (cur_log2_71,ee_msg_33) in
                                    {6257}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_8,sr_43,@6_backend_h,@6_backend_a,c_dom_6,backend_dom,psk_158,safe_psk_38,@6_comp_psk,master_secret_74,chk_40,0,shk_39,1,cfin_40,sfin_39,cur_log2_72)))
                                )
                                else
                                    {6258}out(io, illegal_parameter)
                            )
                            else
                                {6259}out(io, illegal_parameter)
                    )
                    else
                        {6260}let cur_log_OU1_HRR_2: bitstring = ((zero,o_client_hello_2),server_hello_6) in
                        {6261}let ech_config(config_id_7: configId,ech_g_9: group,pkR_9: element,o_dom_7: domain,ech_h_9: hash_alg,ech_a_9: aead_alg) = ech_conf in
                        {6262}new rand24_15[]: bytes24;
                        {6263}new rand8_15[]: bytes8;
                        {6264}let o_cr_9: bytes32 = B32(rand24_15,rand8_15) in
                        {6265}let send_key_share_8: bool = true in
                        {6266}new s_139[]: seed;
                        {6267}let gx_31: element = dh_pub(@6_tls_g,dh_k(s_139)) in
                        {6268}let v_1375: bitstring = (dh_k(s_139),gx_31) in
                        {6269}let v_1376: bool = success?(1-proj-2-tuple(v_1375)) in
                        {6270}let gx_32: element = (if v_1376 then 2-proj-2-tuple(v_1375) else caught-fail) in
                        {6271}let x_441: bitstring = (if v_1376 then 1-proj-2-tuple(v_1375) else caught-fail) in
                        {6272}let kex_14: kex_alg = (if v_1376 then (if send_key_share_8 then DHE_kex(@6_tls_g,gx_32) else DHE_group(@6_tls_g)) else caught-fail) in
                        {6273}let (o_kex_ext_6: keyShareExt,kex_data_9: bitstring) = (if v_1376 then (client_kex_ext(kex_14),(x_441,@6_tls_g)) else fail-any) in
                        {6274}if @6_use_grease then
                        (
                            {6275}let extra_74: extraExt = empty_extra_ext in
                            {6276}if @6_use_psk then
                            (
                                {6277}let (psk_159: preSharedKey,id_74: identityPsk,old_es_10: bitstring,is_safe_63: bool) = psk_data_34 in
                                (
                                    {6278}let offer_34: params = nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_6,SNI(o_dom_7),o_ech_ext_11,extra_74,trunc_client_psk_ext(id_74)) in
                                    {6279}let cur_log'_22: bitstring = (cur_log_OU1_HRR_2,CH(o_cr_9,offer_34)) in
                                    {6280}let s_140: bitstring = zero in
                                    {6281}let k_136: bitstring = catch-fail(psk2b(psk_159)) in
                                    {6282}let v_1377: bool = not-caught-fail(k_136) in
                                    {6283}let early_secret_105: bitstring = catch-fail((if v_1377 then hmac(@6_tls_h,s_140,k_136) else fail-any)) in
                                    {6284}let v_1378: bool = not-caught-fail(early_secret_105) in
                                    {6285}let l_392: label = (if v_1378 then tls13_ext_res_binder else caught-fail) in
                                    {6286}let m_138: bitstring = (if v_1378 then zero else caught-fail) in
                                    {6287}let h_377: bitstring = (if v_1378 then catch-fail(hash(@6_tls_h,m_138)) else caught-fail) in
                                    {6288}let v_1379: bool = not-caught-fail(h_377) in
                                    {6289}let x_442: bitstring = (if v_1379 then (l_392,h_377) else caught-fail) in
                                    {6290}let binder_key_70: bitstring = (if v_1378 then catch-fail((if v_1379 then hmac(@6_tls_h,early_secret_105,x_442) else fail-any)) else caught-fail) in
                                    {6291}let v_1380: bool = not-caught-fail(binder_key_70) in
                                    {6292}let v_1381: bitstring = catch-fail((if v_1378 then (if v_1380 then (early_secret_105,binder_key_70) else fail-any) else fail-any)) in
                                    {6293}let v_1382: bool = (not-caught-fail(v_1381) && success?(1-proj-2-tuple(v_1381))) in
                                    {6294}let kb_70: mac_key = (if v_1382 then 2-proj-2-tuple(v_1381) else caught-fail) in
                                    {6295}let es_106: bitstring = (if v_1382 then 1-proj-2-tuple(v_1381) else caught-fail) in
                                    {6296}let binders_21: bitstring = (if v_1382 then catch-fail(hmac(@6_tls_h,kb_70,cur_log'_22)) else caught-fail) in
                                    {6297}let v_1383: bool = not-caught-fail(binders_21) in
                                    {6298}let v_1384: bitstring = catch-fail((if v_1382 then (if v_1383 then (client_psk_ext(id_74,binders_21),(psk_159,id_74,es_106,is_safe_63)) else fail-any) else fail-any)) in
                                    {6299}let v_1385: bool = (not-caught-fail(v_1384) && success?(1-proj-2-tuple(v_1384))) in
                                    {6300}let psk_data_38: bitstring = (if v_1385 then 2-proj-2-tuple(v_1384) else caught-fail) in
                                    {6301}let psk_ext_67: preSharedKeyExt = (if v_1385 then 1-proj-2-tuple(v_1384) else caught-fail) in
                                    {6302}let o_offer_23: params = (if v_1385 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_6,SNI(o_dom_7),o_ech_ext_11,empty_extra_ext,psk_ext_67) else caught-fail) in
                                    {6303}let (client_hello'_17: msg,cr'_17: bytes32,kex_data'_17: bitstring,psk_data'_28: bitstring) = (if v_1385 then (CH(o_cr_9,o_offer_23),o_cr_9,kex_data_9,psk_data_38) else fail-any) in
                                    {6304}out(io, client_hello'_17);
                                    {6305}let cur_log_OU1_HRR_OU2_8: bitstring = (cur_log_OU1_HRR_2,client_hello'_17) in
                                    {6306}in(io, server_hello'_26: msg);
                                    {6307}let SH(sr'_17: bytes32,mode'_17: params) = server_hello'_26 in
                                    (
                                        {6308}if (sr'_17 = B32(HRR24,HRR8)) then
                                            {6309}out(io, unexpected_message)
                                        else
                                            {6310}let (x_443: bitstring,g_37: group) = kex_data'_17 in
                                            {6311}let (psk_offer_33: preSharedKey,id_offer_33: identityPsk,es_offer_33: bitstring,is_safe_offer_33: bool) = psk_data'_28 in
                                            {6312}event Client_PSKOffer(@6_id_client,psk_offer_33,id_offer_33,is_safe_offer_33);
                                            {6313}event Client_Rand_client(@6_id_client,cr'_17);
                                            {6314}event Client_DH_client(@6_id_client,dh_pub(g_37,x_443));
                                            {6315}event Client_server_domain(@6_id_client,o_dom);
                                            {6316}let SH(sr_44: bytes32,mode_39: params) = server_hello'_26 in
                                            {6317}event Client_Rand_server(@6_id_client,sr_44);
                                            {6318}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_37,gy_34: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_68: preSharedKeyExt) = mode_39 in
                                            (
                                                {6319}let cur_log2_73: bitstring = (cur_log_OU1_HRR_OU2_8,server_hello'_26) in
                                                {6320}event Client_DH_server(@6_id_client,gy_34);
                                                {6321}let v_1386: bool = (psk_ext_68 = empty_psk_ext) in
                                                {6322}let psk_160: preSharedKey = (if v_1386 then NoPsk else caught-fail) in
                                                {6323}let s_141: bitstring = (if v_1386 then zero else caught-fail) in
                                                {6324}let k_137: bitstring = (if v_1386 then catch-fail(psk2b(psk_160)) else caught-fail) in
                                                {6325}let v_1387: bool = not-caught-fail(k_137) in
                                                {6326}let early_secret_106: bitstring = (if v_1386 then catch-fail((if v_1387 then hmac(@6_tls_h,s_141,k_137) else fail-any)) else caught-fail) in
                                                {6327}let v_1388: bool = not-caught-fail(early_secret_106) in
                                                {6328}let l_393: label = (if v_1388 then tls13_ext_res_binder else caught-fail) in
                                                {6329}let m_139: bitstring = (if v_1388 then zero else caught-fail) in
                                                {6330}let h_378: bitstring = (if v_1388 then catch-fail(hash(@6_tls_h,m_139)) else caught-fail) in
                                                {6331}let v_1389: bool = not-caught-fail(h_378) in
                                                {6332}let x_444: bitstring = (if v_1389 then (l_393,h_378) else caught-fail) in
                                                {6333}let binder_key_71: bitstring = (if v_1388 then catch-fail((if v_1389 then hmac(@6_tls_h,early_secret_106,x_444) else fail-any)) else caught-fail) in
                                                {6334}let v_1390: bool = not-caught-fail(binder_key_71) in
                                                {6335}let v_1391: bitstring = (if v_1386 then catch-fail((if v_1388 then (if v_1390 then (early_secret_106,binder_key_71) else fail-any) else fail-any)) else caught-fail) in
                                                {6336}let v_1392: bool = (not-caught-fail(v_1391) && success?(1-proj-2-tuple(v_1391))) in
                                                {6337}let kb_71: mac_key = (if v_1392 then 2-proj-2-tuple(v_1391) else caught-fail) in
                                                {6338}let es_107: bitstring = (if v_1392 then 1-proj-2-tuple(v_1391) else caught-fail) in
                                                {6339}let v_1393: bitstring = (if not(v_1386) then catch-fail(psk_data'_28) else caught-fail) in
                                                {6340}let v_1394: bool = (not-caught-fail(v_1393) && success?(1-proj-4-tuple(v_1393))) in
                                                {6341}let is_safe_64: bool = (if v_1394 then 4-proj-4-tuple(v_1393) else caught-fail) in
                                                {6342}let es_108: bitstring = (if v_1394 then 3-proj-4-tuple(v_1393) else caught-fail) in
                                                {6343}let id_75: identityPsk = (if v_1394 then 2-proj-4-tuple(v_1393) else caught-fail) in
                                                {6344}let psk_161: preSharedKey = (if v_1394 then 1-proj-4-tuple(v_1393) else caught-fail) in
                                                {6345}let (psk_162: preSharedKey,early_secret_107: bitstring,valid_33: bool,safe_psk_39: bool) = (if v_1386 then (if v_1392 then (NoPsk,es_107,true,false) else fail-any) else (if v_1394 then (psk_161,es_108,((psk_161 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_68)),is_safe_64) else fail-any)) in
                                                {6346}event Client_PSKChoosen(@6_id_client,psk_162,safe_psk_39);
                                                {6347}if valid_33 then
                                                (
                                                    {6348}let gxy_67: element = catch-fail(dh_decap_fun(g_37,gy_34,x_443)) in
                                                    {6349}let v_1395: bool = not-caught-fail(gxy_67) in
                                                    {6350}new s_142[]: seed;
                                                    {6351}let gxy_68: element = (if v_1395 then gxy_67 else dh_f(s_142)) in
                                                    {6352}event Client_DH_gxy(@6_id_client,gxy_68);
                                                    {6353}let l_394: label = tls13_derived in
                                                    {6354}let m_140: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {6355}let v_1396: bool = not-caught-fail(m_140) in
                                                    {6356}let h_379: bitstring = (if v_1396 then catch-fail(hash(@6_tls_h,m_140)) else caught-fail) in
                                                    {6357}let v_1397: bool = not-caught-fail(h_379) in
                                                    {6358}let x_445: bitstring = (if v_1397 then (l_394,h_379) else caught-fail) in
                                                    {6359}let extra_75: bitstring = catch-fail((if v_1396 then (if v_1397 then hmac(@6_tls_h,early_secret_107,x_445) else fail-any) else fail-any)) in
                                                    {6360}let v_1398: bool = not-caught-fail(extra_75) in
                                                    {6361}let handshake_secret_34: bitstring = (if v_1398 then hmac(@6_tls_h,extra_75,gxy_68) else fail-any) in
                                                    {6362}let l_395: label = tls13_derived in
                                                    {6363}let m_141: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {6364}let v_1399: bool = not-caught-fail(m_141) in
                                                    {6365}let h_380: bitstring = (if v_1399 then catch-fail(hash(@6_tls_h,m_141)) else caught-fail) in
                                                    {6366}let v_1400: bool = not-caught-fail(h_380) in
                                                    {6367}let x_446: bitstring = (if v_1400 then (l_395,h_380) else caught-fail) in
                                                    {6368}let extra_76: bitstring = catch-fail((if v_1399 then (if v_1400 then hmac(@6_tls_h,handshake_secret_34,x_446) else fail-any) else fail-any)) in
                                                    {6369}let v_1401: bool = not-caught-fail(extra_76) in
                                                    {6370}let k_138: bitstring = (if v_1401 then zero else caught-fail) in
                                                    {6371}let master_secret_75: bitstring = (if v_1401 then catch-fail(hmac(@6_tls_h,handshake_secret_34,k_138)) else caught-fail) in
                                                    {6372}let v_1402: bool = not-caught-fail(master_secret_75) in
                                                    {6373}let l_396: label = (if v_1402 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {6374}let h_381: bitstring = (if v_1402 then catch-fail(hash(@6_tls_h,cur_log2_73)) else caught-fail) in
                                                    {6375}let v_1403: bool = not-caught-fail(h_381) in
                                                    {6376}let x_447: bitstring = (if v_1403 then (l_396,h_381) else caught-fail) in
                                                    {6377}let client_hts_34: bitstring = (if v_1402 then catch-fail((if v_1403 then hmac(@6_tls_h,handshake_secret_34,x_447) else fail-any)) else caught-fail) in
                                                    {6378}let v_1404: bool = not-caught-fail(client_hts_34) in
                                                    {6379}let l_397: label = (if v_1404 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {6380}let h_382: bitstring = (if v_1404 then catch-fail(hash(@6_tls_h,cur_log2_73)) else caught-fail) in
                                                    {6381}let v_1405: bool = not-caught-fail(h_382) in
                                                    {6382}let x_448: bitstring = (if v_1405 then (l_397,h_382) else caught-fail) in
                                                    {6383}let server_hts_34: bitstring = (if v_1404 then catch-fail((if v_1405 then hmac(@6_tls_h,handshake_secret_34,x_448) else fail-any)) else caught-fail) in
                                                    {6384}let v_1406: bool = not-caught-fail(server_hts_34) in
                                                    {6385}let l_398: label = (if v_1406 then tls13_key else caught-fail) in
                                                    {6386}let h_383: bitstring = (if v_1406 then zero else caught-fail) in
                                                    {6387}let x_449: bitstring = (if v_1406 then (l_398,h_383) else caught-fail) in
                                                    {6388}let client_wkh_34: bitstring = (if v_1406 then catch-fail(hmac(@6_tls_h,client_hts_34,x_449)) else caught-fail) in
                                                    {6389}let v_1407: bool = not-caught-fail(client_wkh_34) in
                                                    {6390}let l_399: label = (if v_1407 then tls13_key else caught-fail) in
                                                    {6391}let h_384: bitstring = (if v_1407 then zero else caught-fail) in
                                                    {6392}let x_450: bitstring = (if v_1407 then (l_399,h_384) else caught-fail) in
                                                    {6393}let server_wkh_34: bitstring = (if v_1407 then catch-fail(hmac(@6_tls_h,server_hts_34,x_450)) else caught-fail) in
                                                    {6394}let v_1408: bool = not-caught-fail(server_wkh_34) in
                                                    {6395}let l_400: label = (if v_1408 then tls13_finished else caught-fail) in
                                                    {6396}let h_385: bitstring = (if v_1408 then zero else caught-fail) in
                                                    {6397}let x_451: bitstring = (if v_1408 then (l_400,h_385) else caught-fail) in
                                                    {6398}let client_fk_34: bitstring = (if v_1408 then catch-fail(hmac(@6_tls_h,client_hts_34,x_451)) else caught-fail) in
                                                    {6399}let v_1409: bool = not-caught-fail(client_fk_34) in
                                                    {6400}let l_401: label = (if v_1409 then tls13_finished else caught-fail) in
                                                    {6401}let h_386: bitstring = (if v_1409 then zero else caught-fail) in
                                                    {6402}let x_452: bitstring = (if v_1409 then (l_401,h_386) else caught-fail) in
                                                    {6403}let server_fk_34: bitstring = (if v_1409 then catch-fail(hmac(@6_tls_h,server_hts_34,x_452)) else caught-fail) in
                                                    {6404}let v_1410: bool = not-caught-fail(server_fk_34) in
                                                    {6405}let (master_secret_76: bitstring,chk_41: aead_key,shk_40: aead_key,cfin_41: mac_key,sfin_40: mac_key) = (if v_1401 then (if v_1402 then (if v_1404 then (if v_1406 then (if v_1407 then (if v_1408 then (if v_1409 then (if v_1410 then (master_secret_75,client_wkh_34,server_wkh_34,client_fk_34,server_fk_34) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {6406}event Client_chk(@6_id_client,chk_41);
                                                    {6407}event Client_shk(@6_id_client,shk_40);
                                                    {6408}event Client_cfin(@6_id_client,cfin_41);
                                                    {6409}event Client_sfin(@6_id_client,sfin_40);
                                                    {6410}in(io, enc_ee_msg_33: bitstring);
                                                    {6411}let ee_msg_34: msg = aead_dec(@6_tls_a,shk_40,0,zero,enc_ee_msg_33) in
                                                    {6412}let EE(ech_ee_33: echExt,extra_ee_33: extraExt) = ee_msg_34 in
                                                    {6413}let cur_log2_74: bitstring = (cur_log2_73,ee_msg_34) in
                                                    {6414}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_17,sr_44,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_162,safe_psk_39,@6_comp_psk,master_secret_76,chk_41,0,shk_40,1,cfin_41,sfin_40,cur_log2_74)))
                                                )
                                                else
                                                    {6415}out(io, illegal_parameter)
                                            )
                                            else
                                                {6416}out(io, illegal_parameter)
                                    )
                                    else
                                        {6417}out(io, unexpected_message)
                                )
                                else
                                    {6567}get pre_shared_keys(c_dom'_12: domain,=o_dom_7,=@6_tls_h,id_76: identityPsk,psk_163: preSharedKey,idP_14: idProc,is_safe_65: bool) in
                                    {6418}event Selected_one_time_used_psk(@6_id_client,psk_163,is_safe_65);
                                    {6419}event Selected_psk(c_dom_6,c_dom'_12,idP_14,is_safe_65);
                                    {6420}event Selected_psk_no_missmatch(@6_id_client,o_dom_7,@6_tls_h,psk_163,id_76);
                                    {6421}event Selected_psk_with_ID(c_dom_6,c_dom'_12,id_76,idP_14,is_safe_65);
                                    {6422}let v_1411: bitstring = (id_76,psk_163,is_safe_65) in
                                    {6423}let v_1412: bool = success?(1-proj-3-tuple(v_1411)) in
                                    {6424}let is_safe_66: bool = (if v_1412 then 3-proj-3-tuple(v_1411) else caught-fail) in
                                    {6425}let psk_164: preSharedKey = (if v_1412 then 2-proj-3-tuple(v_1411) else caught-fail) in
                                    {6426}let id_77: identityPsk = (if v_1412 then 1-proj-3-tuple(v_1411) else caught-fail) in
                                    {6427}let offer_35: params = (if v_1412 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_6,SNI(o_dom_7),o_ech_ext_11,extra_74,trunc_client_psk_ext(id_77)) else caught-fail) in
                                    {6428}let cur_log'_23: bitstring = (if v_1412 then (cur_log_OU1_HRR_2,CH(o_cr_9,offer_35)) else caught-fail) in
                                    {6429}let s_143: bitstring = (if v_1412 then zero else caught-fail) in
                                    {6430}let k_139: bitstring = (if v_1412 then catch-fail(psk2b(psk_164)) else caught-fail) in
                                    {6431}let v_1413: bool = not-caught-fail(k_139) in
                                    {6432}let early_secret_108: bitstring = (if v_1412 then catch-fail((if v_1413 then hmac(@6_tls_h,s_143,k_139) else fail-any)) else caught-fail) in
                                    {6433}let v_1414: bool = not-caught-fail(early_secret_108) in
                                    {6434}let l_402: label = (if v_1414 then tls13_ext_res_binder else caught-fail) in
                                    {6435}let m_142: bitstring = (if v_1414 then zero else caught-fail) in
                                    {6436}let h_387: bitstring = (if v_1414 then catch-fail(hash(@6_tls_h,m_142)) else caught-fail) in
                                    {6437}let v_1415: bool = not-caught-fail(h_387) in
                                    {6438}let x_453: bitstring = (if v_1415 then (l_402,h_387) else caught-fail) in
                                    {6439}let binder_key_72: bitstring = (if v_1414 then catch-fail((if v_1415 then hmac(@6_tls_h,early_secret_108,x_453) else fail-any)) else caught-fail) in
                                    {6440}let v_1416: bool = not-caught-fail(binder_key_72) in
                                    {6441}let v_1417: bitstring = (if v_1412 then catch-fail((if v_1414 then (if v_1416 then (early_secret_108,binder_key_72) else fail-any) else fail-any)) else caught-fail) in
                                    {6442}let v_1418: bool = (not-caught-fail(v_1417) && success?(1-proj-2-tuple(v_1417))) in
                                    {6443}let kb_72: mac_key = (if v_1418 then 2-proj-2-tuple(v_1417) else caught-fail) in
                                    {6444}let es_109: bitstring = (if v_1418 then 1-proj-2-tuple(v_1417) else caught-fail) in
                                    {6445}let binders_22: bitstring = (if v_1418 then catch-fail(hmac(@6_tls_h,kb_72,cur_log'_23)) else caught-fail) in
                                    {6446}let v_1419: bool = not-caught-fail(binders_22) in
                                    {6447}let v_1420: bitstring = catch-fail((if v_1412 then (if v_1418 then (if v_1419 then (client_psk_ext(id_77,binders_22),(psk_164,id_77,es_109,is_safe_66)) else fail-any) else fail-any) else fail-any)) in
                                    {6448}let v_1421: bool = (not-caught-fail(v_1420) && success?(1-proj-2-tuple(v_1420))) in
                                    {6449}let psk_data_39: bitstring = (if v_1421 then 2-proj-2-tuple(v_1420) else caught-fail) in
                                    {6450}let psk_ext_69: preSharedKeyExt = (if v_1421 then 1-proj-2-tuple(v_1420) else caught-fail) in
                                    {6451}let o_offer_24: params = (if v_1421 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_6,SNI(o_dom_7),o_ech_ext_11,empty_extra_ext,psk_ext_69) else caught-fail) in
                                    {6452}let (client_hello'_18: msg,cr'_18: bytes32,kex_data'_18: bitstring,psk_data'_29: bitstring) = (if v_1421 then (CH(o_cr_9,o_offer_24),o_cr_9,kex_data_9,psk_data_39) else fail-any) in
                                    {6453}out(io, client_hello'_18);
                                    {6454}let cur_log_OU1_HRR_OU2_9: bitstring = (cur_log_OU1_HRR_2,client_hello'_18) in
                                    {6455}in(io, server_hello'_27: msg);
                                    {6456}let SH(sr'_18: bytes32,mode'_18: params) = server_hello'_27 in
                                    (
                                        {6457}if (sr'_18 = B32(HRR24,HRR8)) then
                                            {6458}out(io, unexpected_message)
                                        else
                                            {6459}let (x_454: bitstring,g_38: group) = kex_data'_18 in
                                            {6460}let (psk_offer_34: preSharedKey,id_offer_34: identityPsk,es_offer_34: bitstring,is_safe_offer_34: bool) = psk_data'_29 in
                                            {6461}event Client_PSKOffer(@6_id_client,psk_offer_34,id_offer_34,is_safe_offer_34);
                                            {6462}event Client_Rand_client(@6_id_client,cr'_18);
                                            {6463}event Client_DH_client(@6_id_client,dh_pub(g_38,x_454));
                                            {6464}event Client_server_domain(@6_id_client,o_dom);
                                            {6465}let SH(sr_45: bytes32,mode_40: params) = server_hello'_27 in
                                            {6466}event Client_Rand_server(@6_id_client,sr_45);
                                            {6467}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_38,gy_35: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_70: preSharedKeyExt) = mode_40 in
                                            (
                                                {6468}let cur_log2_75: bitstring = (cur_log_OU1_HRR_OU2_9,server_hello'_27) in
                                                {6469}event Client_DH_server(@6_id_client,gy_35);
                                                {6470}let v_1422: bool = (psk_ext_70 = empty_psk_ext) in
                                                {6471}let psk_165: preSharedKey = (if v_1422 then NoPsk else caught-fail) in
                                                {6472}let s_144: bitstring = (if v_1422 then zero else caught-fail) in
                                                {6473}let k_140: bitstring = (if v_1422 then catch-fail(psk2b(psk_165)) else caught-fail) in
                                                {6474}let v_1423: bool = not-caught-fail(k_140) in
                                                {6475}let early_secret_109: bitstring = (if v_1422 then catch-fail((if v_1423 then hmac(@6_tls_h,s_144,k_140) else fail-any)) else caught-fail) in
                                                {6476}let v_1424: bool = not-caught-fail(early_secret_109) in
                                                {6477}let l_403: label = (if v_1424 then tls13_ext_res_binder else caught-fail) in
                                                {6478}let m_143: bitstring = (if v_1424 then zero else caught-fail) in
                                                {6479}let h_388: bitstring = (if v_1424 then catch-fail(hash(@6_tls_h,m_143)) else caught-fail) in
                                                {6480}let v_1425: bool = not-caught-fail(h_388) in
                                                {6481}let x_455: bitstring = (if v_1425 then (l_403,h_388) else caught-fail) in
                                                {6482}let binder_key_73: bitstring = (if v_1424 then catch-fail((if v_1425 then hmac(@6_tls_h,early_secret_109,x_455) else fail-any)) else caught-fail) in
                                                {6483}let v_1426: bool = not-caught-fail(binder_key_73) in
                                                {6484}let v_1427: bitstring = (if v_1422 then catch-fail((if v_1424 then (if v_1426 then (early_secret_109,binder_key_73) else fail-any) else fail-any)) else caught-fail) in
                                                {6485}let v_1428: bool = (not-caught-fail(v_1427) && success?(1-proj-2-tuple(v_1427))) in
                                                {6486}let kb_73: mac_key = (if v_1428 then 2-proj-2-tuple(v_1427) else caught-fail) in
                                                {6487}let es_110: bitstring = (if v_1428 then 1-proj-2-tuple(v_1427) else caught-fail) in
                                                {6488}let v_1429: bitstring = (if not(v_1422) then catch-fail(psk_data'_29) else caught-fail) in
                                                {6489}let v_1430: bool = (not-caught-fail(v_1429) && success?(1-proj-4-tuple(v_1429))) in
                                                {6490}let is_safe_67: bool = (if v_1430 then 4-proj-4-tuple(v_1429) else caught-fail) in
                                                {6491}let es_111: bitstring = (if v_1430 then 3-proj-4-tuple(v_1429) else caught-fail) in
                                                {6492}let id_78: identityPsk = (if v_1430 then 2-proj-4-tuple(v_1429) else caught-fail) in
                                                {6493}let psk_166: preSharedKey = (if v_1430 then 1-proj-4-tuple(v_1429) else caught-fail) in
                                                {6494}let (psk_167: preSharedKey,early_secret_110: bitstring,valid_34: bool,safe_psk_40: bool) = (if v_1422 then (if v_1428 then (NoPsk,es_110,true,false) else fail-any) else (if v_1430 then (psk_166,es_111,((psk_166 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_70)),is_safe_67) else fail-any)) in
                                                {6495}event Client_PSKChoosen(@6_id_client,psk_167,safe_psk_40);
                                                {6496}if valid_34 then
                                                (
                                                    {6497}let gxy_69: element = catch-fail(dh_decap_fun(g_38,gy_35,x_454)) in
                                                    {6498}let v_1431: bool = not-caught-fail(gxy_69) in
                                                    {6499}new s_145[]: seed;
                                                    {6500}let gxy_70: element = (if v_1431 then gxy_69 else dh_f(s_145)) in
                                                    {6501}event Client_DH_gxy(@6_id_client,gxy_70);
                                                    {6502}let l_404: label = tls13_derived in
                                                    {6503}let m_144: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {6504}let v_1432: bool = not-caught-fail(m_144) in
                                                    {6505}let h_389: bitstring = (if v_1432 then catch-fail(hash(@6_tls_h,m_144)) else caught-fail) in
                                                    {6506}let v_1433: bool = not-caught-fail(h_389) in
                                                    {6507}let x_456: bitstring = (if v_1433 then (l_404,h_389) else caught-fail) in
                                                    {6508}let extra_77: bitstring = catch-fail((if v_1432 then (if v_1433 then hmac(@6_tls_h,early_secret_110,x_456) else fail-any) else fail-any)) in
                                                    {6509}let v_1434: bool = not-caught-fail(extra_77) in
                                                    {6510}let handshake_secret_35: bitstring = (if v_1434 then hmac(@6_tls_h,extra_77,gxy_70) else fail-any) in
                                                    {6511}let l_405: label = tls13_derived in
                                                    {6512}let m_145: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {6513}let v_1435: bool = not-caught-fail(m_145) in
                                                    {6514}let h_390: bitstring = (if v_1435 then catch-fail(hash(@6_tls_h,m_145)) else caught-fail) in
                                                    {6515}let v_1436: bool = not-caught-fail(h_390) in
                                                    {6516}let x_457: bitstring = (if v_1436 then (l_405,h_390) else caught-fail) in
                                                    {6517}let extra_78: bitstring = catch-fail((if v_1435 then (if v_1436 then hmac(@6_tls_h,handshake_secret_35,x_457) else fail-any) else fail-any)) in
                                                    {6518}let v_1437: bool = not-caught-fail(extra_78) in
                                                    {6519}let k_141: bitstring = (if v_1437 then zero else caught-fail) in
                                                    {6520}let master_secret_77: bitstring = (if v_1437 then catch-fail(hmac(@6_tls_h,handshake_secret_35,k_141)) else caught-fail) in
                                                    {6521}let v_1438: bool = not-caught-fail(master_secret_77) in
                                                    {6522}let l_406: label = (if v_1438 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {6523}let h_391: bitstring = (if v_1438 then catch-fail(hash(@6_tls_h,cur_log2_75)) else caught-fail) in
                                                    {6524}let v_1439: bool = not-caught-fail(h_391) in
                                                    {6525}let x_458: bitstring = (if v_1439 then (l_406,h_391) else caught-fail) in
                                                    {6526}let client_hts_35: bitstring = (if v_1438 then catch-fail((if v_1439 then hmac(@6_tls_h,handshake_secret_35,x_458) else fail-any)) else caught-fail) in
                                                    {6527}let v_1440: bool = not-caught-fail(client_hts_35) in
                                                    {6528}let l_407: label = (if v_1440 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {6529}let h_392: bitstring = (if v_1440 then catch-fail(hash(@6_tls_h,cur_log2_75)) else caught-fail) in
                                                    {6530}let v_1441: bool = not-caught-fail(h_392) in
                                                    {6531}let x_459: bitstring = (if v_1441 then (l_407,h_392) else caught-fail) in
                                                    {6532}let server_hts_35: bitstring = (if v_1440 then catch-fail((if v_1441 then hmac(@6_tls_h,handshake_secret_35,x_459) else fail-any)) else caught-fail) in
                                                    {6533}let v_1442: bool = not-caught-fail(server_hts_35) in
                                                    {6534}let l_408: label = (if v_1442 then tls13_key else caught-fail) in
                                                    {6535}let h_393: bitstring = (if v_1442 then zero else caught-fail) in
                                                    {6536}let x_460: bitstring = (if v_1442 then (l_408,h_393) else caught-fail) in
                                                    {6537}let client_wkh_35: bitstring = (if v_1442 then catch-fail(hmac(@6_tls_h,client_hts_35,x_460)) else caught-fail) in
                                                    {6538}let v_1443: bool = not-caught-fail(client_wkh_35) in
                                                    {6539}let l_409: label = (if v_1443 then tls13_key else caught-fail) in
                                                    {6540}let h_394: bitstring = (if v_1443 then zero else caught-fail) in
                                                    {6541}let x_461: bitstring = (if v_1443 then (l_409,h_394) else caught-fail) in
                                                    {6542}let server_wkh_35: bitstring = (if v_1443 then catch-fail(hmac(@6_tls_h,server_hts_35,x_461)) else caught-fail) in
                                                    {6543}let v_1444: bool = not-caught-fail(server_wkh_35) in
                                                    {6544}let l_410: label = (if v_1444 then tls13_finished else caught-fail) in
                                                    {6545}let h_395: bitstring = (if v_1444 then zero else caught-fail) in
                                                    {6546}let x_462: bitstring = (if v_1444 then (l_410,h_395) else caught-fail) in
                                                    {6547}let client_fk_35: bitstring = (if v_1444 then catch-fail(hmac(@6_tls_h,client_hts_35,x_462)) else caught-fail) in
                                                    {6548}let v_1445: bool = not-caught-fail(client_fk_35) in
                                                    {6549}let l_411: label = (if v_1445 then tls13_finished else caught-fail) in
                                                    {6550}let h_396: bitstring = (if v_1445 then zero else caught-fail) in
                                                    {6551}let x_463: bitstring = (if v_1445 then (l_411,h_396) else caught-fail) in
                                                    {6552}let server_fk_35: bitstring = (if v_1445 then catch-fail(hmac(@6_tls_h,server_hts_35,x_463)) else caught-fail) in
                                                    {6553}let v_1446: bool = not-caught-fail(server_fk_35) in
                                                    {6554}let (master_secret_78: bitstring,chk_42: aead_key,shk_41: aead_key,cfin_42: mac_key,sfin_41: mac_key) = (if v_1437 then (if v_1438 then (if v_1440 then (if v_1442 then (if v_1443 then (if v_1444 then (if v_1445 then (if v_1446 then (master_secret_77,client_wkh_35,server_wkh_35,client_fk_35,server_fk_35) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {6555}event Client_chk(@6_id_client,chk_42);
                                                    {6556}event Client_shk(@6_id_client,shk_41);
                                                    {6557}event Client_cfin(@6_id_client,cfin_42);
                                                    {6558}event Client_sfin(@6_id_client,sfin_41);
                                                    {6559}in(io, enc_ee_msg_34: bitstring);
                                                    {6560}let ee_msg_35: msg = aead_dec(@6_tls_a,shk_41,0,zero,enc_ee_msg_34) in
                                                    {6561}let EE(ech_ee_34: echExt,extra_ee_34: extraExt) = ee_msg_35 in
                                                    {6562}let cur_log2_76: bitstring = (cur_log2_75,ee_msg_35) in
                                                    {6563}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_18,sr_45,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_167,safe_psk_40,@6_comp_psk,master_secret_78,chk_42,0,shk_41,1,cfin_42,sfin_41,cur_log2_76)))
                                                )
                                                else
                                                    {6564}out(io, illegal_parameter)
                                            )
                                            else
                                                {6565}out(io, illegal_parameter)
                                    )
                                    else
                                        {6566}out(io, unexpected_message)
                            )
                            else
                                {6568}let psk_168: preSharedKey = NoPsk in
                                {6569}let s_146: bitstring = zero in
                                {6570}let k_142: bitstring = catch-fail(psk2b(psk_168)) in
                                {6571}let v_1447: bool = not-caught-fail(k_142) in
                                {6572}let early_secret_111: bitstring = catch-fail((if v_1447 then hmac(@6_tls_h,s_146,k_142) else fail-any)) in
                                {6573}let v_1448: bool = not-caught-fail(early_secret_111) in
                                {6574}let l_412: label = (if v_1448 then tls13_ext_res_binder else caught-fail) in
                                {6575}let m_146: bitstring = (if v_1448 then zero else caught-fail) in
                                {6576}let h_397: bitstring = (if v_1448 then catch-fail(hash(@6_tls_h,m_146)) else caught-fail) in
                                {6577}let v_1449: bool = not-caught-fail(h_397) in
                                {6578}let x_464: bitstring = (if v_1449 then (l_412,h_397) else caught-fail) in
                                {6579}let binder_key_74: bitstring = (if v_1448 then catch-fail((if v_1449 then hmac(@6_tls_h,early_secret_111,x_464) else fail-any)) else caught-fail) in
                                {6580}let v_1450: bool = not-caught-fail(binder_key_74) in
                                {6581}let v_1451: bitstring = catch-fail((if v_1448 then (if v_1450 then (early_secret_111,binder_key_74) else fail-any) else fail-any)) in
                                {6582}let v_1452: bool = (not-caught-fail(v_1451) && success?(1-proj-2-tuple(v_1451))) in
                                {6583}let kb_74: mac_key = (if v_1452 then 2-proj-2-tuple(v_1451) else caught-fail) in
                                {6584}let es_112: bitstring = (if v_1452 then 1-proj-2-tuple(v_1451) else caught-fail) in
                                {6585}let v_1453: bitstring = catch-fail((if v_1452 then (empty_psk_ext,(NoPsk,zero,es_112,false)) else fail-any)) in
                                {6586}let v_1454: bool = (not-caught-fail(v_1453) && success?(1-proj-2-tuple(v_1453))) in
                                {6587}let psk_data_40: bitstring = (if v_1454 then 2-proj-2-tuple(v_1453) else caught-fail) in
                                {6588}let psk_ext_71: preSharedKeyExt = (if v_1454 then 1-proj-2-tuple(v_1453) else caught-fail) in
                                {6589}let o_offer_25: params = (if v_1454 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_6,SNI(o_dom_7),o_ech_ext_11,empty_extra_ext,psk_ext_71) else caught-fail) in
                                {6590}let (client_hello'_19: msg,cr'_19: bytes32,kex_data'_19: bitstring,psk_data'_30: bitstring) = (if v_1454 then (CH(o_cr_9,o_offer_25),o_cr_9,kex_data_9,psk_data_40) else fail-any) in
                                {6591}out(io, client_hello'_19);
                                {6592}let cur_log_OU1_HRR_OU2_10: bitstring = (cur_log_OU1_HRR_2,client_hello'_19) in
                                {6593}in(io, server_hello'_28: msg);
                                {6594}let SH(sr'_19: bytes32,mode'_19: params) = server_hello'_28 in
                                (
                                    {6595}if (sr'_19 = B32(HRR24,HRR8)) then
                                        {6596}out(io, unexpected_message)
                                    else
                                        {6597}let (x_465: bitstring,g_39: group) = kex_data'_19 in
                                        {6598}let (psk_offer_35: preSharedKey,id_offer_35: identityPsk,es_offer_35: bitstring,is_safe_offer_35: bool) = psk_data'_30 in
                                        {6599}event Client_PSKOffer(@6_id_client,psk_offer_35,id_offer_35,is_safe_offer_35);
                                        {6600}event Client_Rand_client(@6_id_client,cr'_19);
                                        {6601}event Client_DH_client(@6_id_client,dh_pub(g_39,x_465));
                                        {6602}event Client_server_domain(@6_id_client,o_dom);
                                        {6603}let SH(sr_46: bytes32,mode_41: params) = server_hello'_28 in
                                        {6604}event Client_Rand_server(@6_id_client,sr_46);
                                        {6605}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_39,gy_36: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_72: preSharedKeyExt) = mode_41 in
                                        (
                                            {6606}let cur_log2_77: bitstring = (cur_log_OU1_HRR_OU2_10,server_hello'_28) in
                                            {6607}event Client_DH_server(@6_id_client,gy_36);
                                            {6608}let v_1455: bool = (psk_ext_72 = empty_psk_ext) in
                                            {6609}let psk_169: preSharedKey = (if v_1455 then NoPsk else caught-fail) in
                                            {6610}let s_147: bitstring = (if v_1455 then zero else caught-fail) in
                                            {6611}let k_143: bitstring = (if v_1455 then catch-fail(psk2b(psk_169)) else caught-fail) in
                                            {6612}let v_1456: bool = not-caught-fail(k_143) in
                                            {6613}let early_secret_112: bitstring = (if v_1455 then catch-fail((if v_1456 then hmac(@6_tls_h,s_147,k_143) else fail-any)) else caught-fail) in
                                            {6614}let v_1457: bool = not-caught-fail(early_secret_112) in
                                            {6615}let l_413: label = (if v_1457 then tls13_ext_res_binder else caught-fail) in
                                            {6616}let m_147: bitstring = (if v_1457 then zero else caught-fail) in
                                            {6617}let h_398: bitstring = (if v_1457 then catch-fail(hash(@6_tls_h,m_147)) else caught-fail) in
                                            {6618}let v_1458: bool = not-caught-fail(h_398) in
                                            {6619}let x_466: bitstring = (if v_1458 then (l_413,h_398) else caught-fail) in
                                            {6620}let binder_key_75: bitstring = (if v_1457 then catch-fail((if v_1458 then hmac(@6_tls_h,early_secret_112,x_466) else fail-any)) else caught-fail) in
                                            {6621}let v_1459: bool = not-caught-fail(binder_key_75) in
                                            {6622}let v_1460: bitstring = (if v_1455 then catch-fail((if v_1457 then (if v_1459 then (early_secret_112,binder_key_75) else fail-any) else fail-any)) else caught-fail) in
                                            {6623}let v_1461: bool = (not-caught-fail(v_1460) && success?(1-proj-2-tuple(v_1460))) in
                                            {6624}let kb_75: mac_key = (if v_1461 then 2-proj-2-tuple(v_1460) else caught-fail) in
                                            {6625}let es_113: bitstring = (if v_1461 then 1-proj-2-tuple(v_1460) else caught-fail) in
                                            {6626}let v_1462: bitstring = (if not(v_1455) then catch-fail(psk_data'_30) else caught-fail) in
                                            {6627}let v_1463: bool = (not-caught-fail(v_1462) && success?(1-proj-4-tuple(v_1462))) in
                                            {6628}let is_safe_68: bool = (if v_1463 then 4-proj-4-tuple(v_1462) else caught-fail) in
                                            {6629}let es_114: bitstring = (if v_1463 then 3-proj-4-tuple(v_1462) else caught-fail) in
                                            {6630}let id_79: identityPsk = (if v_1463 then 2-proj-4-tuple(v_1462) else caught-fail) in
                                            {6631}let psk_170: preSharedKey = (if v_1463 then 1-proj-4-tuple(v_1462) else caught-fail) in
                                            {6632}let (psk_171: preSharedKey,early_secret_113: bitstring,valid_35: bool,safe_psk_41: bool) = (if v_1455 then (if v_1461 then (NoPsk,es_113,true,false) else fail-any) else (if v_1463 then (psk_170,es_114,((psk_170 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_72)),is_safe_68) else fail-any)) in
                                            {6633}event Client_PSKChoosen(@6_id_client,psk_171,safe_psk_41);
                                            {6634}if valid_35 then
                                            (
                                                {6635}let gxy_71: element = catch-fail(dh_decap_fun(g_39,gy_36,x_465)) in
                                                {6636}let v_1464: bool = not-caught-fail(gxy_71) in
                                                {6637}new s_148[]: seed;
                                                {6638}let gxy_72: element = (if v_1464 then gxy_71 else dh_f(s_148)) in
                                                {6639}event Client_DH_gxy(@6_id_client,gxy_72);
                                                {6640}let l_414: label = tls13_derived in
                                                {6641}let m_148: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                {6642}let v_1465: bool = not-caught-fail(m_148) in
                                                {6643}let h_399: bitstring = (if v_1465 then catch-fail(hash(@6_tls_h,m_148)) else caught-fail) in
                                                {6644}let v_1466: bool = not-caught-fail(h_399) in
                                                {6645}let x_467: bitstring = (if v_1466 then (l_414,h_399) else caught-fail) in
                                                {6646}let extra_79: bitstring = catch-fail((if v_1465 then (if v_1466 then hmac(@6_tls_h,early_secret_113,x_467) else fail-any) else fail-any)) in
                                                {6647}let v_1467: bool = not-caught-fail(extra_79) in
                                                {6648}let handshake_secret_36: bitstring = (if v_1467 then hmac(@6_tls_h,extra_79,gxy_72) else fail-any) in
                                                {6649}let l_415: label = tls13_derived in
                                                {6650}let m_149: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                {6651}let v_1468: bool = not-caught-fail(m_149) in
                                                {6652}let h_400: bitstring = (if v_1468 then catch-fail(hash(@6_tls_h,m_149)) else caught-fail) in
                                                {6653}let v_1469: bool = not-caught-fail(h_400) in
                                                {6654}let x_468: bitstring = (if v_1469 then (l_415,h_400) else caught-fail) in
                                                {6655}let extra_80: bitstring = catch-fail((if v_1468 then (if v_1469 then hmac(@6_tls_h,handshake_secret_36,x_468) else fail-any) else fail-any)) in
                                                {6656}let v_1470: bool = not-caught-fail(extra_80) in
                                                {6657}let k_144: bitstring = (if v_1470 then zero else caught-fail) in
                                                {6658}let master_secret_79: bitstring = (if v_1470 then catch-fail(hmac(@6_tls_h,handshake_secret_36,k_144)) else caught-fail) in
                                                {6659}let v_1471: bool = not-caught-fail(master_secret_79) in
                                                {6660}let l_416: label = (if v_1471 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {6661}let h_401: bitstring = (if v_1471 then catch-fail(hash(@6_tls_h,cur_log2_77)) else caught-fail) in
                                                {6662}let v_1472: bool = not-caught-fail(h_401) in
                                                {6663}let x_469: bitstring = (if v_1472 then (l_416,h_401) else caught-fail) in
                                                {6664}let client_hts_36: bitstring = (if v_1471 then catch-fail((if v_1472 then hmac(@6_tls_h,handshake_secret_36,x_469) else fail-any)) else caught-fail) in
                                                {6665}let v_1473: bool = not-caught-fail(client_hts_36) in
                                                {6666}let l_417: label = (if v_1473 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {6667}let h_402: bitstring = (if v_1473 then catch-fail(hash(@6_tls_h,cur_log2_77)) else caught-fail) in
                                                {6668}let v_1474: bool = not-caught-fail(h_402) in
                                                {6669}let x_470: bitstring = (if v_1474 then (l_417,h_402) else caught-fail) in
                                                {6670}let server_hts_36: bitstring = (if v_1473 then catch-fail((if v_1474 then hmac(@6_tls_h,handshake_secret_36,x_470) else fail-any)) else caught-fail) in
                                                {6671}let v_1475: bool = not-caught-fail(server_hts_36) in
                                                {6672}let l_418: label = (if v_1475 then tls13_key else caught-fail) in
                                                {6673}let h_403: bitstring = (if v_1475 then zero else caught-fail) in
                                                {6674}let x_471: bitstring = (if v_1475 then (l_418,h_403) else caught-fail) in
                                                {6675}let client_wkh_36: bitstring = (if v_1475 then catch-fail(hmac(@6_tls_h,client_hts_36,x_471)) else caught-fail) in
                                                {6676}let v_1476: bool = not-caught-fail(client_wkh_36) in
                                                {6677}let l_419: label = (if v_1476 then tls13_key else caught-fail) in
                                                {6678}let h_404: bitstring = (if v_1476 then zero else caught-fail) in
                                                {6679}let x_472: bitstring = (if v_1476 then (l_419,h_404) else caught-fail) in
                                                {6680}let server_wkh_36: bitstring = (if v_1476 then catch-fail(hmac(@6_tls_h,server_hts_36,x_472)) else caught-fail) in
                                                {6681}let v_1477: bool = not-caught-fail(server_wkh_36) in
                                                {6682}let l_420: label = (if v_1477 then tls13_finished else caught-fail) in
                                                {6683}let h_405: bitstring = (if v_1477 then zero else caught-fail) in
                                                {6684}let x_473: bitstring = (if v_1477 then (l_420,h_405) else caught-fail) in
                                                {6685}let client_fk_36: bitstring = (if v_1477 then catch-fail(hmac(@6_tls_h,client_hts_36,x_473)) else caught-fail) in
                                                {6686}let v_1478: bool = not-caught-fail(client_fk_36) in
                                                {6687}let l_421: label = (if v_1478 then tls13_finished else caught-fail) in
                                                {6688}let h_406: bitstring = (if v_1478 then zero else caught-fail) in
                                                {6689}let x_474: bitstring = (if v_1478 then (l_421,h_406) else caught-fail) in
                                                {6690}let server_fk_36: bitstring = (if v_1478 then catch-fail(hmac(@6_tls_h,server_hts_36,x_474)) else caught-fail) in
                                                {6691}let v_1479: bool = not-caught-fail(server_fk_36) in
                                                {6692}let (master_secret_80: bitstring,chk_43: aead_key,shk_42: aead_key,cfin_43: mac_key,sfin_42: mac_key) = (if v_1470 then (if v_1471 then (if v_1473 then (if v_1475 then (if v_1476 then (if v_1477 then (if v_1478 then (if v_1479 then (master_secret_79,client_wkh_36,server_wkh_36,client_fk_36,server_fk_36) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {6693}event Client_chk(@6_id_client,chk_43);
                                                {6694}event Client_shk(@6_id_client,shk_42);
                                                {6695}event Client_cfin(@6_id_client,cfin_43);
                                                {6696}event Client_sfin(@6_id_client,sfin_42);
                                                {6697}in(io, enc_ee_msg_35: bitstring);
                                                {6698}let ee_msg_36: msg = aead_dec(@6_tls_a,shk_42,0,zero,enc_ee_msg_35) in
                                                {6699}let EE(ech_ee_35: echExt,extra_ee_35: extraExt) = ee_msg_36 in
                                                {6700}let cur_log2_78: bitstring = (cur_log2_77,ee_msg_36) in
                                                {6701}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_19,sr_46,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_171,safe_psk_41,@6_comp_psk,master_secret_80,chk_43,0,shk_42,1,cfin_43,sfin_42,cur_log2_78)))
                                            )
                                            else
                                                {6702}out(io, illegal_parameter)
                                        )
                                        else
                                            {6703}out(io, illegal_parameter)
                                )
                                else
                                    {6704}out(io, unexpected_message)
                        )
                        else
                            {6705}let psk_172: preSharedKey = NoPsk in
                            {6706}let s_149: bitstring = zero in
                            {6707}let k_145: bitstring = catch-fail(psk2b(psk_172)) in
                            {6708}let v_1480: bool = not-caught-fail(k_145) in
                            {6709}let early_secret_114: bitstring = catch-fail((if v_1480 then hmac(@6_tls_h,s_149,k_145) else fail-any)) in
                            {6710}let v_1481: bool = not-caught-fail(early_secret_114) in
                            {6711}let l_422: label = (if v_1481 then tls13_ext_res_binder else caught-fail) in
                            {6712}let m_150: bitstring = (if v_1481 then zero else caught-fail) in
                            {6713}let h_407: bitstring = (if v_1481 then catch-fail(hash(@6_tls_h,m_150)) else caught-fail) in
                            {6714}let v_1482: bool = not-caught-fail(h_407) in
                            {6715}let x_475: bitstring = (if v_1482 then (l_422,h_407) else caught-fail) in
                            {6716}let binder_key_76: bitstring = (if v_1481 then catch-fail((if v_1482 then hmac(@6_tls_h,early_secret_114,x_475) else fail-any)) else caught-fail) in
                            {6717}let v_1483: bool = not-caught-fail(binder_key_76) in
                            {6718}let v_1484: bitstring = catch-fail((if v_1481 then (if v_1483 then (early_secret_114,binder_key_76) else fail-any) else fail-any)) in
                            {6719}let v_1485: bool = (not-caught-fail(v_1484) && success?(1-proj-2-tuple(v_1484))) in
                            {6720}let kb_76: mac_key = (if v_1485 then 2-proj-2-tuple(v_1484) else caught-fail) in
                            {6721}let es_115: bitstring = (if v_1485 then 1-proj-2-tuple(v_1484) else caught-fail) in
                            {6722}let v_1486: preSharedKeyExt = (if v_1485 then catch-fail(o_psk_ext_11) else caught-fail) in
                            {6723}let v_1487: bool = (not-caught-fail(v_1486) && success?(1-proj-client_psk_ext(v_1486))) in
                            {6724}let fake_binder_14: bitstring = (if v_1487 then 2-proj-client_psk_ext(v_1486) else caught-fail) in
                            {6725}let fake_id_14: identityPsk = (if v_1487 then 1-proj-client_psk_ext(v_1486) else caught-fail) in
                            {6726}new fake_binder'_2[]: bitstring;
                            {6727}let v_1488: bitstring = catch-fail((if v_1485 then (if v_1487 then (client_psk_ext(fake_id_14,fake_binder'_2),(NoPsk,zero,es_115,false)) else (empty_psk_ext,(NoPsk,zero,es_115,false))) else fail-any)) in
                            {6728}let v_1489: bool = (not-caught-fail(v_1488) && success?(1-proj-2-tuple(v_1488))) in
                            {6729}let psk_data_41: bitstring = (if v_1489 then 2-proj-2-tuple(v_1488) else caught-fail) in
                            {6730}let psk_ext_73: preSharedKeyExt = (if v_1489 then 1-proj-2-tuple(v_1488) else caught-fail) in
                            {6731}let o_offer_26: params = (if v_1489 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_6,SNI(o_dom_7),o_ech_ext_11,empty_extra_ext,psk_ext_73) else caught-fail) in
                            {6732}let (client_hello'_20: msg,cr'_20: bytes32,kex_data'_20: bitstring,psk_data'_31: bitstring) = (if v_1489 then (CH(o_cr_9,o_offer_26),o_cr_9,kex_data_9,psk_data_41) else fail-any) in
                            {6733}out(io, client_hello'_20);
                            {6734}let cur_log_OU1_HRR_OU2_11: bitstring = (cur_log_OU1_HRR_2,client_hello'_20) in
                            {6735}in(io, server_hello'_29: msg);
                            {6736}let SH(sr'_20: bytes32,mode'_20: params) = server_hello'_29 in
                            (
                                {6737}if (sr'_20 = B32(HRR24,HRR8)) then
                                    {6738}out(io, unexpected_message)
                                else
                                    {6739}let (x_476: bitstring,g_40: group) = kex_data'_20 in
                                    {6740}let (psk_offer_36: preSharedKey,id_offer_36: identityPsk,es_offer_36: bitstring,is_safe_offer_36: bool) = psk_data'_31 in
                                    {6741}event Client_PSKOffer(@6_id_client,psk_offer_36,id_offer_36,is_safe_offer_36);
                                    {6742}event Client_Rand_client(@6_id_client,cr'_20);
                                    {6743}event Client_DH_client(@6_id_client,dh_pub(g_40,x_476));
                                    {6744}event Client_server_domain(@6_id_client,o_dom);
                                    {6745}let SH(sr_47: bytes32,mode_42: params) = server_hello'_29 in
                                    {6746}event Client_Rand_server(@6_id_client,sr_47);
                                    {6747}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_40,gy_37: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_74: preSharedKeyExt) = mode_42 in
                                    (
                                        {6748}let cur_log2_79: bitstring = (cur_log_OU1_HRR_OU2_11,server_hello'_29) in
                                        {6749}event Client_DH_server(@6_id_client,gy_37);
                                        {6750}let v_1490: bool = (psk_ext_74 = empty_psk_ext) in
                                        {6751}let psk_173: preSharedKey = (if v_1490 then NoPsk else caught-fail) in
                                        {6752}let s_150: bitstring = (if v_1490 then zero else caught-fail) in
                                        {6753}let k_146: bitstring = (if v_1490 then catch-fail(psk2b(psk_173)) else caught-fail) in
                                        {6754}let v_1491: bool = not-caught-fail(k_146) in
                                        {6755}let early_secret_115: bitstring = (if v_1490 then catch-fail((if v_1491 then hmac(@6_tls_h,s_150,k_146) else fail-any)) else caught-fail) in
                                        {6756}let v_1492: bool = not-caught-fail(early_secret_115) in
                                        {6757}let l_423: label = (if v_1492 then tls13_ext_res_binder else caught-fail) in
                                        {6758}let m_151: bitstring = (if v_1492 then zero else caught-fail) in
                                        {6759}let h_408: bitstring = (if v_1492 then catch-fail(hash(@6_tls_h,m_151)) else caught-fail) in
                                        {6760}let v_1493: bool = not-caught-fail(h_408) in
                                        {6761}let x_477: bitstring = (if v_1493 then (l_423,h_408) else caught-fail) in
                                        {6762}let binder_key_77: bitstring = (if v_1492 then catch-fail((if v_1493 then hmac(@6_tls_h,early_secret_115,x_477) else fail-any)) else caught-fail) in
                                        {6763}let v_1494: bool = not-caught-fail(binder_key_77) in
                                        {6764}let v_1495: bitstring = (if v_1490 then catch-fail((if v_1492 then (if v_1494 then (early_secret_115,binder_key_77) else fail-any) else fail-any)) else caught-fail) in
                                        {6765}let v_1496: bool = (not-caught-fail(v_1495) && success?(1-proj-2-tuple(v_1495))) in
                                        {6766}let kb_77: mac_key = (if v_1496 then 2-proj-2-tuple(v_1495) else caught-fail) in
                                        {6767}let es_116: bitstring = (if v_1496 then 1-proj-2-tuple(v_1495) else caught-fail) in
                                        {6768}let v_1497: bitstring = (if not(v_1490) then catch-fail(psk_data'_31) else caught-fail) in
                                        {6769}let v_1498: bool = (not-caught-fail(v_1497) && success?(1-proj-4-tuple(v_1497))) in
                                        {6770}let is_safe_69: bool = (if v_1498 then 4-proj-4-tuple(v_1497) else caught-fail) in
                                        {6771}let es_117: bitstring = (if v_1498 then 3-proj-4-tuple(v_1497) else caught-fail) in
                                        {6772}let id_80: identityPsk = (if v_1498 then 2-proj-4-tuple(v_1497) else caught-fail) in
                                        {6773}let psk_174: preSharedKey = (if v_1498 then 1-proj-4-tuple(v_1497) else caught-fail) in
                                        {6774}let (psk_175: preSharedKey,early_secret_116: bitstring,valid_36: bool,safe_psk_42: bool) = (if v_1490 then (if v_1496 then (NoPsk,es_116,true,false) else fail-any) else (if v_1498 then (psk_174,es_117,((psk_174 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_74)),is_safe_69) else fail-any)) in
                                        {6775}event Client_PSKChoosen(@6_id_client,psk_175,safe_psk_42);
                                        {6776}if valid_36 then
                                        (
                                            {6777}let gxy_73: element = catch-fail(dh_decap_fun(g_40,gy_37,x_476)) in
                                            {6778}let v_1499: bool = not-caught-fail(gxy_73) in
                                            {6779}new s_151[]: seed;
                                            {6780}let gxy_74: element = (if v_1499 then gxy_73 else dh_f(s_151)) in
                                            {6781}event Client_DH_gxy(@6_id_client,gxy_74);
                                            {6782}let l_424: label = tls13_derived in
                                            {6783}let m_152: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                            {6784}let v_1500: bool = not-caught-fail(m_152) in
                                            {6785}let h_409: bitstring = (if v_1500 then catch-fail(hash(@6_tls_h,m_152)) else caught-fail) in
                                            {6786}let v_1501: bool = not-caught-fail(h_409) in
                                            {6787}let x_478: bitstring = (if v_1501 then (l_424,h_409) else caught-fail) in
                                            {6788}let extra_81: bitstring = catch-fail((if v_1500 then (if v_1501 then hmac(@6_tls_h,early_secret_116,x_478) else fail-any) else fail-any)) in
                                            {6789}let v_1502: bool = not-caught-fail(extra_81) in
                                            {6790}let handshake_secret_37: bitstring = (if v_1502 then hmac(@6_tls_h,extra_81,gxy_74) else fail-any) in
                                            {6791}let l_425: label = tls13_derived in
                                            {6792}let m_153: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                            {6793}let v_1503: bool = not-caught-fail(m_153) in
                                            {6794}let h_410: bitstring = (if v_1503 then catch-fail(hash(@6_tls_h,m_153)) else caught-fail) in
                                            {6795}let v_1504: bool = not-caught-fail(h_410) in
                                            {6796}let x_479: bitstring = (if v_1504 then (l_425,h_410) else caught-fail) in
                                            {6797}let extra_82: bitstring = catch-fail((if v_1503 then (if v_1504 then hmac(@6_tls_h,handshake_secret_37,x_479) else fail-any) else fail-any)) in
                                            {6798}let v_1505: bool = not-caught-fail(extra_82) in
                                            {6799}let k_147: bitstring = (if v_1505 then zero else caught-fail) in
                                            {6800}let master_secret_81: bitstring = (if v_1505 then catch-fail(hmac(@6_tls_h,handshake_secret_37,k_147)) else caught-fail) in
                                            {6801}let v_1506: bool = not-caught-fail(master_secret_81) in
                                            {6802}let l_426: label = (if v_1506 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {6803}let h_411: bitstring = (if v_1506 then catch-fail(hash(@6_tls_h,cur_log2_79)) else caught-fail) in
                                            {6804}let v_1507: bool = not-caught-fail(h_411) in
                                            {6805}let x_480: bitstring = (if v_1507 then (l_426,h_411) else caught-fail) in
                                            {6806}let client_hts_37: bitstring = (if v_1506 then catch-fail((if v_1507 then hmac(@6_tls_h,handshake_secret_37,x_480) else fail-any)) else caught-fail) in
                                            {6807}let v_1508: bool = not-caught-fail(client_hts_37) in
                                            {6808}let l_427: label = (if v_1508 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {6809}let h_412: bitstring = (if v_1508 then catch-fail(hash(@6_tls_h,cur_log2_79)) else caught-fail) in
                                            {6810}let v_1509: bool = not-caught-fail(h_412) in
                                            {6811}let x_481: bitstring = (if v_1509 then (l_427,h_412) else caught-fail) in
                                            {6812}let server_hts_37: bitstring = (if v_1508 then catch-fail((if v_1509 then hmac(@6_tls_h,handshake_secret_37,x_481) else fail-any)) else caught-fail) in
                                            {6813}let v_1510: bool = not-caught-fail(server_hts_37) in
                                            {6814}let l_428: label = (if v_1510 then tls13_key else caught-fail) in
                                            {6815}let h_413: bitstring = (if v_1510 then zero else caught-fail) in
                                            {6816}let x_482: bitstring = (if v_1510 then (l_428,h_413) else caught-fail) in
                                            {6817}let client_wkh_37: bitstring = (if v_1510 then catch-fail(hmac(@6_tls_h,client_hts_37,x_482)) else caught-fail) in
                                            {6818}let v_1511: bool = not-caught-fail(client_wkh_37) in
                                            {6819}let l_429: label = (if v_1511 then tls13_key else caught-fail) in
                                            {6820}let h_414: bitstring = (if v_1511 then zero else caught-fail) in
                                            {6821}let x_483: bitstring = (if v_1511 then (l_429,h_414) else caught-fail) in
                                            {6822}let server_wkh_37: bitstring = (if v_1511 then catch-fail(hmac(@6_tls_h,server_hts_37,x_483)) else caught-fail) in
                                            {6823}let v_1512: bool = not-caught-fail(server_wkh_37) in
                                            {6824}let l_430: label = (if v_1512 then tls13_finished else caught-fail) in
                                            {6825}let h_415: bitstring = (if v_1512 then zero else caught-fail) in
                                            {6826}let x_484: bitstring = (if v_1512 then (l_430,h_415) else caught-fail) in
                                            {6827}let client_fk_37: bitstring = (if v_1512 then catch-fail(hmac(@6_tls_h,client_hts_37,x_484)) else caught-fail) in
                                            {6828}let v_1513: bool = not-caught-fail(client_fk_37) in
                                            {6829}let l_431: label = (if v_1513 then tls13_finished else caught-fail) in
                                            {6830}let h_416: bitstring = (if v_1513 then zero else caught-fail) in
                                            {6831}let x_485: bitstring = (if v_1513 then (l_431,h_416) else caught-fail) in
                                            {6832}let server_fk_37: bitstring = (if v_1513 then catch-fail(hmac(@6_tls_h,server_hts_37,x_485)) else caught-fail) in
                                            {6833}let v_1514: bool = not-caught-fail(server_fk_37) in
                                            {6834}let (master_secret_82: bitstring,chk_44: aead_key,shk_43: aead_key,cfin_44: mac_key,sfin_43: mac_key) = (if v_1505 then (if v_1506 then (if v_1508 then (if v_1510 then (if v_1511 then (if v_1512 then (if v_1513 then (if v_1514 then (master_secret_81,client_wkh_37,server_wkh_37,client_fk_37,server_fk_37) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {6835}event Client_chk(@6_id_client,chk_44);
                                            {6836}event Client_shk(@6_id_client,shk_43);
                                            {6837}event Client_cfin(@6_id_client,cfin_44);
                                            {6838}event Client_sfin(@6_id_client,sfin_43);
                                            {6839}in(io, enc_ee_msg_36: bitstring);
                                            {6840}let ee_msg_37: msg = aead_dec(@6_tls_a,shk_43,0,zero,enc_ee_msg_36) in
                                            {6841}let EE(ech_ee_36: echExt,extra_ee_36: extraExt) = ee_msg_37 in
                                            {6842}let cur_log2_80: bitstring = (cur_log2_79,ee_msg_37) in
                                            {6843}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_20,sr_47,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_175,safe_psk_42,@6_comp_psk,master_secret_82,chk_44,0,shk_43,1,cfin_44,sfin_43,cur_log2_80)))
                                        )
                                        else
                                            {6844}out(io, illegal_parameter)
                                    )
                                    else
                                        {6845}out(io, illegal_parameter)
                            )
                            else
                                {6846}out(io, unexpected_message)
                )
                else
                    {6847}let cur_log_19: bitstring = (zero,i_client_hello_11) in
                    {6848}let sh_modified_12: msg = SH(B32(sr24_4,zero8),mode_35) in
                    {6849}let cur_log_sh_12: bitstring = (cur_log_19,sh_modified_12) in
                    {6850}let transcript_ech_conf_12: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_12)) in
                    {6851}let v_1515: bool = not-caught-fail(transcript_ech_conf_12) in
                    {6852}let s_152: bitstring = (if v_1515 then zero else caught-fail) in
                    {6853}let k_148: bitstring = (if v_1515 then catch-fail(b32_2_b(get_random(i_client_hello_11))) else caught-fail) in
                    {6854}let v_1516: bool = not-caught-fail(k_148) in
                    {6855}let k_149: bitstring = (if v_1515 then catch-fail((if v_1516 then hmac(@6_backend_h,s_152,k_148) else fail-any)) else caught-fail) in
                    {6856}let v_1517: bool = not-caught-fail(k_149) in
                    {6857}let l_432: label = (if v_1517 then ech_accept_confirmation else caught-fail) in
                    {6858}let x_486: bitstring = (if v_1517 then (l_432,cur_log_sh_12) else caught-fail) in
                    {6859}let sr8_15: bytes8 = (if v_1515 then catch-fail(crop_into_bytes8((if v_1517 then hmac(@6_backend_h,k_149,x_486) else fail-any))) else caught-fail) in
                    {6860}let v_1518: bool = not-caught-fail(sr8_15) in
                    {6861}if (B32(sr24_4,sr8_11) = (if v_1515 then (if v_1518 then B32(sr24_4,sr8_15) else fail-any) else fail-any)) then
                    (
                        {6862}event ClientEchAcceptance(@6_id_client,true);
                        {6863}let cur_log_20: bitstring = (zero,i_client_hello_11) in
                        {6864}let (x_487: bitstring,g_41: group) = i_kex_data_5 in
                        {6865}let (psk_offer_37: preSharedKey,id_offer_37: identityPsk,es_offer_37: bitstring,is_safe_offer_37: bool) = psk_data_34 in
                        {6866}event Client_PSKOffer(@6_id_client,psk_offer_37,id_offer_37,is_safe_offer_37);
                        {6867}event Client_Rand_client(@6_id_client,i_cr_5);
                        {6868}event Client_DH_client(@6_id_client,dh_pub(g_41,x_487));
                        {6869}event Client_server_domain(@6_id_client,backend_dom);
                        {6870}let SH(sr_48: bytes32,mode_43: params) = server_hello_6 in
                        {6871}event Client_Rand_server(@6_id_client,sr_48);
                        {6872}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_41,gy_38: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_75: preSharedKeyExt) = mode_43 in
                        (
                            {6873}let cur_log2_81: bitstring = (cur_log_20,server_hello_6) in
                            {6874}event Client_DH_server(@6_id_client,gy_38);
                            {6875}let v_1519: bool = (psk_ext_75 = empty_psk_ext) in
                            {6876}let psk_176: preSharedKey = (if v_1519 then NoPsk else caught-fail) in
                            {6877}let s_153: bitstring = (if v_1519 then zero else caught-fail) in
                            {6878}let k_150: bitstring = (if v_1519 then catch-fail(psk2b(psk_176)) else caught-fail) in
                            {6879}let v_1520: bool = not-caught-fail(k_150) in
                            {6880}let early_secret_117: bitstring = (if v_1519 then catch-fail((if v_1520 then hmac(@6_backend_h,s_153,k_150) else fail-any)) else caught-fail) in
                            {6881}let v_1521: bool = not-caught-fail(early_secret_117) in
                            {6882}let l_433: label = (if v_1521 then tls13_ext_res_binder else caught-fail) in
                            {6883}let m_154: bitstring = (if v_1521 then zero else caught-fail) in
                            {6884}let h_417: bitstring = (if v_1521 then catch-fail(hash(@6_backend_h,m_154)) else caught-fail) in
                            {6885}let v_1522: bool = not-caught-fail(h_417) in
                            {6886}let x_488: bitstring = (if v_1522 then (l_433,h_417) else caught-fail) in
                            {6887}let binder_key_78: bitstring = (if v_1521 then catch-fail((if v_1522 then hmac(@6_backend_h,early_secret_117,x_488) else fail-any)) else caught-fail) in
                            {6888}let v_1523: bool = not-caught-fail(binder_key_78) in
                            {6889}let v_1524: bitstring = (if v_1519 then catch-fail((if v_1521 then (if v_1523 then (early_secret_117,binder_key_78) else fail-any) else fail-any)) else caught-fail) in
                            {6890}let v_1525: bool = (not-caught-fail(v_1524) && success?(1-proj-2-tuple(v_1524))) in
                            {6891}let kb_78: mac_key = (if v_1525 then 2-proj-2-tuple(v_1524) else caught-fail) in
                            {6892}let es_118: bitstring = (if v_1525 then 1-proj-2-tuple(v_1524) else caught-fail) in
                            {6893}let v_1526: bitstring = (if not(v_1519) then catch-fail(psk_data_34) else caught-fail) in
                            {6894}let v_1527: bool = (not-caught-fail(v_1526) && success?(1-proj-4-tuple(v_1526))) in
                            {6895}let is_safe_70: bool = (if v_1527 then 4-proj-4-tuple(v_1526) else caught-fail) in
                            {6896}let es_119: bitstring = (if v_1527 then 3-proj-4-tuple(v_1526) else caught-fail) in
                            {6897}let id_81: identityPsk = (if v_1527 then 2-proj-4-tuple(v_1526) else caught-fail) in
                            {6898}let psk_177: preSharedKey = (if v_1527 then 1-proj-4-tuple(v_1526) else caught-fail) in
                            {6899}let (psk_178: preSharedKey,early_secret_118: bitstring,valid_37: bool,safe_psk_43: bool) = (if v_1519 then (if v_1525 then (NoPsk,es_118,true,false) else fail-any) else (if v_1527 then (psk_177,es_119,((psk_177 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_75)),is_safe_70) else fail-any)) in
                            {6900}event Client_PSKChoosen(@6_id_client,psk_178,safe_psk_43);
                            {6901}if valid_37 then
                            (
                                {6902}let gxy_75: element = catch-fail(dh_decap_fun(g_41,gy_38,x_487)) in
                                {6903}let v_1528: bool = not-caught-fail(gxy_75) in
                                {6904}new s_154[]: seed;
                                {6905}let gxy_76: element = (if v_1528 then gxy_75 else dh_f(s_154)) in
                                {6906}event Client_DH_gxy(@6_id_client,gxy_76);
                                {6907}let l_434: label = tls13_derived in
                                {6908}let m_155: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                {6909}let v_1529: bool = not-caught-fail(m_155) in
                                {6910}let h_418: bitstring = (if v_1529 then catch-fail(hash(@6_backend_h,m_155)) else caught-fail) in
                                {6911}let v_1530: bool = not-caught-fail(h_418) in
                                {6912}let x_489: bitstring = (if v_1530 then (l_434,h_418) else caught-fail) in
                                {6913}let extra_83: bitstring = catch-fail((if v_1529 then (if v_1530 then hmac(@6_backend_h,early_secret_118,x_489) else fail-any) else fail-any)) in
                                {6914}let v_1531: bool = not-caught-fail(extra_83) in
                                {6915}let handshake_secret_38: bitstring = (if v_1531 then hmac(@6_backend_h,extra_83,gxy_76) else fail-any) in
                                {6916}let l_435: label = tls13_derived in
                                {6917}let m_156: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                {6918}let v_1532: bool = not-caught-fail(m_156) in
                                {6919}let h_419: bitstring = (if v_1532 then catch-fail(hash(@6_backend_h,m_156)) else caught-fail) in
                                {6920}let v_1533: bool = not-caught-fail(h_419) in
                                {6921}let x_490: bitstring = (if v_1533 then (l_435,h_419) else caught-fail) in
                                {6922}let extra_84: bitstring = catch-fail((if v_1532 then (if v_1533 then hmac(@6_backend_h,handshake_secret_38,x_490) else fail-any) else fail-any)) in
                                {6923}let v_1534: bool = not-caught-fail(extra_84) in
                                {6924}let k_151: bitstring = (if v_1534 then zero else caught-fail) in
                                {6925}let master_secret_83: bitstring = (if v_1534 then catch-fail(hmac(@6_backend_h,handshake_secret_38,k_151)) else caught-fail) in
                                {6926}let v_1535: bool = not-caught-fail(master_secret_83) in
                                {6927}let l_436: label = (if v_1535 then tls13_client_handshake_traffic_secret else caught-fail) in
                                {6928}let h_420: bitstring = (if v_1535 then catch-fail(hash(@6_backend_h,cur_log2_81)) else caught-fail) in
                                {6929}let v_1536: bool = not-caught-fail(h_420) in
                                {6930}let x_491: bitstring = (if v_1536 then (l_436,h_420) else caught-fail) in
                                {6931}let client_hts_38: bitstring = (if v_1535 then catch-fail((if v_1536 then hmac(@6_backend_h,handshake_secret_38,x_491) else fail-any)) else caught-fail) in
                                {6932}let v_1537: bool = not-caught-fail(client_hts_38) in
                                {6933}let l_437: label = (if v_1537 then tls13_server_handshake_traffic_secret else caught-fail) in
                                {6934}let h_421: bitstring = (if v_1537 then catch-fail(hash(@6_backend_h,cur_log2_81)) else caught-fail) in
                                {6935}let v_1538: bool = not-caught-fail(h_421) in
                                {6936}let x_492: bitstring = (if v_1538 then (l_437,h_421) else caught-fail) in
                                {6937}let server_hts_38: bitstring = (if v_1537 then catch-fail((if v_1538 then hmac(@6_backend_h,handshake_secret_38,x_492) else fail-any)) else caught-fail) in
                                {6938}let v_1539: bool = not-caught-fail(server_hts_38) in
                                {6939}let l_438: label = (if v_1539 then tls13_key else caught-fail) in
                                {6940}let h_422: bitstring = (if v_1539 then zero else caught-fail) in
                                {6941}let x_493: bitstring = (if v_1539 then (l_438,h_422) else caught-fail) in
                                {6942}let client_wkh_38: bitstring = (if v_1539 then catch-fail(hmac(@6_backend_h,client_hts_38,x_493)) else caught-fail) in
                                {6943}let v_1540: bool = not-caught-fail(client_wkh_38) in
                                {6944}let l_439: label = (if v_1540 then tls13_key else caught-fail) in
                                {6945}let h_423: bitstring = (if v_1540 then zero else caught-fail) in
                                {6946}let x_494: bitstring = (if v_1540 then (l_439,h_423) else caught-fail) in
                                {6947}let server_wkh_38: bitstring = (if v_1540 then catch-fail(hmac(@6_backend_h,server_hts_38,x_494)) else caught-fail) in
                                {6948}let v_1541: bool = not-caught-fail(server_wkh_38) in
                                {6949}let l_440: label = (if v_1541 then tls13_finished else caught-fail) in
                                {6950}let h_424: bitstring = (if v_1541 then zero else caught-fail) in
                                {6951}let x_495: bitstring = (if v_1541 then (l_440,h_424) else caught-fail) in
                                {6952}let client_fk_38: bitstring = (if v_1541 then catch-fail(hmac(@6_backend_h,client_hts_38,x_495)) else caught-fail) in
                                {6953}let v_1542: bool = not-caught-fail(client_fk_38) in
                                {6954}let l_441: label = (if v_1542 then tls13_finished else caught-fail) in
                                {6955}let h_425: bitstring = (if v_1542 then zero else caught-fail) in
                                {6956}let x_496: bitstring = (if v_1542 then (l_441,h_425) else caught-fail) in
                                {6957}let server_fk_38: bitstring = (if v_1542 then catch-fail(hmac(@6_backend_h,server_hts_38,x_496)) else caught-fail) in
                                {6958}let v_1543: bool = not-caught-fail(server_fk_38) in
                                {6959}let (master_secret_84: bitstring,chk_45: aead_key,shk_44: aead_key,cfin_45: mac_key,sfin_44: mac_key) = (if v_1534 then (if v_1535 then (if v_1537 then (if v_1539 then (if v_1540 then (if v_1541 then (if v_1542 then (if v_1543 then (master_secret_83,client_wkh_38,server_wkh_38,client_fk_38,server_fk_38) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                {6960}event Client_chk(@6_id_client,chk_45);
                                {6961}event Client_shk(@6_id_client,shk_44);
                                {6962}event Client_cfin(@6_id_client,cfin_45);
                                {6963}event Client_sfin(@6_id_client,sfin_44);
                                {6964}in(io, enc_ee_msg_37: bitstring);
                                {6965}let ee_msg_38: msg = aead_dec(@6_backend_a,shk_44,0,zero,enc_ee_msg_37) in
                                {6966}let EE(ech_ee_37: echExt,extra_ee_37: extraExt) = ee_msg_38 in
                                {6967}let cur_log2_82: bitstring = (cur_log2_81,ee_msg_38) in
                                {6968}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr_5,sr_48,@6_backend_h,@6_backend_a,c_dom_6,backend_dom,psk_178,safe_psk_43,@6_comp_psk,master_secret_84,chk_45,0,shk_44,1,cfin_45,sfin_44,cur_log2_82)))
                            )
                            else
                                {6969}out(io, illegal_parameter)
                        )
                        else
                            {6970}out(io, illegal_parameter)
                    )
                    else
                        {6971}event ClientEchAcceptance(@6_id_client,false);
                        {6972}let v_1544: bool = @6_use_grease in
                        {6973}let psk_179: preSharedKey = (if not(v_1544) then NoPsk else caught-fail) in
                        {6974}let s_155: bitstring = (if not(v_1544) then zero else caught-fail) in
                        {6975}let k_152: bitstring = (if not(v_1544) then catch-fail(psk2b(psk_179)) else caught-fail) in
                        {6976}let v_1545: bool = not-caught-fail(k_152) in
                        {6977}let early_secret_119: bitstring = (if not(v_1544) then catch-fail((if v_1545 then hmac(@6_tls_h,s_155,k_152) else fail-any)) else caught-fail) in
                        {6978}let v_1546: bool = not-caught-fail(early_secret_119) in
                        {6979}let l_442: label = (if v_1546 then tls13_ext_res_binder else caught-fail) in
                        {6980}let m_157: bitstring = (if v_1546 then zero else caught-fail) in
                        {6981}let h_426: bitstring = (if v_1546 then catch-fail(hash(@6_tls_h,m_157)) else caught-fail) in
                        {6982}let v_1547: bool = not-caught-fail(h_426) in
                        {6983}let x_497: bitstring = (if v_1547 then (l_442,h_426) else caught-fail) in
                        {6984}let binder_key_79: bitstring = (if v_1546 then catch-fail((if v_1547 then hmac(@6_tls_h,early_secret_119,x_497) else fail-any)) else caught-fail) in
                        {6985}let v_1548: bool = not-caught-fail(binder_key_79) in
                        {6986}let v_1549: bitstring = (if not(v_1544) then catch-fail((if v_1546 then (if v_1548 then (early_secret_119,binder_key_79) else fail-any) else fail-any)) else caught-fail) in
                        {6987}let v_1550: bool = (not-caught-fail(v_1549) && success?(1-proj-2-tuple(v_1549))) in
                        {6988}let kb_79: mac_key = (if v_1550 then 2-proj-2-tuple(v_1549) else caught-fail) in
                        {6989}let es'_2: bitstring = (if v_1550 then 1-proj-2-tuple(v_1549) else caught-fail) in
                        {6990}let psk_data'_32: bitstring = (if v_1544 then psk_data_34 else (if v_1550 then (NoPsk,zero,es'_2,false) else fail-any)) in
                        {6991}let cur_log_21: bitstring = (zero,o_client_hello_2) in
                        {6992}let (x_498: bitstring,g_42: group) = o_kex_data_5 in
                        {6993}let (psk_offer_38: preSharedKey,id_offer_38: identityPsk,es_offer_38: bitstring,is_safe_offer_38: bool) = psk_data'_32 in
                        {6994}event Client_PSKOffer(@6_id_client,psk_offer_38,id_offer_38,is_safe_offer_38);
                        {6995}event Client_Rand_client(@6_id_client,o_cr_7);
                        {6996}event Client_DH_client(@6_id_client,dh_pub(g_42,x_498));
                        {6997}event Client_server_domain(@6_id_client,o_dom);
                        {6998}let SH(sr_49: bytes32,mode_44: params) = server_hello_6 in
                        {6999}event Client_Rand_server(@6_id_client,sr_49);
                        {7000}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_42,gy_39: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_76: preSharedKeyExt) = mode_44 in
                        (
                            {7001}let cur_log2_83: bitstring = (cur_log_21,server_hello_6) in
                            {7002}event Client_DH_server(@6_id_client,gy_39);
                            {7003}let v_1551: bool = (psk_ext_76 = empty_psk_ext) in
                            {7004}let psk_180: preSharedKey = (if v_1551 then NoPsk else caught-fail) in
                            {7005}let s_156: bitstring = (if v_1551 then zero else caught-fail) in
                            {7006}let k_153: bitstring = (if v_1551 then catch-fail(psk2b(psk_180)) else caught-fail) in
                            {7007}let v_1552: bool = not-caught-fail(k_153) in
                            {7008}let early_secret_120: bitstring = (if v_1551 then catch-fail((if v_1552 then hmac(@6_tls_h,s_156,k_153) else fail-any)) else caught-fail) in
                            {7009}let v_1553: bool = not-caught-fail(early_secret_120) in
                            {7010}let l_443: label = (if v_1553 then tls13_ext_res_binder else caught-fail) in
                            {7011}let m_158: bitstring = (if v_1553 then zero else caught-fail) in
                            {7012}let h_427: bitstring = (if v_1553 then catch-fail(hash(@6_tls_h,m_158)) else caught-fail) in
                            {7013}let v_1554: bool = not-caught-fail(h_427) in
                            {7014}let x_499: bitstring = (if v_1554 then (l_443,h_427) else caught-fail) in
                            {7015}let binder_key_80: bitstring = (if v_1553 then catch-fail((if v_1554 then hmac(@6_tls_h,early_secret_120,x_499) else fail-any)) else caught-fail) in
                            {7016}let v_1555: bool = not-caught-fail(binder_key_80) in
                            {7017}let v_1556: bitstring = (if v_1551 then catch-fail((if v_1553 then (if v_1555 then (early_secret_120,binder_key_80) else fail-any) else fail-any)) else caught-fail) in
                            {7018}let v_1557: bool = (not-caught-fail(v_1556) && success?(1-proj-2-tuple(v_1556))) in
                            {7019}let kb_80: mac_key = (if v_1557 then 2-proj-2-tuple(v_1556) else caught-fail) in
                            {7020}let es_120: bitstring = (if v_1557 then 1-proj-2-tuple(v_1556) else caught-fail) in
                            {7021}let v_1558: bitstring = (if not(v_1551) then catch-fail(psk_data'_32) else caught-fail) in
                            {7022}let v_1559: bool = (not-caught-fail(v_1558) && success?(1-proj-4-tuple(v_1558))) in
                            {7023}let is_safe_71: bool = (if v_1559 then 4-proj-4-tuple(v_1558) else caught-fail) in
                            {7024}let es_121: bitstring = (if v_1559 then 3-proj-4-tuple(v_1558) else caught-fail) in
                            {7025}let id_82: identityPsk = (if v_1559 then 2-proj-4-tuple(v_1558) else caught-fail) in
                            {7026}let psk_181: preSharedKey = (if v_1559 then 1-proj-4-tuple(v_1558) else caught-fail) in
                            {7027}let (psk_182: preSharedKey,early_secret_121: bitstring,valid_38: bool,safe_psk_44: bool) = (if v_1551 then (if v_1557 then (NoPsk,es_120,true,false) else fail-any) else (if v_1559 then (psk_181,es_121,((psk_181 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_76)),is_safe_71) else fail-any)) in
                            {7028}event Client_PSKChoosen(@6_id_client,psk_182,safe_psk_44);
                            {7029}if valid_38 then
                            (
                                {7030}let gxy_77: element = catch-fail(dh_decap_fun(g_42,gy_39,x_498)) in
                                {7031}let v_1560: bool = not-caught-fail(gxy_77) in
                                {7032}new s_157[]: seed;
                                {7033}let gxy_78: element = (if v_1560 then gxy_77 else dh_f(s_157)) in
                                {7034}event Client_DH_gxy(@6_id_client,gxy_78);
                                {7035}let l_444: label = tls13_derived in
                                {7036}let m_159: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                {7037}let v_1561: bool = not-caught-fail(m_159) in
                                {7038}let h_428: bitstring = (if v_1561 then catch-fail(hash(@6_tls_h,m_159)) else caught-fail) in
                                {7039}let v_1562: bool = not-caught-fail(h_428) in
                                {7040}let x_500: bitstring = (if v_1562 then (l_444,h_428) else caught-fail) in
                                {7041}let extra_85: bitstring = catch-fail((if v_1561 then (if v_1562 then hmac(@6_tls_h,early_secret_121,x_500) else fail-any) else fail-any)) in
                                {7042}let v_1563: bool = not-caught-fail(extra_85) in
                                {7043}let handshake_secret_39: bitstring = (if v_1563 then hmac(@6_tls_h,extra_85,gxy_78) else fail-any) in
                                {7044}let l_445: label = tls13_derived in
                                {7045}let m_160: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                {7046}let v_1564: bool = not-caught-fail(m_160) in
                                {7047}let h_429: bitstring = (if v_1564 then catch-fail(hash(@6_tls_h,m_160)) else caught-fail) in
                                {7048}let v_1565: bool = not-caught-fail(h_429) in
                                {7049}let x_501: bitstring = (if v_1565 then (l_445,h_429) else caught-fail) in
                                {7050}let extra_86: bitstring = catch-fail((if v_1564 then (if v_1565 then hmac(@6_tls_h,handshake_secret_39,x_501) else fail-any) else fail-any)) in
                                {7051}let v_1566: bool = not-caught-fail(extra_86) in
                                {7052}let k_154: bitstring = (if v_1566 then zero else caught-fail) in
                                {7053}let master_secret_85: bitstring = (if v_1566 then catch-fail(hmac(@6_tls_h,handshake_secret_39,k_154)) else caught-fail) in
                                {7054}let v_1567: bool = not-caught-fail(master_secret_85) in
                                {7055}let l_446: label = (if v_1567 then tls13_client_handshake_traffic_secret else caught-fail) in
                                {7056}let h_430: bitstring = (if v_1567 then catch-fail(hash(@6_tls_h,cur_log2_83)) else caught-fail) in
                                {7057}let v_1568: bool = not-caught-fail(h_430) in
                                {7058}let x_502: bitstring = (if v_1568 then (l_446,h_430) else caught-fail) in
                                {7059}let client_hts_39: bitstring = (if v_1567 then catch-fail((if v_1568 then hmac(@6_tls_h,handshake_secret_39,x_502) else fail-any)) else caught-fail) in
                                {7060}let v_1569: bool = not-caught-fail(client_hts_39) in
                                {7061}let l_447: label = (if v_1569 then tls13_server_handshake_traffic_secret else caught-fail) in
                                {7062}let h_431: bitstring = (if v_1569 then catch-fail(hash(@6_tls_h,cur_log2_83)) else caught-fail) in
                                {7063}let v_1570: bool = not-caught-fail(h_431) in
                                {7064}let x_503: bitstring = (if v_1570 then (l_447,h_431) else caught-fail) in
                                {7065}let server_hts_39: bitstring = (if v_1569 then catch-fail((if v_1570 then hmac(@6_tls_h,handshake_secret_39,x_503) else fail-any)) else caught-fail) in
                                {7066}let v_1571: bool = not-caught-fail(server_hts_39) in
                                {7067}let l_448: label = (if v_1571 then tls13_key else caught-fail) in
                                {7068}let h_432: bitstring = (if v_1571 then zero else caught-fail) in
                                {7069}let x_504: bitstring = (if v_1571 then (l_448,h_432) else caught-fail) in
                                {7070}let client_wkh_39: bitstring = (if v_1571 then catch-fail(hmac(@6_tls_h,client_hts_39,x_504)) else caught-fail) in
                                {7071}let v_1572: bool = not-caught-fail(client_wkh_39) in
                                {7072}let l_449: label = (if v_1572 then tls13_key else caught-fail) in
                                {7073}let h_433: bitstring = (if v_1572 then zero else caught-fail) in
                                {7074}let x_505: bitstring = (if v_1572 then (l_449,h_433) else caught-fail) in
                                {7075}let server_wkh_39: bitstring = (if v_1572 then catch-fail(hmac(@6_tls_h,server_hts_39,x_505)) else caught-fail) in
                                {7076}let v_1573: bool = not-caught-fail(server_wkh_39) in
                                {7077}let l_450: label = (if v_1573 then tls13_finished else caught-fail) in
                                {7078}let h_434: bitstring = (if v_1573 then zero else caught-fail) in
                                {7079}let x_506: bitstring = (if v_1573 then (l_450,h_434) else caught-fail) in
                                {7080}let client_fk_39: bitstring = (if v_1573 then catch-fail(hmac(@6_tls_h,client_hts_39,x_506)) else caught-fail) in
                                {7081}let v_1574: bool = not-caught-fail(client_fk_39) in
                                {7082}let l_451: label = (if v_1574 then tls13_finished else caught-fail) in
                                {7083}let h_435: bitstring = (if v_1574 then zero else caught-fail) in
                                {7084}let x_507: bitstring = (if v_1574 then (l_451,h_435) else caught-fail) in
                                {7085}let server_fk_39: bitstring = (if v_1574 then catch-fail(hmac(@6_tls_h,server_hts_39,x_507)) else caught-fail) in
                                {7086}let v_1575: bool = not-caught-fail(server_fk_39) in
                                {7087}let (master_secret_86: bitstring,chk_46: aead_key,shk_45: aead_key,cfin_46: mac_key,sfin_45: mac_key) = (if v_1566 then (if v_1567 then (if v_1569 then (if v_1571 then (if v_1572 then (if v_1573 then (if v_1574 then (if v_1575 then (master_secret_85,client_wkh_39,server_wkh_39,client_fk_39,server_fk_39) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                {7088}event Client_chk(@6_id_client,chk_46);
                                {7089}event Client_shk(@6_id_client,shk_45);
                                {7090}event Client_cfin(@6_id_client,cfin_46);
                                {7091}event Client_sfin(@6_id_client,sfin_45);
                                {7092}in(io, enc_ee_msg_38: bitstring);
                                {7093}let ee_msg_39: msg = aead_dec(@6_tls_a,shk_45,0,zero,enc_ee_msg_38) in
                                {7094}let EE(ech_ee_38: echExt,extra_ee_38: extraExt) = ee_msg_39 in
                                {7095}let cur_log2_84: bitstring = (cur_log2_83,ee_msg_39) in
                                {7096}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(o_cr_7,sr_49,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_182,safe_psk_44,@6_comp_psk,master_secret_86,chk_46,0,shk_45,1,cfin_46,sfin_45,cur_log2_84)))
                            )
                            else
                                {7097}out(io, illegal_parameter)
                        )
                        else
                            {7098}out(io, illegal_parameter)
            )
            else
                {7099}out(io, unexpected_message)
        )
) | (
    {7101}!
    {7102}new id_server_4: idProc;
    {7103}in(io, s_dom_13: domain);
    {7104}event Same(s_dom_13);
    {7105}let id_server_5: idProc = id_server_4 in
    {7106}let extra_ext_2: extraExt = empty_extra_ext in
    {7107}let tls_h_1: hash_alg = id_hash(StrongHash,1) in
    {7108}let tls_a_1: aead_alg = id_aead(StrongAE,1) in
    {7109}let tls_g_1: group = id_g(StrongDH,1) in
    {7110}let backend_h: hash_alg = id_hash(StrongHash,1) in
    {7111}let backend_a: aead_alg = id_aead(StrongAE,1) in
    {7112}let backend_g: group = id_g(StrongDH,1) in
    {7113}in(io, use_ech: bool);
    {7114}new @5_st[]: stamp;
    {7115}event PreciseInput(@5_st,use_ech);
    {7116}let () = () in
    {7117}event Same(use_ech);
    {7118}let use_psk_1: bool = false in
    {7119}let req_cert_3: bool = true in
    {7120}in(io, o_client_hello_3: msg);
    {7121}let CH(cr_16: bytes32,nego(=TLS13,c_h_alg: hash_alg,c_a_alg: aead_alg,kex_ext_5: keyShareExt,sni_ext_2: sniExt,ech_ext_12: echExt,extra_ext_3: extraExt,psk_ext_77: preSharedKeyExt)) = o_client_hello_3 in
    (
        {7122}if (sni_ext_2 = SNI(s_dom_13)) then
        (
            {7313}get ech_configurations(ech_config(config_id_8: configId,ech_g_10: group,pkR_10: element,=s_dom_13,ech_h_10: hash_alg,ech_a_10: aead_alg),skR_2: bitstring) in
            {7123}let ech_conf_1: echConfig = ech_config(config_id_8,ech_g_10,pkR_10,s_dom_13,ech_h_10,ech_a_10) in
            {7124}let @4_x: bitstring = (ech_conf_1,skR_2) in
            {7125}new @4_st[]: stamp;
            {7126}event PreciseInput(@4_st,@4_x);
            {7127}let () = () in
            {7128}event ServerChoosesEchConfig(id_server_5,ech_conf_1,use_ech);
            {7129}let v_1576: echConfig = ech_conf_1 in
            {7130}let v_1577: bool = success?(1-proj-ech_config(v_1576)) in
            {7131}let a_alg_12: aead_alg = (if v_1577 then 6-proj-ech_config(v_1576) else caught-fail) in
            {7132}let h_alg_14: hash_alg = (if v_1577 then 5-proj-ech_config(v_1576) else caught-fail) in
            {7133}let s_dom_14: domain = (if v_1577 then 4-proj-ech_config(v_1576) else caught-fail) in
            {7134}let pkR_11: element = (if v_1577 then 3-proj-ech_config(v_1576) else caught-fail) in
            {7135}let g_43: group = (if v_1577 then 2-proj-ech_config(v_1576) else caught-fail) in
            {7136}let config_id_9: configId = (if v_1577 then 1-proj-ech_config(v_1576) else caught-fail) in
            {7137}new s_158[]: seed;
            {7138}let gx_33: element = (if v_1577 then dh_pub(g_43,dh_k(s_158)) else caught-fail) in
            {7139}let v_1578: bitstring = (if v_1577 then catch-fail((dh_k(s_158),gx_33)) else caught-fail) in
            {7140}let v_1579: bool = (not-caught-fail(v_1578) && success?(1-proj-2-tuple(v_1578))) in
            {7141}let pkR': element = (if v_1579 then 2-proj-2-tuple(v_1578) else caught-fail) in
            {7142}let skR': bitstring = (if v_1579 then 1-proj-2-tuple(v_1578) else caught-fail) in
            {7143}new config_id'[]: configId;
            {7144}let retry_ech_ext: echExt = (if v_1577 then (if v_1579 then ECHConfigList(ech_config(config_id',g_43,pkR',s_dom_14,h_alg_14,a_alg_12)) else fail-any) else fail-any) in
            {7145}if ((use_ech ≠ true) || (ech_ext_12 = empty_ech_ext)) then
            (
                {7146}event ServerEchAcceptance(id_server_5,false);
                {7147}let ee_msg_40: msg = EE(empty_ech_ext,extra_ext_2) in
                {7148}let CH(cr_17: bytes32,nego(=TLS13,=tls_h_1,=tls_a_1,kex_ext_6: keyShareExt,SNI(=s_dom_13),ech_ext_13: echExt,extra_ext_4: extraExt,psk_ext_78: preSharedKeyExt)) = o_client_hello_3 in
                (
                    {7149}let (=true,client_kex_ext(DHE_group(=tls_g_1))) = (false,kex_ext_6) in
                    (
                        {7150}let hrr_mode_3: params = nego(TLS13,tls_h_1,tls_a_1,hrr_kex_ext(tls_g_1),empty_sni_ext,empty_ech_ext,empty_extra_ext,empty_psk_ext) in
                        {7151}let hello_retry_request: msg = SH(B32(HRR24,HRR8),hrr_mode_3) in
                        {7152}out(io, hello_retry_request);
                        {7153}let cur_log_HRR: bitstring = ((zero,o_client_hello_3),hello_retry_request) in
                        {7154}in(io, client_hello'_21: msg);
                        {7155}let CH(cr'_21: bytes32,offer': params) = client_hello'_21 in
                            {7156}out(ch_server_SH, (id_server_5,ArgsServerSH(tls_g_1,tls_h_1,tls_a_1,s_dom_13,req_cert_3,false,use_psk_1,false,ee_msg_40,client_hello'_21,cur_log_HRR)))
                        else
                            {7157}out(io, unexpected_message)
                    )
                    else
                        {7158}let client_kex_ext(DHE_kex(=tls_g_1,gx_34: element)) = kex_ext_6 in
                            {7159}out(ch_server_SH, (id_server_5,ArgsServerSH(tls_g_1,tls_h_1,tls_a_1,s_dom_13,req_cert_3,false,use_psk_1,true,ee_msg_40,o_client_hello_3,zero)))
                        else
                            {7160}out(io, handshake_failure)
                )
                else
                    {7161}out(io, handshake_failure)
            )
            else
                {7162}let ECHClientHelloOuter(ech_h': hash_alg,ech_a': aead_alg,config_id'_1: configId,enc_2: element,payload_13: bitstring) = ech_ext_12 in
                (
                    {7163}if ((ech_h' = ech_h_10) && ((ech_a' = ech_a_10) && (config_id'_1 = config_id_8))) then
                    (
                        {7164}let info_1: bitstring = (tls_ech_str,ech_conf_1) in
                        {7165}let gxy_79: element = catch-fail(dh_decap_fun(ech_g_10,enc_2,skR_2)) in
                        {7166}let v_1580: bool = not-caught-fail(gxy_79) in
                        {7167}new s_159[]: seed;
                        {7168}let shared_secret_1: element = (if v_1580 then gxy_79 else dh_f(s_159)) in
                        {7169}let r_1: hpkeRole = R in
                        {7170}let salt_1: bitstring = zero in
                        {7171}let label_5: label = hpke_info_hash in
                        {7172}let k_155: bitstring = (label_5,info_1) in
                        {7173}let info_hash_1: bitstring = catch-fail(hmac(ech_h_10,salt_1,k_155)) in
                        {7174}let v_1581: bool = not-caught-fail(info_hash_1) in
                        {7175}let label_6: label = (if v_1581 then hpke_secret else caught-fail) in
                        {7176}let ikm_1: bitstring = (if v_1581 then zero else caught-fail) in
                        {7177}let k_156: bitstring = (if v_1581 then (label_6,ikm_1) else caught-fail) in
                        {7178}let xsecret_1: bitstring = (if v_1581 then catch-fail(hmac(ech_h_10,shared_secret_1,k_156)) else caught-fail) in
                        {7179}let v_1582: bool = not-caught-fail(xsecret_1) in
                        {7180}let label_7: label = (if v_1582 then hpke_key else caught-fail) in
                        {7181}let x_508: bitstring = (if v_1582 then (label_7,info_hash_1) else caught-fail) in
                        {7182}let key_13: aead_key = (if v_1582 then catch-fail(hmac(ech_h_10,xsecret_1,x_508)) else caught-fail) in
                        {7183}let v_1583: bool = not-caught-fail(key_13) in
                        {7184}let label_8: label = (if v_1583 then hpke_base_nonce else caught-fail) in
                        {7185}let x_509: bitstring = (if v_1583 then (label_8,info_hash_1) else caught-fail) in
                        {7186}let base_nonce_13: bitstring = (if v_1583 then catch-fail(hmac(ech_h_10,xsecret_1,x_509)) else caught-fail) in
                        {7187}let v_1584: bool = not-caught-fail(base_nonce_13) in
                        {7188}let context_1: hpkeContext = (if v_1581 then (if v_1582 then (if v_1583 then (if v_1584 then hpke_context(r_1,key_13,base_nonce_13) else fail-any) else fail-any) else fail-any) else fail-any) in
                        {7189}let v_1585: msg = o_client_hello_3 in
                        {7190}let v_1586: bool = (success?(1-proj-nego(2-proj-CH(v_1585))) && success?(1-proj-CH(v_1585))) in
                        {7191}let psk_ext_79: preSharedKeyExt = (if v_1586 then 8-proj-nego(2-proj-CH(v_1585)) else caught-fail) in
                        {7192}let extra_ext_5: extraExt = (if v_1586 then 7-proj-nego(2-proj-CH(v_1585)) else caught-fail) in
                        {7193}let ech_ext_14: echExt = (if v_1586 then 6-proj-nego(2-proj-CH(v_1585)) else caught-fail) in
                        {7194}let sni_ext_3: sniExt = (if v_1586 then 5-proj-nego(2-proj-CH(v_1585)) else caught-fail) in
                        {7195}let kex_ext_7: keyShareExt = (if v_1586 then 4-proj-nego(2-proj-CH(v_1585)) else caught-fail) in
                        {7196}let a_alg_13: aead_alg = (if v_1586 then 3-proj-nego(2-proj-CH(v_1585)) else caught-fail) in
                        {7197}let h_alg_15: hash_alg = (if v_1586 then 2-proj-nego(2-proj-CH(v_1585)) else caught-fail) in
                        {7198}let v_1587: TLS_version = (if v_1586 then 1-proj-nego(2-proj-CH(v_1585)) else caught-fail) in
                        {7199}let r_2: bytes32 = (if v_1586 then 1-proj-CH(v_1585) else caught-fail) in
                        {7200}let v_1588: echExt = (if v_1586 then catch-fail(ech_ext_14) else caught-fail) in
                        {7201}let v_1589: bool = (not-caught-fail(v_1588) && success?(1-proj-ECHClientHelloOuter(v_1588))) in
                        {7202}let payload_14: bitstring = (if v_1589 then 5-proj-ECHClientHelloOuter(v_1588) else caught-fail) in
                        {7203}let enc_3: element = (if v_1589 then 4-proj-ECHClientHelloOuter(v_1588) else caught-fail) in
                        {7204}let config_id_10: configId = (if v_1589 then 3-proj-ECHClientHelloOuter(v_1588) else caught-fail) in
                        {7205}let a_alg_ech: aead_alg = (if v_1589 then 2-proj-ECHClientHelloOuter(v_1588) else caught-fail) in
                        {7206}let h_alg_ech: hash_alg = (if v_1589 then 1-proj-ECHClientHelloOuter(v_1588) else caught-fail) in
                        {7207}let ech_ext': echExt = (if v_1589 then ECHClientHelloOuter(h_alg_ech,a_alg_ech,config_id_10,enc_3,zero) else caught-fail) in
                        {7208}let client_hello_AAD: msg = (if v_1586 then (if v_1589 then CH(r_2,nego(v_1587,h_alg_15,a_alg_13,kex_ext_7,sni_ext_3,ech_ext',extra_ext_5,psk_ext_79)) else fail-any) else fail-any) in
                        {7209}let n_12: nat = 1 in
                        {7210}let v_1590: hpkeContext = context_1 in
                        {7211}let v_1591: bool = ((R =nf 1-proj-hpke_context(v_1590)) && success?(1-proj-hpke_context(v_1590))) in
                        {7212}let base_nonce_14: bitstring = (if v_1591 then 3-proj-hpke_context(v_1590) else caught-fail) in
                        {7213}let key_14: aead_key = (if v_1591 then 2-proj-hpke_context(v_1590) else caught-fail) in
                        {7214}let i_client_hello_15: msg = (if v_1591 then aead_dec(ech_a_10,key_14,(base_nonce_14,n_12),client_hello_AAD,payload_13) else fail-any) in
                        (
                            {7215}let CH(cr'_22: bytes32,nego(=TLS13,c_h_alg': hash_alg,c_a_alg': aead_alg,kex_ext': keyShareExt,SNI(i_dom: domain),=ECHClientHelloInner,extra_ext': extraExt,psk_ext': preSharedKeyExt)) = i_client_hello_15 in
                            (
                                {7216}event ServerEchAcceptance(id_server_5,true);
                                {7217}let ee_msg_41: msg = EE(empty_ech_ext,extra_ext_2) in
                                {7218}let CH(cr_18: bytes32,nego(=TLS13,=backend_h,=backend_a,kex_ext_8: keyShareExt,SNI(i_dom_1: domain),=ECHClientHelloInner,extra_ext_6: extraExt,psk_ext_80: preSharedKeyExt)) = i_client_hello_15 in
                                (
                                    {7219}let (=true,client_kex_ext(DHE_group(=backend_g))) = (false,kex_ext_8) in
                                    (
                                        {7220}let hrr_mode_4: params = nego(TLS13,backend_h,backend_a,hrr_kex_ext(backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) in
                                        {7221}let hrr_3: msg = SH(B32(HRR24,HRR8),hrr_mode_4) in
                                        {7222}let cur_log_22: bitstring = ((zero,i_client_hello_15),hrr_3) in
                                        {7223}let transcript_hrr_ech_conf_3: bitstring = catch-fail(hash(backend_h,cur_log_22)) in
                                        {7224}let v_1592: bool = not-caught-fail(transcript_hrr_ech_conf_3) in
                                        {7225}let s_160: bitstring = (if v_1592 then zero else caught-fail) in
                                        {7226}let k_157: bitstring = (if v_1592 then catch-fail(b32_2_b(get_random(i_client_hello_15))) else caught-fail) in
                                        {7227}let v_1593: bool = not-caught-fail(k_157) in
                                        {7228}let k_158: bitstring = (if v_1592 then catch-fail((if v_1593 then hmac(backend_h,s_160,k_157) else fail-any)) else caught-fail) in
                                        {7229}let v_1594: bool = not-caught-fail(k_158) in
                                        {7230}let l_452: label = (if v_1594 then hrr_ech_accept_confirmation else caught-fail) in
                                        {7231}let x_510: bitstring = (if v_1594 then (l_452,cur_log_22) else caught-fail) in
                                        {7232}let hrr_accept_confirmation: bytes8 = catch-fail((if v_1592 then crop_into_bytes8((if v_1594 then hmac(backend_h,k_158,x_510) else fail-any)) else fail-any)) in
                                        {7233}let v_1595: bool = not-caught-fail(hrr_accept_confirmation) in
                                        {7234}let hrr_mode_5: params = (if v_1595 then nego(TLS13,backend_h,backend_a,hrr_kex_ext(backend_g),empty_sni_ext,ECHHelloRetryRequest(hrr_accept_confirmation),empty_extra_ext,empty_psk_ext) else caught-fail) in
                                        {7235}let hrr_msg: msg = (if v_1595 then SH(B32(HRR24,HRR8),hrr_mode_5) else fail-any) in
                                        {7236}out(io, hrr_msg);
                                        {7237}let ech_config(id_conf: configId,ech_g_11: group,pkR_12: element,s_dom_15: domain,ech_h_11: hash_alg,ech_a_11: aead_alg) = ech_conf_1 in
                                        {7238}in(io, o_client_hello_4: msg);
                                        {7239}let CH(cr'_23: bytes32,nego(=TLS13,h_alg': hash_alg,a_alg': aead_alg,kex_ext'_1: keyShareExt,SNI(=s_dom_15),ech_ext_15: echExt,extra_ext'_1: extraExt,psk_ext'_1: preSharedKeyExt)) = o_client_hello_4 in
                                        (
                                            {7240}if (ech_ext_15 = empty_ech_ext) then
                                                {7241}out(io, missing_extension)
                                            else
                                                {7242}let ECHClientHelloOuter(=ech_h_11,=ech_a_11,=id_conf,=zero,payload_15: bitstring) = ech_ext_15 in
                                                (
                                                    {7243}let v_1596: msg = o_client_hello_4 in
                                                    {7244}let v_1597: bool = (success?(1-proj-nego(2-proj-CH(v_1596))) && success?(1-proj-CH(v_1596))) in
                                                    {7245}let psk_ext_81: preSharedKeyExt = (if v_1597 then 8-proj-nego(2-proj-CH(v_1596)) else caught-fail) in
                                                    {7246}let extra_ext_7: extraExt = (if v_1597 then 7-proj-nego(2-proj-CH(v_1596)) else caught-fail) in
                                                    {7247}let ech_ext_16: echExt = (if v_1597 then 6-proj-nego(2-proj-CH(v_1596)) else caught-fail) in
                                                    {7248}let sni_ext_4: sniExt = (if v_1597 then 5-proj-nego(2-proj-CH(v_1596)) else caught-fail) in
                                                    {7249}let kex_ext_9: keyShareExt = (if v_1597 then 4-proj-nego(2-proj-CH(v_1596)) else caught-fail) in
                                                    {7250}let a_alg_14: aead_alg = (if v_1597 then 3-proj-nego(2-proj-CH(v_1596)) else caught-fail) in
                                                    {7251}let h_alg_16: hash_alg = (if v_1597 then 2-proj-nego(2-proj-CH(v_1596)) else caught-fail) in
                                                    {7252}let v_1598: TLS_version = (if v_1597 then 1-proj-nego(2-proj-CH(v_1596)) else caught-fail) in
                                                    {7253}let r_3: bytes32 = (if v_1597 then 1-proj-CH(v_1596) else caught-fail) in
                                                    {7254}let v_1599: echExt = (if v_1597 then catch-fail(ech_ext_16) else caught-fail) in
                                                    {7255}let v_1600: bool = (not-caught-fail(v_1599) && success?(1-proj-ECHClientHelloOuter(v_1599))) in
                                                    {7256}let payload_16: bitstring = (if v_1600 then 5-proj-ECHClientHelloOuter(v_1599) else caught-fail) in
                                                    {7257}let enc_4: element = (if v_1600 then 4-proj-ECHClientHelloOuter(v_1599) else caught-fail) in
                                                    {7258}let config_id_11: configId = (if v_1600 then 3-proj-ECHClientHelloOuter(v_1599) else caught-fail) in
                                                    {7259}let a_alg_ech_1: aead_alg = (if v_1600 then 2-proj-ECHClientHelloOuter(v_1599) else caught-fail) in
                                                    {7260}let h_alg_ech_1: hash_alg = (if v_1600 then 1-proj-ECHClientHelloOuter(v_1599) else caught-fail) in
                                                    {7261}let ech_ext'_1: echExt = (if v_1600 then ECHClientHelloOuter(h_alg_ech_1,a_alg_ech_1,config_id_11,enc_4,zero) else caught-fail) in
                                                    {7262}let client_hello_AAD_1: msg = (if v_1597 then (if v_1600 then CH(r_3,nego(v_1598,h_alg_16,a_alg_14,kex_ext_9,sni_ext_4,ech_ext'_1,extra_ext_7,psk_ext_81)) else fail-any) else fail-any) in
                                                    {7263}let n_13: nat = 2 in
                                                    {7264}let v_1601: hpkeContext = context_1 in
                                                    {7265}let v_1602: bool = ((R =nf 1-proj-hpke_context(v_1601)) && success?(1-proj-hpke_context(v_1601))) in
                                                    {7266}let base_nonce_15: bitstring = (if v_1602 then 3-proj-hpke_context(v_1601) else caught-fail) in
                                                    {7267}let key_15: aead_key = (if v_1602 then 2-proj-hpke_context(v_1601) else caught-fail) in
                                                    {7268}let i_client_hello'_9: msg = (if v_1602 then aead_dec(ech_a_11,key_15,(base_nonce_15,n_13),client_hello_AAD_1,payload_15) else fail-any) in
                                                    (
                                                        {7269}let CH(i_cr_7: bytes32,nego(=TLS13,i_h_alg: hash_alg,i_a_alg: aead_alg,i_kex_ext_4: keyShareExt,SNI(=i_dom_1),=ECHClientHelloInner,i_extra_ext: extraExt,i_psk_ext: preSharedKeyExt)) = i_client_hello'_9 in
                                                            {7270}out(ch_server_SH, (id_server_5,ArgsServerSH(backend_g,backend_h,backend_a,i_dom_1,req_cert_3,true,use_psk_1,false,ee_msg_41,i_client_hello'_9,((zero,i_client_hello_15),hrr_msg))))
                                                        else
                                                            {7271}out(io, illegal_parameter)
                                                    )
                                                    else
                                                        {7272}out(io, decrypt_error)
                                                )
                                                else
                                                    {7273}out(io, illegal_parameter)
                                        )
                                        else
                                            {7274}out(io, unexpected_message)
                                    )
                                    else
                                        {7275}let client_kex_ext(DHE_kex(=backend_g,gx_35: element)) = kex_ext_8 in
                                            {7276}out(ch_server_SH, (id_server_5,ArgsServerSH(backend_g,backend_h,backend_a,i_dom_1,req_cert_3,true,use_psk_1,true,ee_msg_41,i_client_hello_15,zero)))
                                        else
                                            {7277}out(io, handshake_failure)
                                )
                                else
                                    {7278}out(io, handshake_failure)
                            )
                            else
                                {7279}out(io, illegal_parameter)
                        )
                        else
                            {7280}event ServerEchAcceptance(id_server_5,false);
                            {7281}let ee_msg_42: msg = EE(retry_ech_ext,extra_ext_2) in
                            {7282}let CH(cr_19: bytes32,nego(=TLS13,=tls_h_1,=tls_a_1,kex_ext_10: keyShareExt,SNI(=s_dom_13),ech_ext_17: echExt,extra_ext_8: extraExt,psk_ext_82: preSharedKeyExt)) = o_client_hello_3 in
                            (
                                {7283}let (=true,client_kex_ext(DHE_group(=tls_g_1))) = (false,kex_ext_10) in
                                (
                                    {7284}let hrr_mode_6: params = nego(TLS13,tls_h_1,tls_a_1,hrr_kex_ext(tls_g_1),empty_sni_ext,empty_ech_ext,empty_extra_ext,empty_psk_ext) in
                                    {7285}let hello_retry_request_1: msg = SH(B32(HRR24,HRR8),hrr_mode_6) in
                                    {7286}out(io, hello_retry_request_1);
                                    {7287}let cur_log_HRR_1: bitstring = ((zero,o_client_hello_3),hello_retry_request_1) in
                                    {7288}in(io, client_hello'_22: msg);
                                    {7289}let CH(cr'_24: bytes32,offer'_1: params) = client_hello'_22 in
                                        {7290}out(ch_server_SH, (id_server_5,ArgsServerSH(tls_g_1,tls_h_1,tls_a_1,s_dom_13,req_cert_3,false,use_psk_1,false,ee_msg_42,client_hello'_22,cur_log_HRR_1)))
                                    else
                                        {7291}out(io, unexpected_message)
                                )
                                else
                                    {7292}let client_kex_ext(DHE_kex(=tls_g_1,gx_36: element)) = kex_ext_10 in
                                        {7293}out(ch_server_SH, (id_server_5,ArgsServerSH(tls_g_1,tls_h_1,tls_a_1,s_dom_13,req_cert_3,false,use_psk_1,true,ee_msg_42,o_client_hello_3,zero)))
                                    else
                                        {7294}out(io, handshake_failure)
                            )
                            else
                                {7295}out(io, handshake_failure)
                    )
                    else
                        {7296}event ServerEchAcceptance(id_server_5,false);
                        {7297}let ee_msg_43: msg = EE(retry_ech_ext,extra_ext_2) in
                        {7298}let CH(cr_20: bytes32,nego(=TLS13,=tls_h_1,=tls_a_1,kex_ext_11: keyShareExt,SNI(=s_dom_13),ech_ext_18: echExt,extra_ext_9: extraExt,psk_ext_83: preSharedKeyExt)) = o_client_hello_3 in
                        (
                            {7299}let (=true,client_kex_ext(DHE_group(=tls_g_1))) = (false,kex_ext_11) in
                            (
                                {7300}let hrr_mode_7: params = nego(TLS13,tls_h_1,tls_a_1,hrr_kex_ext(tls_g_1),empty_sni_ext,empty_ech_ext,empty_extra_ext,empty_psk_ext) in
                                {7301}let hello_retry_request_2: msg = SH(B32(HRR24,HRR8),hrr_mode_7) in
                                {7302}out(io, hello_retry_request_2);
                                {7303}let cur_log_HRR_2: bitstring = ((zero,o_client_hello_3),hello_retry_request_2) in
                                {7304}in(io, client_hello'_23: msg);
                                {7305}let CH(cr'_25: bytes32,offer'_2: params) = client_hello'_23 in
                                    {7306}out(ch_server_SH, (id_server_5,ArgsServerSH(tls_g_1,tls_h_1,tls_a_1,s_dom_13,req_cert_3,false,use_psk_1,false,ee_msg_43,client_hello'_23,cur_log_HRR_2)))
                                else
                                    {7307}out(io, unexpected_message)
                            )
                            else
                                {7308}let client_kex_ext(DHE_kex(=tls_g_1,gx_37: element)) = kex_ext_11 in
                                    {7309}out(ch_server_SH, (id_server_5,ArgsServerSH(tls_g_1,tls_h_1,tls_a_1,s_dom_13,req_cert_3,false,use_psk_1,true,ee_msg_43,o_client_hello_3,zero)))
                                else
                                    {7310}out(io, handshake_failure)
                        )
                        else
                            {7311}out(io, handshake_failure)
                )
                else
                    {7312}out(io, illegal_parameter)
        )
        else
            {7314}out(io, handshake_failure)
    )
    else
        {7315}out(io, unexpected_message)
) | (
    {7316}!
    {7317}in(io, ClientA: domain);
    {7318}in(io, ClientB: domain);
    {7319}let c_dom_7: domain = choice[ClientA,ClientB] in
    {7320}in(io, frontend_dom_1: domain);
    {7321}event Same(frontend_dom_1);
    {7322}in(io, backend_dom_1: domain);
    {7323}event Same(backend_dom_1);
    {7324}new s_161: seed;
    {7325}let id_client_5: idProc = idClientDiff(s_161) in
    {11841}get ech_configurations(ech_config(id_83: configId,g_44: group,pkR_13: element,=frontend_dom_1,h_alg_17: hash_alg,a_alg_15: aead_alg),skR_3: bitstring) in
    {7326}let ech_conf_2: echConfig = ech_config(id_83,g_44,pkR_13,frontend_dom_1,h_alg_17,a_alg_15) in
    {7327}event ConfigOffered(id_client_5,ech_conf_2);
    {7328}let @8_i_extra_ext: extraExt = empty_extra_ext in
    {7329}let @8_tls_h: hash_alg = id_hash(StrongHash,1) in
    {7330}let @8_tls_a: aead_alg = id_aead(StrongAE,1) in
    {7331}let @8_tls_g: group = id_g(StrongDH,1) in
    {7332}let @8_backend_h: hash_alg = id_hash(StrongHash,1) in
    {7333}let @8_backend_a: aead_alg = id_aead(StrongAE,1) in
    {7334}let @8_backend_g: group = id_g(StrongDH,1) in
    {7335}let @8_use_psk: bool = false in
    {7336}let @8_comp_psk: bool = false in
    {7337}in(io, @8_send_kex: bool);
    {7338}new @8_st[]: stamp;
    {7339}event PreciseInput(@8_st,@8_send_kex);
    {7340}let () = () in
    {7341}event Same(@8_send_kex);
    {7342}let @8_use_grease: bool = false in
    {7343}let send_kex_5: bool = (not(false) || @8_send_kex) in
    {7344}let ech_config(config_id_12: configId,ech_g_12: group,pkR_14: element,o_dom_8: domain,ech_h_12: hash_alg,ech_a_12: aead_alg) = ech_conf_2 in
    {7345}event ClientOffersEchConfig(id_client_5,ech_conf_2);
    {7346}let info_2: bitstring = (tls_ech_str,ech_conf_2) in
    {7347}new s_162[]: seed;
    {7348}let v_1603: bitstring = (dh_xy(s_162,pkR_14),dh_encap_fun(ech_g_12,pkR_14,dh_xy(s_162,pkR_14))) in
    {7349}let v_1604: bool = success?(1-proj-2-tuple(v_1603)) in
    {7350}let enc_5: element = (if v_1604 then 2-proj-2-tuple(v_1603) else caught-fail) in
    {7351}let shared_secret_2: element = (if v_1604 then 1-proj-2-tuple(v_1603) else caught-fail) in
    {7352}let r_4: hpkeRole = (if v_1604 then S else caught-fail) in
    {7353}let salt_2: bitstring = (if v_1604 then zero else caught-fail) in
    {7354}let label_9: label = (if v_1604 then hpke_info_hash else caught-fail) in
    {7355}let k_159: bitstring = (if v_1604 then (label_9,info_2) else caught-fail) in
    {7356}let info_hash_2: bitstring = (if v_1604 then catch-fail(hmac(ech_h_12,salt_2,k_159)) else caught-fail) in
    {7357}let v_1605: bool = not-caught-fail(info_hash_2) in
    {7358}let label_10: label = (if v_1605 then hpke_secret else caught-fail) in
    {7359}let ikm_2: bitstring = (if v_1605 then zero else caught-fail) in
    {7360}let k_160: bitstring = (if v_1605 then (label_10,ikm_2) else caught-fail) in
    {7361}let xsecret_2: bitstring = (if v_1605 then catch-fail(hmac(ech_h_12,shared_secret_2,k_160)) else caught-fail) in
    {7362}let v_1606: bool = not-caught-fail(xsecret_2) in
    {7363}let label_11: label = (if v_1606 then hpke_key else caught-fail) in
    {7364}let x_511: bitstring = (if v_1606 then (label_11,info_hash_2) else caught-fail) in
    {7365}let key_16: aead_key = (if v_1606 then catch-fail(hmac(ech_h_12,xsecret_2,x_511)) else caught-fail) in
    {7366}let v_1607: bool = not-caught-fail(key_16) in
    {7367}let label_12: label = (if v_1607 then hpke_base_nonce else caught-fail) in
    {7368}let x_512: bitstring = (if v_1607 then (label_12,info_hash_2) else caught-fail) in
    {7369}let base_nonce_16: bitstring = (if v_1607 then catch-fail(hmac(ech_h_12,xsecret_2,x_512)) else caught-fail) in
    {7370}let v_1608: bool = not-caught-fail(base_nonce_16) in
    {7371}let (enc_6: element,context_2: hpkeContext) = (if v_1604 then (enc_5,(if v_1605 then (if v_1606 then (if v_1607 then (if v_1608 then hpke_context(r_4,key_16,base_nonce_16) else fail-any) else fail-any) else fail-any) else fail-any)) else fail-any) in
    {7372}let ech_config(config_id_13: configId,ech_g_13: group,pkR_15: element,o_dom_9: domain,ech_h_13: hash_alg,ech_a_13: aead_alg) = ech_conf_2 in
    {7373}new s_163[]: seed;
    {7374}let gx_38: element = dh_pub(@8_backend_g,dh_k(s_163)) in
    {7375}let v_1609: bitstring = (dh_k(s_163),gx_38) in
    {7376}let v_1610: bool = success?(1-proj-2-tuple(v_1609)) in
    {7377}let gx_39: element = (if v_1610 then 2-proj-2-tuple(v_1609) else caught-fail) in
    {7378}let x_513: bitstring = (if v_1610 then 1-proj-2-tuple(v_1609) else caught-fail) in
    {7379}let kex_15: kex_alg = (if v_1610 then (if send_kex_5 then DHE_kex(@8_backend_g,gx_39) else DHE_group(@8_backend_g)) else caught-fail) in
    {7380}let (i_kex_ext_5: keyShareExt,i_kex_data_7: bitstring) = (if v_1610 then (client_kex_ext(kex_15),(x_513,@8_backend_g)) else fail-any) in
    {7381}new s_164[]: seed;
    {7382}let gx_40: element = dh_pub(@8_tls_g,dh_k(s_164)) in
    {7383}let v_1611: bitstring = (dh_k(s_164),gx_40) in
    {7384}let v_1612: bool = success?(1-proj-2-tuple(v_1611)) in
    {7385}let gx_41: element = (if v_1612 then 2-proj-2-tuple(v_1611) else caught-fail) in
    {7386}let x_514: bitstring = (if v_1612 then 1-proj-2-tuple(v_1611) else caught-fail) in
    {7387}let kex_16: kex_alg = (if v_1612 then (if send_kex_5 then DHE_kex(@8_tls_g,gx_41) else DHE_group(@8_tls_g)) else caught-fail) in
    {7388}let (o_kex_ext_7: keyShareExt,o_kex_data_7: bitstring) = (if v_1612 then (client_kex_ext(kex_16),(x_514,@8_tls_g)) else fail-any) in
    {7389}new rand24_16[]: bytes24;
    {7390}new rand8_16[]: bytes8;
    {7391}let i_cr_8: bytes32 = B32(rand24_16,rand8_16) in
    {7392}new rand24_17[]: bytes24;
    {7393}new rand8_17[]: bytes8;
    {7394}let o_cr_10: bytes32 = B32(rand24_17,rand8_17) in
    {7395}let v_1613: bool = @8_use_grease in
    {7396}new payload_17[]: bitstring;
    {7397}new configid_1[]: configId;
    {7398}new s_165[]: seed;
    {7399}let gx_42: element = (if v_1613 then dh_pub(ech_g_13,dh_k(s_165)) else caught-fail) in
    {7400}let v_1614: bitstring = (if v_1613 then catch-fail((dh_k(s_165),gx_42)) else caught-fail) in
    {7401}let v_1615: bool = (not-caught-fail(v_1614) && success?(1-proj-2-tuple(v_1614))) in
    {7402}let gx_grease_1: element = (if v_1615 then 2-proj-2-tuple(v_1614) else caught-fail) in
    {7403}let x_grease_1: bitstring = (if v_1615 then 1-proj-2-tuple(v_1614) else caught-fail) in
    {7404}new s_166[]: seed;
    {7405}let v_1616: bitstring = (if v_1615 then catch-fail((dh_xy(s_166,gx_grease_1),dh_encap_fun(ech_g_13,gx_grease_1,dh_xy(s_166,gx_grease_1)))) else caught-fail) in
    {7406}let v_1617: bool = (not-caught-fail(v_1616) && success?(1-proj-2-tuple(v_1616))) in
    {7407}let enc_grease_1: element = (if v_1617 then 2-proj-2-tuple(v_1616) else caught-fail) in
    {7408}let secret_grease_1: element = (if v_1617 then 1-proj-2-tuple(v_1616) else caught-fail) in
    {7409}let ech_inner_or_grease_1: echExt = (if v_1613 then (if v_1615 then (if v_1617 then ECHClientHelloOuter(ech_h_13,ech_a_13,configid_1,enc_grease_1,payload_17) else fail-any) else fail-any) else ECHClientHelloInner) in
    {7410}let (dom_psk_1: domain,cr_psk_1: bytes32,kex_ext_psk_1: keyShareExt,extra_psk_1: extraExt,h_psk_1: hash_alg,a_psk_1: aead_alg) = (if @8_use_grease then (o_dom_9,o_cr_10,o_kex_ext_7,empty_extra_ext,@8_tls_h,@8_tls_a) else (backend_dom_1,i_cr_8,i_kex_ext_5,@8_i_extra_ext,@8_backend_h,@8_backend_a)) in
    {7411}let old_psk_data_2: bitstring = zero in
    {7412}let cur_log_23: bitstring = zero in
    {7413}if @8_use_psk then
    (
        {7414}let (psk_183: preSharedKey,id_84: identityPsk,old_es_11: bitstring,is_safe_72: bool) = old_psk_data_2 in
        (
            {7415}let offer_36: params = nego(TLS13,h_psk_1,a_psk_1,kex_ext_psk_1,SNI(dom_psk_1),ech_inner_or_grease_1,extra_psk_1,trunc_client_psk_ext(id_84)) in
            {7416}let cur_log'_24: bitstring = (cur_log_23,CH(cr_psk_1,offer_36)) in
            {7417}let s_167: bitstring = zero in
            {7418}let k_161: bitstring = catch-fail(psk2b(psk_183)) in
            {7419}let v_1618: bool = not-caught-fail(k_161) in
            {7420}let early_secret_122: bitstring = catch-fail((if v_1618 then hmac(h_psk_1,s_167,k_161) else fail-any)) in
            {7421}let v_1619: bool = not-caught-fail(early_secret_122) in
            {7422}let l_453: label = (if v_1619 then tls13_ext_res_binder else caught-fail) in
            {7423}let m_161: bitstring = (if v_1619 then zero else caught-fail) in
            {7424}let h_436: bitstring = (if v_1619 then catch-fail(hash(h_psk_1,m_161)) else caught-fail) in
            {7425}let v_1620: bool = not-caught-fail(h_436) in
            {7426}let x_515: bitstring = (if v_1620 then (l_453,h_436) else caught-fail) in
            {7427}let binder_key_81: bitstring = (if v_1619 then catch-fail((if v_1620 then hmac(h_psk_1,early_secret_122,x_515) else fail-any)) else caught-fail) in
            {7428}let v_1621: bool = not-caught-fail(binder_key_81) in
            {7429}let v_1622: bitstring = catch-fail((if v_1619 then (if v_1621 then (early_secret_122,binder_key_81) else fail-any) else fail-any)) in
            {7430}let v_1623: bool = (not-caught-fail(v_1622) && success?(1-proj-2-tuple(v_1622))) in
            {7431}let kb_81: mac_key = (if v_1623 then 2-proj-2-tuple(v_1622) else caught-fail) in
            {7432}let es_122: bitstring = (if v_1623 then 1-proj-2-tuple(v_1622) else caught-fail) in
            {7433}let binders_23: bitstring = (if v_1623 then catch-fail(hmac(h_psk_1,kb_81,cur_log'_24)) else caught-fail) in
            {7434}let v_1624: bool = not-caught-fail(binders_23) in
            {7435}let v_1625: bitstring = catch-fail((if v_1623 then (if v_1624 then (client_psk_ext(id_84,binders_23),(psk_183,id_84,es_122,is_safe_72)) else fail-any) else fail-any)) in
            {7436}let v_1626: bool = (not-caught-fail(v_1625) && success?(1-proj-2-tuple(v_1625))) in
            {7437}let psk_data_42: bitstring = (if v_1626 then 2-proj-2-tuple(v_1625) else caught-fail) in
            {7438}let psk_ext_84: preSharedKeyExt = (if v_1626 then 1-proj-2-tuple(v_1625) else caught-fail) in
            {7439}let i_offer_12: params = (if v_1626 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_5,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_84) else caught-fail) in
            {7440}let i_client_hello_16: msg = (if v_1626 then CH(i_cr_8,i_offer_12) else caught-fail) in
            {7441}let v_1627: bool = (if v_1626 then catch-fail(@8_use_grease) else caught-fail) in
            {7442}let o_offer_27: params = (if v_1627 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),ech_inner_or_grease_1,empty_extra_ext,psk_ext_84) else caught-fail) in
            {7443}new fake_id_15[]: identityPsk;
            {7444}new fake_binder_15[]: bitstring;
            {7445}let o_psk_ext_15: preSharedKeyExt = (if is-false(v_1627) then (if @8_use_psk then client_psk_ext(fake_id_15,fake_binder_15) else empty_psk_ext) else caught-fail) in
            {7446}let o_ech_ext_ADD_12: echExt = (if is-false(v_1627) then ECHClientHelloOuter(ech_h_13,ech_a_13,config_id_13,enc_6,zero) else caught-fail) in
            {7447}let o_offer_ADD_12: params = (if is-false(v_1627) then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),o_ech_ext_ADD_12,empty_extra_ext,o_psk_ext_15) else caught-fail) in
            {7448}let o_client_hello_ADD_12: msg = (if is-false(v_1627) then CH(o_cr_10,o_offer_ADD_12) else caught-fail) in
            {7449}let n_14: nat = (if is-false(v_1627) then 1 else caught-fail) in
            {7450}let v_1628: hpkeContext = (if is-false(v_1627) then catch-fail(context_2) else caught-fail) in
            {7451}let v_1629: bool = (not-caught-fail(v_1628) && ((S =nf 1-proj-hpke_context(v_1628)) && success?(1-proj-hpke_context(v_1628)))) in
            {7452}let base_nonce_17: bitstring = (if v_1629 then 3-proj-hpke_context(v_1628) else caught-fail) in
            {7453}let key_17: aead_key = (if v_1629 then 2-proj-hpke_context(v_1628) else caught-fail) in
            {7454}let payload_18: bitstring = (if is-false(v_1627) then catch-fail((if v_1629 then aead_enc(ech_a_13,key_17,(base_nonce_17,n_14),o_client_hello_ADD_12,i_client_hello_16) else fail-any)) else caught-fail) in
            {7455}let v_1630: bool = not-caught-fail(payload_18) in
            {7456}let o_ech_ext_15: echExt = (if v_1630 then ECHClientHelloOuter(ech_h_13,ech_a_13,config_id_13,enc_6,payload_18) else caught-fail) in
            {7457}let o_offer_28: params = (if v_1630 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),o_ech_ext_15,empty_extra_ext,o_psk_ext_15) else caught-fail) in
            {7458}let (o_client_hello_5: msg,i_client_hello_17: msg,o_cr_11: bytes32,i_cr_9: bytes32,o_kex_data_8: bitstring,i_kex_data_8: bitstring,o_psk_ext_16: preSharedKeyExt,psk_data_43: bitstring,o_ech_ext_16: echExt) = (if v_1626 then (if undo-catch-fail(v_1627) then (CH(o_cr_10,o_offer_27),CH(o_cr_10,o_offer_27),o_cr_10,o_cr_10,o_kex_data_7,o_kex_data_7,psk_ext_84,psk_data_42,ech_inner_or_grease_1) else (if v_1630 then (CH(o_cr_10,o_offer_28),i_client_hello_16,o_cr_10,i_cr_8,o_kex_data_7,i_kex_data_7,o_psk_ext_15,psk_data_42,o_ech_ext_15) else fail-any)) else fail-any) in
            {7459}out(io, o_client_hello_5);
            {7460}let (psk_184: preSharedKey,id_85: identityPsk,es_123: bitstring,safe_3: bool) = psk_data_43 in
            (
                {7461}if (false && (not(@8_use_grease) && (psk_184 ≠ NoPsk))) then
                {7462}let client_hello_10: bitstring = (zero,i_client_hello_17) in
                {7463}let l_454: label = tls13_client_early_traffic_secret in
                {7464}let h_437: bitstring = catch-fail(hash(@8_backend_h,client_hello_10)) in
                {7465}let v_1631: bool = not-caught-fail(h_437) in
                {7466}let x_516: bitstring = (if v_1631 then (l_454,h_437) else caught-fail) in
                {7467}let atsc0_7: bitstring = catch-fail((if v_1631 then hmac(@8_backend_h,es_123,x_516) else fail-any)) in
                {7468}let v_1632: bool = not-caught-fail(atsc0_7) in
                {7469}let l_455: label = (if v_1632 then tls13_key else caught-fail) in
                {7470}let h_438: bitstring = (if v_1632 then zero else caught-fail) in
                {7471}let x_517: bitstring = (if v_1632 then (l_455,h_438) else caught-fail) in
                {7472}let kc0_7: bitstring = (if v_1632 then catch-fail(hmac(@8_backend_h,atsc0_7,x_517)) else caught-fail) in
                {7473}let v_1633: bool = not-caught-fail(kc0_7) in
                {7474}let l_456: label = (if v_1633 then tls13_early_exporter_master_secret else caught-fail) in
                {7475}let h_439: bitstring = (if v_1633 then catch-fail(hash(@8_backend_h,client_hello_10)) else caught-fail) in
                {7476}let v_1634: bool = not-caught-fail(h_439) in
                {7477}let x_518: bitstring = (if v_1634 then (l_456,h_439) else caught-fail) in
                {7478}let ems0_14: bitstring = (if v_1633 then catch-fail((if v_1634 then hmac(@8_backend_h,es_123,x_518) else fail-any)) else caught-fail) in
                {7479}let v_1635: bool = not-caught-fail(ems0_14) in
                {7480}let (wkc0_7: aead_key,ems0_15: bitstring) = (if v_1632 then (if v_1633 then (if v_1635 then (kc0_7,ems0_14) else fail-any) else fail-any) else fail-any) in
                {7481}!
                {7482}in(io, (i_7: nat,ad_7: bitstring));
                {7483}if is_nat(i_7) then
                {7484}new msg_ed_6[]: bitstring;
                {7485}let enc_ed_6: bitstring = aead_enc(@8_backend_a,wkc0_7,i_7,ad_7,msg_ed_6) in
                {7486}new st_16: stamp;
                {7487}event ClientSequenceClient0RTTDataWriteKey(id_client_5,st_16,i_7);
                {7488}event ClientSends0(id_client_5,i_cr_9,psk_184,i_7,ad_7,msg_ed_6);
                {7489}out(io, enc_ed_6)
            ) | (
                {7490}in(io, server_hello_7: msg);
                {7491}let SH(B32(sr24_5: bytes24,sr8_16: bytes8),mode_45: params) = server_hello_7 in
                (
                    {7492}if (false && (B32(sr24_5,sr8_16) = B32(HRR24,HRR8))) then
                    (
                        {7493}if (send_kex_5 ≠ true) then
                        {7494}let nego(=TLS13,h_alg_18: hash_alg,a_alg_16: aead_alg,hrr_kex_ext(g_45: group),=empty_sni_ext,ech_ext_19: echExt,=empty_extra_ext,=empty_psk_ext) = mode_45 in
                        {7495}let v_1636: bool = (ech_ext_19 = empty_ech_ext) in
                        {7496}let hrr_mode_8: params = (if not(v_1636) then nego(TLS13,@8_backend_h,@8_backend_a,hrr_kex_ext(@8_backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) else caught-fail) in
                        {7497}let hrr_4: msg = (if not(v_1636) then SH(B32(HRR24,HRR8),hrr_mode_8) else caught-fail) in
                        {7498}let cur_log_24: bitstring = (if not(v_1636) then ((zero,i_client_hello_17),hrr_4) else caught-fail) in
                        {7499}let transcript_hrr_ech_conf_4: bitstring = (if not(v_1636) then catch-fail(hash(@8_backend_h,cur_log_24)) else caught-fail) in
                        {7500}let v_1637: bool = not-caught-fail(transcript_hrr_ech_conf_4) in
                        {7501}let s_168: bitstring = (if v_1637 then zero else caught-fail) in
                        {7502}let k_162: bitstring = (if v_1637 then catch-fail(b32_2_b(get_random(i_client_hello_17))) else caught-fail) in
                        {7503}let v_1638: bool = not-caught-fail(k_162) in
                        {7504}let k_163: bitstring = (if v_1637 then catch-fail((if v_1638 then hmac(@8_backend_h,s_168,k_162) else fail-any)) else caught-fail) in
                        {7505}let v_1639: bool = not-caught-fail(k_163) in
                        {7506}let l_457: label = (if v_1639 then hrr_ech_accept_confirmation else caught-fail) in
                        {7507}let x_519: bitstring = (if v_1639 then (l_457,cur_log_24) else caught-fail) in
                        {7508}let is_ech_accepted_3: bool = (if v_1636 then false else (if (ech_ext_19 = ECHHelloRetryRequest((if v_1637 then crop_into_bytes8((if v_1639 then hmac(@8_backend_h,k_163,x_519) else fail-any)) else fail-any))) then true else false)) in
                        {7509}event ClientEchAcceptance(id_client_5,is_ech_accepted_3);
                        {7510}if is_ech_accepted_3 then
                        (
                            {7511}let cur_log_IN1_HRR_3: bitstring = ((zero,i_client_hello_17),server_hello_7) in
                            {7512}let ech_config(config_id_14: configId,ech_g_14: group,pkR_16: element,o_dom_10: domain,ech_h_14: hash_alg,ech_a_14: aead_alg) = ech_conf_2 in
                            {7513}let send_key_share_9: bool = true in
                            {7514}new s_169[]: seed;
                            {7515}let gx_43: element = dh_pub(@8_backend_g,dh_k(s_169)) in
                            {7516}let v_1640: bitstring = (dh_k(s_169),gx_43) in
                            {7517}let v_1641: bool = success?(1-proj-2-tuple(v_1640)) in
                            {7518}let gx_44: element = (if v_1641 then 2-proj-2-tuple(v_1640) else caught-fail) in
                            {7519}let x_520: bitstring = (if v_1641 then 1-proj-2-tuple(v_1640) else caught-fail) in
                            {7520}let kex_17: kex_alg = (if v_1641 then (if send_key_share_9 then DHE_kex(@8_backend_g,gx_44) else DHE_group(@8_backend_g)) else caught-fail) in
                            {7521}let (i_kex_ext_6: keyShareExt,i_kex_data_9: bitstring) = (if v_1641 then (client_kex_ext(kex_17),(x_520,@8_backend_g)) else fail-any) in
                            {7522}let send_key_share_10: bool = true in
                            {7523}new s_170[]: seed;
                            {7524}let gx_45: element = dh_pub(@8_tls_g,dh_k(s_170)) in
                            {7525}let v_1642: bitstring = (dh_k(s_170),gx_45) in
                            {7526}let v_1643: bool = success?(1-proj-2-tuple(v_1642)) in
                            {7527}let gx_46: element = (if v_1643 then 2-proj-2-tuple(v_1642) else caught-fail) in
                            {7528}let x_521: bitstring = (if v_1643 then 1-proj-2-tuple(v_1642) else caught-fail) in
                            {7529}let kex_18: kex_alg = (if v_1643 then (if send_key_share_10 then DHE_kex(@8_tls_g,gx_46) else DHE_group(@8_tls_g)) else caught-fail) in
                            {7530}let (o_kex_ext_8: keyShareExt,o_kex_data_9: bitstring) = (if v_1643 then (client_kex_ext(kex_18),(x_521,@8_tls_g)) else fail-any) in
                            {7531}new rand24_18[]: bytes24;
                            {7532}new rand8_18[]: bytes8;
                            {7533}let i_cr_10: bytes32 = B32(rand24_18,rand8_18) in
                            {7534}new rand24_19[]: bytes24;
                            {7535}new rand8_19[]: bytes8;
                            {7536}let o_cr_12: bytes32 = B32(rand24_19,rand8_19) in
                            {7537}let ech_ext_20: echExt = ECHClientHelloInner in
                            {7538}if @8_use_psk then
                            (
                                {7539}let (psk_185: preSharedKey,id_86: identityPsk,old_es_12: bitstring,is_safe_73: bool) = psk_data_43 in
                                (
                                    {7540}let offer_37: params = nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_6,SNI(backend_dom_1),ech_ext_20,@8_i_extra_ext,trunc_client_psk_ext(id_86)) in
                                    {7541}let cur_log'_25: bitstring = (cur_log_IN1_HRR_3,CH(i_cr_10,offer_37)) in
                                    {7542}let s_171: bitstring = zero in
                                    {7543}let k_164: bitstring = catch-fail(psk2b(psk_185)) in
                                    {7544}let v_1644: bool = not-caught-fail(k_164) in
                                    {7545}let early_secret_123: bitstring = catch-fail((if v_1644 then hmac(@8_backend_h,s_171,k_164) else fail-any)) in
                                    {7546}let v_1645: bool = not-caught-fail(early_secret_123) in
                                    {7547}let l_458: label = (if v_1645 then tls13_ext_res_binder else caught-fail) in
                                    {7548}let m_162: bitstring = (if v_1645 then zero else caught-fail) in
                                    {7549}let h_440: bitstring = (if v_1645 then catch-fail(hash(@8_backend_h,m_162)) else caught-fail) in
                                    {7550}let v_1646: bool = not-caught-fail(h_440) in
                                    {7551}let x_522: bitstring = (if v_1646 then (l_458,h_440) else caught-fail) in
                                    {7552}let binder_key_82: bitstring = (if v_1645 then catch-fail((if v_1646 then hmac(@8_backend_h,early_secret_123,x_522) else fail-any)) else caught-fail) in
                                    {7553}let v_1647: bool = not-caught-fail(binder_key_82) in
                                    {7554}let v_1648: bitstring = catch-fail((if v_1645 then (if v_1647 then (early_secret_123,binder_key_82) else fail-any) else fail-any)) in
                                    {7555}let v_1649: bool = (not-caught-fail(v_1648) && success?(1-proj-2-tuple(v_1648))) in
                                    {7556}let kb_82: mac_key = (if v_1649 then 2-proj-2-tuple(v_1648) else caught-fail) in
                                    {7557}let es_124: bitstring = (if v_1649 then 1-proj-2-tuple(v_1648) else caught-fail) in
                                    {7558}let binders_24: bitstring = (if v_1649 then catch-fail(hmac(@8_backend_h,kb_82,cur_log'_25)) else caught-fail) in
                                    {7559}let v_1650: bool = not-caught-fail(binders_24) in
                                    {7560}let v_1651: bitstring = catch-fail((if v_1649 then (if v_1650 then (client_psk_ext(id_86,binders_24),(psk_185,id_86,es_124,is_safe_73)) else fail-any) else fail-any)) in
                                    {7561}let v_1652: bool = (not-caught-fail(v_1651) && success?(1-proj-2-tuple(v_1651))) in
                                    {7562}let psk_data_44: bitstring = (if v_1652 then 2-proj-2-tuple(v_1651) else caught-fail) in
                                    {7563}let psk_ext_85: preSharedKeyExt = (if v_1652 then 1-proj-2-tuple(v_1651) else caught-fail) in
                                    {7564}let i_offer_13: params = (if v_1652 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_6,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_85) else caught-fail) in
                                    {7565}let i_client_hello_18: msg = (if v_1652 then CH(i_cr_10,i_offer_13) else caught-fail) in
                                    {7566}new fake_id_16[]: identityPsk;
                                    {7567}new fake_binder_16[]: bitstring;
                                    {7568}let o_psk_ext_17: preSharedKeyExt = (if v_1652 then (if @8_use_psk then client_psk_ext(fake_id_16,fake_binder_16) else empty_psk_ext) else caught-fail) in
                                    {7569}let o_ech_ext_ADD_13: echExt = (if v_1652 then ECHClientHelloOuter(ech_h_14,ech_a_14,config_id_14,zero,zero) else caught-fail) in
                                    {7570}let o_offer_ADD_13: params = (if v_1652 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_8,SNI(o_dom_10),o_ech_ext_ADD_13,empty_extra_ext,o_psk_ext_17) else caught-fail) in
                                    {7571}let o_client_hello_ADD_13: msg = (if v_1652 then CH(o_cr_12,o_offer_ADD_13) else caught-fail) in
                                    {7572}let n_15: nat = (if v_1652 then 2 else caught-fail) in
                                    {7573}let v_1653: hpkeContext = (if v_1652 then catch-fail(context_2) else caught-fail) in
                                    {7574}let v_1654: bool = (not-caught-fail(v_1653) && ((S =nf 1-proj-hpke_context(v_1653)) && success?(1-proj-hpke_context(v_1653)))) in
                                    {7575}let base_nonce_18: bitstring = (if v_1654 then 3-proj-hpke_context(v_1653) else caught-fail) in
                                    {7576}let key_18: aead_key = (if v_1654 then 2-proj-hpke_context(v_1653) else caught-fail) in
                                    {7577}let payload_19: bitstring = (if v_1652 then catch-fail((if v_1654 then aead_enc(ech_a_14,key_18,(base_nonce_18,n_15),o_client_hello_ADD_13,i_client_hello_18) else fail-any)) else caught-fail) in
                                    {7578}let v_1655: bool = not-caught-fail(payload_19) in
                                    {7579}let o_ech_ext_17: echExt = (if v_1655 then ECHClientHelloOuter(ech_h_14,ech_a_14,config_id_14,zero,payload_19) else caught-fail) in
                                    {7580}let o_offer_29: params = (if v_1655 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_8,SNI(o_dom_10),o_ech_ext_17,empty_extra_ext,o_psk_ext_17) else caught-fail) in
                                    {7581}let (o_client_hello'_9: msg,i_client_hello'_10: msg,i_cr'_9: bytes32,i_kex_data'_9: bitstring,psk_data'_33: bitstring) = (if v_1652 then (if v_1655 then (CH(o_cr_12,o_offer_29),i_client_hello_18,i_cr_10,i_kex_data_9,psk_data_44) else fail-any) else fail-any) in
                                    {7582}out(io, o_client_hello'_9);
                                    {7583}in(io, server_hello'_30: msg);
                                    {7584}let SH(B32(sr24'_9: bytes24,sr8'_9: bytes8),params'_9: params) = server_hello'_30 in
                                    {7585}let cur_log_IN1_HRR_IN2_9: bitstring = (cur_log_IN1_HRR_3,i_client_hello'_10) in
                                    {7586}let sh_modified_13: msg = SH(B32(sr24'_9,zero8),params'_9) in
                                    {7587}let cur_log_sh_13: bitstring = (cur_log_IN1_HRR_IN2_9,sh_modified_13) in
                                    {7588}let transcript_ech_conf_13: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_13)) in
                                    {7589}let v_1656: bool = not-caught-fail(transcript_ech_conf_13) in
                                    {7590}let s_172: bitstring = (if v_1656 then zero else caught-fail) in
                                    {7591}let k_165: bitstring = (if v_1656 then catch-fail(b32_2_b(get_random(i_client_hello'_10))) else caught-fail) in
                                    {7592}let v_1657: bool = not-caught-fail(k_165) in
                                    {7593}let k_166: bitstring = (if v_1656 then catch-fail((if v_1657 then hmac(@8_backend_h,s_172,k_165) else fail-any)) else caught-fail) in
                                    {7594}let v_1658: bool = not-caught-fail(k_166) in
                                    {7595}let l_459: label = (if v_1658 then ech_accept_confirmation else caught-fail) in
                                    {7596}let x_523: bitstring = (if v_1658 then (l_459,cur_log_sh_13) else caught-fail) in
                                    {7597}let sr8_17: bytes8 = (if v_1656 then catch-fail(crop_into_bytes8((if v_1658 then hmac(@8_backend_h,k_166,x_523) else fail-any))) else caught-fail) in
                                    {7598}let v_1659: bool = not-caught-fail(sr8_17) in
                                    {7599}if (B32(sr24'_9,sr8'_9) = (if v_1656 then (if v_1659 then B32(sr24'_9,sr8_17) else fail-any) else fail-any)) then
                                    {7600}let (x_524: bitstring,g_46: group) = i_kex_data'_9 in
                                    {7601}let (psk_offer_39: preSharedKey,id_offer_39: identityPsk,es_offer_39: bitstring,is_safe_offer_39: bool) = psk_data'_33 in
                                    {7602}event Client_PSKOffer(id_client_5,psk_offer_39,id_offer_39,is_safe_offer_39);
                                    {7603}event Client_Rand_client(id_client_5,i_cr'_9);
                                    {7604}event Client_DH_client(id_client_5,dh_pub(g_46,x_524));
                                    {7605}event Client_server_domain(id_client_5,backend_dom_1);
                                    {7606}let SH(sr_50: bytes32,mode_46: params) = server_hello'_30 in
                                    {7607}event Client_Rand_server(id_client_5,sr_50);
                                    {7608}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_46,gy_40: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_86: preSharedKeyExt) = mode_46 in
                                    (
                                        {7609}let cur_log2_85: bitstring = (cur_log_IN1_HRR_IN2_9,server_hello'_30) in
                                        {7610}event Client_DH_server(id_client_5,gy_40);
                                        {7611}let v_1660: bool = (psk_ext_86 = empty_psk_ext) in
                                        {7612}let psk_186: preSharedKey = (if v_1660 then NoPsk else caught-fail) in
                                        {7613}let s_173: bitstring = (if v_1660 then zero else caught-fail) in
                                        {7614}let k_167: bitstring = (if v_1660 then catch-fail(psk2b(psk_186)) else caught-fail) in
                                        {7615}let v_1661: bool = not-caught-fail(k_167) in
                                        {7616}let early_secret_124: bitstring = (if v_1660 then catch-fail((if v_1661 then hmac(@8_backend_h,s_173,k_167) else fail-any)) else caught-fail) in
                                        {7617}let v_1662: bool = not-caught-fail(early_secret_124) in
                                        {7618}let l_460: label = (if v_1662 then tls13_ext_res_binder else caught-fail) in
                                        {7619}let m_163: bitstring = (if v_1662 then zero else caught-fail) in
                                        {7620}let h_441: bitstring = (if v_1662 then catch-fail(hash(@8_backend_h,m_163)) else caught-fail) in
                                        {7621}let v_1663: bool = not-caught-fail(h_441) in
                                        {7622}let x_525: bitstring = (if v_1663 then (l_460,h_441) else caught-fail) in
                                        {7623}let binder_key_83: bitstring = (if v_1662 then catch-fail((if v_1663 then hmac(@8_backend_h,early_secret_124,x_525) else fail-any)) else caught-fail) in
                                        {7624}let v_1664: bool = not-caught-fail(binder_key_83) in
                                        {7625}let v_1665: bitstring = (if v_1660 then catch-fail((if v_1662 then (if v_1664 then (early_secret_124,binder_key_83) else fail-any) else fail-any)) else caught-fail) in
                                        {7626}let v_1666: bool = (not-caught-fail(v_1665) && success?(1-proj-2-tuple(v_1665))) in
                                        {7627}let kb_83: mac_key = (if v_1666 then 2-proj-2-tuple(v_1665) else caught-fail) in
                                        {7628}let es_125: bitstring = (if v_1666 then 1-proj-2-tuple(v_1665) else caught-fail) in
                                        {7629}let v_1667: bitstring = (if not(v_1660) then catch-fail(psk_data'_33) else caught-fail) in
                                        {7630}let v_1668: bool = (not-caught-fail(v_1667) && success?(1-proj-4-tuple(v_1667))) in
                                        {7631}let is_safe_74: bool = (if v_1668 then 4-proj-4-tuple(v_1667) else caught-fail) in
                                        {7632}let es_126: bitstring = (if v_1668 then 3-proj-4-tuple(v_1667) else caught-fail) in
                                        {7633}let id_87: identityPsk = (if v_1668 then 2-proj-4-tuple(v_1667) else caught-fail) in
                                        {7634}let psk_187: preSharedKey = (if v_1668 then 1-proj-4-tuple(v_1667) else caught-fail) in
                                        {7635}let (psk_188: preSharedKey,early_secret_125: bitstring,valid_39: bool,safe_psk_45: bool) = (if v_1660 then (if v_1666 then (NoPsk,es_125,true,false) else fail-any) else (if v_1668 then (psk_187,es_126,((psk_187 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_86)),is_safe_74) else fail-any)) in
                                        {7636}event Client_PSKChoosen(id_client_5,psk_188,safe_psk_45);
                                        {7637}if valid_39 then
                                        (
                                            {7638}let gxy_80: element = catch-fail(dh_decap_fun(g_46,gy_40,x_524)) in
                                            {7639}let v_1669: bool = not-caught-fail(gxy_80) in
                                            {7640}new s_174[]: seed;
                                            {7641}let gxy_81: element = (if v_1669 then gxy_80 else dh_f(s_174)) in
                                            {7642}event Client_DH_gxy(id_client_5,gxy_81);
                                            {7643}let l_461: label = tls13_derived in
                                            {7644}let m_164: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {7645}let v_1670: bool = not-caught-fail(m_164) in
                                            {7646}let h_442: bitstring = (if v_1670 then catch-fail(hash(@8_backend_h,m_164)) else caught-fail) in
                                            {7647}let v_1671: bool = not-caught-fail(h_442) in
                                            {7648}let x_526: bitstring = (if v_1671 then (l_461,h_442) else caught-fail) in
                                            {7649}let extra_87: bitstring = catch-fail((if v_1670 then (if v_1671 then hmac(@8_backend_h,early_secret_125,x_526) else fail-any) else fail-any)) in
                                            {7650}let v_1672: bool = not-caught-fail(extra_87) in
                                            {7651}let handshake_secret_40: bitstring = (if v_1672 then hmac(@8_backend_h,extra_87,gxy_81) else fail-any) in
                                            {7652}let l_462: label = tls13_derived in
                                            {7653}let m_165: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {7654}let v_1673: bool = not-caught-fail(m_165) in
                                            {7655}let h_443: bitstring = (if v_1673 then catch-fail(hash(@8_backend_h,m_165)) else caught-fail) in
                                            {7656}let v_1674: bool = not-caught-fail(h_443) in
                                            {7657}let x_527: bitstring = (if v_1674 then (l_462,h_443) else caught-fail) in
                                            {7658}let extra_88: bitstring = catch-fail((if v_1673 then (if v_1674 then hmac(@8_backend_h,handshake_secret_40,x_527) else fail-any) else fail-any)) in
                                            {7659}let v_1675: bool = not-caught-fail(extra_88) in
                                            {7660}let k_168: bitstring = (if v_1675 then zero else caught-fail) in
                                            {7661}let master_secret_87: bitstring = (if v_1675 then catch-fail(hmac(@8_backend_h,handshake_secret_40,k_168)) else caught-fail) in
                                            {7662}let v_1676: bool = not-caught-fail(master_secret_87) in
                                            {7663}let l_463: label = (if v_1676 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {7664}let h_444: bitstring = (if v_1676 then catch-fail(hash(@8_backend_h,cur_log2_85)) else caught-fail) in
                                            {7665}let v_1677: bool = not-caught-fail(h_444) in
                                            {7666}let x_528: bitstring = (if v_1677 then (l_463,h_444) else caught-fail) in
                                            {7667}let client_hts_40: bitstring = (if v_1676 then catch-fail((if v_1677 then hmac(@8_backend_h,handshake_secret_40,x_528) else fail-any)) else caught-fail) in
                                            {7668}let v_1678: bool = not-caught-fail(client_hts_40) in
                                            {7669}let l_464: label = (if v_1678 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {7670}let h_445: bitstring = (if v_1678 then catch-fail(hash(@8_backend_h,cur_log2_85)) else caught-fail) in
                                            {7671}let v_1679: bool = not-caught-fail(h_445) in
                                            {7672}let x_529: bitstring = (if v_1679 then (l_464,h_445) else caught-fail) in
                                            {7673}let server_hts_40: bitstring = (if v_1678 then catch-fail((if v_1679 then hmac(@8_backend_h,handshake_secret_40,x_529) else fail-any)) else caught-fail) in
                                            {7674}let v_1680: bool = not-caught-fail(server_hts_40) in
                                            {7675}let l_465: label = (if v_1680 then tls13_key else caught-fail) in
                                            {7676}let h_446: bitstring = (if v_1680 then zero else caught-fail) in
                                            {7677}let x_530: bitstring = (if v_1680 then (l_465,h_446) else caught-fail) in
                                            {7678}let client_wkh_40: bitstring = (if v_1680 then catch-fail(hmac(@8_backend_h,client_hts_40,x_530)) else caught-fail) in
                                            {7679}let v_1681: bool = not-caught-fail(client_wkh_40) in
                                            {7680}let l_466: label = (if v_1681 then tls13_key else caught-fail) in
                                            {7681}let h_447: bitstring = (if v_1681 then zero else caught-fail) in
                                            {7682}let x_531: bitstring = (if v_1681 then (l_466,h_447) else caught-fail) in
                                            {7683}let server_wkh_40: bitstring = (if v_1681 then catch-fail(hmac(@8_backend_h,server_hts_40,x_531)) else caught-fail) in
                                            {7684}let v_1682: bool = not-caught-fail(server_wkh_40) in
                                            {7685}let l_467: label = (if v_1682 then tls13_finished else caught-fail) in
                                            {7686}let h_448: bitstring = (if v_1682 then zero else caught-fail) in
                                            {7687}let x_532: bitstring = (if v_1682 then (l_467,h_448) else caught-fail) in
                                            {7688}let client_fk_40: bitstring = (if v_1682 then catch-fail(hmac(@8_backend_h,client_hts_40,x_532)) else caught-fail) in
                                            {7689}let v_1683: bool = not-caught-fail(client_fk_40) in
                                            {7690}let l_468: label = (if v_1683 then tls13_finished else caught-fail) in
                                            {7691}let h_449: bitstring = (if v_1683 then zero else caught-fail) in
                                            {7692}let x_533: bitstring = (if v_1683 then (l_468,h_449) else caught-fail) in
                                            {7693}let server_fk_40: bitstring = (if v_1683 then catch-fail(hmac(@8_backend_h,server_hts_40,x_533)) else caught-fail) in
                                            {7694}let v_1684: bool = not-caught-fail(server_fk_40) in
                                            {7695}let (master_secret_88: bitstring,chk_47: aead_key,shk_46: aead_key,cfin_47: mac_key,sfin_46: mac_key) = (if v_1675 then (if v_1676 then (if v_1678 then (if v_1680 then (if v_1681 then (if v_1682 then (if v_1683 then (if v_1684 then (master_secret_87,client_wkh_40,server_wkh_40,client_fk_40,server_fk_40) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {7696}event Client_chk(id_client_5,chk_47);
                                            {7697}event Client_shk(id_client_5,shk_46);
                                            {7698}event Client_cfin(id_client_5,cfin_47);
                                            {7699}event Client_sfin(id_client_5,sfin_46);
                                            {7700}in(io, enc_ee_msg_39: bitstring);
                                            {7701}let ee_msg_44: msg = aead_dec(@8_backend_a,shk_46,0,zero,enc_ee_msg_39) in
                                            {7702}let EE(ech_ee_39: echExt,extra_ee_39: extraExt) = ee_msg_44 in
                                            {7703}let cur_log2_86: bitstring = (cur_log2_85,ee_msg_44) in
                                            {7704}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_9,sr_50,@8_backend_h,@8_backend_a,c_dom_7,backend_dom_1,psk_188,safe_psk_45,@8_comp_psk,master_secret_88,chk_47,0,shk_46,1,cfin_47,sfin_46,cur_log2_86)))
                                        )
                                        else
                                            {7705}out(io, illegal_parameter)
                                    )
                                    else
                                        {7706}out(io, illegal_parameter)
                                )
                                else
                                    {7883}get pre_shared_keys(c_dom'_13: domain,=backend_dom_1,=@8_backend_h,id_88: identityPsk,psk_189: preSharedKey,idP_15: idProc,is_safe_75: bool) in
                                    {7707}event Selected_one_time_used_psk(id_client_5,psk_189,is_safe_75);
                                    {7708}event Selected_psk(c_dom_7,c_dom'_13,idP_15,is_safe_75);
                                    {7709}event Selected_psk_no_missmatch(id_client_5,backend_dom_1,@8_backend_h,psk_189,id_88);
                                    {7710}event Selected_psk_with_ID(c_dom_7,c_dom'_13,id_88,idP_15,is_safe_75);
                                    {7711}let v_1685: bitstring = (id_88,psk_189,is_safe_75) in
                                    {7712}let v_1686: bool = success?(1-proj-3-tuple(v_1685)) in
                                    {7713}let is_safe_76: bool = (if v_1686 then 3-proj-3-tuple(v_1685) else caught-fail) in
                                    {7714}let psk_190: preSharedKey = (if v_1686 then 2-proj-3-tuple(v_1685) else caught-fail) in
                                    {7715}let id_89: identityPsk = (if v_1686 then 1-proj-3-tuple(v_1685) else caught-fail) in
                                    {7716}let offer_38: params = (if v_1686 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_6,SNI(backend_dom_1),ech_ext_20,@8_i_extra_ext,trunc_client_psk_ext(id_89)) else caught-fail) in
                                    {7717}let cur_log'_26: bitstring = (if v_1686 then (cur_log_IN1_HRR_3,CH(i_cr_10,offer_38)) else caught-fail) in
                                    {7718}let s_175: bitstring = (if v_1686 then zero else caught-fail) in
                                    {7719}let k_169: bitstring = (if v_1686 then catch-fail(psk2b(psk_190)) else caught-fail) in
                                    {7720}let v_1687: bool = not-caught-fail(k_169) in
                                    {7721}let early_secret_126: bitstring = (if v_1686 then catch-fail((if v_1687 then hmac(@8_backend_h,s_175,k_169) else fail-any)) else caught-fail) in
                                    {7722}let v_1688: bool = not-caught-fail(early_secret_126) in
                                    {7723}let l_469: label = (if v_1688 then tls13_ext_res_binder else caught-fail) in
                                    {7724}let m_166: bitstring = (if v_1688 then zero else caught-fail) in
                                    {7725}let h_450: bitstring = (if v_1688 then catch-fail(hash(@8_backend_h,m_166)) else caught-fail) in
                                    {7726}let v_1689: bool = not-caught-fail(h_450) in
                                    {7727}let x_534: bitstring = (if v_1689 then (l_469,h_450) else caught-fail) in
                                    {7728}let binder_key_84: bitstring = (if v_1688 then catch-fail((if v_1689 then hmac(@8_backend_h,early_secret_126,x_534) else fail-any)) else caught-fail) in
                                    {7729}let v_1690: bool = not-caught-fail(binder_key_84) in
                                    {7730}let v_1691: bitstring = (if v_1686 then catch-fail((if v_1688 then (if v_1690 then (early_secret_126,binder_key_84) else fail-any) else fail-any)) else caught-fail) in
                                    {7731}let v_1692: bool = (not-caught-fail(v_1691) && success?(1-proj-2-tuple(v_1691))) in
                                    {7732}let kb_84: mac_key = (if v_1692 then 2-proj-2-tuple(v_1691) else caught-fail) in
                                    {7733}let es_127: bitstring = (if v_1692 then 1-proj-2-tuple(v_1691) else caught-fail) in
                                    {7734}let binders_25: bitstring = (if v_1692 then catch-fail(hmac(@8_backend_h,kb_84,cur_log'_26)) else caught-fail) in
                                    {7735}let v_1693: bool = not-caught-fail(binders_25) in
                                    {7736}let v_1694: bitstring = catch-fail((if v_1686 then (if v_1692 then (if v_1693 then (client_psk_ext(id_89,binders_25),(psk_190,id_89,es_127,is_safe_76)) else fail-any) else fail-any) else fail-any)) in
                                    {7737}let v_1695: bool = (not-caught-fail(v_1694) && success?(1-proj-2-tuple(v_1694))) in
                                    {7738}let psk_data_45: bitstring = (if v_1695 then 2-proj-2-tuple(v_1694) else caught-fail) in
                                    {7739}let psk_ext_87: preSharedKeyExt = (if v_1695 then 1-proj-2-tuple(v_1694) else caught-fail) in
                                    {7740}let i_offer_14: params = (if v_1695 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_6,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_87) else caught-fail) in
                                    {7741}let i_client_hello_19: msg = (if v_1695 then CH(i_cr_10,i_offer_14) else caught-fail) in
                                    {7742}new fake_id_17[]: identityPsk;
                                    {7743}new fake_binder_17[]: bitstring;
                                    {7744}let o_psk_ext_18: preSharedKeyExt = (if v_1695 then (if @8_use_psk then client_psk_ext(fake_id_17,fake_binder_17) else empty_psk_ext) else caught-fail) in
                                    {7745}let o_ech_ext_ADD_14: echExt = (if v_1695 then ECHClientHelloOuter(ech_h_14,ech_a_14,config_id_14,zero,zero) else caught-fail) in
                                    {7746}let o_offer_ADD_14: params = (if v_1695 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_8,SNI(o_dom_10),o_ech_ext_ADD_14,empty_extra_ext,o_psk_ext_18) else caught-fail) in
                                    {7747}let o_client_hello_ADD_14: msg = (if v_1695 then CH(o_cr_12,o_offer_ADD_14) else caught-fail) in
                                    {7748}let n_16: nat = (if v_1695 then 2 else caught-fail) in
                                    {7749}let v_1696: hpkeContext = (if v_1695 then catch-fail(context_2) else caught-fail) in
                                    {7750}let v_1697: bool = (not-caught-fail(v_1696) && ((S =nf 1-proj-hpke_context(v_1696)) && success?(1-proj-hpke_context(v_1696)))) in
                                    {7751}let base_nonce_19: bitstring = (if v_1697 then 3-proj-hpke_context(v_1696) else caught-fail) in
                                    {7752}let key_19: aead_key = (if v_1697 then 2-proj-hpke_context(v_1696) else caught-fail) in
                                    {7753}let payload_20: bitstring = (if v_1695 then catch-fail((if v_1697 then aead_enc(ech_a_14,key_19,(base_nonce_19,n_16),o_client_hello_ADD_14,i_client_hello_19) else fail-any)) else caught-fail) in
                                    {7754}let v_1698: bool = not-caught-fail(payload_20) in
                                    {7755}let o_ech_ext_18: echExt = (if v_1698 then ECHClientHelloOuter(ech_h_14,ech_a_14,config_id_14,zero,payload_20) else caught-fail) in
                                    {7756}let o_offer_30: params = (if v_1698 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_8,SNI(o_dom_10),o_ech_ext_18,empty_extra_ext,o_psk_ext_18) else caught-fail) in
                                    {7757}let (o_client_hello'_10: msg,i_client_hello'_11: msg,i_cr'_10: bytes32,i_kex_data'_10: bitstring,psk_data'_34: bitstring) = (if v_1695 then (if v_1698 then (CH(o_cr_12,o_offer_30),i_client_hello_19,i_cr_10,i_kex_data_9,psk_data_45) else fail-any) else fail-any) in
                                    {7758}out(io, o_client_hello'_10);
                                    {7759}in(io, server_hello'_31: msg);
                                    {7760}let SH(B32(sr24'_10: bytes24,sr8'_10: bytes8),params'_10: params) = server_hello'_31 in
                                    {7761}let cur_log_IN1_HRR_IN2_10: bitstring = (cur_log_IN1_HRR_3,i_client_hello'_11) in
                                    {7762}let sh_modified_14: msg = SH(B32(sr24'_10,zero8),params'_10) in
                                    {7763}let cur_log_sh_14: bitstring = (cur_log_IN1_HRR_IN2_10,sh_modified_14) in
                                    {7764}let transcript_ech_conf_14: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_14)) in
                                    {7765}let v_1699: bool = not-caught-fail(transcript_ech_conf_14) in
                                    {7766}let s_176: bitstring = (if v_1699 then zero else caught-fail) in
                                    {7767}let k_170: bitstring = (if v_1699 then catch-fail(b32_2_b(get_random(i_client_hello'_11))) else caught-fail) in
                                    {7768}let v_1700: bool = not-caught-fail(k_170) in
                                    {7769}let k_171: bitstring = (if v_1699 then catch-fail((if v_1700 then hmac(@8_backend_h,s_176,k_170) else fail-any)) else caught-fail) in
                                    {7770}let v_1701: bool = not-caught-fail(k_171) in
                                    {7771}let l_470: label = (if v_1701 then ech_accept_confirmation else caught-fail) in
                                    {7772}let x_535: bitstring = (if v_1701 then (l_470,cur_log_sh_14) else caught-fail) in
                                    {7773}let sr8_18: bytes8 = (if v_1699 then catch-fail(crop_into_bytes8((if v_1701 then hmac(@8_backend_h,k_171,x_535) else fail-any))) else caught-fail) in
                                    {7774}let v_1702: bool = not-caught-fail(sr8_18) in
                                    {7775}if (B32(sr24'_10,sr8'_10) = (if v_1699 then (if v_1702 then B32(sr24'_10,sr8_18) else fail-any) else fail-any)) then
                                    {7776}let (x_536: bitstring,g_47: group) = i_kex_data'_10 in
                                    {7777}let (psk_offer_40: preSharedKey,id_offer_40: identityPsk,es_offer_40: bitstring,is_safe_offer_40: bool) = psk_data'_34 in
                                    {7778}event Client_PSKOffer(id_client_5,psk_offer_40,id_offer_40,is_safe_offer_40);
                                    {7779}event Client_Rand_client(id_client_5,i_cr'_10);
                                    {7780}event Client_DH_client(id_client_5,dh_pub(g_47,x_536));
                                    {7781}event Client_server_domain(id_client_5,backend_dom_1);
                                    {7782}let SH(sr_51: bytes32,mode_47: params) = server_hello'_31 in
                                    {7783}event Client_Rand_server(id_client_5,sr_51);
                                    {7784}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_47,gy_41: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_88: preSharedKeyExt) = mode_47 in
                                    (
                                        {7785}let cur_log2_87: bitstring = (cur_log_IN1_HRR_IN2_10,server_hello'_31) in
                                        {7786}event Client_DH_server(id_client_5,gy_41);
                                        {7787}let v_1703: bool = (psk_ext_88 = empty_psk_ext) in
                                        {7788}let psk_191: preSharedKey = (if v_1703 then NoPsk else caught-fail) in
                                        {7789}let s_177: bitstring = (if v_1703 then zero else caught-fail) in
                                        {7790}let k_172: bitstring = (if v_1703 then catch-fail(psk2b(psk_191)) else caught-fail) in
                                        {7791}let v_1704: bool = not-caught-fail(k_172) in
                                        {7792}let early_secret_127: bitstring = (if v_1703 then catch-fail((if v_1704 then hmac(@8_backend_h,s_177,k_172) else fail-any)) else caught-fail) in
                                        {7793}let v_1705: bool = not-caught-fail(early_secret_127) in
                                        {7794}let l_471: label = (if v_1705 then tls13_ext_res_binder else caught-fail) in
                                        {7795}let m_167: bitstring = (if v_1705 then zero else caught-fail) in
                                        {7796}let h_451: bitstring = (if v_1705 then catch-fail(hash(@8_backend_h,m_167)) else caught-fail) in
                                        {7797}let v_1706: bool = not-caught-fail(h_451) in
                                        {7798}let x_537: bitstring = (if v_1706 then (l_471,h_451) else caught-fail) in
                                        {7799}let binder_key_85: bitstring = (if v_1705 then catch-fail((if v_1706 then hmac(@8_backend_h,early_secret_127,x_537) else fail-any)) else caught-fail) in
                                        {7800}let v_1707: bool = not-caught-fail(binder_key_85) in
                                        {7801}let v_1708: bitstring = (if v_1703 then catch-fail((if v_1705 then (if v_1707 then (early_secret_127,binder_key_85) else fail-any) else fail-any)) else caught-fail) in
                                        {7802}let v_1709: bool = (not-caught-fail(v_1708) && success?(1-proj-2-tuple(v_1708))) in
                                        {7803}let kb_85: mac_key = (if v_1709 then 2-proj-2-tuple(v_1708) else caught-fail) in
                                        {7804}let es_128: bitstring = (if v_1709 then 1-proj-2-tuple(v_1708) else caught-fail) in
                                        {7805}let v_1710: bitstring = (if not(v_1703) then catch-fail(psk_data'_34) else caught-fail) in
                                        {7806}let v_1711: bool = (not-caught-fail(v_1710) && success?(1-proj-4-tuple(v_1710))) in
                                        {7807}let is_safe_77: bool = (if v_1711 then 4-proj-4-tuple(v_1710) else caught-fail) in
                                        {7808}let es_129: bitstring = (if v_1711 then 3-proj-4-tuple(v_1710) else caught-fail) in
                                        {7809}let id_90: identityPsk = (if v_1711 then 2-proj-4-tuple(v_1710) else caught-fail) in
                                        {7810}let psk_192: preSharedKey = (if v_1711 then 1-proj-4-tuple(v_1710) else caught-fail) in
                                        {7811}let (psk_193: preSharedKey,early_secret_128: bitstring,valid_40: bool,safe_psk_46: bool) = (if v_1703 then (if v_1709 then (NoPsk,es_128,true,false) else fail-any) else (if v_1711 then (psk_192,es_129,((psk_192 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_88)),is_safe_77) else fail-any)) in
                                        {7812}event Client_PSKChoosen(id_client_5,psk_193,safe_psk_46);
                                        {7813}if valid_40 then
                                        (
                                            {7814}let gxy_82: element = catch-fail(dh_decap_fun(g_47,gy_41,x_536)) in
                                            {7815}let v_1712: bool = not-caught-fail(gxy_82) in
                                            {7816}new s_178[]: seed;
                                            {7817}let gxy_83: element = (if v_1712 then gxy_82 else dh_f(s_178)) in
                                            {7818}event Client_DH_gxy(id_client_5,gxy_83);
                                            {7819}let l_472: label = tls13_derived in
                                            {7820}let m_168: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {7821}let v_1713: bool = not-caught-fail(m_168) in
                                            {7822}let h_452: bitstring = (if v_1713 then catch-fail(hash(@8_backend_h,m_168)) else caught-fail) in
                                            {7823}let v_1714: bool = not-caught-fail(h_452) in
                                            {7824}let x_538: bitstring = (if v_1714 then (l_472,h_452) else caught-fail) in
                                            {7825}let extra_89: bitstring = catch-fail((if v_1713 then (if v_1714 then hmac(@8_backend_h,early_secret_128,x_538) else fail-any) else fail-any)) in
                                            {7826}let v_1715: bool = not-caught-fail(extra_89) in
                                            {7827}let handshake_secret_41: bitstring = (if v_1715 then hmac(@8_backend_h,extra_89,gxy_83) else fail-any) in
                                            {7828}let l_473: label = tls13_derived in
                                            {7829}let m_169: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {7830}let v_1716: bool = not-caught-fail(m_169) in
                                            {7831}let h_453: bitstring = (if v_1716 then catch-fail(hash(@8_backend_h,m_169)) else caught-fail) in
                                            {7832}let v_1717: bool = not-caught-fail(h_453) in
                                            {7833}let x_539: bitstring = (if v_1717 then (l_473,h_453) else caught-fail) in
                                            {7834}let extra_90: bitstring = catch-fail((if v_1716 then (if v_1717 then hmac(@8_backend_h,handshake_secret_41,x_539) else fail-any) else fail-any)) in
                                            {7835}let v_1718: bool = not-caught-fail(extra_90) in
                                            {7836}let k_173: bitstring = (if v_1718 then zero else caught-fail) in
                                            {7837}let master_secret_89: bitstring = (if v_1718 then catch-fail(hmac(@8_backend_h,handshake_secret_41,k_173)) else caught-fail) in
                                            {7838}let v_1719: bool = not-caught-fail(master_secret_89) in
                                            {7839}let l_474: label = (if v_1719 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {7840}let h_454: bitstring = (if v_1719 then catch-fail(hash(@8_backend_h,cur_log2_87)) else caught-fail) in
                                            {7841}let v_1720: bool = not-caught-fail(h_454) in
                                            {7842}let x_540: bitstring = (if v_1720 then (l_474,h_454) else caught-fail) in
                                            {7843}let client_hts_41: bitstring = (if v_1719 then catch-fail((if v_1720 then hmac(@8_backend_h,handshake_secret_41,x_540) else fail-any)) else caught-fail) in
                                            {7844}let v_1721: bool = not-caught-fail(client_hts_41) in
                                            {7845}let l_475: label = (if v_1721 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {7846}let h_455: bitstring = (if v_1721 then catch-fail(hash(@8_backend_h,cur_log2_87)) else caught-fail) in
                                            {7847}let v_1722: bool = not-caught-fail(h_455) in
                                            {7848}let x_541: bitstring = (if v_1722 then (l_475,h_455) else caught-fail) in
                                            {7849}let server_hts_41: bitstring = (if v_1721 then catch-fail((if v_1722 then hmac(@8_backend_h,handshake_secret_41,x_541) else fail-any)) else caught-fail) in
                                            {7850}let v_1723: bool = not-caught-fail(server_hts_41) in
                                            {7851}let l_476: label = (if v_1723 then tls13_key else caught-fail) in
                                            {7852}let h_456: bitstring = (if v_1723 then zero else caught-fail) in
                                            {7853}let x_542: bitstring = (if v_1723 then (l_476,h_456) else caught-fail) in
                                            {7854}let client_wkh_41: bitstring = (if v_1723 then catch-fail(hmac(@8_backend_h,client_hts_41,x_542)) else caught-fail) in
                                            {7855}let v_1724: bool = not-caught-fail(client_wkh_41) in
                                            {7856}let l_477: label = (if v_1724 then tls13_key else caught-fail) in
                                            {7857}let h_457: bitstring = (if v_1724 then zero else caught-fail) in
                                            {7858}let x_543: bitstring = (if v_1724 then (l_477,h_457) else caught-fail) in
                                            {7859}let server_wkh_41: bitstring = (if v_1724 then catch-fail(hmac(@8_backend_h,server_hts_41,x_543)) else caught-fail) in
                                            {7860}let v_1725: bool = not-caught-fail(server_wkh_41) in
                                            {7861}let l_478: label = (if v_1725 then tls13_finished else caught-fail) in
                                            {7862}let h_458: bitstring = (if v_1725 then zero else caught-fail) in
                                            {7863}let x_544: bitstring = (if v_1725 then (l_478,h_458) else caught-fail) in
                                            {7864}let client_fk_41: bitstring = (if v_1725 then catch-fail(hmac(@8_backend_h,client_hts_41,x_544)) else caught-fail) in
                                            {7865}let v_1726: bool = not-caught-fail(client_fk_41) in
                                            {7866}let l_479: label = (if v_1726 then tls13_finished else caught-fail) in
                                            {7867}let h_459: bitstring = (if v_1726 then zero else caught-fail) in
                                            {7868}let x_545: bitstring = (if v_1726 then (l_479,h_459) else caught-fail) in
                                            {7869}let server_fk_41: bitstring = (if v_1726 then catch-fail(hmac(@8_backend_h,server_hts_41,x_545)) else caught-fail) in
                                            {7870}let v_1727: bool = not-caught-fail(server_fk_41) in
                                            {7871}let (master_secret_90: bitstring,chk_48: aead_key,shk_47: aead_key,cfin_48: mac_key,sfin_47: mac_key) = (if v_1718 then (if v_1719 then (if v_1721 then (if v_1723 then (if v_1724 then (if v_1725 then (if v_1726 then (if v_1727 then (master_secret_89,client_wkh_41,server_wkh_41,client_fk_41,server_fk_41) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {7872}event Client_chk(id_client_5,chk_48);
                                            {7873}event Client_shk(id_client_5,shk_47);
                                            {7874}event Client_cfin(id_client_5,cfin_48);
                                            {7875}event Client_sfin(id_client_5,sfin_47);
                                            {7876}in(io, enc_ee_msg_40: bitstring);
                                            {7877}let ee_msg_45: msg = aead_dec(@8_backend_a,shk_47,0,zero,enc_ee_msg_40) in
                                            {7878}let EE(ech_ee_40: echExt,extra_ee_40: extraExt) = ee_msg_45 in
                                            {7879}let cur_log2_88: bitstring = (cur_log2_87,ee_msg_45) in
                                            {7880}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_10,sr_51,@8_backend_h,@8_backend_a,c_dom_7,backend_dom_1,psk_193,safe_psk_46,@8_comp_psk,master_secret_90,chk_48,0,shk_47,1,cfin_48,sfin_47,cur_log2_88)))
                                        )
                                        else
                                            {7881}out(io, illegal_parameter)
                                    )
                                    else
                                        {7882}out(io, illegal_parameter)
                            )
                            else
                                {7884}let psk_194: preSharedKey = NoPsk in
                                {7885}let s_179: bitstring = zero in
                                {7886}let k_174: bitstring = catch-fail(psk2b(psk_194)) in
                                {7887}let v_1728: bool = not-caught-fail(k_174) in
                                {7888}let early_secret_129: bitstring = catch-fail((if v_1728 then hmac(@8_backend_h,s_179,k_174) else fail-any)) in
                                {7889}let v_1729: bool = not-caught-fail(early_secret_129) in
                                {7890}let l_480: label = (if v_1729 then tls13_ext_res_binder else caught-fail) in
                                {7891}let m_170: bitstring = (if v_1729 then zero else caught-fail) in
                                {7892}let h_460: bitstring = (if v_1729 then catch-fail(hash(@8_backend_h,m_170)) else caught-fail) in
                                {7893}let v_1730: bool = not-caught-fail(h_460) in
                                {7894}let x_546: bitstring = (if v_1730 then (l_480,h_460) else caught-fail) in
                                {7895}let binder_key_86: bitstring = (if v_1729 then catch-fail((if v_1730 then hmac(@8_backend_h,early_secret_129,x_546) else fail-any)) else caught-fail) in
                                {7896}let v_1731: bool = not-caught-fail(binder_key_86) in
                                {7897}let v_1732: bitstring = catch-fail((if v_1729 then (if v_1731 then (early_secret_129,binder_key_86) else fail-any) else fail-any)) in
                                {7898}let v_1733: bool = (not-caught-fail(v_1732) && success?(1-proj-2-tuple(v_1732))) in
                                {7899}let kb_86: mac_key = (if v_1733 then 2-proj-2-tuple(v_1732) else caught-fail) in
                                {7900}let es_130: bitstring = (if v_1733 then 1-proj-2-tuple(v_1732) else caught-fail) in
                                {7901}let v_1734: bitstring = catch-fail((if v_1733 then (empty_psk_ext,(NoPsk,zero,es_130,false)) else fail-any)) in
                                {7902}let v_1735: bool = (not-caught-fail(v_1734) && success?(1-proj-2-tuple(v_1734))) in
                                {7903}let psk_data_46: bitstring = (if v_1735 then 2-proj-2-tuple(v_1734) else caught-fail) in
                                {7904}let psk_ext_89: preSharedKeyExt = (if v_1735 then 1-proj-2-tuple(v_1734) else caught-fail) in
                                {7905}let i_offer_15: params = (if v_1735 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_6,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_89) else caught-fail) in
                                {7906}let i_client_hello_20: msg = (if v_1735 then CH(i_cr_10,i_offer_15) else caught-fail) in
                                {7907}new fake_id_18[]: identityPsk;
                                {7908}new fake_binder_18[]: bitstring;
                                {7909}let o_psk_ext_19: preSharedKeyExt = (if v_1735 then (if @8_use_psk then client_psk_ext(fake_id_18,fake_binder_18) else empty_psk_ext) else caught-fail) in
                                {7910}let o_ech_ext_ADD_15: echExt = (if v_1735 then ECHClientHelloOuter(ech_h_14,ech_a_14,config_id_14,zero,zero) else caught-fail) in
                                {7911}let o_offer_ADD_15: params = (if v_1735 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_8,SNI(o_dom_10),o_ech_ext_ADD_15,empty_extra_ext,o_psk_ext_19) else caught-fail) in
                                {7912}let o_client_hello_ADD_15: msg = (if v_1735 then CH(o_cr_12,o_offer_ADD_15) else caught-fail) in
                                {7913}let n_17: nat = (if v_1735 then 2 else caught-fail) in
                                {7914}let v_1736: hpkeContext = (if v_1735 then catch-fail(context_2) else caught-fail) in
                                {7915}let v_1737: bool = (not-caught-fail(v_1736) && ((S =nf 1-proj-hpke_context(v_1736)) && success?(1-proj-hpke_context(v_1736)))) in
                                {7916}let base_nonce_20: bitstring = (if v_1737 then 3-proj-hpke_context(v_1736) else caught-fail) in
                                {7917}let key_20: aead_key = (if v_1737 then 2-proj-hpke_context(v_1736) else caught-fail) in
                                {7918}let payload_21: bitstring = (if v_1735 then catch-fail((if v_1737 then aead_enc(ech_a_14,key_20,(base_nonce_20,n_17),o_client_hello_ADD_15,i_client_hello_20) else fail-any)) else caught-fail) in
                                {7919}let v_1738: bool = not-caught-fail(payload_21) in
                                {7920}let o_ech_ext_19: echExt = (if v_1738 then ECHClientHelloOuter(ech_h_14,ech_a_14,config_id_14,zero,payload_21) else caught-fail) in
                                {7921}let o_offer_31: params = (if v_1738 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_8,SNI(o_dom_10),o_ech_ext_19,empty_extra_ext,o_psk_ext_19) else caught-fail) in
                                {7922}let (o_client_hello'_11: msg,i_client_hello'_12: msg,i_cr'_11: bytes32,i_kex_data'_11: bitstring,psk_data'_35: bitstring) = (if v_1735 then (if v_1738 then (CH(o_cr_12,o_offer_31),i_client_hello_20,i_cr_10,i_kex_data_9,psk_data_46) else fail-any) else fail-any) in
                                {7923}out(io, o_client_hello'_11);
                                {7924}in(io, server_hello'_32: msg);
                                {7925}let SH(B32(sr24'_11: bytes24,sr8'_11: bytes8),params'_11: params) = server_hello'_32 in
                                {7926}let cur_log_IN1_HRR_IN2_11: bitstring = (cur_log_IN1_HRR_3,i_client_hello'_12) in
                                {7927}let sh_modified_15: msg = SH(B32(sr24'_11,zero8),params'_11) in
                                {7928}let cur_log_sh_15: bitstring = (cur_log_IN1_HRR_IN2_11,sh_modified_15) in
                                {7929}let transcript_ech_conf_15: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_15)) in
                                {7930}let v_1739: bool = not-caught-fail(transcript_ech_conf_15) in
                                {7931}let s_180: bitstring = (if v_1739 then zero else caught-fail) in
                                {7932}let k_175: bitstring = (if v_1739 then catch-fail(b32_2_b(get_random(i_client_hello'_12))) else caught-fail) in
                                {7933}let v_1740: bool = not-caught-fail(k_175) in
                                {7934}let k_176: bitstring = (if v_1739 then catch-fail((if v_1740 then hmac(@8_backend_h,s_180,k_175) else fail-any)) else caught-fail) in
                                {7935}let v_1741: bool = not-caught-fail(k_176) in
                                {7936}let l_481: label = (if v_1741 then ech_accept_confirmation else caught-fail) in
                                {7937}let x_547: bitstring = (if v_1741 then (l_481,cur_log_sh_15) else caught-fail) in
                                {7938}let sr8_19: bytes8 = (if v_1739 then catch-fail(crop_into_bytes8((if v_1741 then hmac(@8_backend_h,k_176,x_547) else fail-any))) else caught-fail) in
                                {7939}let v_1742: bool = not-caught-fail(sr8_19) in
                                {7940}if (B32(sr24'_11,sr8'_11) = (if v_1739 then (if v_1742 then B32(sr24'_11,sr8_19) else fail-any) else fail-any)) then
                                {7941}let (x_548: bitstring,g_48: group) = i_kex_data'_11 in
                                {7942}let (psk_offer_41: preSharedKey,id_offer_41: identityPsk,es_offer_41: bitstring,is_safe_offer_41: bool) = psk_data'_35 in
                                {7943}event Client_PSKOffer(id_client_5,psk_offer_41,id_offer_41,is_safe_offer_41);
                                {7944}event Client_Rand_client(id_client_5,i_cr'_11);
                                {7945}event Client_DH_client(id_client_5,dh_pub(g_48,x_548));
                                {7946}event Client_server_domain(id_client_5,backend_dom_1);
                                {7947}let SH(sr_52: bytes32,mode_48: params) = server_hello'_32 in
                                {7948}event Client_Rand_server(id_client_5,sr_52);
                                {7949}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_48,gy_42: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_90: preSharedKeyExt) = mode_48 in
                                (
                                    {7950}let cur_log2_89: bitstring = (cur_log_IN1_HRR_IN2_11,server_hello'_32) in
                                    {7951}event Client_DH_server(id_client_5,gy_42);
                                    {7952}let v_1743: bool = (psk_ext_90 = empty_psk_ext) in
                                    {7953}let psk_195: preSharedKey = (if v_1743 then NoPsk else caught-fail) in
                                    {7954}let s_181: bitstring = (if v_1743 then zero else caught-fail) in
                                    {7955}let k_177: bitstring = (if v_1743 then catch-fail(psk2b(psk_195)) else caught-fail) in
                                    {7956}let v_1744: bool = not-caught-fail(k_177) in
                                    {7957}let early_secret_130: bitstring = (if v_1743 then catch-fail((if v_1744 then hmac(@8_backend_h,s_181,k_177) else fail-any)) else caught-fail) in
                                    {7958}let v_1745: bool = not-caught-fail(early_secret_130) in
                                    {7959}let l_482: label = (if v_1745 then tls13_ext_res_binder else caught-fail) in
                                    {7960}let m_171: bitstring = (if v_1745 then zero else caught-fail) in
                                    {7961}let h_461: bitstring = (if v_1745 then catch-fail(hash(@8_backend_h,m_171)) else caught-fail) in
                                    {7962}let v_1746: bool = not-caught-fail(h_461) in
                                    {7963}let x_549: bitstring = (if v_1746 then (l_482,h_461) else caught-fail) in
                                    {7964}let binder_key_87: bitstring = (if v_1745 then catch-fail((if v_1746 then hmac(@8_backend_h,early_secret_130,x_549) else fail-any)) else caught-fail) in
                                    {7965}let v_1747: bool = not-caught-fail(binder_key_87) in
                                    {7966}let v_1748: bitstring = (if v_1743 then catch-fail((if v_1745 then (if v_1747 then (early_secret_130,binder_key_87) else fail-any) else fail-any)) else caught-fail) in
                                    {7967}let v_1749: bool = (not-caught-fail(v_1748) && success?(1-proj-2-tuple(v_1748))) in
                                    {7968}let kb_87: mac_key = (if v_1749 then 2-proj-2-tuple(v_1748) else caught-fail) in
                                    {7969}let es_131: bitstring = (if v_1749 then 1-proj-2-tuple(v_1748) else caught-fail) in
                                    {7970}let v_1750: bitstring = (if not(v_1743) then catch-fail(psk_data'_35) else caught-fail) in
                                    {7971}let v_1751: bool = (not-caught-fail(v_1750) && success?(1-proj-4-tuple(v_1750))) in
                                    {7972}let is_safe_78: bool = (if v_1751 then 4-proj-4-tuple(v_1750) else caught-fail) in
                                    {7973}let es_132: bitstring = (if v_1751 then 3-proj-4-tuple(v_1750) else caught-fail) in
                                    {7974}let id_91: identityPsk = (if v_1751 then 2-proj-4-tuple(v_1750) else caught-fail) in
                                    {7975}let psk_196: preSharedKey = (if v_1751 then 1-proj-4-tuple(v_1750) else caught-fail) in
                                    {7976}let (psk_197: preSharedKey,early_secret_131: bitstring,valid_41: bool,safe_psk_47: bool) = (if v_1743 then (if v_1749 then (NoPsk,es_131,true,false) else fail-any) else (if v_1751 then (psk_196,es_132,((psk_196 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_90)),is_safe_78) else fail-any)) in
                                    {7977}event Client_PSKChoosen(id_client_5,psk_197,safe_psk_47);
                                    {7978}if valid_41 then
                                    (
                                        {7979}let gxy_84: element = catch-fail(dh_decap_fun(g_48,gy_42,x_548)) in
                                        {7980}let v_1752: bool = not-caught-fail(gxy_84) in
                                        {7981}new s_182[]: seed;
                                        {7982}let gxy_85: element = (if v_1752 then gxy_84 else dh_f(s_182)) in
                                        {7983}event Client_DH_gxy(id_client_5,gxy_85);
                                        {7984}let l_483: label = tls13_derived in
                                        {7985}let m_172: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {7986}let v_1753: bool = not-caught-fail(m_172) in
                                        {7987}let h_462: bitstring = (if v_1753 then catch-fail(hash(@8_backend_h,m_172)) else caught-fail) in
                                        {7988}let v_1754: bool = not-caught-fail(h_462) in
                                        {7989}let x_550: bitstring = (if v_1754 then (l_483,h_462) else caught-fail) in
                                        {7990}let extra_91: bitstring = catch-fail((if v_1753 then (if v_1754 then hmac(@8_backend_h,early_secret_131,x_550) else fail-any) else fail-any)) in
                                        {7991}let v_1755: bool = not-caught-fail(extra_91) in
                                        {7992}let handshake_secret_42: bitstring = (if v_1755 then hmac(@8_backend_h,extra_91,gxy_85) else fail-any) in
                                        {7993}let l_484: label = tls13_derived in
                                        {7994}let m_173: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {7995}let v_1756: bool = not-caught-fail(m_173) in
                                        {7996}let h_463: bitstring = (if v_1756 then catch-fail(hash(@8_backend_h,m_173)) else caught-fail) in
                                        {7997}let v_1757: bool = not-caught-fail(h_463) in
                                        {7998}let x_551: bitstring = (if v_1757 then (l_484,h_463) else caught-fail) in
                                        {7999}let extra_92: bitstring = catch-fail((if v_1756 then (if v_1757 then hmac(@8_backend_h,handshake_secret_42,x_551) else fail-any) else fail-any)) in
                                        {8000}let v_1758: bool = not-caught-fail(extra_92) in
                                        {8001}let k_178: bitstring = (if v_1758 then zero else caught-fail) in
                                        {8002}let master_secret_91: bitstring = (if v_1758 then catch-fail(hmac(@8_backend_h,handshake_secret_42,k_178)) else caught-fail) in
                                        {8003}let v_1759: bool = not-caught-fail(master_secret_91) in
                                        {8004}let l_485: label = (if v_1759 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {8005}let h_464: bitstring = (if v_1759 then catch-fail(hash(@8_backend_h,cur_log2_89)) else caught-fail) in
                                        {8006}let v_1760: bool = not-caught-fail(h_464) in
                                        {8007}let x_552: bitstring = (if v_1760 then (l_485,h_464) else caught-fail) in
                                        {8008}let client_hts_42: bitstring = (if v_1759 then catch-fail((if v_1760 then hmac(@8_backend_h,handshake_secret_42,x_552) else fail-any)) else caught-fail) in
                                        {8009}let v_1761: bool = not-caught-fail(client_hts_42) in
                                        {8010}let l_486: label = (if v_1761 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {8011}let h_465: bitstring = (if v_1761 then catch-fail(hash(@8_backend_h,cur_log2_89)) else caught-fail) in
                                        {8012}let v_1762: bool = not-caught-fail(h_465) in
                                        {8013}let x_553: bitstring = (if v_1762 then (l_486,h_465) else caught-fail) in
                                        {8014}let server_hts_42: bitstring = (if v_1761 then catch-fail((if v_1762 then hmac(@8_backend_h,handshake_secret_42,x_553) else fail-any)) else caught-fail) in
                                        {8015}let v_1763: bool = not-caught-fail(server_hts_42) in
                                        {8016}let l_487: label = (if v_1763 then tls13_key else caught-fail) in
                                        {8017}let h_466: bitstring = (if v_1763 then zero else caught-fail) in
                                        {8018}let x_554: bitstring = (if v_1763 then (l_487,h_466) else caught-fail) in
                                        {8019}let client_wkh_42: bitstring = (if v_1763 then catch-fail(hmac(@8_backend_h,client_hts_42,x_554)) else caught-fail) in
                                        {8020}let v_1764: bool = not-caught-fail(client_wkh_42) in
                                        {8021}let l_488: label = (if v_1764 then tls13_key else caught-fail) in
                                        {8022}let h_467: bitstring = (if v_1764 then zero else caught-fail) in
                                        {8023}let x_555: bitstring = (if v_1764 then (l_488,h_467) else caught-fail) in
                                        {8024}let server_wkh_42: bitstring = (if v_1764 then catch-fail(hmac(@8_backend_h,server_hts_42,x_555)) else caught-fail) in
                                        {8025}let v_1765: bool = not-caught-fail(server_wkh_42) in
                                        {8026}let l_489: label = (if v_1765 then tls13_finished else caught-fail) in
                                        {8027}let h_468: bitstring = (if v_1765 then zero else caught-fail) in
                                        {8028}let x_556: bitstring = (if v_1765 then (l_489,h_468) else caught-fail) in
                                        {8029}let client_fk_42: bitstring = (if v_1765 then catch-fail(hmac(@8_backend_h,client_hts_42,x_556)) else caught-fail) in
                                        {8030}let v_1766: bool = not-caught-fail(client_fk_42) in
                                        {8031}let l_490: label = (if v_1766 then tls13_finished else caught-fail) in
                                        {8032}let h_469: bitstring = (if v_1766 then zero else caught-fail) in
                                        {8033}let x_557: bitstring = (if v_1766 then (l_490,h_469) else caught-fail) in
                                        {8034}let server_fk_42: bitstring = (if v_1766 then catch-fail(hmac(@8_backend_h,server_hts_42,x_557)) else caught-fail) in
                                        {8035}let v_1767: bool = not-caught-fail(server_fk_42) in
                                        {8036}let (master_secret_92: bitstring,chk_49: aead_key,shk_48: aead_key,cfin_49: mac_key,sfin_48: mac_key) = (if v_1758 then (if v_1759 then (if v_1761 then (if v_1763 then (if v_1764 then (if v_1765 then (if v_1766 then (if v_1767 then (master_secret_91,client_wkh_42,server_wkh_42,client_fk_42,server_fk_42) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {8037}event Client_chk(id_client_5,chk_49);
                                        {8038}event Client_shk(id_client_5,shk_48);
                                        {8039}event Client_cfin(id_client_5,cfin_49);
                                        {8040}event Client_sfin(id_client_5,sfin_48);
                                        {8041}in(io, enc_ee_msg_41: bitstring);
                                        {8042}let ee_msg_46: msg = aead_dec(@8_backend_a,shk_48,0,zero,enc_ee_msg_41) in
                                        {8043}let EE(ech_ee_41: echExt,extra_ee_41: extraExt) = ee_msg_46 in
                                        {8044}let cur_log2_90: bitstring = (cur_log2_89,ee_msg_46) in
                                        {8045}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_11,sr_52,@8_backend_h,@8_backend_a,c_dom_7,backend_dom_1,psk_197,safe_psk_47,@8_comp_psk,master_secret_92,chk_49,0,shk_48,1,cfin_49,sfin_48,cur_log2_90)))
                                    )
                                    else
                                        {8046}out(io, illegal_parameter)
                                )
                                else
                                    {8047}out(io, illegal_parameter)
                        )
                        else
                            {8048}let cur_log_OU1_HRR_3: bitstring = ((zero,o_client_hello_5),server_hello_7) in
                            {8049}let ech_config(config_id_15: configId,ech_g_15: group,pkR_17: element,o_dom_11: domain,ech_h_15: hash_alg,ech_a_15: aead_alg) = ech_conf_2 in
                            {8050}new rand24_20[]: bytes24;
                            {8051}new rand8_20[]: bytes8;
                            {8052}let o_cr_13: bytes32 = B32(rand24_20,rand8_20) in
                            {8053}let send_key_share_11: bool = true in
                            {8054}new s_183[]: seed;
                            {8055}let gx_47: element = dh_pub(@8_tls_g,dh_k(s_183)) in
                            {8056}let v_1768: bitstring = (dh_k(s_183),gx_47) in
                            {8057}let v_1769: bool = success?(1-proj-2-tuple(v_1768)) in
                            {8058}let gx_48: element = (if v_1769 then 2-proj-2-tuple(v_1768) else caught-fail) in
                            {8059}let x_558: bitstring = (if v_1769 then 1-proj-2-tuple(v_1768) else caught-fail) in
                            {8060}let kex_19: kex_alg = (if v_1769 then (if send_key_share_11 then DHE_kex(@8_tls_g,gx_48) else DHE_group(@8_tls_g)) else caught-fail) in
                            {8061}let (o_kex_ext_9: keyShareExt,kex_data_10: bitstring) = (if v_1769 then (client_kex_ext(kex_19),(x_558,@8_tls_g)) else fail-any) in
                            {8062}if @8_use_grease then
                            (
                                {8063}let extra_93: extraExt = empty_extra_ext in
                                {8064}if @8_use_psk then
                                (
                                    {8065}let (psk_198: preSharedKey,id_92: identityPsk,old_es_13: bitstring,is_safe_79: bool) = psk_data_43 in
                                    (
                                        {8066}let offer_39: params = nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_9,SNI(o_dom_11),o_ech_ext_16,extra_93,trunc_client_psk_ext(id_92)) in
                                        {8067}let cur_log'_27: bitstring = (cur_log_OU1_HRR_3,CH(o_cr_13,offer_39)) in
                                        {8068}let s_184: bitstring = zero in
                                        {8069}let k_179: bitstring = catch-fail(psk2b(psk_198)) in
                                        {8070}let v_1770: bool = not-caught-fail(k_179) in
                                        {8071}let early_secret_132: bitstring = catch-fail((if v_1770 then hmac(@8_tls_h,s_184,k_179) else fail-any)) in
                                        {8072}let v_1771: bool = not-caught-fail(early_secret_132) in
                                        {8073}let l_491: label = (if v_1771 then tls13_ext_res_binder else caught-fail) in
                                        {8074}let m_174: bitstring = (if v_1771 then zero else caught-fail) in
                                        {8075}let h_470: bitstring = (if v_1771 then catch-fail(hash(@8_tls_h,m_174)) else caught-fail) in
                                        {8076}let v_1772: bool = not-caught-fail(h_470) in
                                        {8077}let x_559: bitstring = (if v_1772 then (l_491,h_470) else caught-fail) in
                                        {8078}let binder_key_88: bitstring = (if v_1771 then catch-fail((if v_1772 then hmac(@8_tls_h,early_secret_132,x_559) else fail-any)) else caught-fail) in
                                        {8079}let v_1773: bool = not-caught-fail(binder_key_88) in
                                        {8080}let v_1774: bitstring = catch-fail((if v_1771 then (if v_1773 then (early_secret_132,binder_key_88) else fail-any) else fail-any)) in
                                        {8081}let v_1775: bool = (not-caught-fail(v_1774) && success?(1-proj-2-tuple(v_1774))) in
                                        {8082}let kb_88: mac_key = (if v_1775 then 2-proj-2-tuple(v_1774) else caught-fail) in
                                        {8083}let es_133: bitstring = (if v_1775 then 1-proj-2-tuple(v_1774) else caught-fail) in
                                        {8084}let binders_26: bitstring = (if v_1775 then catch-fail(hmac(@8_tls_h,kb_88,cur_log'_27)) else caught-fail) in
                                        {8085}let v_1776: bool = not-caught-fail(binders_26) in
                                        {8086}let v_1777: bitstring = catch-fail((if v_1775 then (if v_1776 then (client_psk_ext(id_92,binders_26),(psk_198,id_92,es_133,is_safe_79)) else fail-any) else fail-any)) in
                                        {8087}let v_1778: bool = (not-caught-fail(v_1777) && success?(1-proj-2-tuple(v_1777))) in
                                        {8088}let psk_data_47: bitstring = (if v_1778 then 2-proj-2-tuple(v_1777) else caught-fail) in
                                        {8089}let psk_ext_91: preSharedKeyExt = (if v_1778 then 1-proj-2-tuple(v_1777) else caught-fail) in
                                        {8090}let o_offer_32: params = (if v_1778 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_9,SNI(o_dom_11),o_ech_ext_16,empty_extra_ext,psk_ext_91) else caught-fail) in
                                        {8091}let (client_hello'_24: msg,cr'_26: bytes32,kex_data'_21: bitstring,psk_data'_36: bitstring) = (if v_1778 then (CH(o_cr_13,o_offer_32),o_cr_13,kex_data_10,psk_data_47) else fail-any) in
                                        {8092}out(io, client_hello'_24);
                                        {8093}let cur_log_OU1_HRR_OU2_12: bitstring = (cur_log_OU1_HRR_3,client_hello'_24) in
                                        {8094}in(io, server_hello'_33: msg);
                                        {8095}let SH(sr'_21: bytes32,mode'_21: params) = server_hello'_33 in
                                        (
                                            {8096}if (sr'_21 = B32(HRR24,HRR8)) then
                                                {8097}out(io, unexpected_message)
                                            else
                                                {8098}let (x_560: bitstring,g_49: group) = kex_data'_21 in
                                                {8099}let (psk_offer_42: preSharedKey,id_offer_42: identityPsk,es_offer_42: bitstring,is_safe_offer_42: bool) = psk_data'_36 in
                                                {8100}event Client_PSKOffer(id_client_5,psk_offer_42,id_offer_42,is_safe_offer_42);
                                                {8101}event Client_Rand_client(id_client_5,cr'_26);
                                                {8102}event Client_DH_client(id_client_5,dh_pub(g_49,x_560));
                                                {8103}event Client_server_domain(id_client_5,o_dom_8);
                                                {8104}let SH(sr_53: bytes32,mode_49: params) = server_hello'_33 in
                                                {8105}event Client_Rand_server(id_client_5,sr_53);
                                                {8106}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_49,gy_43: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_92: preSharedKeyExt) = mode_49 in
                                                (
                                                    {8107}let cur_log2_91: bitstring = (cur_log_OU1_HRR_OU2_12,server_hello'_33) in
                                                    {8108}event Client_DH_server(id_client_5,gy_43);
                                                    {8109}let v_1779: bool = (psk_ext_92 = empty_psk_ext) in
                                                    {8110}let psk_199: preSharedKey = (if v_1779 then NoPsk else caught-fail) in
                                                    {8111}let s_185: bitstring = (if v_1779 then zero else caught-fail) in
                                                    {8112}let k_180: bitstring = (if v_1779 then catch-fail(psk2b(psk_199)) else caught-fail) in
                                                    {8113}let v_1780: bool = not-caught-fail(k_180) in
                                                    {8114}let early_secret_133: bitstring = (if v_1779 then catch-fail((if v_1780 then hmac(@8_tls_h,s_185,k_180) else fail-any)) else caught-fail) in
                                                    {8115}let v_1781: bool = not-caught-fail(early_secret_133) in
                                                    {8116}let l_492: label = (if v_1781 then tls13_ext_res_binder else caught-fail) in
                                                    {8117}let m_175: bitstring = (if v_1781 then zero else caught-fail) in
                                                    {8118}let h_471: bitstring = (if v_1781 then catch-fail(hash(@8_tls_h,m_175)) else caught-fail) in
                                                    {8119}let v_1782: bool = not-caught-fail(h_471) in
                                                    {8120}let x_561: bitstring = (if v_1782 then (l_492,h_471) else caught-fail) in
                                                    {8121}let binder_key_89: bitstring = (if v_1781 then catch-fail((if v_1782 then hmac(@8_tls_h,early_secret_133,x_561) else fail-any)) else caught-fail) in
                                                    {8122}let v_1783: bool = not-caught-fail(binder_key_89) in
                                                    {8123}let v_1784: bitstring = (if v_1779 then catch-fail((if v_1781 then (if v_1783 then (early_secret_133,binder_key_89) else fail-any) else fail-any)) else caught-fail) in
                                                    {8124}let v_1785: bool = (not-caught-fail(v_1784) && success?(1-proj-2-tuple(v_1784))) in
                                                    {8125}let kb_89: mac_key = (if v_1785 then 2-proj-2-tuple(v_1784) else caught-fail) in
                                                    {8126}let es_134: bitstring = (if v_1785 then 1-proj-2-tuple(v_1784) else caught-fail) in
                                                    {8127}let v_1786: bitstring = (if not(v_1779) then catch-fail(psk_data'_36) else caught-fail) in
                                                    {8128}let v_1787: bool = (not-caught-fail(v_1786) && success?(1-proj-4-tuple(v_1786))) in
                                                    {8129}let is_safe_80: bool = (if v_1787 then 4-proj-4-tuple(v_1786) else caught-fail) in
                                                    {8130}let es_135: bitstring = (if v_1787 then 3-proj-4-tuple(v_1786) else caught-fail) in
                                                    {8131}let id_93: identityPsk = (if v_1787 then 2-proj-4-tuple(v_1786) else caught-fail) in
                                                    {8132}let psk_200: preSharedKey = (if v_1787 then 1-proj-4-tuple(v_1786) else caught-fail) in
                                                    {8133}let (psk_201: preSharedKey,early_secret_134: bitstring,valid_42: bool,safe_psk_48: bool) = (if v_1779 then (if v_1785 then (NoPsk,es_134,true,false) else fail-any) else (if v_1787 then (psk_200,es_135,((psk_200 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_92)),is_safe_80) else fail-any)) in
                                                    {8134}event Client_PSKChoosen(id_client_5,psk_201,safe_psk_48);
                                                    {8135}if valid_42 then
                                                    (
                                                        {8136}let gxy_86: element = catch-fail(dh_decap_fun(g_49,gy_43,x_560)) in
                                                        {8137}let v_1788: bool = not-caught-fail(gxy_86) in
                                                        {8138}new s_186[]: seed;
                                                        {8139}let gxy_87: element = (if v_1788 then gxy_86 else dh_f(s_186)) in
                                                        {8140}event Client_DH_gxy(id_client_5,gxy_87);
                                                        {8141}let l_493: label = tls13_derived in
                                                        {8142}let m_176: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {8143}let v_1789: bool = not-caught-fail(m_176) in
                                                        {8144}let h_472: bitstring = (if v_1789 then catch-fail(hash(@8_tls_h,m_176)) else caught-fail) in
                                                        {8145}let v_1790: bool = not-caught-fail(h_472) in
                                                        {8146}let x_562: bitstring = (if v_1790 then (l_493,h_472) else caught-fail) in
                                                        {8147}let extra_94: bitstring = catch-fail((if v_1789 then (if v_1790 then hmac(@8_tls_h,early_secret_134,x_562) else fail-any) else fail-any)) in
                                                        {8148}let v_1791: bool = not-caught-fail(extra_94) in
                                                        {8149}let handshake_secret_43: bitstring = (if v_1791 then hmac(@8_tls_h,extra_94,gxy_87) else fail-any) in
                                                        {8150}let l_494: label = tls13_derived in
                                                        {8151}let m_177: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {8152}let v_1792: bool = not-caught-fail(m_177) in
                                                        {8153}let h_473: bitstring = (if v_1792 then catch-fail(hash(@8_tls_h,m_177)) else caught-fail) in
                                                        {8154}let v_1793: bool = not-caught-fail(h_473) in
                                                        {8155}let x_563: bitstring = (if v_1793 then (l_494,h_473) else caught-fail) in
                                                        {8156}let extra_95: bitstring = catch-fail((if v_1792 then (if v_1793 then hmac(@8_tls_h,handshake_secret_43,x_563) else fail-any) else fail-any)) in
                                                        {8157}let v_1794: bool = not-caught-fail(extra_95) in
                                                        {8158}let k_181: bitstring = (if v_1794 then zero else caught-fail) in
                                                        {8159}let master_secret_93: bitstring = (if v_1794 then catch-fail(hmac(@8_tls_h,handshake_secret_43,k_181)) else caught-fail) in
                                                        {8160}let v_1795: bool = not-caught-fail(master_secret_93) in
                                                        {8161}let l_495: label = (if v_1795 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {8162}let h_474: bitstring = (if v_1795 then catch-fail(hash(@8_tls_h,cur_log2_91)) else caught-fail) in
                                                        {8163}let v_1796: bool = not-caught-fail(h_474) in
                                                        {8164}let x_564: bitstring = (if v_1796 then (l_495,h_474) else caught-fail) in
                                                        {8165}let client_hts_43: bitstring = (if v_1795 then catch-fail((if v_1796 then hmac(@8_tls_h,handshake_secret_43,x_564) else fail-any)) else caught-fail) in
                                                        {8166}let v_1797: bool = not-caught-fail(client_hts_43) in
                                                        {8167}let l_496: label = (if v_1797 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {8168}let h_475: bitstring = (if v_1797 then catch-fail(hash(@8_tls_h,cur_log2_91)) else caught-fail) in
                                                        {8169}let v_1798: bool = not-caught-fail(h_475) in
                                                        {8170}let x_565: bitstring = (if v_1798 then (l_496,h_475) else caught-fail) in
                                                        {8171}let server_hts_43: bitstring = (if v_1797 then catch-fail((if v_1798 then hmac(@8_tls_h,handshake_secret_43,x_565) else fail-any)) else caught-fail) in
                                                        {8172}let v_1799: bool = not-caught-fail(server_hts_43) in
                                                        {8173}let l_497: label = (if v_1799 then tls13_key else caught-fail) in
                                                        {8174}let h_476: bitstring = (if v_1799 then zero else caught-fail) in
                                                        {8175}let x_566: bitstring = (if v_1799 then (l_497,h_476) else caught-fail) in
                                                        {8176}let client_wkh_43: bitstring = (if v_1799 then catch-fail(hmac(@8_tls_h,client_hts_43,x_566)) else caught-fail) in
                                                        {8177}let v_1800: bool = not-caught-fail(client_wkh_43) in
                                                        {8178}let l_498: label = (if v_1800 then tls13_key else caught-fail) in
                                                        {8179}let h_477: bitstring = (if v_1800 then zero else caught-fail) in
                                                        {8180}let x_567: bitstring = (if v_1800 then (l_498,h_477) else caught-fail) in
                                                        {8181}let server_wkh_43: bitstring = (if v_1800 then catch-fail(hmac(@8_tls_h,server_hts_43,x_567)) else caught-fail) in
                                                        {8182}let v_1801: bool = not-caught-fail(server_wkh_43) in
                                                        {8183}let l_499: label = (if v_1801 then tls13_finished else caught-fail) in
                                                        {8184}let h_478: bitstring = (if v_1801 then zero else caught-fail) in
                                                        {8185}let x_568: bitstring = (if v_1801 then (l_499,h_478) else caught-fail) in
                                                        {8186}let client_fk_43: bitstring = (if v_1801 then catch-fail(hmac(@8_tls_h,client_hts_43,x_568)) else caught-fail) in
                                                        {8187}let v_1802: bool = not-caught-fail(client_fk_43) in
                                                        {8188}let l_500: label = (if v_1802 then tls13_finished else caught-fail) in
                                                        {8189}let h_479: bitstring = (if v_1802 then zero else caught-fail) in
                                                        {8190}let x_569: bitstring = (if v_1802 then (l_500,h_479) else caught-fail) in
                                                        {8191}let server_fk_43: bitstring = (if v_1802 then catch-fail(hmac(@8_tls_h,server_hts_43,x_569)) else caught-fail) in
                                                        {8192}let v_1803: bool = not-caught-fail(server_fk_43) in
                                                        {8193}let (master_secret_94: bitstring,chk_50: aead_key,shk_49: aead_key,cfin_50: mac_key,sfin_49: mac_key) = (if v_1794 then (if v_1795 then (if v_1797 then (if v_1799 then (if v_1800 then (if v_1801 then (if v_1802 then (if v_1803 then (master_secret_93,client_wkh_43,server_wkh_43,client_fk_43,server_fk_43) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {8194}event Client_chk(id_client_5,chk_50);
                                                        {8195}event Client_shk(id_client_5,shk_49);
                                                        {8196}event Client_cfin(id_client_5,cfin_50);
                                                        {8197}event Client_sfin(id_client_5,sfin_49);
                                                        {8198}in(io, enc_ee_msg_42: bitstring);
                                                        {8199}let ee_msg_47: msg = aead_dec(@8_tls_a,shk_49,0,zero,enc_ee_msg_42) in
                                                        {8200}let EE(ech_ee_42: echExt,extra_ee_42: extraExt) = ee_msg_47 in
                                                        {8201}let cur_log2_92: bitstring = (cur_log2_91,ee_msg_47) in
                                                        {8202}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_26,sr_53,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_201,safe_psk_48,@8_comp_psk,master_secret_94,chk_50,0,shk_49,1,cfin_50,sfin_49,cur_log2_92)))
                                                    )
                                                    else
                                                        {8203}out(io, illegal_parameter)
                                                )
                                                else
                                                    {8204}out(io, illegal_parameter)
                                        )
                                        else
                                            {8205}out(io, unexpected_message)
                                    )
                                    else
                                        {8355}get pre_shared_keys(c_dom'_14: domain,=o_dom_11,=@8_tls_h,id_94: identityPsk,psk_202: preSharedKey,idP_16: idProc,is_safe_81: bool) in
                                        {8206}event Selected_one_time_used_psk(id_client_5,psk_202,is_safe_81);
                                        {8207}event Selected_psk(c_dom_7,c_dom'_14,idP_16,is_safe_81);
                                        {8208}event Selected_psk_no_missmatch(id_client_5,o_dom_11,@8_tls_h,psk_202,id_94);
                                        {8209}event Selected_psk_with_ID(c_dom_7,c_dom'_14,id_94,idP_16,is_safe_81);
                                        {8210}let v_1804: bitstring = (id_94,psk_202,is_safe_81) in
                                        {8211}let v_1805: bool = success?(1-proj-3-tuple(v_1804)) in
                                        {8212}let is_safe_82: bool = (if v_1805 then 3-proj-3-tuple(v_1804) else caught-fail) in
                                        {8213}let psk_203: preSharedKey = (if v_1805 then 2-proj-3-tuple(v_1804) else caught-fail) in
                                        {8214}let id_95: identityPsk = (if v_1805 then 1-proj-3-tuple(v_1804) else caught-fail) in
                                        {8215}let offer_40: params = (if v_1805 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_9,SNI(o_dom_11),o_ech_ext_16,extra_93,trunc_client_psk_ext(id_95)) else caught-fail) in
                                        {8216}let cur_log'_28: bitstring = (if v_1805 then (cur_log_OU1_HRR_3,CH(o_cr_13,offer_40)) else caught-fail) in
                                        {8217}let s_187: bitstring = (if v_1805 then zero else caught-fail) in
                                        {8218}let k_182: bitstring = (if v_1805 then catch-fail(psk2b(psk_203)) else caught-fail) in
                                        {8219}let v_1806: bool = not-caught-fail(k_182) in
                                        {8220}let early_secret_135: bitstring = (if v_1805 then catch-fail((if v_1806 then hmac(@8_tls_h,s_187,k_182) else fail-any)) else caught-fail) in
                                        {8221}let v_1807: bool = not-caught-fail(early_secret_135) in
                                        {8222}let l_501: label = (if v_1807 then tls13_ext_res_binder else caught-fail) in
                                        {8223}let m_178: bitstring = (if v_1807 then zero else caught-fail) in
                                        {8224}let h_480: bitstring = (if v_1807 then catch-fail(hash(@8_tls_h,m_178)) else caught-fail) in
                                        {8225}let v_1808: bool = not-caught-fail(h_480) in
                                        {8226}let x_570: bitstring = (if v_1808 then (l_501,h_480) else caught-fail) in
                                        {8227}let binder_key_90: bitstring = (if v_1807 then catch-fail((if v_1808 then hmac(@8_tls_h,early_secret_135,x_570) else fail-any)) else caught-fail) in
                                        {8228}let v_1809: bool = not-caught-fail(binder_key_90) in
                                        {8229}let v_1810: bitstring = (if v_1805 then catch-fail((if v_1807 then (if v_1809 then (early_secret_135,binder_key_90) else fail-any) else fail-any)) else caught-fail) in
                                        {8230}let v_1811: bool = (not-caught-fail(v_1810) && success?(1-proj-2-tuple(v_1810))) in
                                        {8231}let kb_90: mac_key = (if v_1811 then 2-proj-2-tuple(v_1810) else caught-fail) in
                                        {8232}let es_136: bitstring = (if v_1811 then 1-proj-2-tuple(v_1810) else caught-fail) in
                                        {8233}let binders_27: bitstring = (if v_1811 then catch-fail(hmac(@8_tls_h,kb_90,cur_log'_28)) else caught-fail) in
                                        {8234}let v_1812: bool = not-caught-fail(binders_27) in
                                        {8235}let v_1813: bitstring = catch-fail((if v_1805 then (if v_1811 then (if v_1812 then (client_psk_ext(id_95,binders_27),(psk_203,id_95,es_136,is_safe_82)) else fail-any) else fail-any) else fail-any)) in
                                        {8236}let v_1814: bool = (not-caught-fail(v_1813) && success?(1-proj-2-tuple(v_1813))) in
                                        {8237}let psk_data_48: bitstring = (if v_1814 then 2-proj-2-tuple(v_1813) else caught-fail) in
                                        {8238}let psk_ext_93: preSharedKeyExt = (if v_1814 then 1-proj-2-tuple(v_1813) else caught-fail) in
                                        {8239}let o_offer_33: params = (if v_1814 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_9,SNI(o_dom_11),o_ech_ext_16,empty_extra_ext,psk_ext_93) else caught-fail) in
                                        {8240}let (client_hello'_25: msg,cr'_27: bytes32,kex_data'_22: bitstring,psk_data'_37: bitstring) = (if v_1814 then (CH(o_cr_13,o_offer_33),o_cr_13,kex_data_10,psk_data_48) else fail-any) in
                                        {8241}out(io, client_hello'_25);
                                        {8242}let cur_log_OU1_HRR_OU2_13: bitstring = (cur_log_OU1_HRR_3,client_hello'_25) in
                                        {8243}in(io, server_hello'_34: msg);
                                        {8244}let SH(sr'_22: bytes32,mode'_22: params) = server_hello'_34 in
                                        (
                                            {8245}if (sr'_22 = B32(HRR24,HRR8)) then
                                                {8246}out(io, unexpected_message)
                                            else
                                                {8247}let (x_571: bitstring,g_50: group) = kex_data'_22 in
                                                {8248}let (psk_offer_43: preSharedKey,id_offer_43: identityPsk,es_offer_43: bitstring,is_safe_offer_43: bool) = psk_data'_37 in
                                                {8249}event Client_PSKOffer(id_client_5,psk_offer_43,id_offer_43,is_safe_offer_43);
                                                {8250}event Client_Rand_client(id_client_5,cr'_27);
                                                {8251}event Client_DH_client(id_client_5,dh_pub(g_50,x_571));
                                                {8252}event Client_server_domain(id_client_5,o_dom_8);
                                                {8253}let SH(sr_54: bytes32,mode_50: params) = server_hello'_34 in
                                                {8254}event Client_Rand_server(id_client_5,sr_54);
                                                {8255}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_50,gy_44: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_94: preSharedKeyExt) = mode_50 in
                                                (
                                                    {8256}let cur_log2_93: bitstring = (cur_log_OU1_HRR_OU2_13,server_hello'_34) in
                                                    {8257}event Client_DH_server(id_client_5,gy_44);
                                                    {8258}let v_1815: bool = (psk_ext_94 = empty_psk_ext) in
                                                    {8259}let psk_204: preSharedKey = (if v_1815 then NoPsk else caught-fail) in
                                                    {8260}let s_188: bitstring = (if v_1815 then zero else caught-fail) in
                                                    {8261}let k_183: bitstring = (if v_1815 then catch-fail(psk2b(psk_204)) else caught-fail) in
                                                    {8262}let v_1816: bool = not-caught-fail(k_183) in
                                                    {8263}let early_secret_136: bitstring = (if v_1815 then catch-fail((if v_1816 then hmac(@8_tls_h,s_188,k_183) else fail-any)) else caught-fail) in
                                                    {8264}let v_1817: bool = not-caught-fail(early_secret_136) in
                                                    {8265}let l_502: label = (if v_1817 then tls13_ext_res_binder else caught-fail) in
                                                    {8266}let m_179: bitstring = (if v_1817 then zero else caught-fail) in
                                                    {8267}let h_481: bitstring = (if v_1817 then catch-fail(hash(@8_tls_h,m_179)) else caught-fail) in
                                                    {8268}let v_1818: bool = not-caught-fail(h_481) in
                                                    {8269}let x_572: bitstring = (if v_1818 then (l_502,h_481) else caught-fail) in
                                                    {8270}let binder_key_91: bitstring = (if v_1817 then catch-fail((if v_1818 then hmac(@8_tls_h,early_secret_136,x_572) else fail-any)) else caught-fail) in
                                                    {8271}let v_1819: bool = not-caught-fail(binder_key_91) in
                                                    {8272}let v_1820: bitstring = (if v_1815 then catch-fail((if v_1817 then (if v_1819 then (early_secret_136,binder_key_91) else fail-any) else fail-any)) else caught-fail) in
                                                    {8273}let v_1821: bool = (not-caught-fail(v_1820) && success?(1-proj-2-tuple(v_1820))) in
                                                    {8274}let kb_91: mac_key = (if v_1821 then 2-proj-2-tuple(v_1820) else caught-fail) in
                                                    {8275}let es_137: bitstring = (if v_1821 then 1-proj-2-tuple(v_1820) else caught-fail) in
                                                    {8276}let v_1822: bitstring = (if not(v_1815) then catch-fail(psk_data'_37) else caught-fail) in
                                                    {8277}let v_1823: bool = (not-caught-fail(v_1822) && success?(1-proj-4-tuple(v_1822))) in
                                                    {8278}let is_safe_83: bool = (if v_1823 then 4-proj-4-tuple(v_1822) else caught-fail) in
                                                    {8279}let es_138: bitstring = (if v_1823 then 3-proj-4-tuple(v_1822) else caught-fail) in
                                                    {8280}let id_96: identityPsk = (if v_1823 then 2-proj-4-tuple(v_1822) else caught-fail) in
                                                    {8281}let psk_205: preSharedKey = (if v_1823 then 1-proj-4-tuple(v_1822) else caught-fail) in
                                                    {8282}let (psk_206: preSharedKey,early_secret_137: bitstring,valid_43: bool,safe_psk_49: bool) = (if v_1815 then (if v_1821 then (NoPsk,es_137,true,false) else fail-any) else (if v_1823 then (psk_205,es_138,((psk_205 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_94)),is_safe_83) else fail-any)) in
                                                    {8283}event Client_PSKChoosen(id_client_5,psk_206,safe_psk_49);
                                                    {8284}if valid_43 then
                                                    (
                                                        {8285}let gxy_88: element = catch-fail(dh_decap_fun(g_50,gy_44,x_571)) in
                                                        {8286}let v_1824: bool = not-caught-fail(gxy_88) in
                                                        {8287}new s_189[]: seed;
                                                        {8288}let gxy_89: element = (if v_1824 then gxy_88 else dh_f(s_189)) in
                                                        {8289}event Client_DH_gxy(id_client_5,gxy_89);
                                                        {8290}let l_503: label = tls13_derived in
                                                        {8291}let m_180: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {8292}let v_1825: bool = not-caught-fail(m_180) in
                                                        {8293}let h_482: bitstring = (if v_1825 then catch-fail(hash(@8_tls_h,m_180)) else caught-fail) in
                                                        {8294}let v_1826: bool = not-caught-fail(h_482) in
                                                        {8295}let x_573: bitstring = (if v_1826 then (l_503,h_482) else caught-fail) in
                                                        {8296}let extra_96: bitstring = catch-fail((if v_1825 then (if v_1826 then hmac(@8_tls_h,early_secret_137,x_573) else fail-any) else fail-any)) in
                                                        {8297}let v_1827: bool = not-caught-fail(extra_96) in
                                                        {8298}let handshake_secret_44: bitstring = (if v_1827 then hmac(@8_tls_h,extra_96,gxy_89) else fail-any) in
                                                        {8299}let l_504: label = tls13_derived in
                                                        {8300}let m_181: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {8301}let v_1828: bool = not-caught-fail(m_181) in
                                                        {8302}let h_483: bitstring = (if v_1828 then catch-fail(hash(@8_tls_h,m_181)) else caught-fail) in
                                                        {8303}let v_1829: bool = not-caught-fail(h_483) in
                                                        {8304}let x_574: bitstring = (if v_1829 then (l_504,h_483) else caught-fail) in
                                                        {8305}let extra_97: bitstring = catch-fail((if v_1828 then (if v_1829 then hmac(@8_tls_h,handshake_secret_44,x_574) else fail-any) else fail-any)) in
                                                        {8306}let v_1830: bool = not-caught-fail(extra_97) in
                                                        {8307}let k_184: bitstring = (if v_1830 then zero else caught-fail) in
                                                        {8308}let master_secret_95: bitstring = (if v_1830 then catch-fail(hmac(@8_tls_h,handshake_secret_44,k_184)) else caught-fail) in
                                                        {8309}let v_1831: bool = not-caught-fail(master_secret_95) in
                                                        {8310}let l_505: label = (if v_1831 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {8311}let h_484: bitstring = (if v_1831 then catch-fail(hash(@8_tls_h,cur_log2_93)) else caught-fail) in
                                                        {8312}let v_1832: bool = not-caught-fail(h_484) in
                                                        {8313}let x_575: bitstring = (if v_1832 then (l_505,h_484) else caught-fail) in
                                                        {8314}let client_hts_44: bitstring = (if v_1831 then catch-fail((if v_1832 then hmac(@8_tls_h,handshake_secret_44,x_575) else fail-any)) else caught-fail) in
                                                        {8315}let v_1833: bool = not-caught-fail(client_hts_44) in
                                                        {8316}let l_506: label = (if v_1833 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {8317}let h_485: bitstring = (if v_1833 then catch-fail(hash(@8_tls_h,cur_log2_93)) else caught-fail) in
                                                        {8318}let v_1834: bool = not-caught-fail(h_485) in
                                                        {8319}let x_576: bitstring = (if v_1834 then (l_506,h_485) else caught-fail) in
                                                        {8320}let server_hts_44: bitstring = (if v_1833 then catch-fail((if v_1834 then hmac(@8_tls_h,handshake_secret_44,x_576) else fail-any)) else caught-fail) in
                                                        {8321}let v_1835: bool = not-caught-fail(server_hts_44) in
                                                        {8322}let l_507: label = (if v_1835 then tls13_key else caught-fail) in
                                                        {8323}let h_486: bitstring = (if v_1835 then zero else caught-fail) in
                                                        {8324}let x_577: bitstring = (if v_1835 then (l_507,h_486) else caught-fail) in
                                                        {8325}let client_wkh_44: bitstring = (if v_1835 then catch-fail(hmac(@8_tls_h,client_hts_44,x_577)) else caught-fail) in
                                                        {8326}let v_1836: bool = not-caught-fail(client_wkh_44) in
                                                        {8327}let l_508: label = (if v_1836 then tls13_key else caught-fail) in
                                                        {8328}let h_487: bitstring = (if v_1836 then zero else caught-fail) in
                                                        {8329}let x_578: bitstring = (if v_1836 then (l_508,h_487) else caught-fail) in
                                                        {8330}let server_wkh_44: bitstring = (if v_1836 then catch-fail(hmac(@8_tls_h,server_hts_44,x_578)) else caught-fail) in
                                                        {8331}let v_1837: bool = not-caught-fail(server_wkh_44) in
                                                        {8332}let l_509: label = (if v_1837 then tls13_finished else caught-fail) in
                                                        {8333}let h_488: bitstring = (if v_1837 then zero else caught-fail) in
                                                        {8334}let x_579: bitstring = (if v_1837 then (l_509,h_488) else caught-fail) in
                                                        {8335}let client_fk_44: bitstring = (if v_1837 then catch-fail(hmac(@8_tls_h,client_hts_44,x_579)) else caught-fail) in
                                                        {8336}let v_1838: bool = not-caught-fail(client_fk_44) in
                                                        {8337}let l_510: label = (if v_1838 then tls13_finished else caught-fail) in
                                                        {8338}let h_489: bitstring = (if v_1838 then zero else caught-fail) in
                                                        {8339}let x_580: bitstring = (if v_1838 then (l_510,h_489) else caught-fail) in
                                                        {8340}let server_fk_44: bitstring = (if v_1838 then catch-fail(hmac(@8_tls_h,server_hts_44,x_580)) else caught-fail) in
                                                        {8341}let v_1839: bool = not-caught-fail(server_fk_44) in
                                                        {8342}let (master_secret_96: bitstring,chk_51: aead_key,shk_50: aead_key,cfin_51: mac_key,sfin_50: mac_key) = (if v_1830 then (if v_1831 then (if v_1833 then (if v_1835 then (if v_1836 then (if v_1837 then (if v_1838 then (if v_1839 then (master_secret_95,client_wkh_44,server_wkh_44,client_fk_44,server_fk_44) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {8343}event Client_chk(id_client_5,chk_51);
                                                        {8344}event Client_shk(id_client_5,shk_50);
                                                        {8345}event Client_cfin(id_client_5,cfin_51);
                                                        {8346}event Client_sfin(id_client_5,sfin_50);
                                                        {8347}in(io, enc_ee_msg_43: bitstring);
                                                        {8348}let ee_msg_48: msg = aead_dec(@8_tls_a,shk_50,0,zero,enc_ee_msg_43) in
                                                        {8349}let EE(ech_ee_43: echExt,extra_ee_43: extraExt) = ee_msg_48 in
                                                        {8350}let cur_log2_94: bitstring = (cur_log2_93,ee_msg_48) in
                                                        {8351}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_27,sr_54,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_206,safe_psk_49,@8_comp_psk,master_secret_96,chk_51,0,shk_50,1,cfin_51,sfin_50,cur_log2_94)))
                                                    )
                                                    else
                                                        {8352}out(io, illegal_parameter)
                                                )
                                                else
                                                    {8353}out(io, illegal_parameter)
                                        )
                                        else
                                            {8354}out(io, unexpected_message)
                                )
                                else
                                    {8356}let psk_207: preSharedKey = NoPsk in
                                    {8357}let s_190: bitstring = zero in
                                    {8358}let k_185: bitstring = catch-fail(psk2b(psk_207)) in
                                    {8359}let v_1840: bool = not-caught-fail(k_185) in
                                    {8360}let early_secret_138: bitstring = catch-fail((if v_1840 then hmac(@8_tls_h,s_190,k_185) else fail-any)) in
                                    {8361}let v_1841: bool = not-caught-fail(early_secret_138) in
                                    {8362}let l_511: label = (if v_1841 then tls13_ext_res_binder else caught-fail) in
                                    {8363}let m_182: bitstring = (if v_1841 then zero else caught-fail) in
                                    {8364}let h_490: bitstring = (if v_1841 then catch-fail(hash(@8_tls_h,m_182)) else caught-fail) in
                                    {8365}let v_1842: bool = not-caught-fail(h_490) in
                                    {8366}let x_581: bitstring = (if v_1842 then (l_511,h_490) else caught-fail) in
                                    {8367}let binder_key_92: bitstring = (if v_1841 then catch-fail((if v_1842 then hmac(@8_tls_h,early_secret_138,x_581) else fail-any)) else caught-fail) in
                                    {8368}let v_1843: bool = not-caught-fail(binder_key_92) in
                                    {8369}let v_1844: bitstring = catch-fail((if v_1841 then (if v_1843 then (early_secret_138,binder_key_92) else fail-any) else fail-any)) in
                                    {8370}let v_1845: bool = (not-caught-fail(v_1844) && success?(1-proj-2-tuple(v_1844))) in
                                    {8371}let kb_92: mac_key = (if v_1845 then 2-proj-2-tuple(v_1844) else caught-fail) in
                                    {8372}let es_139: bitstring = (if v_1845 then 1-proj-2-tuple(v_1844) else caught-fail) in
                                    {8373}let v_1846: bitstring = catch-fail((if v_1845 then (empty_psk_ext,(NoPsk,zero,es_139,false)) else fail-any)) in
                                    {8374}let v_1847: bool = (not-caught-fail(v_1846) && success?(1-proj-2-tuple(v_1846))) in
                                    {8375}let psk_data_49: bitstring = (if v_1847 then 2-proj-2-tuple(v_1846) else caught-fail) in
                                    {8376}let psk_ext_95: preSharedKeyExt = (if v_1847 then 1-proj-2-tuple(v_1846) else caught-fail) in
                                    {8377}let o_offer_34: params = (if v_1847 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_9,SNI(o_dom_11),o_ech_ext_16,empty_extra_ext,psk_ext_95) else caught-fail) in
                                    {8378}let (client_hello'_26: msg,cr'_28: bytes32,kex_data'_23: bitstring,psk_data'_38: bitstring) = (if v_1847 then (CH(o_cr_13,o_offer_34),o_cr_13,kex_data_10,psk_data_49) else fail-any) in
                                    {8379}out(io, client_hello'_26);
                                    {8380}let cur_log_OU1_HRR_OU2_14: bitstring = (cur_log_OU1_HRR_3,client_hello'_26) in
                                    {8381}in(io, server_hello'_35: msg);
                                    {8382}let SH(sr'_23: bytes32,mode'_23: params) = server_hello'_35 in
                                    (
                                        {8383}if (sr'_23 = B32(HRR24,HRR8)) then
                                            {8384}out(io, unexpected_message)
                                        else
                                            {8385}let (x_582: bitstring,g_51: group) = kex_data'_23 in
                                            {8386}let (psk_offer_44: preSharedKey,id_offer_44: identityPsk,es_offer_44: bitstring,is_safe_offer_44: bool) = psk_data'_38 in
                                            {8387}event Client_PSKOffer(id_client_5,psk_offer_44,id_offer_44,is_safe_offer_44);
                                            {8388}event Client_Rand_client(id_client_5,cr'_28);
                                            {8389}event Client_DH_client(id_client_5,dh_pub(g_51,x_582));
                                            {8390}event Client_server_domain(id_client_5,o_dom_8);
                                            {8391}let SH(sr_55: bytes32,mode_51: params) = server_hello'_35 in
                                            {8392}event Client_Rand_server(id_client_5,sr_55);
                                            {8393}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_51,gy_45: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_96: preSharedKeyExt) = mode_51 in
                                            (
                                                {8394}let cur_log2_95: bitstring = (cur_log_OU1_HRR_OU2_14,server_hello'_35) in
                                                {8395}event Client_DH_server(id_client_5,gy_45);
                                                {8396}let v_1848: bool = (psk_ext_96 = empty_psk_ext) in
                                                {8397}let psk_208: preSharedKey = (if v_1848 then NoPsk else caught-fail) in
                                                {8398}let s_191: bitstring = (if v_1848 then zero else caught-fail) in
                                                {8399}let k_186: bitstring = (if v_1848 then catch-fail(psk2b(psk_208)) else caught-fail) in
                                                {8400}let v_1849: bool = not-caught-fail(k_186) in
                                                {8401}let early_secret_139: bitstring = (if v_1848 then catch-fail((if v_1849 then hmac(@8_tls_h,s_191,k_186) else fail-any)) else caught-fail) in
                                                {8402}let v_1850: bool = not-caught-fail(early_secret_139) in
                                                {8403}let l_512: label = (if v_1850 then tls13_ext_res_binder else caught-fail) in
                                                {8404}let m_183: bitstring = (if v_1850 then zero else caught-fail) in
                                                {8405}let h_491: bitstring = (if v_1850 then catch-fail(hash(@8_tls_h,m_183)) else caught-fail) in
                                                {8406}let v_1851: bool = not-caught-fail(h_491) in
                                                {8407}let x_583: bitstring = (if v_1851 then (l_512,h_491) else caught-fail) in
                                                {8408}let binder_key_93: bitstring = (if v_1850 then catch-fail((if v_1851 then hmac(@8_tls_h,early_secret_139,x_583) else fail-any)) else caught-fail) in
                                                {8409}let v_1852: bool = not-caught-fail(binder_key_93) in
                                                {8410}let v_1853: bitstring = (if v_1848 then catch-fail((if v_1850 then (if v_1852 then (early_secret_139,binder_key_93) else fail-any) else fail-any)) else caught-fail) in
                                                {8411}let v_1854: bool = (not-caught-fail(v_1853) && success?(1-proj-2-tuple(v_1853))) in
                                                {8412}let kb_93: mac_key = (if v_1854 then 2-proj-2-tuple(v_1853) else caught-fail) in
                                                {8413}let es_140: bitstring = (if v_1854 then 1-proj-2-tuple(v_1853) else caught-fail) in
                                                {8414}let v_1855: bitstring = (if not(v_1848) then catch-fail(psk_data'_38) else caught-fail) in
                                                {8415}let v_1856: bool = (not-caught-fail(v_1855) && success?(1-proj-4-tuple(v_1855))) in
                                                {8416}let is_safe_84: bool = (if v_1856 then 4-proj-4-tuple(v_1855) else caught-fail) in
                                                {8417}let es_141: bitstring = (if v_1856 then 3-proj-4-tuple(v_1855) else caught-fail) in
                                                {8418}let id_97: identityPsk = (if v_1856 then 2-proj-4-tuple(v_1855) else caught-fail) in
                                                {8419}let psk_209: preSharedKey = (if v_1856 then 1-proj-4-tuple(v_1855) else caught-fail) in
                                                {8420}let (psk_210: preSharedKey,early_secret_140: bitstring,valid_44: bool,safe_psk_50: bool) = (if v_1848 then (if v_1854 then (NoPsk,es_140,true,false) else fail-any) else (if v_1856 then (psk_209,es_141,((psk_209 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_96)),is_safe_84) else fail-any)) in
                                                {8421}event Client_PSKChoosen(id_client_5,psk_210,safe_psk_50);
                                                {8422}if valid_44 then
                                                (
                                                    {8423}let gxy_90: element = catch-fail(dh_decap_fun(g_51,gy_45,x_582)) in
                                                    {8424}let v_1857: bool = not-caught-fail(gxy_90) in
                                                    {8425}new s_192[]: seed;
                                                    {8426}let gxy_91: element = (if v_1857 then gxy_90 else dh_f(s_192)) in
                                                    {8427}event Client_DH_gxy(id_client_5,gxy_91);
                                                    {8428}let l_513: label = tls13_derived in
                                                    {8429}let m_184: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {8430}let v_1858: bool = not-caught-fail(m_184) in
                                                    {8431}let h_492: bitstring = (if v_1858 then catch-fail(hash(@8_tls_h,m_184)) else caught-fail) in
                                                    {8432}let v_1859: bool = not-caught-fail(h_492) in
                                                    {8433}let x_584: bitstring = (if v_1859 then (l_513,h_492) else caught-fail) in
                                                    {8434}let extra_98: bitstring = catch-fail((if v_1858 then (if v_1859 then hmac(@8_tls_h,early_secret_140,x_584) else fail-any) else fail-any)) in
                                                    {8435}let v_1860: bool = not-caught-fail(extra_98) in
                                                    {8436}let handshake_secret_45: bitstring = (if v_1860 then hmac(@8_tls_h,extra_98,gxy_91) else fail-any) in
                                                    {8437}let l_514: label = tls13_derived in
                                                    {8438}let m_185: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {8439}let v_1861: bool = not-caught-fail(m_185) in
                                                    {8440}let h_493: bitstring = (if v_1861 then catch-fail(hash(@8_tls_h,m_185)) else caught-fail) in
                                                    {8441}let v_1862: bool = not-caught-fail(h_493) in
                                                    {8442}let x_585: bitstring = (if v_1862 then (l_514,h_493) else caught-fail) in
                                                    {8443}let extra_99: bitstring = catch-fail((if v_1861 then (if v_1862 then hmac(@8_tls_h,handshake_secret_45,x_585) else fail-any) else fail-any)) in
                                                    {8444}let v_1863: bool = not-caught-fail(extra_99) in
                                                    {8445}let k_187: bitstring = (if v_1863 then zero else caught-fail) in
                                                    {8446}let master_secret_97: bitstring = (if v_1863 then catch-fail(hmac(@8_tls_h,handshake_secret_45,k_187)) else caught-fail) in
                                                    {8447}let v_1864: bool = not-caught-fail(master_secret_97) in
                                                    {8448}let l_515: label = (if v_1864 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {8449}let h_494: bitstring = (if v_1864 then catch-fail(hash(@8_tls_h,cur_log2_95)) else caught-fail) in
                                                    {8450}let v_1865: bool = not-caught-fail(h_494) in
                                                    {8451}let x_586: bitstring = (if v_1865 then (l_515,h_494) else caught-fail) in
                                                    {8452}let client_hts_45: bitstring = (if v_1864 then catch-fail((if v_1865 then hmac(@8_tls_h,handshake_secret_45,x_586) else fail-any)) else caught-fail) in
                                                    {8453}let v_1866: bool = not-caught-fail(client_hts_45) in
                                                    {8454}let l_516: label = (if v_1866 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {8455}let h_495: bitstring = (if v_1866 then catch-fail(hash(@8_tls_h,cur_log2_95)) else caught-fail) in
                                                    {8456}let v_1867: bool = not-caught-fail(h_495) in
                                                    {8457}let x_587: bitstring = (if v_1867 then (l_516,h_495) else caught-fail) in
                                                    {8458}let server_hts_45: bitstring = (if v_1866 then catch-fail((if v_1867 then hmac(@8_tls_h,handshake_secret_45,x_587) else fail-any)) else caught-fail) in
                                                    {8459}let v_1868: bool = not-caught-fail(server_hts_45) in
                                                    {8460}let l_517: label = (if v_1868 then tls13_key else caught-fail) in
                                                    {8461}let h_496: bitstring = (if v_1868 then zero else caught-fail) in
                                                    {8462}let x_588: bitstring = (if v_1868 then (l_517,h_496) else caught-fail) in
                                                    {8463}let client_wkh_45: bitstring = (if v_1868 then catch-fail(hmac(@8_tls_h,client_hts_45,x_588)) else caught-fail) in
                                                    {8464}let v_1869: bool = not-caught-fail(client_wkh_45) in
                                                    {8465}let l_518: label = (if v_1869 then tls13_key else caught-fail) in
                                                    {8466}let h_497: bitstring = (if v_1869 then zero else caught-fail) in
                                                    {8467}let x_589: bitstring = (if v_1869 then (l_518,h_497) else caught-fail) in
                                                    {8468}let server_wkh_45: bitstring = (if v_1869 then catch-fail(hmac(@8_tls_h,server_hts_45,x_589)) else caught-fail) in
                                                    {8469}let v_1870: bool = not-caught-fail(server_wkh_45) in
                                                    {8470}let l_519: label = (if v_1870 then tls13_finished else caught-fail) in
                                                    {8471}let h_498: bitstring = (if v_1870 then zero else caught-fail) in
                                                    {8472}let x_590: bitstring = (if v_1870 then (l_519,h_498) else caught-fail) in
                                                    {8473}let client_fk_45: bitstring = (if v_1870 then catch-fail(hmac(@8_tls_h,client_hts_45,x_590)) else caught-fail) in
                                                    {8474}let v_1871: bool = not-caught-fail(client_fk_45) in
                                                    {8475}let l_520: label = (if v_1871 then tls13_finished else caught-fail) in
                                                    {8476}let h_499: bitstring = (if v_1871 then zero else caught-fail) in
                                                    {8477}let x_591: bitstring = (if v_1871 then (l_520,h_499) else caught-fail) in
                                                    {8478}let server_fk_45: bitstring = (if v_1871 then catch-fail(hmac(@8_tls_h,server_hts_45,x_591)) else caught-fail) in
                                                    {8479}let v_1872: bool = not-caught-fail(server_fk_45) in
                                                    {8480}let (master_secret_98: bitstring,chk_52: aead_key,shk_51: aead_key,cfin_52: mac_key,sfin_51: mac_key) = (if v_1863 then (if v_1864 then (if v_1866 then (if v_1868 then (if v_1869 then (if v_1870 then (if v_1871 then (if v_1872 then (master_secret_97,client_wkh_45,server_wkh_45,client_fk_45,server_fk_45) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {8481}event Client_chk(id_client_5,chk_52);
                                                    {8482}event Client_shk(id_client_5,shk_51);
                                                    {8483}event Client_cfin(id_client_5,cfin_52);
                                                    {8484}event Client_sfin(id_client_5,sfin_51);
                                                    {8485}in(io, enc_ee_msg_44: bitstring);
                                                    {8486}let ee_msg_49: msg = aead_dec(@8_tls_a,shk_51,0,zero,enc_ee_msg_44) in
                                                    {8487}let EE(ech_ee_44: echExt,extra_ee_44: extraExt) = ee_msg_49 in
                                                    {8488}let cur_log2_96: bitstring = (cur_log2_95,ee_msg_49) in
                                                    {8489}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_28,sr_55,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_210,safe_psk_50,@8_comp_psk,master_secret_98,chk_52,0,shk_51,1,cfin_52,sfin_51,cur_log2_96)))
                                                )
                                                else
                                                    {8490}out(io, illegal_parameter)
                                            )
                                            else
                                                {8491}out(io, illegal_parameter)
                                    )
                                    else
                                        {8492}out(io, unexpected_message)
                            )
                            else
                                {8493}let psk_211: preSharedKey = NoPsk in
                                {8494}let s_193: bitstring = zero in
                                {8495}let k_188: bitstring = catch-fail(psk2b(psk_211)) in
                                {8496}let v_1873: bool = not-caught-fail(k_188) in
                                {8497}let early_secret_141: bitstring = catch-fail((if v_1873 then hmac(@8_tls_h,s_193,k_188) else fail-any)) in
                                {8498}let v_1874: bool = not-caught-fail(early_secret_141) in
                                {8499}let l_521: label = (if v_1874 then tls13_ext_res_binder else caught-fail) in
                                {8500}let m_186: bitstring = (if v_1874 then zero else caught-fail) in
                                {8501}let h_500: bitstring = (if v_1874 then catch-fail(hash(@8_tls_h,m_186)) else caught-fail) in
                                {8502}let v_1875: bool = not-caught-fail(h_500) in
                                {8503}let x_592: bitstring = (if v_1875 then (l_521,h_500) else caught-fail) in
                                {8504}let binder_key_94: bitstring = (if v_1874 then catch-fail((if v_1875 then hmac(@8_tls_h,early_secret_141,x_592) else fail-any)) else caught-fail) in
                                {8505}let v_1876: bool = not-caught-fail(binder_key_94) in
                                {8506}let v_1877: bitstring = catch-fail((if v_1874 then (if v_1876 then (early_secret_141,binder_key_94) else fail-any) else fail-any)) in
                                {8507}let v_1878: bool = (not-caught-fail(v_1877) && success?(1-proj-2-tuple(v_1877))) in
                                {8508}let kb_94: mac_key = (if v_1878 then 2-proj-2-tuple(v_1877) else caught-fail) in
                                {8509}let es_142: bitstring = (if v_1878 then 1-proj-2-tuple(v_1877) else caught-fail) in
                                {8510}let v_1879: preSharedKeyExt = (if v_1878 then catch-fail(o_psk_ext_16) else caught-fail) in
                                {8511}let v_1880: bool = (not-caught-fail(v_1879) && success?(1-proj-client_psk_ext(v_1879))) in
                                {8512}let fake_binder_19: bitstring = (if v_1880 then 2-proj-client_psk_ext(v_1879) else caught-fail) in
                                {8513}let fake_id_19: identityPsk = (if v_1880 then 1-proj-client_psk_ext(v_1879) else caught-fail) in
                                {8514}new fake_binder'_3[]: bitstring;
                                {8515}let v_1881: bitstring = catch-fail((if v_1878 then (if v_1880 then (client_psk_ext(fake_id_19,fake_binder'_3),(NoPsk,zero,es_142,false)) else (empty_psk_ext,(NoPsk,zero,es_142,false))) else fail-any)) in
                                {8516}let v_1882: bool = (not-caught-fail(v_1881) && success?(1-proj-2-tuple(v_1881))) in
                                {8517}let psk_data_50: bitstring = (if v_1882 then 2-proj-2-tuple(v_1881) else caught-fail) in
                                {8518}let psk_ext_97: preSharedKeyExt = (if v_1882 then 1-proj-2-tuple(v_1881) else caught-fail) in
                                {8519}let o_offer_35: params = (if v_1882 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_9,SNI(o_dom_11),o_ech_ext_16,empty_extra_ext,psk_ext_97) else caught-fail) in
                                {8520}let (client_hello'_27: msg,cr'_29: bytes32,kex_data'_24: bitstring,psk_data'_39: bitstring) = (if v_1882 then (CH(o_cr_13,o_offer_35),o_cr_13,kex_data_10,psk_data_50) else fail-any) in
                                {8521}out(io, client_hello'_27);
                                {8522}let cur_log_OU1_HRR_OU2_15: bitstring = (cur_log_OU1_HRR_3,client_hello'_27) in
                                {8523}in(io, server_hello'_36: msg);
                                {8524}let SH(sr'_24: bytes32,mode'_24: params) = server_hello'_36 in
                                (
                                    {8525}if (sr'_24 = B32(HRR24,HRR8)) then
                                        {8526}out(io, unexpected_message)
                                    else
                                        {8527}let (x_593: bitstring,g_52: group) = kex_data'_24 in
                                        {8528}let (psk_offer_45: preSharedKey,id_offer_45: identityPsk,es_offer_45: bitstring,is_safe_offer_45: bool) = psk_data'_39 in
                                        {8529}event Client_PSKOffer(id_client_5,psk_offer_45,id_offer_45,is_safe_offer_45);
                                        {8530}event Client_Rand_client(id_client_5,cr'_29);
                                        {8531}event Client_DH_client(id_client_5,dh_pub(g_52,x_593));
                                        {8532}event Client_server_domain(id_client_5,o_dom_8);
                                        {8533}let SH(sr_56: bytes32,mode_52: params) = server_hello'_36 in
                                        {8534}event Client_Rand_server(id_client_5,sr_56);
                                        {8535}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_52,gy_46: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_98: preSharedKeyExt) = mode_52 in
                                        (
                                            {8536}let cur_log2_97: bitstring = (cur_log_OU1_HRR_OU2_15,server_hello'_36) in
                                            {8537}event Client_DH_server(id_client_5,gy_46);
                                            {8538}let v_1883: bool = (psk_ext_98 = empty_psk_ext) in
                                            {8539}let psk_212: preSharedKey = (if v_1883 then NoPsk else caught-fail) in
                                            {8540}let s_194: bitstring = (if v_1883 then zero else caught-fail) in
                                            {8541}let k_189: bitstring = (if v_1883 then catch-fail(psk2b(psk_212)) else caught-fail) in
                                            {8542}let v_1884: bool = not-caught-fail(k_189) in
                                            {8543}let early_secret_142: bitstring = (if v_1883 then catch-fail((if v_1884 then hmac(@8_tls_h,s_194,k_189) else fail-any)) else caught-fail) in
                                            {8544}let v_1885: bool = not-caught-fail(early_secret_142) in
                                            {8545}let l_522: label = (if v_1885 then tls13_ext_res_binder else caught-fail) in
                                            {8546}let m_187: bitstring = (if v_1885 then zero else caught-fail) in
                                            {8547}let h_501: bitstring = (if v_1885 then catch-fail(hash(@8_tls_h,m_187)) else caught-fail) in
                                            {8548}let v_1886: bool = not-caught-fail(h_501) in
                                            {8549}let x_594: bitstring = (if v_1886 then (l_522,h_501) else caught-fail) in
                                            {8550}let binder_key_95: bitstring = (if v_1885 then catch-fail((if v_1886 then hmac(@8_tls_h,early_secret_142,x_594) else fail-any)) else caught-fail) in
                                            {8551}let v_1887: bool = not-caught-fail(binder_key_95) in
                                            {8552}let v_1888: bitstring = (if v_1883 then catch-fail((if v_1885 then (if v_1887 then (early_secret_142,binder_key_95) else fail-any) else fail-any)) else caught-fail) in
                                            {8553}let v_1889: bool = (not-caught-fail(v_1888) && success?(1-proj-2-tuple(v_1888))) in
                                            {8554}let kb_95: mac_key = (if v_1889 then 2-proj-2-tuple(v_1888) else caught-fail) in
                                            {8555}let es_143: bitstring = (if v_1889 then 1-proj-2-tuple(v_1888) else caught-fail) in
                                            {8556}let v_1890: bitstring = (if not(v_1883) then catch-fail(psk_data'_39) else caught-fail) in
                                            {8557}let v_1891: bool = (not-caught-fail(v_1890) && success?(1-proj-4-tuple(v_1890))) in
                                            {8558}let is_safe_85: bool = (if v_1891 then 4-proj-4-tuple(v_1890) else caught-fail) in
                                            {8559}let es_144: bitstring = (if v_1891 then 3-proj-4-tuple(v_1890) else caught-fail) in
                                            {8560}let id_98: identityPsk = (if v_1891 then 2-proj-4-tuple(v_1890) else caught-fail) in
                                            {8561}let psk_213: preSharedKey = (if v_1891 then 1-proj-4-tuple(v_1890) else caught-fail) in
                                            {8562}let (psk_214: preSharedKey,early_secret_143: bitstring,valid_45: bool,safe_psk_51: bool) = (if v_1883 then (if v_1889 then (NoPsk,es_143,true,false) else fail-any) else (if v_1891 then (psk_213,es_144,((psk_213 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_98)),is_safe_85) else fail-any)) in
                                            {8563}event Client_PSKChoosen(id_client_5,psk_214,safe_psk_51);
                                            {8564}if valid_45 then
                                            (
                                                {8565}let gxy_92: element = catch-fail(dh_decap_fun(g_52,gy_46,x_593)) in
                                                {8566}let v_1892: bool = not-caught-fail(gxy_92) in
                                                {8567}new s_195[]: seed;
                                                {8568}let gxy_93: element = (if v_1892 then gxy_92 else dh_f(s_195)) in
                                                {8569}event Client_DH_gxy(id_client_5,gxy_93);
                                                {8570}let l_523: label = tls13_derived in
                                                {8571}let m_188: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                {8572}let v_1893: bool = not-caught-fail(m_188) in
                                                {8573}let h_502: bitstring = (if v_1893 then catch-fail(hash(@8_tls_h,m_188)) else caught-fail) in
                                                {8574}let v_1894: bool = not-caught-fail(h_502) in
                                                {8575}let x_595: bitstring = (if v_1894 then (l_523,h_502) else caught-fail) in
                                                {8576}let extra_100: bitstring = catch-fail((if v_1893 then (if v_1894 then hmac(@8_tls_h,early_secret_143,x_595) else fail-any) else fail-any)) in
                                                {8577}let v_1895: bool = not-caught-fail(extra_100) in
                                                {8578}let handshake_secret_46: bitstring = (if v_1895 then hmac(@8_tls_h,extra_100,gxy_93) else fail-any) in
                                                {8579}let l_524: label = tls13_derived in
                                                {8580}let m_189: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                {8581}let v_1896: bool = not-caught-fail(m_189) in
                                                {8582}let h_503: bitstring = (if v_1896 then catch-fail(hash(@8_tls_h,m_189)) else caught-fail) in
                                                {8583}let v_1897: bool = not-caught-fail(h_503) in
                                                {8584}let x_596: bitstring = (if v_1897 then (l_524,h_503) else caught-fail) in
                                                {8585}let extra_101: bitstring = catch-fail((if v_1896 then (if v_1897 then hmac(@8_tls_h,handshake_secret_46,x_596) else fail-any) else fail-any)) in
                                                {8586}let v_1898: bool = not-caught-fail(extra_101) in
                                                {8587}let k_190: bitstring = (if v_1898 then zero else caught-fail) in
                                                {8588}let master_secret_99: bitstring = (if v_1898 then catch-fail(hmac(@8_tls_h,handshake_secret_46,k_190)) else caught-fail) in
                                                {8589}let v_1899: bool = not-caught-fail(master_secret_99) in
                                                {8590}let l_525: label = (if v_1899 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {8591}let h_504: bitstring = (if v_1899 then catch-fail(hash(@8_tls_h,cur_log2_97)) else caught-fail) in
                                                {8592}let v_1900: bool = not-caught-fail(h_504) in
                                                {8593}let x_597: bitstring = (if v_1900 then (l_525,h_504) else caught-fail) in
                                                {8594}let client_hts_46: bitstring = (if v_1899 then catch-fail((if v_1900 then hmac(@8_tls_h,handshake_secret_46,x_597) else fail-any)) else caught-fail) in
                                                {8595}let v_1901: bool = not-caught-fail(client_hts_46) in
                                                {8596}let l_526: label = (if v_1901 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {8597}let h_505: bitstring = (if v_1901 then catch-fail(hash(@8_tls_h,cur_log2_97)) else caught-fail) in
                                                {8598}let v_1902: bool = not-caught-fail(h_505) in
                                                {8599}let x_598: bitstring = (if v_1902 then (l_526,h_505) else caught-fail) in
                                                {8600}let server_hts_46: bitstring = (if v_1901 then catch-fail((if v_1902 then hmac(@8_tls_h,handshake_secret_46,x_598) else fail-any)) else caught-fail) in
                                                {8601}let v_1903: bool = not-caught-fail(server_hts_46) in
                                                {8602}let l_527: label = (if v_1903 then tls13_key else caught-fail) in
                                                {8603}let h_506: bitstring = (if v_1903 then zero else caught-fail) in
                                                {8604}let x_599: bitstring = (if v_1903 then (l_527,h_506) else caught-fail) in
                                                {8605}let client_wkh_46: bitstring = (if v_1903 then catch-fail(hmac(@8_tls_h,client_hts_46,x_599)) else caught-fail) in
                                                {8606}let v_1904: bool = not-caught-fail(client_wkh_46) in
                                                {8607}let l_528: label = (if v_1904 then tls13_key else caught-fail) in
                                                {8608}let h_507: bitstring = (if v_1904 then zero else caught-fail) in
                                                {8609}let x_600: bitstring = (if v_1904 then (l_528,h_507) else caught-fail) in
                                                {8610}let server_wkh_46: bitstring = (if v_1904 then catch-fail(hmac(@8_tls_h,server_hts_46,x_600)) else caught-fail) in
                                                {8611}let v_1905: bool = not-caught-fail(server_wkh_46) in
                                                {8612}let l_529: label = (if v_1905 then tls13_finished else caught-fail) in
                                                {8613}let h_508: bitstring = (if v_1905 then zero else caught-fail) in
                                                {8614}let x_601: bitstring = (if v_1905 then (l_529,h_508) else caught-fail) in
                                                {8615}let client_fk_46: bitstring = (if v_1905 then catch-fail(hmac(@8_tls_h,client_hts_46,x_601)) else caught-fail) in
                                                {8616}let v_1906: bool = not-caught-fail(client_fk_46) in
                                                {8617}let l_530: label = (if v_1906 then tls13_finished else caught-fail) in
                                                {8618}let h_509: bitstring = (if v_1906 then zero else caught-fail) in
                                                {8619}let x_602: bitstring = (if v_1906 then (l_530,h_509) else caught-fail) in
                                                {8620}let server_fk_46: bitstring = (if v_1906 then catch-fail(hmac(@8_tls_h,server_hts_46,x_602)) else caught-fail) in
                                                {8621}let v_1907: bool = not-caught-fail(server_fk_46) in
                                                {8622}let (master_secret_100: bitstring,chk_53: aead_key,shk_52: aead_key,cfin_53: mac_key,sfin_52: mac_key) = (if v_1898 then (if v_1899 then (if v_1901 then (if v_1903 then (if v_1904 then (if v_1905 then (if v_1906 then (if v_1907 then (master_secret_99,client_wkh_46,server_wkh_46,client_fk_46,server_fk_46) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {8623}event Client_chk(id_client_5,chk_53);
                                                {8624}event Client_shk(id_client_5,shk_52);
                                                {8625}event Client_cfin(id_client_5,cfin_53);
                                                {8626}event Client_sfin(id_client_5,sfin_52);
                                                {8627}in(io, enc_ee_msg_45: bitstring);
                                                {8628}let ee_msg_50: msg = aead_dec(@8_tls_a,shk_52,0,zero,enc_ee_msg_45) in
                                                {8629}let EE(ech_ee_45: echExt,extra_ee_45: extraExt) = ee_msg_50 in
                                                {8630}let cur_log2_98: bitstring = (cur_log2_97,ee_msg_50) in
                                                {8631}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_29,sr_56,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_214,safe_psk_51,@8_comp_psk,master_secret_100,chk_53,0,shk_52,1,cfin_53,sfin_52,cur_log2_98)))
                                            )
                                            else
                                                {8632}out(io, illegal_parameter)
                                        )
                                        else
                                            {8633}out(io, illegal_parameter)
                                )
                                else
                                    {8634}out(io, unexpected_message)
                    )
                    else
                        {8635}let cur_log_25: bitstring = (zero,i_client_hello_17) in
                        {8636}let sh_modified_16: msg = SH(B32(sr24_5,zero8),mode_45) in
                        {8637}let cur_log_sh_16: bitstring = (cur_log_25,sh_modified_16) in
                        {8638}let transcript_ech_conf_16: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_16)) in
                        {8639}let v_1908: bool = not-caught-fail(transcript_ech_conf_16) in
                        {8640}let s_196: bitstring = (if v_1908 then zero else caught-fail) in
                        {8641}let k_191: bitstring = (if v_1908 then catch-fail(b32_2_b(get_random(i_client_hello_17))) else caught-fail) in
                        {8642}let v_1909: bool = not-caught-fail(k_191) in
                        {8643}let k_192: bitstring = (if v_1908 then catch-fail((if v_1909 then hmac(@8_backend_h,s_196,k_191) else fail-any)) else caught-fail) in
                        {8644}let v_1910: bool = not-caught-fail(k_192) in
                        {8645}let l_531: label = (if v_1910 then ech_accept_confirmation else caught-fail) in
                        {8646}let x_603: bitstring = (if v_1910 then (l_531,cur_log_sh_16) else caught-fail) in
                        {8647}let sr8_20: bytes8 = (if v_1908 then catch-fail(crop_into_bytes8((if v_1910 then hmac(@8_backend_h,k_192,x_603) else fail-any))) else caught-fail) in
                        {8648}let v_1911: bool = not-caught-fail(sr8_20) in
                        {8649}if (B32(sr24_5,sr8_16) = (if v_1908 then (if v_1911 then B32(sr24_5,sr8_20) else fail-any) else fail-any)) then
                        (
                            {8650}event ClientEchAcceptance(id_client_5,true);
                            {8651}let cur_log_26: bitstring = (zero,i_client_hello_17) in
                            {8652}let (x_604: bitstring,g_53: group) = i_kex_data_8 in
                            {8653}let (psk_offer_46: preSharedKey,id_offer_46: identityPsk,es_offer_46: bitstring,is_safe_offer_46: bool) = psk_data_43 in
                            {8654}event Client_PSKOffer(id_client_5,psk_offer_46,id_offer_46,is_safe_offer_46);
                            {8655}event Client_Rand_client(id_client_5,i_cr_9);
                            {8656}event Client_DH_client(id_client_5,dh_pub(g_53,x_604));
                            {8657}event Client_server_domain(id_client_5,backend_dom_1);
                            {8658}let SH(sr_57: bytes32,mode_53: params) = server_hello_7 in
                            {8659}event Client_Rand_server(id_client_5,sr_57);
                            {8660}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_53,gy_47: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_99: preSharedKeyExt) = mode_53 in
                            (
                                {8661}let cur_log2_99: bitstring = (cur_log_26,server_hello_7) in
                                {8662}event Client_DH_server(id_client_5,gy_47);
                                {8663}let v_1912: bool = (psk_ext_99 = empty_psk_ext) in
                                {8664}let psk_215: preSharedKey = (if v_1912 then NoPsk else caught-fail) in
                                {8665}let s_197: bitstring = (if v_1912 then zero else caught-fail) in
                                {8666}let k_193: bitstring = (if v_1912 then catch-fail(psk2b(psk_215)) else caught-fail) in
                                {8667}let v_1913: bool = not-caught-fail(k_193) in
                                {8668}let early_secret_144: bitstring = (if v_1912 then catch-fail((if v_1913 then hmac(@8_backend_h,s_197,k_193) else fail-any)) else caught-fail) in
                                {8669}let v_1914: bool = not-caught-fail(early_secret_144) in
                                {8670}let l_532: label = (if v_1914 then tls13_ext_res_binder else caught-fail) in
                                {8671}let m_190: bitstring = (if v_1914 then zero else caught-fail) in
                                {8672}let h_510: bitstring = (if v_1914 then catch-fail(hash(@8_backend_h,m_190)) else caught-fail) in
                                {8673}let v_1915: bool = not-caught-fail(h_510) in
                                {8674}let x_605: bitstring = (if v_1915 then (l_532,h_510) else caught-fail) in
                                {8675}let binder_key_96: bitstring = (if v_1914 then catch-fail((if v_1915 then hmac(@8_backend_h,early_secret_144,x_605) else fail-any)) else caught-fail) in
                                {8676}let v_1916: bool = not-caught-fail(binder_key_96) in
                                {8677}let v_1917: bitstring = (if v_1912 then catch-fail((if v_1914 then (if v_1916 then (early_secret_144,binder_key_96) else fail-any) else fail-any)) else caught-fail) in
                                {8678}let v_1918: bool = (not-caught-fail(v_1917) && success?(1-proj-2-tuple(v_1917))) in
                                {8679}let kb_96: mac_key = (if v_1918 then 2-proj-2-tuple(v_1917) else caught-fail) in
                                {8680}let es_145: bitstring = (if v_1918 then 1-proj-2-tuple(v_1917) else caught-fail) in
                                {8681}let v_1919: bitstring = (if not(v_1912) then catch-fail(psk_data_43) else caught-fail) in
                                {8682}let v_1920: bool = (not-caught-fail(v_1919) && success?(1-proj-4-tuple(v_1919))) in
                                {8683}let is_safe_86: bool = (if v_1920 then 4-proj-4-tuple(v_1919) else caught-fail) in
                                {8684}let es_146: bitstring = (if v_1920 then 3-proj-4-tuple(v_1919) else caught-fail) in
                                {8685}let id_99: identityPsk = (if v_1920 then 2-proj-4-tuple(v_1919) else caught-fail) in
                                {8686}let psk_216: preSharedKey = (if v_1920 then 1-proj-4-tuple(v_1919) else caught-fail) in
                                {8687}let (psk_217: preSharedKey,early_secret_145: bitstring,valid_46: bool,safe_psk_52: bool) = (if v_1912 then (if v_1918 then (NoPsk,es_145,true,false) else fail-any) else (if v_1920 then (psk_216,es_146,((psk_216 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_99)),is_safe_86) else fail-any)) in
                                {8688}event Client_PSKChoosen(id_client_5,psk_217,safe_psk_52);
                                {8689}if valid_46 then
                                (
                                    {8690}let gxy_94: element = catch-fail(dh_decap_fun(g_53,gy_47,x_604)) in
                                    {8691}let v_1921: bool = not-caught-fail(gxy_94) in
                                    {8692}new s_198[]: seed;
                                    {8693}let gxy_95: element = (if v_1921 then gxy_94 else dh_f(s_198)) in
                                    {8694}event Client_DH_gxy(id_client_5,gxy_95);
                                    {8695}let l_533: label = tls13_derived in
                                    {8696}let m_191: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                    {8697}let v_1922: bool = not-caught-fail(m_191) in
                                    {8698}let h_511: bitstring = (if v_1922 then catch-fail(hash(@8_backend_h,m_191)) else caught-fail) in
                                    {8699}let v_1923: bool = not-caught-fail(h_511) in
                                    {8700}let x_606: bitstring = (if v_1923 then (l_533,h_511) else caught-fail) in
                                    {8701}let extra_102: bitstring = catch-fail((if v_1922 then (if v_1923 then hmac(@8_backend_h,early_secret_145,x_606) else fail-any) else fail-any)) in
                                    {8702}let v_1924: bool = not-caught-fail(extra_102) in
                                    {8703}let handshake_secret_47: bitstring = (if v_1924 then hmac(@8_backend_h,extra_102,gxy_95) else fail-any) in
                                    {8704}let l_534: label = tls13_derived in
                                    {8705}let m_192: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                    {8706}let v_1925: bool = not-caught-fail(m_192) in
                                    {8707}let h_512: bitstring = (if v_1925 then catch-fail(hash(@8_backend_h,m_192)) else caught-fail) in
                                    {8708}let v_1926: bool = not-caught-fail(h_512) in
                                    {8709}let x_607: bitstring = (if v_1926 then (l_534,h_512) else caught-fail) in
                                    {8710}let extra_103: bitstring = catch-fail((if v_1925 then (if v_1926 then hmac(@8_backend_h,handshake_secret_47,x_607) else fail-any) else fail-any)) in
                                    {8711}let v_1927: bool = not-caught-fail(extra_103) in
                                    {8712}let k_194: bitstring = (if v_1927 then zero else caught-fail) in
                                    {8713}let master_secret_101: bitstring = (if v_1927 then catch-fail(hmac(@8_backend_h,handshake_secret_47,k_194)) else caught-fail) in
                                    {8714}let v_1928: bool = not-caught-fail(master_secret_101) in
                                    {8715}let l_535: label = (if v_1928 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {8716}let h_513: bitstring = (if v_1928 then catch-fail(hash(@8_backend_h,cur_log2_99)) else caught-fail) in
                                    {8717}let v_1929: bool = not-caught-fail(h_513) in
                                    {8718}let x_608: bitstring = (if v_1929 then (l_535,h_513) else caught-fail) in
                                    {8719}let client_hts_47: bitstring = (if v_1928 then catch-fail((if v_1929 then hmac(@8_backend_h,handshake_secret_47,x_608) else fail-any)) else caught-fail) in
                                    {8720}let v_1930: bool = not-caught-fail(client_hts_47) in
                                    {8721}let l_536: label = (if v_1930 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {8722}let h_514: bitstring = (if v_1930 then catch-fail(hash(@8_backend_h,cur_log2_99)) else caught-fail) in
                                    {8723}let v_1931: bool = not-caught-fail(h_514) in
                                    {8724}let x_609: bitstring = (if v_1931 then (l_536,h_514) else caught-fail) in
                                    {8725}let server_hts_47: bitstring = (if v_1930 then catch-fail((if v_1931 then hmac(@8_backend_h,handshake_secret_47,x_609) else fail-any)) else caught-fail) in
                                    {8726}let v_1932: bool = not-caught-fail(server_hts_47) in
                                    {8727}let l_537: label = (if v_1932 then tls13_key else caught-fail) in
                                    {8728}let h_515: bitstring = (if v_1932 then zero else caught-fail) in
                                    {8729}let x_610: bitstring = (if v_1932 then (l_537,h_515) else caught-fail) in
                                    {8730}let client_wkh_47: bitstring = (if v_1932 then catch-fail(hmac(@8_backend_h,client_hts_47,x_610)) else caught-fail) in
                                    {8731}let v_1933: bool = not-caught-fail(client_wkh_47) in
                                    {8732}let l_538: label = (if v_1933 then tls13_key else caught-fail) in
                                    {8733}let h_516: bitstring = (if v_1933 then zero else caught-fail) in
                                    {8734}let x_611: bitstring = (if v_1933 then (l_538,h_516) else caught-fail) in
                                    {8735}let server_wkh_47: bitstring = (if v_1933 then catch-fail(hmac(@8_backend_h,server_hts_47,x_611)) else caught-fail) in
                                    {8736}let v_1934: bool = not-caught-fail(server_wkh_47) in
                                    {8737}let l_539: label = (if v_1934 then tls13_finished else caught-fail) in
                                    {8738}let h_517: bitstring = (if v_1934 then zero else caught-fail) in
                                    {8739}let x_612: bitstring = (if v_1934 then (l_539,h_517) else caught-fail) in
                                    {8740}let client_fk_47: bitstring = (if v_1934 then catch-fail(hmac(@8_backend_h,client_hts_47,x_612)) else caught-fail) in
                                    {8741}let v_1935: bool = not-caught-fail(client_fk_47) in
                                    {8742}let l_540: label = (if v_1935 then tls13_finished else caught-fail) in
                                    {8743}let h_518: bitstring = (if v_1935 then zero else caught-fail) in
                                    {8744}let x_613: bitstring = (if v_1935 then (l_540,h_518) else caught-fail) in
                                    {8745}let server_fk_47: bitstring = (if v_1935 then catch-fail(hmac(@8_backend_h,server_hts_47,x_613)) else caught-fail) in
                                    {8746}let v_1936: bool = not-caught-fail(server_fk_47) in
                                    {8747}let (master_secret_102: bitstring,chk_54: aead_key,shk_53: aead_key,cfin_54: mac_key,sfin_53: mac_key) = (if v_1927 then (if v_1928 then (if v_1930 then (if v_1932 then (if v_1933 then (if v_1934 then (if v_1935 then (if v_1936 then (master_secret_101,client_wkh_47,server_wkh_47,client_fk_47,server_fk_47) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {8748}event Client_chk(id_client_5,chk_54);
                                    {8749}event Client_shk(id_client_5,shk_53);
                                    {8750}event Client_cfin(id_client_5,cfin_54);
                                    {8751}event Client_sfin(id_client_5,sfin_53);
                                    {8752}in(io, enc_ee_msg_46: bitstring);
                                    {8753}let ee_msg_51: msg = aead_dec(@8_backend_a,shk_53,0,zero,enc_ee_msg_46) in
                                    {8754}let EE(ech_ee_46: echExt,extra_ee_46: extraExt) = ee_msg_51 in
                                    {8755}let cur_log2_100: bitstring = (cur_log2_99,ee_msg_51) in
                                    {8756}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr_9,sr_57,@8_backend_h,@8_backend_a,c_dom_7,backend_dom_1,psk_217,safe_psk_52,@8_comp_psk,master_secret_102,chk_54,0,shk_53,1,cfin_54,sfin_53,cur_log2_100)))
                                )
                                else
                                    {8757}out(io, illegal_parameter)
                            )
                            else
                                {8758}out(io, illegal_parameter)
                        )
                        else
                            {8759}event ClientEchAcceptance(id_client_5,false);
                            {8760}let v_1937: bool = @8_use_grease in
                            {8761}let psk_218: preSharedKey = (if not(v_1937) then NoPsk else caught-fail) in
                            {8762}let s_199: bitstring = (if not(v_1937) then zero else caught-fail) in
                            {8763}let k_195: bitstring = (if not(v_1937) then catch-fail(psk2b(psk_218)) else caught-fail) in
                            {8764}let v_1938: bool = not-caught-fail(k_195) in
                            {8765}let early_secret_146: bitstring = (if not(v_1937) then catch-fail((if v_1938 then hmac(@8_tls_h,s_199,k_195) else fail-any)) else caught-fail) in
                            {8766}let v_1939: bool = not-caught-fail(early_secret_146) in
                            {8767}let l_541: label = (if v_1939 then tls13_ext_res_binder else caught-fail) in
                            {8768}let m_193: bitstring = (if v_1939 then zero else caught-fail) in
                            {8769}let h_519: bitstring = (if v_1939 then catch-fail(hash(@8_tls_h,m_193)) else caught-fail) in
                            {8770}let v_1940: bool = not-caught-fail(h_519) in
                            {8771}let x_614: bitstring = (if v_1940 then (l_541,h_519) else caught-fail) in
                            {8772}let binder_key_97: bitstring = (if v_1939 then catch-fail((if v_1940 then hmac(@8_tls_h,early_secret_146,x_614) else fail-any)) else caught-fail) in
                            {8773}let v_1941: bool = not-caught-fail(binder_key_97) in
                            {8774}let v_1942: bitstring = (if not(v_1937) then catch-fail((if v_1939 then (if v_1941 then (early_secret_146,binder_key_97) else fail-any) else fail-any)) else caught-fail) in
                            {8775}let v_1943: bool = (not-caught-fail(v_1942) && success?(1-proj-2-tuple(v_1942))) in
                            {8776}let kb_97: mac_key = (if v_1943 then 2-proj-2-tuple(v_1942) else caught-fail) in
                            {8777}let es'_3: bitstring = (if v_1943 then 1-proj-2-tuple(v_1942) else caught-fail) in
                            {8778}let psk_data'_40: bitstring = (if v_1937 then psk_data_43 else (if v_1943 then (NoPsk,zero,es'_3,false) else fail-any)) in
                            {8779}let cur_log_27: bitstring = (zero,o_client_hello_5) in
                            {8780}let (x_615: bitstring,g_54: group) = o_kex_data_8 in
                            {8781}let (psk_offer_47: preSharedKey,id_offer_47: identityPsk,es_offer_47: bitstring,is_safe_offer_47: bool) = psk_data'_40 in
                            {8782}event Client_PSKOffer(id_client_5,psk_offer_47,id_offer_47,is_safe_offer_47);
                            {8783}event Client_Rand_client(id_client_5,o_cr_11);
                            {8784}event Client_DH_client(id_client_5,dh_pub(g_54,x_615));
                            {8785}event Client_server_domain(id_client_5,o_dom_8);
                            {8786}let SH(sr_58: bytes32,mode_54: params) = server_hello_7 in
                            {8787}event Client_Rand_server(id_client_5,sr_58);
                            {8788}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_54,gy_48: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_100: preSharedKeyExt) = mode_54 in
                            (
                                {8789}let cur_log2_101: bitstring = (cur_log_27,server_hello_7) in
                                {8790}event Client_DH_server(id_client_5,gy_48);
                                {8791}let v_1944: bool = (psk_ext_100 = empty_psk_ext) in
                                {8792}let psk_219: preSharedKey = (if v_1944 then NoPsk else caught-fail) in
                                {8793}let s_200: bitstring = (if v_1944 then zero else caught-fail) in
                                {8794}let k_196: bitstring = (if v_1944 then catch-fail(psk2b(psk_219)) else caught-fail) in
                                {8795}let v_1945: bool = not-caught-fail(k_196) in
                                {8796}let early_secret_147: bitstring = (if v_1944 then catch-fail((if v_1945 then hmac(@8_tls_h,s_200,k_196) else fail-any)) else caught-fail) in
                                {8797}let v_1946: bool = not-caught-fail(early_secret_147) in
                                {8798}let l_542: label = (if v_1946 then tls13_ext_res_binder else caught-fail) in
                                {8799}let m_194: bitstring = (if v_1946 then zero else caught-fail) in
                                {8800}let h_520: bitstring = (if v_1946 then catch-fail(hash(@8_tls_h,m_194)) else caught-fail) in
                                {8801}let v_1947: bool = not-caught-fail(h_520) in
                                {8802}let x_616: bitstring = (if v_1947 then (l_542,h_520) else caught-fail) in
                                {8803}let binder_key_98: bitstring = (if v_1946 then catch-fail((if v_1947 then hmac(@8_tls_h,early_secret_147,x_616) else fail-any)) else caught-fail) in
                                {8804}let v_1948: bool = not-caught-fail(binder_key_98) in
                                {8805}let v_1949: bitstring = (if v_1944 then catch-fail((if v_1946 then (if v_1948 then (early_secret_147,binder_key_98) else fail-any) else fail-any)) else caught-fail) in
                                {8806}let v_1950: bool = (not-caught-fail(v_1949) && success?(1-proj-2-tuple(v_1949))) in
                                {8807}let kb_98: mac_key = (if v_1950 then 2-proj-2-tuple(v_1949) else caught-fail) in
                                {8808}let es_147: bitstring = (if v_1950 then 1-proj-2-tuple(v_1949) else caught-fail) in
                                {8809}let v_1951: bitstring = (if not(v_1944) then catch-fail(psk_data'_40) else caught-fail) in
                                {8810}let v_1952: bool = (not-caught-fail(v_1951) && success?(1-proj-4-tuple(v_1951))) in
                                {8811}let is_safe_87: bool = (if v_1952 then 4-proj-4-tuple(v_1951) else caught-fail) in
                                {8812}let es_148: bitstring = (if v_1952 then 3-proj-4-tuple(v_1951) else caught-fail) in
                                {8813}let id_100: identityPsk = (if v_1952 then 2-proj-4-tuple(v_1951) else caught-fail) in
                                {8814}let psk_220: preSharedKey = (if v_1952 then 1-proj-4-tuple(v_1951) else caught-fail) in
                                {8815}let (psk_221: preSharedKey,early_secret_148: bitstring,valid_47: bool,safe_psk_53: bool) = (if v_1944 then (if v_1950 then (NoPsk,es_147,true,false) else fail-any) else (if v_1952 then (psk_220,es_148,((psk_220 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_100)),is_safe_87) else fail-any)) in
                                {8816}event Client_PSKChoosen(id_client_5,psk_221,safe_psk_53);
                                {8817}if valid_47 then
                                (
                                    {8818}let gxy_96: element = catch-fail(dh_decap_fun(g_54,gy_48,x_615)) in
                                    {8819}let v_1953: bool = not-caught-fail(gxy_96) in
                                    {8820}new s_201[]: seed;
                                    {8821}let gxy_97: element = (if v_1953 then gxy_96 else dh_f(s_201)) in
                                    {8822}event Client_DH_gxy(id_client_5,gxy_97);
                                    {8823}let l_543: label = tls13_derived in
                                    {8824}let m_195: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                    {8825}let v_1954: bool = not-caught-fail(m_195) in
                                    {8826}let h_521: bitstring = (if v_1954 then catch-fail(hash(@8_tls_h,m_195)) else caught-fail) in
                                    {8827}let v_1955: bool = not-caught-fail(h_521) in
                                    {8828}let x_617: bitstring = (if v_1955 then (l_543,h_521) else caught-fail) in
                                    {8829}let extra_104: bitstring = catch-fail((if v_1954 then (if v_1955 then hmac(@8_tls_h,early_secret_148,x_617) else fail-any) else fail-any)) in
                                    {8830}let v_1956: bool = not-caught-fail(extra_104) in
                                    {8831}let handshake_secret_48: bitstring = (if v_1956 then hmac(@8_tls_h,extra_104,gxy_97) else fail-any) in
                                    {8832}let l_544: label = tls13_derived in
                                    {8833}let m_196: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                    {8834}let v_1957: bool = not-caught-fail(m_196) in
                                    {8835}let h_522: bitstring = (if v_1957 then catch-fail(hash(@8_tls_h,m_196)) else caught-fail) in
                                    {8836}let v_1958: bool = not-caught-fail(h_522) in
                                    {8837}let x_618: bitstring = (if v_1958 then (l_544,h_522) else caught-fail) in
                                    {8838}let extra_105: bitstring = catch-fail((if v_1957 then (if v_1958 then hmac(@8_tls_h,handshake_secret_48,x_618) else fail-any) else fail-any)) in
                                    {8839}let v_1959: bool = not-caught-fail(extra_105) in
                                    {8840}let k_197: bitstring = (if v_1959 then zero else caught-fail) in
                                    {8841}let master_secret_103: bitstring = (if v_1959 then catch-fail(hmac(@8_tls_h,handshake_secret_48,k_197)) else caught-fail) in
                                    {8842}let v_1960: bool = not-caught-fail(master_secret_103) in
                                    {8843}let l_545: label = (if v_1960 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {8844}let h_523: bitstring = (if v_1960 then catch-fail(hash(@8_tls_h,cur_log2_101)) else caught-fail) in
                                    {8845}let v_1961: bool = not-caught-fail(h_523) in
                                    {8846}let x_619: bitstring = (if v_1961 then (l_545,h_523) else caught-fail) in
                                    {8847}let client_hts_48: bitstring = (if v_1960 then catch-fail((if v_1961 then hmac(@8_tls_h,handshake_secret_48,x_619) else fail-any)) else caught-fail) in
                                    {8848}let v_1962: bool = not-caught-fail(client_hts_48) in
                                    {8849}let l_546: label = (if v_1962 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {8850}let h_524: bitstring = (if v_1962 then catch-fail(hash(@8_tls_h,cur_log2_101)) else caught-fail) in
                                    {8851}let v_1963: bool = not-caught-fail(h_524) in
                                    {8852}let x_620: bitstring = (if v_1963 then (l_546,h_524) else caught-fail) in
                                    {8853}let server_hts_48: bitstring = (if v_1962 then catch-fail((if v_1963 then hmac(@8_tls_h,handshake_secret_48,x_620) else fail-any)) else caught-fail) in
                                    {8854}let v_1964: bool = not-caught-fail(server_hts_48) in
                                    {8855}let l_547: label = (if v_1964 then tls13_key else caught-fail) in
                                    {8856}let h_525: bitstring = (if v_1964 then zero else caught-fail) in
                                    {8857}let x_621: bitstring = (if v_1964 then (l_547,h_525) else caught-fail) in
                                    {8858}let client_wkh_48: bitstring = (if v_1964 then catch-fail(hmac(@8_tls_h,client_hts_48,x_621)) else caught-fail) in
                                    {8859}let v_1965: bool = not-caught-fail(client_wkh_48) in
                                    {8860}let l_548: label = (if v_1965 then tls13_key else caught-fail) in
                                    {8861}let h_526: bitstring = (if v_1965 then zero else caught-fail) in
                                    {8862}let x_622: bitstring = (if v_1965 then (l_548,h_526) else caught-fail) in
                                    {8863}let server_wkh_48: bitstring = (if v_1965 then catch-fail(hmac(@8_tls_h,server_hts_48,x_622)) else caught-fail) in
                                    {8864}let v_1966: bool = not-caught-fail(server_wkh_48) in
                                    {8865}let l_549: label = (if v_1966 then tls13_finished else caught-fail) in
                                    {8866}let h_527: bitstring = (if v_1966 then zero else caught-fail) in
                                    {8867}let x_623: bitstring = (if v_1966 then (l_549,h_527) else caught-fail) in
                                    {8868}let client_fk_48: bitstring = (if v_1966 then catch-fail(hmac(@8_tls_h,client_hts_48,x_623)) else caught-fail) in
                                    {8869}let v_1967: bool = not-caught-fail(client_fk_48) in
                                    {8870}let l_550: label = (if v_1967 then tls13_finished else caught-fail) in
                                    {8871}let h_528: bitstring = (if v_1967 then zero else caught-fail) in
                                    {8872}let x_624: bitstring = (if v_1967 then (l_550,h_528) else caught-fail) in
                                    {8873}let server_fk_48: bitstring = (if v_1967 then catch-fail(hmac(@8_tls_h,server_hts_48,x_624)) else caught-fail) in
                                    {8874}let v_1968: bool = not-caught-fail(server_fk_48) in
                                    {8875}let (master_secret_104: bitstring,chk_55: aead_key,shk_54: aead_key,cfin_55: mac_key,sfin_54: mac_key) = (if v_1959 then (if v_1960 then (if v_1962 then (if v_1964 then (if v_1965 then (if v_1966 then (if v_1967 then (if v_1968 then (master_secret_103,client_wkh_48,server_wkh_48,client_fk_48,server_fk_48) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {8876}event Client_chk(id_client_5,chk_55);
                                    {8877}event Client_shk(id_client_5,shk_54);
                                    {8878}event Client_cfin(id_client_5,cfin_55);
                                    {8879}event Client_sfin(id_client_5,sfin_54);
                                    {8880}in(io, enc_ee_msg_47: bitstring);
                                    {8881}let ee_msg_52: msg = aead_dec(@8_tls_a,shk_54,0,zero,enc_ee_msg_47) in
                                    {8882}let EE(ech_ee_47: echExt,extra_ee_47: extraExt) = ee_msg_52 in
                                    {8883}let cur_log2_102: bitstring = (cur_log2_101,ee_msg_52) in
                                    {8884}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(o_cr_11,sr_58,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_221,safe_psk_53,@8_comp_psk,master_secret_104,chk_55,0,shk_54,1,cfin_55,sfin_54,cur_log2_102)))
                                )
                                else
                                    {8885}out(io, illegal_parameter)
                            )
                            else
                                {8886}out(io, illegal_parameter)
                )
                else
                    {8887}out(io, unexpected_message)
            )
        )
        else
            {10370}get pre_shared_keys(c_dom'_15: domain,=dom_psk_1,=h_psk_1,id_101: identityPsk,psk_222: preSharedKey,idP_17: idProc,is_safe_88: bool) in
            {8888}event Selected_one_time_used_psk(id_client_5,psk_222,is_safe_88);
            {8889}event Selected_psk(c_dom_7,c_dom'_15,idP_17,is_safe_88);
            {8890}event Selected_psk_no_missmatch(id_client_5,dom_psk_1,h_psk_1,psk_222,id_101);
            {8891}event Selected_psk_with_ID(c_dom_7,c_dom'_15,id_101,idP_17,is_safe_88);
            {8892}let v_1969: bitstring = (id_101,psk_222,is_safe_88) in
            {8893}let v_1970: bool = success?(1-proj-3-tuple(v_1969)) in
            {8894}let is_safe_89: bool = (if v_1970 then 3-proj-3-tuple(v_1969) else caught-fail) in
            {8895}let psk_223: preSharedKey = (if v_1970 then 2-proj-3-tuple(v_1969) else caught-fail) in
            {8896}let id_102: identityPsk = (if v_1970 then 1-proj-3-tuple(v_1969) else caught-fail) in
            {8897}let offer_41: params = (if v_1970 then nego(TLS13,h_psk_1,a_psk_1,kex_ext_psk_1,SNI(dom_psk_1),ech_inner_or_grease_1,extra_psk_1,trunc_client_psk_ext(id_102)) else caught-fail) in
            {8898}let cur_log'_29: bitstring = (if v_1970 then (cur_log_23,CH(cr_psk_1,offer_41)) else caught-fail) in
            {8899}let s_202: bitstring = (if v_1970 then zero else caught-fail) in
            {8900}let k_198: bitstring = (if v_1970 then catch-fail(psk2b(psk_223)) else caught-fail) in
            {8901}let v_1971: bool = not-caught-fail(k_198) in
            {8902}let early_secret_149: bitstring = (if v_1970 then catch-fail((if v_1971 then hmac(h_psk_1,s_202,k_198) else fail-any)) else caught-fail) in
            {8903}let v_1972: bool = not-caught-fail(early_secret_149) in
            {8904}let l_551: label = (if v_1972 then tls13_ext_res_binder else caught-fail) in
            {8905}let m_197: bitstring = (if v_1972 then zero else caught-fail) in
            {8906}let h_529: bitstring = (if v_1972 then catch-fail(hash(h_psk_1,m_197)) else caught-fail) in
            {8907}let v_1973: bool = not-caught-fail(h_529) in
            {8908}let x_625: bitstring = (if v_1973 then (l_551,h_529) else caught-fail) in
            {8909}let binder_key_99: bitstring = (if v_1972 then catch-fail((if v_1973 then hmac(h_psk_1,early_secret_149,x_625) else fail-any)) else caught-fail) in
            {8910}let v_1974: bool = not-caught-fail(binder_key_99) in
            {8911}let v_1975: bitstring = (if v_1970 then catch-fail((if v_1972 then (if v_1974 then (early_secret_149,binder_key_99) else fail-any) else fail-any)) else caught-fail) in
            {8912}let v_1976: bool = (not-caught-fail(v_1975) && success?(1-proj-2-tuple(v_1975))) in
            {8913}let kb_99: mac_key = (if v_1976 then 2-proj-2-tuple(v_1975) else caught-fail) in
            {8914}let es_149: bitstring = (if v_1976 then 1-proj-2-tuple(v_1975) else caught-fail) in
            {8915}let binders_28: bitstring = (if v_1976 then catch-fail(hmac(h_psk_1,kb_99,cur_log'_29)) else caught-fail) in
            {8916}let v_1977: bool = not-caught-fail(binders_28) in
            {8917}let v_1978: bitstring = catch-fail((if v_1970 then (if v_1976 then (if v_1977 then (client_psk_ext(id_102,binders_28),(psk_223,id_102,es_149,is_safe_89)) else fail-any) else fail-any) else fail-any)) in
            {8918}let v_1979: bool = (not-caught-fail(v_1978) && success?(1-proj-2-tuple(v_1978))) in
            {8919}let psk_data_51: bitstring = (if v_1979 then 2-proj-2-tuple(v_1978) else caught-fail) in
            {8920}let psk_ext_101: preSharedKeyExt = (if v_1979 then 1-proj-2-tuple(v_1978) else caught-fail) in
            {8921}let i_offer_16: params = (if v_1979 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_5,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_101) else caught-fail) in
            {8922}let i_client_hello_21: msg = (if v_1979 then CH(i_cr_8,i_offer_16) else caught-fail) in
            {8923}let v_1980: bool = (if v_1979 then catch-fail(@8_use_grease) else caught-fail) in
            {8924}let o_offer_36: params = (if v_1980 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),ech_inner_or_grease_1,empty_extra_ext,psk_ext_101) else caught-fail) in
            {8925}new fake_id_20[]: identityPsk;
            {8926}new fake_binder_20[]: bitstring;
            {8927}let o_psk_ext_20: preSharedKeyExt = (if is-false(v_1980) then (if @8_use_psk then client_psk_ext(fake_id_20,fake_binder_20) else empty_psk_ext) else caught-fail) in
            {8928}let o_ech_ext_ADD_16: echExt = (if is-false(v_1980) then ECHClientHelloOuter(ech_h_13,ech_a_13,config_id_13,enc_6,zero) else caught-fail) in
            {8929}let o_offer_ADD_16: params = (if is-false(v_1980) then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),o_ech_ext_ADD_16,empty_extra_ext,o_psk_ext_20) else caught-fail) in
            {8930}let o_client_hello_ADD_16: msg = (if is-false(v_1980) then CH(o_cr_10,o_offer_ADD_16) else caught-fail) in
            {8931}let n_18: nat = (if is-false(v_1980) then 1 else caught-fail) in
            {8932}let v_1981: hpkeContext = (if is-false(v_1980) then catch-fail(context_2) else caught-fail) in
            {8933}let v_1982: bool = (not-caught-fail(v_1981) && ((S =nf 1-proj-hpke_context(v_1981)) && success?(1-proj-hpke_context(v_1981)))) in
            {8934}let base_nonce_21: bitstring = (if v_1982 then 3-proj-hpke_context(v_1981) else caught-fail) in
            {8935}let key_21: aead_key = (if v_1982 then 2-proj-hpke_context(v_1981) else caught-fail) in
            {8936}let payload_22: bitstring = (if is-false(v_1980) then catch-fail((if v_1982 then aead_enc(ech_a_13,key_21,(base_nonce_21,n_18),o_client_hello_ADD_16,i_client_hello_21) else fail-any)) else caught-fail) in
            {8937}let v_1983: bool = not-caught-fail(payload_22) in
            {8938}let o_ech_ext_20: echExt = (if v_1983 then ECHClientHelloOuter(ech_h_13,ech_a_13,config_id_13,enc_6,payload_22) else caught-fail) in
            {8939}let o_offer_37: params = (if v_1983 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),o_ech_ext_20,empty_extra_ext,o_psk_ext_20) else caught-fail) in
            {8940}let (o_client_hello_6: msg,i_client_hello_22: msg,o_cr_14: bytes32,i_cr_11: bytes32,o_kex_data_10: bitstring,i_kex_data_10: bitstring,o_psk_ext_21: preSharedKeyExt,psk_data_52: bitstring,o_ech_ext_21: echExt) = (if v_1979 then (if undo-catch-fail(v_1980) then (CH(o_cr_10,o_offer_36),CH(o_cr_10,o_offer_36),o_cr_10,o_cr_10,o_kex_data_7,o_kex_data_7,psk_ext_101,psk_data_51,ech_inner_or_grease_1) else (if v_1983 then (CH(o_cr_10,o_offer_37),i_client_hello_21,o_cr_10,i_cr_8,o_kex_data_7,i_kex_data_7,o_psk_ext_20,psk_data_51,o_ech_ext_20) else fail-any)) else fail-any) in
            {8941}out(io, o_client_hello_6);
            {8942}let (psk_224: preSharedKey,id_103: identityPsk,es_150: bitstring,safe_4: bool) = psk_data_52 in
            (
                {8943}if (false && (not(@8_use_grease) && (psk_224 ≠ NoPsk))) then
                {8944}let client_hello_11: bitstring = (zero,i_client_hello_22) in
                {8945}let l_552: label = tls13_client_early_traffic_secret in
                {8946}let h_530: bitstring = catch-fail(hash(@8_backend_h,client_hello_11)) in
                {8947}let v_1984: bool = not-caught-fail(h_530) in
                {8948}let x_626: bitstring = (if v_1984 then (l_552,h_530) else caught-fail) in
                {8949}let atsc0_8: bitstring = catch-fail((if v_1984 then hmac(@8_backend_h,es_150,x_626) else fail-any)) in
                {8950}let v_1985: bool = not-caught-fail(atsc0_8) in
                {8951}let l_553: label = (if v_1985 then tls13_key else caught-fail) in
                {8952}let h_531: bitstring = (if v_1985 then zero else caught-fail) in
                {8953}let x_627: bitstring = (if v_1985 then (l_553,h_531) else caught-fail) in
                {8954}let kc0_8: bitstring = (if v_1985 then catch-fail(hmac(@8_backend_h,atsc0_8,x_627)) else caught-fail) in
                {8955}let v_1986: bool = not-caught-fail(kc0_8) in
                {8956}let l_554: label = (if v_1986 then tls13_early_exporter_master_secret else caught-fail) in
                {8957}let h_532: bitstring = (if v_1986 then catch-fail(hash(@8_backend_h,client_hello_11)) else caught-fail) in
                {8958}let v_1987: bool = not-caught-fail(h_532) in
                {8959}let x_628: bitstring = (if v_1987 then (l_554,h_532) else caught-fail) in
                {8960}let ems0_16: bitstring = (if v_1986 then catch-fail((if v_1987 then hmac(@8_backend_h,es_150,x_628) else fail-any)) else caught-fail) in
                {8961}let v_1988: bool = not-caught-fail(ems0_16) in
                {8962}let (wkc0_8: aead_key,ems0_17: bitstring) = (if v_1985 then (if v_1986 then (if v_1988 then (kc0_8,ems0_16) else fail-any) else fail-any) else fail-any) in
                {8963}!
                {8964}in(io, (i_8: nat,ad_8: bitstring));
                {8965}if is_nat(i_8) then
                {8966}new msg_ed_7[]: bitstring;
                {8967}let enc_ed_7: bitstring = aead_enc(@8_backend_a,wkc0_8,i_8,ad_8,msg_ed_7) in
                {8968}new st_17: stamp;
                {8969}event ClientSequenceClient0RTTDataWriteKey(id_client_5,st_17,i_8);
                {8970}event ClientSends0(id_client_5,i_cr_11,psk_224,i_8,ad_8,msg_ed_7);
                {8971}out(io, enc_ed_7)
            ) | (
                {8972}in(io, server_hello_8: msg);
                {8973}let SH(B32(sr24_6: bytes24,sr8_21: bytes8),mode_55: params) = server_hello_8 in
                (
                    {8974}if (false && (B32(sr24_6,sr8_21) = B32(HRR24,HRR8))) then
                    (
                        {8975}if (send_kex_5 ≠ true) then
                        {8976}let nego(=TLS13,h_alg_19: hash_alg,a_alg_17: aead_alg,hrr_kex_ext(g_55: group),=empty_sni_ext,ech_ext_21: echExt,=empty_extra_ext,=empty_psk_ext) = mode_55 in
                        {8977}let v_1989: bool = (ech_ext_21 = empty_ech_ext) in
                        {8978}let hrr_mode_9: params = (if not(v_1989) then nego(TLS13,@8_backend_h,@8_backend_a,hrr_kex_ext(@8_backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) else caught-fail) in
                        {8979}let hrr_5: msg = (if not(v_1989) then SH(B32(HRR24,HRR8),hrr_mode_9) else caught-fail) in
                        {8980}let cur_log_28: bitstring = (if not(v_1989) then ((zero,i_client_hello_22),hrr_5) else caught-fail) in
                        {8981}let transcript_hrr_ech_conf_5: bitstring = (if not(v_1989) then catch-fail(hash(@8_backend_h,cur_log_28)) else caught-fail) in
                        {8982}let v_1990: bool = not-caught-fail(transcript_hrr_ech_conf_5) in
                        {8983}let s_203: bitstring = (if v_1990 then zero else caught-fail) in
                        {8984}let k_199: bitstring = (if v_1990 then catch-fail(b32_2_b(get_random(i_client_hello_22))) else caught-fail) in
                        {8985}let v_1991: bool = not-caught-fail(k_199) in
                        {8986}let k_200: bitstring = (if v_1990 then catch-fail((if v_1991 then hmac(@8_backend_h,s_203,k_199) else fail-any)) else caught-fail) in
                        {8987}let v_1992: bool = not-caught-fail(k_200) in
                        {8988}let l_555: label = (if v_1992 then hrr_ech_accept_confirmation else caught-fail) in
                        {8989}let x_629: bitstring = (if v_1992 then (l_555,cur_log_28) else caught-fail) in
                        {8990}let is_ech_accepted_4: bool = (if v_1989 then false else (if (ech_ext_21 = ECHHelloRetryRequest((if v_1990 then crop_into_bytes8((if v_1992 then hmac(@8_backend_h,k_200,x_629) else fail-any)) else fail-any))) then true else false)) in
                        {8991}event ClientEchAcceptance(id_client_5,is_ech_accepted_4);
                        {8992}if is_ech_accepted_4 then
                        (
                            {8993}let cur_log_IN1_HRR_4: bitstring = ((zero,i_client_hello_22),server_hello_8) in
                            {8994}let ech_config(config_id_16: configId,ech_g_16: group,pkR_18: element,o_dom_12: domain,ech_h_16: hash_alg,ech_a_16: aead_alg) = ech_conf_2 in
                            {8995}let send_key_share_12: bool = true in
                            {8996}new s_204[]: seed;
                            {8997}let gx_49: element = dh_pub(@8_backend_g,dh_k(s_204)) in
                            {8998}let v_1993: bitstring = (dh_k(s_204),gx_49) in
                            {8999}let v_1994: bool = success?(1-proj-2-tuple(v_1993)) in
                            {9000}let gx_50: element = (if v_1994 then 2-proj-2-tuple(v_1993) else caught-fail) in
                            {9001}let x_630: bitstring = (if v_1994 then 1-proj-2-tuple(v_1993) else caught-fail) in
                            {9002}let kex_20: kex_alg = (if v_1994 then (if send_key_share_12 then DHE_kex(@8_backend_g,gx_50) else DHE_group(@8_backend_g)) else caught-fail) in
                            {9003}let (i_kex_ext_7: keyShareExt,i_kex_data_11: bitstring) = (if v_1994 then (client_kex_ext(kex_20),(x_630,@8_backend_g)) else fail-any) in
                            {9004}let send_key_share_13: bool = true in
                            {9005}new s_205[]: seed;
                            {9006}let gx_51: element = dh_pub(@8_tls_g,dh_k(s_205)) in
                            {9007}let v_1995: bitstring = (dh_k(s_205),gx_51) in
                            {9008}let v_1996: bool = success?(1-proj-2-tuple(v_1995)) in
                            {9009}let gx_52: element = (if v_1996 then 2-proj-2-tuple(v_1995) else caught-fail) in
                            {9010}let x_631: bitstring = (if v_1996 then 1-proj-2-tuple(v_1995) else caught-fail) in
                            {9011}let kex_21: kex_alg = (if v_1996 then (if send_key_share_13 then DHE_kex(@8_tls_g,gx_52) else DHE_group(@8_tls_g)) else caught-fail) in
                            {9012}let (o_kex_ext_10: keyShareExt,o_kex_data_11: bitstring) = (if v_1996 then (client_kex_ext(kex_21),(x_631,@8_tls_g)) else fail-any) in
                            {9013}new rand24_21[]: bytes24;
                            {9014}new rand8_21[]: bytes8;
                            {9015}let i_cr_12: bytes32 = B32(rand24_21,rand8_21) in
                            {9016}new rand24_22[]: bytes24;
                            {9017}new rand8_22[]: bytes8;
                            {9018}let o_cr_15: bytes32 = B32(rand24_22,rand8_22) in
                            {9019}let ech_ext_22: echExt = ECHClientHelloInner in
                            {9020}if @8_use_psk then
                            (
                                {9021}let (psk_225: preSharedKey,id_104: identityPsk,old_es_14: bitstring,is_safe_90: bool) = psk_data_52 in
                                (
                                    {9022}let offer_42: params = nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_7,SNI(backend_dom_1),ech_ext_22,@8_i_extra_ext,trunc_client_psk_ext(id_104)) in
                                    {9023}let cur_log'_30: bitstring = (cur_log_IN1_HRR_4,CH(i_cr_12,offer_42)) in
                                    {9024}let s_206: bitstring = zero in
                                    {9025}let k_201: bitstring = catch-fail(psk2b(psk_225)) in
                                    {9026}let v_1997: bool = not-caught-fail(k_201) in
                                    {9027}let early_secret_150: bitstring = catch-fail((if v_1997 then hmac(@8_backend_h,s_206,k_201) else fail-any)) in
                                    {9028}let v_1998: bool = not-caught-fail(early_secret_150) in
                                    {9029}let l_556: label = (if v_1998 then tls13_ext_res_binder else caught-fail) in
                                    {9030}let m_198: bitstring = (if v_1998 then zero else caught-fail) in
                                    {9031}let h_533: bitstring = (if v_1998 then catch-fail(hash(@8_backend_h,m_198)) else caught-fail) in
                                    {9032}let v_1999: bool = not-caught-fail(h_533) in
                                    {9033}let x_632: bitstring = (if v_1999 then (l_556,h_533) else caught-fail) in
                                    {9034}let binder_key_100: bitstring = (if v_1998 then catch-fail((if v_1999 then hmac(@8_backend_h,early_secret_150,x_632) else fail-any)) else caught-fail) in
                                    {9035}let v_2000: bool = not-caught-fail(binder_key_100) in
                                    {9036}let v_2001: bitstring = catch-fail((if v_1998 then (if v_2000 then (early_secret_150,binder_key_100) else fail-any) else fail-any)) in
                                    {9037}let v_2002: bool = (not-caught-fail(v_2001) && success?(1-proj-2-tuple(v_2001))) in
                                    {9038}let kb_100: mac_key = (if v_2002 then 2-proj-2-tuple(v_2001) else caught-fail) in
                                    {9039}let es_151: bitstring = (if v_2002 then 1-proj-2-tuple(v_2001) else caught-fail) in
                                    {9040}let binders_29: bitstring = (if v_2002 then catch-fail(hmac(@8_backend_h,kb_100,cur_log'_30)) else caught-fail) in
                                    {9041}let v_2003: bool = not-caught-fail(binders_29) in
                                    {9042}let v_2004: bitstring = catch-fail((if v_2002 then (if v_2003 then (client_psk_ext(id_104,binders_29),(psk_225,id_104,es_151,is_safe_90)) else fail-any) else fail-any)) in
                                    {9043}let v_2005: bool = (not-caught-fail(v_2004) && success?(1-proj-2-tuple(v_2004))) in
                                    {9044}let psk_data_53: bitstring = (if v_2005 then 2-proj-2-tuple(v_2004) else caught-fail) in
                                    {9045}let psk_ext_102: preSharedKeyExt = (if v_2005 then 1-proj-2-tuple(v_2004) else caught-fail) in
                                    {9046}let i_offer_17: params = (if v_2005 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_7,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_102) else caught-fail) in
                                    {9047}let i_client_hello_23: msg = (if v_2005 then CH(i_cr_12,i_offer_17) else caught-fail) in
                                    {9048}new fake_id_21[]: identityPsk;
                                    {9049}new fake_binder_21[]: bitstring;
                                    {9050}let o_psk_ext_22: preSharedKeyExt = (if v_2005 then (if @8_use_psk then client_psk_ext(fake_id_21,fake_binder_21) else empty_psk_ext) else caught-fail) in
                                    {9051}let o_ech_ext_ADD_17: echExt = (if v_2005 then ECHClientHelloOuter(ech_h_16,ech_a_16,config_id_16,zero,zero) else caught-fail) in
                                    {9052}let o_offer_ADD_17: params = (if v_2005 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_10,SNI(o_dom_12),o_ech_ext_ADD_17,empty_extra_ext,o_psk_ext_22) else caught-fail) in
                                    {9053}let o_client_hello_ADD_17: msg = (if v_2005 then CH(o_cr_15,o_offer_ADD_17) else caught-fail) in
                                    {9054}let n_19: nat = (if v_2005 then 2 else caught-fail) in
                                    {9055}let v_2006: hpkeContext = (if v_2005 then catch-fail(context_2) else caught-fail) in
                                    {9056}let v_2007: bool = (not-caught-fail(v_2006) && ((S =nf 1-proj-hpke_context(v_2006)) && success?(1-proj-hpke_context(v_2006)))) in
                                    {9057}let base_nonce_22: bitstring = (if v_2007 then 3-proj-hpke_context(v_2006) else caught-fail) in
                                    {9058}let key_22: aead_key = (if v_2007 then 2-proj-hpke_context(v_2006) else caught-fail) in
                                    {9059}let payload_23: bitstring = (if v_2005 then catch-fail((if v_2007 then aead_enc(ech_a_16,key_22,(base_nonce_22,n_19),o_client_hello_ADD_17,i_client_hello_23) else fail-any)) else caught-fail) in
                                    {9060}let v_2008: bool = not-caught-fail(payload_23) in
                                    {9061}let o_ech_ext_22: echExt = (if v_2008 then ECHClientHelloOuter(ech_h_16,ech_a_16,config_id_16,zero,payload_23) else caught-fail) in
                                    {9062}let o_offer_38: params = (if v_2008 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_10,SNI(o_dom_12),o_ech_ext_22,empty_extra_ext,o_psk_ext_22) else caught-fail) in
                                    {9063}let (o_client_hello'_12: msg,i_client_hello'_13: msg,i_cr'_12: bytes32,i_kex_data'_12: bitstring,psk_data'_41: bitstring) = (if v_2005 then (if v_2008 then (CH(o_cr_15,o_offer_38),i_client_hello_23,i_cr_12,i_kex_data_11,psk_data_53) else fail-any) else fail-any) in
                                    {9064}out(io, o_client_hello'_12);
                                    {9065}in(io, server_hello'_37: msg);
                                    {9066}let SH(B32(sr24'_12: bytes24,sr8'_12: bytes8),params'_12: params) = server_hello'_37 in
                                    {9067}let cur_log_IN1_HRR_IN2_12: bitstring = (cur_log_IN1_HRR_4,i_client_hello'_13) in
                                    {9068}let sh_modified_17: msg = SH(B32(sr24'_12,zero8),params'_12) in
                                    {9069}let cur_log_sh_17: bitstring = (cur_log_IN1_HRR_IN2_12,sh_modified_17) in
                                    {9070}let transcript_ech_conf_17: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_17)) in
                                    {9071}let v_2009: bool = not-caught-fail(transcript_ech_conf_17) in
                                    {9072}let s_207: bitstring = (if v_2009 then zero else caught-fail) in
                                    {9073}let k_202: bitstring = (if v_2009 then catch-fail(b32_2_b(get_random(i_client_hello'_13))) else caught-fail) in
                                    {9074}let v_2010: bool = not-caught-fail(k_202) in
                                    {9075}let k_203: bitstring = (if v_2009 then catch-fail((if v_2010 then hmac(@8_backend_h,s_207,k_202) else fail-any)) else caught-fail) in
                                    {9076}let v_2011: bool = not-caught-fail(k_203) in
                                    {9077}let l_557: label = (if v_2011 then ech_accept_confirmation else caught-fail) in
                                    {9078}let x_633: bitstring = (if v_2011 then (l_557,cur_log_sh_17) else caught-fail) in
                                    {9079}let sr8_22: bytes8 = (if v_2009 then catch-fail(crop_into_bytes8((if v_2011 then hmac(@8_backend_h,k_203,x_633) else fail-any))) else caught-fail) in
                                    {9080}let v_2012: bool = not-caught-fail(sr8_22) in
                                    {9081}if (B32(sr24'_12,sr8'_12) = (if v_2009 then (if v_2012 then B32(sr24'_12,sr8_22) else fail-any) else fail-any)) then
                                    {9082}let (x_634: bitstring,g_56: group) = i_kex_data'_12 in
                                    {9083}let (psk_offer_48: preSharedKey,id_offer_48: identityPsk,es_offer_48: bitstring,is_safe_offer_48: bool) = psk_data'_41 in
                                    {9084}event Client_PSKOffer(id_client_5,psk_offer_48,id_offer_48,is_safe_offer_48);
                                    {9085}event Client_Rand_client(id_client_5,i_cr'_12);
                                    {9086}event Client_DH_client(id_client_5,dh_pub(g_56,x_634));
                                    {9087}event Client_server_domain(id_client_5,backend_dom_1);
                                    {9088}let SH(sr_59: bytes32,mode_56: params) = server_hello'_37 in
                                    {9089}event Client_Rand_server(id_client_5,sr_59);
                                    {9090}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_56,gy_49: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_103: preSharedKeyExt) = mode_56 in
                                    (
                                        {9091}let cur_log2_103: bitstring = (cur_log_IN1_HRR_IN2_12,server_hello'_37) in
                                        {9092}event Client_DH_server(id_client_5,gy_49);
                                        {9093}let v_2013: bool = (psk_ext_103 = empty_psk_ext) in
                                        {9094}let psk_226: preSharedKey = (if v_2013 then NoPsk else caught-fail) in
                                        {9095}let s_208: bitstring = (if v_2013 then zero else caught-fail) in
                                        {9096}let k_204: bitstring = (if v_2013 then catch-fail(psk2b(psk_226)) else caught-fail) in
                                        {9097}let v_2014: bool = not-caught-fail(k_204) in
                                        {9098}let early_secret_151: bitstring = (if v_2013 then catch-fail((if v_2014 then hmac(@8_backend_h,s_208,k_204) else fail-any)) else caught-fail) in
                                        {9099}let v_2015: bool = not-caught-fail(early_secret_151) in
                                        {9100}let l_558: label = (if v_2015 then tls13_ext_res_binder else caught-fail) in
                                        {9101}let m_199: bitstring = (if v_2015 then zero else caught-fail) in
                                        {9102}let h_534: bitstring = (if v_2015 then catch-fail(hash(@8_backend_h,m_199)) else caught-fail) in
                                        {9103}let v_2016: bool = not-caught-fail(h_534) in
                                        {9104}let x_635: bitstring = (if v_2016 then (l_558,h_534) else caught-fail) in
                                        {9105}let binder_key_101: bitstring = (if v_2015 then catch-fail((if v_2016 then hmac(@8_backend_h,early_secret_151,x_635) else fail-any)) else caught-fail) in
                                        {9106}let v_2017: bool = not-caught-fail(binder_key_101) in
                                        {9107}let v_2018: bitstring = (if v_2013 then catch-fail((if v_2015 then (if v_2017 then (early_secret_151,binder_key_101) else fail-any) else fail-any)) else caught-fail) in
                                        {9108}let v_2019: bool = (not-caught-fail(v_2018) && success?(1-proj-2-tuple(v_2018))) in
                                        {9109}let kb_101: mac_key = (if v_2019 then 2-proj-2-tuple(v_2018) else caught-fail) in
                                        {9110}let es_152: bitstring = (if v_2019 then 1-proj-2-tuple(v_2018) else caught-fail) in
                                        {9111}let v_2020: bitstring = (if not(v_2013) then catch-fail(psk_data'_41) else caught-fail) in
                                        {9112}let v_2021: bool = (not-caught-fail(v_2020) && success?(1-proj-4-tuple(v_2020))) in
                                        {9113}let is_safe_91: bool = (if v_2021 then 4-proj-4-tuple(v_2020) else caught-fail) in
                                        {9114}let es_153: bitstring = (if v_2021 then 3-proj-4-tuple(v_2020) else caught-fail) in
                                        {9115}let id_105: identityPsk = (if v_2021 then 2-proj-4-tuple(v_2020) else caught-fail) in
                                        {9116}let psk_227: preSharedKey = (if v_2021 then 1-proj-4-tuple(v_2020) else caught-fail) in
                                        {9117}let (psk_228: preSharedKey,early_secret_152: bitstring,valid_48: bool,safe_psk_54: bool) = (if v_2013 then (if v_2019 then (NoPsk,es_152,true,false) else fail-any) else (if v_2021 then (psk_227,es_153,((psk_227 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_103)),is_safe_91) else fail-any)) in
                                        {9118}event Client_PSKChoosen(id_client_5,psk_228,safe_psk_54);
                                        {9119}if valid_48 then
                                        (
                                            {9120}let gxy_98: element = catch-fail(dh_decap_fun(g_56,gy_49,x_634)) in
                                            {9121}let v_2022: bool = not-caught-fail(gxy_98) in
                                            {9122}new s_209[]: seed;
                                            {9123}let gxy_99: element = (if v_2022 then gxy_98 else dh_f(s_209)) in
                                            {9124}event Client_DH_gxy(id_client_5,gxy_99);
                                            {9125}let l_559: label = tls13_derived in
                                            {9126}let m_200: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {9127}let v_2023: bool = not-caught-fail(m_200) in
                                            {9128}let h_535: bitstring = (if v_2023 then catch-fail(hash(@8_backend_h,m_200)) else caught-fail) in
                                            {9129}let v_2024: bool = not-caught-fail(h_535) in
                                            {9130}let x_636: bitstring = (if v_2024 then (l_559,h_535) else caught-fail) in
                                            {9131}let extra_106: bitstring = catch-fail((if v_2023 then (if v_2024 then hmac(@8_backend_h,early_secret_152,x_636) else fail-any) else fail-any)) in
                                            {9132}let v_2025: bool = not-caught-fail(extra_106) in
                                            {9133}let handshake_secret_49: bitstring = (if v_2025 then hmac(@8_backend_h,extra_106,gxy_99) else fail-any) in
                                            {9134}let l_560: label = tls13_derived in
                                            {9135}let m_201: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {9136}let v_2026: bool = not-caught-fail(m_201) in
                                            {9137}let h_536: bitstring = (if v_2026 then catch-fail(hash(@8_backend_h,m_201)) else caught-fail) in
                                            {9138}let v_2027: bool = not-caught-fail(h_536) in
                                            {9139}let x_637: bitstring = (if v_2027 then (l_560,h_536) else caught-fail) in
                                            {9140}let extra_107: bitstring = catch-fail((if v_2026 then (if v_2027 then hmac(@8_backend_h,handshake_secret_49,x_637) else fail-any) else fail-any)) in
                                            {9141}let v_2028: bool = not-caught-fail(extra_107) in
                                            {9142}let k_205: bitstring = (if v_2028 then zero else caught-fail) in
                                            {9143}let master_secret_105: bitstring = (if v_2028 then catch-fail(hmac(@8_backend_h,handshake_secret_49,k_205)) else caught-fail) in
                                            {9144}let v_2029: bool = not-caught-fail(master_secret_105) in
                                            {9145}let l_561: label = (if v_2029 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {9146}let h_537: bitstring = (if v_2029 then catch-fail(hash(@8_backend_h,cur_log2_103)) else caught-fail) in
                                            {9147}let v_2030: bool = not-caught-fail(h_537) in
                                            {9148}let x_638: bitstring = (if v_2030 then (l_561,h_537) else caught-fail) in
                                            {9149}let client_hts_49: bitstring = (if v_2029 then catch-fail((if v_2030 then hmac(@8_backend_h,handshake_secret_49,x_638) else fail-any)) else caught-fail) in
                                            {9150}let v_2031: bool = not-caught-fail(client_hts_49) in
                                            {9151}let l_562: label = (if v_2031 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {9152}let h_538: bitstring = (if v_2031 then catch-fail(hash(@8_backend_h,cur_log2_103)) else caught-fail) in
                                            {9153}let v_2032: bool = not-caught-fail(h_538) in
                                            {9154}let x_639: bitstring = (if v_2032 then (l_562,h_538) else caught-fail) in
                                            {9155}let server_hts_49: bitstring = (if v_2031 then catch-fail((if v_2032 then hmac(@8_backend_h,handshake_secret_49,x_639) else fail-any)) else caught-fail) in
                                            {9156}let v_2033: bool = not-caught-fail(server_hts_49) in
                                            {9157}let l_563: label = (if v_2033 then tls13_key else caught-fail) in
                                            {9158}let h_539: bitstring = (if v_2033 then zero else caught-fail) in
                                            {9159}let x_640: bitstring = (if v_2033 then (l_563,h_539) else caught-fail) in
                                            {9160}let client_wkh_49: bitstring = (if v_2033 then catch-fail(hmac(@8_backend_h,client_hts_49,x_640)) else caught-fail) in
                                            {9161}let v_2034: bool = not-caught-fail(client_wkh_49) in
                                            {9162}let l_564: label = (if v_2034 then tls13_key else caught-fail) in
                                            {9163}let h_540: bitstring = (if v_2034 then zero else caught-fail) in
                                            {9164}let x_641: bitstring = (if v_2034 then (l_564,h_540) else caught-fail) in
                                            {9165}let server_wkh_49: bitstring = (if v_2034 then catch-fail(hmac(@8_backend_h,server_hts_49,x_641)) else caught-fail) in
                                            {9166}let v_2035: bool = not-caught-fail(server_wkh_49) in
                                            {9167}let l_565: label = (if v_2035 then tls13_finished else caught-fail) in
                                            {9168}let h_541: bitstring = (if v_2035 then zero else caught-fail) in
                                            {9169}let x_642: bitstring = (if v_2035 then (l_565,h_541) else caught-fail) in
                                            {9170}let client_fk_49: bitstring = (if v_2035 then catch-fail(hmac(@8_backend_h,client_hts_49,x_642)) else caught-fail) in
                                            {9171}let v_2036: bool = not-caught-fail(client_fk_49) in
                                            {9172}let l_566: label = (if v_2036 then tls13_finished else caught-fail) in
                                            {9173}let h_542: bitstring = (if v_2036 then zero else caught-fail) in
                                            {9174}let x_643: bitstring = (if v_2036 then (l_566,h_542) else caught-fail) in
                                            {9175}let server_fk_49: bitstring = (if v_2036 then catch-fail(hmac(@8_backend_h,server_hts_49,x_643)) else caught-fail) in
                                            {9176}let v_2037: bool = not-caught-fail(server_fk_49) in
                                            {9177}let (master_secret_106: bitstring,chk_56: aead_key,shk_55: aead_key,cfin_56: mac_key,sfin_55: mac_key) = (if v_2028 then (if v_2029 then (if v_2031 then (if v_2033 then (if v_2034 then (if v_2035 then (if v_2036 then (if v_2037 then (master_secret_105,client_wkh_49,server_wkh_49,client_fk_49,server_fk_49) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {9178}event Client_chk(id_client_5,chk_56);
                                            {9179}event Client_shk(id_client_5,shk_55);
                                            {9180}event Client_cfin(id_client_5,cfin_56);
                                            {9181}event Client_sfin(id_client_5,sfin_55);
                                            {9182}in(io, enc_ee_msg_48: bitstring);
                                            {9183}let ee_msg_53: msg = aead_dec(@8_backend_a,shk_55,0,zero,enc_ee_msg_48) in
                                            {9184}let EE(ech_ee_48: echExt,extra_ee_48: extraExt) = ee_msg_53 in
                                            {9185}let cur_log2_104: bitstring = (cur_log2_103,ee_msg_53) in
                                            {9186}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_12,sr_59,@8_backend_h,@8_backend_a,c_dom_7,backend_dom_1,psk_228,safe_psk_54,@8_comp_psk,master_secret_106,chk_56,0,shk_55,1,cfin_56,sfin_55,cur_log2_104)))
                                        )
                                        else
                                            {9187}out(io, illegal_parameter)
                                    )
                                    else
                                        {9188}out(io, illegal_parameter)
                                )
                                else
                                    {9365}get pre_shared_keys(c_dom'_16: domain,=backend_dom_1,=@8_backend_h,id_106: identityPsk,psk_229: preSharedKey,idP_18: idProc,is_safe_92: bool) in
                                    {9189}event Selected_one_time_used_psk(id_client_5,psk_229,is_safe_92);
                                    {9190}event Selected_psk(c_dom_7,c_dom'_16,idP_18,is_safe_92);
                                    {9191}event Selected_psk_no_missmatch(id_client_5,backend_dom_1,@8_backend_h,psk_229,id_106);
                                    {9192}event Selected_psk_with_ID(c_dom_7,c_dom'_16,id_106,idP_18,is_safe_92);
                                    {9193}let v_2038: bitstring = (id_106,psk_229,is_safe_92) in
                                    {9194}let v_2039: bool = success?(1-proj-3-tuple(v_2038)) in
                                    {9195}let is_safe_93: bool = (if v_2039 then 3-proj-3-tuple(v_2038) else caught-fail) in
                                    {9196}let psk_230: preSharedKey = (if v_2039 then 2-proj-3-tuple(v_2038) else caught-fail) in
                                    {9197}let id_107: identityPsk = (if v_2039 then 1-proj-3-tuple(v_2038) else caught-fail) in
                                    {9198}let offer_43: params = (if v_2039 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_7,SNI(backend_dom_1),ech_ext_22,@8_i_extra_ext,trunc_client_psk_ext(id_107)) else caught-fail) in
                                    {9199}let cur_log'_31: bitstring = (if v_2039 then (cur_log_IN1_HRR_4,CH(i_cr_12,offer_43)) else caught-fail) in
                                    {9200}let s_210: bitstring = (if v_2039 then zero else caught-fail) in
                                    {9201}let k_206: bitstring = (if v_2039 then catch-fail(psk2b(psk_230)) else caught-fail) in
                                    {9202}let v_2040: bool = not-caught-fail(k_206) in
                                    {9203}let early_secret_153: bitstring = (if v_2039 then catch-fail((if v_2040 then hmac(@8_backend_h,s_210,k_206) else fail-any)) else caught-fail) in
                                    {9204}let v_2041: bool = not-caught-fail(early_secret_153) in
                                    {9205}let l_567: label = (if v_2041 then tls13_ext_res_binder else caught-fail) in
                                    {9206}let m_202: bitstring = (if v_2041 then zero else caught-fail) in
                                    {9207}let h_543: bitstring = (if v_2041 then catch-fail(hash(@8_backend_h,m_202)) else caught-fail) in
                                    {9208}let v_2042: bool = not-caught-fail(h_543) in
                                    {9209}let x_644: bitstring = (if v_2042 then (l_567,h_543) else caught-fail) in
                                    {9210}let binder_key_102: bitstring = (if v_2041 then catch-fail((if v_2042 then hmac(@8_backend_h,early_secret_153,x_644) else fail-any)) else caught-fail) in
                                    {9211}let v_2043: bool = not-caught-fail(binder_key_102) in
                                    {9212}let v_2044: bitstring = (if v_2039 then catch-fail((if v_2041 then (if v_2043 then (early_secret_153,binder_key_102) else fail-any) else fail-any)) else caught-fail) in
                                    {9213}let v_2045: bool = (not-caught-fail(v_2044) && success?(1-proj-2-tuple(v_2044))) in
                                    {9214}let kb_102: mac_key = (if v_2045 then 2-proj-2-tuple(v_2044) else caught-fail) in
                                    {9215}let es_154: bitstring = (if v_2045 then 1-proj-2-tuple(v_2044) else caught-fail) in
                                    {9216}let binders_30: bitstring = (if v_2045 then catch-fail(hmac(@8_backend_h,kb_102,cur_log'_31)) else caught-fail) in
                                    {9217}let v_2046: bool = not-caught-fail(binders_30) in
                                    {9218}let v_2047: bitstring = catch-fail((if v_2039 then (if v_2045 then (if v_2046 then (client_psk_ext(id_107,binders_30),(psk_230,id_107,es_154,is_safe_93)) else fail-any) else fail-any) else fail-any)) in
                                    {9219}let v_2048: bool = (not-caught-fail(v_2047) && success?(1-proj-2-tuple(v_2047))) in
                                    {9220}let psk_data_54: bitstring = (if v_2048 then 2-proj-2-tuple(v_2047) else caught-fail) in
                                    {9221}let psk_ext_104: preSharedKeyExt = (if v_2048 then 1-proj-2-tuple(v_2047) else caught-fail) in
                                    {9222}let i_offer_18: params = (if v_2048 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_7,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_104) else caught-fail) in
                                    {9223}let i_client_hello_24: msg = (if v_2048 then CH(i_cr_12,i_offer_18) else caught-fail) in
                                    {9224}new fake_id_22[]: identityPsk;
                                    {9225}new fake_binder_22[]: bitstring;
                                    {9226}let o_psk_ext_23: preSharedKeyExt = (if v_2048 then (if @8_use_psk then client_psk_ext(fake_id_22,fake_binder_22) else empty_psk_ext) else caught-fail) in
                                    {9227}let o_ech_ext_ADD_18: echExt = (if v_2048 then ECHClientHelloOuter(ech_h_16,ech_a_16,config_id_16,zero,zero) else caught-fail) in
                                    {9228}let o_offer_ADD_18: params = (if v_2048 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_10,SNI(o_dom_12),o_ech_ext_ADD_18,empty_extra_ext,o_psk_ext_23) else caught-fail) in
                                    {9229}let o_client_hello_ADD_18: msg = (if v_2048 then CH(o_cr_15,o_offer_ADD_18) else caught-fail) in
                                    {9230}let n_20: nat = (if v_2048 then 2 else caught-fail) in
                                    {9231}let v_2049: hpkeContext = (if v_2048 then catch-fail(context_2) else caught-fail) in
                                    {9232}let v_2050: bool = (not-caught-fail(v_2049) && ((S =nf 1-proj-hpke_context(v_2049)) && success?(1-proj-hpke_context(v_2049)))) in
                                    {9233}let base_nonce_23: bitstring = (if v_2050 then 3-proj-hpke_context(v_2049) else caught-fail) in
                                    {9234}let key_23: aead_key = (if v_2050 then 2-proj-hpke_context(v_2049) else caught-fail) in
                                    {9235}let payload_24: bitstring = (if v_2048 then catch-fail((if v_2050 then aead_enc(ech_a_16,key_23,(base_nonce_23,n_20),o_client_hello_ADD_18,i_client_hello_24) else fail-any)) else caught-fail) in
                                    {9236}let v_2051: bool = not-caught-fail(payload_24) in
                                    {9237}let o_ech_ext_23: echExt = (if v_2051 then ECHClientHelloOuter(ech_h_16,ech_a_16,config_id_16,zero,payload_24) else caught-fail) in
                                    {9238}let o_offer_39: params = (if v_2051 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_10,SNI(o_dom_12),o_ech_ext_23,empty_extra_ext,o_psk_ext_23) else caught-fail) in
                                    {9239}let (o_client_hello'_13: msg,i_client_hello'_14: msg,i_cr'_13: bytes32,i_kex_data'_13: bitstring,psk_data'_42: bitstring) = (if v_2048 then (if v_2051 then (CH(o_cr_15,o_offer_39),i_client_hello_24,i_cr_12,i_kex_data_11,psk_data_54) else fail-any) else fail-any) in
                                    {9240}out(io, o_client_hello'_13);
                                    {9241}in(io, server_hello'_38: msg);
                                    {9242}let SH(B32(sr24'_13: bytes24,sr8'_13: bytes8),params'_13: params) = server_hello'_38 in
                                    {9243}let cur_log_IN1_HRR_IN2_13: bitstring = (cur_log_IN1_HRR_4,i_client_hello'_14) in
                                    {9244}let sh_modified_18: msg = SH(B32(sr24'_13,zero8),params'_13) in
                                    {9245}let cur_log_sh_18: bitstring = (cur_log_IN1_HRR_IN2_13,sh_modified_18) in
                                    {9246}let transcript_ech_conf_18: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_18)) in
                                    {9247}let v_2052: bool = not-caught-fail(transcript_ech_conf_18) in
                                    {9248}let s_211: bitstring = (if v_2052 then zero else caught-fail) in
                                    {9249}let k_207: bitstring = (if v_2052 then catch-fail(b32_2_b(get_random(i_client_hello'_14))) else caught-fail) in
                                    {9250}let v_2053: bool = not-caught-fail(k_207) in
                                    {9251}let k_208: bitstring = (if v_2052 then catch-fail((if v_2053 then hmac(@8_backend_h,s_211,k_207) else fail-any)) else caught-fail) in
                                    {9252}let v_2054: bool = not-caught-fail(k_208) in
                                    {9253}let l_568: label = (if v_2054 then ech_accept_confirmation else caught-fail) in
                                    {9254}let x_645: bitstring = (if v_2054 then (l_568,cur_log_sh_18) else caught-fail) in
                                    {9255}let sr8_23: bytes8 = (if v_2052 then catch-fail(crop_into_bytes8((if v_2054 then hmac(@8_backend_h,k_208,x_645) else fail-any))) else caught-fail) in
                                    {9256}let v_2055: bool = not-caught-fail(sr8_23) in
                                    {9257}if (B32(sr24'_13,sr8'_13) = (if v_2052 then (if v_2055 then B32(sr24'_13,sr8_23) else fail-any) else fail-any)) then
                                    {9258}let (x_646: bitstring,g_57: group) = i_kex_data'_13 in
                                    {9259}let (psk_offer_49: preSharedKey,id_offer_49: identityPsk,es_offer_49: bitstring,is_safe_offer_49: bool) = psk_data'_42 in
                                    {9260}event Client_PSKOffer(id_client_5,psk_offer_49,id_offer_49,is_safe_offer_49);
                                    {9261}event Client_Rand_client(id_client_5,i_cr'_13);
                                    {9262}event Client_DH_client(id_client_5,dh_pub(g_57,x_646));
                                    {9263}event Client_server_domain(id_client_5,backend_dom_1);
                                    {9264}let SH(sr_60: bytes32,mode_57: params) = server_hello'_38 in
                                    {9265}event Client_Rand_server(id_client_5,sr_60);
                                    {9266}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_57,gy_50: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_105: preSharedKeyExt) = mode_57 in
                                    (
                                        {9267}let cur_log2_105: bitstring = (cur_log_IN1_HRR_IN2_13,server_hello'_38) in
                                        {9268}event Client_DH_server(id_client_5,gy_50);
                                        {9269}let v_2056: bool = (psk_ext_105 = empty_psk_ext) in
                                        {9270}let psk_231: preSharedKey = (if v_2056 then NoPsk else caught-fail) in
                                        {9271}let s_212: bitstring = (if v_2056 then zero else caught-fail) in
                                        {9272}let k_209: bitstring = (if v_2056 then catch-fail(psk2b(psk_231)) else caught-fail) in
                                        {9273}let v_2057: bool = not-caught-fail(k_209) in
                                        {9274}let early_secret_154: bitstring = (if v_2056 then catch-fail((if v_2057 then hmac(@8_backend_h,s_212,k_209) else fail-any)) else caught-fail) in
                                        {9275}let v_2058: bool = not-caught-fail(early_secret_154) in
                                        {9276}let l_569: label = (if v_2058 then tls13_ext_res_binder else caught-fail) in
                                        {9277}let m_203: bitstring = (if v_2058 then zero else caught-fail) in
                                        {9278}let h_544: bitstring = (if v_2058 then catch-fail(hash(@8_backend_h,m_203)) else caught-fail) in
                                        {9279}let v_2059: bool = not-caught-fail(h_544) in
                                        {9280}let x_647: bitstring = (if v_2059 then (l_569,h_544) else caught-fail) in
                                        {9281}let binder_key_103: bitstring = (if v_2058 then catch-fail((if v_2059 then hmac(@8_backend_h,early_secret_154,x_647) else fail-any)) else caught-fail) in
                                        {9282}let v_2060: bool = not-caught-fail(binder_key_103) in
                                        {9283}let v_2061: bitstring = (if v_2056 then catch-fail((if v_2058 then (if v_2060 then (early_secret_154,binder_key_103) else fail-any) else fail-any)) else caught-fail) in
                                        {9284}let v_2062: bool = (not-caught-fail(v_2061) && success?(1-proj-2-tuple(v_2061))) in
                                        {9285}let kb_103: mac_key = (if v_2062 then 2-proj-2-tuple(v_2061) else caught-fail) in
                                        {9286}let es_155: bitstring = (if v_2062 then 1-proj-2-tuple(v_2061) else caught-fail) in
                                        {9287}let v_2063: bitstring = (if not(v_2056) then catch-fail(psk_data'_42) else caught-fail) in
                                        {9288}let v_2064: bool = (not-caught-fail(v_2063) && success?(1-proj-4-tuple(v_2063))) in
                                        {9289}let is_safe_94: bool = (if v_2064 then 4-proj-4-tuple(v_2063) else caught-fail) in
                                        {9290}let es_156: bitstring = (if v_2064 then 3-proj-4-tuple(v_2063) else caught-fail) in
                                        {9291}let id_108: identityPsk = (if v_2064 then 2-proj-4-tuple(v_2063) else caught-fail) in
                                        {9292}let psk_232: preSharedKey = (if v_2064 then 1-proj-4-tuple(v_2063) else caught-fail) in
                                        {9293}let (psk_233: preSharedKey,early_secret_155: bitstring,valid_49: bool,safe_psk_55: bool) = (if v_2056 then (if v_2062 then (NoPsk,es_155,true,false) else fail-any) else (if v_2064 then (psk_232,es_156,((psk_232 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_105)),is_safe_94) else fail-any)) in
                                        {9294}event Client_PSKChoosen(id_client_5,psk_233,safe_psk_55);
                                        {9295}if valid_49 then
                                        (
                                            {9296}let gxy_100: element = catch-fail(dh_decap_fun(g_57,gy_50,x_646)) in
                                            {9297}let v_2065: bool = not-caught-fail(gxy_100) in
                                            {9298}new s_213[]: seed;
                                            {9299}let gxy_101: element = (if v_2065 then gxy_100 else dh_f(s_213)) in
                                            {9300}event Client_DH_gxy(id_client_5,gxy_101);
                                            {9301}let l_570: label = tls13_derived in
                                            {9302}let m_204: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {9303}let v_2066: bool = not-caught-fail(m_204) in
                                            {9304}let h_545: bitstring = (if v_2066 then catch-fail(hash(@8_backend_h,m_204)) else caught-fail) in
                                            {9305}let v_2067: bool = not-caught-fail(h_545) in
                                            {9306}let x_648: bitstring = (if v_2067 then (l_570,h_545) else caught-fail) in
                                            {9307}let extra_108: bitstring = catch-fail((if v_2066 then (if v_2067 then hmac(@8_backend_h,early_secret_155,x_648) else fail-any) else fail-any)) in
                                            {9308}let v_2068: bool = not-caught-fail(extra_108) in
                                            {9309}let handshake_secret_50: bitstring = (if v_2068 then hmac(@8_backend_h,extra_108,gxy_101) else fail-any) in
                                            {9310}let l_571: label = tls13_derived in
                                            {9311}let m_205: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {9312}let v_2069: bool = not-caught-fail(m_205) in
                                            {9313}let h_546: bitstring = (if v_2069 then catch-fail(hash(@8_backend_h,m_205)) else caught-fail) in
                                            {9314}let v_2070: bool = not-caught-fail(h_546) in
                                            {9315}let x_649: bitstring = (if v_2070 then (l_571,h_546) else caught-fail) in
                                            {9316}let extra_109: bitstring = catch-fail((if v_2069 then (if v_2070 then hmac(@8_backend_h,handshake_secret_50,x_649) else fail-any) else fail-any)) in
                                            {9317}let v_2071: bool = not-caught-fail(extra_109) in
                                            {9318}let k_210: bitstring = (if v_2071 then zero else caught-fail) in
                                            {9319}let master_secret_107: bitstring = (if v_2071 then catch-fail(hmac(@8_backend_h,handshake_secret_50,k_210)) else caught-fail) in
                                            {9320}let v_2072: bool = not-caught-fail(master_secret_107) in
                                            {9321}let l_572: label = (if v_2072 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {9322}let h_547: bitstring = (if v_2072 then catch-fail(hash(@8_backend_h,cur_log2_105)) else caught-fail) in
                                            {9323}let v_2073: bool = not-caught-fail(h_547) in
                                            {9324}let x_650: bitstring = (if v_2073 then (l_572,h_547) else caught-fail) in
                                            {9325}let client_hts_50: bitstring = (if v_2072 then catch-fail((if v_2073 then hmac(@8_backend_h,handshake_secret_50,x_650) else fail-any)) else caught-fail) in
                                            {9326}let v_2074: bool = not-caught-fail(client_hts_50) in
                                            {9327}let l_573: label = (if v_2074 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {9328}let h_548: bitstring = (if v_2074 then catch-fail(hash(@8_backend_h,cur_log2_105)) else caught-fail) in
                                            {9329}let v_2075: bool = not-caught-fail(h_548) in
                                            {9330}let x_651: bitstring = (if v_2075 then (l_573,h_548) else caught-fail) in
                                            {9331}let server_hts_50: bitstring = (if v_2074 then catch-fail((if v_2075 then hmac(@8_backend_h,handshake_secret_50,x_651) else fail-any)) else caught-fail) in
                                            {9332}let v_2076: bool = not-caught-fail(server_hts_50) in
                                            {9333}let l_574: label = (if v_2076 then tls13_key else caught-fail) in
                                            {9334}let h_549: bitstring = (if v_2076 then zero else caught-fail) in
                                            {9335}let x_652: bitstring = (if v_2076 then (l_574,h_549) else caught-fail) in
                                            {9336}let client_wkh_50: bitstring = (if v_2076 then catch-fail(hmac(@8_backend_h,client_hts_50,x_652)) else caught-fail) in
                                            {9337}let v_2077: bool = not-caught-fail(client_wkh_50) in
                                            {9338}let l_575: label = (if v_2077 then tls13_key else caught-fail) in
                                            {9339}let h_550: bitstring = (if v_2077 then zero else caught-fail) in
                                            {9340}let x_653: bitstring = (if v_2077 then (l_575,h_550) else caught-fail) in
                                            {9341}let server_wkh_50: bitstring = (if v_2077 then catch-fail(hmac(@8_backend_h,server_hts_50,x_653)) else caught-fail) in
                                            {9342}let v_2078: bool = not-caught-fail(server_wkh_50) in
                                            {9343}let l_576: label = (if v_2078 then tls13_finished else caught-fail) in
                                            {9344}let h_551: bitstring = (if v_2078 then zero else caught-fail) in
                                            {9345}let x_654: bitstring = (if v_2078 then (l_576,h_551) else caught-fail) in
                                            {9346}let client_fk_50: bitstring = (if v_2078 then catch-fail(hmac(@8_backend_h,client_hts_50,x_654)) else caught-fail) in
                                            {9347}let v_2079: bool = not-caught-fail(client_fk_50) in
                                            {9348}let l_577: label = (if v_2079 then tls13_finished else caught-fail) in
                                            {9349}let h_552: bitstring = (if v_2079 then zero else caught-fail) in
                                            {9350}let x_655: bitstring = (if v_2079 then (l_577,h_552) else caught-fail) in
                                            {9351}let server_fk_50: bitstring = (if v_2079 then catch-fail(hmac(@8_backend_h,server_hts_50,x_655)) else caught-fail) in
                                            {9352}let v_2080: bool = not-caught-fail(server_fk_50) in
                                            {9353}let (master_secret_108: bitstring,chk_57: aead_key,shk_56: aead_key,cfin_57: mac_key,sfin_56: mac_key) = (if v_2071 then (if v_2072 then (if v_2074 then (if v_2076 then (if v_2077 then (if v_2078 then (if v_2079 then (if v_2080 then (master_secret_107,client_wkh_50,server_wkh_50,client_fk_50,server_fk_50) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {9354}event Client_chk(id_client_5,chk_57);
                                            {9355}event Client_shk(id_client_5,shk_56);
                                            {9356}event Client_cfin(id_client_5,cfin_57);
                                            {9357}event Client_sfin(id_client_5,sfin_56);
                                            {9358}in(io, enc_ee_msg_49: bitstring);
                                            {9359}let ee_msg_54: msg = aead_dec(@8_backend_a,shk_56,0,zero,enc_ee_msg_49) in
                                            {9360}let EE(ech_ee_49: echExt,extra_ee_49: extraExt) = ee_msg_54 in
                                            {9361}let cur_log2_106: bitstring = (cur_log2_105,ee_msg_54) in
                                            {9362}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_13,sr_60,@8_backend_h,@8_backend_a,c_dom_7,backend_dom_1,psk_233,safe_psk_55,@8_comp_psk,master_secret_108,chk_57,0,shk_56,1,cfin_57,sfin_56,cur_log2_106)))
                                        )
                                        else
                                            {9363}out(io, illegal_parameter)
                                    )
                                    else
                                        {9364}out(io, illegal_parameter)
                            )
                            else
                                {9366}let psk_234: preSharedKey = NoPsk in
                                {9367}let s_214: bitstring = zero in
                                {9368}let k_211: bitstring = catch-fail(psk2b(psk_234)) in
                                {9369}let v_2081: bool = not-caught-fail(k_211) in
                                {9370}let early_secret_156: bitstring = catch-fail((if v_2081 then hmac(@8_backend_h,s_214,k_211) else fail-any)) in
                                {9371}let v_2082: bool = not-caught-fail(early_secret_156) in
                                {9372}let l_578: label = (if v_2082 then tls13_ext_res_binder else caught-fail) in
                                {9373}let m_206: bitstring = (if v_2082 then zero else caught-fail) in
                                {9374}let h_553: bitstring = (if v_2082 then catch-fail(hash(@8_backend_h,m_206)) else caught-fail) in
                                {9375}let v_2083: bool = not-caught-fail(h_553) in
                                {9376}let x_656: bitstring = (if v_2083 then (l_578,h_553) else caught-fail) in
                                {9377}let binder_key_104: bitstring = (if v_2082 then catch-fail((if v_2083 then hmac(@8_backend_h,early_secret_156,x_656) else fail-any)) else caught-fail) in
                                {9378}let v_2084: bool = not-caught-fail(binder_key_104) in
                                {9379}let v_2085: bitstring = catch-fail((if v_2082 then (if v_2084 then (early_secret_156,binder_key_104) else fail-any) else fail-any)) in
                                {9380}let v_2086: bool = (not-caught-fail(v_2085) && success?(1-proj-2-tuple(v_2085))) in
                                {9381}let kb_104: mac_key = (if v_2086 then 2-proj-2-tuple(v_2085) else caught-fail) in
                                {9382}let es_157: bitstring = (if v_2086 then 1-proj-2-tuple(v_2085) else caught-fail) in
                                {9383}let v_2087: bitstring = catch-fail((if v_2086 then (empty_psk_ext,(NoPsk,zero,es_157,false)) else fail-any)) in
                                {9384}let v_2088: bool = (not-caught-fail(v_2087) && success?(1-proj-2-tuple(v_2087))) in
                                {9385}let psk_data_55: bitstring = (if v_2088 then 2-proj-2-tuple(v_2087) else caught-fail) in
                                {9386}let psk_ext_106: preSharedKeyExt = (if v_2088 then 1-proj-2-tuple(v_2087) else caught-fail) in
                                {9387}let i_offer_19: params = (if v_2088 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_7,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_106) else caught-fail) in
                                {9388}let i_client_hello_25: msg = (if v_2088 then CH(i_cr_12,i_offer_19) else caught-fail) in
                                {9389}new fake_id_23[]: identityPsk;
                                {9390}new fake_binder_23[]: bitstring;
                                {9391}let o_psk_ext_24: preSharedKeyExt = (if v_2088 then (if @8_use_psk then client_psk_ext(fake_id_23,fake_binder_23) else empty_psk_ext) else caught-fail) in
                                {9392}let o_ech_ext_ADD_19: echExt = (if v_2088 then ECHClientHelloOuter(ech_h_16,ech_a_16,config_id_16,zero,zero) else caught-fail) in
                                {9393}let o_offer_ADD_19: params = (if v_2088 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_10,SNI(o_dom_12),o_ech_ext_ADD_19,empty_extra_ext,o_psk_ext_24) else caught-fail) in
                                {9394}let o_client_hello_ADD_19: msg = (if v_2088 then CH(o_cr_15,o_offer_ADD_19) else caught-fail) in
                                {9395}let n_21: nat = (if v_2088 then 2 else caught-fail) in
                                {9396}let v_2089: hpkeContext = (if v_2088 then catch-fail(context_2) else caught-fail) in
                                {9397}let v_2090: bool = (not-caught-fail(v_2089) && ((S =nf 1-proj-hpke_context(v_2089)) && success?(1-proj-hpke_context(v_2089)))) in
                                {9398}let base_nonce_24: bitstring = (if v_2090 then 3-proj-hpke_context(v_2089) else caught-fail) in
                                {9399}let key_24: aead_key = (if v_2090 then 2-proj-hpke_context(v_2089) else caught-fail) in
                                {9400}let payload_25: bitstring = (if v_2088 then catch-fail((if v_2090 then aead_enc(ech_a_16,key_24,(base_nonce_24,n_21),o_client_hello_ADD_19,i_client_hello_25) else fail-any)) else caught-fail) in
                                {9401}let v_2091: bool = not-caught-fail(payload_25) in
                                {9402}let o_ech_ext_24: echExt = (if v_2091 then ECHClientHelloOuter(ech_h_16,ech_a_16,config_id_16,zero,payload_25) else caught-fail) in
                                {9403}let o_offer_40: params = (if v_2091 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_10,SNI(o_dom_12),o_ech_ext_24,empty_extra_ext,o_psk_ext_24) else caught-fail) in
                                {9404}let (o_client_hello'_14: msg,i_client_hello'_15: msg,i_cr'_14: bytes32,i_kex_data'_14: bitstring,psk_data'_43: bitstring) = (if v_2088 then (if v_2091 then (CH(o_cr_15,o_offer_40),i_client_hello_25,i_cr_12,i_kex_data_11,psk_data_55) else fail-any) else fail-any) in
                                {9405}out(io, o_client_hello'_14);
                                {9406}in(io, server_hello'_39: msg);
                                {9407}let SH(B32(sr24'_14: bytes24,sr8'_14: bytes8),params'_14: params) = server_hello'_39 in
                                {9408}let cur_log_IN1_HRR_IN2_14: bitstring = (cur_log_IN1_HRR_4,i_client_hello'_15) in
                                {9409}let sh_modified_19: msg = SH(B32(sr24'_14,zero8),params'_14) in
                                {9410}let cur_log_sh_19: bitstring = (cur_log_IN1_HRR_IN2_14,sh_modified_19) in
                                {9411}let transcript_ech_conf_19: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_19)) in
                                {9412}let v_2092: bool = not-caught-fail(transcript_ech_conf_19) in
                                {9413}let s_215: bitstring = (if v_2092 then zero else caught-fail) in
                                {9414}let k_212: bitstring = (if v_2092 then catch-fail(b32_2_b(get_random(i_client_hello'_15))) else caught-fail) in
                                {9415}let v_2093: bool = not-caught-fail(k_212) in
                                {9416}let k_213: bitstring = (if v_2092 then catch-fail((if v_2093 then hmac(@8_backend_h,s_215,k_212) else fail-any)) else caught-fail) in
                                {9417}let v_2094: bool = not-caught-fail(k_213) in
                                {9418}let l_579: label = (if v_2094 then ech_accept_confirmation else caught-fail) in
                                {9419}let x_657: bitstring = (if v_2094 then (l_579,cur_log_sh_19) else caught-fail) in
                                {9420}let sr8_24: bytes8 = (if v_2092 then catch-fail(crop_into_bytes8((if v_2094 then hmac(@8_backend_h,k_213,x_657) else fail-any))) else caught-fail) in
                                {9421}let v_2095: bool = not-caught-fail(sr8_24) in
                                {9422}if (B32(sr24'_14,sr8'_14) = (if v_2092 then (if v_2095 then B32(sr24'_14,sr8_24) else fail-any) else fail-any)) then
                                {9423}let (x_658: bitstring,g_58: group) = i_kex_data'_14 in
                                {9424}let (psk_offer_50: preSharedKey,id_offer_50: identityPsk,es_offer_50: bitstring,is_safe_offer_50: bool) = psk_data'_43 in
                                {9425}event Client_PSKOffer(id_client_5,psk_offer_50,id_offer_50,is_safe_offer_50);
                                {9426}event Client_Rand_client(id_client_5,i_cr'_14);
                                {9427}event Client_DH_client(id_client_5,dh_pub(g_58,x_658));
                                {9428}event Client_server_domain(id_client_5,backend_dom_1);
                                {9429}let SH(sr_61: bytes32,mode_58: params) = server_hello'_39 in
                                {9430}event Client_Rand_server(id_client_5,sr_61);
                                {9431}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_58,gy_51: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_107: preSharedKeyExt) = mode_58 in
                                (
                                    {9432}let cur_log2_107: bitstring = (cur_log_IN1_HRR_IN2_14,server_hello'_39) in
                                    {9433}event Client_DH_server(id_client_5,gy_51);
                                    {9434}let v_2096: bool = (psk_ext_107 = empty_psk_ext) in
                                    {9435}let psk_235: preSharedKey = (if v_2096 then NoPsk else caught-fail) in
                                    {9436}let s_216: bitstring = (if v_2096 then zero else caught-fail) in
                                    {9437}let k_214: bitstring = (if v_2096 then catch-fail(psk2b(psk_235)) else caught-fail) in
                                    {9438}let v_2097: bool = not-caught-fail(k_214) in
                                    {9439}let early_secret_157: bitstring = (if v_2096 then catch-fail((if v_2097 then hmac(@8_backend_h,s_216,k_214) else fail-any)) else caught-fail) in
                                    {9440}let v_2098: bool = not-caught-fail(early_secret_157) in
                                    {9441}let l_580: label = (if v_2098 then tls13_ext_res_binder else caught-fail) in
                                    {9442}let m_207: bitstring = (if v_2098 then zero else caught-fail) in
                                    {9443}let h_554: bitstring = (if v_2098 then catch-fail(hash(@8_backend_h,m_207)) else caught-fail) in
                                    {9444}let v_2099: bool = not-caught-fail(h_554) in
                                    {9445}let x_659: bitstring = (if v_2099 then (l_580,h_554) else caught-fail) in
                                    {9446}let binder_key_105: bitstring = (if v_2098 then catch-fail((if v_2099 then hmac(@8_backend_h,early_secret_157,x_659) else fail-any)) else caught-fail) in
                                    {9447}let v_2100: bool = not-caught-fail(binder_key_105) in
                                    {9448}let v_2101: bitstring = (if v_2096 then catch-fail((if v_2098 then (if v_2100 then (early_secret_157,binder_key_105) else fail-any) else fail-any)) else caught-fail) in
                                    {9449}let v_2102: bool = (not-caught-fail(v_2101) && success?(1-proj-2-tuple(v_2101))) in
                                    {9450}let kb_105: mac_key = (if v_2102 then 2-proj-2-tuple(v_2101) else caught-fail) in
                                    {9451}let es_158: bitstring = (if v_2102 then 1-proj-2-tuple(v_2101) else caught-fail) in
                                    {9452}let v_2103: bitstring = (if not(v_2096) then catch-fail(psk_data'_43) else caught-fail) in
                                    {9453}let v_2104: bool = (not-caught-fail(v_2103) && success?(1-proj-4-tuple(v_2103))) in
                                    {9454}let is_safe_95: bool = (if v_2104 then 4-proj-4-tuple(v_2103) else caught-fail) in
                                    {9455}let es_159: bitstring = (if v_2104 then 3-proj-4-tuple(v_2103) else caught-fail) in
                                    {9456}let id_109: identityPsk = (if v_2104 then 2-proj-4-tuple(v_2103) else caught-fail) in
                                    {9457}let psk_236: preSharedKey = (if v_2104 then 1-proj-4-tuple(v_2103) else caught-fail) in
                                    {9458}let (psk_237: preSharedKey,early_secret_158: bitstring,valid_50: bool,safe_psk_56: bool) = (if v_2096 then (if v_2102 then (NoPsk,es_158,true,false) else fail-any) else (if v_2104 then (psk_236,es_159,((psk_236 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_107)),is_safe_95) else fail-any)) in
                                    {9459}event Client_PSKChoosen(id_client_5,psk_237,safe_psk_56);
                                    {9460}if valid_50 then
                                    (
                                        {9461}let gxy_102: element = catch-fail(dh_decap_fun(g_58,gy_51,x_658)) in
                                        {9462}let v_2105: bool = not-caught-fail(gxy_102) in
                                        {9463}new s_217[]: seed;
                                        {9464}let gxy_103: element = (if v_2105 then gxy_102 else dh_f(s_217)) in
                                        {9465}event Client_DH_gxy(id_client_5,gxy_103);
                                        {9466}let l_581: label = tls13_derived in
                                        {9467}let m_208: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {9468}let v_2106: bool = not-caught-fail(m_208) in
                                        {9469}let h_555: bitstring = (if v_2106 then catch-fail(hash(@8_backend_h,m_208)) else caught-fail) in
                                        {9470}let v_2107: bool = not-caught-fail(h_555) in
                                        {9471}let x_660: bitstring = (if v_2107 then (l_581,h_555) else caught-fail) in
                                        {9472}let extra_110: bitstring = catch-fail((if v_2106 then (if v_2107 then hmac(@8_backend_h,early_secret_158,x_660) else fail-any) else fail-any)) in
                                        {9473}let v_2108: bool = not-caught-fail(extra_110) in
                                        {9474}let handshake_secret_51: bitstring = (if v_2108 then hmac(@8_backend_h,extra_110,gxy_103) else fail-any) in
                                        {9475}let l_582: label = tls13_derived in
                                        {9476}let m_209: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {9477}let v_2109: bool = not-caught-fail(m_209) in
                                        {9478}let h_556: bitstring = (if v_2109 then catch-fail(hash(@8_backend_h,m_209)) else caught-fail) in
                                        {9479}let v_2110: bool = not-caught-fail(h_556) in
                                        {9480}let x_661: bitstring = (if v_2110 then (l_582,h_556) else caught-fail) in
                                        {9481}let extra_111: bitstring = catch-fail((if v_2109 then (if v_2110 then hmac(@8_backend_h,handshake_secret_51,x_661) else fail-any) else fail-any)) in
                                        {9482}let v_2111: bool = not-caught-fail(extra_111) in
                                        {9483}let k_215: bitstring = (if v_2111 then zero else caught-fail) in
                                        {9484}let master_secret_109: bitstring = (if v_2111 then catch-fail(hmac(@8_backend_h,handshake_secret_51,k_215)) else caught-fail) in
                                        {9485}let v_2112: bool = not-caught-fail(master_secret_109) in
                                        {9486}let l_583: label = (if v_2112 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {9487}let h_557: bitstring = (if v_2112 then catch-fail(hash(@8_backend_h,cur_log2_107)) else caught-fail) in
                                        {9488}let v_2113: bool = not-caught-fail(h_557) in
                                        {9489}let x_662: bitstring = (if v_2113 then (l_583,h_557) else caught-fail) in
                                        {9490}let client_hts_51: bitstring = (if v_2112 then catch-fail((if v_2113 then hmac(@8_backend_h,handshake_secret_51,x_662) else fail-any)) else caught-fail) in
                                        {9491}let v_2114: bool = not-caught-fail(client_hts_51) in
                                        {9492}let l_584: label = (if v_2114 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {9493}let h_558: bitstring = (if v_2114 then catch-fail(hash(@8_backend_h,cur_log2_107)) else caught-fail) in
                                        {9494}let v_2115: bool = not-caught-fail(h_558) in
                                        {9495}let x_663: bitstring = (if v_2115 then (l_584,h_558) else caught-fail) in
                                        {9496}let server_hts_51: bitstring = (if v_2114 then catch-fail((if v_2115 then hmac(@8_backend_h,handshake_secret_51,x_663) else fail-any)) else caught-fail) in
                                        {9497}let v_2116: bool = not-caught-fail(server_hts_51) in
                                        {9498}let l_585: label = (if v_2116 then tls13_key else caught-fail) in
                                        {9499}let h_559: bitstring = (if v_2116 then zero else caught-fail) in
                                        {9500}let x_664: bitstring = (if v_2116 then (l_585,h_559) else caught-fail) in
                                        {9501}let client_wkh_51: bitstring = (if v_2116 then catch-fail(hmac(@8_backend_h,client_hts_51,x_664)) else caught-fail) in
                                        {9502}let v_2117: bool = not-caught-fail(client_wkh_51) in
                                        {9503}let l_586: label = (if v_2117 then tls13_key else caught-fail) in
                                        {9504}let h_560: bitstring = (if v_2117 then zero else caught-fail) in
                                        {9505}let x_665: bitstring = (if v_2117 then (l_586,h_560) else caught-fail) in
                                        {9506}let server_wkh_51: bitstring = (if v_2117 then catch-fail(hmac(@8_backend_h,server_hts_51,x_665)) else caught-fail) in
                                        {9507}let v_2118: bool = not-caught-fail(server_wkh_51) in
                                        {9508}let l_587: label = (if v_2118 then tls13_finished else caught-fail) in
                                        {9509}let h_561: bitstring = (if v_2118 then zero else caught-fail) in
                                        {9510}let x_666: bitstring = (if v_2118 then (l_587,h_561) else caught-fail) in
                                        {9511}let client_fk_51: bitstring = (if v_2118 then catch-fail(hmac(@8_backend_h,client_hts_51,x_666)) else caught-fail) in
                                        {9512}let v_2119: bool = not-caught-fail(client_fk_51) in
                                        {9513}let l_588: label = (if v_2119 then tls13_finished else caught-fail) in
                                        {9514}let h_562: bitstring = (if v_2119 then zero else caught-fail) in
                                        {9515}let x_667: bitstring = (if v_2119 then (l_588,h_562) else caught-fail) in
                                        {9516}let server_fk_51: bitstring = (if v_2119 then catch-fail(hmac(@8_backend_h,server_hts_51,x_667)) else caught-fail) in
                                        {9517}let v_2120: bool = not-caught-fail(server_fk_51) in
                                        {9518}let (master_secret_110: bitstring,chk_58: aead_key,shk_57: aead_key,cfin_58: mac_key,sfin_57: mac_key) = (if v_2111 then (if v_2112 then (if v_2114 then (if v_2116 then (if v_2117 then (if v_2118 then (if v_2119 then (if v_2120 then (master_secret_109,client_wkh_51,server_wkh_51,client_fk_51,server_fk_51) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {9519}event Client_chk(id_client_5,chk_58);
                                        {9520}event Client_shk(id_client_5,shk_57);
                                        {9521}event Client_cfin(id_client_5,cfin_58);
                                        {9522}event Client_sfin(id_client_5,sfin_57);
                                        {9523}in(io, enc_ee_msg_50: bitstring);
                                        {9524}let ee_msg_55: msg = aead_dec(@8_backend_a,shk_57,0,zero,enc_ee_msg_50) in
                                        {9525}let EE(ech_ee_50: echExt,extra_ee_50: extraExt) = ee_msg_55 in
                                        {9526}let cur_log2_108: bitstring = (cur_log2_107,ee_msg_55) in
                                        {9527}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_14,sr_61,@8_backend_h,@8_backend_a,c_dom_7,backend_dom_1,psk_237,safe_psk_56,@8_comp_psk,master_secret_110,chk_58,0,shk_57,1,cfin_58,sfin_57,cur_log2_108)))
                                    )
                                    else
                                        {9528}out(io, illegal_parameter)
                                )
                                else
                                    {9529}out(io, illegal_parameter)
                        )
                        else
                            {9530}let cur_log_OU1_HRR_4: bitstring = ((zero,o_client_hello_6),server_hello_8) in
                            {9531}let ech_config(config_id_17: configId,ech_g_17: group,pkR_19: element,o_dom_13: domain,ech_h_17: hash_alg,ech_a_17: aead_alg) = ech_conf_2 in
                            {9532}new rand24_23[]: bytes24;
                            {9533}new rand8_23[]: bytes8;
                            {9534}let o_cr_16: bytes32 = B32(rand24_23,rand8_23) in
                            {9535}let send_key_share_14: bool = true in
                            {9536}new s_218[]: seed;
                            {9537}let gx_53: element = dh_pub(@8_tls_g,dh_k(s_218)) in
                            {9538}let v_2121: bitstring = (dh_k(s_218),gx_53) in
                            {9539}let v_2122: bool = success?(1-proj-2-tuple(v_2121)) in
                            {9540}let gx_54: element = (if v_2122 then 2-proj-2-tuple(v_2121) else caught-fail) in
                            {9541}let x_668: bitstring = (if v_2122 then 1-proj-2-tuple(v_2121) else caught-fail) in
                            {9542}let kex_22: kex_alg = (if v_2122 then (if send_key_share_14 then DHE_kex(@8_tls_g,gx_54) else DHE_group(@8_tls_g)) else caught-fail) in
                            {9543}let (o_kex_ext_11: keyShareExt,kex_data_11: bitstring) = (if v_2122 then (client_kex_ext(kex_22),(x_668,@8_tls_g)) else fail-any) in
                            {9544}if @8_use_grease then
                            (
                                {9545}let extra_112: extraExt = empty_extra_ext in
                                {9546}if @8_use_psk then
                                (
                                    {9547}let (psk_238: preSharedKey,id_110: identityPsk,old_es_15: bitstring,is_safe_96: bool) = psk_data_52 in
                                    (
                                        {9548}let offer_44: params = nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_11,SNI(o_dom_13),o_ech_ext_21,extra_112,trunc_client_psk_ext(id_110)) in
                                        {9549}let cur_log'_32: bitstring = (cur_log_OU1_HRR_4,CH(o_cr_16,offer_44)) in
                                        {9550}let s_219: bitstring = zero in
                                        {9551}let k_216: bitstring = catch-fail(psk2b(psk_238)) in
                                        {9552}let v_2123: bool = not-caught-fail(k_216) in
                                        {9553}let early_secret_159: bitstring = catch-fail((if v_2123 then hmac(@8_tls_h,s_219,k_216) else fail-any)) in
                                        {9554}let v_2124: bool = not-caught-fail(early_secret_159) in
                                        {9555}let l_589: label = (if v_2124 then tls13_ext_res_binder else caught-fail) in
                                        {9556}let m_210: bitstring = (if v_2124 then zero else caught-fail) in
                                        {9557}let h_563: bitstring = (if v_2124 then catch-fail(hash(@8_tls_h,m_210)) else caught-fail) in
                                        {9558}let v_2125: bool = not-caught-fail(h_563) in
                                        {9559}let x_669: bitstring = (if v_2125 then (l_589,h_563) else caught-fail) in
                                        {9560}let binder_key_106: bitstring = (if v_2124 then catch-fail((if v_2125 then hmac(@8_tls_h,early_secret_159,x_669) else fail-any)) else caught-fail) in
                                        {9561}let v_2126: bool = not-caught-fail(binder_key_106) in
                                        {9562}let v_2127: bitstring = catch-fail((if v_2124 then (if v_2126 then (early_secret_159,binder_key_106) else fail-any) else fail-any)) in
                                        {9563}let v_2128: bool = (not-caught-fail(v_2127) && success?(1-proj-2-tuple(v_2127))) in
                                        {9564}let kb_106: mac_key = (if v_2128 then 2-proj-2-tuple(v_2127) else caught-fail) in
                                        {9565}let es_160: bitstring = (if v_2128 then 1-proj-2-tuple(v_2127) else caught-fail) in
                                        {9566}let binders_31: bitstring = (if v_2128 then catch-fail(hmac(@8_tls_h,kb_106,cur_log'_32)) else caught-fail) in
                                        {9567}let v_2129: bool = not-caught-fail(binders_31) in
                                        {9568}let v_2130: bitstring = catch-fail((if v_2128 then (if v_2129 then (client_psk_ext(id_110,binders_31),(psk_238,id_110,es_160,is_safe_96)) else fail-any) else fail-any)) in
                                        {9569}let v_2131: bool = (not-caught-fail(v_2130) && success?(1-proj-2-tuple(v_2130))) in
                                        {9570}let psk_data_56: bitstring = (if v_2131 then 2-proj-2-tuple(v_2130) else caught-fail) in
                                        {9571}let psk_ext_108: preSharedKeyExt = (if v_2131 then 1-proj-2-tuple(v_2130) else caught-fail) in
                                        {9572}let o_offer_41: params = (if v_2131 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_11,SNI(o_dom_13),o_ech_ext_21,empty_extra_ext,psk_ext_108) else caught-fail) in
                                        {9573}let (client_hello'_28: msg,cr'_30: bytes32,kex_data'_25: bitstring,psk_data'_44: bitstring) = (if v_2131 then (CH(o_cr_16,o_offer_41),o_cr_16,kex_data_11,psk_data_56) else fail-any) in
                                        {9574}out(io, client_hello'_28);
                                        {9575}let cur_log_OU1_HRR_OU2_16: bitstring = (cur_log_OU1_HRR_4,client_hello'_28) in
                                        {9576}in(io, server_hello'_40: msg);
                                        {9577}let SH(sr'_25: bytes32,mode'_25: params) = server_hello'_40 in
                                        (
                                            {9578}if (sr'_25 = B32(HRR24,HRR8)) then
                                                {9579}out(io, unexpected_message)
                                            else
                                                {9580}let (x_670: bitstring,g_59: group) = kex_data'_25 in
                                                {9581}let (psk_offer_51: preSharedKey,id_offer_51: identityPsk,es_offer_51: bitstring,is_safe_offer_51: bool) = psk_data'_44 in
                                                {9582}event Client_PSKOffer(id_client_5,psk_offer_51,id_offer_51,is_safe_offer_51);
                                                {9583}event Client_Rand_client(id_client_5,cr'_30);
                                                {9584}event Client_DH_client(id_client_5,dh_pub(g_59,x_670));
                                                {9585}event Client_server_domain(id_client_5,o_dom_8);
                                                {9586}let SH(sr_62: bytes32,mode_59: params) = server_hello'_40 in
                                                {9587}event Client_Rand_server(id_client_5,sr_62);
                                                {9588}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_59,gy_52: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_109: preSharedKeyExt) = mode_59 in
                                                (
                                                    {9589}let cur_log2_109: bitstring = (cur_log_OU1_HRR_OU2_16,server_hello'_40) in
                                                    {9590}event Client_DH_server(id_client_5,gy_52);
                                                    {9591}let v_2132: bool = (psk_ext_109 = empty_psk_ext) in
                                                    {9592}let psk_239: preSharedKey = (if v_2132 then NoPsk else caught-fail) in
                                                    {9593}let s_220: bitstring = (if v_2132 then zero else caught-fail) in
                                                    {9594}let k_217: bitstring = (if v_2132 then catch-fail(psk2b(psk_239)) else caught-fail) in
                                                    {9595}let v_2133: bool = not-caught-fail(k_217) in
                                                    {9596}let early_secret_160: bitstring = (if v_2132 then catch-fail((if v_2133 then hmac(@8_tls_h,s_220,k_217) else fail-any)) else caught-fail) in
                                                    {9597}let v_2134: bool = not-caught-fail(early_secret_160) in
                                                    {9598}let l_590: label = (if v_2134 then tls13_ext_res_binder else caught-fail) in
                                                    {9599}let m_211: bitstring = (if v_2134 then zero else caught-fail) in
                                                    {9600}let h_564: bitstring = (if v_2134 then catch-fail(hash(@8_tls_h,m_211)) else caught-fail) in
                                                    {9601}let v_2135: bool = not-caught-fail(h_564) in
                                                    {9602}let x_671: bitstring = (if v_2135 then (l_590,h_564) else caught-fail) in
                                                    {9603}let binder_key_107: bitstring = (if v_2134 then catch-fail((if v_2135 then hmac(@8_tls_h,early_secret_160,x_671) else fail-any)) else caught-fail) in
                                                    {9604}let v_2136: bool = not-caught-fail(binder_key_107) in
                                                    {9605}let v_2137: bitstring = (if v_2132 then catch-fail((if v_2134 then (if v_2136 then (early_secret_160,binder_key_107) else fail-any) else fail-any)) else caught-fail) in
                                                    {9606}let v_2138: bool = (not-caught-fail(v_2137) && success?(1-proj-2-tuple(v_2137))) in
                                                    {9607}let kb_107: mac_key = (if v_2138 then 2-proj-2-tuple(v_2137) else caught-fail) in
                                                    {9608}let es_161: bitstring = (if v_2138 then 1-proj-2-tuple(v_2137) else caught-fail) in
                                                    {9609}let v_2139: bitstring = (if not(v_2132) then catch-fail(psk_data'_44) else caught-fail) in
                                                    {9610}let v_2140: bool = (not-caught-fail(v_2139) && success?(1-proj-4-tuple(v_2139))) in
                                                    {9611}let is_safe_97: bool = (if v_2140 then 4-proj-4-tuple(v_2139) else caught-fail) in
                                                    {9612}let es_162: bitstring = (if v_2140 then 3-proj-4-tuple(v_2139) else caught-fail) in
                                                    {9613}let id_111: identityPsk = (if v_2140 then 2-proj-4-tuple(v_2139) else caught-fail) in
                                                    {9614}let psk_240: preSharedKey = (if v_2140 then 1-proj-4-tuple(v_2139) else caught-fail) in
                                                    {9615}let (psk_241: preSharedKey,early_secret_161: bitstring,valid_51: bool,safe_psk_57: bool) = (if v_2132 then (if v_2138 then (NoPsk,es_161,true,false) else fail-any) else (if v_2140 then (psk_240,es_162,((psk_240 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_109)),is_safe_97) else fail-any)) in
                                                    {9616}event Client_PSKChoosen(id_client_5,psk_241,safe_psk_57);
                                                    {9617}if valid_51 then
                                                    (
                                                        {9618}let gxy_104: element = catch-fail(dh_decap_fun(g_59,gy_52,x_670)) in
                                                        {9619}let v_2141: bool = not-caught-fail(gxy_104) in
                                                        {9620}new s_221[]: seed;
                                                        {9621}let gxy_105: element = (if v_2141 then gxy_104 else dh_f(s_221)) in
                                                        {9622}event Client_DH_gxy(id_client_5,gxy_105);
                                                        {9623}let l_591: label = tls13_derived in
                                                        {9624}let m_212: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {9625}let v_2142: bool = not-caught-fail(m_212) in
                                                        {9626}let h_565: bitstring = (if v_2142 then catch-fail(hash(@8_tls_h,m_212)) else caught-fail) in
                                                        {9627}let v_2143: bool = not-caught-fail(h_565) in
                                                        {9628}let x_672: bitstring = (if v_2143 then (l_591,h_565) else caught-fail) in
                                                        {9629}let extra_113: bitstring = catch-fail((if v_2142 then (if v_2143 then hmac(@8_tls_h,early_secret_161,x_672) else fail-any) else fail-any)) in
                                                        {9630}let v_2144: bool = not-caught-fail(extra_113) in
                                                        {9631}let handshake_secret_52: bitstring = (if v_2144 then hmac(@8_tls_h,extra_113,gxy_105) else fail-any) in
                                                        {9632}let l_592: label = tls13_derived in
                                                        {9633}let m_213: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {9634}let v_2145: bool = not-caught-fail(m_213) in
                                                        {9635}let h_566: bitstring = (if v_2145 then catch-fail(hash(@8_tls_h,m_213)) else caught-fail) in
                                                        {9636}let v_2146: bool = not-caught-fail(h_566) in
                                                        {9637}let x_673: bitstring = (if v_2146 then (l_592,h_566) else caught-fail) in
                                                        {9638}let extra_114: bitstring = catch-fail((if v_2145 then (if v_2146 then hmac(@8_tls_h,handshake_secret_52,x_673) else fail-any) else fail-any)) in
                                                        {9639}let v_2147: bool = not-caught-fail(extra_114) in
                                                        {9640}let k_218: bitstring = (if v_2147 then zero else caught-fail) in
                                                        {9641}let master_secret_111: bitstring = (if v_2147 then catch-fail(hmac(@8_tls_h,handshake_secret_52,k_218)) else caught-fail) in
                                                        {9642}let v_2148: bool = not-caught-fail(master_secret_111) in
                                                        {9643}let l_593: label = (if v_2148 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {9644}let h_567: bitstring = (if v_2148 then catch-fail(hash(@8_tls_h,cur_log2_109)) else caught-fail) in
                                                        {9645}let v_2149: bool = not-caught-fail(h_567) in
                                                        {9646}let x_674: bitstring = (if v_2149 then (l_593,h_567) else caught-fail) in
                                                        {9647}let client_hts_52: bitstring = (if v_2148 then catch-fail((if v_2149 then hmac(@8_tls_h,handshake_secret_52,x_674) else fail-any)) else caught-fail) in
                                                        {9648}let v_2150: bool = not-caught-fail(client_hts_52) in
                                                        {9649}let l_594: label = (if v_2150 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {9650}let h_568: bitstring = (if v_2150 then catch-fail(hash(@8_tls_h,cur_log2_109)) else caught-fail) in
                                                        {9651}let v_2151: bool = not-caught-fail(h_568) in
                                                        {9652}let x_675: bitstring = (if v_2151 then (l_594,h_568) else caught-fail) in
                                                        {9653}let server_hts_52: bitstring = (if v_2150 then catch-fail((if v_2151 then hmac(@8_tls_h,handshake_secret_52,x_675) else fail-any)) else caught-fail) in
                                                        {9654}let v_2152: bool = not-caught-fail(server_hts_52) in
                                                        {9655}let l_595: label = (if v_2152 then tls13_key else caught-fail) in
                                                        {9656}let h_569: bitstring = (if v_2152 then zero else caught-fail) in
                                                        {9657}let x_676: bitstring = (if v_2152 then (l_595,h_569) else caught-fail) in
                                                        {9658}let client_wkh_52: bitstring = (if v_2152 then catch-fail(hmac(@8_tls_h,client_hts_52,x_676)) else caught-fail) in
                                                        {9659}let v_2153: bool = not-caught-fail(client_wkh_52) in
                                                        {9660}let l_596: label = (if v_2153 then tls13_key else caught-fail) in
                                                        {9661}let h_570: bitstring = (if v_2153 then zero else caught-fail) in
                                                        {9662}let x_677: bitstring = (if v_2153 then (l_596,h_570) else caught-fail) in
                                                        {9663}let server_wkh_52: bitstring = (if v_2153 then catch-fail(hmac(@8_tls_h,server_hts_52,x_677)) else caught-fail) in
                                                        {9664}let v_2154: bool = not-caught-fail(server_wkh_52) in
                                                        {9665}let l_597: label = (if v_2154 then tls13_finished else caught-fail) in
                                                        {9666}let h_571: bitstring = (if v_2154 then zero else caught-fail) in
                                                        {9667}let x_678: bitstring = (if v_2154 then (l_597,h_571) else caught-fail) in
                                                        {9668}let client_fk_52: bitstring = (if v_2154 then catch-fail(hmac(@8_tls_h,client_hts_52,x_678)) else caught-fail) in
                                                        {9669}let v_2155: bool = not-caught-fail(client_fk_52) in
                                                        {9670}let l_598: label = (if v_2155 then tls13_finished else caught-fail) in
                                                        {9671}let h_572: bitstring = (if v_2155 then zero else caught-fail) in
                                                        {9672}let x_679: bitstring = (if v_2155 then (l_598,h_572) else caught-fail) in
                                                        {9673}let server_fk_52: bitstring = (if v_2155 then catch-fail(hmac(@8_tls_h,server_hts_52,x_679)) else caught-fail) in
                                                        {9674}let v_2156: bool = not-caught-fail(server_fk_52) in
                                                        {9675}let (master_secret_112: bitstring,chk_59: aead_key,shk_58: aead_key,cfin_59: mac_key,sfin_58: mac_key) = (if v_2147 then (if v_2148 then (if v_2150 then (if v_2152 then (if v_2153 then (if v_2154 then (if v_2155 then (if v_2156 then (master_secret_111,client_wkh_52,server_wkh_52,client_fk_52,server_fk_52) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {9676}event Client_chk(id_client_5,chk_59);
                                                        {9677}event Client_shk(id_client_5,shk_58);
                                                        {9678}event Client_cfin(id_client_5,cfin_59);
                                                        {9679}event Client_sfin(id_client_5,sfin_58);
                                                        {9680}in(io, enc_ee_msg_51: bitstring);
                                                        {9681}let ee_msg_56: msg = aead_dec(@8_tls_a,shk_58,0,zero,enc_ee_msg_51) in
                                                        {9682}let EE(ech_ee_51: echExt,extra_ee_51: extraExt) = ee_msg_56 in
                                                        {9683}let cur_log2_110: bitstring = (cur_log2_109,ee_msg_56) in
                                                        {9684}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_30,sr_62,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_241,safe_psk_57,@8_comp_psk,master_secret_112,chk_59,0,shk_58,1,cfin_59,sfin_58,cur_log2_110)))
                                                    )
                                                    else
                                                        {9685}out(io, illegal_parameter)
                                                )
                                                else
                                                    {9686}out(io, illegal_parameter)
                                        )
                                        else
                                            {9687}out(io, unexpected_message)
                                    )
                                    else
                                        {9837}get pre_shared_keys(c_dom'_17: domain,=o_dom_13,=@8_tls_h,id_112: identityPsk,psk_242: preSharedKey,idP_19: idProc,is_safe_98: bool) in
                                        {9688}event Selected_one_time_used_psk(id_client_5,psk_242,is_safe_98);
                                        {9689}event Selected_psk(c_dom_7,c_dom'_17,idP_19,is_safe_98);
                                        {9690}event Selected_psk_no_missmatch(id_client_5,o_dom_13,@8_tls_h,psk_242,id_112);
                                        {9691}event Selected_psk_with_ID(c_dom_7,c_dom'_17,id_112,idP_19,is_safe_98);
                                        {9692}let v_2157: bitstring = (id_112,psk_242,is_safe_98) in
                                        {9693}let v_2158: bool = success?(1-proj-3-tuple(v_2157)) in
                                        {9694}let is_safe_99: bool = (if v_2158 then 3-proj-3-tuple(v_2157) else caught-fail) in
                                        {9695}let psk_243: preSharedKey = (if v_2158 then 2-proj-3-tuple(v_2157) else caught-fail) in
                                        {9696}let id_113: identityPsk = (if v_2158 then 1-proj-3-tuple(v_2157) else caught-fail) in
                                        {9697}let offer_45: params = (if v_2158 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_11,SNI(o_dom_13),o_ech_ext_21,extra_112,trunc_client_psk_ext(id_113)) else caught-fail) in
                                        {9698}let cur_log'_33: bitstring = (if v_2158 then (cur_log_OU1_HRR_4,CH(o_cr_16,offer_45)) else caught-fail) in
                                        {9699}let s_222: bitstring = (if v_2158 then zero else caught-fail) in
                                        {9700}let k_219: bitstring = (if v_2158 then catch-fail(psk2b(psk_243)) else caught-fail) in
                                        {9701}let v_2159: bool = not-caught-fail(k_219) in
                                        {9702}let early_secret_162: bitstring = (if v_2158 then catch-fail((if v_2159 then hmac(@8_tls_h,s_222,k_219) else fail-any)) else caught-fail) in
                                        {9703}let v_2160: bool = not-caught-fail(early_secret_162) in
                                        {9704}let l_599: label = (if v_2160 then tls13_ext_res_binder else caught-fail) in
                                        {9705}let m_214: bitstring = (if v_2160 then zero else caught-fail) in
                                        {9706}let h_573: bitstring = (if v_2160 then catch-fail(hash(@8_tls_h,m_214)) else caught-fail) in
                                        {9707}let v_2161: bool = not-caught-fail(h_573) in
                                        {9708}let x_680: bitstring = (if v_2161 then (l_599,h_573) else caught-fail) in
                                        {9709}let binder_key_108: bitstring = (if v_2160 then catch-fail((if v_2161 then hmac(@8_tls_h,early_secret_162,x_680) else fail-any)) else caught-fail) in
                                        {9710}let v_2162: bool = not-caught-fail(binder_key_108) in
                                        {9711}let v_2163: bitstring = (if v_2158 then catch-fail((if v_2160 then (if v_2162 then (early_secret_162,binder_key_108) else fail-any) else fail-any)) else caught-fail) in
                                        {9712}let v_2164: bool = (not-caught-fail(v_2163) && success?(1-proj-2-tuple(v_2163))) in
                                        {9713}let kb_108: mac_key = (if v_2164 then 2-proj-2-tuple(v_2163) else caught-fail) in
                                        {9714}let es_163: bitstring = (if v_2164 then 1-proj-2-tuple(v_2163) else caught-fail) in
                                        {9715}let binders_32: bitstring = (if v_2164 then catch-fail(hmac(@8_tls_h,kb_108,cur_log'_33)) else caught-fail) in
                                        {9716}let v_2165: bool = not-caught-fail(binders_32) in
                                        {9717}let v_2166: bitstring = catch-fail((if v_2158 then (if v_2164 then (if v_2165 then (client_psk_ext(id_113,binders_32),(psk_243,id_113,es_163,is_safe_99)) else fail-any) else fail-any) else fail-any)) in
                                        {9718}let v_2167: bool = (not-caught-fail(v_2166) && success?(1-proj-2-tuple(v_2166))) in
                                        {9719}let psk_data_57: bitstring = (if v_2167 then 2-proj-2-tuple(v_2166) else caught-fail) in
                                        {9720}let psk_ext_110: preSharedKeyExt = (if v_2167 then 1-proj-2-tuple(v_2166) else caught-fail) in
                                        {9721}let o_offer_42: params = (if v_2167 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_11,SNI(o_dom_13),o_ech_ext_21,empty_extra_ext,psk_ext_110) else caught-fail) in
                                        {9722}let (client_hello'_29: msg,cr'_31: bytes32,kex_data'_26: bitstring,psk_data'_45: bitstring) = (if v_2167 then (CH(o_cr_16,o_offer_42),o_cr_16,kex_data_11,psk_data_57) else fail-any) in
                                        {9723}out(io, client_hello'_29);
                                        {9724}let cur_log_OU1_HRR_OU2_17: bitstring = (cur_log_OU1_HRR_4,client_hello'_29) in
                                        {9725}in(io, server_hello'_41: msg);
                                        {9726}let SH(sr'_26: bytes32,mode'_26: params) = server_hello'_41 in
                                        (
                                            {9727}if (sr'_26 = B32(HRR24,HRR8)) then
                                                {9728}out(io, unexpected_message)
                                            else
                                                {9729}let (x_681: bitstring,g_60: group) = kex_data'_26 in
                                                {9730}let (psk_offer_52: preSharedKey,id_offer_52: identityPsk,es_offer_52: bitstring,is_safe_offer_52: bool) = psk_data'_45 in
                                                {9731}event Client_PSKOffer(id_client_5,psk_offer_52,id_offer_52,is_safe_offer_52);
                                                {9732}event Client_Rand_client(id_client_5,cr'_31);
                                                {9733}event Client_DH_client(id_client_5,dh_pub(g_60,x_681));
                                                {9734}event Client_server_domain(id_client_5,o_dom_8);
                                                {9735}let SH(sr_63: bytes32,mode_60: params) = server_hello'_41 in
                                                {9736}event Client_Rand_server(id_client_5,sr_63);
                                                {9737}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_60,gy_53: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_111: preSharedKeyExt) = mode_60 in
                                                (
                                                    {9738}let cur_log2_111: bitstring = (cur_log_OU1_HRR_OU2_17,server_hello'_41) in
                                                    {9739}event Client_DH_server(id_client_5,gy_53);
                                                    {9740}let v_2168: bool = (psk_ext_111 = empty_psk_ext) in
                                                    {9741}let psk_244: preSharedKey = (if v_2168 then NoPsk else caught-fail) in
                                                    {9742}let s_223: bitstring = (if v_2168 then zero else caught-fail) in
                                                    {9743}let k_220: bitstring = (if v_2168 then catch-fail(psk2b(psk_244)) else caught-fail) in
                                                    {9744}let v_2169: bool = not-caught-fail(k_220) in
                                                    {9745}let early_secret_163: bitstring = (if v_2168 then catch-fail((if v_2169 then hmac(@8_tls_h,s_223,k_220) else fail-any)) else caught-fail) in
                                                    {9746}let v_2170: bool = not-caught-fail(early_secret_163) in
                                                    {9747}let l_600: label = (if v_2170 then tls13_ext_res_binder else caught-fail) in
                                                    {9748}let m_215: bitstring = (if v_2170 then zero else caught-fail) in
                                                    {9749}let h_574: bitstring = (if v_2170 then catch-fail(hash(@8_tls_h,m_215)) else caught-fail) in
                                                    {9750}let v_2171: bool = not-caught-fail(h_574) in
                                                    {9751}let x_682: bitstring = (if v_2171 then (l_600,h_574) else caught-fail) in
                                                    {9752}let binder_key_109: bitstring = (if v_2170 then catch-fail((if v_2171 then hmac(@8_tls_h,early_secret_163,x_682) else fail-any)) else caught-fail) in
                                                    {9753}let v_2172: bool = not-caught-fail(binder_key_109) in
                                                    {9754}let v_2173: bitstring = (if v_2168 then catch-fail((if v_2170 then (if v_2172 then (early_secret_163,binder_key_109) else fail-any) else fail-any)) else caught-fail) in
                                                    {9755}let v_2174: bool = (not-caught-fail(v_2173) && success?(1-proj-2-tuple(v_2173))) in
                                                    {9756}let kb_109: mac_key = (if v_2174 then 2-proj-2-tuple(v_2173) else caught-fail) in
                                                    {9757}let es_164: bitstring = (if v_2174 then 1-proj-2-tuple(v_2173) else caught-fail) in
                                                    {9758}let v_2175: bitstring = (if not(v_2168) then catch-fail(psk_data'_45) else caught-fail) in
                                                    {9759}let v_2176: bool = (not-caught-fail(v_2175) && success?(1-proj-4-tuple(v_2175))) in
                                                    {9760}let is_safe_100: bool = (if v_2176 then 4-proj-4-tuple(v_2175) else caught-fail) in
                                                    {9761}let es_165: bitstring = (if v_2176 then 3-proj-4-tuple(v_2175) else caught-fail) in
                                                    {9762}let id_114: identityPsk = (if v_2176 then 2-proj-4-tuple(v_2175) else caught-fail) in
                                                    {9763}let psk_245: preSharedKey = (if v_2176 then 1-proj-4-tuple(v_2175) else caught-fail) in
                                                    {9764}let (psk_246: preSharedKey,early_secret_164: bitstring,valid_52: bool,safe_psk_58: bool) = (if v_2168 then (if v_2174 then (NoPsk,es_164,true,false) else fail-any) else (if v_2176 then (psk_245,es_165,((psk_245 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_111)),is_safe_100) else fail-any)) in
                                                    {9765}event Client_PSKChoosen(id_client_5,psk_246,safe_psk_58);
                                                    {9766}if valid_52 then
                                                    (
                                                        {9767}let gxy_106: element = catch-fail(dh_decap_fun(g_60,gy_53,x_681)) in
                                                        {9768}let v_2177: bool = not-caught-fail(gxy_106) in
                                                        {9769}new s_224[]: seed;
                                                        {9770}let gxy_107: element = (if v_2177 then gxy_106 else dh_f(s_224)) in
                                                        {9771}event Client_DH_gxy(id_client_5,gxy_107);
                                                        {9772}let l_601: label = tls13_derived in
                                                        {9773}let m_216: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {9774}let v_2178: bool = not-caught-fail(m_216) in
                                                        {9775}let h_575: bitstring = (if v_2178 then catch-fail(hash(@8_tls_h,m_216)) else caught-fail) in
                                                        {9776}let v_2179: bool = not-caught-fail(h_575) in
                                                        {9777}let x_683: bitstring = (if v_2179 then (l_601,h_575) else caught-fail) in
                                                        {9778}let extra_115: bitstring = catch-fail((if v_2178 then (if v_2179 then hmac(@8_tls_h,early_secret_164,x_683) else fail-any) else fail-any)) in
                                                        {9779}let v_2180: bool = not-caught-fail(extra_115) in
                                                        {9780}let handshake_secret_53: bitstring = (if v_2180 then hmac(@8_tls_h,extra_115,gxy_107) else fail-any) in
                                                        {9781}let l_602: label = tls13_derived in
                                                        {9782}let m_217: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {9783}let v_2181: bool = not-caught-fail(m_217) in
                                                        {9784}let h_576: bitstring = (if v_2181 then catch-fail(hash(@8_tls_h,m_217)) else caught-fail) in
                                                        {9785}let v_2182: bool = not-caught-fail(h_576) in
                                                        {9786}let x_684: bitstring = (if v_2182 then (l_602,h_576) else caught-fail) in
                                                        {9787}let extra_116: bitstring = catch-fail((if v_2181 then (if v_2182 then hmac(@8_tls_h,handshake_secret_53,x_684) else fail-any) else fail-any)) in
                                                        {9788}let v_2183: bool = not-caught-fail(extra_116) in
                                                        {9789}let k_221: bitstring = (if v_2183 then zero else caught-fail) in
                                                        {9790}let master_secret_113: bitstring = (if v_2183 then catch-fail(hmac(@8_tls_h,handshake_secret_53,k_221)) else caught-fail) in
                                                        {9791}let v_2184: bool = not-caught-fail(master_secret_113) in
                                                        {9792}let l_603: label = (if v_2184 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {9793}let h_577: bitstring = (if v_2184 then catch-fail(hash(@8_tls_h,cur_log2_111)) else caught-fail) in
                                                        {9794}let v_2185: bool = not-caught-fail(h_577) in
                                                        {9795}let x_685: bitstring = (if v_2185 then (l_603,h_577) else caught-fail) in
                                                        {9796}let client_hts_53: bitstring = (if v_2184 then catch-fail((if v_2185 then hmac(@8_tls_h,handshake_secret_53,x_685) else fail-any)) else caught-fail) in
                                                        {9797}let v_2186: bool = not-caught-fail(client_hts_53) in
                                                        {9798}let l_604: label = (if v_2186 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {9799}let h_578: bitstring = (if v_2186 then catch-fail(hash(@8_tls_h,cur_log2_111)) else caught-fail) in
                                                        {9800}let v_2187: bool = not-caught-fail(h_578) in
                                                        {9801}let x_686: bitstring = (if v_2187 then (l_604,h_578) else caught-fail) in
                                                        {9802}let server_hts_53: bitstring = (if v_2186 then catch-fail((if v_2187 then hmac(@8_tls_h,handshake_secret_53,x_686) else fail-any)) else caught-fail) in
                                                        {9803}let v_2188: bool = not-caught-fail(server_hts_53) in
                                                        {9804}let l_605: label = (if v_2188 then tls13_key else caught-fail) in
                                                        {9805}let h_579: bitstring = (if v_2188 then zero else caught-fail) in
                                                        {9806}let x_687: bitstring = (if v_2188 then (l_605,h_579) else caught-fail) in
                                                        {9807}let client_wkh_53: bitstring = (if v_2188 then catch-fail(hmac(@8_tls_h,client_hts_53,x_687)) else caught-fail) in
                                                        {9808}let v_2189: bool = not-caught-fail(client_wkh_53) in
                                                        {9809}let l_606: label = (if v_2189 then tls13_key else caught-fail) in
                                                        {9810}let h_580: bitstring = (if v_2189 then zero else caught-fail) in
                                                        {9811}let x_688: bitstring = (if v_2189 then (l_606,h_580) else caught-fail) in
                                                        {9812}let server_wkh_53: bitstring = (if v_2189 then catch-fail(hmac(@8_tls_h,server_hts_53,x_688)) else caught-fail) in
                                                        {9813}let v_2190: bool = not-caught-fail(server_wkh_53) in
                                                        {9814}let l_607: label = (if v_2190 then tls13_finished else caught-fail) in
                                                        {9815}let h_581: bitstring = (if v_2190 then zero else caught-fail) in
                                                        {9816}let x_689: bitstring = (if v_2190 then (l_607,h_581) else caught-fail) in
                                                        {9817}let client_fk_53: bitstring = (if v_2190 then catch-fail(hmac(@8_tls_h,client_hts_53,x_689)) else caught-fail) in
                                                        {9818}let v_2191: bool = not-caught-fail(client_fk_53) in
                                                        {9819}let l_608: label = (if v_2191 then tls13_finished else caught-fail) in
                                                        {9820}let h_582: bitstring = (if v_2191 then zero else caught-fail) in
                                                        {9821}let x_690: bitstring = (if v_2191 then (l_608,h_582) else caught-fail) in
                                                        {9822}let server_fk_53: bitstring = (if v_2191 then catch-fail(hmac(@8_tls_h,server_hts_53,x_690)) else caught-fail) in
                                                        {9823}let v_2192: bool = not-caught-fail(server_fk_53) in
                                                        {9824}let (master_secret_114: bitstring,chk_60: aead_key,shk_59: aead_key,cfin_60: mac_key,sfin_59: mac_key) = (if v_2183 then (if v_2184 then (if v_2186 then (if v_2188 then (if v_2189 then (if v_2190 then (if v_2191 then (if v_2192 then (master_secret_113,client_wkh_53,server_wkh_53,client_fk_53,server_fk_53) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {9825}event Client_chk(id_client_5,chk_60);
                                                        {9826}event Client_shk(id_client_5,shk_59);
                                                        {9827}event Client_cfin(id_client_5,cfin_60);
                                                        {9828}event Client_sfin(id_client_5,sfin_59);
                                                        {9829}in(io, enc_ee_msg_52: bitstring);
                                                        {9830}let ee_msg_57: msg = aead_dec(@8_tls_a,shk_59,0,zero,enc_ee_msg_52) in
                                                        {9831}let EE(ech_ee_52: echExt,extra_ee_52: extraExt) = ee_msg_57 in
                                                        {9832}let cur_log2_112: bitstring = (cur_log2_111,ee_msg_57) in
                                                        {9833}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_31,sr_63,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_246,safe_psk_58,@8_comp_psk,master_secret_114,chk_60,0,shk_59,1,cfin_60,sfin_59,cur_log2_112)))
                                                    )
                                                    else
                                                        {9834}out(io, illegal_parameter)
                                                )
                                                else
                                                    {9835}out(io, illegal_parameter)
                                        )
                                        else
                                            {9836}out(io, unexpected_message)
                                )
                                else
                                    {9838}let psk_247: preSharedKey = NoPsk in
                                    {9839}let s_225: bitstring = zero in
                                    {9840}let k_222: bitstring = catch-fail(psk2b(psk_247)) in
                                    {9841}let v_2193: bool = not-caught-fail(k_222) in
                                    {9842}let early_secret_165: bitstring = catch-fail((if v_2193 then hmac(@8_tls_h,s_225,k_222) else fail-any)) in
                                    {9843}let v_2194: bool = not-caught-fail(early_secret_165) in
                                    {9844}let l_609: label = (if v_2194 then tls13_ext_res_binder else caught-fail) in
                                    {9845}let m_218: bitstring = (if v_2194 then zero else caught-fail) in
                                    {9846}let h_583: bitstring = (if v_2194 then catch-fail(hash(@8_tls_h,m_218)) else caught-fail) in
                                    {9847}let v_2195: bool = not-caught-fail(h_583) in
                                    {9848}let x_691: bitstring = (if v_2195 then (l_609,h_583) else caught-fail) in
                                    {9849}let binder_key_110: bitstring = (if v_2194 then catch-fail((if v_2195 then hmac(@8_tls_h,early_secret_165,x_691) else fail-any)) else caught-fail) in
                                    {9850}let v_2196: bool = not-caught-fail(binder_key_110) in
                                    {9851}let v_2197: bitstring = catch-fail((if v_2194 then (if v_2196 then (early_secret_165,binder_key_110) else fail-any) else fail-any)) in
                                    {9852}let v_2198: bool = (not-caught-fail(v_2197) && success?(1-proj-2-tuple(v_2197))) in
                                    {9853}let kb_110: mac_key = (if v_2198 then 2-proj-2-tuple(v_2197) else caught-fail) in
                                    {9854}let es_166: bitstring = (if v_2198 then 1-proj-2-tuple(v_2197) else caught-fail) in
                                    {9855}let v_2199: bitstring = catch-fail((if v_2198 then (empty_psk_ext,(NoPsk,zero,es_166,false)) else fail-any)) in
                                    {9856}let v_2200: bool = (not-caught-fail(v_2199) && success?(1-proj-2-tuple(v_2199))) in
                                    {9857}let psk_data_58: bitstring = (if v_2200 then 2-proj-2-tuple(v_2199) else caught-fail) in
                                    {9858}let psk_ext_112: preSharedKeyExt = (if v_2200 then 1-proj-2-tuple(v_2199) else caught-fail) in
                                    {9859}let o_offer_43: params = (if v_2200 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_11,SNI(o_dom_13),o_ech_ext_21,empty_extra_ext,psk_ext_112) else caught-fail) in
                                    {9860}let (client_hello'_30: msg,cr'_32: bytes32,kex_data'_27: bitstring,psk_data'_46: bitstring) = (if v_2200 then (CH(o_cr_16,o_offer_43),o_cr_16,kex_data_11,psk_data_58) else fail-any) in
                                    {9861}out(io, client_hello'_30);
                                    {9862}let cur_log_OU1_HRR_OU2_18: bitstring = (cur_log_OU1_HRR_4,client_hello'_30) in
                                    {9863}in(io, server_hello'_42: msg);
                                    {9864}let SH(sr'_27: bytes32,mode'_27: params) = server_hello'_42 in
                                    (
                                        {9865}if (sr'_27 = B32(HRR24,HRR8)) then
                                            {9866}out(io, unexpected_message)
                                        else
                                            {9867}let (x_692: bitstring,g_61: group) = kex_data'_27 in
                                            {9868}let (psk_offer_53: preSharedKey,id_offer_53: identityPsk,es_offer_53: bitstring,is_safe_offer_53: bool) = psk_data'_46 in
                                            {9869}event Client_PSKOffer(id_client_5,psk_offer_53,id_offer_53,is_safe_offer_53);
                                            {9870}event Client_Rand_client(id_client_5,cr'_32);
                                            {9871}event Client_DH_client(id_client_5,dh_pub(g_61,x_692));
                                            {9872}event Client_server_domain(id_client_5,o_dom_8);
                                            {9873}let SH(sr_64: bytes32,mode_61: params) = server_hello'_42 in
                                            {9874}event Client_Rand_server(id_client_5,sr_64);
                                            {9875}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_61,gy_54: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_113: preSharedKeyExt) = mode_61 in
                                            (
                                                {9876}let cur_log2_113: bitstring = (cur_log_OU1_HRR_OU2_18,server_hello'_42) in
                                                {9877}event Client_DH_server(id_client_5,gy_54);
                                                {9878}let v_2201: bool = (psk_ext_113 = empty_psk_ext) in
                                                {9879}let psk_248: preSharedKey = (if v_2201 then NoPsk else caught-fail) in
                                                {9880}let s_226: bitstring = (if v_2201 then zero else caught-fail) in
                                                {9881}let k_223: bitstring = (if v_2201 then catch-fail(psk2b(psk_248)) else caught-fail) in
                                                {9882}let v_2202: bool = not-caught-fail(k_223) in
                                                {9883}let early_secret_166: bitstring = (if v_2201 then catch-fail((if v_2202 then hmac(@8_tls_h,s_226,k_223) else fail-any)) else caught-fail) in
                                                {9884}let v_2203: bool = not-caught-fail(early_secret_166) in
                                                {9885}let l_610: label = (if v_2203 then tls13_ext_res_binder else caught-fail) in
                                                {9886}let m_219: bitstring = (if v_2203 then zero else caught-fail) in
                                                {9887}let h_584: bitstring = (if v_2203 then catch-fail(hash(@8_tls_h,m_219)) else caught-fail) in
                                                {9888}let v_2204: bool = not-caught-fail(h_584) in
                                                {9889}let x_693: bitstring = (if v_2204 then (l_610,h_584) else caught-fail) in
                                                {9890}let binder_key_111: bitstring = (if v_2203 then catch-fail((if v_2204 then hmac(@8_tls_h,early_secret_166,x_693) else fail-any)) else caught-fail) in
                                                {9891}let v_2205: bool = not-caught-fail(binder_key_111) in
                                                {9892}let v_2206: bitstring = (if v_2201 then catch-fail((if v_2203 then (if v_2205 then (early_secret_166,binder_key_111) else fail-any) else fail-any)) else caught-fail) in
                                                {9893}let v_2207: bool = (not-caught-fail(v_2206) && success?(1-proj-2-tuple(v_2206))) in
                                                {9894}let kb_111: mac_key = (if v_2207 then 2-proj-2-tuple(v_2206) else caught-fail) in
                                                {9895}let es_167: bitstring = (if v_2207 then 1-proj-2-tuple(v_2206) else caught-fail) in
                                                {9896}let v_2208: bitstring = (if not(v_2201) then catch-fail(psk_data'_46) else caught-fail) in
                                                {9897}let v_2209: bool = (not-caught-fail(v_2208) && success?(1-proj-4-tuple(v_2208))) in
                                                {9898}let is_safe_101: bool = (if v_2209 then 4-proj-4-tuple(v_2208) else caught-fail) in
                                                {9899}let es_168: bitstring = (if v_2209 then 3-proj-4-tuple(v_2208) else caught-fail) in
                                                {9900}let id_115: identityPsk = (if v_2209 then 2-proj-4-tuple(v_2208) else caught-fail) in
                                                {9901}let psk_249: preSharedKey = (if v_2209 then 1-proj-4-tuple(v_2208) else caught-fail) in
                                                {9902}let (psk_250: preSharedKey,early_secret_167: bitstring,valid_53: bool,safe_psk_59: bool) = (if v_2201 then (if v_2207 then (NoPsk,es_167,true,false) else fail-any) else (if v_2209 then (psk_249,es_168,((psk_249 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_113)),is_safe_101) else fail-any)) in
                                                {9903}event Client_PSKChoosen(id_client_5,psk_250,safe_psk_59);
                                                {9904}if valid_53 then
                                                (
                                                    {9905}let gxy_108: element = catch-fail(dh_decap_fun(g_61,gy_54,x_692)) in
                                                    {9906}let v_2210: bool = not-caught-fail(gxy_108) in
                                                    {9907}new s_227[]: seed;
                                                    {9908}let gxy_109: element = (if v_2210 then gxy_108 else dh_f(s_227)) in
                                                    {9909}event Client_DH_gxy(id_client_5,gxy_109);
                                                    {9910}let l_611: label = tls13_derived in
                                                    {9911}let m_220: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {9912}let v_2211: bool = not-caught-fail(m_220) in
                                                    {9913}let h_585: bitstring = (if v_2211 then catch-fail(hash(@8_tls_h,m_220)) else caught-fail) in
                                                    {9914}let v_2212: bool = not-caught-fail(h_585) in
                                                    {9915}let x_694: bitstring = (if v_2212 then (l_611,h_585) else caught-fail) in
                                                    {9916}let extra_117: bitstring = catch-fail((if v_2211 then (if v_2212 then hmac(@8_tls_h,early_secret_167,x_694) else fail-any) else fail-any)) in
                                                    {9917}let v_2213: bool = not-caught-fail(extra_117) in
                                                    {9918}let handshake_secret_54: bitstring = (if v_2213 then hmac(@8_tls_h,extra_117,gxy_109) else fail-any) in
                                                    {9919}let l_612: label = tls13_derived in
                                                    {9920}let m_221: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {9921}let v_2214: bool = not-caught-fail(m_221) in
                                                    {9922}let h_586: bitstring = (if v_2214 then catch-fail(hash(@8_tls_h,m_221)) else caught-fail) in
                                                    {9923}let v_2215: bool = not-caught-fail(h_586) in
                                                    {9924}let x_695: bitstring = (if v_2215 then (l_612,h_586) else caught-fail) in
                                                    {9925}let extra_118: bitstring = catch-fail((if v_2214 then (if v_2215 then hmac(@8_tls_h,handshake_secret_54,x_695) else fail-any) else fail-any)) in
                                                    {9926}let v_2216: bool = not-caught-fail(extra_118) in
                                                    {9927}let k_224: bitstring = (if v_2216 then zero else caught-fail) in
                                                    {9928}let master_secret_115: bitstring = (if v_2216 then catch-fail(hmac(@8_tls_h,handshake_secret_54,k_224)) else caught-fail) in
                                                    {9929}let v_2217: bool = not-caught-fail(master_secret_115) in
                                                    {9930}let l_613: label = (if v_2217 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {9931}let h_587: bitstring = (if v_2217 then catch-fail(hash(@8_tls_h,cur_log2_113)) else caught-fail) in
                                                    {9932}let v_2218: bool = not-caught-fail(h_587) in
                                                    {9933}let x_696: bitstring = (if v_2218 then (l_613,h_587) else caught-fail) in
                                                    {9934}let client_hts_54: bitstring = (if v_2217 then catch-fail((if v_2218 then hmac(@8_tls_h,handshake_secret_54,x_696) else fail-any)) else caught-fail) in
                                                    {9935}let v_2219: bool = not-caught-fail(client_hts_54) in
                                                    {9936}let l_614: label = (if v_2219 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {9937}let h_588: bitstring = (if v_2219 then catch-fail(hash(@8_tls_h,cur_log2_113)) else caught-fail) in
                                                    {9938}let v_2220: bool = not-caught-fail(h_588) in
                                                    {9939}let x_697: bitstring = (if v_2220 then (l_614,h_588) else caught-fail) in
                                                    {9940}let server_hts_54: bitstring = (if v_2219 then catch-fail((if v_2220 then hmac(@8_tls_h,handshake_secret_54,x_697) else fail-any)) else caught-fail) in
                                                    {9941}let v_2221: bool = not-caught-fail(server_hts_54) in
                                                    {9942}let l_615: label = (if v_2221 then tls13_key else caught-fail) in
                                                    {9943}let h_589: bitstring = (if v_2221 then zero else caught-fail) in
                                                    {9944}let x_698: bitstring = (if v_2221 then (l_615,h_589) else caught-fail) in
                                                    {9945}let client_wkh_54: bitstring = (if v_2221 then catch-fail(hmac(@8_tls_h,client_hts_54,x_698)) else caught-fail) in
                                                    {9946}let v_2222: bool = not-caught-fail(client_wkh_54) in
                                                    {9947}let l_616: label = (if v_2222 then tls13_key else caught-fail) in
                                                    {9948}let h_590: bitstring = (if v_2222 then zero else caught-fail) in
                                                    {9949}let x_699: bitstring = (if v_2222 then (l_616,h_590) else caught-fail) in
                                                    {9950}let server_wkh_54: bitstring = (if v_2222 then catch-fail(hmac(@8_tls_h,server_hts_54,x_699)) else caught-fail) in
                                                    {9951}let v_2223: bool = not-caught-fail(server_wkh_54) in
                                                    {9952}let l_617: label = (if v_2223 then tls13_finished else caught-fail) in
                                                    {9953}let h_591: bitstring = (if v_2223 then zero else caught-fail) in
                                                    {9954}let x_700: bitstring = (if v_2223 then (l_617,h_591) else caught-fail) in
                                                    {9955}let client_fk_54: bitstring = (if v_2223 then catch-fail(hmac(@8_tls_h,client_hts_54,x_700)) else caught-fail) in
                                                    {9956}let v_2224: bool = not-caught-fail(client_fk_54) in
                                                    {9957}let l_618: label = (if v_2224 then tls13_finished else caught-fail) in
                                                    {9958}let h_592: bitstring = (if v_2224 then zero else caught-fail) in
                                                    {9959}let x_701: bitstring = (if v_2224 then (l_618,h_592) else caught-fail) in
                                                    {9960}let server_fk_54: bitstring = (if v_2224 then catch-fail(hmac(@8_tls_h,server_hts_54,x_701)) else caught-fail) in
                                                    {9961}let v_2225: bool = not-caught-fail(server_fk_54) in
                                                    {9962}let (master_secret_116: bitstring,chk_61: aead_key,shk_60: aead_key,cfin_61: mac_key,sfin_60: mac_key) = (if v_2216 then (if v_2217 then (if v_2219 then (if v_2221 then (if v_2222 then (if v_2223 then (if v_2224 then (if v_2225 then (master_secret_115,client_wkh_54,server_wkh_54,client_fk_54,server_fk_54) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {9963}event Client_chk(id_client_5,chk_61);
                                                    {9964}event Client_shk(id_client_5,shk_60);
                                                    {9965}event Client_cfin(id_client_5,cfin_61);
                                                    {9966}event Client_sfin(id_client_5,sfin_60);
                                                    {9967}in(io, enc_ee_msg_53: bitstring);
                                                    {9968}let ee_msg_58: msg = aead_dec(@8_tls_a,shk_60,0,zero,enc_ee_msg_53) in
                                                    {9969}let EE(ech_ee_53: echExt,extra_ee_53: extraExt) = ee_msg_58 in
                                                    {9970}let cur_log2_114: bitstring = (cur_log2_113,ee_msg_58) in
                                                    {9971}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_32,sr_64,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_250,safe_psk_59,@8_comp_psk,master_secret_116,chk_61,0,shk_60,1,cfin_61,sfin_60,cur_log2_114)))
                                                )
                                                else
                                                    {9972}out(io, illegal_parameter)
                                            )
                                            else
                                                {9973}out(io, illegal_parameter)
                                    )
                                    else
                                        {9974}out(io, unexpected_message)
                            )
                            else
                                {9975}let psk_251: preSharedKey = NoPsk in
                                {9976}let s_228: bitstring = zero in
                                {9977}let k_225: bitstring = catch-fail(psk2b(psk_251)) in
                                {9978}let v_2226: bool = not-caught-fail(k_225) in
                                {9979}let early_secret_168: bitstring = catch-fail((if v_2226 then hmac(@8_tls_h,s_228,k_225) else fail-any)) in
                                {9980}let v_2227: bool = not-caught-fail(early_secret_168) in
                                {9981}let l_619: label = (if v_2227 then tls13_ext_res_binder else caught-fail) in
                                {9982}let m_222: bitstring = (if v_2227 then zero else caught-fail) in
                                {9983}let h_593: bitstring = (if v_2227 then catch-fail(hash(@8_tls_h,m_222)) else caught-fail) in
                                {9984}let v_2228: bool = not-caught-fail(h_593) in
                                {9985}let x_702: bitstring = (if v_2228 then (l_619,h_593) else caught-fail) in
                                {9986}let binder_key_112: bitstring = (if v_2227 then catch-fail((if v_2228 then hmac(@8_tls_h,early_secret_168,x_702) else fail-any)) else caught-fail) in
                                {9987}let v_2229: bool = not-caught-fail(binder_key_112) in
                                {9988}let v_2230: bitstring = catch-fail((if v_2227 then (if v_2229 then (early_secret_168,binder_key_112) else fail-any) else fail-any)) in
                                {9989}let v_2231: bool = (not-caught-fail(v_2230) && success?(1-proj-2-tuple(v_2230))) in
                                {9990}let kb_112: mac_key = (if v_2231 then 2-proj-2-tuple(v_2230) else caught-fail) in
                                {9991}let es_169: bitstring = (if v_2231 then 1-proj-2-tuple(v_2230) else caught-fail) in
                                {9992}let v_2232: preSharedKeyExt = (if v_2231 then catch-fail(o_psk_ext_21) else caught-fail) in
                                {9993}let v_2233: bool = (not-caught-fail(v_2232) && success?(1-proj-client_psk_ext(v_2232))) in
                                {9994}let fake_binder_24: bitstring = (if v_2233 then 2-proj-client_psk_ext(v_2232) else caught-fail) in
                                {9995}let fake_id_24: identityPsk = (if v_2233 then 1-proj-client_psk_ext(v_2232) else caught-fail) in
                                {9996}new fake_binder'_4[]: bitstring;
                                {9997}let v_2234: bitstring = catch-fail((if v_2231 then (if v_2233 then (client_psk_ext(fake_id_24,fake_binder'_4),(NoPsk,zero,es_169,false)) else (empty_psk_ext,(NoPsk,zero,es_169,false))) else fail-any)) in
                                {9998}let v_2235: bool = (not-caught-fail(v_2234) && success?(1-proj-2-tuple(v_2234))) in
                                {9999}let psk_data_59: bitstring = (if v_2235 then 2-proj-2-tuple(v_2234) else caught-fail) in
                                {10000}let psk_ext_114: preSharedKeyExt = (if v_2235 then 1-proj-2-tuple(v_2234) else caught-fail) in
                                {10001}let o_offer_44: params = (if v_2235 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_11,SNI(o_dom_13),o_ech_ext_21,empty_extra_ext,psk_ext_114) else caught-fail) in
                                {10002}let (client_hello'_31: msg,cr'_33: bytes32,kex_data'_28: bitstring,psk_data'_47: bitstring) = (if v_2235 then (CH(o_cr_16,o_offer_44),o_cr_16,kex_data_11,psk_data_59) else fail-any) in
                                {10003}out(io, client_hello'_31);
                                {10004}let cur_log_OU1_HRR_OU2_19: bitstring = (cur_log_OU1_HRR_4,client_hello'_31) in
                                {10005}in(io, server_hello'_43: msg);
                                {10006}let SH(sr'_28: bytes32,mode'_28: params) = server_hello'_43 in
                                (
                                    {10007}if (sr'_28 = B32(HRR24,HRR8)) then
                                        {10008}out(io, unexpected_message)
                                    else
                                        {10009}let (x_703: bitstring,g_62: group) = kex_data'_28 in
                                        {10010}let (psk_offer_54: preSharedKey,id_offer_54: identityPsk,es_offer_54: bitstring,is_safe_offer_54: bool) = psk_data'_47 in
                                        {10011}event Client_PSKOffer(id_client_5,psk_offer_54,id_offer_54,is_safe_offer_54);
                                        {10012}event Client_Rand_client(id_client_5,cr'_33);
                                        {10013}event Client_DH_client(id_client_5,dh_pub(g_62,x_703));
                                        {10014}event Client_server_domain(id_client_5,o_dom_8);
                                        {10015}let SH(sr_65: bytes32,mode_62: params) = server_hello'_43 in
                                        {10016}event Client_Rand_server(id_client_5,sr_65);
                                        {10017}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_62,gy_55: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_115: preSharedKeyExt) = mode_62 in
                                        (
                                            {10018}let cur_log2_115: bitstring = (cur_log_OU1_HRR_OU2_19,server_hello'_43) in
                                            {10019}event Client_DH_server(id_client_5,gy_55);
                                            {10020}let v_2236: bool = (psk_ext_115 = empty_psk_ext) in
                                            {10021}let psk_252: preSharedKey = (if v_2236 then NoPsk else caught-fail) in
                                            {10022}let s_229: bitstring = (if v_2236 then zero else caught-fail) in
                                            {10023}let k_226: bitstring = (if v_2236 then catch-fail(psk2b(psk_252)) else caught-fail) in
                                            {10024}let v_2237: bool = not-caught-fail(k_226) in
                                            {10025}let early_secret_169: bitstring = (if v_2236 then catch-fail((if v_2237 then hmac(@8_tls_h,s_229,k_226) else fail-any)) else caught-fail) in
                                            {10026}let v_2238: bool = not-caught-fail(early_secret_169) in
                                            {10027}let l_620: label = (if v_2238 then tls13_ext_res_binder else caught-fail) in
                                            {10028}let m_223: bitstring = (if v_2238 then zero else caught-fail) in
                                            {10029}let h_594: bitstring = (if v_2238 then catch-fail(hash(@8_tls_h,m_223)) else caught-fail) in
                                            {10030}let v_2239: bool = not-caught-fail(h_594) in
                                            {10031}let x_704: bitstring = (if v_2239 then (l_620,h_594) else caught-fail) in
                                            {10032}let binder_key_113: bitstring = (if v_2238 then catch-fail((if v_2239 then hmac(@8_tls_h,early_secret_169,x_704) else fail-any)) else caught-fail) in
                                            {10033}let v_2240: bool = not-caught-fail(binder_key_113) in
                                            {10034}let v_2241: bitstring = (if v_2236 then catch-fail((if v_2238 then (if v_2240 then (early_secret_169,binder_key_113) else fail-any) else fail-any)) else caught-fail) in
                                            {10035}let v_2242: bool = (not-caught-fail(v_2241) && success?(1-proj-2-tuple(v_2241))) in
                                            {10036}let kb_113: mac_key = (if v_2242 then 2-proj-2-tuple(v_2241) else caught-fail) in
                                            {10037}let es_170: bitstring = (if v_2242 then 1-proj-2-tuple(v_2241) else caught-fail) in
                                            {10038}let v_2243: bitstring = (if not(v_2236) then catch-fail(psk_data'_47) else caught-fail) in
                                            {10039}let v_2244: bool = (not-caught-fail(v_2243) && success?(1-proj-4-tuple(v_2243))) in
                                            {10040}let is_safe_102: bool = (if v_2244 then 4-proj-4-tuple(v_2243) else caught-fail) in
                                            {10041}let es_171: bitstring = (if v_2244 then 3-proj-4-tuple(v_2243) else caught-fail) in
                                            {10042}let id_116: identityPsk = (if v_2244 then 2-proj-4-tuple(v_2243) else caught-fail) in
                                            {10043}let psk_253: preSharedKey = (if v_2244 then 1-proj-4-tuple(v_2243) else caught-fail) in
                                            {10044}let (psk_254: preSharedKey,early_secret_170: bitstring,valid_54: bool,safe_psk_60: bool) = (if v_2236 then (if v_2242 then (NoPsk,es_170,true,false) else fail-any) else (if v_2244 then (psk_253,es_171,((psk_253 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_115)),is_safe_102) else fail-any)) in
                                            {10045}event Client_PSKChoosen(id_client_5,psk_254,safe_psk_60);
                                            {10046}if valid_54 then
                                            (
                                                {10047}let gxy_110: element = catch-fail(dh_decap_fun(g_62,gy_55,x_703)) in
                                                {10048}let v_2245: bool = not-caught-fail(gxy_110) in
                                                {10049}new s_230[]: seed;
                                                {10050}let gxy_111: element = (if v_2245 then gxy_110 else dh_f(s_230)) in
                                                {10051}event Client_DH_gxy(id_client_5,gxy_111);
                                                {10052}let l_621: label = tls13_derived in
                                                {10053}let m_224: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                {10054}let v_2246: bool = not-caught-fail(m_224) in
                                                {10055}let h_595: bitstring = (if v_2246 then catch-fail(hash(@8_tls_h,m_224)) else caught-fail) in
                                                {10056}let v_2247: bool = not-caught-fail(h_595) in
                                                {10057}let x_705: bitstring = (if v_2247 then (l_621,h_595) else caught-fail) in
                                                {10058}let extra_119: bitstring = catch-fail((if v_2246 then (if v_2247 then hmac(@8_tls_h,early_secret_170,x_705) else fail-any) else fail-any)) in
                                                {10059}let v_2248: bool = not-caught-fail(extra_119) in
                                                {10060}let handshake_secret_55: bitstring = (if v_2248 then hmac(@8_tls_h,extra_119,gxy_111) else fail-any) in
                                                {10061}let l_622: label = tls13_derived in
                                                {10062}let m_225: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                {10063}let v_2249: bool = not-caught-fail(m_225) in
                                                {10064}let h_596: bitstring = (if v_2249 then catch-fail(hash(@8_tls_h,m_225)) else caught-fail) in
                                                {10065}let v_2250: bool = not-caught-fail(h_596) in
                                                {10066}let x_706: bitstring = (if v_2250 then (l_622,h_596) else caught-fail) in
                                                {10067}let extra_120: bitstring = catch-fail((if v_2249 then (if v_2250 then hmac(@8_tls_h,handshake_secret_55,x_706) else fail-any) else fail-any)) in
                                                {10068}let v_2251: bool = not-caught-fail(extra_120) in
                                                {10069}let k_227: bitstring = (if v_2251 then zero else caught-fail) in
                                                {10070}let master_secret_117: bitstring = (if v_2251 then catch-fail(hmac(@8_tls_h,handshake_secret_55,k_227)) else caught-fail) in
                                                {10071}let v_2252: bool = not-caught-fail(master_secret_117) in
                                                {10072}let l_623: label = (if v_2252 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {10073}let h_597: bitstring = (if v_2252 then catch-fail(hash(@8_tls_h,cur_log2_115)) else caught-fail) in
                                                {10074}let v_2253: bool = not-caught-fail(h_597) in
                                                {10075}let x_707: bitstring = (if v_2253 then (l_623,h_597) else caught-fail) in
                                                {10076}let client_hts_55: bitstring = (if v_2252 then catch-fail((if v_2253 then hmac(@8_tls_h,handshake_secret_55,x_707) else fail-any)) else caught-fail) in
                                                {10077}let v_2254: bool = not-caught-fail(client_hts_55) in
                                                {10078}let l_624: label = (if v_2254 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {10079}let h_598: bitstring = (if v_2254 then catch-fail(hash(@8_tls_h,cur_log2_115)) else caught-fail) in
                                                {10080}let v_2255: bool = not-caught-fail(h_598) in
                                                {10081}let x_708: bitstring = (if v_2255 then (l_624,h_598) else caught-fail) in
                                                {10082}let server_hts_55: bitstring = (if v_2254 then catch-fail((if v_2255 then hmac(@8_tls_h,handshake_secret_55,x_708) else fail-any)) else caught-fail) in
                                                {10083}let v_2256: bool = not-caught-fail(server_hts_55) in
                                                {10084}let l_625: label = (if v_2256 then tls13_key else caught-fail) in
                                                {10085}let h_599: bitstring = (if v_2256 then zero else caught-fail) in
                                                {10086}let x_709: bitstring = (if v_2256 then (l_625,h_599) else caught-fail) in
                                                {10087}let client_wkh_55: bitstring = (if v_2256 then catch-fail(hmac(@8_tls_h,client_hts_55,x_709)) else caught-fail) in
                                                {10088}let v_2257: bool = not-caught-fail(client_wkh_55) in
                                                {10089}let l_626: label = (if v_2257 then tls13_key else caught-fail) in
                                                {10090}let h_600: bitstring = (if v_2257 then zero else caught-fail) in
                                                {10091}let x_710: bitstring = (if v_2257 then (l_626,h_600) else caught-fail) in
                                                {10092}let server_wkh_55: bitstring = (if v_2257 then catch-fail(hmac(@8_tls_h,server_hts_55,x_710)) else caught-fail) in
                                                {10093}let v_2258: bool = not-caught-fail(server_wkh_55) in
                                                {10094}let l_627: label = (if v_2258 then tls13_finished else caught-fail) in
                                                {10095}let h_601: bitstring = (if v_2258 then zero else caught-fail) in
                                                {10096}let x_711: bitstring = (if v_2258 then (l_627,h_601) else caught-fail) in
                                                {10097}let client_fk_55: bitstring = (if v_2258 then catch-fail(hmac(@8_tls_h,client_hts_55,x_711)) else caught-fail) in
                                                {10098}let v_2259: bool = not-caught-fail(client_fk_55) in
                                                {10099}let l_628: label = (if v_2259 then tls13_finished else caught-fail) in
                                                {10100}let h_602: bitstring = (if v_2259 then zero else caught-fail) in
                                                {10101}let x_712: bitstring = (if v_2259 then (l_628,h_602) else caught-fail) in
                                                {10102}let server_fk_55: bitstring = (if v_2259 then catch-fail(hmac(@8_tls_h,server_hts_55,x_712)) else caught-fail) in
                                                {10103}let v_2260: bool = not-caught-fail(server_fk_55) in
                                                {10104}let (master_secret_118: bitstring,chk_62: aead_key,shk_61: aead_key,cfin_62: mac_key,sfin_61: mac_key) = (if v_2251 then (if v_2252 then (if v_2254 then (if v_2256 then (if v_2257 then (if v_2258 then (if v_2259 then (if v_2260 then (master_secret_117,client_wkh_55,server_wkh_55,client_fk_55,server_fk_55) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {10105}event Client_chk(id_client_5,chk_62);
                                                {10106}event Client_shk(id_client_5,shk_61);
                                                {10107}event Client_cfin(id_client_5,cfin_62);
                                                {10108}event Client_sfin(id_client_5,sfin_61);
                                                {10109}in(io, enc_ee_msg_54: bitstring);
                                                {10110}let ee_msg_59: msg = aead_dec(@8_tls_a,shk_61,0,zero,enc_ee_msg_54) in
                                                {10111}let EE(ech_ee_54: echExt,extra_ee_54: extraExt) = ee_msg_59 in
                                                {10112}let cur_log2_116: bitstring = (cur_log2_115,ee_msg_59) in
                                                {10113}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_33,sr_65,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_254,safe_psk_60,@8_comp_psk,master_secret_118,chk_62,0,shk_61,1,cfin_62,sfin_61,cur_log2_116)))
                                            )
                                            else
                                                {10114}out(io, illegal_parameter)
                                        )
                                        else
                                            {10115}out(io, illegal_parameter)
                                )
                                else
                                    {10116}out(io, unexpected_message)
                    )
                    else
                        {10117}let cur_log_29: bitstring = (zero,i_client_hello_22) in
                        {10118}let sh_modified_20: msg = SH(B32(sr24_6,zero8),mode_55) in
                        {10119}let cur_log_sh_20: bitstring = (cur_log_29,sh_modified_20) in
                        {10120}let transcript_ech_conf_20: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_20)) in
                        {10121}let v_2261: bool = not-caught-fail(transcript_ech_conf_20) in
                        {10122}let s_231: bitstring = (if v_2261 then zero else caught-fail) in
                        {10123}let k_228: bitstring = (if v_2261 then catch-fail(b32_2_b(get_random(i_client_hello_22))) else caught-fail) in
                        {10124}let v_2262: bool = not-caught-fail(k_228) in
                        {10125}let k_229: bitstring = (if v_2261 then catch-fail((if v_2262 then hmac(@8_backend_h,s_231,k_228) else fail-any)) else caught-fail) in
                        {10126}let v_2263: bool = not-caught-fail(k_229) in
                        {10127}let l_629: label = (if v_2263 then ech_accept_confirmation else caught-fail) in
                        {10128}let x_713: bitstring = (if v_2263 then (l_629,cur_log_sh_20) else caught-fail) in
                        {10129}let sr8_25: bytes8 = (if v_2261 then catch-fail(crop_into_bytes8((if v_2263 then hmac(@8_backend_h,k_229,x_713) else fail-any))) else caught-fail) in
                        {10130}let v_2264: bool = not-caught-fail(sr8_25) in
                        {10131}if (B32(sr24_6,sr8_21) = (if v_2261 then (if v_2264 then B32(sr24_6,sr8_25) else fail-any) else fail-any)) then
                        (
                            {10132}event ClientEchAcceptance(id_client_5,true);
                            {10133}let cur_log_30: bitstring = (zero,i_client_hello_22) in
                            {10134}let (x_714: bitstring,g_63: group) = i_kex_data_10 in
                            {10135}let (psk_offer_55: preSharedKey,id_offer_55: identityPsk,es_offer_55: bitstring,is_safe_offer_55: bool) = psk_data_52 in
                            {10136}event Client_PSKOffer(id_client_5,psk_offer_55,id_offer_55,is_safe_offer_55);
                            {10137}event Client_Rand_client(id_client_5,i_cr_11);
                            {10138}event Client_DH_client(id_client_5,dh_pub(g_63,x_714));
                            {10139}event Client_server_domain(id_client_5,backend_dom_1);
                            {10140}let SH(sr_66: bytes32,mode_63: params) = server_hello_8 in
                            {10141}event Client_Rand_server(id_client_5,sr_66);
                            {10142}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_63,gy_56: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_116: preSharedKeyExt) = mode_63 in
                            (
                                {10143}let cur_log2_117: bitstring = (cur_log_30,server_hello_8) in
                                {10144}event Client_DH_server(id_client_5,gy_56);
                                {10145}let v_2265: bool = (psk_ext_116 = empty_psk_ext) in
                                {10146}let psk_255: preSharedKey = (if v_2265 then NoPsk else caught-fail) in
                                {10147}let s_232: bitstring = (if v_2265 then zero else caught-fail) in
                                {10148}let k_230: bitstring = (if v_2265 then catch-fail(psk2b(psk_255)) else caught-fail) in
                                {10149}let v_2266: bool = not-caught-fail(k_230) in
                                {10150}let early_secret_171: bitstring = (if v_2265 then catch-fail((if v_2266 then hmac(@8_backend_h,s_232,k_230) else fail-any)) else caught-fail) in
                                {10151}let v_2267: bool = not-caught-fail(early_secret_171) in
                                {10152}let l_630: label = (if v_2267 then tls13_ext_res_binder else caught-fail) in
                                {10153}let m_226: bitstring = (if v_2267 then zero else caught-fail) in
                                {10154}let h_603: bitstring = (if v_2267 then catch-fail(hash(@8_backend_h,m_226)) else caught-fail) in
                                {10155}let v_2268: bool = not-caught-fail(h_603) in
                                {10156}let x_715: bitstring = (if v_2268 then (l_630,h_603) else caught-fail) in
                                {10157}let binder_key_114: bitstring = (if v_2267 then catch-fail((if v_2268 then hmac(@8_backend_h,early_secret_171,x_715) else fail-any)) else caught-fail) in
                                {10158}let v_2269: bool = not-caught-fail(binder_key_114) in
                                {10159}let v_2270: bitstring = (if v_2265 then catch-fail((if v_2267 then (if v_2269 then (early_secret_171,binder_key_114) else fail-any) else fail-any)) else caught-fail) in
                                {10160}let v_2271: bool = (not-caught-fail(v_2270) && success?(1-proj-2-tuple(v_2270))) in
                                {10161}let kb_114: mac_key = (if v_2271 then 2-proj-2-tuple(v_2270) else caught-fail) in
                                {10162}let es_172: bitstring = (if v_2271 then 1-proj-2-tuple(v_2270) else caught-fail) in
                                {10163}let v_2272: bitstring = (if not(v_2265) then catch-fail(psk_data_52) else caught-fail) in
                                {10164}let v_2273: bool = (not-caught-fail(v_2272) && success?(1-proj-4-tuple(v_2272))) in
                                {10165}let is_safe_103: bool = (if v_2273 then 4-proj-4-tuple(v_2272) else caught-fail) in
                                {10166}let es_173: bitstring = (if v_2273 then 3-proj-4-tuple(v_2272) else caught-fail) in
                                {10167}let id_117: identityPsk = (if v_2273 then 2-proj-4-tuple(v_2272) else caught-fail) in
                                {10168}let psk_256: preSharedKey = (if v_2273 then 1-proj-4-tuple(v_2272) else caught-fail) in
                                {10169}let (psk_257: preSharedKey,early_secret_172: bitstring,valid_55: bool,safe_psk_61: bool) = (if v_2265 then (if v_2271 then (NoPsk,es_172,true,false) else fail-any) else (if v_2273 then (psk_256,es_173,((psk_256 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_116)),is_safe_103) else fail-any)) in
                                {10170}event Client_PSKChoosen(id_client_5,psk_257,safe_psk_61);
                                {10171}if valid_55 then
                                (
                                    {10172}let gxy_112: element = catch-fail(dh_decap_fun(g_63,gy_56,x_714)) in
                                    {10173}let v_2274: bool = not-caught-fail(gxy_112) in
                                    {10174}new s_233[]: seed;
                                    {10175}let gxy_113: element = (if v_2274 then gxy_112 else dh_f(s_233)) in
                                    {10176}event Client_DH_gxy(id_client_5,gxy_113);
                                    {10177}let l_631: label = tls13_derived in
                                    {10178}let m_227: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                    {10179}let v_2275: bool = not-caught-fail(m_227) in
                                    {10180}let h_604: bitstring = (if v_2275 then catch-fail(hash(@8_backend_h,m_227)) else caught-fail) in
                                    {10181}let v_2276: bool = not-caught-fail(h_604) in
                                    {10182}let x_716: bitstring = (if v_2276 then (l_631,h_604) else caught-fail) in
                                    {10183}let extra_121: bitstring = catch-fail((if v_2275 then (if v_2276 then hmac(@8_backend_h,early_secret_172,x_716) else fail-any) else fail-any)) in
                                    {10184}let v_2277: bool = not-caught-fail(extra_121) in
                                    {10185}let handshake_secret_56: bitstring = (if v_2277 then hmac(@8_backend_h,extra_121,gxy_113) else fail-any) in
                                    {10186}let l_632: label = tls13_derived in
                                    {10187}let m_228: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                    {10188}let v_2278: bool = not-caught-fail(m_228) in
                                    {10189}let h_605: bitstring = (if v_2278 then catch-fail(hash(@8_backend_h,m_228)) else caught-fail) in
                                    {10190}let v_2279: bool = not-caught-fail(h_605) in
                                    {10191}let x_717: bitstring = (if v_2279 then (l_632,h_605) else caught-fail) in
                                    {10192}let extra_122: bitstring = catch-fail((if v_2278 then (if v_2279 then hmac(@8_backend_h,handshake_secret_56,x_717) else fail-any) else fail-any)) in
                                    {10193}let v_2280: bool = not-caught-fail(extra_122) in
                                    {10194}let k_231: bitstring = (if v_2280 then zero else caught-fail) in
                                    {10195}let master_secret_119: bitstring = (if v_2280 then catch-fail(hmac(@8_backend_h,handshake_secret_56,k_231)) else caught-fail) in
                                    {10196}let v_2281: bool = not-caught-fail(master_secret_119) in
                                    {10197}let l_633: label = (if v_2281 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {10198}let h_606: bitstring = (if v_2281 then catch-fail(hash(@8_backend_h,cur_log2_117)) else caught-fail) in
                                    {10199}let v_2282: bool = not-caught-fail(h_606) in
                                    {10200}let x_718: bitstring = (if v_2282 then (l_633,h_606) else caught-fail) in
                                    {10201}let client_hts_56: bitstring = (if v_2281 then catch-fail((if v_2282 then hmac(@8_backend_h,handshake_secret_56,x_718) else fail-any)) else caught-fail) in
                                    {10202}let v_2283: bool = not-caught-fail(client_hts_56) in
                                    {10203}let l_634: label = (if v_2283 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {10204}let h_607: bitstring = (if v_2283 then catch-fail(hash(@8_backend_h,cur_log2_117)) else caught-fail) in
                                    {10205}let v_2284: bool = not-caught-fail(h_607) in
                                    {10206}let x_719: bitstring = (if v_2284 then (l_634,h_607) else caught-fail) in
                                    {10207}let server_hts_56: bitstring = (if v_2283 then catch-fail((if v_2284 then hmac(@8_backend_h,handshake_secret_56,x_719) else fail-any)) else caught-fail) in
                                    {10208}let v_2285: bool = not-caught-fail(server_hts_56) in
                                    {10209}let l_635: label = (if v_2285 then tls13_key else caught-fail) in
                                    {10210}let h_608: bitstring = (if v_2285 then zero else caught-fail) in
                                    {10211}let x_720: bitstring = (if v_2285 then (l_635,h_608) else caught-fail) in
                                    {10212}let client_wkh_56: bitstring = (if v_2285 then catch-fail(hmac(@8_backend_h,client_hts_56,x_720)) else caught-fail) in
                                    {10213}let v_2286: bool = not-caught-fail(client_wkh_56) in
                                    {10214}let l_636: label = (if v_2286 then tls13_key else caught-fail) in
                                    {10215}let h_609: bitstring = (if v_2286 then zero else caught-fail) in
                                    {10216}let x_721: bitstring = (if v_2286 then (l_636,h_609) else caught-fail) in
                                    {10217}let server_wkh_56: bitstring = (if v_2286 then catch-fail(hmac(@8_backend_h,server_hts_56,x_721)) else caught-fail) in
                                    {10218}let v_2287: bool = not-caught-fail(server_wkh_56) in
                                    {10219}let l_637: label = (if v_2287 then tls13_finished else caught-fail) in
                                    {10220}let h_610: bitstring = (if v_2287 then zero else caught-fail) in
                                    {10221}let x_722: bitstring = (if v_2287 then (l_637,h_610) else caught-fail) in
                                    {10222}let client_fk_56: bitstring = (if v_2287 then catch-fail(hmac(@8_backend_h,client_hts_56,x_722)) else caught-fail) in
                                    {10223}let v_2288: bool = not-caught-fail(client_fk_56) in
                                    {10224}let l_638: label = (if v_2288 then tls13_finished else caught-fail) in
                                    {10225}let h_611: bitstring = (if v_2288 then zero else caught-fail) in
                                    {10226}let x_723: bitstring = (if v_2288 then (l_638,h_611) else caught-fail) in
                                    {10227}let server_fk_56: bitstring = (if v_2288 then catch-fail(hmac(@8_backend_h,server_hts_56,x_723)) else caught-fail) in
                                    {10228}let v_2289: bool = not-caught-fail(server_fk_56) in
                                    {10229}let (master_secret_120: bitstring,chk_63: aead_key,shk_62: aead_key,cfin_63: mac_key,sfin_62: mac_key) = (if v_2280 then (if v_2281 then (if v_2283 then (if v_2285 then (if v_2286 then (if v_2287 then (if v_2288 then (if v_2289 then (master_secret_119,client_wkh_56,server_wkh_56,client_fk_56,server_fk_56) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {10230}event Client_chk(id_client_5,chk_63);
                                    {10231}event Client_shk(id_client_5,shk_62);
                                    {10232}event Client_cfin(id_client_5,cfin_63);
                                    {10233}event Client_sfin(id_client_5,sfin_62);
                                    {10234}in(io, enc_ee_msg_55: bitstring);
                                    {10235}let ee_msg_60: msg = aead_dec(@8_backend_a,shk_62,0,zero,enc_ee_msg_55) in
                                    {10236}let EE(ech_ee_55: echExt,extra_ee_55: extraExt) = ee_msg_60 in
                                    {10237}let cur_log2_118: bitstring = (cur_log2_117,ee_msg_60) in
                                    {10238}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr_11,sr_66,@8_backend_h,@8_backend_a,c_dom_7,backend_dom_1,psk_257,safe_psk_61,@8_comp_psk,master_secret_120,chk_63,0,shk_62,1,cfin_63,sfin_62,cur_log2_118)))
                                )
                                else
                                    {10239}out(io, illegal_parameter)
                            )
                            else
                                {10240}out(io, illegal_parameter)
                        )
                        else
                            {10241}event ClientEchAcceptance(id_client_5,false);
                            {10242}let v_2290: bool = @8_use_grease in
                            {10243}let psk_258: preSharedKey = (if not(v_2290) then NoPsk else caught-fail) in
                            {10244}let s_234: bitstring = (if not(v_2290) then zero else caught-fail) in
                            {10245}let k_232: bitstring = (if not(v_2290) then catch-fail(psk2b(psk_258)) else caught-fail) in
                            {10246}let v_2291: bool = not-caught-fail(k_232) in
                            {10247}let early_secret_173: bitstring = (if not(v_2290) then catch-fail((if v_2291 then hmac(@8_tls_h,s_234,k_232) else fail-any)) else caught-fail) in
                            {10248}let v_2292: bool = not-caught-fail(early_secret_173) in
                            {10249}let l_639: label = (if v_2292 then tls13_ext_res_binder else caught-fail) in
                            {10250}let m_229: bitstring = (if v_2292 then zero else caught-fail) in
                            {10251}let h_612: bitstring = (if v_2292 then catch-fail(hash(@8_tls_h,m_229)) else caught-fail) in
                            {10252}let v_2293: bool = not-caught-fail(h_612) in
                            {10253}let x_724: bitstring = (if v_2293 then (l_639,h_612) else caught-fail) in
                            {10254}let binder_key_115: bitstring = (if v_2292 then catch-fail((if v_2293 then hmac(@8_tls_h,early_secret_173,x_724) else fail-any)) else caught-fail) in
                            {10255}let v_2294: bool = not-caught-fail(binder_key_115) in
                            {10256}let v_2295: bitstring = (if not(v_2290) then catch-fail((if v_2292 then (if v_2294 then (early_secret_173,binder_key_115) else fail-any) else fail-any)) else caught-fail) in
                            {10257}let v_2296: bool = (not-caught-fail(v_2295) && success?(1-proj-2-tuple(v_2295))) in
                            {10258}let kb_115: mac_key = (if v_2296 then 2-proj-2-tuple(v_2295) else caught-fail) in
                            {10259}let es'_4: bitstring = (if v_2296 then 1-proj-2-tuple(v_2295) else caught-fail) in
                            {10260}let psk_data'_48: bitstring = (if v_2290 then psk_data_52 else (if v_2296 then (NoPsk,zero,es'_4,false) else fail-any)) in
                            {10261}let cur_log_31: bitstring = (zero,o_client_hello_6) in
                            {10262}let (x_725: bitstring,g_64: group) = o_kex_data_10 in
                            {10263}let (psk_offer_56: preSharedKey,id_offer_56: identityPsk,es_offer_56: bitstring,is_safe_offer_56: bool) = psk_data'_48 in
                            {10264}event Client_PSKOffer(id_client_5,psk_offer_56,id_offer_56,is_safe_offer_56);
                            {10265}event Client_Rand_client(id_client_5,o_cr_14);
                            {10266}event Client_DH_client(id_client_5,dh_pub(g_64,x_725));
                            {10267}event Client_server_domain(id_client_5,o_dom_8);
                            {10268}let SH(sr_67: bytes32,mode_64: params) = server_hello_8 in
                            {10269}event Client_Rand_server(id_client_5,sr_67);
                            {10270}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_64,gy_57: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_117: preSharedKeyExt) = mode_64 in
                            (
                                {10271}let cur_log2_119: bitstring = (cur_log_31,server_hello_8) in
                                {10272}event Client_DH_server(id_client_5,gy_57);
                                {10273}let v_2297: bool = (psk_ext_117 = empty_psk_ext) in
                                {10274}let psk_259: preSharedKey = (if v_2297 then NoPsk else caught-fail) in
                                {10275}let s_235: bitstring = (if v_2297 then zero else caught-fail) in
                                {10276}let k_233: bitstring = (if v_2297 then catch-fail(psk2b(psk_259)) else caught-fail) in
                                {10277}let v_2298: bool = not-caught-fail(k_233) in
                                {10278}let early_secret_174: bitstring = (if v_2297 then catch-fail((if v_2298 then hmac(@8_tls_h,s_235,k_233) else fail-any)) else caught-fail) in
                                {10279}let v_2299: bool = not-caught-fail(early_secret_174) in
                                {10280}let l_640: label = (if v_2299 then tls13_ext_res_binder else caught-fail) in
                                {10281}let m_230: bitstring = (if v_2299 then zero else caught-fail) in
                                {10282}let h_613: bitstring = (if v_2299 then catch-fail(hash(@8_tls_h,m_230)) else caught-fail) in
                                {10283}let v_2300: bool = not-caught-fail(h_613) in
                                {10284}let x_726: bitstring = (if v_2300 then (l_640,h_613) else caught-fail) in
                                {10285}let binder_key_116: bitstring = (if v_2299 then catch-fail((if v_2300 then hmac(@8_tls_h,early_secret_174,x_726) else fail-any)) else caught-fail) in
                                {10286}let v_2301: bool = not-caught-fail(binder_key_116) in
                                {10287}let v_2302: bitstring = (if v_2297 then catch-fail((if v_2299 then (if v_2301 then (early_secret_174,binder_key_116) else fail-any) else fail-any)) else caught-fail) in
                                {10288}let v_2303: bool = (not-caught-fail(v_2302) && success?(1-proj-2-tuple(v_2302))) in
                                {10289}let kb_116: mac_key = (if v_2303 then 2-proj-2-tuple(v_2302) else caught-fail) in
                                {10290}let es_174: bitstring = (if v_2303 then 1-proj-2-tuple(v_2302) else caught-fail) in
                                {10291}let v_2304: bitstring = (if not(v_2297) then catch-fail(psk_data'_48) else caught-fail) in
                                {10292}let v_2305: bool = (not-caught-fail(v_2304) && success?(1-proj-4-tuple(v_2304))) in
                                {10293}let is_safe_104: bool = (if v_2305 then 4-proj-4-tuple(v_2304) else caught-fail) in
                                {10294}let es_175: bitstring = (if v_2305 then 3-proj-4-tuple(v_2304) else caught-fail) in
                                {10295}let id_118: identityPsk = (if v_2305 then 2-proj-4-tuple(v_2304) else caught-fail) in
                                {10296}let psk_260: preSharedKey = (if v_2305 then 1-proj-4-tuple(v_2304) else caught-fail) in
                                {10297}let (psk_261: preSharedKey,early_secret_175: bitstring,valid_56: bool,safe_psk_62: bool) = (if v_2297 then (if v_2303 then (NoPsk,es_174,true,false) else fail-any) else (if v_2305 then (psk_260,es_175,((psk_260 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_117)),is_safe_104) else fail-any)) in
                                {10298}event Client_PSKChoosen(id_client_5,psk_261,safe_psk_62);
                                {10299}if valid_56 then
                                (
                                    {10300}let gxy_114: element = catch-fail(dh_decap_fun(g_64,gy_57,x_725)) in
                                    {10301}let v_2306: bool = not-caught-fail(gxy_114) in
                                    {10302}new s_236[]: seed;
                                    {10303}let gxy_115: element = (if v_2306 then gxy_114 else dh_f(s_236)) in
                                    {10304}event Client_DH_gxy(id_client_5,gxy_115);
                                    {10305}let l_641: label = tls13_derived in
                                    {10306}let m_231: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                    {10307}let v_2307: bool = not-caught-fail(m_231) in
                                    {10308}let h_614: bitstring = (if v_2307 then catch-fail(hash(@8_tls_h,m_231)) else caught-fail) in
                                    {10309}let v_2308: bool = not-caught-fail(h_614) in
                                    {10310}let x_727: bitstring = (if v_2308 then (l_641,h_614) else caught-fail) in
                                    {10311}let extra_123: bitstring = catch-fail((if v_2307 then (if v_2308 then hmac(@8_tls_h,early_secret_175,x_727) else fail-any) else fail-any)) in
                                    {10312}let v_2309: bool = not-caught-fail(extra_123) in
                                    {10313}let handshake_secret_57: bitstring = (if v_2309 then hmac(@8_tls_h,extra_123,gxy_115) else fail-any) in
                                    {10314}let l_642: label = tls13_derived in
                                    {10315}let m_232: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                    {10316}let v_2310: bool = not-caught-fail(m_232) in
                                    {10317}let h_615: bitstring = (if v_2310 then catch-fail(hash(@8_tls_h,m_232)) else caught-fail) in
                                    {10318}let v_2311: bool = not-caught-fail(h_615) in
                                    {10319}let x_728: bitstring = (if v_2311 then (l_642,h_615) else caught-fail) in
                                    {10320}let extra_124: bitstring = catch-fail((if v_2310 then (if v_2311 then hmac(@8_tls_h,handshake_secret_57,x_728) else fail-any) else fail-any)) in
                                    {10321}let v_2312: bool = not-caught-fail(extra_124) in
                                    {10322}let k_234: bitstring = (if v_2312 then zero else caught-fail) in
                                    {10323}let master_secret_121: bitstring = (if v_2312 then catch-fail(hmac(@8_tls_h,handshake_secret_57,k_234)) else caught-fail) in
                                    {10324}let v_2313: bool = not-caught-fail(master_secret_121) in
                                    {10325}let l_643: label = (if v_2313 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {10326}let h_616: bitstring = (if v_2313 then catch-fail(hash(@8_tls_h,cur_log2_119)) else caught-fail) in
                                    {10327}let v_2314: bool = not-caught-fail(h_616) in
                                    {10328}let x_729: bitstring = (if v_2314 then (l_643,h_616) else caught-fail) in
                                    {10329}let client_hts_57: bitstring = (if v_2313 then catch-fail((if v_2314 then hmac(@8_tls_h,handshake_secret_57,x_729) else fail-any)) else caught-fail) in
                                    {10330}let v_2315: bool = not-caught-fail(client_hts_57) in
                                    {10331}let l_644: label = (if v_2315 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {10332}let h_617: bitstring = (if v_2315 then catch-fail(hash(@8_tls_h,cur_log2_119)) else caught-fail) in
                                    {10333}let v_2316: bool = not-caught-fail(h_617) in
                                    {10334}let x_730: bitstring = (if v_2316 then (l_644,h_617) else caught-fail) in
                                    {10335}let server_hts_57: bitstring = (if v_2315 then catch-fail((if v_2316 then hmac(@8_tls_h,handshake_secret_57,x_730) else fail-any)) else caught-fail) in
                                    {10336}let v_2317: bool = not-caught-fail(server_hts_57) in
                                    {10337}let l_645: label = (if v_2317 then tls13_key else caught-fail) in
                                    {10338}let h_618: bitstring = (if v_2317 then zero else caught-fail) in
                                    {10339}let x_731: bitstring = (if v_2317 then (l_645,h_618) else caught-fail) in
                                    {10340}let client_wkh_57: bitstring = (if v_2317 then catch-fail(hmac(@8_tls_h,client_hts_57,x_731)) else caught-fail) in
                                    {10341}let v_2318: bool = not-caught-fail(client_wkh_57) in
                                    {10342}let l_646: label = (if v_2318 then tls13_key else caught-fail) in
                                    {10343}let h_619: bitstring = (if v_2318 then zero else caught-fail) in
                                    {10344}let x_732: bitstring = (if v_2318 then (l_646,h_619) else caught-fail) in
                                    {10345}let server_wkh_57: bitstring = (if v_2318 then catch-fail(hmac(@8_tls_h,server_hts_57,x_732)) else caught-fail) in
                                    {10346}let v_2319: bool = not-caught-fail(server_wkh_57) in
                                    {10347}let l_647: label = (if v_2319 then tls13_finished else caught-fail) in
                                    {10348}let h_620: bitstring = (if v_2319 then zero else caught-fail) in
                                    {10349}let x_733: bitstring = (if v_2319 then (l_647,h_620) else caught-fail) in
                                    {10350}let client_fk_57: bitstring = (if v_2319 then catch-fail(hmac(@8_tls_h,client_hts_57,x_733)) else caught-fail) in
                                    {10351}let v_2320: bool = not-caught-fail(client_fk_57) in
                                    {10352}let l_648: label = (if v_2320 then tls13_finished else caught-fail) in
                                    {10353}let h_621: bitstring = (if v_2320 then zero else caught-fail) in
                                    {10354}let x_734: bitstring = (if v_2320 then (l_648,h_621) else caught-fail) in
                                    {10355}let server_fk_57: bitstring = (if v_2320 then catch-fail(hmac(@8_tls_h,server_hts_57,x_734)) else caught-fail) in
                                    {10356}let v_2321: bool = not-caught-fail(server_fk_57) in
                                    {10357}let (master_secret_122: bitstring,chk_64: aead_key,shk_63: aead_key,cfin_64: mac_key,sfin_63: mac_key) = (if v_2312 then (if v_2313 then (if v_2315 then (if v_2317 then (if v_2318 then (if v_2319 then (if v_2320 then (if v_2321 then (master_secret_121,client_wkh_57,server_wkh_57,client_fk_57,server_fk_57) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {10358}event Client_chk(id_client_5,chk_64);
                                    {10359}event Client_shk(id_client_5,shk_63);
                                    {10360}event Client_cfin(id_client_5,cfin_64);
                                    {10361}event Client_sfin(id_client_5,sfin_63);
                                    {10362}in(io, enc_ee_msg_56: bitstring);
                                    {10363}let ee_msg_61: msg = aead_dec(@8_tls_a,shk_63,0,zero,enc_ee_msg_56) in
                                    {10364}let EE(ech_ee_56: echExt,extra_ee_56: extraExt) = ee_msg_61 in
                                    {10365}let cur_log2_120: bitstring = (cur_log2_119,ee_msg_61) in
                                    {10366}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(o_cr_14,sr_67,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_261,safe_psk_62,@8_comp_psk,master_secret_122,chk_64,0,shk_63,1,cfin_64,sfin_63,cur_log2_120)))
                                )
                                else
                                    {10367}out(io, illegal_parameter)
                            )
                            else
                                {10368}out(io, illegal_parameter)
                )
                else
                    {10369}out(io, unexpected_message)
            )
    )
    else
        {10371}let psk_262: preSharedKey = NoPsk in
        {10372}let s_237: bitstring = zero in
        {10373}let k_235: bitstring = catch-fail(psk2b(psk_262)) in
        {10374}let v_2322: bool = not-caught-fail(k_235) in
        {10375}let early_secret_176: bitstring = catch-fail((if v_2322 then hmac(h_psk_1,s_237,k_235) else fail-any)) in
        {10376}let v_2323: bool = not-caught-fail(early_secret_176) in
        {10377}let l_649: label = (if v_2323 then tls13_ext_res_binder else caught-fail) in
        {10378}let m_233: bitstring = (if v_2323 then zero else caught-fail) in
        {10379}let h_622: bitstring = (if v_2323 then catch-fail(hash(h_psk_1,m_233)) else caught-fail) in
        {10380}let v_2324: bool = not-caught-fail(h_622) in
        {10381}let x_735: bitstring = (if v_2324 then (l_649,h_622) else caught-fail) in
        {10382}let binder_key_117: bitstring = (if v_2323 then catch-fail((if v_2324 then hmac(h_psk_1,early_secret_176,x_735) else fail-any)) else caught-fail) in
        {10383}let v_2325: bool = not-caught-fail(binder_key_117) in
        {10384}let v_2326: bitstring = catch-fail((if v_2323 then (if v_2325 then (early_secret_176,binder_key_117) else fail-any) else fail-any)) in
        {10385}let v_2327: bool = (not-caught-fail(v_2326) && success?(1-proj-2-tuple(v_2326))) in
        {10386}let kb_117: mac_key = (if v_2327 then 2-proj-2-tuple(v_2326) else caught-fail) in
        {10387}let es_176: bitstring = (if v_2327 then 1-proj-2-tuple(v_2326) else caught-fail) in
        {10388}let v_2328: bitstring = catch-fail((if v_2327 then (empty_psk_ext,(NoPsk,zero,es_176,false)) else fail-any)) in
        {10389}let v_2329: bool = (not-caught-fail(v_2328) && success?(1-proj-2-tuple(v_2328))) in
        {10390}let psk_data_60: bitstring = (if v_2329 then 2-proj-2-tuple(v_2328) else caught-fail) in
        {10391}let psk_ext_118: preSharedKeyExt = (if v_2329 then 1-proj-2-tuple(v_2328) else caught-fail) in
        {10392}let i_offer_20: params = (if v_2329 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_5,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_118) else caught-fail) in
        {10393}let i_client_hello_26: msg = (if v_2329 then CH(i_cr_8,i_offer_20) else caught-fail) in
        {10394}let v_2330: bool = (if v_2329 then catch-fail(@8_use_grease) else caught-fail) in
        {10395}let o_offer_45: params = (if v_2330 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),ech_inner_or_grease_1,empty_extra_ext,psk_ext_118) else caught-fail) in
        {10396}new fake_id_25[]: identityPsk;
        {10397}new fake_binder_25[]: bitstring;
        {10398}let o_psk_ext_25: preSharedKeyExt = (if is-false(v_2330) then (if @8_use_psk then client_psk_ext(fake_id_25,fake_binder_25) else empty_psk_ext) else caught-fail) in
        {10399}let o_ech_ext_ADD_20: echExt = (if is-false(v_2330) then ECHClientHelloOuter(ech_h_13,ech_a_13,config_id_13,enc_6,zero) else caught-fail) in
        {10400}let o_offer_ADD_20: params = (if is-false(v_2330) then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),o_ech_ext_ADD_20,empty_extra_ext,o_psk_ext_25) else caught-fail) in
        {10401}let o_client_hello_ADD_20: msg = (if is-false(v_2330) then CH(o_cr_10,o_offer_ADD_20) else caught-fail) in
        {10402}let n_22: nat = (if is-false(v_2330) then 1 else caught-fail) in
        {10403}let v_2331: hpkeContext = (if is-false(v_2330) then catch-fail(context_2) else caught-fail) in
        {10404}let v_2332: bool = (not-caught-fail(v_2331) && ((S =nf 1-proj-hpke_context(v_2331)) && success?(1-proj-hpke_context(v_2331)))) in
        {10405}let base_nonce_25: bitstring = (if v_2332 then 3-proj-hpke_context(v_2331) else caught-fail) in
        {10406}let key_25: aead_key = (if v_2332 then 2-proj-hpke_context(v_2331) else caught-fail) in
        {10407}let payload_26: bitstring = (if is-false(v_2330) then catch-fail((if v_2332 then aead_enc(ech_a_13,key_25,(base_nonce_25,n_22),o_client_hello_ADD_20,i_client_hello_26) else fail-any)) else caught-fail) in
        {10408}let v_2333: bool = not-caught-fail(payload_26) in
        {10409}let o_ech_ext_25: echExt = (if v_2333 then ECHClientHelloOuter(ech_h_13,ech_a_13,config_id_13,enc_6,payload_26) else caught-fail) in
        {10410}let o_offer_46: params = (if v_2333 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),o_ech_ext_25,empty_extra_ext,o_psk_ext_25) else caught-fail) in
        {10411}let (o_client_hello_7: msg,i_client_hello_27: msg,o_cr_17: bytes32,i_cr_13: bytes32,o_kex_data_12: bitstring,i_kex_data_12: bitstring,o_psk_ext_26: preSharedKeyExt,psk_data_61: bitstring,o_ech_ext_26: echExt) = (if v_2329 then (if undo-catch-fail(v_2330) then (CH(o_cr_10,o_offer_45),CH(o_cr_10,o_offer_45),o_cr_10,o_cr_10,o_kex_data_7,o_kex_data_7,psk_ext_118,psk_data_60,ech_inner_or_grease_1) else (if v_2333 then (CH(o_cr_10,o_offer_46),i_client_hello_26,o_cr_10,i_cr_8,o_kex_data_7,i_kex_data_7,o_psk_ext_25,psk_data_60,o_ech_ext_25) else fail-any)) else fail-any) in
        {10412}out(io, o_client_hello_7);
        {10413}let (psk_263: preSharedKey,id_119: identityPsk,es_177: bitstring,safe_5: bool) = psk_data_61 in
        (
            {10414}if (false && (not(@8_use_grease) && (psk_263 ≠ NoPsk))) then
            {10415}let client_hello_12: bitstring = (zero,i_client_hello_27) in
            {10416}let l_650: label = tls13_client_early_traffic_secret in
            {10417}let h_623: bitstring = catch-fail(hash(@8_backend_h,client_hello_12)) in
            {10418}let v_2334: bool = not-caught-fail(h_623) in
            {10419}let x_736: bitstring = (if v_2334 then (l_650,h_623) else caught-fail) in
            {10420}let atsc0_9: bitstring = catch-fail((if v_2334 then hmac(@8_backend_h,es_177,x_736) else fail-any)) in
            {10421}let v_2335: bool = not-caught-fail(atsc0_9) in
            {10422}let l_651: label = (if v_2335 then tls13_key else caught-fail) in
            {10423}let h_624: bitstring = (if v_2335 then zero else caught-fail) in
            {10424}let x_737: bitstring = (if v_2335 then (l_651,h_624) else caught-fail) in
            {10425}let kc0_9: bitstring = (if v_2335 then catch-fail(hmac(@8_backend_h,atsc0_9,x_737)) else caught-fail) in
            {10426}let v_2336: bool = not-caught-fail(kc0_9) in
            {10427}let l_652: label = (if v_2336 then tls13_early_exporter_master_secret else caught-fail) in
            {10428}let h_625: bitstring = (if v_2336 then catch-fail(hash(@8_backend_h,client_hello_12)) else caught-fail) in
            {10429}let v_2337: bool = not-caught-fail(h_625) in
            {10430}let x_738: bitstring = (if v_2337 then (l_652,h_625) else caught-fail) in
            {10431}let ems0_18: bitstring = (if v_2336 then catch-fail((if v_2337 then hmac(@8_backend_h,es_177,x_738) else fail-any)) else caught-fail) in
            {10432}let v_2338: bool = not-caught-fail(ems0_18) in
            {10433}let (wkc0_9: aead_key,ems0_19: bitstring) = (if v_2335 then (if v_2336 then (if v_2338 then (kc0_9,ems0_18) else fail-any) else fail-any) else fail-any) in
            {10434}!
            {10435}in(io, (i_9: nat,ad_9: bitstring));
            {10436}if is_nat(i_9) then
            {10437}new msg_ed_8[]: bitstring;
            {10438}let enc_ed_8: bitstring = aead_enc(@8_backend_a,wkc0_9,i_9,ad_9,msg_ed_8) in
            {10439}new st_18: stamp;
            {10440}event ClientSequenceClient0RTTDataWriteKey(id_client_5,st_18,i_9);
            {10441}event ClientSends0(id_client_5,i_cr_13,psk_263,i_9,ad_9,msg_ed_8);
            {10442}out(io, enc_ed_8)
        ) | (
            {10443}in(io, server_hello_9: msg);
            {10444}let SH(B32(sr24_7: bytes24,sr8_26: bytes8),mode_65: params) = server_hello_9 in
            (
                {10445}if (false && (B32(sr24_7,sr8_26) = B32(HRR24,HRR8))) then
                (
                    {10446}if (send_kex_5 ≠ true) then
                    {10447}let nego(=TLS13,h_alg_20: hash_alg,a_alg_18: aead_alg,hrr_kex_ext(g_65: group),=empty_sni_ext,ech_ext_23: echExt,=empty_extra_ext,=empty_psk_ext) = mode_65 in
                    {10448}let v_2339: bool = (ech_ext_23 = empty_ech_ext) in
                    {10449}let hrr_mode_10: params = (if not(v_2339) then nego(TLS13,@8_backend_h,@8_backend_a,hrr_kex_ext(@8_backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) else caught-fail) in
                    {10450}let hrr_6: msg = (if not(v_2339) then SH(B32(HRR24,HRR8),hrr_mode_10) else caught-fail) in
                    {10451}let cur_log_32: bitstring = (if not(v_2339) then ((zero,i_client_hello_27),hrr_6) else caught-fail) in
                    {10452}let transcript_hrr_ech_conf_6: bitstring = (if not(v_2339) then catch-fail(hash(@8_backend_h,cur_log_32)) else caught-fail) in
                    {10453}let v_2340: bool = not-caught-fail(transcript_hrr_ech_conf_6) in
                    {10454}let s_238: bitstring = (if v_2340 then zero else caught-fail) in
                    {10455}let k_236: bitstring = (if v_2340 then catch-fail(b32_2_b(get_random(i_client_hello_27))) else caught-fail) in
                    {10456}let v_2341: bool = not-caught-fail(k_236) in
                    {10457}let k_237: bitstring = (if v_2340 then catch-fail((if v_2341 then hmac(@8_backend_h,s_238,k_236) else fail-any)) else caught-fail) in
                    {10458}let v_2342: bool = not-caught-fail(k_237) in
                    {10459}let l_653: label = (if v_2342 then hrr_ech_accept_confirmation else caught-fail) in
                    {10460}let x_739: bitstring = (if v_2342 then (l_653,cur_log_32) else caught-fail) in
                    {10461}let is_ech_accepted_5: bool = (if v_2339 then false else (if (ech_ext_23 = ECHHelloRetryRequest((if v_2340 then crop_into_bytes8((if v_2342 then hmac(@8_backend_h,k_237,x_739) else fail-any)) else fail-any))) then true else false)) in
                    {10462}event ClientEchAcceptance(id_client_5,is_ech_accepted_5);
                    {10463}if is_ech_accepted_5 then
                    (
                        {10464}let cur_log_IN1_HRR_5: bitstring = ((zero,i_client_hello_27),server_hello_9) in
                        {10465}let ech_config(config_id_18: configId,ech_g_18: group,pkR_20: element,o_dom_14: domain,ech_h_18: hash_alg,ech_a_18: aead_alg) = ech_conf_2 in
                        {10466}let send_key_share_15: bool = true in
                        {10467}new s_239[]: seed;
                        {10468}let gx_55: element = dh_pub(@8_backend_g,dh_k(s_239)) in
                        {10469}let v_2343: bitstring = (dh_k(s_239),gx_55) in
                        {10470}let v_2344: bool = success?(1-proj-2-tuple(v_2343)) in
                        {10471}let gx_56: element = (if v_2344 then 2-proj-2-tuple(v_2343) else caught-fail) in
                        {10472}let x_740: bitstring = (if v_2344 then 1-proj-2-tuple(v_2343) else caught-fail) in
                        {10473}let kex_23: kex_alg = (if v_2344 then (if send_key_share_15 then DHE_kex(@8_backend_g,gx_56) else DHE_group(@8_backend_g)) else caught-fail) in
                        {10474}let (i_kex_ext_8: keyShareExt,i_kex_data_13: bitstring) = (if v_2344 then (client_kex_ext(kex_23),(x_740,@8_backend_g)) else fail-any) in
                        {10475}let send_key_share_16: bool = true in
                        {10476}new s_240[]: seed;
                        {10477}let gx_57: element = dh_pub(@8_tls_g,dh_k(s_240)) in
                        {10478}let v_2345: bitstring = (dh_k(s_240),gx_57) in
                        {10479}let v_2346: bool = success?(1-proj-2-tuple(v_2345)) in
                        {10480}let gx_58: element = (if v_2346 then 2-proj-2-tuple(v_2345) else caught-fail) in
                        {10481}let x_741: bitstring = (if v_2346 then 1-proj-2-tuple(v_2345) else caught-fail) in
                        {10482}let kex_24: kex_alg = (if v_2346 then (if send_key_share_16 then DHE_kex(@8_tls_g,gx_58) else DHE_group(@8_tls_g)) else caught-fail) in
                        {10483}let (o_kex_ext_12: keyShareExt,o_kex_data_13: bitstring) = (if v_2346 then (client_kex_ext(kex_24),(x_741,@8_tls_g)) else fail-any) in
                        {10484}new rand24_24[]: bytes24;
                        {10485}new rand8_24[]: bytes8;
                        {10486}let i_cr_14: bytes32 = B32(rand24_24,rand8_24) in
                        {10487}new rand24_25[]: bytes24;
                        {10488}new rand8_25[]: bytes8;
                        {10489}let o_cr_18: bytes32 = B32(rand24_25,rand8_25) in
                        {10490}let ech_ext_24: echExt = ECHClientHelloInner in
                        {10491}if @8_use_psk then
                        (
                            {10492}let (psk_264: preSharedKey,id_120: identityPsk,old_es_16: bitstring,is_safe_105: bool) = psk_data_61 in
                            (
                                {10493}let offer_46: params = nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_8,SNI(backend_dom_1),ech_ext_24,@8_i_extra_ext,trunc_client_psk_ext(id_120)) in
                                {10494}let cur_log'_34: bitstring = (cur_log_IN1_HRR_5,CH(i_cr_14,offer_46)) in
                                {10495}let s_241: bitstring = zero in
                                {10496}let k_238: bitstring = catch-fail(psk2b(psk_264)) in
                                {10497}let v_2347: bool = not-caught-fail(k_238) in
                                {10498}let early_secret_177: bitstring = catch-fail((if v_2347 then hmac(@8_backend_h,s_241,k_238) else fail-any)) in
                                {10499}let v_2348: bool = not-caught-fail(early_secret_177) in
                                {10500}let l_654: label = (if v_2348 then tls13_ext_res_binder else caught-fail) in
                                {10501}let m_234: bitstring = (if v_2348 then zero else caught-fail) in
                                {10502}let h_626: bitstring = (if v_2348 then catch-fail(hash(@8_backend_h,m_234)) else caught-fail) in
                                {10503}let v_2349: bool = not-caught-fail(h_626) in
                                {10504}let x_742: bitstring = (if v_2349 then (l_654,h_626) else caught-fail) in
                                {10505}let binder_key_118: bitstring = (if v_2348 then catch-fail((if v_2349 then hmac(@8_backend_h,early_secret_177,x_742) else fail-any)) else caught-fail) in
                                {10506}let v_2350: bool = not-caught-fail(binder_key_118) in
                                {10507}let v_2351: bitstring = catch-fail((if v_2348 then (if v_2350 then (early_secret_177,binder_key_118) else fail-any) else fail-any)) in
                                {10508}let v_2352: bool = (not-caught-fail(v_2351) && success?(1-proj-2-tuple(v_2351))) in
                                {10509}let kb_118: mac_key = (if v_2352 then 2-proj-2-tuple(v_2351) else caught-fail) in
                                {10510}let es_178: bitstring = (if v_2352 then 1-proj-2-tuple(v_2351) else caught-fail) in
                                {10511}let binders_33: bitstring = (if v_2352 then catch-fail(hmac(@8_backend_h,kb_118,cur_log'_34)) else caught-fail) in
                                {10512}let v_2353: bool = not-caught-fail(binders_33) in
                                {10513}let v_2354: bitstring = catch-fail((if v_2352 then (if v_2353 then (client_psk_ext(id_120,binders_33),(psk_264,id_120,es_178,is_safe_105)) else fail-any) else fail-any)) in
                                {10514}let v_2355: bool = (not-caught-fail(v_2354) && success?(1-proj-2-tuple(v_2354))) in
                                {10515}let psk_data_62: bitstring = (if v_2355 then 2-proj-2-tuple(v_2354) else caught-fail) in
                                {10516}let psk_ext_119: preSharedKeyExt = (if v_2355 then 1-proj-2-tuple(v_2354) else caught-fail) in
                                {10517}let i_offer_21: params = (if v_2355 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_8,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_119) else caught-fail) in
                                {10518}let i_client_hello_28: msg = (if v_2355 then CH(i_cr_14,i_offer_21) else caught-fail) in
                                {10519}new fake_id_26[]: identityPsk;
                                {10520}new fake_binder_26[]: bitstring;
                                {10521}let o_psk_ext_27: preSharedKeyExt = (if v_2355 then (if @8_use_psk then client_psk_ext(fake_id_26,fake_binder_26) else empty_psk_ext) else caught-fail) in
                                {10522}let o_ech_ext_ADD_21: echExt = (if v_2355 then ECHClientHelloOuter(ech_h_18,ech_a_18,config_id_18,zero,zero) else caught-fail) in
                                {10523}let o_offer_ADD_21: params = (if v_2355 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_12,SNI(o_dom_14),o_ech_ext_ADD_21,empty_extra_ext,o_psk_ext_27) else caught-fail) in
                                {10524}let o_client_hello_ADD_21: msg = (if v_2355 then CH(o_cr_18,o_offer_ADD_21) else caught-fail) in
                                {10525}let n_23: nat = (if v_2355 then 2 else caught-fail) in
                                {10526}let v_2356: hpkeContext = (if v_2355 then catch-fail(context_2) else caught-fail) in
                                {10527}let v_2357: bool = (not-caught-fail(v_2356) && ((S =nf 1-proj-hpke_context(v_2356)) && success?(1-proj-hpke_context(v_2356)))) in
                                {10528}let base_nonce_26: bitstring = (if v_2357 then 3-proj-hpke_context(v_2356) else caught-fail) in
                                {10529}let key_26: aead_key = (if v_2357 then 2-proj-hpke_context(v_2356) else caught-fail) in
                                {10530}let payload_27: bitstring = (if v_2355 then catch-fail((if v_2357 then aead_enc(ech_a_18,key_26,(base_nonce_26,n_23),o_client_hello_ADD_21,i_client_hello_28) else fail-any)) else caught-fail) in
                                {10531}let v_2358: bool = not-caught-fail(payload_27) in
                                {10532}let o_ech_ext_27: echExt = (if v_2358 then ECHClientHelloOuter(ech_h_18,ech_a_18,config_id_18,zero,payload_27) else caught-fail) in
                                {10533}let o_offer_47: params = (if v_2358 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_12,SNI(o_dom_14),o_ech_ext_27,empty_extra_ext,o_psk_ext_27) else caught-fail) in
                                {10534}let (o_client_hello'_15: msg,i_client_hello'_16: msg,i_cr'_15: bytes32,i_kex_data'_15: bitstring,psk_data'_49: bitstring) = (if v_2355 then (if v_2358 then (CH(o_cr_18,o_offer_47),i_client_hello_28,i_cr_14,i_kex_data_13,psk_data_62) else fail-any) else fail-any) in
                                {10535}out(io, o_client_hello'_15);
                                {10536}in(io, server_hello'_44: msg);
                                {10537}let SH(B32(sr24'_15: bytes24,sr8'_15: bytes8),params'_15: params) = server_hello'_44 in
                                {10538}let cur_log_IN1_HRR_IN2_15: bitstring = (cur_log_IN1_HRR_5,i_client_hello'_16) in
                                {10539}let sh_modified_21: msg = SH(B32(sr24'_15,zero8),params'_15) in
                                {10540}let cur_log_sh_21: bitstring = (cur_log_IN1_HRR_IN2_15,sh_modified_21) in
                                {10541}let transcript_ech_conf_21: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_21)) in
                                {10542}let v_2359: bool = not-caught-fail(transcript_ech_conf_21) in
                                {10543}let s_242: bitstring = (if v_2359 then zero else caught-fail) in
                                {10544}let k_239: bitstring = (if v_2359 then catch-fail(b32_2_b(get_random(i_client_hello'_16))) else caught-fail) in
                                {10545}let v_2360: bool = not-caught-fail(k_239) in
                                {10546}let k_240: bitstring = (if v_2359 then catch-fail((if v_2360 then hmac(@8_backend_h,s_242,k_239) else fail-any)) else caught-fail) in
                                {10547}let v_2361: bool = not-caught-fail(k_240) in
                                {10548}let l_655: label = (if v_2361 then ech_accept_confirmation else caught-fail) in
                                {10549}let x_743: bitstring = (if v_2361 then (l_655,cur_log_sh_21) else caught-fail) in
                                {10550}let sr8_27: bytes8 = (if v_2359 then catch-fail(crop_into_bytes8((if v_2361 then hmac(@8_backend_h,k_240,x_743) else fail-any))) else caught-fail) in
                                {10551}let v_2362: bool = not-caught-fail(sr8_27) in
                                {10552}if (B32(sr24'_15,sr8'_15) = (if v_2359 then (if v_2362 then B32(sr24'_15,sr8_27) else fail-any) else fail-any)) then
                                {10553}let (x_744: bitstring,g_66: group) = i_kex_data'_15 in
                                {10554}let (psk_offer_57: preSharedKey,id_offer_57: identityPsk,es_offer_57: bitstring,is_safe_offer_57: bool) = psk_data'_49 in
                                {10555}event Client_PSKOffer(id_client_5,psk_offer_57,id_offer_57,is_safe_offer_57);
                                {10556}event Client_Rand_client(id_client_5,i_cr'_15);
                                {10557}event Client_DH_client(id_client_5,dh_pub(g_66,x_744));
                                {10558}event Client_server_domain(id_client_5,backend_dom_1);
                                {10559}let SH(sr_68: bytes32,mode_66: params) = server_hello'_44 in
                                {10560}event Client_Rand_server(id_client_5,sr_68);
                                {10561}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_66,gy_58: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_120: preSharedKeyExt) = mode_66 in
                                (
                                    {10562}let cur_log2_121: bitstring = (cur_log_IN1_HRR_IN2_15,server_hello'_44) in
                                    {10563}event Client_DH_server(id_client_5,gy_58);
                                    {10564}let v_2363: bool = (psk_ext_120 = empty_psk_ext) in
                                    {10565}let psk_265: preSharedKey = (if v_2363 then NoPsk else caught-fail) in
                                    {10566}let s_243: bitstring = (if v_2363 then zero else caught-fail) in
                                    {10567}let k_241: bitstring = (if v_2363 then catch-fail(psk2b(psk_265)) else caught-fail) in
                                    {10568}let v_2364: bool = not-caught-fail(k_241) in
                                    {10569}let early_secret_178: bitstring = (if v_2363 then catch-fail((if v_2364 then hmac(@8_backend_h,s_243,k_241) else fail-any)) else caught-fail) in
                                    {10570}let v_2365: bool = not-caught-fail(early_secret_178) in
                                    {10571}let l_656: label = (if v_2365 then tls13_ext_res_binder else caught-fail) in
                                    {10572}let m_235: bitstring = (if v_2365 then zero else caught-fail) in
                                    {10573}let h_627: bitstring = (if v_2365 then catch-fail(hash(@8_backend_h,m_235)) else caught-fail) in
                                    {10574}let v_2366: bool = not-caught-fail(h_627) in
                                    {10575}let x_745: bitstring = (if v_2366 then (l_656,h_627) else caught-fail) in
                                    {10576}let binder_key_119: bitstring = (if v_2365 then catch-fail((if v_2366 then hmac(@8_backend_h,early_secret_178,x_745) else fail-any)) else caught-fail) in
                                    {10577}let v_2367: bool = not-caught-fail(binder_key_119) in
                                    {10578}let v_2368: bitstring = (if v_2363 then catch-fail((if v_2365 then (if v_2367 then (early_secret_178,binder_key_119) else fail-any) else fail-any)) else caught-fail) in
                                    {10579}let v_2369: bool = (not-caught-fail(v_2368) && success?(1-proj-2-tuple(v_2368))) in
                                    {10580}let kb_119: mac_key = (if v_2369 then 2-proj-2-tuple(v_2368) else caught-fail) in
                                    {10581}let es_179: bitstring = (if v_2369 then 1-proj-2-tuple(v_2368) else caught-fail) in
                                    {10582}let v_2370: bitstring = (if not(v_2363) then catch-fail(psk_data'_49) else caught-fail) in
                                    {10583}let v_2371: bool = (not-caught-fail(v_2370) && success?(1-proj-4-tuple(v_2370))) in
                                    {10584}let is_safe_106: bool = (if v_2371 then 4-proj-4-tuple(v_2370) else caught-fail) in
                                    {10585}let es_180: bitstring = (if v_2371 then 3-proj-4-tuple(v_2370) else caught-fail) in
                                    {10586}let id_121: identityPsk = (if v_2371 then 2-proj-4-tuple(v_2370) else caught-fail) in
                                    {10587}let psk_266: preSharedKey = (if v_2371 then 1-proj-4-tuple(v_2370) else caught-fail) in
                                    {10588}let (psk_267: preSharedKey,early_secret_179: bitstring,valid_57: bool,safe_psk_63: bool) = (if v_2363 then (if v_2369 then (NoPsk,es_179,true,false) else fail-any) else (if v_2371 then (psk_266,es_180,((psk_266 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_120)),is_safe_106) else fail-any)) in
                                    {10589}event Client_PSKChoosen(id_client_5,psk_267,safe_psk_63);
                                    {10590}if valid_57 then
                                    (
                                        {10591}let gxy_116: element = catch-fail(dh_decap_fun(g_66,gy_58,x_744)) in
                                        {10592}let v_2372: bool = not-caught-fail(gxy_116) in
                                        {10593}new s_244[]: seed;
                                        {10594}let gxy_117: element = (if v_2372 then gxy_116 else dh_f(s_244)) in
                                        {10595}event Client_DH_gxy(id_client_5,gxy_117);
                                        {10596}let l_657: label = tls13_derived in
                                        {10597}let m_236: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {10598}let v_2373: bool = not-caught-fail(m_236) in
                                        {10599}let h_628: bitstring = (if v_2373 then catch-fail(hash(@8_backend_h,m_236)) else caught-fail) in
                                        {10600}let v_2374: bool = not-caught-fail(h_628) in
                                        {10601}let x_746: bitstring = (if v_2374 then (l_657,h_628) else caught-fail) in
                                        {10602}let extra_125: bitstring = catch-fail((if v_2373 then (if v_2374 then hmac(@8_backend_h,early_secret_179,x_746) else fail-any) else fail-any)) in
                                        {10603}let v_2375: bool = not-caught-fail(extra_125) in
                                        {10604}let handshake_secret_58: bitstring = (if v_2375 then hmac(@8_backend_h,extra_125,gxy_117) else fail-any) in
                                        {10605}let l_658: label = tls13_derived in
                                        {10606}let m_237: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {10607}let v_2376: bool = not-caught-fail(m_237) in
                                        {10608}let h_629: bitstring = (if v_2376 then catch-fail(hash(@8_backend_h,m_237)) else caught-fail) in
                                        {10609}let v_2377: bool = not-caught-fail(h_629) in
                                        {10610}let x_747: bitstring = (if v_2377 then (l_658,h_629) else caught-fail) in
                                        {10611}let extra_126: bitstring = catch-fail((if v_2376 then (if v_2377 then hmac(@8_backend_h,handshake_secret_58,x_747) else fail-any) else fail-any)) in
                                        {10612}let v_2378: bool = not-caught-fail(extra_126) in
                                        {10613}let k_242: bitstring = (if v_2378 then zero else caught-fail) in
                                        {10614}let master_secret_123: bitstring = (if v_2378 then catch-fail(hmac(@8_backend_h,handshake_secret_58,k_242)) else caught-fail) in
                                        {10615}let v_2379: bool = not-caught-fail(master_secret_123) in
                                        {10616}let l_659: label = (if v_2379 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {10617}let h_630: bitstring = (if v_2379 then catch-fail(hash(@8_backend_h,cur_log2_121)) else caught-fail) in
                                        {10618}let v_2380: bool = not-caught-fail(h_630) in
                                        {10619}let x_748: bitstring = (if v_2380 then (l_659,h_630) else caught-fail) in
                                        {10620}let client_hts_58: bitstring = (if v_2379 then catch-fail((if v_2380 then hmac(@8_backend_h,handshake_secret_58,x_748) else fail-any)) else caught-fail) in
                                        {10621}let v_2381: bool = not-caught-fail(client_hts_58) in
                                        {10622}let l_660: label = (if v_2381 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {10623}let h_631: bitstring = (if v_2381 then catch-fail(hash(@8_backend_h,cur_log2_121)) else caught-fail) in
                                        {10624}let v_2382: bool = not-caught-fail(h_631) in
                                        {10625}let x_749: bitstring = (if v_2382 then (l_660,h_631) else caught-fail) in
                                        {10626}let server_hts_58: bitstring = (if v_2381 then catch-fail((if v_2382 then hmac(@8_backend_h,handshake_secret_58,x_749) else fail-any)) else caught-fail) in
                                        {10627}let v_2383: bool = not-caught-fail(server_hts_58) in
                                        {10628}let l_661: label = (if v_2383 then tls13_key else caught-fail) in
                                        {10629}let h_632: bitstring = (if v_2383 then zero else caught-fail) in
                                        {10630}let x_750: bitstring = (if v_2383 then (l_661,h_632) else caught-fail) in
                                        {10631}let client_wkh_58: bitstring = (if v_2383 then catch-fail(hmac(@8_backend_h,client_hts_58,x_750)) else caught-fail) in
                                        {10632}let v_2384: bool = not-caught-fail(client_wkh_58) in
                                        {10633}let l_662: label = (if v_2384 then tls13_key else caught-fail) in
                                        {10634}let h_633: bitstring = (if v_2384 then zero else caught-fail) in
                                        {10635}let x_751: bitstring = (if v_2384 then (l_662,h_633) else caught-fail) in
                                        {10636}let server_wkh_58: bitstring = (if v_2384 then catch-fail(hmac(@8_backend_h,server_hts_58,x_751)) else caught-fail) in
                                        {10637}let v_2385: bool = not-caught-fail(server_wkh_58) in
                                        {10638}let l_663: label = (if v_2385 then tls13_finished else caught-fail) in
                                        {10639}let h_634: bitstring = (if v_2385 then zero else caught-fail) in
                                        {10640}let x_752: bitstring = (if v_2385 then (l_663,h_634) else caught-fail) in
                                        {10641}let client_fk_58: bitstring = (if v_2385 then catch-fail(hmac(@8_backend_h,client_hts_58,x_752)) else caught-fail) in
                                        {10642}let v_2386: bool = not-caught-fail(client_fk_58) in
                                        {10643}let l_664: label = (if v_2386 then tls13_finished else caught-fail) in
                                        {10644}let h_635: bitstring = (if v_2386 then zero else caught-fail) in
                                        {10645}let x_753: bitstring = (if v_2386 then (l_664,h_635) else caught-fail) in
                                        {10646}let server_fk_58: bitstring = (if v_2386 then catch-fail(hmac(@8_backend_h,server_hts_58,x_753)) else caught-fail) in
                                        {10647}let v_2387: bool = not-caught-fail(server_fk_58) in
                                        {10648}let (master_secret_124: bitstring,chk_65: aead_key,shk_64: aead_key,cfin_65: mac_key,sfin_64: mac_key) = (if v_2378 then (if v_2379 then (if v_2381 then (if v_2383 then (if v_2384 then (if v_2385 then (if v_2386 then (if v_2387 then (master_secret_123,client_wkh_58,server_wkh_58,client_fk_58,server_fk_58) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {10649}event Client_chk(id_client_5,chk_65);
                                        {10650}event Client_shk(id_client_5,shk_64);
                                        {10651}event Client_cfin(id_client_5,cfin_65);
                                        {10652}event Client_sfin(id_client_5,sfin_64);
                                        {10653}in(io, enc_ee_msg_57: bitstring);
                                        {10654}let ee_msg_62: msg = aead_dec(@8_backend_a,shk_64,0,zero,enc_ee_msg_57) in
                                        {10655}let EE(ech_ee_57: echExt,extra_ee_57: extraExt) = ee_msg_62 in
                                        {10656}let cur_log2_122: bitstring = (cur_log2_121,ee_msg_62) in
                                        {10657}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_15,sr_68,@8_backend_h,@8_backend_a,c_dom_7,backend_dom_1,psk_267,safe_psk_63,@8_comp_psk,master_secret_124,chk_65,0,shk_64,1,cfin_65,sfin_64,cur_log2_122)))
                                    )
                                    else
                                        {10658}out(io, illegal_parameter)
                                )
                                else
                                    {10659}out(io, illegal_parameter)
                            )
                            else
                                {10836}get pre_shared_keys(c_dom'_18: domain,=backend_dom_1,=@8_backend_h,id_122: identityPsk,psk_268: preSharedKey,idP_20: idProc,is_safe_107: bool) in
                                {10660}event Selected_one_time_used_psk(id_client_5,psk_268,is_safe_107);
                                {10661}event Selected_psk(c_dom_7,c_dom'_18,idP_20,is_safe_107);
                                {10662}event Selected_psk_no_missmatch(id_client_5,backend_dom_1,@8_backend_h,psk_268,id_122);
                                {10663}event Selected_psk_with_ID(c_dom_7,c_dom'_18,id_122,idP_20,is_safe_107);
                                {10664}let v_2388: bitstring = (id_122,psk_268,is_safe_107) in
                                {10665}let v_2389: bool = success?(1-proj-3-tuple(v_2388)) in
                                {10666}let is_safe_108: bool = (if v_2389 then 3-proj-3-tuple(v_2388) else caught-fail) in
                                {10667}let psk_269: preSharedKey = (if v_2389 then 2-proj-3-tuple(v_2388) else caught-fail) in
                                {10668}let id_123: identityPsk = (if v_2389 then 1-proj-3-tuple(v_2388) else caught-fail) in
                                {10669}let offer_47: params = (if v_2389 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_8,SNI(backend_dom_1),ech_ext_24,@8_i_extra_ext,trunc_client_psk_ext(id_123)) else caught-fail) in
                                {10670}let cur_log'_35: bitstring = (if v_2389 then (cur_log_IN1_HRR_5,CH(i_cr_14,offer_47)) else caught-fail) in
                                {10671}let s_245: bitstring = (if v_2389 then zero else caught-fail) in
                                {10672}let k_243: bitstring = (if v_2389 then catch-fail(psk2b(psk_269)) else caught-fail) in
                                {10673}let v_2390: bool = not-caught-fail(k_243) in
                                {10674}let early_secret_180: bitstring = (if v_2389 then catch-fail((if v_2390 then hmac(@8_backend_h,s_245,k_243) else fail-any)) else caught-fail) in
                                {10675}let v_2391: bool = not-caught-fail(early_secret_180) in
                                {10676}let l_665: label = (if v_2391 then tls13_ext_res_binder else caught-fail) in
                                {10677}let m_238: bitstring = (if v_2391 then zero else caught-fail) in
                                {10678}let h_636: bitstring = (if v_2391 then catch-fail(hash(@8_backend_h,m_238)) else caught-fail) in
                                {10679}let v_2392: bool = not-caught-fail(h_636) in
                                {10680}let x_754: bitstring = (if v_2392 then (l_665,h_636) else caught-fail) in
                                {10681}let binder_key_120: bitstring = (if v_2391 then catch-fail((if v_2392 then hmac(@8_backend_h,early_secret_180,x_754) else fail-any)) else caught-fail) in
                                {10682}let v_2393: bool = not-caught-fail(binder_key_120) in
                                {10683}let v_2394: bitstring = (if v_2389 then catch-fail((if v_2391 then (if v_2393 then (early_secret_180,binder_key_120) else fail-any) else fail-any)) else caught-fail) in
                                {10684}let v_2395: bool = (not-caught-fail(v_2394) && success?(1-proj-2-tuple(v_2394))) in
                                {10685}let kb_120: mac_key = (if v_2395 then 2-proj-2-tuple(v_2394) else caught-fail) in
                                {10686}let es_181: bitstring = (if v_2395 then 1-proj-2-tuple(v_2394) else caught-fail) in
                                {10687}let binders_34: bitstring = (if v_2395 then catch-fail(hmac(@8_backend_h,kb_120,cur_log'_35)) else caught-fail) in
                                {10688}let v_2396: bool = not-caught-fail(binders_34) in
                                {10689}let v_2397: bitstring = catch-fail((if v_2389 then (if v_2395 then (if v_2396 then (client_psk_ext(id_123,binders_34),(psk_269,id_123,es_181,is_safe_108)) else fail-any) else fail-any) else fail-any)) in
                                {10690}let v_2398: bool = (not-caught-fail(v_2397) && success?(1-proj-2-tuple(v_2397))) in
                                {10691}let psk_data_63: bitstring = (if v_2398 then 2-proj-2-tuple(v_2397) else caught-fail) in
                                {10692}let psk_ext_121: preSharedKeyExt = (if v_2398 then 1-proj-2-tuple(v_2397) else caught-fail) in
                                {10693}let i_offer_22: params = (if v_2398 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_8,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_121) else caught-fail) in
                                {10694}let i_client_hello_29: msg = (if v_2398 then CH(i_cr_14,i_offer_22) else caught-fail) in
                                {10695}new fake_id_27[]: identityPsk;
                                {10696}new fake_binder_27[]: bitstring;
                                {10697}let o_psk_ext_28: preSharedKeyExt = (if v_2398 then (if @8_use_psk then client_psk_ext(fake_id_27,fake_binder_27) else empty_psk_ext) else caught-fail) in
                                {10698}let o_ech_ext_ADD_22: echExt = (if v_2398 then ECHClientHelloOuter(ech_h_18,ech_a_18,config_id_18,zero,zero) else caught-fail) in
                                {10699}let o_offer_ADD_22: params = (if v_2398 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_12,SNI(o_dom_14),o_ech_ext_ADD_22,empty_extra_ext,o_psk_ext_28) else caught-fail) in
                                {10700}let o_client_hello_ADD_22: msg = (if v_2398 then CH(o_cr_18,o_offer_ADD_22) else caught-fail) in
                                {10701}let n_24: nat = (if v_2398 then 2 else caught-fail) in
                                {10702}let v_2399: hpkeContext = (if v_2398 then catch-fail(context_2) else caught-fail) in
                                {10703}let v_2400: bool = (not-caught-fail(v_2399) && ((S =nf 1-proj-hpke_context(v_2399)) && success?(1-proj-hpke_context(v_2399)))) in
                                {10704}let base_nonce_27: bitstring = (if v_2400 then 3-proj-hpke_context(v_2399) else caught-fail) in
                                {10705}let key_27: aead_key = (if v_2400 then 2-proj-hpke_context(v_2399) else caught-fail) in
                                {10706}let payload_28: bitstring = (if v_2398 then catch-fail((if v_2400 then aead_enc(ech_a_18,key_27,(base_nonce_27,n_24),o_client_hello_ADD_22,i_client_hello_29) else fail-any)) else caught-fail) in
                                {10707}let v_2401: bool = not-caught-fail(payload_28) in
                                {10708}let o_ech_ext_28: echExt = (if v_2401 then ECHClientHelloOuter(ech_h_18,ech_a_18,config_id_18,zero,payload_28) else caught-fail) in
                                {10709}let o_offer_48: params = (if v_2401 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_12,SNI(o_dom_14),o_ech_ext_28,empty_extra_ext,o_psk_ext_28) else caught-fail) in
                                {10710}let (o_client_hello'_16: msg,i_client_hello'_17: msg,i_cr'_16: bytes32,i_kex_data'_16: bitstring,psk_data'_50: bitstring) = (if v_2398 then (if v_2401 then (CH(o_cr_18,o_offer_48),i_client_hello_29,i_cr_14,i_kex_data_13,psk_data_63) else fail-any) else fail-any) in
                                {10711}out(io, o_client_hello'_16);
                                {10712}in(io, server_hello'_45: msg);
                                {10713}let SH(B32(sr24'_16: bytes24,sr8'_16: bytes8),params'_16: params) = server_hello'_45 in
                                {10714}let cur_log_IN1_HRR_IN2_16: bitstring = (cur_log_IN1_HRR_5,i_client_hello'_17) in
                                {10715}let sh_modified_22: msg = SH(B32(sr24'_16,zero8),params'_16) in
                                {10716}let cur_log_sh_22: bitstring = (cur_log_IN1_HRR_IN2_16,sh_modified_22) in
                                {10717}let transcript_ech_conf_22: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_22)) in
                                {10718}let v_2402: bool = not-caught-fail(transcript_ech_conf_22) in
                                {10719}let s_246: bitstring = (if v_2402 then zero else caught-fail) in
                                {10720}let k_244: bitstring = (if v_2402 then catch-fail(b32_2_b(get_random(i_client_hello'_17))) else caught-fail) in
                                {10721}let v_2403: bool = not-caught-fail(k_244) in
                                {10722}let k_245: bitstring = (if v_2402 then catch-fail((if v_2403 then hmac(@8_backend_h,s_246,k_244) else fail-any)) else caught-fail) in
                                {10723}let v_2404: bool = not-caught-fail(k_245) in
                                {10724}let l_666: label = (if v_2404 then ech_accept_confirmation else caught-fail) in
                                {10725}let x_755: bitstring = (if v_2404 then (l_666,cur_log_sh_22) else caught-fail) in
                                {10726}let sr8_28: bytes8 = (if v_2402 then catch-fail(crop_into_bytes8((if v_2404 then hmac(@8_backend_h,k_245,x_755) else fail-any))) else caught-fail) in
                                {10727}let v_2405: bool = not-caught-fail(sr8_28) in
                                {10728}if (B32(sr24'_16,sr8'_16) = (if v_2402 then (if v_2405 then B32(sr24'_16,sr8_28) else fail-any) else fail-any)) then
                                {10729}let (x_756: bitstring,g_67: group) = i_kex_data'_16 in
                                {10730}let (psk_offer_58: preSharedKey,id_offer_58: identityPsk,es_offer_58: bitstring,is_safe_offer_58: bool) = psk_data'_50 in
                                {10731}event Client_PSKOffer(id_client_5,psk_offer_58,id_offer_58,is_safe_offer_58);
                                {10732}event Client_Rand_client(id_client_5,i_cr'_16);
                                {10733}event Client_DH_client(id_client_5,dh_pub(g_67,x_756));
                                {10734}event Client_server_domain(id_client_5,backend_dom_1);
                                {10735}let SH(sr_69: bytes32,mode_67: params) = server_hello'_45 in
                                {10736}event Client_Rand_server(id_client_5,sr_69);
                                {10737}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_67,gy_59: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_122: preSharedKeyExt) = mode_67 in
                                (
                                    {10738}let cur_log2_123: bitstring = (cur_log_IN1_HRR_IN2_16,server_hello'_45) in
                                    {10739}event Client_DH_server(id_client_5,gy_59);
                                    {10740}let v_2406: bool = (psk_ext_122 = empty_psk_ext) in
                                    {10741}let psk_270: preSharedKey = (if v_2406 then NoPsk else caught-fail) in
                                    {10742}let s_247: bitstring = (if v_2406 then zero else caught-fail) in
                                    {10743}let k_246: bitstring = (if v_2406 then catch-fail(psk2b(psk_270)) else caught-fail) in
                                    {10744}let v_2407: bool = not-caught-fail(k_246) in
                                    {10745}let early_secret_181: bitstring = (if v_2406 then catch-fail((if v_2407 then hmac(@8_backend_h,s_247,k_246) else fail-any)) else caught-fail) in
                                    {10746}let v_2408: bool = not-caught-fail(early_secret_181) in
                                    {10747}let l_667: label = (if v_2408 then tls13_ext_res_binder else caught-fail) in
                                    {10748}let m_239: bitstring = (if v_2408 then zero else caught-fail) in
                                    {10749}let h_637: bitstring = (if v_2408 then catch-fail(hash(@8_backend_h,m_239)) else caught-fail) in
                                    {10750}let v_2409: bool = not-caught-fail(h_637) in
                                    {10751}let x_757: bitstring = (if v_2409 then (l_667,h_637) else caught-fail) in
                                    {10752}let binder_key_121: bitstring = (if v_2408 then catch-fail((if v_2409 then hmac(@8_backend_h,early_secret_181,x_757) else fail-any)) else caught-fail) in
                                    {10753}let v_2410: bool = not-caught-fail(binder_key_121) in
                                    {10754}let v_2411: bitstring = (if v_2406 then catch-fail((if v_2408 then (if v_2410 then (early_secret_181,binder_key_121) else fail-any) else fail-any)) else caught-fail) in
                                    {10755}let v_2412: bool = (not-caught-fail(v_2411) && success?(1-proj-2-tuple(v_2411))) in
                                    {10756}let kb_121: mac_key = (if v_2412 then 2-proj-2-tuple(v_2411) else caught-fail) in
                                    {10757}let es_182: bitstring = (if v_2412 then 1-proj-2-tuple(v_2411) else caught-fail) in
                                    {10758}let v_2413: bitstring = (if not(v_2406) then catch-fail(psk_data'_50) else caught-fail) in
                                    {10759}let v_2414: bool = (not-caught-fail(v_2413) && success?(1-proj-4-tuple(v_2413))) in
                                    {10760}let is_safe_109: bool = (if v_2414 then 4-proj-4-tuple(v_2413) else caught-fail) in
                                    {10761}let es_183: bitstring = (if v_2414 then 3-proj-4-tuple(v_2413) else caught-fail) in
                                    {10762}let id_124: identityPsk = (if v_2414 then 2-proj-4-tuple(v_2413) else caught-fail) in
                                    {10763}let psk_271: preSharedKey = (if v_2414 then 1-proj-4-tuple(v_2413) else caught-fail) in
                                    {10764}let (psk_272: preSharedKey,early_secret_182: bitstring,valid_58: bool,safe_psk_64: bool) = (if v_2406 then (if v_2412 then (NoPsk,es_182,true,false) else fail-any) else (if v_2414 then (psk_271,es_183,((psk_271 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_122)),is_safe_109) else fail-any)) in
                                    {10765}event Client_PSKChoosen(id_client_5,psk_272,safe_psk_64);
                                    {10766}if valid_58 then
                                    (
                                        {10767}let gxy_118: element = catch-fail(dh_decap_fun(g_67,gy_59,x_756)) in
                                        {10768}let v_2415: bool = not-caught-fail(gxy_118) in
                                        {10769}new s_248[]: seed;
                                        {10770}let gxy_119: element = (if v_2415 then gxy_118 else dh_f(s_248)) in
                                        {10771}event Client_DH_gxy(id_client_5,gxy_119);
                                        {10772}let l_668: label = tls13_derived in
                                        {10773}let m_240: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {10774}let v_2416: bool = not-caught-fail(m_240) in
                                        {10775}let h_638: bitstring = (if v_2416 then catch-fail(hash(@8_backend_h,m_240)) else caught-fail) in
                                        {10776}let v_2417: bool = not-caught-fail(h_638) in
                                        {10777}let x_758: bitstring = (if v_2417 then (l_668,h_638) else caught-fail) in
                                        {10778}let extra_127: bitstring = catch-fail((if v_2416 then (if v_2417 then hmac(@8_backend_h,early_secret_182,x_758) else fail-any) else fail-any)) in
                                        {10779}let v_2418: bool = not-caught-fail(extra_127) in
                                        {10780}let handshake_secret_59: bitstring = (if v_2418 then hmac(@8_backend_h,extra_127,gxy_119) else fail-any) in
                                        {10781}let l_669: label = tls13_derived in
                                        {10782}let m_241: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {10783}let v_2419: bool = not-caught-fail(m_241) in
                                        {10784}let h_639: bitstring = (if v_2419 then catch-fail(hash(@8_backend_h,m_241)) else caught-fail) in
                                        {10785}let v_2420: bool = not-caught-fail(h_639) in
                                        {10786}let x_759: bitstring = (if v_2420 then (l_669,h_639) else caught-fail) in
                                        {10787}let extra_128: bitstring = catch-fail((if v_2419 then (if v_2420 then hmac(@8_backend_h,handshake_secret_59,x_759) else fail-any) else fail-any)) in
                                        {10788}let v_2421: bool = not-caught-fail(extra_128) in
                                        {10789}let k_247: bitstring = (if v_2421 then zero else caught-fail) in
                                        {10790}let master_secret_125: bitstring = (if v_2421 then catch-fail(hmac(@8_backend_h,handshake_secret_59,k_247)) else caught-fail) in
                                        {10791}let v_2422: bool = not-caught-fail(master_secret_125) in
                                        {10792}let l_670: label = (if v_2422 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {10793}let h_640: bitstring = (if v_2422 then catch-fail(hash(@8_backend_h,cur_log2_123)) else caught-fail) in
                                        {10794}let v_2423: bool = not-caught-fail(h_640) in
                                        {10795}let x_760: bitstring = (if v_2423 then (l_670,h_640) else caught-fail) in
                                        {10796}let client_hts_59: bitstring = (if v_2422 then catch-fail((if v_2423 then hmac(@8_backend_h,handshake_secret_59,x_760) else fail-any)) else caught-fail) in
                                        {10797}let v_2424: bool = not-caught-fail(client_hts_59) in
                                        {10798}let l_671: label = (if v_2424 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {10799}let h_641: bitstring = (if v_2424 then catch-fail(hash(@8_backend_h,cur_log2_123)) else caught-fail) in
                                        {10800}let v_2425: bool = not-caught-fail(h_641) in
                                        {10801}let x_761: bitstring = (if v_2425 then (l_671,h_641) else caught-fail) in
                                        {10802}let server_hts_59: bitstring = (if v_2424 then catch-fail((if v_2425 then hmac(@8_backend_h,handshake_secret_59,x_761) else fail-any)) else caught-fail) in
                                        {10803}let v_2426: bool = not-caught-fail(server_hts_59) in
                                        {10804}let l_672: label = (if v_2426 then tls13_key else caught-fail) in
                                        {10805}let h_642: bitstring = (if v_2426 then zero else caught-fail) in
                                        {10806}let x_762: bitstring = (if v_2426 then (l_672,h_642) else caught-fail) in
                                        {10807}let client_wkh_59: bitstring = (if v_2426 then catch-fail(hmac(@8_backend_h,client_hts_59,x_762)) else caught-fail) in
                                        {10808}let v_2427: bool = not-caught-fail(client_wkh_59) in
                                        {10809}let l_673: label = (if v_2427 then tls13_key else caught-fail) in
                                        {10810}let h_643: bitstring = (if v_2427 then zero else caught-fail) in
                                        {10811}let x_763: bitstring = (if v_2427 then (l_673,h_643) else caught-fail) in
                                        {10812}let server_wkh_59: bitstring = (if v_2427 then catch-fail(hmac(@8_backend_h,server_hts_59,x_763)) else caught-fail) in
                                        {10813}let v_2428: bool = not-caught-fail(server_wkh_59) in
                                        {10814}let l_674: label = (if v_2428 then tls13_finished else caught-fail) in
                                        {10815}let h_644: bitstring = (if v_2428 then zero else caught-fail) in
                                        {10816}let x_764: bitstring = (if v_2428 then (l_674,h_644) else caught-fail) in
                                        {10817}let client_fk_59: bitstring = (if v_2428 then catch-fail(hmac(@8_backend_h,client_hts_59,x_764)) else caught-fail) in
                                        {10818}let v_2429: bool = not-caught-fail(client_fk_59) in
                                        {10819}let l_675: label = (if v_2429 then tls13_finished else caught-fail) in
                                        {10820}let h_645: bitstring = (if v_2429 then zero else caught-fail) in
                                        {10821}let x_765: bitstring = (if v_2429 then (l_675,h_645) else caught-fail) in
                                        {10822}let server_fk_59: bitstring = (if v_2429 then catch-fail(hmac(@8_backend_h,server_hts_59,x_765)) else caught-fail) in
                                        {10823}let v_2430: bool = not-caught-fail(server_fk_59) in
                                        {10824}let (master_secret_126: bitstring,chk_66: aead_key,shk_65: aead_key,cfin_66: mac_key,sfin_65: mac_key) = (if v_2421 then (if v_2422 then (if v_2424 then (if v_2426 then (if v_2427 then (if v_2428 then (if v_2429 then (if v_2430 then (master_secret_125,client_wkh_59,server_wkh_59,client_fk_59,server_fk_59) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {10825}event Client_chk(id_client_5,chk_66);
                                        {10826}event Client_shk(id_client_5,shk_65);
                                        {10827}event Client_cfin(id_client_5,cfin_66);
                                        {10828}event Client_sfin(id_client_5,sfin_65);
                                        {10829}in(io, enc_ee_msg_58: bitstring);
                                        {10830}let ee_msg_63: msg = aead_dec(@8_backend_a,shk_65,0,zero,enc_ee_msg_58) in
                                        {10831}let EE(ech_ee_58: echExt,extra_ee_58: extraExt) = ee_msg_63 in
                                        {10832}let cur_log2_124: bitstring = (cur_log2_123,ee_msg_63) in
                                        {10833}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_16,sr_69,@8_backend_h,@8_backend_a,c_dom_7,backend_dom_1,psk_272,safe_psk_64,@8_comp_psk,master_secret_126,chk_66,0,shk_65,1,cfin_66,sfin_65,cur_log2_124)))
                                    )
                                    else
                                        {10834}out(io, illegal_parameter)
                                )
                                else
                                    {10835}out(io, illegal_parameter)
                        )
                        else
                            {10837}let psk_273: preSharedKey = NoPsk in
                            {10838}let s_249: bitstring = zero in
                            {10839}let k_248: bitstring = catch-fail(psk2b(psk_273)) in
                            {10840}let v_2431: bool = not-caught-fail(k_248) in
                            {10841}let early_secret_183: bitstring = catch-fail((if v_2431 then hmac(@8_backend_h,s_249,k_248) else fail-any)) in
                            {10842}let v_2432: bool = not-caught-fail(early_secret_183) in
                            {10843}let l_676: label = (if v_2432 then tls13_ext_res_binder else caught-fail) in
                            {10844}let m_242: bitstring = (if v_2432 then zero else caught-fail) in
                            {10845}let h_646: bitstring = (if v_2432 then catch-fail(hash(@8_backend_h,m_242)) else caught-fail) in
                            {10846}let v_2433: bool = not-caught-fail(h_646) in
                            {10847}let x_766: bitstring = (if v_2433 then (l_676,h_646) else caught-fail) in
                            {10848}let binder_key_122: bitstring = (if v_2432 then catch-fail((if v_2433 then hmac(@8_backend_h,early_secret_183,x_766) else fail-any)) else caught-fail) in
                            {10849}let v_2434: bool = not-caught-fail(binder_key_122) in
                            {10850}let v_2435: bitstring = catch-fail((if v_2432 then (if v_2434 then (early_secret_183,binder_key_122) else fail-any) else fail-any)) in
                            {10851}let v_2436: bool = (not-caught-fail(v_2435) && success?(1-proj-2-tuple(v_2435))) in
                            {10852}let kb_122: mac_key = (if v_2436 then 2-proj-2-tuple(v_2435) else caught-fail) in
                            {10853}let es_184: bitstring = (if v_2436 then 1-proj-2-tuple(v_2435) else caught-fail) in
                            {10854}let v_2437: bitstring = catch-fail((if v_2436 then (empty_psk_ext,(NoPsk,zero,es_184,false)) else fail-any)) in
                            {10855}let v_2438: bool = (not-caught-fail(v_2437) && success?(1-proj-2-tuple(v_2437))) in
                            {10856}let psk_data_64: bitstring = (if v_2438 then 2-proj-2-tuple(v_2437) else caught-fail) in
                            {10857}let psk_ext_123: preSharedKeyExt = (if v_2438 then 1-proj-2-tuple(v_2437) else caught-fail) in
                            {10858}let i_offer_23: params = (if v_2438 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_8,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_123) else caught-fail) in
                            {10859}let i_client_hello_30: msg = (if v_2438 then CH(i_cr_14,i_offer_23) else caught-fail) in
                            {10860}new fake_id_28[]: identityPsk;
                            {10861}new fake_binder_28[]: bitstring;
                            {10862}let o_psk_ext_29: preSharedKeyExt = (if v_2438 then (if @8_use_psk then client_psk_ext(fake_id_28,fake_binder_28) else empty_psk_ext) else caught-fail) in
                            {10863}let o_ech_ext_ADD_23: echExt = (if v_2438 then ECHClientHelloOuter(ech_h_18,ech_a_18,config_id_18,zero,zero) else caught-fail) in
                            {10864}let o_offer_ADD_23: params = (if v_2438 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_12,SNI(o_dom_14),o_ech_ext_ADD_23,empty_extra_ext,o_psk_ext_29) else caught-fail) in
                            {10865}let o_client_hello_ADD_23: msg = (if v_2438 then CH(o_cr_18,o_offer_ADD_23) else caught-fail) in
                            {10866}let n_25: nat = (if v_2438 then 2 else caught-fail) in
                            {10867}let v_2439: hpkeContext = (if v_2438 then catch-fail(context_2) else caught-fail) in
                            {10868}let v_2440: bool = (not-caught-fail(v_2439) && ((S =nf 1-proj-hpke_context(v_2439)) && success?(1-proj-hpke_context(v_2439)))) in
                            {10869}let base_nonce_28: bitstring = (if v_2440 then 3-proj-hpke_context(v_2439) else caught-fail) in
                            {10870}let key_28: aead_key = (if v_2440 then 2-proj-hpke_context(v_2439) else caught-fail) in
                            {10871}let payload_29: bitstring = (if v_2438 then catch-fail((if v_2440 then aead_enc(ech_a_18,key_28,(base_nonce_28,n_25),o_client_hello_ADD_23,i_client_hello_30) else fail-any)) else caught-fail) in
                            {10872}let v_2441: bool = not-caught-fail(payload_29) in
                            {10873}let o_ech_ext_29: echExt = (if v_2441 then ECHClientHelloOuter(ech_h_18,ech_a_18,config_id_18,zero,payload_29) else caught-fail) in
                            {10874}let o_offer_49: params = (if v_2441 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_12,SNI(o_dom_14),o_ech_ext_29,empty_extra_ext,o_psk_ext_29) else caught-fail) in
                            {10875}let (o_client_hello'_17: msg,i_client_hello'_18: msg,i_cr'_17: bytes32,i_kex_data'_17: bitstring,psk_data'_51: bitstring) = (if v_2438 then (if v_2441 then (CH(o_cr_18,o_offer_49),i_client_hello_30,i_cr_14,i_kex_data_13,psk_data_64) else fail-any) else fail-any) in
                            {10876}out(io, o_client_hello'_17);
                            {10877}in(io, server_hello'_46: msg);
                            {10878}let SH(B32(sr24'_17: bytes24,sr8'_17: bytes8),params'_17: params) = server_hello'_46 in
                            {10879}let cur_log_IN1_HRR_IN2_17: bitstring = (cur_log_IN1_HRR_5,i_client_hello'_18) in
                            {10880}let sh_modified_23: msg = SH(B32(sr24'_17,zero8),params'_17) in
                            {10881}let cur_log_sh_23: bitstring = (cur_log_IN1_HRR_IN2_17,sh_modified_23) in
                            {10882}let transcript_ech_conf_23: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_23)) in
                            {10883}let v_2442: bool = not-caught-fail(transcript_ech_conf_23) in
                            {10884}let s_250: bitstring = (if v_2442 then zero else caught-fail) in
                            {10885}let k_249: bitstring = (if v_2442 then catch-fail(b32_2_b(get_random(i_client_hello'_18))) else caught-fail) in
                            {10886}let v_2443: bool = not-caught-fail(k_249) in
                            {10887}let k_250: bitstring = (if v_2442 then catch-fail((if v_2443 then hmac(@8_backend_h,s_250,k_249) else fail-any)) else caught-fail) in
                            {10888}let v_2444: bool = not-caught-fail(k_250) in
                            {10889}let l_677: label = (if v_2444 then ech_accept_confirmation else caught-fail) in
                            {10890}let x_767: bitstring = (if v_2444 then (l_677,cur_log_sh_23) else caught-fail) in
                            {10891}let sr8_29: bytes8 = (if v_2442 then catch-fail(crop_into_bytes8((if v_2444 then hmac(@8_backend_h,k_250,x_767) else fail-any))) else caught-fail) in
                            {10892}let v_2445: bool = not-caught-fail(sr8_29) in
                            {10893}if (B32(sr24'_17,sr8'_17) = (if v_2442 then (if v_2445 then B32(sr24'_17,sr8_29) else fail-any) else fail-any)) then
                            {10894}let (x_768: bitstring,g_68: group) = i_kex_data'_17 in
                            {10895}let (psk_offer_59: preSharedKey,id_offer_59: identityPsk,es_offer_59: bitstring,is_safe_offer_59: bool) = psk_data'_51 in
                            {10896}event Client_PSKOffer(id_client_5,psk_offer_59,id_offer_59,is_safe_offer_59);
                            {10897}event Client_Rand_client(id_client_5,i_cr'_17);
                            {10898}event Client_DH_client(id_client_5,dh_pub(g_68,x_768));
                            {10899}event Client_server_domain(id_client_5,backend_dom_1);
                            {10900}let SH(sr_70: bytes32,mode_68: params) = server_hello'_46 in
                            {10901}event Client_Rand_server(id_client_5,sr_70);
                            {10902}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_68,gy_60: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_124: preSharedKeyExt) = mode_68 in
                            (
                                {10903}let cur_log2_125: bitstring = (cur_log_IN1_HRR_IN2_17,server_hello'_46) in
                                {10904}event Client_DH_server(id_client_5,gy_60);
                                {10905}let v_2446: bool = (psk_ext_124 = empty_psk_ext) in
                                {10906}let psk_274: preSharedKey = (if v_2446 then NoPsk else caught-fail) in
                                {10907}let s_251: bitstring = (if v_2446 then zero else caught-fail) in
                                {10908}let k_251: bitstring = (if v_2446 then catch-fail(psk2b(psk_274)) else caught-fail) in
                                {10909}let v_2447: bool = not-caught-fail(k_251) in
                                {10910}let early_secret_184: bitstring = (if v_2446 then catch-fail((if v_2447 then hmac(@8_backend_h,s_251,k_251) else fail-any)) else caught-fail) in
                                {10911}let v_2448: bool = not-caught-fail(early_secret_184) in
                                {10912}let l_678: label = (if v_2448 then tls13_ext_res_binder else caught-fail) in
                                {10913}let m_243: bitstring = (if v_2448 then zero else caught-fail) in
                                {10914}let h_647: bitstring = (if v_2448 then catch-fail(hash(@8_backend_h,m_243)) else caught-fail) in
                                {10915}let v_2449: bool = not-caught-fail(h_647) in
                                {10916}let x_769: bitstring = (if v_2449 then (l_678,h_647) else caught-fail) in
                                {10917}let binder_key_123: bitstring = (if v_2448 then catch-fail((if v_2449 then hmac(@8_backend_h,early_secret_184,x_769) else fail-any)) else caught-fail) in
                                {10918}let v_2450: bool = not-caught-fail(binder_key_123) in
                                {10919}let v_2451: bitstring = (if v_2446 then catch-fail((if v_2448 then (if v_2450 then (early_secret_184,binder_key_123) else fail-any) else fail-any)) else caught-fail) in
                                {10920}let v_2452: bool = (not-caught-fail(v_2451) && success?(1-proj-2-tuple(v_2451))) in
                                {10921}let kb_123: mac_key = (if v_2452 then 2-proj-2-tuple(v_2451) else caught-fail) in
                                {10922}let es_185: bitstring = (if v_2452 then 1-proj-2-tuple(v_2451) else caught-fail) in
                                {10923}let v_2453: bitstring = (if not(v_2446) then catch-fail(psk_data'_51) else caught-fail) in
                                {10924}let v_2454: bool = (not-caught-fail(v_2453) && success?(1-proj-4-tuple(v_2453))) in
                                {10925}let is_safe_110: bool = (if v_2454 then 4-proj-4-tuple(v_2453) else caught-fail) in
                                {10926}let es_186: bitstring = (if v_2454 then 3-proj-4-tuple(v_2453) else caught-fail) in
                                {10927}let id_125: identityPsk = (if v_2454 then 2-proj-4-tuple(v_2453) else caught-fail) in
                                {10928}let psk_275: preSharedKey = (if v_2454 then 1-proj-4-tuple(v_2453) else caught-fail) in
                                {10929}let (psk_276: preSharedKey,early_secret_185: bitstring,valid_59: bool,safe_psk_65: bool) = (if v_2446 then (if v_2452 then (NoPsk,es_185,true,false) else fail-any) else (if v_2454 then (psk_275,es_186,((psk_275 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_124)),is_safe_110) else fail-any)) in
                                {10930}event Client_PSKChoosen(id_client_5,psk_276,safe_psk_65);
                                {10931}if valid_59 then
                                (
                                    {10932}let gxy_120: element = catch-fail(dh_decap_fun(g_68,gy_60,x_768)) in
                                    {10933}let v_2455: bool = not-caught-fail(gxy_120) in
                                    {10934}new s_252[]: seed;
                                    {10935}let gxy_121: element = (if v_2455 then gxy_120 else dh_f(s_252)) in
                                    {10936}event Client_DH_gxy(id_client_5,gxy_121);
                                    {10937}let l_679: label = tls13_derived in
                                    {10938}let m_244: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                    {10939}let v_2456: bool = not-caught-fail(m_244) in
                                    {10940}let h_648: bitstring = (if v_2456 then catch-fail(hash(@8_backend_h,m_244)) else caught-fail) in
                                    {10941}let v_2457: bool = not-caught-fail(h_648) in
                                    {10942}let x_770: bitstring = (if v_2457 then (l_679,h_648) else caught-fail) in
                                    {10943}let extra_129: bitstring = catch-fail((if v_2456 then (if v_2457 then hmac(@8_backend_h,early_secret_185,x_770) else fail-any) else fail-any)) in
                                    {10944}let v_2458: bool = not-caught-fail(extra_129) in
                                    {10945}let handshake_secret_60: bitstring = (if v_2458 then hmac(@8_backend_h,extra_129,gxy_121) else fail-any) in
                                    {10946}let l_680: label = tls13_derived in
                                    {10947}let m_245: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                    {10948}let v_2459: bool = not-caught-fail(m_245) in
                                    {10949}let h_649: bitstring = (if v_2459 then catch-fail(hash(@8_backend_h,m_245)) else caught-fail) in
                                    {10950}let v_2460: bool = not-caught-fail(h_649) in
                                    {10951}let x_771: bitstring = (if v_2460 then (l_680,h_649) else caught-fail) in
                                    {10952}let extra_130: bitstring = catch-fail((if v_2459 then (if v_2460 then hmac(@8_backend_h,handshake_secret_60,x_771) else fail-any) else fail-any)) in
                                    {10953}let v_2461: bool = not-caught-fail(extra_130) in
                                    {10954}let k_252: bitstring = (if v_2461 then zero else caught-fail) in
                                    {10955}let master_secret_127: bitstring = (if v_2461 then catch-fail(hmac(@8_backend_h,handshake_secret_60,k_252)) else caught-fail) in
                                    {10956}let v_2462: bool = not-caught-fail(master_secret_127) in
                                    {10957}let l_681: label = (if v_2462 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {10958}let h_650: bitstring = (if v_2462 then catch-fail(hash(@8_backend_h,cur_log2_125)) else caught-fail) in
                                    {10959}let v_2463: bool = not-caught-fail(h_650) in
                                    {10960}let x_772: bitstring = (if v_2463 then (l_681,h_650) else caught-fail) in
                                    {10961}let client_hts_60: bitstring = (if v_2462 then catch-fail((if v_2463 then hmac(@8_backend_h,handshake_secret_60,x_772) else fail-any)) else caught-fail) in
                                    {10962}let v_2464: bool = not-caught-fail(client_hts_60) in
                                    {10963}let l_682: label = (if v_2464 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {10964}let h_651: bitstring = (if v_2464 then catch-fail(hash(@8_backend_h,cur_log2_125)) else caught-fail) in
                                    {10965}let v_2465: bool = not-caught-fail(h_651) in
                                    {10966}let x_773: bitstring = (if v_2465 then (l_682,h_651) else caught-fail) in
                                    {10967}let server_hts_60: bitstring = (if v_2464 then catch-fail((if v_2465 then hmac(@8_backend_h,handshake_secret_60,x_773) else fail-any)) else caught-fail) in
                                    {10968}let v_2466: bool = not-caught-fail(server_hts_60) in
                                    {10969}let l_683: label = (if v_2466 then tls13_key else caught-fail) in
                                    {10970}let h_652: bitstring = (if v_2466 then zero else caught-fail) in
                                    {10971}let x_774: bitstring = (if v_2466 then (l_683,h_652) else caught-fail) in
                                    {10972}let client_wkh_60: bitstring = (if v_2466 then catch-fail(hmac(@8_backend_h,client_hts_60,x_774)) else caught-fail) in
                                    {10973}let v_2467: bool = not-caught-fail(client_wkh_60) in
                                    {10974}let l_684: label = (if v_2467 then tls13_key else caught-fail) in
                                    {10975}let h_653: bitstring = (if v_2467 then zero else caught-fail) in
                                    {10976}let x_775: bitstring = (if v_2467 then (l_684,h_653) else caught-fail) in
                                    {10977}let server_wkh_60: bitstring = (if v_2467 then catch-fail(hmac(@8_backend_h,server_hts_60,x_775)) else caught-fail) in
                                    {10978}let v_2468: bool = not-caught-fail(server_wkh_60) in
                                    {10979}let l_685: label = (if v_2468 then tls13_finished else caught-fail) in
                                    {10980}let h_654: bitstring = (if v_2468 then zero else caught-fail) in
                                    {10981}let x_776: bitstring = (if v_2468 then (l_685,h_654) else caught-fail) in
                                    {10982}let client_fk_60: bitstring = (if v_2468 then catch-fail(hmac(@8_backend_h,client_hts_60,x_776)) else caught-fail) in
                                    {10983}let v_2469: bool = not-caught-fail(client_fk_60) in
                                    {10984}let l_686: label = (if v_2469 then tls13_finished else caught-fail) in
                                    {10985}let h_655: bitstring = (if v_2469 then zero else caught-fail) in
                                    {10986}let x_777: bitstring = (if v_2469 then (l_686,h_655) else caught-fail) in
                                    {10987}let server_fk_60: bitstring = (if v_2469 then catch-fail(hmac(@8_backend_h,server_hts_60,x_777)) else caught-fail) in
                                    {10988}let v_2470: bool = not-caught-fail(server_fk_60) in
                                    {10989}let (master_secret_128: bitstring,chk_67: aead_key,shk_66: aead_key,cfin_67: mac_key,sfin_66: mac_key) = (if v_2461 then (if v_2462 then (if v_2464 then (if v_2466 then (if v_2467 then (if v_2468 then (if v_2469 then (if v_2470 then (master_secret_127,client_wkh_60,server_wkh_60,client_fk_60,server_fk_60) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {10990}event Client_chk(id_client_5,chk_67);
                                    {10991}event Client_shk(id_client_5,shk_66);
                                    {10992}event Client_cfin(id_client_5,cfin_67);
                                    {10993}event Client_sfin(id_client_5,sfin_66);
                                    {10994}in(io, enc_ee_msg_59: bitstring);
                                    {10995}let ee_msg_64: msg = aead_dec(@8_backend_a,shk_66,0,zero,enc_ee_msg_59) in
                                    {10996}let EE(ech_ee_59: echExt,extra_ee_59: extraExt) = ee_msg_64 in
                                    {10997}let cur_log2_126: bitstring = (cur_log2_125,ee_msg_64) in
                                    {10998}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_17,sr_70,@8_backend_h,@8_backend_a,c_dom_7,backend_dom_1,psk_276,safe_psk_65,@8_comp_psk,master_secret_128,chk_67,0,shk_66,1,cfin_67,sfin_66,cur_log2_126)))
                                )
                                else
                                    {10999}out(io, illegal_parameter)
                            )
                            else
                                {11000}out(io, illegal_parameter)
                    )
                    else
                        {11001}let cur_log_OU1_HRR_5: bitstring = ((zero,o_client_hello_7),server_hello_9) in
                        {11002}let ech_config(config_id_19: configId,ech_g_19: group,pkR_21: element,o_dom_15: domain,ech_h_19: hash_alg,ech_a_19: aead_alg) = ech_conf_2 in
                        {11003}new rand24_26[]: bytes24;
                        {11004}new rand8_26[]: bytes8;
                        {11005}let o_cr_19: bytes32 = B32(rand24_26,rand8_26) in
                        {11006}let send_key_share_17: bool = true in
                        {11007}new s_253[]: seed;
                        {11008}let gx_59: element = dh_pub(@8_tls_g,dh_k(s_253)) in
                        {11009}let v_2471: bitstring = (dh_k(s_253),gx_59) in
                        {11010}let v_2472: bool = success?(1-proj-2-tuple(v_2471)) in
                        {11011}let gx_60: element = (if v_2472 then 2-proj-2-tuple(v_2471) else caught-fail) in
                        {11012}let x_778: bitstring = (if v_2472 then 1-proj-2-tuple(v_2471) else caught-fail) in
                        {11013}let kex_25: kex_alg = (if v_2472 then (if send_key_share_17 then DHE_kex(@8_tls_g,gx_60) else DHE_group(@8_tls_g)) else caught-fail) in
                        {11014}let (o_kex_ext_13: keyShareExt,kex_data_12: bitstring) = (if v_2472 then (client_kex_ext(kex_25),(x_778,@8_tls_g)) else fail-any) in
                        {11015}if @8_use_grease then
                        (
                            {11016}let extra_131: extraExt = empty_extra_ext in
                            {11017}if @8_use_psk then
                            (
                                {11018}let (psk_277: preSharedKey,id_126: identityPsk,old_es_17: bitstring,is_safe_111: bool) = psk_data_61 in
                                (
                                    {11019}let offer_48: params = nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_13,SNI(o_dom_15),o_ech_ext_26,extra_131,trunc_client_psk_ext(id_126)) in
                                    {11020}let cur_log'_36: bitstring = (cur_log_OU1_HRR_5,CH(o_cr_19,offer_48)) in
                                    {11021}let s_254: bitstring = zero in
                                    {11022}let k_253: bitstring = catch-fail(psk2b(psk_277)) in
                                    {11023}let v_2473: bool = not-caught-fail(k_253) in
                                    {11024}let early_secret_186: bitstring = catch-fail((if v_2473 then hmac(@8_tls_h,s_254,k_253) else fail-any)) in
                                    {11025}let v_2474: bool = not-caught-fail(early_secret_186) in
                                    {11026}let l_687: label = (if v_2474 then tls13_ext_res_binder else caught-fail) in
                                    {11027}let m_246: bitstring = (if v_2474 then zero else caught-fail) in
                                    {11028}let h_656: bitstring = (if v_2474 then catch-fail(hash(@8_tls_h,m_246)) else caught-fail) in
                                    {11029}let v_2475: bool = not-caught-fail(h_656) in
                                    {11030}let x_779: bitstring = (if v_2475 then (l_687,h_656) else caught-fail) in
                                    {11031}let binder_key_124: bitstring = (if v_2474 then catch-fail((if v_2475 then hmac(@8_tls_h,early_secret_186,x_779) else fail-any)) else caught-fail) in
                                    {11032}let v_2476: bool = not-caught-fail(binder_key_124) in
                                    {11033}let v_2477: bitstring = catch-fail((if v_2474 then (if v_2476 then (early_secret_186,binder_key_124) else fail-any) else fail-any)) in
                                    {11034}let v_2478: bool = (not-caught-fail(v_2477) && success?(1-proj-2-tuple(v_2477))) in
                                    {11035}let kb_124: mac_key = (if v_2478 then 2-proj-2-tuple(v_2477) else caught-fail) in
                                    {11036}let es_187: bitstring = (if v_2478 then 1-proj-2-tuple(v_2477) else caught-fail) in
                                    {11037}let binders_35: bitstring = (if v_2478 then catch-fail(hmac(@8_tls_h,kb_124,cur_log'_36)) else caught-fail) in
                                    {11038}let v_2479: bool = not-caught-fail(binders_35) in
                                    {11039}let v_2480: bitstring = catch-fail((if v_2478 then (if v_2479 then (client_psk_ext(id_126,binders_35),(psk_277,id_126,es_187,is_safe_111)) else fail-any) else fail-any)) in
                                    {11040}let v_2481: bool = (not-caught-fail(v_2480) && success?(1-proj-2-tuple(v_2480))) in
                                    {11041}let psk_data_65: bitstring = (if v_2481 then 2-proj-2-tuple(v_2480) else caught-fail) in
                                    {11042}let psk_ext_125: preSharedKeyExt = (if v_2481 then 1-proj-2-tuple(v_2480) else caught-fail) in
                                    {11043}let o_offer_50: params = (if v_2481 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_13,SNI(o_dom_15),o_ech_ext_26,empty_extra_ext,psk_ext_125) else caught-fail) in
                                    {11044}let (client_hello'_32: msg,cr'_34: bytes32,kex_data'_29: bitstring,psk_data'_52: bitstring) = (if v_2481 then (CH(o_cr_19,o_offer_50),o_cr_19,kex_data_12,psk_data_65) else fail-any) in
                                    {11045}out(io, client_hello'_32);
                                    {11046}let cur_log_OU1_HRR_OU2_20: bitstring = (cur_log_OU1_HRR_5,client_hello'_32) in
                                    {11047}in(io, server_hello'_47: msg);
                                    {11048}let SH(sr'_29: bytes32,mode'_29: params) = server_hello'_47 in
                                    (
                                        {11049}if (sr'_29 = B32(HRR24,HRR8)) then
                                            {11050}out(io, unexpected_message)
                                        else
                                            {11051}let (x_780: bitstring,g_69: group) = kex_data'_29 in
                                            {11052}let (psk_offer_60: preSharedKey,id_offer_60: identityPsk,es_offer_60: bitstring,is_safe_offer_60: bool) = psk_data'_52 in
                                            {11053}event Client_PSKOffer(id_client_5,psk_offer_60,id_offer_60,is_safe_offer_60);
                                            {11054}event Client_Rand_client(id_client_5,cr'_34);
                                            {11055}event Client_DH_client(id_client_5,dh_pub(g_69,x_780));
                                            {11056}event Client_server_domain(id_client_5,o_dom_8);
                                            {11057}let SH(sr_71: bytes32,mode_69: params) = server_hello'_47 in
                                            {11058}event Client_Rand_server(id_client_5,sr_71);
                                            {11059}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_69,gy_61: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_126: preSharedKeyExt) = mode_69 in
                                            (
                                                {11060}let cur_log2_127: bitstring = (cur_log_OU1_HRR_OU2_20,server_hello'_47) in
                                                {11061}event Client_DH_server(id_client_5,gy_61);
                                                {11062}let v_2482: bool = (psk_ext_126 = empty_psk_ext) in
                                                {11063}let psk_278: preSharedKey = (if v_2482 then NoPsk else caught-fail) in
                                                {11064}let s_255: bitstring = (if v_2482 then zero else caught-fail) in
                                                {11065}let k_254: bitstring = (if v_2482 then catch-fail(psk2b(psk_278)) else caught-fail) in
                                                {11066}let v_2483: bool = not-caught-fail(k_254) in
                                                {11067}let early_secret_187: bitstring = (if v_2482 then catch-fail((if v_2483 then hmac(@8_tls_h,s_255,k_254) else fail-any)) else caught-fail) in
                                                {11068}let v_2484: bool = not-caught-fail(early_secret_187) in
                                                {11069}let l_688: label = (if v_2484 then tls13_ext_res_binder else caught-fail) in
                                                {11070}let m_247: bitstring = (if v_2484 then zero else caught-fail) in
                                                {11071}let h_657: bitstring = (if v_2484 then catch-fail(hash(@8_tls_h,m_247)) else caught-fail) in
                                                {11072}let v_2485: bool = not-caught-fail(h_657) in
                                                {11073}let x_781: bitstring = (if v_2485 then (l_688,h_657) else caught-fail) in
                                                {11074}let binder_key_125: bitstring = (if v_2484 then catch-fail((if v_2485 then hmac(@8_tls_h,early_secret_187,x_781) else fail-any)) else caught-fail) in
                                                {11075}let v_2486: bool = not-caught-fail(binder_key_125) in
                                                {11076}let v_2487: bitstring = (if v_2482 then catch-fail((if v_2484 then (if v_2486 then (early_secret_187,binder_key_125) else fail-any) else fail-any)) else caught-fail) in
                                                {11077}let v_2488: bool = (not-caught-fail(v_2487) && success?(1-proj-2-tuple(v_2487))) in
                                                {11078}let kb_125: mac_key = (if v_2488 then 2-proj-2-tuple(v_2487) else caught-fail) in
                                                {11079}let es_188: bitstring = (if v_2488 then 1-proj-2-tuple(v_2487) else caught-fail) in
                                                {11080}let v_2489: bitstring = (if not(v_2482) then catch-fail(psk_data'_52) else caught-fail) in
                                                {11081}let v_2490: bool = (not-caught-fail(v_2489) && success?(1-proj-4-tuple(v_2489))) in
                                                {11082}let is_safe_112: bool = (if v_2490 then 4-proj-4-tuple(v_2489) else caught-fail) in
                                                {11083}let es_189: bitstring = (if v_2490 then 3-proj-4-tuple(v_2489) else caught-fail) in
                                                {11084}let id_127: identityPsk = (if v_2490 then 2-proj-4-tuple(v_2489) else caught-fail) in
                                                {11085}let psk_279: preSharedKey = (if v_2490 then 1-proj-4-tuple(v_2489) else caught-fail) in
                                                {11086}let (psk_280: preSharedKey,early_secret_188: bitstring,valid_60: bool,safe_psk_66: bool) = (if v_2482 then (if v_2488 then (NoPsk,es_188,true,false) else fail-any) else (if v_2490 then (psk_279,es_189,((psk_279 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_126)),is_safe_112) else fail-any)) in
                                                {11087}event Client_PSKChoosen(id_client_5,psk_280,safe_psk_66);
                                                {11088}if valid_60 then
                                                (
                                                    {11089}let gxy_122: element = catch-fail(dh_decap_fun(g_69,gy_61,x_780)) in
                                                    {11090}let v_2491: bool = not-caught-fail(gxy_122) in
                                                    {11091}new s_256[]: seed;
                                                    {11092}let gxy_123: element = (if v_2491 then gxy_122 else dh_f(s_256)) in
                                                    {11093}event Client_DH_gxy(id_client_5,gxy_123);
                                                    {11094}let l_689: label = tls13_derived in
                                                    {11095}let m_248: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {11096}let v_2492: bool = not-caught-fail(m_248) in
                                                    {11097}let h_658: bitstring = (if v_2492 then catch-fail(hash(@8_tls_h,m_248)) else caught-fail) in
                                                    {11098}let v_2493: bool = not-caught-fail(h_658) in
                                                    {11099}let x_782: bitstring = (if v_2493 then (l_689,h_658) else caught-fail) in
                                                    {11100}let extra_132: bitstring = catch-fail((if v_2492 then (if v_2493 then hmac(@8_tls_h,early_secret_188,x_782) else fail-any) else fail-any)) in
                                                    {11101}let v_2494: bool = not-caught-fail(extra_132) in
                                                    {11102}let handshake_secret_61: bitstring = (if v_2494 then hmac(@8_tls_h,extra_132,gxy_123) else fail-any) in
                                                    {11103}let l_690: label = tls13_derived in
                                                    {11104}let m_249: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {11105}let v_2495: bool = not-caught-fail(m_249) in
                                                    {11106}let h_659: bitstring = (if v_2495 then catch-fail(hash(@8_tls_h,m_249)) else caught-fail) in
                                                    {11107}let v_2496: bool = not-caught-fail(h_659) in
                                                    {11108}let x_783: bitstring = (if v_2496 then (l_690,h_659) else caught-fail) in
                                                    {11109}let extra_133: bitstring = catch-fail((if v_2495 then (if v_2496 then hmac(@8_tls_h,handshake_secret_61,x_783) else fail-any) else fail-any)) in
                                                    {11110}let v_2497: bool = not-caught-fail(extra_133) in
                                                    {11111}let k_255: bitstring = (if v_2497 then zero else caught-fail) in
                                                    {11112}let master_secret_129: bitstring = (if v_2497 then catch-fail(hmac(@8_tls_h,handshake_secret_61,k_255)) else caught-fail) in
                                                    {11113}let v_2498: bool = not-caught-fail(master_secret_129) in
                                                    {11114}let l_691: label = (if v_2498 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {11115}let h_660: bitstring = (if v_2498 then catch-fail(hash(@8_tls_h,cur_log2_127)) else caught-fail) in
                                                    {11116}let v_2499: bool = not-caught-fail(h_660) in
                                                    {11117}let x_784: bitstring = (if v_2499 then (l_691,h_660) else caught-fail) in
                                                    {11118}let client_hts_61: bitstring = (if v_2498 then catch-fail((if v_2499 then hmac(@8_tls_h,handshake_secret_61,x_784) else fail-any)) else caught-fail) in
                                                    {11119}let v_2500: bool = not-caught-fail(client_hts_61) in
                                                    {11120}let l_692: label = (if v_2500 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {11121}let h_661: bitstring = (if v_2500 then catch-fail(hash(@8_tls_h,cur_log2_127)) else caught-fail) in
                                                    {11122}let v_2501: bool = not-caught-fail(h_661) in
                                                    {11123}let x_785: bitstring = (if v_2501 then (l_692,h_661) else caught-fail) in
                                                    {11124}let server_hts_61: bitstring = (if v_2500 then catch-fail((if v_2501 then hmac(@8_tls_h,handshake_secret_61,x_785) else fail-any)) else caught-fail) in
                                                    {11125}let v_2502: bool = not-caught-fail(server_hts_61) in
                                                    {11126}let l_693: label = (if v_2502 then tls13_key else caught-fail) in
                                                    {11127}let h_662: bitstring = (if v_2502 then zero else caught-fail) in
                                                    {11128}let x_786: bitstring = (if v_2502 then (l_693,h_662) else caught-fail) in
                                                    {11129}let client_wkh_61: bitstring = (if v_2502 then catch-fail(hmac(@8_tls_h,client_hts_61,x_786)) else caught-fail) in
                                                    {11130}let v_2503: bool = not-caught-fail(client_wkh_61) in
                                                    {11131}let l_694: label = (if v_2503 then tls13_key else caught-fail) in
                                                    {11132}let h_663: bitstring = (if v_2503 then zero else caught-fail) in
                                                    {11133}let x_787: bitstring = (if v_2503 then (l_694,h_663) else caught-fail) in
                                                    {11134}let server_wkh_61: bitstring = (if v_2503 then catch-fail(hmac(@8_tls_h,server_hts_61,x_787)) else caught-fail) in
                                                    {11135}let v_2504: bool = not-caught-fail(server_wkh_61) in
                                                    {11136}let l_695: label = (if v_2504 then tls13_finished else caught-fail) in
                                                    {11137}let h_664: bitstring = (if v_2504 then zero else caught-fail) in
                                                    {11138}let x_788: bitstring = (if v_2504 then (l_695,h_664) else caught-fail) in
                                                    {11139}let client_fk_61: bitstring = (if v_2504 then catch-fail(hmac(@8_tls_h,client_hts_61,x_788)) else caught-fail) in
                                                    {11140}let v_2505: bool = not-caught-fail(client_fk_61) in
                                                    {11141}let l_696: label = (if v_2505 then tls13_finished else caught-fail) in
                                                    {11142}let h_665: bitstring = (if v_2505 then zero else caught-fail) in
                                                    {11143}let x_789: bitstring = (if v_2505 then (l_696,h_665) else caught-fail) in
                                                    {11144}let server_fk_61: bitstring = (if v_2505 then catch-fail(hmac(@8_tls_h,server_hts_61,x_789)) else caught-fail) in
                                                    {11145}let v_2506: bool = not-caught-fail(server_fk_61) in
                                                    {11146}let (master_secret_130: bitstring,chk_68: aead_key,shk_67: aead_key,cfin_68: mac_key,sfin_67: mac_key) = (if v_2497 then (if v_2498 then (if v_2500 then (if v_2502 then (if v_2503 then (if v_2504 then (if v_2505 then (if v_2506 then (master_secret_129,client_wkh_61,server_wkh_61,client_fk_61,server_fk_61) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {11147}event Client_chk(id_client_5,chk_68);
                                                    {11148}event Client_shk(id_client_5,shk_67);
                                                    {11149}event Client_cfin(id_client_5,cfin_68);
                                                    {11150}event Client_sfin(id_client_5,sfin_67);
                                                    {11151}in(io, enc_ee_msg_60: bitstring);
                                                    {11152}let ee_msg_65: msg = aead_dec(@8_tls_a,shk_67,0,zero,enc_ee_msg_60) in
                                                    {11153}let EE(ech_ee_60: echExt,extra_ee_60: extraExt) = ee_msg_65 in
                                                    {11154}let cur_log2_128: bitstring = (cur_log2_127,ee_msg_65) in
                                                    {11155}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_34,sr_71,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_280,safe_psk_66,@8_comp_psk,master_secret_130,chk_68,0,shk_67,1,cfin_68,sfin_67,cur_log2_128)))
                                                )
                                                else
                                                    {11156}out(io, illegal_parameter)
                                            )
                                            else
                                                {11157}out(io, illegal_parameter)
                                    )
                                    else
                                        {11158}out(io, unexpected_message)
                                )
                                else
                                    {11308}get pre_shared_keys(c_dom'_19: domain,=o_dom_15,=@8_tls_h,id_128: identityPsk,psk_281: preSharedKey,idP_21: idProc,is_safe_113: bool) in
                                    {11159}event Selected_one_time_used_psk(id_client_5,psk_281,is_safe_113);
                                    {11160}event Selected_psk(c_dom_7,c_dom'_19,idP_21,is_safe_113);
                                    {11161}event Selected_psk_no_missmatch(id_client_5,o_dom_15,@8_tls_h,psk_281,id_128);
                                    {11162}event Selected_psk_with_ID(c_dom_7,c_dom'_19,id_128,idP_21,is_safe_113);
                                    {11163}let v_2507: bitstring = (id_128,psk_281,is_safe_113) in
                                    {11164}let v_2508: bool = success?(1-proj-3-tuple(v_2507)) in
                                    {11165}let is_safe_114: bool = (if v_2508 then 3-proj-3-tuple(v_2507) else caught-fail) in
                                    {11166}let psk_282: preSharedKey = (if v_2508 then 2-proj-3-tuple(v_2507) else caught-fail) in
                                    {11167}let id_129: identityPsk = (if v_2508 then 1-proj-3-tuple(v_2507) else caught-fail) in
                                    {11168}let offer_49: params = (if v_2508 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_13,SNI(o_dom_15),o_ech_ext_26,extra_131,trunc_client_psk_ext(id_129)) else caught-fail) in
                                    {11169}let cur_log'_37: bitstring = (if v_2508 then (cur_log_OU1_HRR_5,CH(o_cr_19,offer_49)) else caught-fail) in
                                    {11170}let s_257: bitstring = (if v_2508 then zero else caught-fail) in
                                    {11171}let k_256: bitstring = (if v_2508 then catch-fail(psk2b(psk_282)) else caught-fail) in
                                    {11172}let v_2509: bool = not-caught-fail(k_256) in
                                    {11173}let early_secret_189: bitstring = (if v_2508 then catch-fail((if v_2509 then hmac(@8_tls_h,s_257,k_256) else fail-any)) else caught-fail) in
                                    {11174}let v_2510: bool = not-caught-fail(early_secret_189) in
                                    {11175}let l_697: label = (if v_2510 then tls13_ext_res_binder else caught-fail) in
                                    {11176}let m_250: bitstring = (if v_2510 then zero else caught-fail) in
                                    {11177}let h_666: bitstring = (if v_2510 then catch-fail(hash(@8_tls_h,m_250)) else caught-fail) in
                                    {11178}let v_2511: bool = not-caught-fail(h_666) in
                                    {11179}let x_790: bitstring = (if v_2511 then (l_697,h_666) else caught-fail) in
                                    {11180}let binder_key_126: bitstring = (if v_2510 then catch-fail((if v_2511 then hmac(@8_tls_h,early_secret_189,x_790) else fail-any)) else caught-fail) in
                                    {11181}let v_2512: bool = not-caught-fail(binder_key_126) in
                                    {11182}let v_2513: bitstring = (if v_2508 then catch-fail((if v_2510 then (if v_2512 then (early_secret_189,binder_key_126) else fail-any) else fail-any)) else caught-fail) in
                                    {11183}let v_2514: bool = (not-caught-fail(v_2513) && success?(1-proj-2-tuple(v_2513))) in
                                    {11184}let kb_126: mac_key = (if v_2514 then 2-proj-2-tuple(v_2513) else caught-fail) in
                                    {11185}let es_190: bitstring = (if v_2514 then 1-proj-2-tuple(v_2513) else caught-fail) in
                                    {11186}let binders_36: bitstring = (if v_2514 then catch-fail(hmac(@8_tls_h,kb_126,cur_log'_37)) else caught-fail) in
                                    {11187}let v_2515: bool = not-caught-fail(binders_36) in
                                    {11188}let v_2516: bitstring = catch-fail((if v_2508 then (if v_2514 then (if v_2515 then (client_psk_ext(id_129,binders_36),(psk_282,id_129,es_190,is_safe_114)) else fail-any) else fail-any) else fail-any)) in
                                    {11189}let v_2517: bool = (not-caught-fail(v_2516) && success?(1-proj-2-tuple(v_2516))) in
                                    {11190}let psk_data_66: bitstring = (if v_2517 then 2-proj-2-tuple(v_2516) else caught-fail) in
                                    {11191}let psk_ext_127: preSharedKeyExt = (if v_2517 then 1-proj-2-tuple(v_2516) else caught-fail) in
                                    {11192}let o_offer_51: params = (if v_2517 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_13,SNI(o_dom_15),o_ech_ext_26,empty_extra_ext,psk_ext_127) else caught-fail) in
                                    {11193}let (client_hello'_33: msg,cr'_35: bytes32,kex_data'_30: bitstring,psk_data'_53: bitstring) = (if v_2517 then (CH(o_cr_19,o_offer_51),o_cr_19,kex_data_12,psk_data_66) else fail-any) in
                                    {11194}out(io, client_hello'_33);
                                    {11195}let cur_log_OU1_HRR_OU2_21: bitstring = (cur_log_OU1_HRR_5,client_hello'_33) in
                                    {11196}in(io, server_hello'_48: msg);
                                    {11197}let SH(sr'_30: bytes32,mode'_30: params) = server_hello'_48 in
                                    (
                                        {11198}if (sr'_30 = B32(HRR24,HRR8)) then
                                            {11199}out(io, unexpected_message)
                                        else
                                            {11200}let (x_791: bitstring,g_70: group) = kex_data'_30 in
                                            {11201}let (psk_offer_61: preSharedKey,id_offer_61: identityPsk,es_offer_61: bitstring,is_safe_offer_61: bool) = psk_data'_53 in
                                            {11202}event Client_PSKOffer(id_client_5,psk_offer_61,id_offer_61,is_safe_offer_61);
                                            {11203}event Client_Rand_client(id_client_5,cr'_35);
                                            {11204}event Client_DH_client(id_client_5,dh_pub(g_70,x_791));
                                            {11205}event Client_server_domain(id_client_5,o_dom_8);
                                            {11206}let SH(sr_72: bytes32,mode_70: params) = server_hello'_48 in
                                            {11207}event Client_Rand_server(id_client_5,sr_72);
                                            {11208}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_70,gy_62: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_128: preSharedKeyExt) = mode_70 in
                                            (
                                                {11209}let cur_log2_129: bitstring = (cur_log_OU1_HRR_OU2_21,server_hello'_48) in
                                                {11210}event Client_DH_server(id_client_5,gy_62);
                                                {11211}let v_2518: bool = (psk_ext_128 = empty_psk_ext) in
                                                {11212}let psk_283: preSharedKey = (if v_2518 then NoPsk else caught-fail) in
                                                {11213}let s_258: bitstring = (if v_2518 then zero else caught-fail) in
                                                {11214}let k_257: bitstring = (if v_2518 then catch-fail(psk2b(psk_283)) else caught-fail) in
                                                {11215}let v_2519: bool = not-caught-fail(k_257) in
                                                {11216}let early_secret_190: bitstring = (if v_2518 then catch-fail((if v_2519 then hmac(@8_tls_h,s_258,k_257) else fail-any)) else caught-fail) in
                                                {11217}let v_2520: bool = not-caught-fail(early_secret_190) in
                                                {11218}let l_698: label = (if v_2520 then tls13_ext_res_binder else caught-fail) in
                                                {11219}let m_251: bitstring = (if v_2520 then zero else caught-fail) in
                                                {11220}let h_667: bitstring = (if v_2520 then catch-fail(hash(@8_tls_h,m_251)) else caught-fail) in
                                                {11221}let v_2521: bool = not-caught-fail(h_667) in
                                                {11222}let x_792: bitstring = (if v_2521 then (l_698,h_667) else caught-fail) in
                                                {11223}let binder_key_127: bitstring = (if v_2520 then catch-fail((if v_2521 then hmac(@8_tls_h,early_secret_190,x_792) else fail-any)) else caught-fail) in
                                                {11224}let v_2522: bool = not-caught-fail(binder_key_127) in
                                                {11225}let v_2523: bitstring = (if v_2518 then catch-fail((if v_2520 then (if v_2522 then (early_secret_190,binder_key_127) else fail-any) else fail-any)) else caught-fail) in
                                                {11226}let v_2524: bool = (not-caught-fail(v_2523) && success?(1-proj-2-tuple(v_2523))) in
                                                {11227}let kb_127: mac_key = (if v_2524 then 2-proj-2-tuple(v_2523) else caught-fail) in
                                                {11228}let es_191: bitstring = (if v_2524 then 1-proj-2-tuple(v_2523) else caught-fail) in
                                                {11229}let v_2525: bitstring = (if not(v_2518) then catch-fail(psk_data'_53) else caught-fail) in
                                                {11230}let v_2526: bool = (not-caught-fail(v_2525) && success?(1-proj-4-tuple(v_2525))) in
                                                {11231}let is_safe_115: bool = (if v_2526 then 4-proj-4-tuple(v_2525) else caught-fail) in
                                                {11232}let es_192: bitstring = (if v_2526 then 3-proj-4-tuple(v_2525) else caught-fail) in
                                                {11233}let id_130: identityPsk = (if v_2526 then 2-proj-4-tuple(v_2525) else caught-fail) in
                                                {11234}let psk_284: preSharedKey = (if v_2526 then 1-proj-4-tuple(v_2525) else caught-fail) in
                                                {11235}let (psk_285: preSharedKey,early_secret_191: bitstring,valid_61: bool,safe_psk_67: bool) = (if v_2518 then (if v_2524 then (NoPsk,es_191,true,false) else fail-any) else (if v_2526 then (psk_284,es_192,((psk_284 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_128)),is_safe_115) else fail-any)) in
                                                {11236}event Client_PSKChoosen(id_client_5,psk_285,safe_psk_67);
                                                {11237}if valid_61 then
                                                (
                                                    {11238}let gxy_124: element = catch-fail(dh_decap_fun(g_70,gy_62,x_791)) in
                                                    {11239}let v_2527: bool = not-caught-fail(gxy_124) in
                                                    {11240}new s_259[]: seed;
                                                    {11241}let gxy_125: element = (if v_2527 then gxy_124 else dh_f(s_259)) in
                                                    {11242}event Client_DH_gxy(id_client_5,gxy_125);
                                                    {11243}let l_699: label = tls13_derived in
                                                    {11244}let m_252: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {11245}let v_2528: bool = not-caught-fail(m_252) in
                                                    {11246}let h_668: bitstring = (if v_2528 then catch-fail(hash(@8_tls_h,m_252)) else caught-fail) in
                                                    {11247}let v_2529: bool = not-caught-fail(h_668) in
                                                    {11248}let x_793: bitstring = (if v_2529 then (l_699,h_668) else caught-fail) in
                                                    {11249}let extra_134: bitstring = catch-fail((if v_2528 then (if v_2529 then hmac(@8_tls_h,early_secret_191,x_793) else fail-any) else fail-any)) in
                                                    {11250}let v_2530: bool = not-caught-fail(extra_134) in
                                                    {11251}let handshake_secret_62: bitstring = (if v_2530 then hmac(@8_tls_h,extra_134,gxy_125) else fail-any) in
                                                    {11252}let l_700: label = tls13_derived in
                                                    {11253}let m_253: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {11254}let v_2531: bool = not-caught-fail(m_253) in
                                                    {11255}let h_669: bitstring = (if v_2531 then catch-fail(hash(@8_tls_h,m_253)) else caught-fail) in
                                                    {11256}let v_2532: bool = not-caught-fail(h_669) in
                                                    {11257}let x_794: bitstring = (if v_2532 then (l_700,h_669) else caught-fail) in
                                                    {11258}let extra_135: bitstring = catch-fail((if v_2531 then (if v_2532 then hmac(@8_tls_h,handshake_secret_62,x_794) else fail-any) else fail-any)) in
                                                    {11259}let v_2533: bool = not-caught-fail(extra_135) in
                                                    {11260}let k_258: bitstring = (if v_2533 then zero else caught-fail) in
                                                    {11261}let master_secret_131: bitstring = (if v_2533 then catch-fail(hmac(@8_tls_h,handshake_secret_62,k_258)) else caught-fail) in
                                                    {11262}let v_2534: bool = not-caught-fail(master_secret_131) in
                                                    {11263}let l_701: label = (if v_2534 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {11264}let h_670: bitstring = (if v_2534 then catch-fail(hash(@8_tls_h,cur_log2_129)) else caught-fail) in
                                                    {11265}let v_2535: bool = not-caught-fail(h_670) in
                                                    {11266}let x_795: bitstring = (if v_2535 then (l_701,h_670) else caught-fail) in
                                                    {11267}let client_hts_62: bitstring = (if v_2534 then catch-fail((if v_2535 then hmac(@8_tls_h,handshake_secret_62,x_795) else fail-any)) else caught-fail) in
                                                    {11268}let v_2536: bool = not-caught-fail(client_hts_62) in
                                                    {11269}let l_702: label = (if v_2536 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {11270}let h_671: bitstring = (if v_2536 then catch-fail(hash(@8_tls_h,cur_log2_129)) else caught-fail) in
                                                    {11271}let v_2537: bool = not-caught-fail(h_671) in
                                                    {11272}let x_796: bitstring = (if v_2537 then (l_702,h_671) else caught-fail) in
                                                    {11273}let server_hts_62: bitstring = (if v_2536 then catch-fail((if v_2537 then hmac(@8_tls_h,handshake_secret_62,x_796) else fail-any)) else caught-fail) in
                                                    {11274}let v_2538: bool = not-caught-fail(server_hts_62) in
                                                    {11275}let l_703: label = (if v_2538 then tls13_key else caught-fail) in
                                                    {11276}let h_672: bitstring = (if v_2538 then zero else caught-fail) in
                                                    {11277}let x_797: bitstring = (if v_2538 then (l_703,h_672) else caught-fail) in
                                                    {11278}let client_wkh_62: bitstring = (if v_2538 then catch-fail(hmac(@8_tls_h,client_hts_62,x_797)) else caught-fail) in
                                                    {11279}let v_2539: bool = not-caught-fail(client_wkh_62) in
                                                    {11280}let l_704: label = (if v_2539 then tls13_key else caught-fail) in
                                                    {11281}let h_673: bitstring = (if v_2539 then zero else caught-fail) in
                                                    {11282}let x_798: bitstring = (if v_2539 then (l_704,h_673) else caught-fail) in
                                                    {11283}let server_wkh_62: bitstring = (if v_2539 then catch-fail(hmac(@8_tls_h,server_hts_62,x_798)) else caught-fail) in
                                                    {11284}let v_2540: bool = not-caught-fail(server_wkh_62) in
                                                    {11285}let l_705: label = (if v_2540 then tls13_finished else caught-fail) in
                                                    {11286}let h_674: bitstring = (if v_2540 then zero else caught-fail) in
                                                    {11287}let x_799: bitstring = (if v_2540 then (l_705,h_674) else caught-fail) in
                                                    {11288}let client_fk_62: bitstring = (if v_2540 then catch-fail(hmac(@8_tls_h,client_hts_62,x_799)) else caught-fail) in
                                                    {11289}let v_2541: bool = not-caught-fail(client_fk_62) in
                                                    {11290}let l_706: label = (if v_2541 then tls13_finished else caught-fail) in
                                                    {11291}let h_675: bitstring = (if v_2541 then zero else caught-fail) in
                                                    {11292}let x_800: bitstring = (if v_2541 then (l_706,h_675) else caught-fail) in
                                                    {11293}let server_fk_62: bitstring = (if v_2541 then catch-fail(hmac(@8_tls_h,server_hts_62,x_800)) else caught-fail) in
                                                    {11294}let v_2542: bool = not-caught-fail(server_fk_62) in
                                                    {11295}let (master_secret_132: bitstring,chk_69: aead_key,shk_68: aead_key,cfin_69: mac_key,sfin_68: mac_key) = (if v_2533 then (if v_2534 then (if v_2536 then (if v_2538 then (if v_2539 then (if v_2540 then (if v_2541 then (if v_2542 then (master_secret_131,client_wkh_62,server_wkh_62,client_fk_62,server_fk_62) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {11296}event Client_chk(id_client_5,chk_69);
                                                    {11297}event Client_shk(id_client_5,shk_68);
                                                    {11298}event Client_cfin(id_client_5,cfin_69);
                                                    {11299}event Client_sfin(id_client_5,sfin_68);
                                                    {11300}in(io, enc_ee_msg_61: bitstring);
                                                    {11301}let ee_msg_66: msg = aead_dec(@8_tls_a,shk_68,0,zero,enc_ee_msg_61) in
                                                    {11302}let EE(ech_ee_61: echExt,extra_ee_61: extraExt) = ee_msg_66 in
                                                    {11303}let cur_log2_130: bitstring = (cur_log2_129,ee_msg_66) in
                                                    {11304}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_35,sr_72,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_285,safe_psk_67,@8_comp_psk,master_secret_132,chk_69,0,shk_68,1,cfin_69,sfin_68,cur_log2_130)))
                                                )
                                                else
                                                    {11305}out(io, illegal_parameter)
                                            )
                                            else
                                                {11306}out(io, illegal_parameter)
                                    )
                                    else
                                        {11307}out(io, unexpected_message)
                            )
                            else
                                {11309}let psk_286: preSharedKey = NoPsk in
                                {11310}let s_260: bitstring = zero in
                                {11311}let k_259: bitstring = catch-fail(psk2b(psk_286)) in
                                {11312}let v_2543: bool = not-caught-fail(k_259) in
                                {11313}let early_secret_192: bitstring = catch-fail((if v_2543 then hmac(@8_tls_h,s_260,k_259) else fail-any)) in
                                {11314}let v_2544: bool = not-caught-fail(early_secret_192) in
                                {11315}let l_707: label = (if v_2544 then tls13_ext_res_binder else caught-fail) in
                                {11316}let m_254: bitstring = (if v_2544 then zero else caught-fail) in
                                {11317}let h_676: bitstring = (if v_2544 then catch-fail(hash(@8_tls_h,m_254)) else caught-fail) in
                                {11318}let v_2545: bool = not-caught-fail(h_676) in
                                {11319}let x_801: bitstring = (if v_2545 then (l_707,h_676) else caught-fail) in
                                {11320}let binder_key_128: bitstring = (if v_2544 then catch-fail((if v_2545 then hmac(@8_tls_h,early_secret_192,x_801) else fail-any)) else caught-fail) in
                                {11321}let v_2546: bool = not-caught-fail(binder_key_128) in
                                {11322}let v_2547: bitstring = catch-fail((if v_2544 then (if v_2546 then (early_secret_192,binder_key_128) else fail-any) else fail-any)) in
                                {11323}let v_2548: bool = (not-caught-fail(v_2547) && success?(1-proj-2-tuple(v_2547))) in
                                {11324}let kb_128: mac_key = (if v_2548 then 2-proj-2-tuple(v_2547) else caught-fail) in
                                {11325}let es_193: bitstring = (if v_2548 then 1-proj-2-tuple(v_2547) else caught-fail) in
                                {11326}let v_2549: bitstring = catch-fail((if v_2548 then (empty_psk_ext,(NoPsk,zero,es_193,false)) else fail-any)) in
                                {11327}let v_2550: bool = (not-caught-fail(v_2549) && success?(1-proj-2-tuple(v_2549))) in
                                {11328}let psk_data_67: bitstring = (if v_2550 then 2-proj-2-tuple(v_2549) else caught-fail) in
                                {11329}let psk_ext_129: preSharedKeyExt = (if v_2550 then 1-proj-2-tuple(v_2549) else caught-fail) in
                                {11330}let o_offer_52: params = (if v_2550 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_13,SNI(o_dom_15),o_ech_ext_26,empty_extra_ext,psk_ext_129) else caught-fail) in
                                {11331}let (client_hello'_34: msg,cr'_36: bytes32,kex_data'_31: bitstring,psk_data'_54: bitstring) = (if v_2550 then (CH(o_cr_19,o_offer_52),o_cr_19,kex_data_12,psk_data_67) else fail-any) in
                                {11332}out(io, client_hello'_34);
                                {11333}let cur_log_OU1_HRR_OU2_22: bitstring = (cur_log_OU1_HRR_5,client_hello'_34) in
                                {11334}in(io, server_hello'_49: msg);
                                {11335}let SH(sr'_31: bytes32,mode'_31: params) = server_hello'_49 in
                                (
                                    {11336}if (sr'_31 = B32(HRR24,HRR8)) then
                                        {11337}out(io, unexpected_message)
                                    else
                                        {11338}let (x_802: bitstring,g_71: group) = kex_data'_31 in
                                        {11339}let (psk_offer_62: preSharedKey,id_offer_62: identityPsk,es_offer_62: bitstring,is_safe_offer_62: bool) = psk_data'_54 in
                                        {11340}event Client_PSKOffer(id_client_5,psk_offer_62,id_offer_62,is_safe_offer_62);
                                        {11341}event Client_Rand_client(id_client_5,cr'_36);
                                        {11342}event Client_DH_client(id_client_5,dh_pub(g_71,x_802));
                                        {11343}event Client_server_domain(id_client_5,o_dom_8);
                                        {11344}let SH(sr_73: bytes32,mode_71: params) = server_hello'_49 in
                                        {11345}event Client_Rand_server(id_client_5,sr_73);
                                        {11346}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_71,gy_63: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_130: preSharedKeyExt) = mode_71 in
                                        (
                                            {11347}let cur_log2_131: bitstring = (cur_log_OU1_HRR_OU2_22,server_hello'_49) in
                                            {11348}event Client_DH_server(id_client_5,gy_63);
                                            {11349}let v_2551: bool = (psk_ext_130 = empty_psk_ext) in
                                            {11350}let psk_287: preSharedKey = (if v_2551 then NoPsk else caught-fail) in
                                            {11351}let s_261: bitstring = (if v_2551 then zero else caught-fail) in
                                            {11352}let k_260: bitstring = (if v_2551 then catch-fail(psk2b(psk_287)) else caught-fail) in
                                            {11353}let v_2552: bool = not-caught-fail(k_260) in
                                            {11354}let early_secret_193: bitstring = (if v_2551 then catch-fail((if v_2552 then hmac(@8_tls_h,s_261,k_260) else fail-any)) else caught-fail) in
                                            {11355}let v_2553: bool = not-caught-fail(early_secret_193) in
                                            {11356}let l_708: label = (if v_2553 then tls13_ext_res_binder else caught-fail) in
                                            {11357}let m_255: bitstring = (if v_2553 then zero else caught-fail) in
                                            {11358}let h_677: bitstring = (if v_2553 then catch-fail(hash(@8_tls_h,m_255)) else caught-fail) in
                                            {11359}let v_2554: bool = not-caught-fail(h_677) in
                                            {11360}let x_803: bitstring = (if v_2554 then (l_708,h_677) else caught-fail) in
                                            {11361}let binder_key_129: bitstring = (if v_2553 then catch-fail((if v_2554 then hmac(@8_tls_h,early_secret_193,x_803) else fail-any)) else caught-fail) in
                                            {11362}let v_2555: bool = not-caught-fail(binder_key_129) in
                                            {11363}let v_2556: bitstring = (if v_2551 then catch-fail((if v_2553 then (if v_2555 then (early_secret_193,binder_key_129) else fail-any) else fail-any)) else caught-fail) in
                                            {11364}let v_2557: bool = (not-caught-fail(v_2556) && success?(1-proj-2-tuple(v_2556))) in
                                            {11365}let kb_129: mac_key = (if v_2557 then 2-proj-2-tuple(v_2556) else caught-fail) in
                                            {11366}let es_194: bitstring = (if v_2557 then 1-proj-2-tuple(v_2556) else caught-fail) in
                                            {11367}let v_2558: bitstring = (if not(v_2551) then catch-fail(psk_data'_54) else caught-fail) in
                                            {11368}let v_2559: bool = (not-caught-fail(v_2558) && success?(1-proj-4-tuple(v_2558))) in
                                            {11369}let is_safe_116: bool = (if v_2559 then 4-proj-4-tuple(v_2558) else caught-fail) in
                                            {11370}let es_195: bitstring = (if v_2559 then 3-proj-4-tuple(v_2558) else caught-fail) in
                                            {11371}let id_131: identityPsk = (if v_2559 then 2-proj-4-tuple(v_2558) else caught-fail) in
                                            {11372}let psk_288: preSharedKey = (if v_2559 then 1-proj-4-tuple(v_2558) else caught-fail) in
                                            {11373}let (psk_289: preSharedKey,early_secret_194: bitstring,valid_62: bool,safe_psk_68: bool) = (if v_2551 then (if v_2557 then (NoPsk,es_194,true,false) else fail-any) else (if v_2559 then (psk_288,es_195,((psk_288 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_130)),is_safe_116) else fail-any)) in
                                            {11374}event Client_PSKChoosen(id_client_5,psk_289,safe_psk_68);
                                            {11375}if valid_62 then
                                            (
                                                {11376}let gxy_126: element = catch-fail(dh_decap_fun(g_71,gy_63,x_802)) in
                                                {11377}let v_2560: bool = not-caught-fail(gxy_126) in
                                                {11378}new s_262[]: seed;
                                                {11379}let gxy_127: element = (if v_2560 then gxy_126 else dh_f(s_262)) in
                                                {11380}event Client_DH_gxy(id_client_5,gxy_127);
                                                {11381}let l_709: label = tls13_derived in
                                                {11382}let m_256: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                {11383}let v_2561: bool = not-caught-fail(m_256) in
                                                {11384}let h_678: bitstring = (if v_2561 then catch-fail(hash(@8_tls_h,m_256)) else caught-fail) in
                                                {11385}let v_2562: bool = not-caught-fail(h_678) in
                                                {11386}let x_804: bitstring = (if v_2562 then (l_709,h_678) else caught-fail) in
                                                {11387}let extra_136: bitstring = catch-fail((if v_2561 then (if v_2562 then hmac(@8_tls_h,early_secret_194,x_804) else fail-any) else fail-any)) in
                                                {11388}let v_2563: bool = not-caught-fail(extra_136) in
                                                {11389}let handshake_secret_63: bitstring = (if v_2563 then hmac(@8_tls_h,extra_136,gxy_127) else fail-any) in
                                                {11390}let l_710: label = tls13_derived in
                                                {11391}let m_257: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                {11392}let v_2564: bool = not-caught-fail(m_257) in
                                                {11393}let h_679: bitstring = (if v_2564 then catch-fail(hash(@8_tls_h,m_257)) else caught-fail) in
                                                {11394}let v_2565: bool = not-caught-fail(h_679) in
                                                {11395}let x_805: bitstring = (if v_2565 then (l_710,h_679) else caught-fail) in
                                                {11396}let extra_137: bitstring = catch-fail((if v_2564 then (if v_2565 then hmac(@8_tls_h,handshake_secret_63,x_805) else fail-any) else fail-any)) in
                                                {11397}let v_2566: bool = not-caught-fail(extra_137) in
                                                {11398}let k_261: bitstring = (if v_2566 then zero else caught-fail) in
                                                {11399}let master_secret_133: bitstring = (if v_2566 then catch-fail(hmac(@8_tls_h,handshake_secret_63,k_261)) else caught-fail) in
                                                {11400}let v_2567: bool = not-caught-fail(master_secret_133) in
                                                {11401}let l_711: label = (if v_2567 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {11402}let h_680: bitstring = (if v_2567 then catch-fail(hash(@8_tls_h,cur_log2_131)) else caught-fail) in
                                                {11403}let v_2568: bool = not-caught-fail(h_680) in
                                                {11404}let x_806: bitstring = (if v_2568 then (l_711,h_680) else caught-fail) in
                                                {11405}let client_hts_63: bitstring = (if v_2567 then catch-fail((if v_2568 then hmac(@8_tls_h,handshake_secret_63,x_806) else fail-any)) else caught-fail) in
                                                {11406}let v_2569: bool = not-caught-fail(client_hts_63) in
                                                {11407}let l_712: label = (if v_2569 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {11408}let h_681: bitstring = (if v_2569 then catch-fail(hash(@8_tls_h,cur_log2_131)) else caught-fail) in
                                                {11409}let v_2570: bool = not-caught-fail(h_681) in
                                                {11410}let x_807: bitstring = (if v_2570 then (l_712,h_681) else caught-fail) in
                                                {11411}let server_hts_63: bitstring = (if v_2569 then catch-fail((if v_2570 then hmac(@8_tls_h,handshake_secret_63,x_807) else fail-any)) else caught-fail) in
                                                {11412}let v_2571: bool = not-caught-fail(server_hts_63) in
                                                {11413}let l_713: label = (if v_2571 then tls13_key else caught-fail) in
                                                {11414}let h_682: bitstring = (if v_2571 then zero else caught-fail) in
                                                {11415}let x_808: bitstring = (if v_2571 then (l_713,h_682) else caught-fail) in
                                                {11416}let client_wkh_63: bitstring = (if v_2571 then catch-fail(hmac(@8_tls_h,client_hts_63,x_808)) else caught-fail) in
                                                {11417}let v_2572: bool = not-caught-fail(client_wkh_63) in
                                                {11418}let l_714: label = (if v_2572 then tls13_key else caught-fail) in
                                                {11419}let h_683: bitstring = (if v_2572 then zero else caught-fail) in
                                                {11420}let x_809: bitstring = (if v_2572 then (l_714,h_683) else caught-fail) in
                                                {11421}let server_wkh_63: bitstring = (if v_2572 then catch-fail(hmac(@8_tls_h,server_hts_63,x_809)) else caught-fail) in
                                                {11422}let v_2573: bool = not-caught-fail(server_wkh_63) in
                                                {11423}let l_715: label = (if v_2573 then tls13_finished else caught-fail) in
                                                {11424}let h_684: bitstring = (if v_2573 then zero else caught-fail) in
                                                {11425}let x_810: bitstring = (if v_2573 then (l_715,h_684) else caught-fail) in
                                                {11426}let client_fk_63: bitstring = (if v_2573 then catch-fail(hmac(@8_tls_h,client_hts_63,x_810)) else caught-fail) in
                                                {11427}let v_2574: bool = not-caught-fail(client_fk_63) in
                                                {11428}let l_716: label = (if v_2574 then tls13_finished else caught-fail) in
                                                {11429}let h_685: bitstring = (if v_2574 then zero else caught-fail) in
                                                {11430}let x_811: bitstring = (if v_2574 then (l_716,h_685) else caught-fail) in
                                                {11431}let server_fk_63: bitstring = (if v_2574 then catch-fail(hmac(@8_tls_h,server_hts_63,x_811)) else caught-fail) in
                                                {11432}let v_2575: bool = not-caught-fail(server_fk_63) in
                                                {11433}let (master_secret_134: bitstring,chk_70: aead_key,shk_69: aead_key,cfin_70: mac_key,sfin_69: mac_key) = (if v_2566 then (if v_2567 then (if v_2569 then (if v_2571 then (if v_2572 then (if v_2573 then (if v_2574 then (if v_2575 then (master_secret_133,client_wkh_63,server_wkh_63,client_fk_63,server_fk_63) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {11434}event Client_chk(id_client_5,chk_70);
                                                {11435}event Client_shk(id_client_5,shk_69);
                                                {11436}event Client_cfin(id_client_5,cfin_70);
                                                {11437}event Client_sfin(id_client_5,sfin_69);
                                                {11438}in(io, enc_ee_msg_62: bitstring);
                                                {11439}let ee_msg_67: msg = aead_dec(@8_tls_a,shk_69,0,zero,enc_ee_msg_62) in
                                                {11440}let EE(ech_ee_62: echExt,extra_ee_62: extraExt) = ee_msg_67 in
                                                {11441}let cur_log2_132: bitstring = (cur_log2_131,ee_msg_67) in
                                                {11442}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_36,sr_73,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_289,safe_psk_68,@8_comp_psk,master_secret_134,chk_70,0,shk_69,1,cfin_70,sfin_69,cur_log2_132)))
                                            )
                                            else
                                                {11443}out(io, illegal_parameter)
                                        )
                                        else
                                            {11444}out(io, illegal_parameter)
                                )
                                else
                                    {11445}out(io, unexpected_message)
                        )
                        else
                            {11446}let psk_290: preSharedKey = NoPsk in
                            {11447}let s_263: bitstring = zero in
                            {11448}let k_262: bitstring = catch-fail(psk2b(psk_290)) in
                            {11449}let v_2576: bool = not-caught-fail(k_262) in
                            {11450}let early_secret_195: bitstring = catch-fail((if v_2576 then hmac(@8_tls_h,s_263,k_262) else fail-any)) in
                            {11451}let v_2577: bool = not-caught-fail(early_secret_195) in
                            {11452}let l_717: label = (if v_2577 then tls13_ext_res_binder else caught-fail) in
                            {11453}let m_258: bitstring = (if v_2577 then zero else caught-fail) in
                            {11454}let h_686: bitstring = (if v_2577 then catch-fail(hash(@8_tls_h,m_258)) else caught-fail) in
                            {11455}let v_2578: bool = not-caught-fail(h_686) in
                            {11456}let x_812: bitstring = (if v_2578 then (l_717,h_686) else caught-fail) in
                            {11457}let binder_key_130: bitstring = (if v_2577 then catch-fail((if v_2578 then hmac(@8_tls_h,early_secret_195,x_812) else fail-any)) else caught-fail) in
                            {11458}let v_2579: bool = not-caught-fail(binder_key_130) in
                            {11459}let v_2580: bitstring = catch-fail((if v_2577 then (if v_2579 then (early_secret_195,binder_key_130) else fail-any) else fail-any)) in
                            {11460}let v_2581: bool = (not-caught-fail(v_2580) && success?(1-proj-2-tuple(v_2580))) in
                            {11461}let kb_130: mac_key = (if v_2581 then 2-proj-2-tuple(v_2580) else caught-fail) in
                            {11462}let es_196: bitstring = (if v_2581 then 1-proj-2-tuple(v_2580) else caught-fail) in
                            {11463}let v_2582: preSharedKeyExt = (if v_2581 then catch-fail(o_psk_ext_26) else caught-fail) in
                            {11464}let v_2583: bool = (not-caught-fail(v_2582) && success?(1-proj-client_psk_ext(v_2582))) in
                            {11465}let fake_binder_29: bitstring = (if v_2583 then 2-proj-client_psk_ext(v_2582) else caught-fail) in
                            {11466}let fake_id_29: identityPsk = (if v_2583 then 1-proj-client_psk_ext(v_2582) else caught-fail) in
                            {11467}new fake_binder'_5[]: bitstring;
                            {11468}let v_2584: bitstring = catch-fail((if v_2581 then (if v_2583 then (client_psk_ext(fake_id_29,fake_binder'_5),(NoPsk,zero,es_196,false)) else (empty_psk_ext,(NoPsk,zero,es_196,false))) else fail-any)) in
                            {11469}let v_2585: bool = (not-caught-fail(v_2584) && success?(1-proj-2-tuple(v_2584))) in
                            {11470}let psk_data_68: bitstring = (if v_2585 then 2-proj-2-tuple(v_2584) else caught-fail) in
                            {11471}let psk_ext_131: preSharedKeyExt = (if v_2585 then 1-proj-2-tuple(v_2584) else caught-fail) in
                            {11472}let o_offer_53: params = (if v_2585 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_13,SNI(o_dom_15),o_ech_ext_26,empty_extra_ext,psk_ext_131) else caught-fail) in
                            {11473}let (client_hello'_35: msg,cr'_37: bytes32,kex_data'_32: bitstring,psk_data'_55: bitstring) = (if v_2585 then (CH(o_cr_19,o_offer_53),o_cr_19,kex_data_12,psk_data_68) else fail-any) in
                            {11474}out(io, client_hello'_35);
                            {11475}let cur_log_OU1_HRR_OU2_23: bitstring = (cur_log_OU1_HRR_5,client_hello'_35) in
                            {11476}in(io, server_hello'_50: msg);
                            {11477}let SH(sr'_32: bytes32,mode'_32: params) = server_hello'_50 in
                            (
                                {11478}if (sr'_32 = B32(HRR24,HRR8)) then
                                    {11479}out(io, unexpected_message)
                                else
                                    {11480}let (x_813: bitstring,g_72: group) = kex_data'_32 in
                                    {11481}let (psk_offer_63: preSharedKey,id_offer_63: identityPsk,es_offer_63: bitstring,is_safe_offer_63: bool) = psk_data'_55 in
                                    {11482}event Client_PSKOffer(id_client_5,psk_offer_63,id_offer_63,is_safe_offer_63);
                                    {11483}event Client_Rand_client(id_client_5,cr'_37);
                                    {11484}event Client_DH_client(id_client_5,dh_pub(g_72,x_813));
                                    {11485}event Client_server_domain(id_client_5,o_dom_8);
                                    {11486}let SH(sr_74: bytes32,mode_72: params) = server_hello'_50 in
                                    {11487}event Client_Rand_server(id_client_5,sr_74);
                                    {11488}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_72,gy_64: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_132: preSharedKeyExt) = mode_72 in
                                    (
                                        {11489}let cur_log2_133: bitstring = (cur_log_OU1_HRR_OU2_23,server_hello'_50) in
                                        {11490}event Client_DH_server(id_client_5,gy_64);
                                        {11491}let v_2586: bool = (psk_ext_132 = empty_psk_ext) in
                                        {11492}let psk_291: preSharedKey = (if v_2586 then NoPsk else caught-fail) in
                                        {11493}let s_264: bitstring = (if v_2586 then zero else caught-fail) in
                                        {11494}let k_263: bitstring = (if v_2586 then catch-fail(psk2b(psk_291)) else caught-fail) in
                                        {11495}let v_2587: bool = not-caught-fail(k_263) in
                                        {11496}let early_secret_196: bitstring = (if v_2586 then catch-fail((if v_2587 then hmac(@8_tls_h,s_264,k_263) else fail-any)) else caught-fail) in
                                        {11497}let v_2588: bool = not-caught-fail(early_secret_196) in
                                        {11498}let l_718: label = (if v_2588 then tls13_ext_res_binder else caught-fail) in
                                        {11499}let m_259: bitstring = (if v_2588 then zero else caught-fail) in
                                        {11500}let h_687: bitstring = (if v_2588 then catch-fail(hash(@8_tls_h,m_259)) else caught-fail) in
                                        {11501}let v_2589: bool = not-caught-fail(h_687) in
                                        {11502}let x_814: bitstring = (if v_2589 then (l_718,h_687) else caught-fail) in
                                        {11503}let binder_key_131: bitstring = (if v_2588 then catch-fail((if v_2589 then hmac(@8_tls_h,early_secret_196,x_814) else fail-any)) else caught-fail) in
                                        {11504}let v_2590: bool = not-caught-fail(binder_key_131) in
                                        {11505}let v_2591: bitstring = (if v_2586 then catch-fail((if v_2588 then (if v_2590 then (early_secret_196,binder_key_131) else fail-any) else fail-any)) else caught-fail) in
                                        {11506}let v_2592: bool = (not-caught-fail(v_2591) && success?(1-proj-2-tuple(v_2591))) in
                                        {11507}let kb_131: mac_key = (if v_2592 then 2-proj-2-tuple(v_2591) else caught-fail) in
                                        {11508}let es_197: bitstring = (if v_2592 then 1-proj-2-tuple(v_2591) else caught-fail) in
                                        {11509}let v_2593: bitstring = (if not(v_2586) then catch-fail(psk_data'_55) else caught-fail) in
                                        {11510}let v_2594: bool = (not-caught-fail(v_2593) && success?(1-proj-4-tuple(v_2593))) in
                                        {11511}let is_safe_117: bool = (if v_2594 then 4-proj-4-tuple(v_2593) else caught-fail) in
                                        {11512}let es_198: bitstring = (if v_2594 then 3-proj-4-tuple(v_2593) else caught-fail) in
                                        {11513}let id_132: identityPsk = (if v_2594 then 2-proj-4-tuple(v_2593) else caught-fail) in
                                        {11514}let psk_292: preSharedKey = (if v_2594 then 1-proj-4-tuple(v_2593) else caught-fail) in
                                        {11515}let (psk_293: preSharedKey,early_secret_197: bitstring,valid_63: bool,safe_psk_69: bool) = (if v_2586 then (if v_2592 then (NoPsk,es_197,true,false) else fail-any) else (if v_2594 then (psk_292,es_198,((psk_292 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_132)),is_safe_117) else fail-any)) in
                                        {11516}event Client_PSKChoosen(id_client_5,psk_293,safe_psk_69);
                                        {11517}if valid_63 then
                                        (
                                            {11518}let gxy_128: element = catch-fail(dh_decap_fun(g_72,gy_64,x_813)) in
                                            {11519}let v_2595: bool = not-caught-fail(gxy_128) in
                                            {11520}new s_265[]: seed;
                                            {11521}let gxy_129: element = (if v_2595 then gxy_128 else dh_f(s_265)) in
                                            {11522}event Client_DH_gxy(id_client_5,gxy_129);
                                            {11523}let l_719: label = tls13_derived in
                                            {11524}let m_260: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                            {11525}let v_2596: bool = not-caught-fail(m_260) in
                                            {11526}let h_688: bitstring = (if v_2596 then catch-fail(hash(@8_tls_h,m_260)) else caught-fail) in
                                            {11527}let v_2597: bool = not-caught-fail(h_688) in
                                            {11528}let x_815: bitstring = (if v_2597 then (l_719,h_688) else caught-fail) in
                                            {11529}let extra_138: bitstring = catch-fail((if v_2596 then (if v_2597 then hmac(@8_tls_h,early_secret_197,x_815) else fail-any) else fail-any)) in
                                            {11530}let v_2598: bool = not-caught-fail(extra_138) in
                                            {11531}let handshake_secret_64: bitstring = (if v_2598 then hmac(@8_tls_h,extra_138,gxy_129) else fail-any) in
                                            {11532}let l_720: label = tls13_derived in
                                            {11533}let m_261: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                            {11534}let v_2599: bool = not-caught-fail(m_261) in
                                            {11535}let h_689: bitstring = (if v_2599 then catch-fail(hash(@8_tls_h,m_261)) else caught-fail) in
                                            {11536}let v_2600: bool = not-caught-fail(h_689) in
                                            {11537}let x_816: bitstring = (if v_2600 then (l_720,h_689) else caught-fail) in
                                            {11538}let extra_139: bitstring = catch-fail((if v_2599 then (if v_2600 then hmac(@8_tls_h,handshake_secret_64,x_816) else fail-any) else fail-any)) in
                                            {11539}let v_2601: bool = not-caught-fail(extra_139) in
                                            {11540}let k_264: bitstring = (if v_2601 then zero else caught-fail) in
                                            {11541}let master_secret_135: bitstring = (if v_2601 then catch-fail(hmac(@8_tls_h,handshake_secret_64,k_264)) else caught-fail) in
                                            {11542}let v_2602: bool = not-caught-fail(master_secret_135) in
                                            {11543}let l_721: label = (if v_2602 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {11544}let h_690: bitstring = (if v_2602 then catch-fail(hash(@8_tls_h,cur_log2_133)) else caught-fail) in
                                            {11545}let v_2603: bool = not-caught-fail(h_690) in
                                            {11546}let x_817: bitstring = (if v_2603 then (l_721,h_690) else caught-fail) in
                                            {11547}let client_hts_64: bitstring = (if v_2602 then catch-fail((if v_2603 then hmac(@8_tls_h,handshake_secret_64,x_817) else fail-any)) else caught-fail) in
                                            {11548}let v_2604: bool = not-caught-fail(client_hts_64) in
                                            {11549}let l_722: label = (if v_2604 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {11550}let h_691: bitstring = (if v_2604 then catch-fail(hash(@8_tls_h,cur_log2_133)) else caught-fail) in
                                            {11551}let v_2605: bool = not-caught-fail(h_691) in
                                            {11552}let x_818: bitstring = (if v_2605 then (l_722,h_691) else caught-fail) in
                                            {11553}let server_hts_64: bitstring = (if v_2604 then catch-fail((if v_2605 then hmac(@8_tls_h,handshake_secret_64,x_818) else fail-any)) else caught-fail) in
                                            {11554}let v_2606: bool = not-caught-fail(server_hts_64) in
                                            {11555}let l_723: label = (if v_2606 then tls13_key else caught-fail) in
                                            {11556}let h_692: bitstring = (if v_2606 then zero else caught-fail) in
                                            {11557}let x_819: bitstring = (if v_2606 then (l_723,h_692) else caught-fail) in
                                            {11558}let client_wkh_64: bitstring = (if v_2606 then catch-fail(hmac(@8_tls_h,client_hts_64,x_819)) else caught-fail) in
                                            {11559}let v_2607: bool = not-caught-fail(client_wkh_64) in
                                            {11560}let l_724: label = (if v_2607 then tls13_key else caught-fail) in
                                            {11561}let h_693: bitstring = (if v_2607 then zero else caught-fail) in
                                            {11562}let x_820: bitstring = (if v_2607 then (l_724,h_693) else caught-fail) in
                                            {11563}let server_wkh_64: bitstring = (if v_2607 then catch-fail(hmac(@8_tls_h,server_hts_64,x_820)) else caught-fail) in
                                            {11564}let v_2608: bool = not-caught-fail(server_wkh_64) in
                                            {11565}let l_725: label = (if v_2608 then tls13_finished else caught-fail) in
                                            {11566}let h_694: bitstring = (if v_2608 then zero else caught-fail) in
                                            {11567}let x_821: bitstring = (if v_2608 then (l_725,h_694) else caught-fail) in
                                            {11568}let client_fk_64: bitstring = (if v_2608 then catch-fail(hmac(@8_tls_h,client_hts_64,x_821)) else caught-fail) in
                                            {11569}let v_2609: bool = not-caught-fail(client_fk_64) in
                                            {11570}let l_726: label = (if v_2609 then tls13_finished else caught-fail) in
                                            {11571}let h_695: bitstring = (if v_2609 then zero else caught-fail) in
                                            {11572}let x_822: bitstring = (if v_2609 then (l_726,h_695) else caught-fail) in
                                            {11573}let server_fk_64: bitstring = (if v_2609 then catch-fail(hmac(@8_tls_h,server_hts_64,x_822)) else caught-fail) in
                                            {11574}let v_2610: bool = not-caught-fail(server_fk_64) in
                                            {11575}let (master_secret_136: bitstring,chk_71: aead_key,shk_70: aead_key,cfin_71: mac_key,sfin_70: mac_key) = (if v_2601 then (if v_2602 then (if v_2604 then (if v_2606 then (if v_2607 then (if v_2608 then (if v_2609 then (if v_2610 then (master_secret_135,client_wkh_64,server_wkh_64,client_fk_64,server_fk_64) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {11576}event Client_chk(id_client_5,chk_71);
                                            {11577}event Client_shk(id_client_5,shk_70);
                                            {11578}event Client_cfin(id_client_5,cfin_71);
                                            {11579}event Client_sfin(id_client_5,sfin_70);
                                            {11580}in(io, enc_ee_msg_63: bitstring);
                                            {11581}let ee_msg_68: msg = aead_dec(@8_tls_a,shk_70,0,zero,enc_ee_msg_63) in
                                            {11582}let EE(ech_ee_63: echExt,extra_ee_63: extraExt) = ee_msg_68 in
                                            {11583}let cur_log2_134: bitstring = (cur_log2_133,ee_msg_68) in
                                            {11584}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_37,sr_74,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_293,safe_psk_69,@8_comp_psk,master_secret_136,chk_71,0,shk_70,1,cfin_71,sfin_70,cur_log2_134)))
                                        )
                                        else
                                            {11585}out(io, illegal_parameter)
                                    )
                                    else
                                        {11586}out(io, illegal_parameter)
                            )
                            else
                                {11587}out(io, unexpected_message)
                )
                else
                    {11588}let cur_log_33: bitstring = (zero,i_client_hello_27) in
                    {11589}let sh_modified_24: msg = SH(B32(sr24_7,zero8),mode_65) in
                    {11590}let cur_log_sh_24: bitstring = (cur_log_33,sh_modified_24) in
                    {11591}let transcript_ech_conf_24: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_24)) in
                    {11592}let v_2611: bool = not-caught-fail(transcript_ech_conf_24) in
                    {11593}let s_266: bitstring = (if v_2611 then zero else caught-fail) in
                    {11594}let k_265: bitstring = (if v_2611 then catch-fail(b32_2_b(get_random(i_client_hello_27))) else caught-fail) in
                    {11595}let v_2612: bool = not-caught-fail(k_265) in
                    {11596}let k_266: bitstring = (if v_2611 then catch-fail((if v_2612 then hmac(@8_backend_h,s_266,k_265) else fail-any)) else caught-fail) in
                    {11597}let v_2613: bool = not-caught-fail(k_266) in
                    {11598}let l_727: label = (if v_2613 then ech_accept_confirmation else caught-fail) in
                    {11599}let x_823: bitstring = (if v_2613 then (l_727,cur_log_sh_24) else caught-fail) in
                    {11600}let sr8_30: bytes8 = (if v_2611 then catch-fail(crop_into_bytes8((if v_2613 then hmac(@8_backend_h,k_266,x_823) else fail-any))) else caught-fail) in
                    {11601}let v_2614: bool = not-caught-fail(sr8_30) in
                    {11602}if (B32(sr24_7,sr8_26) = (if v_2611 then (if v_2614 then B32(sr24_7,sr8_30) else fail-any) else fail-any)) then
                    (
                        {11603}event ClientEchAcceptance(id_client_5,true);
                        {11604}let cur_log_34: bitstring = (zero,i_client_hello_27) in
                        {11605}let (x_824: bitstring,g_73: group) = i_kex_data_12 in
                        {11606}let (psk_offer_64: preSharedKey,id_offer_64: identityPsk,es_offer_64: bitstring,is_safe_offer_64: bool) = psk_data_61 in
                        {11607}event Client_PSKOffer(id_client_5,psk_offer_64,id_offer_64,is_safe_offer_64);
                        {11608}event Client_Rand_client(id_client_5,i_cr_13);
                        {11609}event Client_DH_client(id_client_5,dh_pub(g_73,x_824));
                        {11610}event Client_server_domain(id_client_5,backend_dom_1);
                        {11611}let SH(sr_75: bytes32,mode_73: params) = server_hello_9 in
                        {11612}event Client_Rand_server(id_client_5,sr_75);
                        {11613}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_73,gy_65: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_133: preSharedKeyExt) = mode_73 in
                        (
                            {11614}let cur_log2_135: bitstring = (cur_log_34,server_hello_9) in
                            {11615}event Client_DH_server(id_client_5,gy_65);
                            {11616}let v_2615: bool = (psk_ext_133 = empty_psk_ext) in
                            {11617}let psk_294: preSharedKey = (if v_2615 then NoPsk else caught-fail) in
                            {11618}let s_267: bitstring = (if v_2615 then zero else caught-fail) in
                            {11619}let k_267: bitstring = (if v_2615 then catch-fail(psk2b(psk_294)) else caught-fail) in
                            {11620}let v_2616: bool = not-caught-fail(k_267) in
                            {11621}let early_secret_198: bitstring = (if v_2615 then catch-fail((if v_2616 then hmac(@8_backend_h,s_267,k_267) else fail-any)) else caught-fail) in
                            {11622}let v_2617: bool = not-caught-fail(early_secret_198) in
                            {11623}let l_728: label = (if v_2617 then tls13_ext_res_binder else caught-fail) in
                            {11624}let m_262: bitstring = (if v_2617 then zero else caught-fail) in
                            {11625}let h_696: bitstring = (if v_2617 then catch-fail(hash(@8_backend_h,m_262)) else caught-fail) in
                            {11626}let v_2618: bool = not-caught-fail(h_696) in
                            {11627}let x_825: bitstring = (if v_2618 then (l_728,h_696) else caught-fail) in
                            {11628}let binder_key_132: bitstring = (if v_2617 then catch-fail((if v_2618 then hmac(@8_backend_h,early_secret_198,x_825) else fail-any)) else caught-fail) in
                            {11629}let v_2619: bool = not-caught-fail(binder_key_132) in
                            {11630}let v_2620: bitstring = (if v_2615 then catch-fail((if v_2617 then (if v_2619 then (early_secret_198,binder_key_132) else fail-any) else fail-any)) else caught-fail) in
                            {11631}let v_2621: bool = (not-caught-fail(v_2620) && success?(1-proj-2-tuple(v_2620))) in
                            {11632}let kb_132: mac_key = (if v_2621 then 2-proj-2-tuple(v_2620) else caught-fail) in
                            {11633}let es_199: bitstring = (if v_2621 then 1-proj-2-tuple(v_2620) else caught-fail) in
                            {11634}let v_2622: bitstring = (if not(v_2615) then catch-fail(psk_data_61) else caught-fail) in
                            {11635}let v_2623: bool = (not-caught-fail(v_2622) && success?(1-proj-4-tuple(v_2622))) in
                            {11636}let is_safe_118: bool = (if v_2623 then 4-proj-4-tuple(v_2622) else caught-fail) in
                            {11637}let es_200: bitstring = (if v_2623 then 3-proj-4-tuple(v_2622) else caught-fail) in
                            {11638}let id_133: identityPsk = (if v_2623 then 2-proj-4-tuple(v_2622) else caught-fail) in
                            {11639}let psk_295: preSharedKey = (if v_2623 then 1-proj-4-tuple(v_2622) else caught-fail) in
                            {11640}let (psk_296: preSharedKey,early_secret_199: bitstring,valid_64: bool,safe_psk_70: bool) = (if v_2615 then (if v_2621 then (NoPsk,es_199,true,false) else fail-any) else (if v_2623 then (psk_295,es_200,((psk_295 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_133)),is_safe_118) else fail-any)) in
                            {11641}event Client_PSKChoosen(id_client_5,psk_296,safe_psk_70);
                            {11642}if valid_64 then
                            (
                                {11643}let gxy_130: element = catch-fail(dh_decap_fun(g_73,gy_65,x_824)) in
                                {11644}let v_2624: bool = not-caught-fail(gxy_130) in
                                {11645}new s_268[]: seed;
                                {11646}let gxy_131: element = (if v_2624 then gxy_130 else dh_f(s_268)) in
                                {11647}event Client_DH_gxy(id_client_5,gxy_131);
                                {11648}let l_729: label = tls13_derived in
                                {11649}let m_263: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                {11650}let v_2625: bool = not-caught-fail(m_263) in
                                {11651}let h_697: bitstring = (if v_2625 then catch-fail(hash(@8_backend_h,m_263)) else caught-fail) in
                                {11652}let v_2626: bool = not-caught-fail(h_697) in
                                {11653}let x_826: bitstring = (if v_2626 then (l_729,h_697) else caught-fail) in
                                {11654}let extra_140: bitstring = catch-fail((if v_2625 then (if v_2626 then hmac(@8_backend_h,early_secret_199,x_826) else fail-any) else fail-any)) in
                                {11655}let v_2627: bool = not-caught-fail(extra_140) in
                                {11656}let handshake_secret_65: bitstring = (if v_2627 then hmac(@8_backend_h,extra_140,gxy_131) else fail-any) in
                                {11657}let l_730: label = tls13_derived in
                                {11658}let m_264: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                {11659}let v_2628: bool = not-caught-fail(m_264) in
                                {11660}let h_698: bitstring = (if v_2628 then catch-fail(hash(@8_backend_h,m_264)) else caught-fail) in
                                {11661}let v_2629: bool = not-caught-fail(h_698) in
                                {11662}let x_827: bitstring = (if v_2629 then (l_730,h_698) else caught-fail) in
                                {11663}let extra_141: bitstring = catch-fail((if v_2628 then (if v_2629 then hmac(@8_backend_h,handshake_secret_65,x_827) else fail-any) else fail-any)) in
                                {11664}let v_2630: bool = not-caught-fail(extra_141) in
                                {11665}let k_268: bitstring = (if v_2630 then zero else caught-fail) in
                                {11666}let master_secret_137: bitstring = (if v_2630 then catch-fail(hmac(@8_backend_h,handshake_secret_65,k_268)) else caught-fail) in
                                {11667}let v_2631: bool = not-caught-fail(master_secret_137) in
                                {11668}let l_731: label = (if v_2631 then tls13_client_handshake_traffic_secret else caught-fail) in
                                {11669}let h_699: bitstring = (if v_2631 then catch-fail(hash(@8_backend_h,cur_log2_135)) else caught-fail) in
                                {11670}let v_2632: bool = not-caught-fail(h_699) in
                                {11671}let x_828: bitstring = (if v_2632 then (l_731,h_699) else caught-fail) in
                                {11672}let client_hts_65: bitstring = (if v_2631 then catch-fail((if v_2632 then hmac(@8_backend_h,handshake_secret_65,x_828) else fail-any)) else caught-fail) in
                                {11673}let v_2633: bool = not-caught-fail(client_hts_65) in
                                {11674}let l_732: label = (if v_2633 then tls13_server_handshake_traffic_secret else caught-fail) in
                                {11675}let h_700: bitstring = (if v_2633 then catch-fail(hash(@8_backend_h,cur_log2_135)) else caught-fail) in
                                {11676}let v_2634: bool = not-caught-fail(h_700) in
                                {11677}let x_829: bitstring = (if v_2634 then (l_732,h_700) else caught-fail) in
                                {11678}let server_hts_65: bitstring = (if v_2633 then catch-fail((if v_2634 then hmac(@8_backend_h,handshake_secret_65,x_829) else fail-any)) else caught-fail) in
                                {11679}let v_2635: bool = not-caught-fail(server_hts_65) in
                                {11680}let l_733: label = (if v_2635 then tls13_key else caught-fail) in
                                {11681}let h_701: bitstring = (if v_2635 then zero else caught-fail) in
                                {11682}let x_830: bitstring = (if v_2635 then (l_733,h_701) else caught-fail) in
                                {11683}let client_wkh_65: bitstring = (if v_2635 then catch-fail(hmac(@8_backend_h,client_hts_65,x_830)) else caught-fail) in
                                {11684}let v_2636: bool = not-caught-fail(client_wkh_65) in
                                {11685}let l_734: label = (if v_2636 then tls13_key else caught-fail) in
                                {11686}let h_702: bitstring = (if v_2636 then zero else caught-fail) in
                                {11687}let x_831: bitstring = (if v_2636 then (l_734,h_702) else caught-fail) in
                                {11688}let server_wkh_65: bitstring = (if v_2636 then catch-fail(hmac(@8_backend_h,server_hts_65,x_831)) else caught-fail) in
                                {11689}let v_2637: bool = not-caught-fail(server_wkh_65) in
                                {11690}let l_735: label = (if v_2637 then tls13_finished else caught-fail) in
                                {11691}let h_703: bitstring = (if v_2637 then zero else caught-fail) in
                                {11692}let x_832: bitstring = (if v_2637 then (l_735,h_703) else caught-fail) in
                                {11693}let client_fk_65: bitstring = (if v_2637 then catch-fail(hmac(@8_backend_h,client_hts_65,x_832)) else caught-fail) in
                                {11694}let v_2638: bool = not-caught-fail(client_fk_65) in
                                {11695}let l_736: label = (if v_2638 then tls13_finished else caught-fail) in
                                {11696}let h_704: bitstring = (if v_2638 then zero else caught-fail) in
                                {11697}let x_833: bitstring = (if v_2638 then (l_736,h_704) else caught-fail) in
                                {11698}let server_fk_65: bitstring = (if v_2638 then catch-fail(hmac(@8_backend_h,server_hts_65,x_833)) else caught-fail) in
                                {11699}let v_2639: bool = not-caught-fail(server_fk_65) in
                                {11700}let (master_secret_138: bitstring,chk_72: aead_key,shk_71: aead_key,cfin_72: mac_key,sfin_71: mac_key) = (if v_2630 then (if v_2631 then (if v_2633 then (if v_2635 then (if v_2636 then (if v_2637 then (if v_2638 then (if v_2639 then (master_secret_137,client_wkh_65,server_wkh_65,client_fk_65,server_fk_65) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                {11701}event Client_chk(id_client_5,chk_72);
                                {11702}event Client_shk(id_client_5,shk_71);
                                {11703}event Client_cfin(id_client_5,cfin_72);
                                {11704}event Client_sfin(id_client_5,sfin_71);
                                {11705}in(io, enc_ee_msg_64: bitstring);
                                {11706}let ee_msg_69: msg = aead_dec(@8_backend_a,shk_71,0,zero,enc_ee_msg_64) in
                                {11707}let EE(ech_ee_64: echExt,extra_ee_64: extraExt) = ee_msg_69 in
                                {11708}let cur_log2_136: bitstring = (cur_log2_135,ee_msg_69) in
                                {11709}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr_13,sr_75,@8_backend_h,@8_backend_a,c_dom_7,backend_dom_1,psk_296,safe_psk_70,@8_comp_psk,master_secret_138,chk_72,0,shk_71,1,cfin_72,sfin_71,cur_log2_136)))
                            )
                            else
                                {11710}out(io, illegal_parameter)
                        )
                        else
                            {11711}out(io, illegal_parameter)
                    )
                    else
                        {11712}event ClientEchAcceptance(id_client_5,false);
                        {11713}let v_2640: bool = @8_use_grease in
                        {11714}let psk_297: preSharedKey = (if not(v_2640) then NoPsk else caught-fail) in
                        {11715}let s_269: bitstring = (if not(v_2640) then zero else caught-fail) in
                        {11716}let k_269: bitstring = (if not(v_2640) then catch-fail(psk2b(psk_297)) else caught-fail) in
                        {11717}let v_2641: bool = not-caught-fail(k_269) in
                        {11718}let early_secret_200: bitstring = (if not(v_2640) then catch-fail((if v_2641 then hmac(@8_tls_h,s_269,k_269) else fail-any)) else caught-fail) in
                        {11719}let v_2642: bool = not-caught-fail(early_secret_200) in
                        {11720}let l_737: label = (if v_2642 then tls13_ext_res_binder else caught-fail) in
                        {11721}let m_265: bitstring = (if v_2642 then zero else caught-fail) in
                        {11722}let h_705: bitstring = (if v_2642 then catch-fail(hash(@8_tls_h,m_265)) else caught-fail) in
                        {11723}let v_2643: bool = not-caught-fail(h_705) in
                        {11724}let x_834: bitstring = (if v_2643 then (l_737,h_705) else caught-fail) in
                        {11725}let binder_key_133: bitstring = (if v_2642 then catch-fail((if v_2643 then hmac(@8_tls_h,early_secret_200,x_834) else fail-any)) else caught-fail) in
                        {11726}let v_2644: bool = not-caught-fail(binder_key_133) in
                        {11727}let v_2645: bitstring = (if not(v_2640) then catch-fail((if v_2642 then (if v_2644 then (early_secret_200,binder_key_133) else fail-any) else fail-any)) else caught-fail) in
                        {11728}let v_2646: bool = (not-caught-fail(v_2645) && success?(1-proj-2-tuple(v_2645))) in
                        {11729}let kb_133: mac_key = (if v_2646 then 2-proj-2-tuple(v_2645) else caught-fail) in
                        {11730}let es'_5: bitstring = (if v_2646 then 1-proj-2-tuple(v_2645) else caught-fail) in
                        {11731}let psk_data'_56: bitstring = (if v_2640 then psk_data_61 else (if v_2646 then (NoPsk,zero,es'_5,false) else fail-any)) in
                        {11732}let cur_log_35: bitstring = (zero,o_client_hello_7) in
                        {11733}let (x_835: bitstring,g_74: group) = o_kex_data_12 in
                        {11734}let (psk_offer_65: preSharedKey,id_offer_65: identityPsk,es_offer_65: bitstring,is_safe_offer_65: bool) = psk_data'_56 in
                        {11735}event Client_PSKOffer(id_client_5,psk_offer_65,id_offer_65,is_safe_offer_65);
                        {11736}event Client_Rand_client(id_client_5,o_cr_17);
                        {11737}event Client_DH_client(id_client_5,dh_pub(g_74,x_835));
                        {11738}event Client_server_domain(id_client_5,o_dom_8);
                        {11739}let SH(sr_76: bytes32,mode_74: params) = server_hello_9 in
                        {11740}event Client_Rand_server(id_client_5,sr_76);
                        {11741}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_74,gy_66: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_134: preSharedKeyExt) = mode_74 in
                        (
                            {11742}let cur_log2_137: bitstring = (cur_log_35,server_hello_9) in
                            {11743}event Client_DH_server(id_client_5,gy_66);
                            {11744}let v_2647: bool = (psk_ext_134 = empty_psk_ext) in
                            {11745}let psk_298: preSharedKey = (if v_2647 then NoPsk else caught-fail) in
                            {11746}let s_270: bitstring = (if v_2647 then zero else caught-fail) in
                            {11747}let k_270: bitstring = (if v_2647 then catch-fail(psk2b(psk_298)) else caught-fail) in
                            {11748}let v_2648: bool = not-caught-fail(k_270) in
                            {11749}let early_secret_201: bitstring = (if v_2647 then catch-fail((if v_2648 then hmac(@8_tls_h,s_270,k_270) else fail-any)) else caught-fail) in
                            {11750}let v_2649: bool = not-caught-fail(early_secret_201) in
                            {11751}let l_738: label = (if v_2649 then tls13_ext_res_binder else caught-fail) in
                            {11752}let m_266: bitstring = (if v_2649 then zero else caught-fail) in
                            {11753}let h_706: bitstring = (if v_2649 then catch-fail(hash(@8_tls_h,m_266)) else caught-fail) in
                            {11754}let v_2650: bool = not-caught-fail(h_706) in
                            {11755}let x_836: bitstring = (if v_2650 then (l_738,h_706) else caught-fail) in
                            {11756}let binder_key_134: bitstring = (if v_2649 then catch-fail((if v_2650 then hmac(@8_tls_h,early_secret_201,x_836) else fail-any)) else caught-fail) in
                            {11757}let v_2651: bool = not-caught-fail(binder_key_134) in
                            {11758}let v_2652: bitstring = (if v_2647 then catch-fail((if v_2649 then (if v_2651 then (early_secret_201,binder_key_134) else fail-any) else fail-any)) else caught-fail) in
                            {11759}let v_2653: bool = (not-caught-fail(v_2652) && success?(1-proj-2-tuple(v_2652))) in
                            {11760}let kb_134: mac_key = (if v_2653 then 2-proj-2-tuple(v_2652) else caught-fail) in
                            {11761}let es_201: bitstring = (if v_2653 then 1-proj-2-tuple(v_2652) else caught-fail) in
                            {11762}let v_2654: bitstring = (if not(v_2647) then catch-fail(psk_data'_56) else caught-fail) in
                            {11763}let v_2655: bool = (not-caught-fail(v_2654) && success?(1-proj-4-tuple(v_2654))) in
                            {11764}let is_safe_119: bool = (if v_2655 then 4-proj-4-tuple(v_2654) else caught-fail) in
                            {11765}let es_202: bitstring = (if v_2655 then 3-proj-4-tuple(v_2654) else caught-fail) in
                            {11766}let id_134: identityPsk = (if v_2655 then 2-proj-4-tuple(v_2654) else caught-fail) in
                            {11767}let psk_299: preSharedKey = (if v_2655 then 1-proj-4-tuple(v_2654) else caught-fail) in
                            {11768}let (psk_300: preSharedKey,early_secret_202: bitstring,valid_65: bool,safe_psk_71: bool) = (if v_2647 then (if v_2653 then (NoPsk,es_201,true,false) else fail-any) else (if v_2655 then (psk_299,es_202,((psk_299 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_134)),is_safe_119) else fail-any)) in
                            {11769}event Client_PSKChoosen(id_client_5,psk_300,safe_psk_71);
                            {11770}if valid_65 then
                            (
                                {11771}let gxy_132: element = catch-fail(dh_decap_fun(g_74,gy_66,x_835)) in
                                {11772}let v_2656: bool = not-caught-fail(gxy_132) in
                                {11773}new s_271[]: seed;
                                {11774}let gxy_133: element = (if v_2656 then gxy_132 else dh_f(s_271)) in
                                {11775}event Client_DH_gxy(id_client_5,gxy_133);
                                {11776}let l_739: label = tls13_derived in
                                {11777}let m_267: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                {11778}let v_2657: bool = not-caught-fail(m_267) in
                                {11779}let h_707: bitstring = (if v_2657 then catch-fail(hash(@8_tls_h,m_267)) else caught-fail) in
                                {11780}let v_2658: bool = not-caught-fail(h_707) in
                                {11781}let x_837: bitstring = (if v_2658 then (l_739,h_707) else caught-fail) in
                                {11782}let extra_142: bitstring = catch-fail((if v_2657 then (if v_2658 then hmac(@8_tls_h,early_secret_202,x_837) else fail-any) else fail-any)) in
                                {11783}let v_2659: bool = not-caught-fail(extra_142) in
                                {11784}let handshake_secret_66: bitstring = (if v_2659 then hmac(@8_tls_h,extra_142,gxy_133) else fail-any) in
                                {11785}let l_740: label = tls13_derived in
                                {11786}let m_268: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                {11787}let v_2660: bool = not-caught-fail(m_268) in
                                {11788}let h_708: bitstring = (if v_2660 then catch-fail(hash(@8_tls_h,m_268)) else caught-fail) in
                                {11789}let v_2661: bool = not-caught-fail(h_708) in
                                {11790}let x_838: bitstring = (if v_2661 then (l_740,h_708) else caught-fail) in
                                {11791}let extra_143: bitstring = catch-fail((if v_2660 then (if v_2661 then hmac(@8_tls_h,handshake_secret_66,x_838) else fail-any) else fail-any)) in
                                {11792}let v_2662: bool = not-caught-fail(extra_143) in
                                {11793}let k_271: bitstring = (if v_2662 then zero else caught-fail) in
                                {11794}let master_secret_139: bitstring = (if v_2662 then catch-fail(hmac(@8_tls_h,handshake_secret_66,k_271)) else caught-fail) in
                                {11795}let v_2663: bool = not-caught-fail(master_secret_139) in
                                {11796}let l_741: label = (if v_2663 then tls13_client_handshake_traffic_secret else caught-fail) in
                                {11797}let h_709: bitstring = (if v_2663 then catch-fail(hash(@8_tls_h,cur_log2_137)) else caught-fail) in
                                {11798}let v_2664: bool = not-caught-fail(h_709) in
                                {11799}let x_839: bitstring = (if v_2664 then (l_741,h_709) else caught-fail) in
                                {11800}let client_hts_66: bitstring = (if v_2663 then catch-fail((if v_2664 then hmac(@8_tls_h,handshake_secret_66,x_839) else fail-any)) else caught-fail) in
                                {11801}let v_2665: bool = not-caught-fail(client_hts_66) in
                                {11802}let l_742: label = (if v_2665 then tls13_server_handshake_traffic_secret else caught-fail) in
                                {11803}let h_710: bitstring = (if v_2665 then catch-fail(hash(@8_tls_h,cur_log2_137)) else caught-fail) in
                                {11804}let v_2666: bool = not-caught-fail(h_710) in
                                {11805}let x_840: bitstring = (if v_2666 then (l_742,h_710) else caught-fail) in
                                {11806}let server_hts_66: bitstring = (if v_2665 then catch-fail((if v_2666 then hmac(@8_tls_h,handshake_secret_66,x_840) else fail-any)) else caught-fail) in
                                {11807}let v_2667: bool = not-caught-fail(server_hts_66) in
                                {11808}let l_743: label = (if v_2667 then tls13_key else caught-fail) in
                                {11809}let h_711: bitstring = (if v_2667 then zero else caught-fail) in
                                {11810}let x_841: bitstring = (if v_2667 then (l_743,h_711) else caught-fail) in
                                {11811}let client_wkh_66: bitstring = (if v_2667 then catch-fail(hmac(@8_tls_h,client_hts_66,x_841)) else caught-fail) in
                                {11812}let v_2668: bool = not-caught-fail(client_wkh_66) in
                                {11813}let l_744: label = (if v_2668 then tls13_key else caught-fail) in
                                {11814}let h_712: bitstring = (if v_2668 then zero else caught-fail) in
                                {11815}let x_842: bitstring = (if v_2668 then (l_744,h_712) else caught-fail) in
                                {11816}let server_wkh_66: bitstring = (if v_2668 then catch-fail(hmac(@8_tls_h,server_hts_66,x_842)) else caught-fail) in
                                {11817}let v_2669: bool = not-caught-fail(server_wkh_66) in
                                {11818}let l_745: label = (if v_2669 then tls13_finished else caught-fail) in
                                {11819}let h_713: bitstring = (if v_2669 then zero else caught-fail) in
                                {11820}let x_843: bitstring = (if v_2669 then (l_745,h_713) else caught-fail) in
                                {11821}let client_fk_66: bitstring = (if v_2669 then catch-fail(hmac(@8_tls_h,client_hts_66,x_843)) else caught-fail) in
                                {11822}let v_2670: bool = not-caught-fail(client_fk_66) in
                                {11823}let l_746: label = (if v_2670 then tls13_finished else caught-fail) in
                                {11824}let h_714: bitstring = (if v_2670 then zero else caught-fail) in
                                {11825}let x_844: bitstring = (if v_2670 then (l_746,h_714) else caught-fail) in
                                {11826}let server_fk_66: bitstring = (if v_2670 then catch-fail(hmac(@8_tls_h,server_hts_66,x_844)) else caught-fail) in
                                {11827}let v_2671: bool = not-caught-fail(server_fk_66) in
                                {11828}let (master_secret_140: bitstring,chk_73: aead_key,shk_72: aead_key,cfin_73: mac_key,sfin_72: mac_key) = (if v_2662 then (if v_2663 then (if v_2665 then (if v_2667 then (if v_2668 then (if v_2669 then (if v_2670 then (if v_2671 then (master_secret_139,client_wkh_66,server_wkh_66,client_fk_66,server_fk_66) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                {11829}event Client_chk(id_client_5,chk_73);
                                {11830}event Client_shk(id_client_5,shk_72);
                                {11831}event Client_cfin(id_client_5,cfin_73);
                                {11832}event Client_sfin(id_client_5,sfin_72);
                                {11833}in(io, enc_ee_msg_65: bitstring);
                                {11834}let ee_msg_70: msg = aead_dec(@8_tls_a,shk_72,0,zero,enc_ee_msg_65) in
                                {11835}let EE(ech_ee_65: echExt,extra_ee_65: extraExt) = ee_msg_70 in
                                {11836}let cur_log2_138: bitstring = (cur_log2_137,ee_msg_70) in
                                {11837}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(o_cr_17,sr_76,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_300,safe_psk_71,@8_comp_psk,master_secret_140,chk_73,0,shk_72,1,cfin_73,sfin_72,cur_log2_138)))
                            )
                            else
                                {11838}out(io, illegal_parameter)
                        )
                        else
                            {11839}out(io, illegal_parameter)
            )
            else
                {11840}out(io, unexpected_message)
        )
)

--  Biprocess 1 (that is, biprocess 0, with let moved downwards):
(
    {1}!
    {2}in(io, a: domain);
    {3}new lgt_id: idProc;
    {4}event Same(a);
    {5}new s: seed;
    {6}let sk_h: privkey = uc_privkey(s) in
    {7}let crt: certificate = valid_cert(a,pk(sk_h)) in
    {8}insert long_term_keys(a,sk_h,pk(sk_h),crt,lgt_id);
    {9}out(io, crt)
) | (
    {10}!
    {11}in(io, (c_dom: domain,s_dom: domain));
    {13}new psk_id: idProc;
    {14}event Same(c_dom);
    {15}event Same(s_dom);
    {16}new s_1: seed;
    {17}let psk: preSharedKey = uc_psk(s_1) in
    {12}let h_alg: hash_alg = id_hash(StrongHash,1) in
    {18}let id: identityPsk = mk_idpsk(s_dom,h_alg,psk) in
    {19}insert pre_shared_keys(c_dom,s_dom,h_alg,id,psk,psk_id,true)
) | (
    {20}!
    {21}in(io, s_dom_1: domain);
    {25}event Same(s_dom_1);
    {26}new id_1: configId;
    {27}new s_2[]: seed;
    {24}let ech_g: group = id_g(StrongDH,2) in
    {28}let gx: element = dh_pub(ech_g,dh_k(s_2)) in
    {29}let (skR: bitstring,pkR: element) = (dh_k(s_2),gx) in
    {23}let ech_a: aead_alg = id_aead(StrongAE,2) in
    {22}let ech_h: hash_alg = id_hash(StrongHash,2) in
    {30}let config: echConfig = ech_config(id_1,ech_g,pkR,s_dom_1,ech_h,ech_a) in
    {31}insert ech_configurations(config,skR);
    {32}out(io, config)
) | (
    {33}!
    {34}in(io, a_1: domain);
    {35}new idP: idProc;
    {36}new sk_d: privkey;
    {37}event CompromisedLtkForEquiv(pk(sk_d));
    {38}event Same(a_1);
    {39}let crt_1: certificate = valid_cert(a_1,pk(sk_d)) in
    {40}insert long_term_keys(a_1,sk_d,pk(sk_d),crt_1,idP);
    {41}event CompromisedLtk(pk(sk_d));
    {42}out(io, (sk_d,crt_1))
) | (
    0
) | (
    {43}!
    {44}in(io, s_dom_2: domain);
    {48}event Same(s_dom_2);
    {49}new id_2: configId;
    {50}new skR_d: bitstring;
    {47}let ech_g_1: group = id_g(StrongDH,2) in
    {51}let pkR_d: element = dh_pub(ech_g_1,skR_d) in
    {46}let ech_a_1: aead_alg = id_aead(StrongAE,2) in
    {45}let ech_h_1: hash_alg = id_hash(StrongHash,2) in
    {52}let config_1: echConfig = ech_config(id_2,ech_g_1,pkR_d,s_dom_2,ech_h_1,ech_a_1) in
    {53}event CompromisedEchKeyForEquiv(config_1);
    {54}insert ech_configurations(config_1,skR_d);
    {55}out(io, config_1);
    {56}event CompromisedEchKey(config_1);
    {57}out(io, skR_d)
) | (
    {58}!
    {59}in(ch_server_CFIN, (id_server: idProc,ArgsServerCFIN(cr: bytes32,sr: bytes32,h_alg_1: hash_alg,a_alg: aead_alg,s_dom_3: domain,s_pkey: pubkey,c_pkey: pubkey,psk_1: preSharedKey,master_secret: bitstring,chk: aead_key,c_seq: nat,cfin: mac_key,cur_log: bitstring)));
    {60}new st[]: stamp;
    {61}event PreciseIdProcess(ch_server_CFIN,id_server,st);
    {62}event Server_Rand_client(id_server,cr);
    {63}event Server_Rand_server(id_server,sr);
    {64}event Server_PSKChoosen(id_server,psk_1);
    {65}event Server_chk(id_server,chk);
    {66}event Server_cfin(id_server,cfin);
    {67}event Server_Cert_server(id_server,s_pkey);
    {68}event Server_Cert_client(id_server,c_pkey);
    {69}new st1[]: stamp;
    {70}event PreciseMess(ch_server_CFIN,id_server,st1,(chk,cfin,master_secret));
    {71}in(io, enc_fin: bitstring);
    {72}let fin_msg: msg = aead_dec(a_alg,chk,c_seq,zero,enc_fin) in
    {73}let FIN(hash_msg: bitstring) = fin_msg in
    {74}if (hash_msg = hmac(h_alg_1,cfin,cur_log)) then
    {76}let h: bitstring = catch-fail(hash(h_alg_1,cur_log)) in
    {77}let v: bool = not-caught-fail(h) in
    {75}let l: label = tls13_client_application_traffic_secret in
    {78}let x: bitstring = (if v then (l,h) else caught-fail) in
    {79}let client_ats: bitstring = catch-fail((if v then hmac(h_alg_1,master_secret,x) else fail-any)) in
    {80}let v_1: bool = not-caught-fail(client_ats) in
    {82}let h_1: bitstring = (if v_1 then catch-fail(hash(h_alg_1,cur_log)) else caught-fail) in
    {83}let v_2: bool = not-caught-fail(h_1) in
    {81}let l_1: label = (if v_1 then tls13_server_application_traffic_secret else caught-fail) in
    {84}let x_1: bitstring = (if v_2 then (l_1,h_1) else caught-fail) in
    {85}let server_ats: bitstring = (if v_1 then catch-fail((if v_2 then hmac(h_alg_1,master_secret,x_1) else fail-any)) else caught-fail) in
    {86}let v_3: bool = not-caught-fail(server_ats) in
    {88}let h_2: bitstring = (if v_3 then catch-fail(hash(h_alg_1,cur_log)) else caught-fail) in
    {89}let v_4: bool = not-caught-fail(h_2) in
    {87}let l_2: label = (if v_3 then tls13_exporter_master_secret else caught-fail) in
    {90}let x_2: bitstring = (if v_4 then (l_2,h_2) else caught-fail) in
    {91}let ems: bitstring = (if v_3 then catch-fail((if v_4 then hmac(h_alg_1,master_secret,x_2) else fail-any)) else caught-fail) in
    {92}let v_5: bool = not-caught-fail(ems) in
    {94}let h_3: bitstring = (if v_5 then zero else caught-fail) in
    {93}let l_3: label = (if v_5 then tls13_key else caught-fail) in
    {95}let x_3: bitstring = (if v_5 then (l_3,h_3) else caught-fail) in
    {96}let client_wkad: bitstring = (if v_5 then catch-fail(hmac(h_alg_1,client_ats,x_3)) else caught-fail) in
    {97}let v_6: bool = not-caught-fail(client_wkad) in
    {99}let h_4: bitstring = (if v_6 then zero else caught-fail) in
    {98}let l_4: label = (if v_6 then tls13_key else caught-fail) in
    {100}let x_4: bitstring = (if v_6 then (l_4,h_4) else caught-fail) in
    {101}let server_wkad: bitstring = (if v_6 then catch-fail(hmac(h_alg_1,server_ats,x_4)) else caught-fail) in
    {102}let v_7: bool = not-caught-fail(server_wkad) in
    {104}let h_5: bitstring = (if v_7 then zero else caught-fail) in
    {103}let l_5: label = (if v_7 then tls13_finished else caught-fail) in
    {105}let x_5: bitstring = (if v_7 then (l_5,h_5) else caught-fail) in
    {106}let client_fkad: bitstring = (if v_7 then catch-fail(hmac(h_alg_1,client_ats,x_5)) else caught-fail) in
    {107}let v_8: bool = not-caught-fail(client_fkad) in
    {108}let (cak: aead_key,sak: aead_key,cfkad: mac_key,ems_1: bitstring) = (if v_1 then (if v_3 then (if v_5 then (if v_6 then (if v_7 then (if v_8 then (client_wkad,server_wkad,client_fkad,ems) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
    {109}let cur_log_CFIN: bitstring = (cur_log,fin_msg) in
    {111}let h_6: bitstring = catch-fail(hash(h_alg_1,cur_log_CFIN)) in
    {112}let v_9: bool = not-caught-fail(h_6) in
    {110}let l_6: label = tls13_resumption_master_secret in
    {113}let x_6: bitstring = (if v_9 then (l_6,h_6) else caught-fail) in
    {114}let rms: bitstring = (if v_9 then hmac(h_alg_1,master_secret,x_6) else fail-any) in
    {115}event Server_cak(id_server,cak);
    {116}event Server_sak(id_server,sak);
    {117}event Server_cfkad(id_server,cfkad);
    {118}event Server_rms(id_server,rms);
    {119}event ServerFinished(id_server,cr,sr,psk_1,s_pkey,c_pkey,cak,sak,ems_1,rms);
    (
        0
    ) | (
        0
    ) | (
        {120}!
        {121}in(io, (seq_srv: nat,seq_client: nat));
        {122}if (is_nat(seq_srv) && is_nat(seq_client)) then
        {123}new req_rand: bitstring;
        {124}event ServerRequestPH(id_server,cr,sr,psk_1,s_pkey,c_pkey,req_rand);
        {127}new st_1[]: stamp;
        {128}event ServerSequenceServerDataWriteKey(id_server,st_1,seq_srv);
        {125}let crtr_msg: msg = CRTR(req_rand) in
        {129}event ServerSends(id_server,cr,sr,psk_1,s_pkey,c_pkey,seq_srv,zero,crtr_msg);
        {126}let enc_crt: bitstring = aead_enc(a_alg,sak,seq_srv,zero,crtr_msg) in
        {130}out(io, enc_crt);
        {132}in(io, enc_cert_msg: bitstring);
        {133}let cert_msg: msg = aead_dec(a_alg,cak,seq_client,zero,enc_cert_msg) in
        {134}new st1_1[]: stamp;
        {135}event ServerSequenceClientDataWriteKey(id_server,st1_1,seq_client);
        {136}event ServerReceives(id_server,cr,sr,psk_1,s_pkey,c_pkey,seq_client,zero,cert_msg);
        {137}let CRT(=req_rand,crt_2: certificate) = cert_msg in
        {139}in(io, enc_cert_verif_msg: bitstring);
        {140}let cert_verify_msg: msg = aead_dec(a_alg,cak,seq_client + 1,zero,enc_cert_verif_msg) in
        {141}new st2[]: stamp;
        {142}event ServerSequenceClientDataWriteKey(id_server,st2,seq_client + 1);
        {143}event ServerReceives(id_server,cr,sr,psk_1,s_pkey,c_pkey,seq_client + 1,zero,cert_verify_msg);
        {144}let CV(signed_log: bitstring) = cert_verify_msg in
        {131}let cur_log_CRTR: bitstring = (cur_log_CFIN,crtr_msg) in
        {138}let cur_log_CRT: bitstring = (cur_log_CRTR,cert_msg) in
        {145}if (verify(get_pkey(crt_2),hash(h_alg_1,cur_log_CRT),signed_log) && verify_cert(crt_2)) then
        {146}let c_pkey': pubkey = get_pkey(crt_2) in
        {148}in(io, enc_fin_1: bitstring);
        {149}let fin_msg_1: msg = aead_dec(a_alg,cak,seq_client + 2,zero,enc_fin_1) in
        {150}new st3[]: stamp;
        {151}event ServerSequenceClientDataWriteKey(id_server,st3,seq_client + 2);
        {152}event ServerReceives(id_server,cr,sr,psk_1,s_pkey,c_pkey,seq_client + 2,zero,fin_msg_1);
        {153}let FIN(hash_msg_1: bitstring) = fin_msg_1 in
        {147}let cur_log_CV: bitstring = (cur_log_CRT,cert_verify_msg) in
        {154}if (hash_msg_1 = hmac(h_alg_1,cfkad,cur_log_CV)) then
            {155}event ServerFinishedPH(id_server,cr,sr,psk_1,s_pkey,c_pkey,req_rand,c_pkey')
        else
            {156}out(io, handshake_failure)
    )
) | (
    {157}!
    {158}in(ch_server_FIN, (id_server_1: idProc,ArgsServerFIN(cr_1: bytes32,sr_1: bytes32,h_alg_2: hash_alg,a_alg_1: aead_alg,s_dom_4: domain,s_pkey_1: pubkey,req_cert: bool,psk_2: preSharedKey,master_secret_1: bitstring,chk_1: aead_key,c_seq_1: nat,shk: aead_key,s_seq: nat,cfin_1: mac_key,sfin: mac_key,cur_log_1: bitstring)));
    {159}new st_2[]: stamp;
    {160}event PreciseIdProcess(ch_server_FIN,id_server_1,st_2);
    {161}event Server_Rand_client(id_server_1,cr_1);
    {162}event Server_Rand_server(id_server_1,sr_1);
    {163}event Server_PSKChoosen(id_server_1,psk_2);
    {164}event Server_chk(id_server_1,chk_1);
    {165}event Server_shk(id_server_1,shk);
    {166}event Server_cfin(id_server_1,cfin_1);
    {167}event Server_sfin(id_server_1,sfin);
    {168}event Server_Cert_server(id_server_1,s_pkey_1);
    {169}new st1_2[]: stamp;
    {170}event PreciseMess(ch_server_FIN,id_server_1,st1_2,(chk_1,shk,master_secret_1));
    {171}let hash_msg_2: bitstring = hmac(h_alg_2,sfin,cur_log_1) in
    {174}event PreServerFinished(id_server_1,cr_1,sr_1,psk_2,s_pkey_1);
    {172}let finished_msg: msg = FIN(hash_msg_2) in
    {173}let enc_finished: bitstring = aead_enc(a_alg_1,shk,s_seq,zero,finished_msg) in
    {175}out(io, enc_finished);
    {176}let cur_log_FIN: bitstring = (cur_log_1,finished_msg) in
    {177}if (req_cert && (psk_2 = NoPsk)) then
    (
        {178}in(io, enc_cert_msg_1: bitstring);
        {179}let cert_msg_1: msg = aead_dec(a_alg_1,chk_1,c_seq_1,zero,enc_cert_msg_1) in
        {180}let CRT(=zero,crt_3: certificate) = cert_msg_1 in
        {182}in(io, enc_cert_verif_msg_1: bitstring);
        {183}let cert_verify_msg_1: msg = aead_dec(a_alg_1,chk_1,c_seq_1 + 1,zero,enc_cert_verif_msg_1) in
        {184}let CV(signed_log_1: bitstring) = cert_verify_msg_1 in
        {181}let cur_log_CRT_1: bitstring = (cur_log_FIN,cert_msg_1) in
        {185}if (verify(get_pkey(crt_3),hash(h_alg_2,cur_log_CRT_1),signed_log_1) && verify_cert(crt_3)) then
        {186}let c_pkey_1: pubkey = get_pkey(crt_3) in
        {188}event Server_Cert_client(id_server_1,c_pkey_1);
        {187}let cur_log_CV_1: bitstring = (cur_log_CRT_1,cert_verify_msg_1) in
        {189}out(ch_server_CFIN, (id_server_1,ArgsServerCFIN(cr_1,sr_1,h_alg_2,a_alg_1,s_dom_4,s_pkey_1,c_pkey_1,psk_2,master_secret_1,chk_1,c_seq_1 + 2,cfin_1,cur_log_CV_1)))
    )
    else
        {190}event Server_Cert_client(id_server_1,NoPubKey);
        {191}out(ch_server_CFIN, (id_server_1,ArgsServerCFIN(cr_1,sr_1,h_alg_2,a_alg_1,s_dom_4,s_pkey_1,NoPubKey,psk_2,master_secret_1,chk_1,c_seq_1,cfin_1,cur_log_FIN)))
) | (
    {192}!
    {193}in(ch_server_CRT, (id_server_2: idProc,ArgsServerCRT(cr_2: bytes32,sr_2: bytes32,h_alg_3: hash_alg,a_alg_2: aead_alg,s_dom_5: domain,req_cert_1: bool,master_secret_2: bitstring,chk_2: aead_key,c_seq_2: nat,shk_1: aead_key,s_seq_1: nat,cfin_2: mac_key,sfin_1: mac_key,cur_log_2: bitstring)));
    {194}new st_3[]: stamp;
    {195}event PreciseIdProcess(ch_server_CRT,id_server_2,st_3);
    {196}event Server_Rand_client(id_server_2,cr_2);
    {197}event Server_Rand_server(id_server_2,sr_2);
    {198}event Server_PSKChoosen(id_server_2,NoPsk);
    {199}event Server_chk(id_server_2,chk_2);
    {200}event Server_shk(id_server_2,shk_1);
    {201}event Server_cfin(id_server_2,cfin_2);
    {202}event Server_sfin(id_server_2,sfin_1);
    {203}new st1_3[]: stamp;
    {204}event PreciseMess(ch_server_CRT,id_server_2,st1_3,(master_secret_2,chk_2,shk_1));
    {222}get long_term_keys(s_dom': domain,sk: privkey,s_pkey_2: pubkey,crt_4: certificate,idP_1: idProc) in
    {206}new @3_st[]: stamp;
    {205}let @3_x: bitstring = (s_dom',sk,s_pkey_2,crt_4,idP_1) in
    {207}event PreciseInput(@3_st,@3_x);
    {208}let () = () in
    {209}event Selected_ltk(s_dom_5,s_dom',idP_1);
    {210}let (sk_1: privkey,s_pkey_3: pubkey,crt_5: certificate) = (sk,s_pkey_2,crt_4) in
    {211}event Server_Cert_server(id_server_2,s_pkey_3);
    {212}let certificate_msg: msg = CRT(zero,crt_5) in
    {213}let encrypted_certificate_msg: bitstring = aead_enc(a_alg_2,shk_1,s_seq_1,zero,certificate_msg) in
    {214}out(io, encrypted_certificate_msg);
    {215}let cur_log_CRT_2: bitstring = (cur_log_2,certificate_msg) in
    {216}let signed_log_2: bitstring = sign(sk_1,hash(h_alg_3,cur_log_CRT_2)) in
    {217}let certificate_verify_msg: msg = CV(signed_log_2) in
    {218}let encrypted_certificate_verify_msg: bitstring = aead_enc(a_alg_2,shk_1,s_seq_1 + 1,zero,certificate_verify_msg) in
    {219}out(io, encrypted_certificate_verify_msg);
    {220}let cur_log_CV_2: bitstring = (cur_log_CRT_2,certificate_verify_msg) in
    {221}out(ch_server_FIN, (id_server_2,ArgsServerFIN(cr_2,sr_2,h_alg_3,a_alg_2,s_dom_5,s_pkey_3,req_cert_1,NoPsk,master_secret_2,chk_2,c_seq_2,shk_1,s_seq_1 + 2,cfin_2,sfin_1,cur_log_CV_2)))
) | (
    {223}!
    {224}in(ch_server_SH, (id_server_3: idProc,ArgsServerSH(tls_g: group,tls_h: hash_alg,tls_a: aead_alg,s_dom_6: domain,req_cert_2: bool,is_backend: bool,use_psk: bool,no_HRR: bool,ee_msg: msg,client_hello: msg,cur_log_3: bitstring)));
    {225}new st_4[]: stamp;
    {226}event PreciseMess(ch_server_SH,id_server_3,st_4,(use_psk,client_hello));
    {227}let CH(cr_3: bytes32,offer: params) = client_hello in
    {228}event Server_Rand_client(id_server_3,cr_3);
    {229}let nego(=TLS13,=tls_h,=tls_a,client_kex_ext(DHE_kex(=tls_g,gx_1: element)),sni_ext: sniExt,ech_ext: echExt,extra_ext: extraExt,psk_ext: preSharedKeyExt) = offer in
    (
        {230}if (sni_ext = SNI(s_dom_6)) then
        (
            {231}event Server_DH_client(id_server_3,gx_1);
            {232}let v_10: msg = client_hello in
            {233}let v_11: bool = (((TLS13 =nf 1-proj-nego(2-proj-CH(v_10))) && success?(1-proj-nego(2-proj-CH(v_10)))) && success?(1-proj-CH(v_10))) in
            {234}let psk_ext_1: preSharedKeyExt = (if v_11 then 8-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {235}let extra_ext_1: extraExt = (if v_11 then 7-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {236}let ech_ext_1: echExt = (if v_11 then 6-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {237}let sni_ext_1: sniExt = (if v_11 then 5-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {238}let kex_ext: keyShareExt = (if v_11 then 4-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {239}let a_alg_3: aead_alg = (if v_11 then 3-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {240}let h_alg_4: hash_alg = (if v_11 then 2-proj-nego(2-proj-CH(v_10)) else caught-fail) in
            {241}let cr_4: bytes32 = (if v_11 then 1-proj-CH(v_10) else caught-fail) in
            {242}let v_12: bitstring = (if v_11 then catch-fail((use_psk,psk_ext_1)) else caught-fail) in
            {243}let v_13: bool = (not-caught-fail(v_12) && (((true =nf 1-proj-2-tuple(v_12)) && success?(1-proj-client_psk_ext(2-proj-2-tuple(v_12)))) && success?(1-proj-2-tuple(v_12)))) in
            {244}let binders: bitstring = (if v_13 then 2-proj-client_psk_ext(2-proj-2-tuple(v_12)) else caught-fail) in
            {245}let id_3: identityPsk = (if v_13 then 1-proj-client_psk_ext(2-proj-2-tuple(v_12)) else caught-fail) in
            {246}let v_14: bitstring = (if v_13 then catch-fail((get_server_psk(id_3),get_hash_psk(id_3))) else caught-fail) in
            {247}let v_15: bool = (not-caught-fail(v_14) && (((s_dom_6 =nf 1-proj-2-tuple(v_14)) && (h_alg_4 =nf 2-proj-2-tuple(v_14))) && success?(1-proj-2-tuple(v_14)))) in
            {248}let psk_3: preSharedKey = (if v_15 then catch-fail(get_psk(id_3)) else caught-fail) in
            {249}let v_16: bool = not-caught-fail(psk_3) in
            {251}let k: bitstring = (if v_16 then catch-fail(psk2b(psk_3)) else caught-fail) in
            {252}let v_17: bool = not-caught-fail(k) in
            {250}let s_3: bitstring = (if v_16 then zero else caught-fail) in
            {253}let early_secret: bitstring = (if v_16 then catch-fail((if v_17 then hmac(h_alg_4,s_3,k) else fail-any)) else caught-fail) in
            {254}let v_18: bool = not-caught-fail(early_secret) in
            {256}let m: bitstring = (if v_18 then zero else caught-fail) in
            {257}let h_7: bitstring = (if v_18 then catch-fail(hash(h_alg_4,m)) else caught-fail) in
            {258}let v_19: bool = not-caught-fail(h_7) in
            {255}let l_7: label = (if v_18 then tls13_ext_res_binder else caught-fail) in
            {259}let x_7: bitstring = (if v_19 then (l_7,h_7) else caught-fail) in
            {260}let binder_key: bitstring = (if v_18 then catch-fail((if v_19 then hmac(h_alg_4,early_secret,x_7) else fail-any)) else caught-fail) in
            {261}let v_20: bool = not-caught-fail(binder_key) in
            {262}let v_21: bitstring = (if v_16 then catch-fail((if v_18 then (if v_20 then (early_secret,binder_key) else fail-any) else fail-any)) else caught-fail) in
            {263}let v_22: bool = (not-caught-fail(v_21) && success?(1-proj-2-tuple(v_21))) in
            {264}let kb: mac_key = (if v_22 then 2-proj-2-tuple(v_21) else caught-fail) in
            {265}let early_secret_1: bitstring = (if v_22 then 1-proj-2-tuple(v_21) else caught-fail) in
            {268}let v_23: bool = (v_13 && not(v_15)) in
            {269}let psk_4: preSharedKey = (if v_23 then NoPsk else caught-fail) in
            {271}let k_1: bitstring = (if v_23 then catch-fail(psk2b(psk_4)) else caught-fail) in
            {272}let v_24: bool = not-caught-fail(k_1) in
            {270}let s_4: bitstring = (if v_23 then zero else caught-fail) in
            {273}let early_secret_2: bitstring = (if v_23 then catch-fail((if v_24 then hmac(h_alg_4,s_4,k_1) else fail-any)) else caught-fail) in
            {274}let v_25: bool = not-caught-fail(early_secret_2) in
            {276}let m_1: bitstring = (if v_25 then zero else caught-fail) in
            {277}let h_8: bitstring = (if v_25 then catch-fail(hash(h_alg_4,m_1)) else caught-fail) in
            {278}let v_26: bool = not-caught-fail(h_8) in
            {275}let l_8: label = (if v_25 then tls13_ext_res_binder else caught-fail) in
            {279}let x_8: bitstring = (if v_26 then (l_8,h_8) else caught-fail) in
            {280}let binder_key_1: bitstring = (if v_25 then catch-fail((if v_26 then hmac(h_alg_4,early_secret_2,x_8) else fail-any)) else caught-fail) in
            {281}let v_27: bool = not-caught-fail(binder_key_1) in
            {282}let v_28: bitstring = (if v_23 then catch-fail((if v_25 then (if v_27 then (early_secret_2,binder_key_1) else fail-any) else fail-any)) else caught-fail) in
            {283}let v_29: bool = (not-caught-fail(v_28) && success?(1-proj-2-tuple(v_28))) in
            {284}let kb_1: mac_key = (if v_29 then 2-proj-2-tuple(v_28) else caught-fail) in
            {285}let es: bitstring = (if v_29 then 1-proj-2-tuple(v_28) else caught-fail) in
            {286}let v_30: bool = (v_11 && not(v_13)) in
            {287}let psk_5: preSharedKey = (if v_30 then NoPsk else caught-fail) in
            {289}let k_2: bitstring = (if v_30 then catch-fail(psk2b(psk_5)) else caught-fail) in
            {290}let v_31: bool = not-caught-fail(k_2) in
            {288}let s_5: bitstring = (if v_30 then zero else caught-fail) in
            {291}let early_secret_3: bitstring = (if v_30 then catch-fail((if v_31 then hmac(h_alg_4,s_5,k_2) else fail-any)) else caught-fail) in
            {292}let v_32: bool = not-caught-fail(early_secret_3) in
            {294}let m_2: bitstring = (if v_32 then zero else caught-fail) in
            {295}let h_9: bitstring = (if v_32 then catch-fail(hash(h_alg_4,m_2)) else caught-fail) in
            {296}let v_33: bool = not-caught-fail(h_9) in
            {293}let l_9: label = (if v_32 then tls13_ext_res_binder else caught-fail) in
            {297}let x_9: bitstring = (if v_33 then (l_9,h_9) else caught-fail) in
            {298}let binder_key_2: bitstring = (if v_32 then catch-fail((if v_33 then hmac(h_alg_4,early_secret_3,x_9) else fail-any)) else caught-fail) in
            {299}let v_34: bool = not-caught-fail(binder_key_2) in
            {300}let v_35: bitstring = (if v_30 then catch-fail((if v_32 then (if v_34 then (early_secret_3,binder_key_2) else fail-any) else fail-any)) else caught-fail) in
            {301}let v_36: bool = (not-caught-fail(v_35) && success?(1-proj-2-tuple(v_35))) in
            {302}let kb_2: mac_key = (if v_36 then 2-proj-2-tuple(v_35) else caught-fail) in
            {303}let es_1: bitstring = (if v_36 then 1-proj-2-tuple(v_35) else caught-fail) in
            {266}let offer_1: params = (if v_22 then nego(TLS13,h_alg_4,a_alg_3,kex_ext,sni_ext_1,ech_ext_1,extra_ext_1,trunc_client_psk_ext(id_3)) else caught-fail) in
            {267}let cur_log': bitstring = (if v_22 then (cur_log_3,CH(cr_4,offer_1)) else caught-fail) in
            {304}let (early_secret_4: bitstring,s_psk_ext: preSharedKeyExt,psk_6: preSharedKey) = (if v_11 then (if v_13 then (if v_15 then (if v_16 then (if v_22 then (if (binders = hmac(h_alg_4,kb,cur_log')) then (early_secret_1,server_psk_ext(1),psk_3) else fail-any) else fail-any) else fail-any) else (if v_29 then (es,empty_psk_ext,NoPsk) else fail-any)) else (if v_36 then (es_1,empty_psk_ext,NoPsk) else fail-any)) else fail-any) in
            {305}event Server_PSKChoosen(id_server_3,psk_6);
            {306}let cur_log_CH: bitstring = (cur_log_3,client_hello) in
            (
                {307}if (false && (no_HRR && (psk_6 ≠ NoPsk))) then
                {308}!
                {309}in(io, (i: nat,ad: bitstring,enc_early_data: bitstring));
                {311}let h_10: bitstring = catch-fail(hash(tls_h,cur_log_CH)) in
                {312}let v_37: bool = not-caught-fail(h_10) in
                {310}let l_10: label = tls13_client_early_traffic_secret in
                {313}let x_10: bitstring = (if v_37 then (l_10,h_10) else caught-fail) in
                {314}let atsc0: bitstring = catch-fail((if v_37 then hmac(tls_h,early_secret_4,x_10) else fail-any)) in
                {315}let v_38: bool = not-caught-fail(atsc0) in
                {317}let h_11: bitstring = (if v_38 then zero else caught-fail) in
                {316}let l_11: label = (if v_38 then tls13_key else caught-fail) in
                {318}let x_11: bitstring = (if v_38 then (l_11,h_11) else caught-fail) in
                {319}let kc0: bitstring = (if v_38 then catch-fail(hmac(tls_h,atsc0,x_11)) else caught-fail) in
                {320}let v_39: bool = not-caught-fail(kc0) in
                {322}let h_12: bitstring = (if v_39 then catch-fail(hash(tls_h,cur_log_CH)) else caught-fail) in
                {323}let v_40: bool = not-caught-fail(h_12) in
                {321}let l_12: label = (if v_39 then tls13_early_exporter_master_secret else caught-fail) in
                {324}let x_12: bitstring = (if v_40 then (l_12,h_12) else caught-fail) in
                {325}let ems0: bitstring = (if v_39 then catch-fail((if v_40 then hmac(tls_h,early_secret_4,x_12) else fail-any)) else caught-fail) in
                {326}let v_41: bool = not-caught-fail(ems0) in
                {327}let (wkc0: aead_key,ems0_1: bitstring) = (if v_38 then (if v_39 then (if v_41 then (kc0,ems0) else fail-any) else fail-any) else fail-any) in
                {328}let early_data: bitstring = aead_dec(tls_a,wkc0,i,ad,enc_early_data) in
                    {329}new st1_4[]: stamp;
                    {330}event ServerSequenceClient0RTTDataWriteKey(id_server_3,st1_4,i);
                    {331}event ServerReceives0(id_server_3,s_dom_6,cr_3,psk_6,i,ad,early_data)
                else
                    {332}out(io, bad_record_mac)
            ) | (
                {333}new s_6[]: seed;
                {334}let (gxy: element,gy: element) = (dh_xy(s_6,client_hello),dh_encap_fun(tls_g,gx_1,dh_xy(s_6,client_hello))) in
                {335}event Server_DH_server(id_server_3,gy);
                {336}event Server_DH_gxy(id_server_3,gxy);
                {338}let m_3: bitstring = catch-fail(hash(tls_h,zero)) in
                {339}let v_42: bool = not-caught-fail(m_3) in
                {340}let h_13: bitstring = (if v_42 then catch-fail(hash(tls_h,m_3)) else caught-fail) in
                {341}let v_43: bool = not-caught-fail(h_13) in
                {337}let l_13: label = tls13_derived in
                {342}let x_13: bitstring = (if v_43 then (l_13,h_13) else caught-fail) in
                {343}let extra: bitstring = catch-fail((if v_42 then (if v_43 then hmac(tls_h,early_secret_4,x_13) else fail-any) else fail-any)) in
                {344}let v_44: bool = not-caught-fail(extra) in
                {345}let handshake_secret: bitstring = (if v_44 then hmac(tls_h,extra,gxy) else fail-any) in
                {348}new sr24[]: bytes24;
                {363}new rand24[]: bytes24;
                {364}new rand8[]: bytes8;
                {347}let v_45: bool = is_backend in
                {349}let sr24_1: bytes24 = (if v_45 then sr24 else caught-fail) in
                {346}let s_offer: params = nego(TLS13,tls_h,tls_a,server_kex_ext(DHE_kex(tls_g,gy)),empty_sni_ext,empty_ech_ext,empty_extra_ext,s_psk_ext) in
                {350}let sh_modified: msg = (if v_45 then SH(B32(sr24_1,zero8),s_offer) else caught-fail) in
                {351}let cur_log_sh: bitstring = (if v_45 then (cur_log_CH,sh_modified) else caught-fail) in
                {352}let transcript_ech_conf: bitstring = (if v_45 then catch-fail(hash(tls_h,cur_log_sh)) else caught-fail) in
                {353}let v_46: bool = not-caught-fail(transcript_ech_conf) in
                {355}let k_3: bitstring = (if v_46 then catch-fail(b32_2_b(get_random(client_hello))) else caught-fail) in
                {356}let v_47: bool = not-caught-fail(k_3) in
                {354}let s_7: bitstring = (if v_46 then zero else caught-fail) in
                {357}let k_4: bitstring = (if v_46 then catch-fail((if v_47 then hmac(tls_h,s_7,k_3) else fail-any)) else caught-fail) in
                {358}let v_48: bool = not-caught-fail(k_4) in
                {359}let l_14: label = (if v_48 then ech_accept_confirmation else caught-fail) in
                {360}let x_14: bitstring = (if v_48 then (l_14,cur_log_sh) else caught-fail) in
                {361}let sr8: bytes8 = (if v_46 then catch-fail(crop_into_bytes8((if v_48 then hmac(tls_h,k_4,x_14) else fail-any))) else caught-fail) in
                {362}let v_49: bool = not-caught-fail(sr8) in
                {365}let sr_3: bytes32 = (if v_45 then (if v_46 then (if v_49 then B32(sr24_1,sr8) else fail-any) else fail-any) else B32(rand24,rand8)) in
                {367}event Server_Rand_server(id_server_3,sr_3);
                {368}event ServerChoosesGroup(id_server_3,tls_g);
                {369}event ServerChoosesHash(cr_3,sr_3,tls_h);
                {370}event ServerChoosesAead(cr_3,sr_3,tls_a);
                {366}let server_hello: msg = SH(sr_3,s_offer) in
                {371}out(io, server_hello);
                {374}let m_4: bitstring = catch-fail(hash(tls_h,zero)) in
                {375}let v_50: bool = not-caught-fail(m_4) in
                {376}let h_14: bitstring = (if v_50 then catch-fail(hash(tls_h,m_4)) else caught-fail) in
                {377}let v_51: bool = not-caught-fail(h_14) in
                {373}let l_15: label = tls13_derived in
                {378}let x_15: bitstring = (if v_51 then (l_15,h_14) else caught-fail) in
                {379}let extra_1: bitstring = catch-fail((if v_50 then (if v_51 then hmac(tls_h,handshake_secret,x_15) else fail-any) else fail-any)) in
                {380}let v_52: bool = not-caught-fail(extra_1) in
                {381}let k_5: bitstring = (if v_52 then zero else caught-fail) in
                {382}let master_secret_3: bitstring = (if v_52 then catch-fail(hmac(tls_h,handshake_secret,k_5)) else caught-fail) in
                {383}let v_53: bool = not-caught-fail(master_secret_3) in
                {372}let cur_log_SH: bitstring = (cur_log_CH,server_hello) in
                {385}let h_15: bitstring = (if v_53 then catch-fail(hash(tls_h,cur_log_SH)) else caught-fail) in
                {386}let v_54: bool = not-caught-fail(h_15) in
                {384}let l_16: label = (if v_53 then tls13_client_handshake_traffic_secret else caught-fail) in
                {387}let x_16: bitstring = (if v_54 then (l_16,h_15) else caught-fail) in
                {388}let client_hts: bitstring = (if v_53 then catch-fail((if v_54 then hmac(tls_h,handshake_secret,x_16) else fail-any)) else caught-fail) in
                {389}let v_55: bool = not-caught-fail(client_hts) in
                {391}let h_16: bitstring = (if v_55 then catch-fail(hash(tls_h,cur_log_SH)) else caught-fail) in
                {392}let v_56: bool = not-caught-fail(h_16) in
                {390}let l_17: label = (if v_55 then tls13_server_handshake_traffic_secret else caught-fail) in
                {393}let x_17: bitstring = (if v_56 then (l_17,h_16) else caught-fail) in
                {394}let server_hts: bitstring = (if v_55 then catch-fail((if v_56 then hmac(tls_h,handshake_secret,x_17) else fail-any)) else caught-fail) in
                {395}let v_57: bool = not-caught-fail(server_hts) in
                {397}let h_17: bitstring = (if v_57 then zero else caught-fail) in
                {396}let l_18: label = (if v_57 then tls13_key else caught-fail) in
                {398}let x_18: bitstring = (if v_57 then (l_18,h_17) else caught-fail) in
                {399}let client_wkh: bitstring = (if v_57 then catch-fail(hmac(tls_h,client_hts,x_18)) else caught-fail) in
                {400}let v_58: bool = not-caught-fail(client_wkh) in
                {402}let h_18: bitstring = (if v_58 then zero else caught-fail) in
                {401}let l_19: label = (if v_58 then tls13_key else caught-fail) in
                {403}let x_19: bitstring = (if v_58 then (l_19,h_18) else caught-fail) in
                {404}let server_wkh: bitstring = (if v_58 then catch-fail(hmac(tls_h,server_hts,x_19)) else caught-fail) in
                {405}let v_59: bool = not-caught-fail(server_wkh) in
                {407}let h_19: bitstring = (if v_59 then zero else caught-fail) in
                {406}let l_20: label = (if v_59 then tls13_finished else caught-fail) in
                {408}let x_20: bitstring = (if v_59 then (l_20,h_19) else caught-fail) in
                {409}let client_fk: bitstring = (if v_59 then catch-fail(hmac(tls_h,client_hts,x_20)) else caught-fail) in
                {410}let v_60: bool = not-caught-fail(client_fk) in
                {412}let h_20: bitstring = (if v_60 then zero else caught-fail) in
                {411}let l_21: label = (if v_60 then tls13_finished else caught-fail) in
                {413}let x_21: bitstring = (if v_60 then (l_21,h_20) else caught-fail) in
                {414}let server_fk: bitstring = (if v_60 then catch-fail(hmac(tls_h,server_hts,x_21)) else caught-fail) in
                {415}let v_61: bool = not-caught-fail(server_fk) in
                {416}let (master_secret_4: bitstring,chk_3: aead_key,shk_2: aead_key,cfin_3: mac_key,sfin_2: mac_key) = (if v_52 then (if v_53 then (if v_55 then (if v_57 then (if v_58 then (if v_59 then (if v_60 then (if v_61 then (master_secret_3,client_wkh,server_wkh,client_fk,server_fk) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                {417}event Server_chk(id_server_3,chk_3);
                {418}event Server_shk(id_server_3,shk_2);
                {419}event Server_cfin(id_server_3,cfin_3);
                {420}event Server_sfin(id_server_3,sfin_2);
                {421}let enc_ee: bitstring = aead_enc(tls_a,shk_2,0,zero,ee_msg) in
                {422}out(io, enc_ee);
                {423}let cur_log_EE: bitstring = (cur_log_SH,ee_msg) in
                {424}if (psk_6 = NoPsk) then
                (
                    {425}if req_cert_2 then
                    (
                        {426}let crtr_msg_1: msg = CRTR(zero) in
                        {427}let enc_crt_1: bitstring = aead_enc(tls_a,shk_2,1,zero,crtr_msg_1) in
                        {428}out(io, enc_crt_1);
                        {429}let cur_log_CRTR_1: bitstring = (cur_log_EE,crtr_msg_1) in
                        {430}out(ch_server_CRT, (id_server_3,ArgsServerCRT(cr_3,sr_3,tls_h,tls_a,s_dom_6,req_cert_2,master_secret_4,chk_3,0,shk_2,2,cfin_3,sfin_2,cur_log_CRTR_1)))
                    )
                    else
                        {431}out(ch_server_CRT, (id_server_3,ArgsServerCRT(cr_3,sr_3,tls_h,tls_a,s_dom_6,req_cert_2,master_secret_4,chk_3,0,shk_2,1,cfin_3,sfin_2,cur_log_EE)))
                )
                else
                    {432}out(ch_server_FIN, (id_server_3,ArgsServerFIN(cr_3,sr_3,tls_h,tls_a,s_dom_6,NoPubKey,false,psk_6,master_secret_4,chk_3,0,shk_2,1,cfin_3,sfin_2,cur_log_EE)))
            )
        )
        else
            {433}out(io, illegal_parameter)
    )
    else
        {434}out(io, handshake_failure)
) | (
    {435}!
    {436}in(ch_client_CFIN, (id_client: idProc,ArgsClientCFIN(cr_5: bytes32,sr_4: bytes32,h_alg_5: hash_alg,a_alg_4: aead_alg,c_dom_1: domain,s_dom_7: domain,s_pkey_4: pubkey,c_pkey_2: pubkey,psk_7: preSharedKey,safe_psk: bool,comp_psk: bool,master_secret_5: bitstring,chk_4: aead_key,seq_client_1: nat,shk_3: aead_key,seq_srv_1: nat,cfin_4: mac_key,sfin_3: mac_key,cur_log_4: bitstring)));
    {437}new st_5[]: stamp;
    {438}event PreciseIdProcess(ch_client_CFIN,id_client,st_5);
    {439}event Client_server_domain(id_client,s_dom_7);
    {440}event Client_Rand_client(id_client,cr_5);
    {441}event Client_Rand_server(id_client,sr_4);
    {442}event Client_PSKChoosen(id_client,psk_7,safe_psk);
    {443}event Client_comp_psk(id_client,comp_psk);
    {444}event Client_chk(id_client,chk_4);
    {445}event Client_shk(id_client,shk_3);
    {446}event Client_cfin(id_client,cfin_4);
    {447}event Client_sfin(id_client,sfin_3);
    {448}event Client_Cert_server(id_client,s_pkey_4);
    {449}event Client_Cert_client(id_client,c_pkey_2);
    {450}new st1_5[]: stamp;
    {451}let args: bitstring = (c_dom_1,s_dom_7,psk_7,s_pkey_4,master_secret_5,safe_psk,comp_psk,cur_log_4) in
    {452}event PreciseMess(ch_client_CFIN,id_client,st1_5,args);
    {454}let h_21: bitstring = catch-fail(hash(h_alg_5,cur_log_4)) in
    {455}let v_62: bool = not-caught-fail(h_21) in
    {453}let l_22: label = tls13_client_application_traffic_secret in
    {456}let x_22: bitstring = (if v_62 then (l_22,h_21) else caught-fail) in
    {457}let client_ats_1: bitstring = catch-fail((if v_62 then hmac(h_alg_5,master_secret_5,x_22) else fail-any)) in
    {458}let v_63: bool = not-caught-fail(client_ats_1) in
    {460}let h_22: bitstring = (if v_63 then catch-fail(hash(h_alg_5,cur_log_4)) else caught-fail) in
    {461}let v_64: bool = not-caught-fail(h_22) in
    {459}let l_23: label = (if v_63 then tls13_server_application_traffic_secret else caught-fail) in
    {462}let x_23: bitstring = (if v_64 then (l_23,h_22) else caught-fail) in
    {463}let server_ats_1: bitstring = (if v_63 then catch-fail((if v_64 then hmac(h_alg_5,master_secret_5,x_23) else fail-any)) else caught-fail) in
    {464}let v_65: bool = not-caught-fail(server_ats_1) in
    {466}let h_23: bitstring = (if v_65 then catch-fail(hash(h_alg_5,cur_log_4)) else caught-fail) in
    {467}let v_66: bool = not-caught-fail(h_23) in
    {465}let l_24: label = (if v_65 then tls13_exporter_master_secret else caught-fail) in
    {468}let x_24: bitstring = (if v_66 then (l_24,h_23) else caught-fail) in
    {469}let ems_2: bitstring = (if v_65 then catch-fail((if v_66 then hmac(h_alg_5,master_secret_5,x_24) else fail-any)) else caught-fail) in
    {470}let v_67: bool = not-caught-fail(ems_2) in
    {472}let h_24: bitstring = (if v_67 then zero else caught-fail) in
    {471}let l_25: label = (if v_67 then tls13_key else caught-fail) in
    {473}let x_25: bitstring = (if v_67 then (l_25,h_24) else caught-fail) in
    {474}let client_wkad_1: bitstring = (if v_67 then catch-fail(hmac(h_alg_5,client_ats_1,x_25)) else caught-fail) in
    {475}let v_68: bool = not-caught-fail(client_wkad_1) in
    {477}let h_25: bitstring = (if v_68 then zero else caught-fail) in
    {476}let l_26: label = (if v_68 then tls13_key else caught-fail) in
    {478}let x_26: bitstring = (if v_68 then (l_26,h_25) else caught-fail) in
    {479}let server_wkad_1: bitstring = (if v_68 then catch-fail(hmac(h_alg_5,server_ats_1,x_26)) else caught-fail) in
    {480}let v_69: bool = not-caught-fail(server_wkad_1) in
    {482}let h_26: bitstring = (if v_69 then zero else caught-fail) in
    {481}let l_27: label = (if v_69 then tls13_finished else caught-fail) in
    {483}let x_27: bitstring = (if v_69 then (l_27,h_26) else caught-fail) in
    {484}let client_fkad_1: bitstring = (if v_69 then catch-fail(hmac(h_alg_5,client_ats_1,x_27)) else caught-fail) in
    {485}let v_70: bool = not-caught-fail(client_fkad_1) in
    {486}let (cak_1: aead_key,sak_1: aead_key,cfkad_1: mac_key,ems_3: bitstring) = (if v_63 then (if v_65 then (if v_67 then (if v_68 then (if v_69 then (if v_70 then (client_wkad_1,server_wkad_1,client_fkad_1,ems_2) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
    {487}event Client_cak(id_client,cak_1);
    {488}event Client_sak(id_client,sak_1);
    {489}event Client_cfkad(id_client,cfkad_1);
    {490}let client_hash_msg: bitstring = hmac(h_alg_5,cfin_4,cur_log_4) in
    {491}let client_finished_msg: msg = FIN(client_hash_msg) in
    {492}let cur_log'_1: bitstring = (cur_log_4,client_finished_msg) in
    {494}let h_27: bitstring = catch-fail(hash(h_alg_5,cur_log'_1)) in
    {495}let v_71: bool = not-caught-fail(h_27) in
    {493}let l_28: label = tls13_resumption_master_secret in
    {496}let x_28: bitstring = (if v_71 then (l_28,h_27) else caught-fail) in
    {497}let rms_1: bitstring = (if v_71 then hmac(h_alg_5,master_secret_5,x_28) else fail-any) in
    {498}event Client_rms(id_client,rms_1);
    {500}event ClientFinished(id_client,cr_5,sr_4,psk_7,s_pkey_4,c_pkey_2,cak_1,sak_1,ems_3,rms_1);
    {499}let enc_client_finished_msg: bitstring = aead_enc(a_alg_4,chk_4,seq_client_1,zero,client_finished_msg) in
    {501}out(io, enc_client_finished_msg);
    (
        0
    ) | (
        0
    ) | (
        {502}!
        {503}in(io, (seq_srv_2: nat,seq_client_2: nat));
        {504}if (is_nat(seq_srv_2) && is_nat(seq_client_2)) then
        {505}in(io, enc_msg: bitstring);
        {506}let CRTR(rand_crt: bitstring) = aead_dec(a_alg_4,sak_1,seq_srv_2,zero,enc_msg) in
        {507}new st_6[]: stamp;
        {508}event ClientSequenceServerDataWriteKey(id_client,st_6,seq_srv_2);
        {509}event ClientReceives(id_client,cr_5,sr_4,psk_7,s_pkey_4,c_pkey_2,seq_srv_2,zero,CRTR(rand_crt));
        {539}get long_term_keys(c_dom': domain,sk_2: privkey,c_pkey'_1: pubkey,crt_6: certificate,idP_2: idProc) in
        {512}new @1_st[]: stamp;
        {511}let @1_x: bitstring = (c_dom',sk_2,c_pkey'_1,crt_6,idP_2) in
        {513}event PreciseInput(@1_st,@1_x);
        {514}let () = () in
        {515}event Selected_ltk(c_dom_1,c_dom',idP_2);
        {516}let (sk_3: privkey,c_pkey'_2: pubkey,crt_7: certificate) = (sk_2,c_pkey'_1,crt_6) in
        {519}new st1_6[]: stamp;
        {520}event ClientSequenceClientDataWriteKey(id_client,st1_6,seq_client_2);
        {517}let certificate_msg_1: msg = CRT(rand_crt,crt_7) in
        {521}event ClientSends(id_client,cr_5,sr_4,psk_7,s_pkey_4,c_pkey_2,seq_client_2,zero,certificate_msg_1);
        {518}let encrypted_certificate_msg_1: bitstring = aead_enc(a_alg_4,cak_1,seq_client_2,zero,certificate_msg_1) in
        {522}out(io, encrypted_certificate_msg_1);
        {510}let cur_log_CRTR_2: bitstring = (cur_log'_1,CRTR(rand_crt)) in
        {523}let cur_log_CRT_3: bitstring = (cur_log_CRTR_2,certificate_msg_1) in
        {524}let signed_log_3: bitstring = sign(sk_3,hash(h_alg_5,cur_log_CRT_3)) in
        {527}new st2_1[]: stamp;
        {528}event ClientSequenceClientDataWriteKey(id_client,st2_1,seq_client_2 + 1);
        {525}let certificate_verify_msg_1: msg = CV(signed_log_3) in
        {529}event ClientSends(id_client,cr_5,sr_4,psk_7,s_pkey_4,c_pkey_2,seq_client_2 + 1,zero,certificate_verify_msg_1);
        {526}let enc_verify_msg: bitstring = aead_enc(a_alg_4,cak_1,seq_client_2 + 1,zero,certificate_verify_msg_1) in
        {530}out(io, enc_verify_msg);
        {531}let cur_log_CV_3: bitstring = (cur_log_CRT_3,certificate_verify_msg_1) in
        {532}let hash_msg_3: bitstring = hmac(h_alg_5,cfkad_1,cur_log_CV_3) in
        {534}new st3_1[]: stamp;
        {535}event ClientSequenceClientDataWriteKey(id_client,st3_1,seq_client_2 + 2);
        {536}event ClientSends(id_client,cr_5,sr_4,psk_7,s_pkey_4,c_pkey_2,seq_client_2 + 2,zero,FIN(hash_msg_3));
        {537}event ClientFinishedPH(id_client,cr_5,sr_4,psk_7,s_pkey_4,c_pkey_2,rand_crt,c_pkey'_2);
        {533}let enc_fin_2: bitstring = aead_enc(a_alg_4,cak_1,seq_client_2 + 2,zero,FIN(hash_msg_3)) in
        {538}out(io, enc_fin_2)
    )
) | (
    {540}!
    {541}in(ch_client_FIN, (id_client_1: idProc,ArgsClientFIN(cr_6: bytes32,sr_5: bytes32,h_alg_6: hash_alg,a_alg_5: aead_alg,c_dom_2: domain,s_dom_8: domain,s_pkey_5: pubkey,cert_req: bool,psk_8: preSharedKey,safe_psk_1: bool,comp_psk_1: bool,master_secret_6: bitstring,chk_5: aead_key,seq_client_3: nat,shk_4: aead_key,seq_srv_3: nat,cfin_5: mac_key,sfin_4: mac_key,cur_log_5: bitstring)));
    {542}new st_7[]: stamp;
    {543}event PreciseIdProcess(ch_client_FIN,id_client_1,st_7);
    {544}event Client_server_domain(id_client_1,s_dom_8);
    {545}event Client_Rand_client(id_client_1,cr_6);
    {546}event Client_Rand_server(id_client_1,sr_5);
    {547}event Client_PSKChoosen(id_client_1,psk_8,safe_psk_1);
    {548}event Client_comp_psk(id_client_1,comp_psk_1);
    {549}event Client_chk(id_client_1,chk_5);
    {550}event Client_shk(id_client_1,shk_4);
    {551}event Client_cfin(id_client_1,cfin_5);
    {552}event Client_sfin(id_client_1,sfin_4);
    {553}event Client_Cert_server(id_client_1,s_pkey_5);
    {554}new st1_7[]: stamp;
    {555}event PreciseMess(ch_client_FIN,id_client_1,st1_7,(master_secret_6,s_pkey_5,psk_8,safe_psk_1,comp_psk_1));
    {556}in(io, enc_finished_msg: bitstring);
    {557}let finished_msg_1: msg = aead_dec(a_alg_5,shk_4,seq_srv_3,zero,enc_finished_msg) in
    (
        {558}let FIN(hash_msg_4: bitstring) = finished_msg_1 in
        (
            {559}if (hash_msg_4 = hmac(h_alg_6,sfin_4,cur_log_5)) then
            {560}let cur_log2: bitstring = (cur_log_5,finished_msg_1) in
            {561}if cert_req then
            (
                {580}get long_term_keys(c_dom'_1: domain,sk_4: privkey,c_pkey_3: pubkey,crt_8: certificate,idP_3: idProc) in
                {564}new @2_st[]: stamp;
                {563}let @2_x: bitstring = (c_dom'_1,sk_4,c_pkey_3,crt_8,idP_3) in
                {565}event PreciseInput(@2_st,@2_x);
                {566}let () = () in
                {567}event Selected_ltk(c_dom_2,c_dom'_1,idP_3);
                {568}let (sk_5: privkey,c_pkey_4: pubkey,crt_9: certificate) = (sk_4,c_pkey_3,crt_8) in
                {569}event Client_Cert_client(id_client_1,c_pkey_4);
                {570}let certificate_msg_2: msg = CRT(zero,crt_9) in
                {571}let encrypted_certificate_msg_2: bitstring = aead_enc(a_alg_5,chk_5,seq_client_3,zero,certificate_msg_2) in
                {572}out(io, encrypted_certificate_msg_2);
                {573}let cur_log2_1: bitstring = (cur_log2,certificate_msg_2) in
                {574}let signed_log_4: bitstring = sign(sk_5,hash(h_alg_6,cur_log2_1)) in
                {575}let certificate_verify_msg_2: msg = CV(signed_log_4) in
                {576}let encrypted_certificate_verify_msg_1: bitstring = aead_enc(a_alg_5,chk_5,seq_client_3 + 1,zero,certificate_verify_msg_2) in
                {577}out(io, encrypted_certificate_verify_msg_1);
                {578}let cur_log3: bitstring = (cur_log2_1,certificate_verify_msg_2) in
                {562}let seq_srv_4: nat = seq_srv_3 + 1 in
                {579}out(ch_client_CFIN, (id_client_1,ArgsClientCFIN(cr_6,sr_5,h_alg_6,a_alg_5,c_dom_2,s_dom_8,s_pkey_5,c_pkey_4,NoPsk,false,comp_psk_1,master_secret_6,chk_5,seq_client_3 + 2,shk_4,seq_srv_4,cfin_5,sfin_4,cur_log3)))
            )
            else
                {581}event Client_Cert_client(id_client_1,NoPubKey);
                {582}out(ch_client_CFIN, (id_client_1,ArgsClientCFIN(cr_6,sr_5,h_alg_6,a_alg_5,c_dom_2,s_dom_8,s_pkey_5,NoPubKey,psk_8,safe_psk_1,comp_psk_1,master_secret_6,chk_5,seq_client_3,shk_4,seq_srv_3 + 1,cfin_5,sfin_4,cur_log2)))
        )
        else
            {583}out(io, unexpected_message)
    )
    else
        {584}out(io, bad_record_mac)
) | (
    {585}!
    {586}in(ch_client_CRT, (id_client_2: idProc,ArgsClientCRT(cr_7: bytes32,sr_6: bytes32,h_alg_7: hash_alg,a_alg_6: aead_alg,c_dom_3: domain,s_dom_9: domain,cert_req_1: bool,certificate_msg_3: msg,comp_psk_2: bool,master_secret_7: bitstring,chk_6: aead_key,seq_client_4: nat,shk_5: aead_key,seq_srv_5: nat,cfin_6: mac_key,sfin_5: mac_key,cur_log_6: bitstring)));
    {587}new st_8[]: stamp;
    {588}event PreciseIdProcess(ch_client_CRT,id_client_2,st_8);
    {589}event Client_server_domain(id_client_2,s_dom_9);
    {590}event Client_Rand_client(id_client_2,cr_7);
    {591}event Client_Rand_server(id_client_2,sr_6);
    {592}event Client_comp_psk(id_client_2,comp_psk_2);
    {593}event Client_chk(id_client_2,chk_6);
    {594}event Client_shk(id_client_2,shk_5);
    {595}event Client_cfin(id_client_2,cfin_6);
    {596}event Client_sfin(id_client_2,sfin_5);
    {597}let CRT(=zero,crt_10: certificate) = certificate_msg_3 in
    {599}in(io, enc_crt_verif_msg: bitstring);
    {600}let certificate_verify_msg_3: msg = aead_dec(a_alg_6,shk_5,seq_srv_5,zero,enc_crt_verif_msg) in
    {601}let CV(signed_log_5: bitstring) = certificate_verify_msg_3 in
    {598}let cur_log2_2: bitstring = (cur_log_6,certificate_msg_3) in
    {602}if (verify(get_pkey(crt_10),hash(h_alg_7,cur_log2_2),signed_log_5) && ((get_domain(crt_10) = s_dom_9) && verify_cert(crt_10))) then
    {603}let s_pkey_6: pubkey = get_pkey(crt_10) in
    {605}event Client_Cert_server(id_client_2,s_pkey_6);
    {604}let cur_log3_1: bitstring = (cur_log2_2,certificate_verify_msg_3) in
    {606}out(ch_client_FIN, (id_client_2,ArgsClientFIN(cr_7,sr_6,h_alg_7,a_alg_6,c_dom_3,s_dom_9,s_pkey_6,cert_req_1,NoPsk,false,comp_psk_2,master_secret_7,chk_6,seq_client_4,shk_5,seq_srv_5 + 1,cfin_6,sfin_5,cur_log3_1)))
) | (
    {607}!
    {608}in(ch_client_after_EE, (id_client_3: idProc,ArgsClientAfterEE(cr_8: bytes32,sr_7: bytes32,h_alg_8: hash_alg,a_alg_7: aead_alg,c_dom_4: domain,s_dom_10: domain,psk_9: preSharedKey,safe_psk_2: bool,comp_psk_3: bool,master_secret_8: bitstring,chk_7: aead_key,seq_client_5: nat,shk_6: aead_key,seq_srv_6: nat,cfin_7: mac_key,sfin_6: mac_key,cur_log_7: bitstring)));
    {609}new st_9[]: stamp;
    {610}event PreciseIdProcess(ch_client_after_EE,id_client_3,st_9);
    {611}event Client_server_domain(id_client_3,s_dom_10);
    {612}event Client_Rand_client(id_client_3,cr_8);
    {613}event Client_Rand_server(id_client_3,sr_7);
    {614}event Client_PSKChoosen(id_client_3,psk_9,safe_psk_2);
    {615}event Client_comp_psk(id_client_3,comp_psk_3);
    {616}event Client_chk(id_client_3,chk_7);
    {617}event Client_shk(id_client_3,shk_6);
    {618}event Client_cfin(id_client_3,cfin_7);
    {619}event Client_sfin(id_client_3,sfin_6);
    {620}new st1_8[]: stamp;
    {621}event PreciseMess(ch_client_after_EE,id_client_3,st1_8,master_secret_8);
    {622}if (psk_9 = NoPsk) then
    (
        {623}in(io, enc_msg_1: bitstring);
        {624}let msg': msg = aead_dec(a_alg_7,shk_6,seq_srv_6,zero,enc_msg_1) in
        {625}let CRTR(=zero) = msg' in
        (
            {627}in(io, enc_crt_msg: bitstring);
            {628}let certificate_msg_4: msg = aead_dec(a_alg_7,shk_6,seq_srv_6 + 1,zero,enc_crt_msg) in
            {626}let cur_log2_3: bitstring = (cur_log_7,msg') in
            {629}out(ch_client_CRT, (id_client_3,ArgsClientCRT(cr_8,sr_7,h_alg_8,a_alg_7,c_dom_4,s_dom_10,true,certificate_msg_4,comp_psk_3,master_secret_8,chk_7,seq_client_5,shk_6,seq_srv_6 + 2,cfin_7,sfin_6,cur_log2_3)))
        )
        else
            {630}let CRT(=zero,crt_11: certificate) = msg' in
                {631}out(ch_client_CRT, (id_client_3,ArgsClientCRT(cr_8,sr_7,h_alg_8,a_alg_7,c_dom_4,s_dom_10,false,msg',comp_psk_3,master_secret_8,chk_7,seq_client_5,shk_6,seq_srv_6 + 1,cfin_7,sfin_6,cur_log_7)))
            else
                {632}out(io, unexpected_message)
    )
    else
        {633}event Client_Cert_server(id_client_3,NoPubKey);
        {634}out(ch_client_FIN, (id_client_3,ArgsClientFIN(cr_8,sr_7,h_alg_8,a_alg_7,c_dom_4,s_dom_10,NoPubKey,false,psk_9,safe_psk_2,comp_psk_3,master_secret_8,chk_7,seq_client_5,shk_6,seq_srv_6,cfin_7,sfin_6,cur_log_7)))
) | (
    {635}!
    {641}get long_term_keys(dom1: domain,sk1: privkey,pk1: pubkey,cert1: certificate,idP1: idProc) in
    {636}event Same(idP1);
    {640}get long_term_keys(dom2: domain,sk2: privkey,pk2: pubkey,cert2: certificate,idP2: idProc) in
    {637}event Same(idP2);
    {638}insert long_term_keys(choice[dom1,dom2],choice[sk1,sk2],choice[pk1,pk2],choice[cert1,cert2],choice[idP1,idP2]);
    {639}insert long_term_keys(choice[dom2,dom1],choice[sk2,sk1],choice[pk2,pk1],choice[cert2,cert1],choice[idP2,idP1])
) | (
    {642}!
    {648}get pre_shared_keys(c_dom1: domain,s_dom_11: domain,h_alg_9: hash_alg,id1: identityPsk,psk1: preSharedKey,idP1_1: idProc,safe1: bool) in
    {643}event Same(idP1_1);
    {647}get pre_shared_keys(c_dom2: domain,=s_dom_11,=h_alg_9,id2: identityPsk,psk2: preSharedKey,idP2_1: idProc,safe2: bool) in
    {644}event Same(idP2_1);
    {645}insert pre_shared_keys(choice[c_dom1,c_dom2],s_dom_11,h_alg_9,choice[id1,id2],choice[psk1,psk2],choice[idP1_1,idP2_1],choice[safe1,safe2]);
    {646}insert pre_shared_keys(choice[c_dom2,c_dom1],s_dom_11,h_alg_9,choice[id2,id1],choice[psk2,psk1],choice[idP2_1,idP1_1],choice[safe2,safe1])
) | (
    {649}!
    {650}new id_tls_client: idProc;
    {651}in(io, s_dom_12: domain);
    {652}event Same(s_dom_12);
    {653}in(io, c_dom_5: domain);
    {654}event Same(c_dom_5);
    {660}in(io, @7_send_kex: bool);
    {661}event Same(@7_send_kex);
    {662}let () = () in
    {667}new rand24_1[]: bytes24;
    {668}new rand8_1[]: bytes8;
    {670}new s_8[]: seed;
    {658}let @7_tls_g: group = id_g(StrongDH,1) in
    {671}let gx_2: element = dh_pub(@7_tls_g,dh_k(s_8)) in
    {672}let v_72: bitstring = (dh_k(s_8),gx_2) in
    {673}let v_73: bool = success?(1-proj-2-tuple(v_72)) in
    {674}let gx_3: element = (if v_73 then 2-proj-2-tuple(v_72) else caught-fail) in
    {675}let x_29: bitstring = (if v_73 then 1-proj-2-tuple(v_72) else caught-fail) in
    {664}let send_kex: bool = (not(false) || @7_send_kex) in
    {676}let kex: kex_alg = (if v_73 then (if send_kex then DHE_kex(@7_tls_g,gx_3) else DHE_group(@7_tls_g)) else caught-fail) in
    {677}let (kex_ext_1: keyShareExt,kex_data: bitstring) = (if v_73 then (client_kex_ext(kex),(x_29,@7_tls_g)) else fail-any) in
    {669}let cr_9: bytes32 = B32(rand24_1,rand8_1) in
    {665}let cur_log_8: bitstring = zero in
    {663}let @7_comp_psk: bool = false in
    {659}let @7_use_psk: bool = false in
    {657}let @7_tls_a: aead_alg = id_aead(StrongAE,1) in
    {656}let @7_tls_h: hash_alg = id_hash(StrongHash,1) in
    {655}let @7_id_client: idProc = id_tls_client in
    {680}if @7_use_psk then
    (
        {679}let extra_2: extraExt = empty_extra_ext in
        {678}let ech_ext_2: echExt = empty_ech_ext in
        {666}let old_psk_data: bitstring = zero in
        {681}let (psk_10: preSharedKey,id_4: identityPsk,old_es: bitstring,is_safe: bool) = old_psk_data in
        (
            {685}let k_6: bitstring = catch-fail(psk2b(psk_10)) in
            {686}let v_74: bool = not-caught-fail(k_6) in
            {684}let s_9: bitstring = zero in
            {687}let early_secret_5: bitstring = catch-fail((if v_74 then hmac(@7_tls_h,s_9,k_6) else fail-any)) in
            {688}let v_75: bool = not-caught-fail(early_secret_5) in
            {690}let m_5: bitstring = (if v_75 then zero else caught-fail) in
            {691}let h_28: bitstring = (if v_75 then catch-fail(hash(@7_tls_h,m_5)) else caught-fail) in
            {692}let v_76: bool = not-caught-fail(h_28) in
            {689}let l_29: label = (if v_75 then tls13_ext_res_binder else caught-fail) in
            {693}let x_30: bitstring = (if v_76 then (l_29,h_28) else caught-fail) in
            {694}let binder_key_3: bitstring = (if v_75 then catch-fail((if v_76 then hmac(@7_tls_h,early_secret_5,x_30) else fail-any)) else caught-fail) in
            {695}let v_77: bool = not-caught-fail(binder_key_3) in
            {696}let v_78: bitstring = catch-fail((if v_75 then (if v_77 then (early_secret_5,binder_key_3) else fail-any) else fail-any)) in
            {697}let v_79: bool = (not-caught-fail(v_78) && success?(1-proj-2-tuple(v_78))) in
            {698}let kb_3: mac_key = (if v_79 then 2-proj-2-tuple(v_78) else caught-fail) in
            {699}let es_2: bitstring = (if v_79 then 1-proj-2-tuple(v_78) else caught-fail) in
            {682}let offer_2: params = nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_1,SNI(s_dom_12),ech_ext_2,extra_2,trunc_client_psk_ext(id_4)) in
            {683}let cur_log'_2: bitstring = (cur_log_8,CH(cr_9,offer_2)) in
            {700}let binders_1: bitstring = (if v_79 then catch-fail(hmac(@7_tls_h,kb_3,cur_log'_2)) else caught-fail) in
            {701}let v_80: bool = not-caught-fail(binders_1) in
            {702}let v_81: bitstring = catch-fail((if v_79 then (if v_80 then (client_psk_ext(id_4,binders_1),(psk_10,id_4,es_2,is_safe)) else fail-any) else fail-any)) in
            {703}let v_82: bool = (not-caught-fail(v_81) && success?(1-proj-2-tuple(v_81))) in
            {704}let psk_data: bitstring = (if v_82 then 2-proj-2-tuple(v_81) else caught-fail) in
            {705}let psk_ext_2: preSharedKeyExt = (if v_82 then 1-proj-2-tuple(v_81) else caught-fail) in
            {706}let offer_3: params = (if v_82 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_1,SNI(s_dom_12),empty_ech_ext,empty_extra_ext,psk_ext_2) else caught-fail) in
            {707}let (client_hello_1: msg,cr_10: bytes32,kex_data_1: bitstring,psk_data_1: bitstring) = (if v_82 then (CH(cr_9,offer_3),cr_9,kex_data,psk_data) else fail-any) in
            {708}event ClientOffersAead(cr_10,@7_tls_a);
            {709}event ClientOffersHash(cr_10,@7_tls_h);
            {710}event ClientOffersGroup(cr_10,@7_tls_g);
            {711}out(io, client_hello_1);
            {713}let (psk_11: preSharedKey,id_5: identityPsk,es_3: bitstring,safe_psk_3: bool) = psk_data_1 in
            (
                {714}if (false && (psk_11 ≠ NoPsk)) then
                {715}let client_hello_2: bitstring = (zero,client_hello_1) in
                {717}let h_29: bitstring = catch-fail(hash(@7_tls_h,client_hello_2)) in
                {718}let v_83: bool = not-caught-fail(h_29) in
                {716}let l_30: label = tls13_client_early_traffic_secret in
                {719}let x_31: bitstring = (if v_83 then (l_30,h_29) else caught-fail) in
                {720}let atsc0_1: bitstring = catch-fail((if v_83 then hmac(@7_tls_h,es_3,x_31) else fail-any)) in
                {721}let v_84: bool = not-caught-fail(atsc0_1) in
                {723}let h_30: bitstring = (if v_84 then zero else caught-fail) in
                {722}let l_31: label = (if v_84 then tls13_key else caught-fail) in
                {724}let x_32: bitstring = (if v_84 then (l_31,h_30) else caught-fail) in
                {725}let kc0_1: bitstring = (if v_84 then catch-fail(hmac(@7_tls_h,atsc0_1,x_32)) else caught-fail) in
                {726}let v_85: bool = not-caught-fail(kc0_1) in
                {728}let h_31: bitstring = (if v_85 then catch-fail(hash(@7_tls_h,client_hello_2)) else caught-fail) in
                {729}let v_86: bool = not-caught-fail(h_31) in
                {727}let l_32: label = (if v_85 then tls13_early_exporter_master_secret else caught-fail) in
                {730}let x_33: bitstring = (if v_86 then (l_32,h_31) else caught-fail) in
                {731}let ems0_2: bitstring = (if v_85 then catch-fail((if v_86 then hmac(@7_tls_h,es_3,x_33) else fail-any)) else caught-fail) in
                {732}let v_87: bool = not-caught-fail(ems0_2) in
                {733}let (wkc0_1: aead_key,ems0_3: bitstring) = (if v_84 then (if v_85 then (if v_87 then (kc0_1,ems0_2) else fail-any) else fail-any) else fail-any) in
                {734}!
                {735}in(io, (i_1: nat,ad_1: bitstring));
                {736}if is_nat(i_1) then
                {737}new msg_ed[]: bitstring;
                {739}new st_10: stamp;
                {740}event ClientSequenceClient0RTTDataWriteKey(@7_id_client,st_10,i_1);
                {741}event ClientSends0(@7_id_client,cr_10,psk_11,i_1,ad_1,msg_ed);
                {738}let enc_ed: bitstring = aead_enc(@7_tls_a,wkc0_1,i_1,ad_1,msg_ed) in
                {742}out(io, enc_ed)
            ) | (
                {743}in(io, server_hello_1: msg);
                {744}let SH(sr_8: bytes32,mode: params) = server_hello_1 in
                (
                    {745}event ClientEchAcceptance(@7_id_client,false);
                    {712}let cur_log2_4: bitstring = (cur_log_8,client_hello_1) in
                    {746}if (false && (sr_8 = B32(HRR24,HRR8))) then
                    (
                        {747}if ((mode = nego(TLS13,@7_tls_h,@7_tls_a,hrr_kex_ext(@7_tls_g),empty_sni_ext,empty_ech_ext,empty_extra_ext,empty_psk_ext)) && (send_kex ≠ true)) then
                        (
                            {750}new rand24_2[]: bytes24;
                            {751}new rand8_2[]: bytes8;
                            {753}new s_10[]: seed;
                            {754}let gx_4: element = dh_pub(@7_tls_g,dh_k(s_10)) in
                            {755}let v_88: bitstring = (dh_k(s_10),gx_4) in
                            {756}let v_89: bool = success?(1-proj-2-tuple(v_88)) in
                            {757}let gx_5: element = (if v_89 then 2-proj-2-tuple(v_88) else caught-fail) in
                            {758}let x_34: bitstring = (if v_89 then 1-proj-2-tuple(v_88) else caught-fail) in
                            {749}let send_kex_1: bool = true in
                            {759}let kex_1: kex_alg = (if v_89 then (if send_kex_1 then DHE_kex(@7_tls_g,gx_5) else DHE_group(@7_tls_g)) else caught-fail) in
                            {760}let (kex_ext_2: keyShareExt,kex_data_2: bitstring) = (if v_89 then (client_kex_ext(kex_1),(x_34,@7_tls_g)) else fail-any) in
                            {752}let cr_11: bytes32 = B32(rand24_2,rand8_2) in
                            {748}let cur_log3_2: bitstring = (cur_log2_4,server_hello_1) in
                            {763}if @7_use_psk then
                            (
                                {762}let extra_3: extraExt = empty_extra_ext in
                                {761}let ech_ext_3: echExt = empty_ech_ext in
                                {764}let (psk_12: preSharedKey,id_6: identityPsk,old_es_1: bitstring,is_safe_1: bool) = psk_data_1 in
                                (
                                    {768}let k_7: bitstring = catch-fail(psk2b(psk_12)) in
                                    {769}let v_90: bool = not-caught-fail(k_7) in
                                    {767}let s_11: bitstring = zero in
                                    {770}let early_secret_6: bitstring = catch-fail((if v_90 then hmac(@7_tls_h,s_11,k_7) else fail-any)) in
                                    {771}let v_91: bool = not-caught-fail(early_secret_6) in
                                    {773}let m_6: bitstring = (if v_91 then zero else caught-fail) in
                                    {774}let h_32: bitstring = (if v_91 then catch-fail(hash(@7_tls_h,m_6)) else caught-fail) in
                                    {775}let v_92: bool = not-caught-fail(h_32) in
                                    {772}let l_33: label = (if v_91 then tls13_ext_res_binder else caught-fail) in
                                    {776}let x_35: bitstring = (if v_92 then (l_33,h_32) else caught-fail) in
                                    {777}let binder_key_4: bitstring = (if v_91 then catch-fail((if v_92 then hmac(@7_tls_h,early_secret_6,x_35) else fail-any)) else caught-fail) in
                                    {778}let v_93: bool = not-caught-fail(binder_key_4) in
                                    {779}let v_94: bitstring = catch-fail((if v_91 then (if v_93 then (early_secret_6,binder_key_4) else fail-any) else fail-any)) in
                                    {780}let v_95: bool = (not-caught-fail(v_94) && success?(1-proj-2-tuple(v_94))) in
                                    {781}let kb_4: mac_key = (if v_95 then 2-proj-2-tuple(v_94) else caught-fail) in
                                    {782}let es_4: bitstring = (if v_95 then 1-proj-2-tuple(v_94) else caught-fail) in
                                    {765}let offer_4: params = nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_2,SNI(s_dom_12),ech_ext_3,extra_3,trunc_client_psk_ext(id_6)) in
                                    {766}let cur_log'_3: bitstring = (cur_log3_2,CH(cr_11,offer_4)) in
                                    {783}let binders_2: bitstring = (if v_95 then catch-fail(hmac(@7_tls_h,kb_4,cur_log'_3)) else caught-fail) in
                                    {784}let v_96: bool = not-caught-fail(binders_2) in
                                    {785}let v_97: bitstring = catch-fail((if v_95 then (if v_96 then (client_psk_ext(id_6,binders_2),(psk_12,id_6,es_4,is_safe_1)) else fail-any) else fail-any)) in
                                    {786}let v_98: bool = (not-caught-fail(v_97) && success?(1-proj-2-tuple(v_97))) in
                                    {787}let psk_data_2: bitstring = (if v_98 then 2-proj-2-tuple(v_97) else caught-fail) in
                                    {788}let psk_ext_3: preSharedKeyExt = (if v_98 then 1-proj-2-tuple(v_97) else caught-fail) in
                                    {789}let offer_5: params = (if v_98 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_2,SNI(s_dom_12),empty_ech_ext,empty_extra_ext,psk_ext_3) else caught-fail) in
                                    {790}let (client_hello': msg,cr': bytes32,kex_data': bitstring,psk_data': bitstring) = (if v_98 then (CH(cr_11,offer_5),cr_11,kex_data_2,psk_data_2) else fail-any) in
                                    {791}event ClientOffersAead(cr',@7_tls_a);
                                    {792}event ClientOffersHash(cr',@7_tls_h);
                                    {793}event ClientOffersGroup(cr',@7_tls_g);
                                    {794}out(io, client_hello');
                                    {796}in(io, server_hello': msg);
                                    {797}let SH(sr': bytes32,mode': params) = server_hello' in
                                    (
                                        {798}if (sr' = B32(HRR24,HRR8)) then
                                            {799}out(io, unexpected_message)
                                        else
                                            {800}let (x_36: bitstring,g: group) = kex_data' in
                                            {801}let (psk_offer: preSharedKey,id_offer: identityPsk,es_offer: bitstring,is_safe_offer: bool) = psk_data' in
                                            {802}event Client_PSKOffer(@7_id_client,psk_offer,id_offer,is_safe_offer);
                                            {803}event Client_Rand_client(@7_id_client,cr');
                                            {804}event Client_DH_client(@7_id_client,dh_pub(g,x_36));
                                            {805}event Client_server_domain(@7_id_client,s_dom_12);
                                            {806}let SH(sr_9: bytes32,mode_1: params) = server_hello' in
                                            {807}event Client_Rand_server(@7_id_client,sr_9);
                                            {808}let nego(=TLS13,=@7_tls_h,=@7_tls_a,server_kex_ext(DHE_kex(=g,gy_1: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_4: preSharedKeyExt) = mode_1 in
                                            (
                                                {810}event Client_DH_server(@7_id_client,gy_1);
                                                {811}let v_99: bool = (psk_ext_4 = empty_psk_ext) in
                                                {812}let psk_13: preSharedKey = (if v_99 then NoPsk else caught-fail) in
                                                {814}let k_8: bitstring = (if v_99 then catch-fail(psk2b(psk_13)) else caught-fail) in
                                                {815}let v_100: bool = not-caught-fail(k_8) in
                                                {813}let s_12: bitstring = (if v_99 then zero else caught-fail) in
                                                {816}let early_secret_7: bitstring = (if v_99 then catch-fail((if v_100 then hmac(@7_tls_h,s_12,k_8) else fail-any)) else caught-fail) in
                                                {817}let v_101: bool = not-caught-fail(early_secret_7) in
                                                {819}let m_7: bitstring = (if v_101 then zero else caught-fail) in
                                                {820}let h_33: bitstring = (if v_101 then catch-fail(hash(@7_tls_h,m_7)) else caught-fail) in
                                                {821}let v_102: bool = not-caught-fail(h_33) in
                                                {818}let l_34: label = (if v_101 then tls13_ext_res_binder else caught-fail) in
                                                {822}let x_37: bitstring = (if v_102 then (l_34,h_33) else caught-fail) in
                                                {823}let binder_key_5: bitstring = (if v_101 then catch-fail((if v_102 then hmac(@7_tls_h,early_secret_7,x_37) else fail-any)) else caught-fail) in
                                                {824}let v_103: bool = not-caught-fail(binder_key_5) in
                                                {825}let v_104: bitstring = (if v_99 then catch-fail((if v_101 then (if v_103 then (early_secret_7,binder_key_5) else fail-any) else fail-any)) else caught-fail) in
                                                {826}let v_105: bool = (not-caught-fail(v_104) && success?(1-proj-2-tuple(v_104))) in
                                                {827}let kb_5: mac_key = (if v_105 then 2-proj-2-tuple(v_104) else caught-fail) in
                                                {828}let es_5: bitstring = (if v_105 then 1-proj-2-tuple(v_104) else caught-fail) in
                                                {829}let v_106: bitstring = (if not(v_99) then catch-fail(psk_data') else caught-fail) in
                                                {830}let v_107: bool = (not-caught-fail(v_106) && success?(1-proj-4-tuple(v_106))) in
                                                {831}let is_safe_2: bool = (if v_107 then 4-proj-4-tuple(v_106) else caught-fail) in
                                                {832}let es_6: bitstring = (if v_107 then 3-proj-4-tuple(v_106) else caught-fail) in
                                                {833}let id_7: identityPsk = (if v_107 then 2-proj-4-tuple(v_106) else caught-fail) in
                                                {834}let psk_14: preSharedKey = (if v_107 then 1-proj-4-tuple(v_106) else caught-fail) in
                                                {835}let (psk_15: preSharedKey,early_secret_8: bitstring,valid: bool,safe_psk_4: bool) = (if v_99 then (if v_105 then (NoPsk,es_5,true,false) else fail-any) else (if v_107 then (psk_14,es_6,((psk_14 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_4)),is_safe_2) else fail-any)) in
                                                {836}event Client_PSKChoosen(@7_id_client,psk_15,safe_psk_4);
                                                {837}if valid then
                                                (
                                                    {840}new s_13[]: seed;
                                                    {838}let gxy_1: element = catch-fail(dh_decap_fun(g,gy_1,x_36)) in
                                                    {839}let v_108: bool = not-caught-fail(gxy_1) in
                                                    {841}let gxy_2: element = (if v_108 then gxy_1 else dh_f(s_13)) in
                                                    {842}event Client_DH_gxy(@7_id_client,gxy_2);
                                                    {844}let m_8: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                    {845}let v_109: bool = not-caught-fail(m_8) in
                                                    {846}let h_34: bitstring = (if v_109 then catch-fail(hash(@7_tls_h,m_8)) else caught-fail) in
                                                    {847}let v_110: bool = not-caught-fail(h_34) in
                                                    {843}let l_35: label = tls13_derived in
                                                    {848}let x_38: bitstring = (if v_110 then (l_35,h_34) else caught-fail) in
                                                    {849}let extra_4: bitstring = catch-fail((if v_109 then (if v_110 then hmac(@7_tls_h,early_secret_8,x_38) else fail-any) else fail-any)) in
                                                    {850}let v_111: bool = not-caught-fail(extra_4) in
                                                    {851}let handshake_secret_1: bitstring = (if v_111 then hmac(@7_tls_h,extra_4,gxy_2) else fail-any) in
                                                    {853}let m_9: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                    {854}let v_112: bool = not-caught-fail(m_9) in
                                                    {855}let h_35: bitstring = (if v_112 then catch-fail(hash(@7_tls_h,m_9)) else caught-fail) in
                                                    {856}let v_113: bool = not-caught-fail(h_35) in
                                                    {852}let l_36: label = tls13_derived in
                                                    {857}let x_39: bitstring = (if v_113 then (l_36,h_35) else caught-fail) in
                                                    {858}let extra_5: bitstring = catch-fail((if v_112 then (if v_113 then hmac(@7_tls_h,handshake_secret_1,x_39) else fail-any) else fail-any)) in
                                                    {859}let v_114: bool = not-caught-fail(extra_5) in
                                                    {860}let k_9: bitstring = (if v_114 then zero else caught-fail) in
                                                    {861}let master_secret_9: bitstring = (if v_114 then catch-fail(hmac(@7_tls_h,handshake_secret_1,k_9)) else caught-fail) in
                                                    {862}let v_115: bool = not-caught-fail(master_secret_9) in
                                                    {795}let cur_log4: bitstring = (cur_log3_2,client_hello') in
                                                    {809}let cur_log2_5: bitstring = (cur_log4,server_hello') in
                                                    {864}let h_36: bitstring = (if v_115 then catch-fail(hash(@7_tls_h,cur_log2_5)) else caught-fail) in
                                                    {865}let v_116: bool = not-caught-fail(h_36) in
                                                    {863}let l_37: label = (if v_115 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {866}let x_40: bitstring = (if v_116 then (l_37,h_36) else caught-fail) in
                                                    {867}let client_hts_1: bitstring = (if v_115 then catch-fail((if v_116 then hmac(@7_tls_h,handshake_secret_1,x_40) else fail-any)) else caught-fail) in
                                                    {868}let v_117: bool = not-caught-fail(client_hts_1) in
                                                    {870}let h_37: bitstring = (if v_117 then catch-fail(hash(@7_tls_h,cur_log2_5)) else caught-fail) in
                                                    {871}let v_118: bool = not-caught-fail(h_37) in
                                                    {869}let l_38: label = (if v_117 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {872}let x_41: bitstring = (if v_118 then (l_38,h_37) else caught-fail) in
                                                    {873}let server_hts_1: bitstring = (if v_117 then catch-fail((if v_118 then hmac(@7_tls_h,handshake_secret_1,x_41) else fail-any)) else caught-fail) in
                                                    {874}let v_119: bool = not-caught-fail(server_hts_1) in
                                                    {876}let h_38: bitstring = (if v_119 then zero else caught-fail) in
                                                    {875}let l_39: label = (if v_119 then tls13_key else caught-fail) in
                                                    {877}let x_42: bitstring = (if v_119 then (l_39,h_38) else caught-fail) in
                                                    {878}let client_wkh_1: bitstring = (if v_119 then catch-fail(hmac(@7_tls_h,client_hts_1,x_42)) else caught-fail) in
                                                    {879}let v_120: bool = not-caught-fail(client_wkh_1) in
                                                    {881}let h_39: bitstring = (if v_120 then zero else caught-fail) in
                                                    {880}let l_40: label = (if v_120 then tls13_key else caught-fail) in
                                                    {882}let x_43: bitstring = (if v_120 then (l_40,h_39) else caught-fail) in
                                                    {883}let server_wkh_1: bitstring = (if v_120 then catch-fail(hmac(@7_tls_h,server_hts_1,x_43)) else caught-fail) in
                                                    {884}let v_121: bool = not-caught-fail(server_wkh_1) in
                                                    {886}let h_40: bitstring = (if v_121 then zero else caught-fail) in
                                                    {885}let l_41: label = (if v_121 then tls13_finished else caught-fail) in
                                                    {887}let x_44: bitstring = (if v_121 then (l_41,h_40) else caught-fail) in
                                                    {888}let client_fk_1: bitstring = (if v_121 then catch-fail(hmac(@7_tls_h,client_hts_1,x_44)) else caught-fail) in
                                                    {889}let v_122: bool = not-caught-fail(client_fk_1) in
                                                    {891}let h_41: bitstring = (if v_122 then zero else caught-fail) in
                                                    {890}let l_42: label = (if v_122 then tls13_finished else caught-fail) in
                                                    {892}let x_45: bitstring = (if v_122 then (l_42,h_41) else caught-fail) in
                                                    {893}let server_fk_1: bitstring = (if v_122 then catch-fail(hmac(@7_tls_h,server_hts_1,x_45)) else caught-fail) in
                                                    {894}let v_123: bool = not-caught-fail(server_fk_1) in
                                                    {895}let (master_secret_10: bitstring,chk_8: aead_key,shk_7: aead_key,cfin_8: mac_key,sfin_7: mac_key) = (if v_114 then (if v_115 then (if v_117 then (if v_119 then (if v_120 then (if v_121 then (if v_122 then (if v_123 then (master_secret_9,client_wkh_1,server_wkh_1,client_fk_1,server_fk_1) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {896}event Client_chk(@7_id_client,chk_8);
                                                    {897}event Client_shk(@7_id_client,shk_7);
                                                    {898}event Client_cfin(@7_id_client,cfin_8);
                                                    {899}event Client_sfin(@7_id_client,sfin_7);
                                                    {900}in(io, enc_ee_msg: bitstring);
                                                    {901}let ee_msg_1: msg = aead_dec(@7_tls_a,shk_7,0,zero,enc_ee_msg) in
                                                    {902}let EE(ech_ee: echExt,extra_ee: extraExt) = ee_msg_1 in
                                                    {903}let cur_log2_6: bitstring = (cur_log2_5,ee_msg_1) in
                                                    {904}out(ch_client_after_EE, (@7_id_client,ArgsClientAfterEE(cr',sr_9,@7_tls_h,@7_tls_a,c_dom_5,s_dom_12,psk_15,safe_psk_4,@7_comp_psk,master_secret_10,chk_8,0,shk_7,1,cfin_8,sfin_7,cur_log2_6)))
                                                )
                                                else
                                                    {905}out(io, illegal_parameter)
                                            )
                                            else
                                                {906}out(io, illegal_parameter)
                                    )
                                    else
                                        {907}out(io, unexpected_message)
                                )
                                else
                                    {1060}get pre_shared_keys(c_dom'_2: domain,=s_dom_12,=@7_tls_h,id_8: identityPsk,psk_16: preSharedKey,idP_4: idProc,is_safe_3: bool) in
                                    {908}event Selected_one_time_used_psk(@7_id_client,psk_16,is_safe_3);
                                    {909}event Selected_psk(c_dom_5,c_dom'_2,idP_4,is_safe_3);
                                    {910}event Selected_psk_no_missmatch(@7_id_client,s_dom_12,@7_tls_h,psk_16,id_8);
                                    {911}event Selected_psk_with_ID(c_dom_5,c_dom'_2,id_8,idP_4,is_safe_3);
                                    {912}let v_124: bitstring = (id_8,psk_16,is_safe_3) in
                                    {913}let v_125: bool = success?(1-proj-3-tuple(v_124)) in
                                    {914}let is_safe_4: bool = (if v_125 then 3-proj-3-tuple(v_124) else caught-fail) in
                                    {915}let psk_17: preSharedKey = (if v_125 then 2-proj-3-tuple(v_124) else caught-fail) in
                                    {916}let id_9: identityPsk = (if v_125 then 1-proj-3-tuple(v_124) else caught-fail) in
                                    {920}let k_10: bitstring = (if v_125 then catch-fail(psk2b(psk_17)) else caught-fail) in
                                    {921}let v_126: bool = not-caught-fail(k_10) in
                                    {919}let s_14: bitstring = (if v_125 then zero else caught-fail) in
                                    {922}let early_secret_9: bitstring = (if v_125 then catch-fail((if v_126 then hmac(@7_tls_h,s_14,k_10) else fail-any)) else caught-fail) in
                                    {923}let v_127: bool = not-caught-fail(early_secret_9) in
                                    {925}let m_10: bitstring = (if v_127 then zero else caught-fail) in
                                    {926}let h_42: bitstring = (if v_127 then catch-fail(hash(@7_tls_h,m_10)) else caught-fail) in
                                    {927}let v_128: bool = not-caught-fail(h_42) in
                                    {924}let l_43: label = (if v_127 then tls13_ext_res_binder else caught-fail) in
                                    {928}let x_46: bitstring = (if v_128 then (l_43,h_42) else caught-fail) in
                                    {929}let binder_key_6: bitstring = (if v_127 then catch-fail((if v_128 then hmac(@7_tls_h,early_secret_9,x_46) else fail-any)) else caught-fail) in
                                    {930}let v_129: bool = not-caught-fail(binder_key_6) in
                                    {931}let v_130: bitstring = (if v_125 then catch-fail((if v_127 then (if v_129 then (early_secret_9,binder_key_6) else fail-any) else fail-any)) else caught-fail) in
                                    {932}let v_131: bool = (not-caught-fail(v_130) && success?(1-proj-2-tuple(v_130))) in
                                    {933}let kb_6: mac_key = (if v_131 then 2-proj-2-tuple(v_130) else caught-fail) in
                                    {934}let es_7: bitstring = (if v_131 then 1-proj-2-tuple(v_130) else caught-fail) in
                                    {917}let offer_6: params = (if v_125 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_2,SNI(s_dom_12),ech_ext_3,extra_3,trunc_client_psk_ext(id_9)) else caught-fail) in
                                    {918}let cur_log'_4: bitstring = (if v_125 then (cur_log3_2,CH(cr_11,offer_6)) else caught-fail) in
                                    {935}let binders_3: bitstring = (if v_131 then catch-fail(hmac(@7_tls_h,kb_6,cur_log'_4)) else caught-fail) in
                                    {936}let v_132: bool = not-caught-fail(binders_3) in
                                    {937}let v_133: bitstring = catch-fail((if v_125 then (if v_131 then (if v_132 then (client_psk_ext(id_9,binders_3),(psk_17,id_9,es_7,is_safe_4)) else fail-any) else fail-any) else fail-any)) in
                                    {938}let v_134: bool = (not-caught-fail(v_133) && success?(1-proj-2-tuple(v_133))) in
                                    {939}let psk_data_3: bitstring = (if v_134 then 2-proj-2-tuple(v_133) else caught-fail) in
                                    {940}let psk_ext_5: preSharedKeyExt = (if v_134 then 1-proj-2-tuple(v_133) else caught-fail) in
                                    {941}let offer_7: params = (if v_134 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_2,SNI(s_dom_12),empty_ech_ext,empty_extra_ext,psk_ext_5) else caught-fail) in
                                    {942}let (client_hello'_1: msg,cr'_1: bytes32,kex_data'_1: bitstring,psk_data'_1: bitstring) = (if v_134 then (CH(cr_11,offer_7),cr_11,kex_data_2,psk_data_3) else fail-any) in
                                    {943}event ClientOffersAead(cr'_1,@7_tls_a);
                                    {944}event ClientOffersHash(cr'_1,@7_tls_h);
                                    {945}event ClientOffersGroup(cr'_1,@7_tls_g);
                                    {946}out(io, client_hello'_1);
                                    {948}in(io, server_hello'_1: msg);
                                    {949}let SH(sr'_1: bytes32,mode'_1: params) = server_hello'_1 in
                                    (
                                        {950}if (sr'_1 = B32(HRR24,HRR8)) then
                                            {951}out(io, unexpected_message)
                                        else
                                            {952}let (x_47: bitstring,g_1: group) = kex_data'_1 in
                                            {953}let (psk_offer_1: preSharedKey,id_offer_1: identityPsk,es_offer_1: bitstring,is_safe_offer_1: bool) = psk_data'_1 in
                                            {954}event Client_PSKOffer(@7_id_client,psk_offer_1,id_offer_1,is_safe_offer_1);
                                            {955}event Client_Rand_client(@7_id_client,cr'_1);
                                            {956}event Client_DH_client(@7_id_client,dh_pub(g_1,x_47));
                                            {957}event Client_server_domain(@7_id_client,s_dom_12);
                                            {958}let SH(sr_10: bytes32,mode_2: params) = server_hello'_1 in
                                            {959}event Client_Rand_server(@7_id_client,sr_10);
                                            {960}let nego(=TLS13,=@7_tls_h,=@7_tls_a,server_kex_ext(DHE_kex(=g_1,gy_2: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_6: preSharedKeyExt) = mode_2 in
                                            (
                                                {962}event Client_DH_server(@7_id_client,gy_2);
                                                {963}let v_135: bool = (psk_ext_6 = empty_psk_ext) in
                                                {964}let psk_18: preSharedKey = (if v_135 then NoPsk else caught-fail) in
                                                {966}let k_11: bitstring = (if v_135 then catch-fail(psk2b(psk_18)) else caught-fail) in
                                                {967}let v_136: bool = not-caught-fail(k_11) in
                                                {965}let s_15: bitstring = (if v_135 then zero else caught-fail) in
                                                {968}let early_secret_10: bitstring = (if v_135 then catch-fail((if v_136 then hmac(@7_tls_h,s_15,k_11) else fail-any)) else caught-fail) in
                                                {969}let v_137: bool = not-caught-fail(early_secret_10) in
                                                {971}let m_11: bitstring = (if v_137 then zero else caught-fail) in
                                                {972}let h_43: bitstring = (if v_137 then catch-fail(hash(@7_tls_h,m_11)) else caught-fail) in
                                                {973}let v_138: bool = not-caught-fail(h_43) in
                                                {970}let l_44: label = (if v_137 then tls13_ext_res_binder else caught-fail) in
                                                {974}let x_48: bitstring = (if v_138 then (l_44,h_43) else caught-fail) in
                                                {975}let binder_key_7: bitstring = (if v_137 then catch-fail((if v_138 then hmac(@7_tls_h,early_secret_10,x_48) else fail-any)) else caught-fail) in
                                                {976}let v_139: bool = not-caught-fail(binder_key_7) in
                                                {977}let v_140: bitstring = (if v_135 then catch-fail((if v_137 then (if v_139 then (early_secret_10,binder_key_7) else fail-any) else fail-any)) else caught-fail) in
                                                {978}let v_141: bool = (not-caught-fail(v_140) && success?(1-proj-2-tuple(v_140))) in
                                                {979}let kb_7: mac_key = (if v_141 then 2-proj-2-tuple(v_140) else caught-fail) in
                                                {980}let es_8: bitstring = (if v_141 then 1-proj-2-tuple(v_140) else caught-fail) in
                                                {981}let v_142: bitstring = (if not(v_135) then catch-fail(psk_data'_1) else caught-fail) in
                                                {982}let v_143: bool = (not-caught-fail(v_142) && success?(1-proj-4-tuple(v_142))) in
                                                {983}let is_safe_5: bool = (if v_143 then 4-proj-4-tuple(v_142) else caught-fail) in
                                                {984}let es_9: bitstring = (if v_143 then 3-proj-4-tuple(v_142) else caught-fail) in
                                                {985}let id_10: identityPsk = (if v_143 then 2-proj-4-tuple(v_142) else caught-fail) in
                                                {986}let psk_19: preSharedKey = (if v_143 then 1-proj-4-tuple(v_142) else caught-fail) in
                                                {987}let (psk_20: preSharedKey,early_secret_11: bitstring,valid_1: bool,safe_psk_5: bool) = (if v_135 then (if v_141 then (NoPsk,es_8,true,false) else fail-any) else (if v_143 then (psk_19,es_9,((psk_19 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_6)),is_safe_5) else fail-any)) in
                                                {988}event Client_PSKChoosen(@7_id_client,psk_20,safe_psk_5);
                                                {989}if valid_1 then
                                                (
                                                    {992}new s_16[]: seed;
                                                    {990}let gxy_3: element = catch-fail(dh_decap_fun(g_1,gy_2,x_47)) in
                                                    {991}let v_144: bool = not-caught-fail(gxy_3) in
                                                    {993}let gxy_4: element = (if v_144 then gxy_3 else dh_f(s_16)) in
                                                    {994}event Client_DH_gxy(@7_id_client,gxy_4);
                                                    {996}let m_12: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                    {997}let v_145: bool = not-caught-fail(m_12) in
                                                    {998}let h_44: bitstring = (if v_145 then catch-fail(hash(@7_tls_h,m_12)) else caught-fail) in
                                                    {999}let v_146: bool = not-caught-fail(h_44) in
                                                    {995}let l_45: label = tls13_derived in
                                                    {1000}let x_49: bitstring = (if v_146 then (l_45,h_44) else caught-fail) in
                                                    {1001}let extra_6: bitstring = catch-fail((if v_145 then (if v_146 then hmac(@7_tls_h,early_secret_11,x_49) else fail-any) else fail-any)) in
                                                    {1002}let v_147: bool = not-caught-fail(extra_6) in
                                                    {1003}let handshake_secret_2: bitstring = (if v_147 then hmac(@7_tls_h,extra_6,gxy_4) else fail-any) in
                                                    {1005}let m_13: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                    {1006}let v_148: bool = not-caught-fail(m_13) in
                                                    {1007}let h_45: bitstring = (if v_148 then catch-fail(hash(@7_tls_h,m_13)) else caught-fail) in
                                                    {1008}let v_149: bool = not-caught-fail(h_45) in
                                                    {1004}let l_46: label = tls13_derived in
                                                    {1009}let x_50: bitstring = (if v_149 then (l_46,h_45) else caught-fail) in
                                                    {1010}let extra_7: bitstring = catch-fail((if v_148 then (if v_149 then hmac(@7_tls_h,handshake_secret_2,x_50) else fail-any) else fail-any)) in
                                                    {1011}let v_150: bool = not-caught-fail(extra_7) in
                                                    {1012}let k_12: bitstring = (if v_150 then zero else caught-fail) in
                                                    {1013}let master_secret_11: bitstring = (if v_150 then catch-fail(hmac(@7_tls_h,handshake_secret_2,k_12)) else caught-fail) in
                                                    {1014}let v_151: bool = not-caught-fail(master_secret_11) in
                                                    {947}let cur_log4_1: bitstring = (cur_log3_2,client_hello'_1) in
                                                    {961}let cur_log2_7: bitstring = (cur_log4_1,server_hello'_1) in
                                                    {1016}let h_46: bitstring = (if v_151 then catch-fail(hash(@7_tls_h,cur_log2_7)) else caught-fail) in
                                                    {1017}let v_152: bool = not-caught-fail(h_46) in
                                                    {1015}let l_47: label = (if v_151 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {1018}let x_51: bitstring = (if v_152 then (l_47,h_46) else caught-fail) in
                                                    {1019}let client_hts_2: bitstring = (if v_151 then catch-fail((if v_152 then hmac(@7_tls_h,handshake_secret_2,x_51) else fail-any)) else caught-fail) in
                                                    {1020}let v_153: bool = not-caught-fail(client_hts_2) in
                                                    {1022}let h_47: bitstring = (if v_153 then catch-fail(hash(@7_tls_h,cur_log2_7)) else caught-fail) in
                                                    {1023}let v_154: bool = not-caught-fail(h_47) in
                                                    {1021}let l_48: label = (if v_153 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {1024}let x_52: bitstring = (if v_154 then (l_48,h_47) else caught-fail) in
                                                    {1025}let server_hts_2: bitstring = (if v_153 then catch-fail((if v_154 then hmac(@7_tls_h,handshake_secret_2,x_52) else fail-any)) else caught-fail) in
                                                    {1026}let v_155: bool = not-caught-fail(server_hts_2) in
                                                    {1028}let h_48: bitstring = (if v_155 then zero else caught-fail) in
                                                    {1027}let l_49: label = (if v_155 then tls13_key else caught-fail) in
                                                    {1029}let x_53: bitstring = (if v_155 then (l_49,h_48) else caught-fail) in
                                                    {1030}let client_wkh_2: bitstring = (if v_155 then catch-fail(hmac(@7_tls_h,client_hts_2,x_53)) else caught-fail) in
                                                    {1031}let v_156: bool = not-caught-fail(client_wkh_2) in
                                                    {1033}let h_49: bitstring = (if v_156 then zero else caught-fail) in
                                                    {1032}let l_50: label = (if v_156 then tls13_key else caught-fail) in
                                                    {1034}let x_54: bitstring = (if v_156 then (l_50,h_49) else caught-fail) in
                                                    {1035}let server_wkh_2: bitstring = (if v_156 then catch-fail(hmac(@7_tls_h,server_hts_2,x_54)) else caught-fail) in
                                                    {1036}let v_157: bool = not-caught-fail(server_wkh_2) in
                                                    {1038}let h_50: bitstring = (if v_157 then zero else caught-fail) in
                                                    {1037}let l_51: label = (if v_157 then tls13_finished else caught-fail) in
                                                    {1039}let x_55: bitstring = (if v_157 then (l_51,h_50) else caught-fail) in
                                                    {1040}let client_fk_2: bitstring = (if v_157 then catch-fail(hmac(@7_tls_h,client_hts_2,x_55)) else caught-fail) in
                                                    {1041}let v_158: bool = not-caught-fail(client_fk_2) in
                                                    {1043}let h_51: bitstring = (if v_158 then zero else caught-fail) in
                                                    {1042}let l_52: label = (if v_158 then tls13_finished else caught-fail) in
                                                    {1044}let x_56: bitstring = (if v_158 then (l_52,h_51) else caught-fail) in
                                                    {1045}let server_fk_2: bitstring = (if v_158 then catch-fail(hmac(@7_tls_h,server_hts_2,x_56)) else caught-fail) in
                                                    {1046}let v_159: bool = not-caught-fail(server_fk_2) in
                                                    {1047}let (master_secret_12: bitstring,chk_9: aead_key,shk_8: aead_key,cfin_9: mac_key,sfin_8: mac_key) = (if v_150 then (if v_151 then (if v_153 then (if v_155 then (if v_156 then (if v_157 then (if v_158 then (if v_159 then (master_secret_11,client_wkh_2,server_wkh_2,client_fk_2,server_fk_2) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {1048}event Client_chk(@7_id_client,chk_9);
                                                    {1049}event Client_shk(@7_id_client,shk_8);
                                                    {1050}event Client_cfin(@7_id_client,cfin_9);
                                                    {1051}event Client_sfin(@7_id_client,sfin_8);
                                                    {1052}in(io, enc_ee_msg_1: bitstring);
                                                    {1053}let ee_msg_2: msg = aead_dec(@7_tls_a,shk_8,0,zero,enc_ee_msg_1) in
                                                    {1054}let EE(ech_ee_1: echExt,extra_ee_1: extraExt) = ee_msg_2 in
                                                    {1055}let cur_log2_8: bitstring = (cur_log2_7,ee_msg_2) in
                                                    {1056}out(ch_client_after_EE, (@7_id_client,ArgsClientAfterEE(cr'_1,sr_10,@7_tls_h,@7_tls_a,c_dom_5,s_dom_12,psk_20,safe_psk_5,@7_comp_psk,master_secret_12,chk_9,0,shk_8,1,cfin_9,sfin_8,cur_log2_8)))
                                                )
                                                else
                                                    {1057}out(io, illegal_parameter)
                                            )
                                            else
                                                {1058}out(io, illegal_parameter)
                                    )
                                    else
                                        {1059}out(io, unexpected_message)
                            )
                            else
                                {1061}let psk_21: preSharedKey = NoPsk in
                                {1063}let k_13: bitstring = catch-fail(psk2b(psk_21)) in
                                {1064}let v_160: bool = not-caught-fail(k_13) in
                                {1062}let s_17: bitstring = zero in
                                {1065}let early_secret_12: bitstring = catch-fail((if v_160 then hmac(@7_tls_h,s_17,k_13) else fail-any)) in
                                {1066}let v_161: bool = not-caught-fail(early_secret_12) in
                                {1068}let m_14: bitstring = (if v_161 then zero else caught-fail) in
                                {1069}let h_52: bitstring = (if v_161 then catch-fail(hash(@7_tls_h,m_14)) else caught-fail) in
                                {1070}let v_162: bool = not-caught-fail(h_52) in
                                {1067}let l_53: label = (if v_161 then tls13_ext_res_binder else caught-fail) in
                                {1071}let x_57: bitstring = (if v_162 then (l_53,h_52) else caught-fail) in
                                {1072}let binder_key_8: bitstring = (if v_161 then catch-fail((if v_162 then hmac(@7_tls_h,early_secret_12,x_57) else fail-any)) else caught-fail) in
                                {1073}let v_163: bool = not-caught-fail(binder_key_8) in
                                {1074}let v_164: bitstring = catch-fail((if v_161 then (if v_163 then (early_secret_12,binder_key_8) else fail-any) else fail-any)) in
                                {1075}let v_165: bool = (not-caught-fail(v_164) && success?(1-proj-2-tuple(v_164))) in
                                {1076}let kb_8: mac_key = (if v_165 then 2-proj-2-tuple(v_164) else caught-fail) in
                                {1077}let es_10: bitstring = (if v_165 then 1-proj-2-tuple(v_164) else caught-fail) in
                                {1078}let v_166: bitstring = catch-fail((if v_165 then (empty_psk_ext,(NoPsk,zero,es_10,false)) else fail-any)) in
                                {1079}let v_167: bool = (not-caught-fail(v_166) && success?(1-proj-2-tuple(v_166))) in
                                {1080}let psk_data_4: bitstring = (if v_167 then 2-proj-2-tuple(v_166) else caught-fail) in
                                {1081}let psk_ext_7: preSharedKeyExt = (if v_167 then 1-proj-2-tuple(v_166) else caught-fail) in
                                {1082}let offer_8: params = (if v_167 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_2,SNI(s_dom_12),empty_ech_ext,empty_extra_ext,psk_ext_7) else caught-fail) in
                                {1083}let (client_hello'_2: msg,cr'_2: bytes32,kex_data'_2: bitstring,psk_data'_2: bitstring) = (if v_167 then (CH(cr_11,offer_8),cr_11,kex_data_2,psk_data_4) else fail-any) in
                                {1084}event ClientOffersAead(cr'_2,@7_tls_a);
                                {1085}event ClientOffersHash(cr'_2,@7_tls_h);
                                {1086}event ClientOffersGroup(cr'_2,@7_tls_g);
                                {1087}out(io, client_hello'_2);
                                {1089}in(io, server_hello'_2: msg);
                                {1090}let SH(sr'_2: bytes32,mode'_2: params) = server_hello'_2 in
                                (
                                    {1091}if (sr'_2 = B32(HRR24,HRR8)) then
                                        {1092}out(io, unexpected_message)
                                    else
                                        {1093}let (x_58: bitstring,g_2: group) = kex_data'_2 in
                                        {1094}let (psk_offer_2: preSharedKey,id_offer_2: identityPsk,es_offer_2: bitstring,is_safe_offer_2: bool) = psk_data'_2 in
                                        {1095}event Client_PSKOffer(@7_id_client,psk_offer_2,id_offer_2,is_safe_offer_2);
                                        {1096}event Client_Rand_client(@7_id_client,cr'_2);
                                        {1097}event Client_DH_client(@7_id_client,dh_pub(g_2,x_58));
                                        {1098}event Client_server_domain(@7_id_client,s_dom_12);
                                        {1099}let SH(sr_11: bytes32,mode_3: params) = server_hello'_2 in
                                        {1100}event Client_Rand_server(@7_id_client,sr_11);
                                        {1101}let nego(=TLS13,=@7_tls_h,=@7_tls_a,server_kex_ext(DHE_kex(=g_2,gy_3: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_8: preSharedKeyExt) = mode_3 in
                                        (
                                            {1103}event Client_DH_server(@7_id_client,gy_3);
                                            {1104}let v_168: bool = (psk_ext_8 = empty_psk_ext) in
                                            {1105}let psk_22: preSharedKey = (if v_168 then NoPsk else caught-fail) in
                                            {1107}let k_14: bitstring = (if v_168 then catch-fail(psk2b(psk_22)) else caught-fail) in
                                            {1108}let v_169: bool = not-caught-fail(k_14) in
                                            {1106}let s_18: bitstring = (if v_168 then zero else caught-fail) in
                                            {1109}let early_secret_13: bitstring = (if v_168 then catch-fail((if v_169 then hmac(@7_tls_h,s_18,k_14) else fail-any)) else caught-fail) in
                                            {1110}let v_170: bool = not-caught-fail(early_secret_13) in
                                            {1112}let m_15: bitstring = (if v_170 then zero else caught-fail) in
                                            {1113}let h_53: bitstring = (if v_170 then catch-fail(hash(@7_tls_h,m_15)) else caught-fail) in
                                            {1114}let v_171: bool = not-caught-fail(h_53) in
                                            {1111}let l_54: label = (if v_170 then tls13_ext_res_binder else caught-fail) in
                                            {1115}let x_59: bitstring = (if v_171 then (l_54,h_53) else caught-fail) in
                                            {1116}let binder_key_9: bitstring = (if v_170 then catch-fail((if v_171 then hmac(@7_tls_h,early_secret_13,x_59) else fail-any)) else caught-fail) in
                                            {1117}let v_172: bool = not-caught-fail(binder_key_9) in
                                            {1118}let v_173: bitstring = (if v_168 then catch-fail((if v_170 then (if v_172 then (early_secret_13,binder_key_9) else fail-any) else fail-any)) else caught-fail) in
                                            {1119}let v_174: bool = (not-caught-fail(v_173) && success?(1-proj-2-tuple(v_173))) in
                                            {1120}let kb_9: mac_key = (if v_174 then 2-proj-2-tuple(v_173) else caught-fail) in
                                            {1121}let es_11: bitstring = (if v_174 then 1-proj-2-tuple(v_173) else caught-fail) in
                                            {1122}let v_175: bitstring = (if not(v_168) then catch-fail(psk_data'_2) else caught-fail) in
                                            {1123}let v_176: bool = (not-caught-fail(v_175) && success?(1-proj-4-tuple(v_175))) in
                                            {1124}let is_safe_6: bool = (if v_176 then 4-proj-4-tuple(v_175) else caught-fail) in
                                            {1125}let es_12: bitstring = (if v_176 then 3-proj-4-tuple(v_175) else caught-fail) in
                                            {1126}let id_11: identityPsk = (if v_176 then 2-proj-4-tuple(v_175) else caught-fail) in
                                            {1127}let psk_23: preSharedKey = (if v_176 then 1-proj-4-tuple(v_175) else caught-fail) in
                                            {1128}let (psk_24: preSharedKey,early_secret_14: bitstring,valid_2: bool,safe_psk_6: bool) = (if v_168 then (if v_174 then (NoPsk,es_11,true,false) else fail-any) else (if v_176 then (psk_23,es_12,((psk_23 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_8)),is_safe_6) else fail-any)) in
                                            {1129}event Client_PSKChoosen(@7_id_client,psk_24,safe_psk_6);
                                            {1130}if valid_2 then
                                            (
                                                {1133}new s_19[]: seed;
                                                {1131}let gxy_5: element = catch-fail(dh_decap_fun(g_2,gy_3,x_58)) in
                                                {1132}let v_177: bool = not-caught-fail(gxy_5) in
                                                {1134}let gxy_6: element = (if v_177 then gxy_5 else dh_f(s_19)) in
                                                {1135}event Client_DH_gxy(@7_id_client,gxy_6);
                                                {1137}let m_16: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                {1138}let v_178: bool = not-caught-fail(m_16) in
                                                {1139}let h_54: bitstring = (if v_178 then catch-fail(hash(@7_tls_h,m_16)) else caught-fail) in
                                                {1140}let v_179: bool = not-caught-fail(h_54) in
                                                {1136}let l_55: label = tls13_derived in
                                                {1141}let x_60: bitstring = (if v_179 then (l_55,h_54) else caught-fail) in
                                                {1142}let extra_8: bitstring = catch-fail((if v_178 then (if v_179 then hmac(@7_tls_h,early_secret_14,x_60) else fail-any) else fail-any)) in
                                                {1143}let v_180: bool = not-caught-fail(extra_8) in
                                                {1144}let handshake_secret_3: bitstring = (if v_180 then hmac(@7_tls_h,extra_8,gxy_6) else fail-any) in
                                                {1146}let m_17: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                {1147}let v_181: bool = not-caught-fail(m_17) in
                                                {1148}let h_55: bitstring = (if v_181 then catch-fail(hash(@7_tls_h,m_17)) else caught-fail) in
                                                {1149}let v_182: bool = not-caught-fail(h_55) in
                                                {1145}let l_56: label = tls13_derived in
                                                {1150}let x_61: bitstring = (if v_182 then (l_56,h_55) else caught-fail) in
                                                {1151}let extra_9: bitstring = catch-fail((if v_181 then (if v_182 then hmac(@7_tls_h,handshake_secret_3,x_61) else fail-any) else fail-any)) in
                                                {1152}let v_183: bool = not-caught-fail(extra_9) in
                                                {1153}let k_15: bitstring = (if v_183 then zero else caught-fail) in
                                                {1154}let master_secret_13: bitstring = (if v_183 then catch-fail(hmac(@7_tls_h,handshake_secret_3,k_15)) else caught-fail) in
                                                {1155}let v_184: bool = not-caught-fail(master_secret_13) in
                                                {1088}let cur_log4_2: bitstring = (cur_log3_2,client_hello'_2) in
                                                {1102}let cur_log2_9: bitstring = (cur_log4_2,server_hello'_2) in
                                                {1157}let h_56: bitstring = (if v_184 then catch-fail(hash(@7_tls_h,cur_log2_9)) else caught-fail) in
                                                {1158}let v_185: bool = not-caught-fail(h_56) in
                                                {1156}let l_57: label = (if v_184 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {1159}let x_62: bitstring = (if v_185 then (l_57,h_56) else caught-fail) in
                                                {1160}let client_hts_3: bitstring = (if v_184 then catch-fail((if v_185 then hmac(@7_tls_h,handshake_secret_3,x_62) else fail-any)) else caught-fail) in
                                                {1161}let v_186: bool = not-caught-fail(client_hts_3) in
                                                {1163}let h_57: bitstring = (if v_186 then catch-fail(hash(@7_tls_h,cur_log2_9)) else caught-fail) in
                                                {1164}let v_187: bool = not-caught-fail(h_57) in
                                                {1162}let l_58: label = (if v_186 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {1165}let x_63: bitstring = (if v_187 then (l_58,h_57) else caught-fail) in
                                                {1166}let server_hts_3: bitstring = (if v_186 then catch-fail((if v_187 then hmac(@7_tls_h,handshake_secret_3,x_63) else fail-any)) else caught-fail) in
                                                {1167}let v_188: bool = not-caught-fail(server_hts_3) in
                                                {1169}let h_58: bitstring = (if v_188 then zero else caught-fail) in
                                                {1168}let l_59: label = (if v_188 then tls13_key else caught-fail) in
                                                {1170}let x_64: bitstring = (if v_188 then (l_59,h_58) else caught-fail) in
                                                {1171}let client_wkh_3: bitstring = (if v_188 then catch-fail(hmac(@7_tls_h,client_hts_3,x_64)) else caught-fail) in
                                                {1172}let v_189: bool = not-caught-fail(client_wkh_3) in
                                                {1174}let h_59: bitstring = (if v_189 then zero else caught-fail) in
                                                {1173}let l_60: label = (if v_189 then tls13_key else caught-fail) in
                                                {1175}let x_65: bitstring = (if v_189 then (l_60,h_59) else caught-fail) in
                                                {1176}let server_wkh_3: bitstring = (if v_189 then catch-fail(hmac(@7_tls_h,server_hts_3,x_65)) else caught-fail) in
                                                {1177}let v_190: bool = not-caught-fail(server_wkh_3) in
                                                {1179}let h_60: bitstring = (if v_190 then zero else caught-fail) in
                                                {1178}let l_61: label = (if v_190 then tls13_finished else caught-fail) in
                                                {1180}let x_66: bitstring = (if v_190 then (l_61,h_60) else caught-fail) in
                                                {1181}let client_fk_3: bitstring = (if v_190 then catch-fail(hmac(@7_tls_h,client_hts_3,x_66)) else caught-fail) in
                                                {1182}let v_191: bool = not-caught-fail(client_fk_3) in
                                                {1184}let h_61: bitstring = (if v_191 then zero else caught-fail) in
                                                {1183}let l_62: label = (if v_191 then tls13_finished else caught-fail) in
                                                {1185}let x_67: bitstring = (if v_191 then (l_62,h_61) else caught-fail) in
                                                {1186}let server_fk_3: bitstring = (if v_191 then catch-fail(hmac(@7_tls_h,server_hts_3,x_67)) else caught-fail) in
                                                {1187}let v_192: bool = not-caught-fail(server_fk_3) in
                                                {1188}let (master_secret_14: bitstring,chk_10: aead_key,shk_9: aead_key,cfin_10: mac_key,sfin_9: mac_key) = (if v_183 then (if v_184 then (if v_186 then (if v_188 then (if v_189 then (if v_190 then (if v_191 then (if v_192 then (master_secret_13,client_wkh_3,server_wkh_3,client_fk_3,server_fk_3) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {1189}event Client_chk(@7_id_client,chk_10);
                                                {1190}event Client_shk(@7_id_client,shk_9);
                                                {1191}event Client_cfin(@7_id_client,cfin_10);
                                                {1192}event Client_sfin(@7_id_client,sfin_9);
                                                {1193}in(io, enc_ee_msg_2: bitstring);
                                                {1194}let ee_msg_3: msg = aead_dec(@7_tls_a,shk_9,0,zero,enc_ee_msg_2) in
                                                {1195}let EE(ech_ee_2: echExt,extra_ee_2: extraExt) = ee_msg_3 in
                                                {1196}let cur_log2_10: bitstring = (cur_log2_9,ee_msg_3) in
                                                {1197}out(ch_client_after_EE, (@7_id_client,ArgsClientAfterEE(cr'_2,sr_11,@7_tls_h,@7_tls_a,c_dom_5,s_dom_12,psk_24,safe_psk_6,@7_comp_psk,master_secret_14,chk_10,0,shk_9,1,cfin_10,sfin_9,cur_log2_10)))
                                            )
                                            else
                                                {1198}out(io, illegal_parameter)
                                        )
                                        else
                                            {1199}out(io, illegal_parameter)
                                )
                                else
                                    {1200}out(io, unexpected_message)
                        )
                        else
                            {1201}out(io, illegal_parameter)
                    )
                    else
                        {1202}if send_kex then
                        (
                            {1203}let (x_68: bitstring,g_3: group) = kex_data_1 in
                            {1204}let (psk_offer_3: preSharedKey,id_offer_3: identityPsk,es_offer_3: bitstring,is_safe_offer_3: bool) = psk_data_1 in
                            {1205}event Client_PSKOffer(@7_id_client,psk_offer_3,id_offer_3,is_safe_offer_3);
                            {1206}event Client_Rand_client(@7_id_client,cr_10);
                            {1207}event Client_DH_client(@7_id_client,dh_pub(g_3,x_68));
                            {1208}event Client_server_domain(@7_id_client,s_dom_12);
                            {1209}let SH(sr_12: bytes32,mode_4: params) = server_hello_1 in
                            {1210}event Client_Rand_server(@7_id_client,sr_12);
                            {1211}let nego(=TLS13,=@7_tls_h,=@7_tls_a,server_kex_ext(DHE_kex(=g_3,gy_4: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_9: preSharedKeyExt) = mode_4 in
                            (
                                {1213}event Client_DH_server(@7_id_client,gy_4);
                                {1214}let v_193: bool = (psk_ext_9 = empty_psk_ext) in
                                {1215}let psk_25: preSharedKey = (if v_193 then NoPsk else caught-fail) in
                                {1217}let k_16: bitstring = (if v_193 then catch-fail(psk2b(psk_25)) else caught-fail) in
                                {1218}let v_194: bool = not-caught-fail(k_16) in
                                {1216}let s_20: bitstring = (if v_193 then zero else caught-fail) in
                                {1219}let early_secret_15: bitstring = (if v_193 then catch-fail((if v_194 then hmac(@7_tls_h,s_20,k_16) else fail-any)) else caught-fail) in
                                {1220}let v_195: bool = not-caught-fail(early_secret_15) in
                                {1222}let m_18: bitstring = (if v_195 then zero else caught-fail) in
                                {1223}let h_62: bitstring = (if v_195 then catch-fail(hash(@7_tls_h,m_18)) else caught-fail) in
                                {1224}let v_196: bool = not-caught-fail(h_62) in
                                {1221}let l_63: label = (if v_195 then tls13_ext_res_binder else caught-fail) in
                                {1225}let x_69: bitstring = (if v_196 then (l_63,h_62) else caught-fail) in
                                {1226}let binder_key_10: bitstring = (if v_195 then catch-fail((if v_196 then hmac(@7_tls_h,early_secret_15,x_69) else fail-any)) else caught-fail) in
                                {1227}let v_197: bool = not-caught-fail(binder_key_10) in
                                {1228}let v_198: bitstring = (if v_193 then catch-fail((if v_195 then (if v_197 then (early_secret_15,binder_key_10) else fail-any) else fail-any)) else caught-fail) in
                                {1229}let v_199: bool = (not-caught-fail(v_198) && success?(1-proj-2-tuple(v_198))) in
                                {1230}let kb_10: mac_key = (if v_199 then 2-proj-2-tuple(v_198) else caught-fail) in
                                {1231}let es_13: bitstring = (if v_199 then 1-proj-2-tuple(v_198) else caught-fail) in
                                {1232}let v_200: bitstring = (if not(v_193) then catch-fail(psk_data_1) else caught-fail) in
                                {1233}let v_201: bool = (not-caught-fail(v_200) && success?(1-proj-4-tuple(v_200))) in
                                {1234}let is_safe_7: bool = (if v_201 then 4-proj-4-tuple(v_200) else caught-fail) in
                                {1235}let es_14: bitstring = (if v_201 then 3-proj-4-tuple(v_200) else caught-fail) in
                                {1236}let id_12: identityPsk = (if v_201 then 2-proj-4-tuple(v_200) else caught-fail) in
                                {1237}let psk_26: preSharedKey = (if v_201 then 1-proj-4-tuple(v_200) else caught-fail) in
                                {1238}let (psk_27: preSharedKey,early_secret_16: bitstring,valid_3: bool,safe_psk_7: bool) = (if v_193 then (if v_199 then (NoPsk,es_13,true,false) else fail-any) else (if v_201 then (psk_26,es_14,((psk_26 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_9)),is_safe_7) else fail-any)) in
                                {1239}event Client_PSKChoosen(@7_id_client,psk_27,safe_psk_7);
                                {1240}if valid_3 then
                                (
                                    {1243}new s_21[]: seed;
                                    {1241}let gxy_7: element = catch-fail(dh_decap_fun(g_3,gy_4,x_68)) in
                                    {1242}let v_202: bool = not-caught-fail(gxy_7) in
                                    {1244}let gxy_8: element = (if v_202 then gxy_7 else dh_f(s_21)) in
                                    {1245}event Client_DH_gxy(@7_id_client,gxy_8);
                                    {1247}let m_19: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                    {1248}let v_203: bool = not-caught-fail(m_19) in
                                    {1249}let h_63: bitstring = (if v_203 then catch-fail(hash(@7_tls_h,m_19)) else caught-fail) in
                                    {1250}let v_204: bool = not-caught-fail(h_63) in
                                    {1246}let l_64: label = tls13_derived in
                                    {1251}let x_70: bitstring = (if v_204 then (l_64,h_63) else caught-fail) in
                                    {1252}let extra_10: bitstring = catch-fail((if v_203 then (if v_204 then hmac(@7_tls_h,early_secret_16,x_70) else fail-any) else fail-any)) in
                                    {1253}let v_205: bool = not-caught-fail(extra_10) in
                                    {1254}let handshake_secret_4: bitstring = (if v_205 then hmac(@7_tls_h,extra_10,gxy_8) else fail-any) in
                                    {1256}let m_20: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                    {1257}let v_206: bool = not-caught-fail(m_20) in
                                    {1258}let h_64: bitstring = (if v_206 then catch-fail(hash(@7_tls_h,m_20)) else caught-fail) in
                                    {1259}let v_207: bool = not-caught-fail(h_64) in
                                    {1255}let l_65: label = tls13_derived in
                                    {1260}let x_71: bitstring = (if v_207 then (l_65,h_64) else caught-fail) in
                                    {1261}let extra_11: bitstring = catch-fail((if v_206 then (if v_207 then hmac(@7_tls_h,handshake_secret_4,x_71) else fail-any) else fail-any)) in
                                    {1262}let v_208: bool = not-caught-fail(extra_11) in
                                    {1263}let k_17: bitstring = (if v_208 then zero else caught-fail) in
                                    {1264}let master_secret_15: bitstring = (if v_208 then catch-fail(hmac(@7_tls_h,handshake_secret_4,k_17)) else caught-fail) in
                                    {1265}let v_209: bool = not-caught-fail(master_secret_15) in
                                    {1212}let cur_log2_11: bitstring = (cur_log2_4,server_hello_1) in
                                    {1267}let h_65: bitstring = (if v_209 then catch-fail(hash(@7_tls_h,cur_log2_11)) else caught-fail) in
                                    {1268}let v_210: bool = not-caught-fail(h_65) in
                                    {1266}let l_66: label = (if v_209 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {1269}let x_72: bitstring = (if v_210 then (l_66,h_65) else caught-fail) in
                                    {1270}let client_hts_4: bitstring = (if v_209 then catch-fail((if v_210 then hmac(@7_tls_h,handshake_secret_4,x_72) else fail-any)) else caught-fail) in
                                    {1271}let v_211: bool = not-caught-fail(client_hts_4) in
                                    {1273}let h_66: bitstring = (if v_211 then catch-fail(hash(@7_tls_h,cur_log2_11)) else caught-fail) in
                                    {1274}let v_212: bool = not-caught-fail(h_66) in
                                    {1272}let l_67: label = (if v_211 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {1275}let x_73: bitstring = (if v_212 then (l_67,h_66) else caught-fail) in
                                    {1276}let server_hts_4: bitstring = (if v_211 then catch-fail((if v_212 then hmac(@7_tls_h,handshake_secret_4,x_73) else fail-any)) else caught-fail) in
                                    {1277}let v_213: bool = not-caught-fail(server_hts_4) in
                                    {1279}let h_67: bitstring = (if v_213 then zero else caught-fail) in
                                    {1278}let l_68: label = (if v_213 then tls13_key else caught-fail) in
                                    {1280}let x_74: bitstring = (if v_213 then (l_68,h_67) else caught-fail) in
                                    {1281}let client_wkh_4: bitstring = (if v_213 then catch-fail(hmac(@7_tls_h,client_hts_4,x_74)) else caught-fail) in
                                    {1282}let v_214: bool = not-caught-fail(client_wkh_4) in
                                    {1284}let h_68: bitstring = (if v_214 then zero else caught-fail) in
                                    {1283}let l_69: label = (if v_214 then tls13_key else caught-fail) in
                                    {1285}let x_75: bitstring = (if v_214 then (l_69,h_68) else caught-fail) in
                                    {1286}let server_wkh_4: bitstring = (if v_214 then catch-fail(hmac(@7_tls_h,server_hts_4,x_75)) else caught-fail) in
                                    {1287}let v_215: bool = not-caught-fail(server_wkh_4) in
                                    {1289}let h_69: bitstring = (if v_215 then zero else caught-fail) in
                                    {1288}let l_70: label = (if v_215 then tls13_finished else caught-fail) in
                                    {1290}let x_76: bitstring = (if v_215 then (l_70,h_69) else caught-fail) in
                                    {1291}let client_fk_4: bitstring = (if v_215 then catch-fail(hmac(@7_tls_h,client_hts_4,x_76)) else caught-fail) in
                                    {1292}let v_216: bool = not-caught-fail(client_fk_4) in
                                    {1294}let h_70: bitstring = (if v_216 then zero else caught-fail) in
                                    {1293}let l_71: label = (if v_216 then tls13_finished else caught-fail) in
                                    {1295}let x_77: bitstring = (if v_216 then (l_71,h_70) else caught-fail) in
                                    {1296}let server_fk_4: bitstring = (if v_216 then catch-fail(hmac(@7_tls_h,server_hts_4,x_77)) else caught-fail) in
                                    {1297}let v_217: bool = not-caught-fail(server_fk_4) in
                                    {1298}let (master_secret_16: bitstring,chk_11: aead_key,shk_10: aead_key,cfin_11: mac_key,sfin_10: mac_key) = (if v_208 then (if v_209 then (if v_211 then (if v_213 then (if v_214 then (if v_215 then (if v_216 then (if v_217 then (master_secret_15,client_wkh_4,server_wkh_4,client_fk_4,server_fk_4) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {1299}event Client_chk(@7_id_client,chk_11);
                                    {1300}event Client_shk(@7_id_client,shk_10);
                                    {1301}event Client_cfin(@7_id_client,cfin_11);
                                    {1302}event Client_sfin(@7_id_client,sfin_10);
                                    {1303}in(io, enc_ee_msg_3: bitstring);
                                    {1304}let ee_msg_4: msg = aead_dec(@7_tls_a,shk_10,0,zero,enc_ee_msg_3) in
                                    {1305}let EE(ech_ee_3: echExt,extra_ee_3: extraExt) = ee_msg_4 in
                                    {1306}let cur_log2_12: bitstring = (cur_log2_11,ee_msg_4) in
                                    {1307}out(ch_client_after_EE, (@7_id_client,ArgsClientAfterEE(cr_10,sr_12,@7_tls_h,@7_tls_a,c_dom_5,s_dom_12,psk_27,safe_psk_7,@7_comp_psk,master_secret_16,chk_11,0,shk_10,1,cfin_11,sfin_10,cur_log2_12)))
                                )
                                else
                                    {1308}out(io, illegal_parameter)
                            )
                            else
                                {1309}out(io, illegal_parameter)
                        )
                        else
                            {1310}out(io, illegal_parameter)
                )
                else
                    {1311}out(io, unexpected_message)
            )
        )
        else
            {1951}get pre_shared_keys(c_dom'_3: domain,=s_dom_12,=@7_tls_h,id_13: identityPsk,psk_28: preSharedKey,idP_5: idProc,is_safe_8: bool) in
            {1312}event Selected_one_time_used_psk(@7_id_client,psk_28,is_safe_8);
            {1313}event Selected_psk(c_dom_5,c_dom'_3,idP_5,is_safe_8);
            {1314}event Selected_psk_no_missmatch(@7_id_client,s_dom_12,@7_tls_h,psk_28,id_13);
            {1315}event Selected_psk_with_ID(c_dom_5,c_dom'_3,id_13,idP_5,is_safe_8);
            {1316}let v_218: bitstring = (id_13,psk_28,is_safe_8) in
            {1317}let v_219: bool = success?(1-proj-3-tuple(v_218)) in
            {1318}let is_safe_9: bool = (if v_219 then 3-proj-3-tuple(v_218) else caught-fail) in
            {1319}let psk_29: preSharedKey = (if v_219 then 2-proj-3-tuple(v_218) else caught-fail) in
            {1320}let id_14: identityPsk = (if v_219 then 1-proj-3-tuple(v_218) else caught-fail) in
            {1324}let k_18: bitstring = (if v_219 then catch-fail(psk2b(psk_29)) else caught-fail) in
            {1325}let v_220: bool = not-caught-fail(k_18) in
            {1323}let s_22: bitstring = (if v_219 then zero else caught-fail) in
            {1326}let early_secret_17: bitstring = (if v_219 then catch-fail((if v_220 then hmac(@7_tls_h,s_22,k_18) else fail-any)) else caught-fail) in
            {1327}let v_221: bool = not-caught-fail(early_secret_17) in
            {1329}let m_21: bitstring = (if v_221 then zero else caught-fail) in
            {1330}let h_71: bitstring = (if v_221 then catch-fail(hash(@7_tls_h,m_21)) else caught-fail) in
            {1331}let v_222: bool = not-caught-fail(h_71) in
            {1328}let l_72: label = (if v_221 then tls13_ext_res_binder else caught-fail) in
            {1332}let x_78: bitstring = (if v_222 then (l_72,h_71) else caught-fail) in
            {1333}let binder_key_11: bitstring = (if v_221 then catch-fail((if v_222 then hmac(@7_tls_h,early_secret_17,x_78) else fail-any)) else caught-fail) in
            {1334}let v_223: bool = not-caught-fail(binder_key_11) in
            {1335}let v_224: bitstring = (if v_219 then catch-fail((if v_221 then (if v_223 then (early_secret_17,binder_key_11) else fail-any) else fail-any)) else caught-fail) in
            {1336}let v_225: bool = (not-caught-fail(v_224) && success?(1-proj-2-tuple(v_224))) in
            {1337}let kb_11: mac_key = (if v_225 then 2-proj-2-tuple(v_224) else caught-fail) in
            {1338}let es_15: bitstring = (if v_225 then 1-proj-2-tuple(v_224) else caught-fail) in
            {1321}let offer_9: params = (if v_219 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_1,SNI(s_dom_12),ech_ext_2,extra_2,trunc_client_psk_ext(id_14)) else caught-fail) in
            {1322}let cur_log'_5: bitstring = (if v_219 then (cur_log_8,CH(cr_9,offer_9)) else caught-fail) in
            {1339}let binders_4: bitstring = (if v_225 then catch-fail(hmac(@7_tls_h,kb_11,cur_log'_5)) else caught-fail) in
            {1340}let v_226: bool = not-caught-fail(binders_4) in
            {1341}let v_227: bitstring = catch-fail((if v_219 then (if v_225 then (if v_226 then (client_psk_ext(id_14,binders_4),(psk_29,id_14,es_15,is_safe_9)) else fail-any) else fail-any) else fail-any)) in
            {1342}let v_228: bool = (not-caught-fail(v_227) && success?(1-proj-2-tuple(v_227))) in
            {1343}let psk_data_5: bitstring = (if v_228 then 2-proj-2-tuple(v_227) else caught-fail) in
            {1344}let psk_ext_10: preSharedKeyExt = (if v_228 then 1-proj-2-tuple(v_227) else caught-fail) in
            {1345}let offer_10: params = (if v_228 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_1,SNI(s_dom_12),empty_ech_ext,empty_extra_ext,psk_ext_10) else caught-fail) in
            {1346}let (client_hello_3: msg,cr_12: bytes32,kex_data_3: bitstring,psk_data_6: bitstring) = (if v_228 then (CH(cr_9,offer_10),cr_9,kex_data,psk_data_5) else fail-any) in
            {1347}event ClientOffersAead(cr_12,@7_tls_a);
            {1348}event ClientOffersHash(cr_12,@7_tls_h);
            {1349}event ClientOffersGroup(cr_12,@7_tls_g);
            {1350}out(io, client_hello_3);
            {1352}let (psk_30: preSharedKey,id_15: identityPsk,es_16: bitstring,safe_psk_8: bool) = psk_data_6 in
            (
                {1353}if (false && (psk_30 ≠ NoPsk)) then
                {1354}let client_hello_4: bitstring = (zero,client_hello_3) in
                {1356}let h_72: bitstring = catch-fail(hash(@7_tls_h,client_hello_4)) in
                {1357}let v_229: bool = not-caught-fail(h_72) in
                {1355}let l_73: label = tls13_client_early_traffic_secret in
                {1358}let x_79: bitstring = (if v_229 then (l_73,h_72) else caught-fail) in
                {1359}let atsc0_2: bitstring = catch-fail((if v_229 then hmac(@7_tls_h,es_16,x_79) else fail-any)) in
                {1360}let v_230: bool = not-caught-fail(atsc0_2) in
                {1362}let h_73: bitstring = (if v_230 then zero else caught-fail) in
                {1361}let l_74: label = (if v_230 then tls13_key else caught-fail) in
                {1363}let x_80: bitstring = (if v_230 then (l_74,h_73) else caught-fail) in
                {1364}let kc0_2: bitstring = (if v_230 then catch-fail(hmac(@7_tls_h,atsc0_2,x_80)) else caught-fail) in
                {1365}let v_231: bool = not-caught-fail(kc0_2) in
                {1367}let h_74: bitstring = (if v_231 then catch-fail(hash(@7_tls_h,client_hello_4)) else caught-fail) in
                {1368}let v_232: bool = not-caught-fail(h_74) in
                {1366}let l_75: label = (if v_231 then tls13_early_exporter_master_secret else caught-fail) in
                {1369}let x_81: bitstring = (if v_232 then (l_75,h_74) else caught-fail) in
                {1370}let ems0_4: bitstring = (if v_231 then catch-fail((if v_232 then hmac(@7_tls_h,es_16,x_81) else fail-any)) else caught-fail) in
                {1371}let v_233: bool = not-caught-fail(ems0_4) in
                {1372}let (wkc0_2: aead_key,ems0_5: bitstring) = (if v_230 then (if v_231 then (if v_233 then (kc0_2,ems0_4) else fail-any) else fail-any) else fail-any) in
                {1373}!
                {1374}in(io, (i_2: nat,ad_2: bitstring));
                {1375}if is_nat(i_2) then
                {1376}new msg_ed_1[]: bitstring;
                {1378}new st_11: stamp;
                {1379}event ClientSequenceClient0RTTDataWriteKey(@7_id_client,st_11,i_2);
                {1380}event ClientSends0(@7_id_client,cr_12,psk_30,i_2,ad_2,msg_ed_1);
                {1377}let enc_ed_1: bitstring = aead_enc(@7_tls_a,wkc0_2,i_2,ad_2,msg_ed_1) in
                {1381}out(io, enc_ed_1)
            ) | (
                {1382}in(io, server_hello_2: msg);
                {1383}let SH(sr_13: bytes32,mode_5: params) = server_hello_2 in
                (
                    {1384}event ClientEchAcceptance(@7_id_client,false);
                    {1351}let cur_log2_13: bitstring = (cur_log_8,client_hello_3) in
                    {1385}if (false && (sr_13 = B32(HRR24,HRR8))) then
                    (
                        {1386}if ((mode_5 = nego(TLS13,@7_tls_h,@7_tls_a,hrr_kex_ext(@7_tls_g),empty_sni_ext,empty_ech_ext,empty_extra_ext,empty_psk_ext)) && (send_kex ≠ true)) then
                        (
                            {1389}new rand24_3[]: bytes24;
                            {1390}new rand8_3[]: bytes8;
                            {1392}new s_23[]: seed;
                            {1393}let gx_6: element = dh_pub(@7_tls_g,dh_k(s_23)) in
                            {1394}let v_234: bitstring = (dh_k(s_23),gx_6) in
                            {1395}let v_235: bool = success?(1-proj-2-tuple(v_234)) in
                            {1396}let gx_7: element = (if v_235 then 2-proj-2-tuple(v_234) else caught-fail) in
                            {1397}let x_82: bitstring = (if v_235 then 1-proj-2-tuple(v_234) else caught-fail) in
                            {1388}let send_kex_2: bool = true in
                            {1398}let kex_2: kex_alg = (if v_235 then (if send_kex_2 then DHE_kex(@7_tls_g,gx_7) else DHE_group(@7_tls_g)) else caught-fail) in
                            {1399}let (kex_ext_3: keyShareExt,kex_data_4: bitstring) = (if v_235 then (client_kex_ext(kex_2),(x_82,@7_tls_g)) else fail-any) in
                            {1391}let cr_13: bytes32 = B32(rand24_3,rand8_3) in
                            {1387}let cur_log3_3: bitstring = (cur_log2_13,server_hello_2) in
                            {1402}if @7_use_psk then
                            (
                                {1401}let extra_12: extraExt = empty_extra_ext in
                                {1400}let ech_ext_4: echExt = empty_ech_ext in
                                {1403}let (psk_31: preSharedKey,id_16: identityPsk,old_es_2: bitstring,is_safe_10: bool) = psk_data_6 in
                                (
                                    {1407}let k_19: bitstring = catch-fail(psk2b(psk_31)) in
                                    {1408}let v_236: bool = not-caught-fail(k_19) in
                                    {1406}let s_24: bitstring = zero in
                                    {1409}let early_secret_18: bitstring = catch-fail((if v_236 then hmac(@7_tls_h,s_24,k_19) else fail-any)) in
                                    {1410}let v_237: bool = not-caught-fail(early_secret_18) in
                                    {1412}let m_22: bitstring = (if v_237 then zero else caught-fail) in
                                    {1413}let h_75: bitstring = (if v_237 then catch-fail(hash(@7_tls_h,m_22)) else caught-fail) in
                                    {1414}let v_238: bool = not-caught-fail(h_75) in
                                    {1411}let l_76: label = (if v_237 then tls13_ext_res_binder else caught-fail) in
                                    {1415}let x_83: bitstring = (if v_238 then (l_76,h_75) else caught-fail) in
                                    {1416}let binder_key_12: bitstring = (if v_237 then catch-fail((if v_238 then hmac(@7_tls_h,early_secret_18,x_83) else fail-any)) else caught-fail) in
                                    {1417}let v_239: bool = not-caught-fail(binder_key_12) in
                                    {1418}let v_240: bitstring = catch-fail((if v_237 then (if v_239 then (early_secret_18,binder_key_12) else fail-any) else fail-any)) in
                                    {1419}let v_241: bool = (not-caught-fail(v_240) && success?(1-proj-2-tuple(v_240))) in
                                    {1420}let kb_12: mac_key = (if v_241 then 2-proj-2-tuple(v_240) else caught-fail) in
                                    {1421}let es_17: bitstring = (if v_241 then 1-proj-2-tuple(v_240) else caught-fail) in
                                    {1404}let offer_11: params = nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_3,SNI(s_dom_12),ech_ext_4,extra_12,trunc_client_psk_ext(id_16)) in
                                    {1405}let cur_log'_6: bitstring = (cur_log3_3,CH(cr_13,offer_11)) in
                                    {1422}let binders_5: bitstring = (if v_241 then catch-fail(hmac(@7_tls_h,kb_12,cur_log'_6)) else caught-fail) in
                                    {1423}let v_242: bool = not-caught-fail(binders_5) in
                                    {1424}let v_243: bitstring = catch-fail((if v_241 then (if v_242 then (client_psk_ext(id_16,binders_5),(psk_31,id_16,es_17,is_safe_10)) else fail-any) else fail-any)) in
                                    {1425}let v_244: bool = (not-caught-fail(v_243) && success?(1-proj-2-tuple(v_243))) in
                                    {1426}let psk_data_7: bitstring = (if v_244 then 2-proj-2-tuple(v_243) else caught-fail) in
                                    {1427}let psk_ext_11: preSharedKeyExt = (if v_244 then 1-proj-2-tuple(v_243) else caught-fail) in
                                    {1428}let offer_12: params = (if v_244 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_3,SNI(s_dom_12),empty_ech_ext,empty_extra_ext,psk_ext_11) else caught-fail) in
                                    {1429}let (client_hello'_3: msg,cr'_3: bytes32,kex_data'_3: bitstring,psk_data'_3: bitstring) = (if v_244 then (CH(cr_13,offer_12),cr_13,kex_data_4,psk_data_7) else fail-any) in
                                    {1430}event ClientOffersAead(cr'_3,@7_tls_a);
                                    {1431}event ClientOffersHash(cr'_3,@7_tls_h);
                                    {1432}event ClientOffersGroup(cr'_3,@7_tls_g);
                                    {1433}out(io, client_hello'_3);
                                    {1435}in(io, server_hello'_3: msg);
                                    {1436}let SH(sr'_3: bytes32,mode'_3: params) = server_hello'_3 in
                                    (
                                        {1437}if (sr'_3 = B32(HRR24,HRR8)) then
                                            {1438}out(io, unexpected_message)
                                        else
                                            {1439}let (x_84: bitstring,g_4: group) = kex_data'_3 in
                                            {1440}let (psk_offer_4: preSharedKey,id_offer_4: identityPsk,es_offer_4: bitstring,is_safe_offer_4: bool) = psk_data'_3 in
                                            {1441}event Client_PSKOffer(@7_id_client,psk_offer_4,id_offer_4,is_safe_offer_4);
                                            {1442}event Client_Rand_client(@7_id_client,cr'_3);
                                            {1443}event Client_DH_client(@7_id_client,dh_pub(g_4,x_84));
                                            {1444}event Client_server_domain(@7_id_client,s_dom_12);
                                            {1445}let SH(sr_14: bytes32,mode_6: params) = server_hello'_3 in
                                            {1446}event Client_Rand_server(@7_id_client,sr_14);
                                            {1447}let nego(=TLS13,=@7_tls_h,=@7_tls_a,server_kex_ext(DHE_kex(=g_4,gy_5: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_12: preSharedKeyExt) = mode_6 in
                                            (
                                                {1449}event Client_DH_server(@7_id_client,gy_5);
                                                {1450}let v_245: bool = (psk_ext_12 = empty_psk_ext) in
                                                {1451}let psk_32: preSharedKey = (if v_245 then NoPsk else caught-fail) in
                                                {1453}let k_20: bitstring = (if v_245 then catch-fail(psk2b(psk_32)) else caught-fail) in
                                                {1454}let v_246: bool = not-caught-fail(k_20) in
                                                {1452}let s_25: bitstring = (if v_245 then zero else caught-fail) in
                                                {1455}let early_secret_19: bitstring = (if v_245 then catch-fail((if v_246 then hmac(@7_tls_h,s_25,k_20) else fail-any)) else caught-fail) in
                                                {1456}let v_247: bool = not-caught-fail(early_secret_19) in
                                                {1458}let m_23: bitstring = (if v_247 then zero else caught-fail) in
                                                {1459}let h_76: bitstring = (if v_247 then catch-fail(hash(@7_tls_h,m_23)) else caught-fail) in
                                                {1460}let v_248: bool = not-caught-fail(h_76) in
                                                {1457}let l_77: label = (if v_247 then tls13_ext_res_binder else caught-fail) in
                                                {1461}let x_85: bitstring = (if v_248 then (l_77,h_76) else caught-fail) in
                                                {1462}let binder_key_13: bitstring = (if v_247 then catch-fail((if v_248 then hmac(@7_tls_h,early_secret_19,x_85) else fail-any)) else caught-fail) in
                                                {1463}let v_249: bool = not-caught-fail(binder_key_13) in
                                                {1464}let v_250: bitstring = (if v_245 then catch-fail((if v_247 then (if v_249 then (early_secret_19,binder_key_13) else fail-any) else fail-any)) else caught-fail) in
                                                {1465}let v_251: bool = (not-caught-fail(v_250) && success?(1-proj-2-tuple(v_250))) in
                                                {1466}let kb_13: mac_key = (if v_251 then 2-proj-2-tuple(v_250) else caught-fail) in
                                                {1467}let es_18: bitstring = (if v_251 then 1-proj-2-tuple(v_250) else caught-fail) in
                                                {1468}let v_252: bitstring = (if not(v_245) then catch-fail(psk_data'_3) else caught-fail) in
                                                {1469}let v_253: bool = (not-caught-fail(v_252) && success?(1-proj-4-tuple(v_252))) in
                                                {1470}let is_safe_11: bool = (if v_253 then 4-proj-4-tuple(v_252) else caught-fail) in
                                                {1471}let es_19: bitstring = (if v_253 then 3-proj-4-tuple(v_252) else caught-fail) in
                                                {1472}let id_17: identityPsk = (if v_253 then 2-proj-4-tuple(v_252) else caught-fail) in
                                                {1473}let psk_33: preSharedKey = (if v_253 then 1-proj-4-tuple(v_252) else caught-fail) in
                                                {1474}let (psk_34: preSharedKey,early_secret_20: bitstring,valid_4: bool,safe_psk_9: bool) = (if v_245 then (if v_251 then (NoPsk,es_18,true,false) else fail-any) else (if v_253 then (psk_33,es_19,((psk_33 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_12)),is_safe_11) else fail-any)) in
                                                {1475}event Client_PSKChoosen(@7_id_client,psk_34,safe_psk_9);
                                                {1476}if valid_4 then
                                                (
                                                    {1479}new s_26[]: seed;
                                                    {1477}let gxy_9: element = catch-fail(dh_decap_fun(g_4,gy_5,x_84)) in
                                                    {1478}let v_254: bool = not-caught-fail(gxy_9) in
                                                    {1480}let gxy_10: element = (if v_254 then gxy_9 else dh_f(s_26)) in
                                                    {1481}event Client_DH_gxy(@7_id_client,gxy_10);
                                                    {1483}let m_24: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                    {1484}let v_255: bool = not-caught-fail(m_24) in
                                                    {1485}let h_77: bitstring = (if v_255 then catch-fail(hash(@7_tls_h,m_24)) else caught-fail) in
                                                    {1486}let v_256: bool = not-caught-fail(h_77) in
                                                    {1482}let l_78: label = tls13_derived in
                                                    {1487}let x_86: bitstring = (if v_256 then (l_78,h_77) else caught-fail) in
                                                    {1488}let extra_13: bitstring = catch-fail((if v_255 then (if v_256 then hmac(@7_tls_h,early_secret_20,x_86) else fail-any) else fail-any)) in
                                                    {1489}let v_257: bool = not-caught-fail(extra_13) in
                                                    {1490}let handshake_secret_5: bitstring = (if v_257 then hmac(@7_tls_h,extra_13,gxy_10) else fail-any) in
                                                    {1492}let m_25: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                    {1493}let v_258: bool = not-caught-fail(m_25) in
                                                    {1494}let h_78: bitstring = (if v_258 then catch-fail(hash(@7_tls_h,m_25)) else caught-fail) in
                                                    {1495}let v_259: bool = not-caught-fail(h_78) in
                                                    {1491}let l_79: label = tls13_derived in
                                                    {1496}let x_87: bitstring = (if v_259 then (l_79,h_78) else caught-fail) in
                                                    {1497}let extra_14: bitstring = catch-fail((if v_258 then (if v_259 then hmac(@7_tls_h,handshake_secret_5,x_87) else fail-any) else fail-any)) in
                                                    {1498}let v_260: bool = not-caught-fail(extra_14) in
                                                    {1499}let k_21: bitstring = (if v_260 then zero else caught-fail) in
                                                    {1500}let master_secret_17: bitstring = (if v_260 then catch-fail(hmac(@7_tls_h,handshake_secret_5,k_21)) else caught-fail) in
                                                    {1501}let v_261: bool = not-caught-fail(master_secret_17) in
                                                    {1434}let cur_log4_3: bitstring = (cur_log3_3,client_hello'_3) in
                                                    {1448}let cur_log2_14: bitstring = (cur_log4_3,server_hello'_3) in
                                                    {1503}let h_79: bitstring = (if v_261 then catch-fail(hash(@7_tls_h,cur_log2_14)) else caught-fail) in
                                                    {1504}let v_262: bool = not-caught-fail(h_79) in
                                                    {1502}let l_80: label = (if v_261 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {1505}let x_88: bitstring = (if v_262 then (l_80,h_79) else caught-fail) in
                                                    {1506}let client_hts_5: bitstring = (if v_261 then catch-fail((if v_262 then hmac(@7_tls_h,handshake_secret_5,x_88) else fail-any)) else caught-fail) in
                                                    {1507}let v_263: bool = not-caught-fail(client_hts_5) in
                                                    {1509}let h_80: bitstring = (if v_263 then catch-fail(hash(@7_tls_h,cur_log2_14)) else caught-fail) in
                                                    {1510}let v_264: bool = not-caught-fail(h_80) in
                                                    {1508}let l_81: label = (if v_263 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {1511}let x_89: bitstring = (if v_264 then (l_81,h_80) else caught-fail) in
                                                    {1512}let server_hts_5: bitstring = (if v_263 then catch-fail((if v_264 then hmac(@7_tls_h,handshake_secret_5,x_89) else fail-any)) else caught-fail) in
                                                    {1513}let v_265: bool = not-caught-fail(server_hts_5) in
                                                    {1515}let h_81: bitstring = (if v_265 then zero else caught-fail) in
                                                    {1514}let l_82: label = (if v_265 then tls13_key else caught-fail) in
                                                    {1516}let x_90: bitstring = (if v_265 then (l_82,h_81) else caught-fail) in
                                                    {1517}let client_wkh_5: bitstring = (if v_265 then catch-fail(hmac(@7_tls_h,client_hts_5,x_90)) else caught-fail) in
                                                    {1518}let v_266: bool = not-caught-fail(client_wkh_5) in
                                                    {1520}let h_82: bitstring = (if v_266 then zero else caught-fail) in
                                                    {1519}let l_83: label = (if v_266 then tls13_key else caught-fail) in
                                                    {1521}let x_91: bitstring = (if v_266 then (l_83,h_82) else caught-fail) in
                                                    {1522}let server_wkh_5: bitstring = (if v_266 then catch-fail(hmac(@7_tls_h,server_hts_5,x_91)) else caught-fail) in
                                                    {1523}let v_267: bool = not-caught-fail(server_wkh_5) in
                                                    {1525}let h_83: bitstring = (if v_267 then zero else caught-fail) in
                                                    {1524}let l_84: label = (if v_267 then tls13_finished else caught-fail) in
                                                    {1526}let x_92: bitstring = (if v_267 then (l_84,h_83) else caught-fail) in
                                                    {1527}let client_fk_5: bitstring = (if v_267 then catch-fail(hmac(@7_tls_h,client_hts_5,x_92)) else caught-fail) in
                                                    {1528}let v_268: bool = not-caught-fail(client_fk_5) in
                                                    {1530}let h_84: bitstring = (if v_268 then zero else caught-fail) in
                                                    {1529}let l_85: label = (if v_268 then tls13_finished else caught-fail) in
                                                    {1531}let x_93: bitstring = (if v_268 then (l_85,h_84) else caught-fail) in
                                                    {1532}let server_fk_5: bitstring = (if v_268 then catch-fail(hmac(@7_tls_h,server_hts_5,x_93)) else caught-fail) in
                                                    {1533}let v_269: bool = not-caught-fail(server_fk_5) in
                                                    {1534}let (master_secret_18: bitstring,chk_12: aead_key,shk_11: aead_key,cfin_12: mac_key,sfin_11: mac_key) = (if v_260 then (if v_261 then (if v_263 then (if v_265 then (if v_266 then (if v_267 then (if v_268 then (if v_269 then (master_secret_17,client_wkh_5,server_wkh_5,client_fk_5,server_fk_5) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {1535}event Client_chk(@7_id_client,chk_12);
                                                    {1536}event Client_shk(@7_id_client,shk_11);
                                                    {1537}event Client_cfin(@7_id_client,cfin_12);
                                                    {1538}event Client_sfin(@7_id_client,sfin_11);
                                                    {1539}in(io, enc_ee_msg_4: bitstring);
                                                    {1540}let ee_msg_5: msg = aead_dec(@7_tls_a,shk_11,0,zero,enc_ee_msg_4) in
                                                    {1541}let EE(ech_ee_4: echExt,extra_ee_4: extraExt) = ee_msg_5 in
                                                    {1542}let cur_log2_15: bitstring = (cur_log2_14,ee_msg_5) in
                                                    {1543}out(ch_client_after_EE, (@7_id_client,ArgsClientAfterEE(cr'_3,sr_14,@7_tls_h,@7_tls_a,c_dom_5,s_dom_12,psk_34,safe_psk_9,@7_comp_psk,master_secret_18,chk_12,0,shk_11,1,cfin_12,sfin_11,cur_log2_15)))
                                                )
                                                else
                                                    {1544}out(io, illegal_parameter)
                                            )
                                            else
                                                {1545}out(io, illegal_parameter)
                                    )
                                    else
                                        {1546}out(io, unexpected_message)
                                )
                                else
                                    {1699}get pre_shared_keys(c_dom'_4: domain,=s_dom_12,=@7_tls_h,id_18: identityPsk,psk_35: preSharedKey,idP_6: idProc,is_safe_12: bool) in
                                    {1547}event Selected_one_time_used_psk(@7_id_client,psk_35,is_safe_12);
                                    {1548}event Selected_psk(c_dom_5,c_dom'_4,idP_6,is_safe_12);
                                    {1549}event Selected_psk_no_missmatch(@7_id_client,s_dom_12,@7_tls_h,psk_35,id_18);
                                    {1550}event Selected_psk_with_ID(c_dom_5,c_dom'_4,id_18,idP_6,is_safe_12);
                                    {1551}let v_270: bitstring = (id_18,psk_35,is_safe_12) in
                                    {1552}let v_271: bool = success?(1-proj-3-tuple(v_270)) in
                                    {1553}let is_safe_13: bool = (if v_271 then 3-proj-3-tuple(v_270) else caught-fail) in
                                    {1554}let psk_36: preSharedKey = (if v_271 then 2-proj-3-tuple(v_270) else caught-fail) in
                                    {1555}let id_19: identityPsk = (if v_271 then 1-proj-3-tuple(v_270) else caught-fail) in
                                    {1559}let k_22: bitstring = (if v_271 then catch-fail(psk2b(psk_36)) else caught-fail) in
                                    {1560}let v_272: bool = not-caught-fail(k_22) in
                                    {1558}let s_27: bitstring = (if v_271 then zero else caught-fail) in
                                    {1561}let early_secret_21: bitstring = (if v_271 then catch-fail((if v_272 then hmac(@7_tls_h,s_27,k_22) else fail-any)) else caught-fail) in
                                    {1562}let v_273: bool = not-caught-fail(early_secret_21) in
                                    {1564}let m_26: bitstring = (if v_273 then zero else caught-fail) in
                                    {1565}let h_85: bitstring = (if v_273 then catch-fail(hash(@7_tls_h,m_26)) else caught-fail) in
                                    {1566}let v_274: bool = not-caught-fail(h_85) in
                                    {1563}let l_86: label = (if v_273 then tls13_ext_res_binder else caught-fail) in
                                    {1567}let x_94: bitstring = (if v_274 then (l_86,h_85) else caught-fail) in
                                    {1568}let binder_key_14: bitstring = (if v_273 then catch-fail((if v_274 then hmac(@7_tls_h,early_secret_21,x_94) else fail-any)) else caught-fail) in
                                    {1569}let v_275: bool = not-caught-fail(binder_key_14) in
                                    {1570}let v_276: bitstring = (if v_271 then catch-fail((if v_273 then (if v_275 then (early_secret_21,binder_key_14) else fail-any) else fail-any)) else caught-fail) in
                                    {1571}let v_277: bool = (not-caught-fail(v_276) && success?(1-proj-2-tuple(v_276))) in
                                    {1572}let kb_14: mac_key = (if v_277 then 2-proj-2-tuple(v_276) else caught-fail) in
                                    {1573}let es_20: bitstring = (if v_277 then 1-proj-2-tuple(v_276) else caught-fail) in
                                    {1556}let offer_13: params = (if v_271 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_3,SNI(s_dom_12),ech_ext_4,extra_12,trunc_client_psk_ext(id_19)) else caught-fail) in
                                    {1557}let cur_log'_7: bitstring = (if v_271 then (cur_log3_3,CH(cr_13,offer_13)) else caught-fail) in
                                    {1574}let binders_6: bitstring = (if v_277 then catch-fail(hmac(@7_tls_h,kb_14,cur_log'_7)) else caught-fail) in
                                    {1575}let v_278: bool = not-caught-fail(binders_6) in
                                    {1576}let v_279: bitstring = catch-fail((if v_271 then (if v_277 then (if v_278 then (client_psk_ext(id_19,binders_6),(psk_36,id_19,es_20,is_safe_13)) else fail-any) else fail-any) else fail-any)) in
                                    {1577}let v_280: bool = (not-caught-fail(v_279) && success?(1-proj-2-tuple(v_279))) in
                                    {1578}let psk_data_8: bitstring = (if v_280 then 2-proj-2-tuple(v_279) else caught-fail) in
                                    {1579}let psk_ext_13: preSharedKeyExt = (if v_280 then 1-proj-2-tuple(v_279) else caught-fail) in
                                    {1580}let offer_14: params = (if v_280 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_3,SNI(s_dom_12),empty_ech_ext,empty_extra_ext,psk_ext_13) else caught-fail) in
                                    {1581}let (client_hello'_4: msg,cr'_4: bytes32,kex_data'_4: bitstring,psk_data'_4: bitstring) = (if v_280 then (CH(cr_13,offer_14),cr_13,kex_data_4,psk_data_8) else fail-any) in
                                    {1582}event ClientOffersAead(cr'_4,@7_tls_a);
                                    {1583}event ClientOffersHash(cr'_4,@7_tls_h);
                                    {1584}event ClientOffersGroup(cr'_4,@7_tls_g);
                                    {1585}out(io, client_hello'_4);
                                    {1587}in(io, server_hello'_4: msg);
                                    {1588}let SH(sr'_4: bytes32,mode'_4: params) = server_hello'_4 in
                                    (
                                        {1589}if (sr'_4 = B32(HRR24,HRR8)) then
                                            {1590}out(io, unexpected_message)
                                        else
                                            {1591}let (x_95: bitstring,g_5: group) = kex_data'_4 in
                                            {1592}let (psk_offer_5: preSharedKey,id_offer_5: identityPsk,es_offer_5: bitstring,is_safe_offer_5: bool) = psk_data'_4 in
                                            {1593}event Client_PSKOffer(@7_id_client,psk_offer_5,id_offer_5,is_safe_offer_5);
                                            {1594}event Client_Rand_client(@7_id_client,cr'_4);
                                            {1595}event Client_DH_client(@7_id_client,dh_pub(g_5,x_95));
                                            {1596}event Client_server_domain(@7_id_client,s_dom_12);
                                            {1597}let SH(sr_15: bytes32,mode_7: params) = server_hello'_4 in
                                            {1598}event Client_Rand_server(@7_id_client,sr_15);
                                            {1599}let nego(=TLS13,=@7_tls_h,=@7_tls_a,server_kex_ext(DHE_kex(=g_5,gy_6: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_14: preSharedKeyExt) = mode_7 in
                                            (
                                                {1601}event Client_DH_server(@7_id_client,gy_6);
                                                {1602}let v_281: bool = (psk_ext_14 = empty_psk_ext) in
                                                {1603}let psk_37: preSharedKey = (if v_281 then NoPsk else caught-fail) in
                                                {1605}let k_23: bitstring = (if v_281 then catch-fail(psk2b(psk_37)) else caught-fail) in
                                                {1606}let v_282: bool = not-caught-fail(k_23) in
                                                {1604}let s_28: bitstring = (if v_281 then zero else caught-fail) in
                                                {1607}let early_secret_22: bitstring = (if v_281 then catch-fail((if v_282 then hmac(@7_tls_h,s_28,k_23) else fail-any)) else caught-fail) in
                                                {1608}let v_283: bool = not-caught-fail(early_secret_22) in
                                                {1610}let m_27: bitstring = (if v_283 then zero else caught-fail) in
                                                {1611}let h_86: bitstring = (if v_283 then catch-fail(hash(@7_tls_h,m_27)) else caught-fail) in
                                                {1612}let v_284: bool = not-caught-fail(h_86) in
                                                {1609}let l_87: label = (if v_283 then tls13_ext_res_binder else caught-fail) in
                                                {1613}let x_96: bitstring = (if v_284 then (l_87,h_86) else caught-fail) in
                                                {1614}let binder_key_15: bitstring = (if v_283 then catch-fail((if v_284 then hmac(@7_tls_h,early_secret_22,x_96) else fail-any)) else caught-fail) in
                                                {1615}let v_285: bool = not-caught-fail(binder_key_15) in
                                                {1616}let v_286: bitstring = (if v_281 then catch-fail((if v_283 then (if v_285 then (early_secret_22,binder_key_15) else fail-any) else fail-any)) else caught-fail) in
                                                {1617}let v_287: bool = (not-caught-fail(v_286) && success?(1-proj-2-tuple(v_286))) in
                                                {1618}let kb_15: mac_key = (if v_287 then 2-proj-2-tuple(v_286) else caught-fail) in
                                                {1619}let es_21: bitstring = (if v_287 then 1-proj-2-tuple(v_286) else caught-fail) in
                                                {1620}let v_288: bitstring = (if not(v_281) then catch-fail(psk_data'_4) else caught-fail) in
                                                {1621}let v_289: bool = (not-caught-fail(v_288) && success?(1-proj-4-tuple(v_288))) in
                                                {1622}let is_safe_14: bool = (if v_289 then 4-proj-4-tuple(v_288) else caught-fail) in
                                                {1623}let es_22: bitstring = (if v_289 then 3-proj-4-tuple(v_288) else caught-fail) in
                                                {1624}let id_20: identityPsk = (if v_289 then 2-proj-4-tuple(v_288) else caught-fail) in
                                                {1625}let psk_38: preSharedKey = (if v_289 then 1-proj-4-tuple(v_288) else caught-fail) in
                                                {1626}let (psk_39: preSharedKey,early_secret_23: bitstring,valid_5: bool,safe_psk_10: bool) = (if v_281 then (if v_287 then (NoPsk,es_21,true,false) else fail-any) else (if v_289 then (psk_38,es_22,((psk_38 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_14)),is_safe_14) else fail-any)) in
                                                {1627}event Client_PSKChoosen(@7_id_client,psk_39,safe_psk_10);
                                                {1628}if valid_5 then
                                                (
                                                    {1631}new s_29[]: seed;
                                                    {1629}let gxy_11: element = catch-fail(dh_decap_fun(g_5,gy_6,x_95)) in
                                                    {1630}let v_290: bool = not-caught-fail(gxy_11) in
                                                    {1632}let gxy_12: element = (if v_290 then gxy_11 else dh_f(s_29)) in
                                                    {1633}event Client_DH_gxy(@7_id_client,gxy_12);
                                                    {1635}let m_28: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                    {1636}let v_291: bool = not-caught-fail(m_28) in
                                                    {1637}let h_87: bitstring = (if v_291 then catch-fail(hash(@7_tls_h,m_28)) else caught-fail) in
                                                    {1638}let v_292: bool = not-caught-fail(h_87) in
                                                    {1634}let l_88: label = tls13_derived in
                                                    {1639}let x_97: bitstring = (if v_292 then (l_88,h_87) else caught-fail) in
                                                    {1640}let extra_15: bitstring = catch-fail((if v_291 then (if v_292 then hmac(@7_tls_h,early_secret_23,x_97) else fail-any) else fail-any)) in
                                                    {1641}let v_293: bool = not-caught-fail(extra_15) in
                                                    {1642}let handshake_secret_6: bitstring = (if v_293 then hmac(@7_tls_h,extra_15,gxy_12) else fail-any) in
                                                    {1644}let m_29: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                    {1645}let v_294: bool = not-caught-fail(m_29) in
                                                    {1646}let h_88: bitstring = (if v_294 then catch-fail(hash(@7_tls_h,m_29)) else caught-fail) in
                                                    {1647}let v_295: bool = not-caught-fail(h_88) in
                                                    {1643}let l_89: label = tls13_derived in
                                                    {1648}let x_98: bitstring = (if v_295 then (l_89,h_88) else caught-fail) in
                                                    {1649}let extra_16: bitstring = catch-fail((if v_294 then (if v_295 then hmac(@7_tls_h,handshake_secret_6,x_98) else fail-any) else fail-any)) in
                                                    {1650}let v_296: bool = not-caught-fail(extra_16) in
                                                    {1651}let k_24: bitstring = (if v_296 then zero else caught-fail) in
                                                    {1652}let master_secret_19: bitstring = (if v_296 then catch-fail(hmac(@7_tls_h,handshake_secret_6,k_24)) else caught-fail) in
                                                    {1653}let v_297: bool = not-caught-fail(master_secret_19) in
                                                    {1586}let cur_log4_4: bitstring = (cur_log3_3,client_hello'_4) in
                                                    {1600}let cur_log2_16: bitstring = (cur_log4_4,server_hello'_4) in
                                                    {1655}let h_89: bitstring = (if v_297 then catch-fail(hash(@7_tls_h,cur_log2_16)) else caught-fail) in
                                                    {1656}let v_298: bool = not-caught-fail(h_89) in
                                                    {1654}let l_90: label = (if v_297 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {1657}let x_99: bitstring = (if v_298 then (l_90,h_89) else caught-fail) in
                                                    {1658}let client_hts_6: bitstring = (if v_297 then catch-fail((if v_298 then hmac(@7_tls_h,handshake_secret_6,x_99) else fail-any)) else caught-fail) in
                                                    {1659}let v_299: bool = not-caught-fail(client_hts_6) in
                                                    {1661}let h_90: bitstring = (if v_299 then catch-fail(hash(@7_tls_h,cur_log2_16)) else caught-fail) in
                                                    {1662}let v_300: bool = not-caught-fail(h_90) in
                                                    {1660}let l_91: label = (if v_299 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {1663}let x_100: bitstring = (if v_300 then (l_91,h_90) else caught-fail) in
                                                    {1664}let server_hts_6: bitstring = (if v_299 then catch-fail((if v_300 then hmac(@7_tls_h,handshake_secret_6,x_100) else fail-any)) else caught-fail) in
                                                    {1665}let v_301: bool = not-caught-fail(server_hts_6) in
                                                    {1667}let h_91: bitstring = (if v_301 then zero else caught-fail) in
                                                    {1666}let l_92: label = (if v_301 then tls13_key else caught-fail) in
                                                    {1668}let x_101: bitstring = (if v_301 then (l_92,h_91) else caught-fail) in
                                                    {1669}let client_wkh_6: bitstring = (if v_301 then catch-fail(hmac(@7_tls_h,client_hts_6,x_101)) else caught-fail) in
                                                    {1670}let v_302: bool = not-caught-fail(client_wkh_6) in
                                                    {1672}let h_92: bitstring = (if v_302 then zero else caught-fail) in
                                                    {1671}let l_93: label = (if v_302 then tls13_key else caught-fail) in
                                                    {1673}let x_102: bitstring = (if v_302 then (l_93,h_92) else caught-fail) in
                                                    {1674}let server_wkh_6: bitstring = (if v_302 then catch-fail(hmac(@7_tls_h,server_hts_6,x_102)) else caught-fail) in
                                                    {1675}let v_303: bool = not-caught-fail(server_wkh_6) in
                                                    {1677}let h_93: bitstring = (if v_303 then zero else caught-fail) in
                                                    {1676}let l_94: label = (if v_303 then tls13_finished else caught-fail) in
                                                    {1678}let x_103: bitstring = (if v_303 then (l_94,h_93) else caught-fail) in
                                                    {1679}let client_fk_6: bitstring = (if v_303 then catch-fail(hmac(@7_tls_h,client_hts_6,x_103)) else caught-fail) in
                                                    {1680}let v_304: bool = not-caught-fail(client_fk_6) in
                                                    {1682}let h_94: bitstring = (if v_304 then zero else caught-fail) in
                                                    {1681}let l_95: label = (if v_304 then tls13_finished else caught-fail) in
                                                    {1683}let x_104: bitstring = (if v_304 then (l_95,h_94) else caught-fail) in
                                                    {1684}let server_fk_6: bitstring = (if v_304 then catch-fail(hmac(@7_tls_h,server_hts_6,x_104)) else caught-fail) in
                                                    {1685}let v_305: bool = not-caught-fail(server_fk_6) in
                                                    {1686}let (master_secret_20: bitstring,chk_13: aead_key,shk_12: aead_key,cfin_13: mac_key,sfin_12: mac_key) = (if v_296 then (if v_297 then (if v_299 then (if v_301 then (if v_302 then (if v_303 then (if v_304 then (if v_305 then (master_secret_19,client_wkh_6,server_wkh_6,client_fk_6,server_fk_6) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {1687}event Client_chk(@7_id_client,chk_13);
                                                    {1688}event Client_shk(@7_id_client,shk_12);
                                                    {1689}event Client_cfin(@7_id_client,cfin_13);
                                                    {1690}event Client_sfin(@7_id_client,sfin_12);
                                                    {1691}in(io, enc_ee_msg_5: bitstring);
                                                    {1692}let ee_msg_6: msg = aead_dec(@7_tls_a,shk_12,0,zero,enc_ee_msg_5) in
                                                    {1693}let EE(ech_ee_5: echExt,extra_ee_5: extraExt) = ee_msg_6 in
                                                    {1694}let cur_log2_17: bitstring = (cur_log2_16,ee_msg_6) in
                                                    {1695}out(ch_client_after_EE, (@7_id_client,ArgsClientAfterEE(cr'_4,sr_15,@7_tls_h,@7_tls_a,c_dom_5,s_dom_12,psk_39,safe_psk_10,@7_comp_psk,master_secret_20,chk_13,0,shk_12,1,cfin_13,sfin_12,cur_log2_17)))
                                                )
                                                else
                                                    {1696}out(io, illegal_parameter)
                                            )
                                            else
                                                {1697}out(io, illegal_parameter)
                                    )
                                    else
                                        {1698}out(io, unexpected_message)
                            )
                            else
                                {1700}let psk_40: preSharedKey = NoPsk in
                                {1702}let k_25: bitstring = catch-fail(psk2b(psk_40)) in
                                {1703}let v_306: bool = not-caught-fail(k_25) in
                                {1701}let s_30: bitstring = zero in
                                {1704}let early_secret_24: bitstring = catch-fail((if v_306 then hmac(@7_tls_h,s_30,k_25) else fail-any)) in
                                {1705}let v_307: bool = not-caught-fail(early_secret_24) in
                                {1707}let m_30: bitstring = (if v_307 then zero else caught-fail) in
                                {1708}let h_95: bitstring = (if v_307 then catch-fail(hash(@7_tls_h,m_30)) else caught-fail) in
                                {1709}let v_308: bool = not-caught-fail(h_95) in
                                {1706}let l_96: label = (if v_307 then tls13_ext_res_binder else caught-fail) in
                                {1710}let x_105: bitstring = (if v_308 then (l_96,h_95) else caught-fail) in
                                {1711}let binder_key_16: bitstring = (if v_307 then catch-fail((if v_308 then hmac(@7_tls_h,early_secret_24,x_105) else fail-any)) else caught-fail) in
                                {1712}let v_309: bool = not-caught-fail(binder_key_16) in
                                {1713}let v_310: bitstring = catch-fail((if v_307 then (if v_309 then (early_secret_24,binder_key_16) else fail-any) else fail-any)) in
                                {1714}let v_311: bool = (not-caught-fail(v_310) && success?(1-proj-2-tuple(v_310))) in
                                {1715}let kb_16: mac_key = (if v_311 then 2-proj-2-tuple(v_310) else caught-fail) in
                                {1716}let es_23: bitstring = (if v_311 then 1-proj-2-tuple(v_310) else caught-fail) in
                                {1717}let v_312: bitstring = catch-fail((if v_311 then (empty_psk_ext,(NoPsk,zero,es_23,false)) else fail-any)) in
                                {1718}let v_313: bool = (not-caught-fail(v_312) && success?(1-proj-2-tuple(v_312))) in
                                {1719}let psk_data_9: bitstring = (if v_313 then 2-proj-2-tuple(v_312) else caught-fail) in
                                {1720}let psk_ext_15: preSharedKeyExt = (if v_313 then 1-proj-2-tuple(v_312) else caught-fail) in
                                {1721}let offer_15: params = (if v_313 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_3,SNI(s_dom_12),empty_ech_ext,empty_extra_ext,psk_ext_15) else caught-fail) in
                                {1722}let (client_hello'_5: msg,cr'_5: bytes32,kex_data'_5: bitstring,psk_data'_5: bitstring) = (if v_313 then (CH(cr_13,offer_15),cr_13,kex_data_4,psk_data_9) else fail-any) in
                                {1723}event ClientOffersAead(cr'_5,@7_tls_a);
                                {1724}event ClientOffersHash(cr'_5,@7_tls_h);
                                {1725}event ClientOffersGroup(cr'_5,@7_tls_g);
                                {1726}out(io, client_hello'_5);
                                {1728}in(io, server_hello'_5: msg);
                                {1729}let SH(sr'_5: bytes32,mode'_5: params) = server_hello'_5 in
                                (
                                    {1730}if (sr'_5 = B32(HRR24,HRR8)) then
                                        {1731}out(io, unexpected_message)
                                    else
                                        {1732}let (x_106: bitstring,g_6: group) = kex_data'_5 in
                                        {1733}let (psk_offer_6: preSharedKey,id_offer_6: identityPsk,es_offer_6: bitstring,is_safe_offer_6: bool) = psk_data'_5 in
                                        {1734}event Client_PSKOffer(@7_id_client,psk_offer_6,id_offer_6,is_safe_offer_6);
                                        {1735}event Client_Rand_client(@7_id_client,cr'_5);
                                        {1736}event Client_DH_client(@7_id_client,dh_pub(g_6,x_106));
                                        {1737}event Client_server_domain(@7_id_client,s_dom_12);
                                        {1738}let SH(sr_16: bytes32,mode_8: params) = server_hello'_5 in
                                        {1739}event Client_Rand_server(@7_id_client,sr_16);
                                        {1740}let nego(=TLS13,=@7_tls_h,=@7_tls_a,server_kex_ext(DHE_kex(=g_6,gy_7: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_16: preSharedKeyExt) = mode_8 in
                                        (
                                            {1742}event Client_DH_server(@7_id_client,gy_7);
                                            {1743}let v_314: bool = (psk_ext_16 = empty_psk_ext) in
                                            {1744}let psk_41: preSharedKey = (if v_314 then NoPsk else caught-fail) in
                                            {1746}let k_26: bitstring = (if v_314 then catch-fail(psk2b(psk_41)) else caught-fail) in
                                            {1747}let v_315: bool = not-caught-fail(k_26) in
                                            {1745}let s_31: bitstring = (if v_314 then zero else caught-fail) in
                                            {1748}let early_secret_25: bitstring = (if v_314 then catch-fail((if v_315 then hmac(@7_tls_h,s_31,k_26) else fail-any)) else caught-fail) in
                                            {1749}let v_316: bool = not-caught-fail(early_secret_25) in
                                            {1751}let m_31: bitstring = (if v_316 then zero else caught-fail) in
                                            {1752}let h_96: bitstring = (if v_316 then catch-fail(hash(@7_tls_h,m_31)) else caught-fail) in
                                            {1753}let v_317: bool = not-caught-fail(h_96) in
                                            {1750}let l_97: label = (if v_316 then tls13_ext_res_binder else caught-fail) in
                                            {1754}let x_107: bitstring = (if v_317 then (l_97,h_96) else caught-fail) in
                                            {1755}let binder_key_17: bitstring = (if v_316 then catch-fail((if v_317 then hmac(@7_tls_h,early_secret_25,x_107) else fail-any)) else caught-fail) in
                                            {1756}let v_318: bool = not-caught-fail(binder_key_17) in
                                            {1757}let v_319: bitstring = (if v_314 then catch-fail((if v_316 then (if v_318 then (early_secret_25,binder_key_17) else fail-any) else fail-any)) else caught-fail) in
                                            {1758}let v_320: bool = (not-caught-fail(v_319) && success?(1-proj-2-tuple(v_319))) in
                                            {1759}let kb_17: mac_key = (if v_320 then 2-proj-2-tuple(v_319) else caught-fail) in
                                            {1760}let es_24: bitstring = (if v_320 then 1-proj-2-tuple(v_319) else caught-fail) in
                                            {1761}let v_321: bitstring = (if not(v_314) then catch-fail(psk_data'_5) else caught-fail) in
                                            {1762}let v_322: bool = (not-caught-fail(v_321) && success?(1-proj-4-tuple(v_321))) in
                                            {1763}let is_safe_15: bool = (if v_322 then 4-proj-4-tuple(v_321) else caught-fail) in
                                            {1764}let es_25: bitstring = (if v_322 then 3-proj-4-tuple(v_321) else caught-fail) in
                                            {1765}let id_21: identityPsk = (if v_322 then 2-proj-4-tuple(v_321) else caught-fail) in
                                            {1766}let psk_42: preSharedKey = (if v_322 then 1-proj-4-tuple(v_321) else caught-fail) in
                                            {1767}let (psk_43: preSharedKey,early_secret_26: bitstring,valid_6: bool,safe_psk_11: bool) = (if v_314 then (if v_320 then (NoPsk,es_24,true,false) else fail-any) else (if v_322 then (psk_42,es_25,((psk_42 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_16)),is_safe_15) else fail-any)) in
                                            {1768}event Client_PSKChoosen(@7_id_client,psk_43,safe_psk_11);
                                            {1769}if valid_6 then
                                            (
                                                {1772}new s_32[]: seed;
                                                {1770}let gxy_13: element = catch-fail(dh_decap_fun(g_6,gy_7,x_106)) in
                                                {1771}let v_323: bool = not-caught-fail(gxy_13) in
                                                {1773}let gxy_14: element = (if v_323 then gxy_13 else dh_f(s_32)) in
                                                {1774}event Client_DH_gxy(@7_id_client,gxy_14);
                                                {1776}let m_32: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                {1777}let v_324: bool = not-caught-fail(m_32) in
                                                {1778}let h_97: bitstring = (if v_324 then catch-fail(hash(@7_tls_h,m_32)) else caught-fail) in
                                                {1779}let v_325: bool = not-caught-fail(h_97) in
                                                {1775}let l_98: label = tls13_derived in
                                                {1780}let x_108: bitstring = (if v_325 then (l_98,h_97) else caught-fail) in
                                                {1781}let extra_17: bitstring = catch-fail((if v_324 then (if v_325 then hmac(@7_tls_h,early_secret_26,x_108) else fail-any) else fail-any)) in
                                                {1782}let v_326: bool = not-caught-fail(extra_17) in
                                                {1783}let handshake_secret_7: bitstring = (if v_326 then hmac(@7_tls_h,extra_17,gxy_14) else fail-any) in
                                                {1785}let m_33: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                {1786}let v_327: bool = not-caught-fail(m_33) in
                                                {1787}let h_98: bitstring = (if v_327 then catch-fail(hash(@7_tls_h,m_33)) else caught-fail) in
                                                {1788}let v_328: bool = not-caught-fail(h_98) in
                                                {1784}let l_99: label = tls13_derived in
                                                {1789}let x_109: bitstring = (if v_328 then (l_99,h_98) else caught-fail) in
                                                {1790}let extra_18: bitstring = catch-fail((if v_327 then (if v_328 then hmac(@7_tls_h,handshake_secret_7,x_109) else fail-any) else fail-any)) in
                                                {1791}let v_329: bool = not-caught-fail(extra_18) in
                                                {1792}let k_27: bitstring = (if v_329 then zero else caught-fail) in
                                                {1793}let master_secret_21: bitstring = (if v_329 then catch-fail(hmac(@7_tls_h,handshake_secret_7,k_27)) else caught-fail) in
                                                {1794}let v_330: bool = not-caught-fail(master_secret_21) in
                                                {1727}let cur_log4_5: bitstring = (cur_log3_3,client_hello'_5) in
                                                {1741}let cur_log2_18: bitstring = (cur_log4_5,server_hello'_5) in
                                                {1796}let h_99: bitstring = (if v_330 then catch-fail(hash(@7_tls_h,cur_log2_18)) else caught-fail) in
                                                {1797}let v_331: bool = not-caught-fail(h_99) in
                                                {1795}let l_100: label = (if v_330 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {1798}let x_110: bitstring = (if v_331 then (l_100,h_99) else caught-fail) in
                                                {1799}let client_hts_7: bitstring = (if v_330 then catch-fail((if v_331 then hmac(@7_tls_h,handshake_secret_7,x_110) else fail-any)) else caught-fail) in
                                                {1800}let v_332: bool = not-caught-fail(client_hts_7) in
                                                {1802}let h_100: bitstring = (if v_332 then catch-fail(hash(@7_tls_h,cur_log2_18)) else caught-fail) in
                                                {1803}let v_333: bool = not-caught-fail(h_100) in
                                                {1801}let l_101: label = (if v_332 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {1804}let x_111: bitstring = (if v_333 then (l_101,h_100) else caught-fail) in
                                                {1805}let server_hts_7: bitstring = (if v_332 then catch-fail((if v_333 then hmac(@7_tls_h,handshake_secret_7,x_111) else fail-any)) else caught-fail) in
                                                {1806}let v_334: bool = not-caught-fail(server_hts_7) in
                                                {1808}let h_101: bitstring = (if v_334 then zero else caught-fail) in
                                                {1807}let l_102: label = (if v_334 then tls13_key else caught-fail) in
                                                {1809}let x_112: bitstring = (if v_334 then (l_102,h_101) else caught-fail) in
                                                {1810}let client_wkh_7: bitstring = (if v_334 then catch-fail(hmac(@7_tls_h,client_hts_7,x_112)) else caught-fail) in
                                                {1811}let v_335: bool = not-caught-fail(client_wkh_7) in
                                                {1813}let h_102: bitstring = (if v_335 then zero else caught-fail) in
                                                {1812}let l_103: label = (if v_335 then tls13_key else caught-fail) in
                                                {1814}let x_113: bitstring = (if v_335 then (l_103,h_102) else caught-fail) in
                                                {1815}let server_wkh_7: bitstring = (if v_335 then catch-fail(hmac(@7_tls_h,server_hts_7,x_113)) else caught-fail) in
                                                {1816}let v_336: bool = not-caught-fail(server_wkh_7) in
                                                {1818}let h_103: bitstring = (if v_336 then zero else caught-fail) in
                                                {1817}let l_104: label = (if v_336 then tls13_finished else caught-fail) in
                                                {1819}let x_114: bitstring = (if v_336 then (l_104,h_103) else caught-fail) in
                                                {1820}let client_fk_7: bitstring = (if v_336 then catch-fail(hmac(@7_tls_h,client_hts_7,x_114)) else caught-fail) in
                                                {1821}let v_337: bool = not-caught-fail(client_fk_7) in
                                                {1823}let h_104: bitstring = (if v_337 then zero else caught-fail) in
                                                {1822}let l_105: label = (if v_337 then tls13_finished else caught-fail) in
                                                {1824}let x_115: bitstring = (if v_337 then (l_105,h_104) else caught-fail) in
                                                {1825}let server_fk_7: bitstring = (if v_337 then catch-fail(hmac(@7_tls_h,server_hts_7,x_115)) else caught-fail) in
                                                {1826}let v_338: bool = not-caught-fail(server_fk_7) in
                                                {1827}let (master_secret_22: bitstring,chk_14: aead_key,shk_13: aead_key,cfin_14: mac_key,sfin_13: mac_key) = (if v_329 then (if v_330 then (if v_332 then (if v_334 then (if v_335 then (if v_336 then (if v_337 then (if v_338 then (master_secret_21,client_wkh_7,server_wkh_7,client_fk_7,server_fk_7) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {1828}event Client_chk(@7_id_client,chk_14);
                                                {1829}event Client_shk(@7_id_client,shk_13);
                                                {1830}event Client_cfin(@7_id_client,cfin_14);
                                                {1831}event Client_sfin(@7_id_client,sfin_13);
                                                {1832}in(io, enc_ee_msg_6: bitstring);
                                                {1833}let ee_msg_7: msg = aead_dec(@7_tls_a,shk_13,0,zero,enc_ee_msg_6) in
                                                {1834}let EE(ech_ee_6: echExt,extra_ee_6: extraExt) = ee_msg_7 in
                                                {1835}let cur_log2_19: bitstring = (cur_log2_18,ee_msg_7) in
                                                {1836}out(ch_client_after_EE, (@7_id_client,ArgsClientAfterEE(cr'_5,sr_16,@7_tls_h,@7_tls_a,c_dom_5,s_dom_12,psk_43,safe_psk_11,@7_comp_psk,master_secret_22,chk_14,0,shk_13,1,cfin_14,sfin_13,cur_log2_19)))
                                            )
                                            else
                                                {1837}out(io, illegal_parameter)
                                        )
                                        else
                                            {1838}out(io, illegal_parameter)
                                )
                                else
                                    {1839}out(io, unexpected_message)
                        )
                        else
                            {1840}out(io, illegal_parameter)
                    )
                    else
                        {1841}if send_kex then
                        (
                            {1842}let (x_116: bitstring,g_7: group) = kex_data_3 in
                            {1843}let (psk_offer_7: preSharedKey,id_offer_7: identityPsk,es_offer_7: bitstring,is_safe_offer_7: bool) = psk_data_6 in
                            {1844}event Client_PSKOffer(@7_id_client,psk_offer_7,id_offer_7,is_safe_offer_7);
                            {1845}event Client_Rand_client(@7_id_client,cr_12);
                            {1846}event Client_DH_client(@7_id_client,dh_pub(g_7,x_116));
                            {1847}event Client_server_domain(@7_id_client,s_dom_12);
                            {1848}let SH(sr_17: bytes32,mode_9: params) = server_hello_2 in
                            {1849}event Client_Rand_server(@7_id_client,sr_17);
                            {1850}let nego(=TLS13,=@7_tls_h,=@7_tls_a,server_kex_ext(DHE_kex(=g_7,gy_8: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_17: preSharedKeyExt) = mode_9 in
                            (
                                {1852}event Client_DH_server(@7_id_client,gy_8);
                                {1853}let v_339: bool = (psk_ext_17 = empty_psk_ext) in
                                {1854}let psk_44: preSharedKey = (if v_339 then NoPsk else caught-fail) in
                                {1856}let k_28: bitstring = (if v_339 then catch-fail(psk2b(psk_44)) else caught-fail) in
                                {1857}let v_340: bool = not-caught-fail(k_28) in
                                {1855}let s_33: bitstring = (if v_339 then zero else caught-fail) in
                                {1858}let early_secret_27: bitstring = (if v_339 then catch-fail((if v_340 then hmac(@7_tls_h,s_33,k_28) else fail-any)) else caught-fail) in
                                {1859}let v_341: bool = not-caught-fail(early_secret_27) in
                                {1861}let m_34: bitstring = (if v_341 then zero else caught-fail) in
                                {1862}let h_105: bitstring = (if v_341 then catch-fail(hash(@7_tls_h,m_34)) else caught-fail) in
                                {1863}let v_342: bool = not-caught-fail(h_105) in
                                {1860}let l_106: label = (if v_341 then tls13_ext_res_binder else caught-fail) in
                                {1864}let x_117: bitstring = (if v_342 then (l_106,h_105) else caught-fail) in
                                {1865}let binder_key_18: bitstring = (if v_341 then catch-fail((if v_342 then hmac(@7_tls_h,early_secret_27,x_117) else fail-any)) else caught-fail) in
                                {1866}let v_343: bool = not-caught-fail(binder_key_18) in
                                {1867}let v_344: bitstring = (if v_339 then catch-fail((if v_341 then (if v_343 then (early_secret_27,binder_key_18) else fail-any) else fail-any)) else caught-fail) in
                                {1868}let v_345: bool = (not-caught-fail(v_344) && success?(1-proj-2-tuple(v_344))) in
                                {1869}let kb_18: mac_key = (if v_345 then 2-proj-2-tuple(v_344) else caught-fail) in
                                {1870}let es_26: bitstring = (if v_345 then 1-proj-2-tuple(v_344) else caught-fail) in
                                {1871}let v_346: bitstring = (if not(v_339) then catch-fail(psk_data_6) else caught-fail) in
                                {1872}let v_347: bool = (not-caught-fail(v_346) && success?(1-proj-4-tuple(v_346))) in
                                {1873}let is_safe_16: bool = (if v_347 then 4-proj-4-tuple(v_346) else caught-fail) in
                                {1874}let es_27: bitstring = (if v_347 then 3-proj-4-tuple(v_346) else caught-fail) in
                                {1875}let id_22: identityPsk = (if v_347 then 2-proj-4-tuple(v_346) else caught-fail) in
                                {1876}let psk_45: preSharedKey = (if v_347 then 1-proj-4-tuple(v_346) else caught-fail) in
                                {1877}let (psk_46: preSharedKey,early_secret_28: bitstring,valid_7: bool,safe_psk_12: bool) = (if v_339 then (if v_345 then (NoPsk,es_26,true,false) else fail-any) else (if v_347 then (psk_45,es_27,((psk_45 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_17)),is_safe_16) else fail-any)) in
                                {1878}event Client_PSKChoosen(@7_id_client,psk_46,safe_psk_12);
                                {1879}if valid_7 then
                                (
                                    {1882}new s_34[]: seed;
                                    {1880}let gxy_15: element = catch-fail(dh_decap_fun(g_7,gy_8,x_116)) in
                                    {1881}let v_348: bool = not-caught-fail(gxy_15) in
                                    {1883}let gxy_16: element = (if v_348 then gxy_15 else dh_f(s_34)) in
                                    {1884}event Client_DH_gxy(@7_id_client,gxy_16);
                                    {1886}let m_35: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                    {1887}let v_349: bool = not-caught-fail(m_35) in
                                    {1888}let h_106: bitstring = (if v_349 then catch-fail(hash(@7_tls_h,m_35)) else caught-fail) in
                                    {1889}let v_350: bool = not-caught-fail(h_106) in
                                    {1885}let l_107: label = tls13_derived in
                                    {1890}let x_118: bitstring = (if v_350 then (l_107,h_106) else caught-fail) in
                                    {1891}let extra_19: bitstring = catch-fail((if v_349 then (if v_350 then hmac(@7_tls_h,early_secret_28,x_118) else fail-any) else fail-any)) in
                                    {1892}let v_351: bool = not-caught-fail(extra_19) in
                                    {1893}let handshake_secret_8: bitstring = (if v_351 then hmac(@7_tls_h,extra_19,gxy_16) else fail-any) in
                                    {1895}let m_36: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                    {1896}let v_352: bool = not-caught-fail(m_36) in
                                    {1897}let h_107: bitstring = (if v_352 then catch-fail(hash(@7_tls_h,m_36)) else caught-fail) in
                                    {1898}let v_353: bool = not-caught-fail(h_107) in
                                    {1894}let l_108: label = tls13_derived in
                                    {1899}let x_119: bitstring = (if v_353 then (l_108,h_107) else caught-fail) in
                                    {1900}let extra_20: bitstring = catch-fail((if v_352 then (if v_353 then hmac(@7_tls_h,handshake_secret_8,x_119) else fail-any) else fail-any)) in
                                    {1901}let v_354: bool = not-caught-fail(extra_20) in
                                    {1902}let k_29: bitstring = (if v_354 then zero else caught-fail) in
                                    {1903}let master_secret_23: bitstring = (if v_354 then catch-fail(hmac(@7_tls_h,handshake_secret_8,k_29)) else caught-fail) in
                                    {1904}let v_355: bool = not-caught-fail(master_secret_23) in
                                    {1851}let cur_log2_20: bitstring = (cur_log2_13,server_hello_2) in
                                    {1906}let h_108: bitstring = (if v_355 then catch-fail(hash(@7_tls_h,cur_log2_20)) else caught-fail) in
                                    {1907}let v_356: bool = not-caught-fail(h_108) in
                                    {1905}let l_109: label = (if v_355 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {1908}let x_120: bitstring = (if v_356 then (l_109,h_108) else caught-fail) in
                                    {1909}let client_hts_8: bitstring = (if v_355 then catch-fail((if v_356 then hmac(@7_tls_h,handshake_secret_8,x_120) else fail-any)) else caught-fail) in
                                    {1910}let v_357: bool = not-caught-fail(client_hts_8) in
                                    {1912}let h_109: bitstring = (if v_357 then catch-fail(hash(@7_tls_h,cur_log2_20)) else caught-fail) in
                                    {1913}let v_358: bool = not-caught-fail(h_109) in
                                    {1911}let l_110: label = (if v_357 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {1914}let x_121: bitstring = (if v_358 then (l_110,h_109) else caught-fail) in
                                    {1915}let server_hts_8: bitstring = (if v_357 then catch-fail((if v_358 then hmac(@7_tls_h,handshake_secret_8,x_121) else fail-any)) else caught-fail) in
                                    {1916}let v_359: bool = not-caught-fail(server_hts_8) in
                                    {1918}let h_110: bitstring = (if v_359 then zero else caught-fail) in
                                    {1917}let l_111: label = (if v_359 then tls13_key else caught-fail) in
                                    {1919}let x_122: bitstring = (if v_359 then (l_111,h_110) else caught-fail) in
                                    {1920}let client_wkh_8: bitstring = (if v_359 then catch-fail(hmac(@7_tls_h,client_hts_8,x_122)) else caught-fail) in
                                    {1921}let v_360: bool = not-caught-fail(client_wkh_8) in
                                    {1923}let h_111: bitstring = (if v_360 then zero else caught-fail) in
                                    {1922}let l_112: label = (if v_360 then tls13_key else caught-fail) in
                                    {1924}let x_123: bitstring = (if v_360 then (l_112,h_111) else caught-fail) in
                                    {1925}let server_wkh_8: bitstring = (if v_360 then catch-fail(hmac(@7_tls_h,server_hts_8,x_123)) else caught-fail) in
                                    {1926}let v_361: bool = not-caught-fail(server_wkh_8) in
                                    {1928}let h_112: bitstring = (if v_361 then zero else caught-fail) in
                                    {1927}let l_113: label = (if v_361 then tls13_finished else caught-fail) in
                                    {1929}let x_124: bitstring = (if v_361 then (l_113,h_112) else caught-fail) in
                                    {1930}let client_fk_8: bitstring = (if v_361 then catch-fail(hmac(@7_tls_h,client_hts_8,x_124)) else caught-fail) in
                                    {1931}let v_362: bool = not-caught-fail(client_fk_8) in
                                    {1933}let h_113: bitstring = (if v_362 then zero else caught-fail) in
                                    {1932}let l_114: label = (if v_362 then tls13_finished else caught-fail) in
                                    {1934}let x_125: bitstring = (if v_362 then (l_114,h_113) else caught-fail) in
                                    {1935}let server_fk_8: bitstring = (if v_362 then catch-fail(hmac(@7_tls_h,server_hts_8,x_125)) else caught-fail) in
                                    {1936}let v_363: bool = not-caught-fail(server_fk_8) in
                                    {1937}let (master_secret_24: bitstring,chk_15: aead_key,shk_14: aead_key,cfin_15: mac_key,sfin_14: mac_key) = (if v_354 then (if v_355 then (if v_357 then (if v_359 then (if v_360 then (if v_361 then (if v_362 then (if v_363 then (master_secret_23,client_wkh_8,server_wkh_8,client_fk_8,server_fk_8) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {1938}event Client_chk(@7_id_client,chk_15);
                                    {1939}event Client_shk(@7_id_client,shk_14);
                                    {1940}event Client_cfin(@7_id_client,cfin_15);
                                    {1941}event Client_sfin(@7_id_client,sfin_14);
                                    {1942}in(io, enc_ee_msg_7: bitstring);
                                    {1943}let ee_msg_8: msg = aead_dec(@7_tls_a,shk_14,0,zero,enc_ee_msg_7) in
                                    {1944}let EE(ech_ee_7: echExt,extra_ee_7: extraExt) = ee_msg_8 in
                                    {1945}let cur_log2_21: bitstring = (cur_log2_20,ee_msg_8) in
                                    {1946}out(ch_client_after_EE, (@7_id_client,ArgsClientAfterEE(cr_12,sr_17,@7_tls_h,@7_tls_a,c_dom_5,s_dom_12,psk_46,safe_psk_12,@7_comp_psk,master_secret_24,chk_15,0,shk_14,1,cfin_15,sfin_14,cur_log2_21)))
                                )
                                else
                                    {1947}out(io, illegal_parameter)
                            )
                            else
                                {1948}out(io, illegal_parameter)
                        )
                        else
                            {1949}out(io, illegal_parameter)
                )
                else
                    {1950}out(io, unexpected_message)
            )
    )
    else
        {1952}let psk_47: preSharedKey = NoPsk in
        {1954}let k_30: bitstring = catch-fail(psk2b(psk_47)) in
        {1955}let v_364: bool = not-caught-fail(k_30) in
        {1953}let s_35: bitstring = zero in
        {1956}let early_secret_29: bitstring = catch-fail((if v_364 then hmac(@7_tls_h,s_35,k_30) else fail-any)) in
        {1957}let v_365: bool = not-caught-fail(early_secret_29) in
        {1959}let m_37: bitstring = (if v_365 then zero else caught-fail) in
        {1960}let h_114: bitstring = (if v_365 then catch-fail(hash(@7_tls_h,m_37)) else caught-fail) in
        {1961}let v_366: bool = not-caught-fail(h_114) in
        {1958}let l_115: label = (if v_365 then tls13_ext_res_binder else caught-fail) in
        {1962}let x_126: bitstring = (if v_366 then (l_115,h_114) else caught-fail) in
        {1963}let binder_key_19: bitstring = (if v_365 then catch-fail((if v_366 then hmac(@7_tls_h,early_secret_29,x_126) else fail-any)) else caught-fail) in
        {1964}let v_367: bool = not-caught-fail(binder_key_19) in
        {1965}let v_368: bitstring = catch-fail((if v_365 then (if v_367 then (early_secret_29,binder_key_19) else fail-any) else fail-any)) in
        {1966}let v_369: bool = (not-caught-fail(v_368) && success?(1-proj-2-tuple(v_368))) in
        {1967}let kb_19: mac_key = (if v_369 then 2-proj-2-tuple(v_368) else caught-fail) in
        {1968}let es_28: bitstring = (if v_369 then 1-proj-2-tuple(v_368) else caught-fail) in
        {1969}let v_370: bitstring = catch-fail((if v_369 then (empty_psk_ext,(NoPsk,zero,es_28,false)) else fail-any)) in
        {1970}let v_371: bool = (not-caught-fail(v_370) && success?(1-proj-2-tuple(v_370))) in
        {1971}let psk_data_10: bitstring = (if v_371 then 2-proj-2-tuple(v_370) else caught-fail) in
        {1972}let psk_ext_18: preSharedKeyExt = (if v_371 then 1-proj-2-tuple(v_370) else caught-fail) in
        {1973}let offer_16: params = (if v_371 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_1,SNI(s_dom_12),empty_ech_ext,empty_extra_ext,psk_ext_18) else caught-fail) in
        {1974}let (client_hello_5: msg,cr_14: bytes32,kex_data_5: bitstring,psk_data_11: bitstring) = (if v_371 then (CH(cr_9,offer_16),cr_9,kex_data,psk_data_10) else fail-any) in
        {1975}event ClientOffersAead(cr_14,@7_tls_a);
        {1976}event ClientOffersHash(cr_14,@7_tls_h);
        {1977}event ClientOffersGroup(cr_14,@7_tls_g);
        {1978}out(io, client_hello_5);
        {1980}let (psk_48: preSharedKey,id_23: identityPsk,es_29: bitstring,safe_psk_13: bool) = psk_data_11 in
        (
            {1981}if (false && (psk_48 ≠ NoPsk)) then
            {1982}let client_hello_6: bitstring = (zero,client_hello_5) in
            {1984}let h_115: bitstring = catch-fail(hash(@7_tls_h,client_hello_6)) in
            {1985}let v_372: bool = not-caught-fail(h_115) in
            {1983}let l_116: label = tls13_client_early_traffic_secret in
            {1986}let x_127: bitstring = (if v_372 then (l_116,h_115) else caught-fail) in
            {1987}let atsc0_3: bitstring = catch-fail((if v_372 then hmac(@7_tls_h,es_29,x_127) else fail-any)) in
            {1988}let v_373: bool = not-caught-fail(atsc0_3) in
            {1990}let h_116: bitstring = (if v_373 then zero else caught-fail) in
            {1989}let l_117: label = (if v_373 then tls13_key else caught-fail) in
            {1991}let x_128: bitstring = (if v_373 then (l_117,h_116) else caught-fail) in
            {1992}let kc0_3: bitstring = (if v_373 then catch-fail(hmac(@7_tls_h,atsc0_3,x_128)) else caught-fail) in
            {1993}let v_374: bool = not-caught-fail(kc0_3) in
            {1995}let h_117: bitstring = (if v_374 then catch-fail(hash(@7_tls_h,client_hello_6)) else caught-fail) in
            {1996}let v_375: bool = not-caught-fail(h_117) in
            {1994}let l_118: label = (if v_374 then tls13_early_exporter_master_secret else caught-fail) in
            {1997}let x_129: bitstring = (if v_375 then (l_118,h_117) else caught-fail) in
            {1998}let ems0_6: bitstring = (if v_374 then catch-fail((if v_375 then hmac(@7_tls_h,es_29,x_129) else fail-any)) else caught-fail) in
            {1999}let v_376: bool = not-caught-fail(ems0_6) in
            {2000}let (wkc0_3: aead_key,ems0_7: bitstring) = (if v_373 then (if v_374 then (if v_376 then (kc0_3,ems0_6) else fail-any) else fail-any) else fail-any) in
            {2001}!
            {2002}in(io, (i_3: nat,ad_3: bitstring));
            {2003}if is_nat(i_3) then
            {2004}new msg_ed_2[]: bitstring;
            {2006}new st_12: stamp;
            {2007}event ClientSequenceClient0RTTDataWriteKey(@7_id_client,st_12,i_3);
            {2008}event ClientSends0(@7_id_client,cr_14,psk_48,i_3,ad_3,msg_ed_2);
            {2005}let enc_ed_2: bitstring = aead_enc(@7_tls_a,wkc0_3,i_3,ad_3,msg_ed_2) in
            {2009}out(io, enc_ed_2)
        ) | (
            {2010}in(io, server_hello_3: msg);
            {2011}let SH(sr_18: bytes32,mode_10: params) = server_hello_3 in
            (
                {2012}event ClientEchAcceptance(@7_id_client,false);
                {1979}let cur_log2_22: bitstring = (cur_log_8,client_hello_5) in
                {2013}if (false && (sr_18 = B32(HRR24,HRR8))) then
                (
                    {2014}if ((mode_10 = nego(TLS13,@7_tls_h,@7_tls_a,hrr_kex_ext(@7_tls_g),empty_sni_ext,empty_ech_ext,empty_extra_ext,empty_psk_ext)) && (send_kex ≠ true)) then
                    (
                        {2017}new rand24_4[]: bytes24;
                        {2018}new rand8_4[]: bytes8;
                        {2020}new s_36[]: seed;
                        {2021}let gx_8: element = dh_pub(@7_tls_g,dh_k(s_36)) in
                        {2022}let v_377: bitstring = (dh_k(s_36),gx_8) in
                        {2023}let v_378: bool = success?(1-proj-2-tuple(v_377)) in
                        {2024}let gx_9: element = (if v_378 then 2-proj-2-tuple(v_377) else caught-fail) in
                        {2025}let x_130: bitstring = (if v_378 then 1-proj-2-tuple(v_377) else caught-fail) in
                        {2016}let send_kex_3: bool = true in
                        {2026}let kex_3: kex_alg = (if v_378 then (if send_kex_3 then DHE_kex(@7_tls_g,gx_9) else DHE_group(@7_tls_g)) else caught-fail) in
                        {2027}let (kex_ext_4: keyShareExt,kex_data_6: bitstring) = (if v_378 then (client_kex_ext(kex_3),(x_130,@7_tls_g)) else fail-any) in
                        {2019}let cr_15: bytes32 = B32(rand24_4,rand8_4) in
                        {2015}let cur_log3_4: bitstring = (cur_log2_22,server_hello_3) in
                        {2030}if @7_use_psk then
                        (
                            {2029}let extra_21: extraExt = empty_extra_ext in
                            {2028}let ech_ext_5: echExt = empty_ech_ext in
                            {2031}let (psk_49: preSharedKey,id_24: identityPsk,old_es_3: bitstring,is_safe_17: bool) = psk_data_11 in
                            (
                                {2035}let k_31: bitstring = catch-fail(psk2b(psk_49)) in
                                {2036}let v_379: bool = not-caught-fail(k_31) in
                                {2034}let s_37: bitstring = zero in
                                {2037}let early_secret_30: bitstring = catch-fail((if v_379 then hmac(@7_tls_h,s_37,k_31) else fail-any)) in
                                {2038}let v_380: bool = not-caught-fail(early_secret_30) in
                                {2040}let m_38: bitstring = (if v_380 then zero else caught-fail) in
                                {2041}let h_118: bitstring = (if v_380 then catch-fail(hash(@7_tls_h,m_38)) else caught-fail) in
                                {2042}let v_381: bool = not-caught-fail(h_118) in
                                {2039}let l_119: label = (if v_380 then tls13_ext_res_binder else caught-fail) in
                                {2043}let x_131: bitstring = (if v_381 then (l_119,h_118) else caught-fail) in
                                {2044}let binder_key_20: bitstring = (if v_380 then catch-fail((if v_381 then hmac(@7_tls_h,early_secret_30,x_131) else fail-any)) else caught-fail) in
                                {2045}let v_382: bool = not-caught-fail(binder_key_20) in
                                {2046}let v_383: bitstring = catch-fail((if v_380 then (if v_382 then (early_secret_30,binder_key_20) else fail-any) else fail-any)) in
                                {2047}let v_384: bool = (not-caught-fail(v_383) && success?(1-proj-2-tuple(v_383))) in
                                {2048}let kb_20: mac_key = (if v_384 then 2-proj-2-tuple(v_383) else caught-fail) in
                                {2049}let es_30: bitstring = (if v_384 then 1-proj-2-tuple(v_383) else caught-fail) in
                                {2032}let offer_17: params = nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_4,SNI(s_dom_12),ech_ext_5,extra_21,trunc_client_psk_ext(id_24)) in
                                {2033}let cur_log'_8: bitstring = (cur_log3_4,CH(cr_15,offer_17)) in
                                {2050}let binders_7: bitstring = (if v_384 then catch-fail(hmac(@7_tls_h,kb_20,cur_log'_8)) else caught-fail) in
                                {2051}let v_385: bool = not-caught-fail(binders_7) in
                                {2052}let v_386: bitstring = catch-fail((if v_384 then (if v_385 then (client_psk_ext(id_24,binders_7),(psk_49,id_24,es_30,is_safe_17)) else fail-any) else fail-any)) in
                                {2053}let v_387: bool = (not-caught-fail(v_386) && success?(1-proj-2-tuple(v_386))) in
                                {2054}let psk_data_12: bitstring = (if v_387 then 2-proj-2-tuple(v_386) else caught-fail) in
                                {2055}let psk_ext_19: preSharedKeyExt = (if v_387 then 1-proj-2-tuple(v_386) else caught-fail) in
                                {2056}let offer_18: params = (if v_387 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_4,SNI(s_dom_12),empty_ech_ext,empty_extra_ext,psk_ext_19) else caught-fail) in
                                {2057}let (client_hello'_6: msg,cr'_6: bytes32,kex_data'_6: bitstring,psk_data'_6: bitstring) = (if v_387 then (CH(cr_15,offer_18),cr_15,kex_data_6,psk_data_12) else fail-any) in
                                {2058}event ClientOffersAead(cr'_6,@7_tls_a);
                                {2059}event ClientOffersHash(cr'_6,@7_tls_h);
                                {2060}event ClientOffersGroup(cr'_6,@7_tls_g);
                                {2061}out(io, client_hello'_6);
                                {2063}in(io, server_hello'_6: msg);
                                {2064}let SH(sr'_6: bytes32,mode'_6: params) = server_hello'_6 in
                                (
                                    {2065}if (sr'_6 = B32(HRR24,HRR8)) then
                                        {2066}out(io, unexpected_message)
                                    else
                                        {2067}let (x_132: bitstring,g_8: group) = kex_data'_6 in
                                        {2068}let (psk_offer_8: preSharedKey,id_offer_8: identityPsk,es_offer_8: bitstring,is_safe_offer_8: bool) = psk_data'_6 in
                                        {2069}event Client_PSKOffer(@7_id_client,psk_offer_8,id_offer_8,is_safe_offer_8);
                                        {2070}event Client_Rand_client(@7_id_client,cr'_6);
                                        {2071}event Client_DH_client(@7_id_client,dh_pub(g_8,x_132));
                                        {2072}event Client_server_domain(@7_id_client,s_dom_12);
                                        {2073}let SH(sr_19: bytes32,mode_11: params) = server_hello'_6 in
                                        {2074}event Client_Rand_server(@7_id_client,sr_19);
                                        {2075}let nego(=TLS13,=@7_tls_h,=@7_tls_a,server_kex_ext(DHE_kex(=g_8,gy_9: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_20: preSharedKeyExt) = mode_11 in
                                        (
                                            {2077}event Client_DH_server(@7_id_client,gy_9);
                                            {2078}let v_388: bool = (psk_ext_20 = empty_psk_ext) in
                                            {2079}let psk_50: preSharedKey = (if v_388 then NoPsk else caught-fail) in
                                            {2081}let k_32: bitstring = (if v_388 then catch-fail(psk2b(psk_50)) else caught-fail) in
                                            {2082}let v_389: bool = not-caught-fail(k_32) in
                                            {2080}let s_38: bitstring = (if v_388 then zero else caught-fail) in
                                            {2083}let early_secret_31: bitstring = (if v_388 then catch-fail((if v_389 then hmac(@7_tls_h,s_38,k_32) else fail-any)) else caught-fail) in
                                            {2084}let v_390: bool = not-caught-fail(early_secret_31) in
                                            {2086}let m_39: bitstring = (if v_390 then zero else caught-fail) in
                                            {2087}let h_119: bitstring = (if v_390 then catch-fail(hash(@7_tls_h,m_39)) else caught-fail) in
                                            {2088}let v_391: bool = not-caught-fail(h_119) in
                                            {2085}let l_120: label = (if v_390 then tls13_ext_res_binder else caught-fail) in
                                            {2089}let x_133: bitstring = (if v_391 then (l_120,h_119) else caught-fail) in
                                            {2090}let binder_key_21: bitstring = (if v_390 then catch-fail((if v_391 then hmac(@7_tls_h,early_secret_31,x_133) else fail-any)) else caught-fail) in
                                            {2091}let v_392: bool = not-caught-fail(binder_key_21) in
                                            {2092}let v_393: bitstring = (if v_388 then catch-fail((if v_390 then (if v_392 then (early_secret_31,binder_key_21) else fail-any) else fail-any)) else caught-fail) in
                                            {2093}let v_394: bool = (not-caught-fail(v_393) && success?(1-proj-2-tuple(v_393))) in
                                            {2094}let kb_21: mac_key = (if v_394 then 2-proj-2-tuple(v_393) else caught-fail) in
                                            {2095}let es_31: bitstring = (if v_394 then 1-proj-2-tuple(v_393) else caught-fail) in
                                            {2096}let v_395: bitstring = (if not(v_388) then catch-fail(psk_data'_6) else caught-fail) in
                                            {2097}let v_396: bool = (not-caught-fail(v_395) && success?(1-proj-4-tuple(v_395))) in
                                            {2098}let is_safe_18: bool = (if v_396 then 4-proj-4-tuple(v_395) else caught-fail) in
                                            {2099}let es_32: bitstring = (if v_396 then 3-proj-4-tuple(v_395) else caught-fail) in
                                            {2100}let id_25: identityPsk = (if v_396 then 2-proj-4-tuple(v_395) else caught-fail) in
                                            {2101}let psk_51: preSharedKey = (if v_396 then 1-proj-4-tuple(v_395) else caught-fail) in
                                            {2102}let (psk_52: preSharedKey,early_secret_32: bitstring,valid_8: bool,safe_psk_14: bool) = (if v_388 then (if v_394 then (NoPsk,es_31,true,false) else fail-any) else (if v_396 then (psk_51,es_32,((psk_51 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_20)),is_safe_18) else fail-any)) in
                                            {2103}event Client_PSKChoosen(@7_id_client,psk_52,safe_psk_14);
                                            {2104}if valid_8 then
                                            (
                                                {2107}new s_39[]: seed;
                                                {2105}let gxy_17: element = catch-fail(dh_decap_fun(g_8,gy_9,x_132)) in
                                                {2106}let v_397: bool = not-caught-fail(gxy_17) in
                                                {2108}let gxy_18: element = (if v_397 then gxy_17 else dh_f(s_39)) in
                                                {2109}event Client_DH_gxy(@7_id_client,gxy_18);
                                                {2111}let m_40: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                {2112}let v_398: bool = not-caught-fail(m_40) in
                                                {2113}let h_120: bitstring = (if v_398 then catch-fail(hash(@7_tls_h,m_40)) else caught-fail) in
                                                {2114}let v_399: bool = not-caught-fail(h_120) in
                                                {2110}let l_121: label = tls13_derived in
                                                {2115}let x_134: bitstring = (if v_399 then (l_121,h_120) else caught-fail) in
                                                {2116}let extra_22: bitstring = catch-fail((if v_398 then (if v_399 then hmac(@7_tls_h,early_secret_32,x_134) else fail-any) else fail-any)) in
                                                {2117}let v_400: bool = not-caught-fail(extra_22) in
                                                {2118}let handshake_secret_9: bitstring = (if v_400 then hmac(@7_tls_h,extra_22,gxy_18) else fail-any) in
                                                {2120}let m_41: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                {2121}let v_401: bool = not-caught-fail(m_41) in
                                                {2122}let h_121: bitstring = (if v_401 then catch-fail(hash(@7_tls_h,m_41)) else caught-fail) in
                                                {2123}let v_402: bool = not-caught-fail(h_121) in
                                                {2119}let l_122: label = tls13_derived in
                                                {2124}let x_135: bitstring = (if v_402 then (l_122,h_121) else caught-fail) in
                                                {2125}let extra_23: bitstring = catch-fail((if v_401 then (if v_402 then hmac(@7_tls_h,handshake_secret_9,x_135) else fail-any) else fail-any)) in
                                                {2126}let v_403: bool = not-caught-fail(extra_23) in
                                                {2127}let k_33: bitstring = (if v_403 then zero else caught-fail) in
                                                {2128}let master_secret_25: bitstring = (if v_403 then catch-fail(hmac(@7_tls_h,handshake_secret_9,k_33)) else caught-fail) in
                                                {2129}let v_404: bool = not-caught-fail(master_secret_25) in
                                                {2062}let cur_log4_6: bitstring = (cur_log3_4,client_hello'_6) in
                                                {2076}let cur_log2_23: bitstring = (cur_log4_6,server_hello'_6) in
                                                {2131}let h_122: bitstring = (if v_404 then catch-fail(hash(@7_tls_h,cur_log2_23)) else caught-fail) in
                                                {2132}let v_405: bool = not-caught-fail(h_122) in
                                                {2130}let l_123: label = (if v_404 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {2133}let x_136: bitstring = (if v_405 then (l_123,h_122) else caught-fail) in
                                                {2134}let client_hts_9: bitstring = (if v_404 then catch-fail((if v_405 then hmac(@7_tls_h,handshake_secret_9,x_136) else fail-any)) else caught-fail) in
                                                {2135}let v_406: bool = not-caught-fail(client_hts_9) in
                                                {2137}let h_123: bitstring = (if v_406 then catch-fail(hash(@7_tls_h,cur_log2_23)) else caught-fail) in
                                                {2138}let v_407: bool = not-caught-fail(h_123) in
                                                {2136}let l_124: label = (if v_406 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {2139}let x_137: bitstring = (if v_407 then (l_124,h_123) else caught-fail) in
                                                {2140}let server_hts_9: bitstring = (if v_406 then catch-fail((if v_407 then hmac(@7_tls_h,handshake_secret_9,x_137) else fail-any)) else caught-fail) in
                                                {2141}let v_408: bool = not-caught-fail(server_hts_9) in
                                                {2143}let h_124: bitstring = (if v_408 then zero else caught-fail) in
                                                {2142}let l_125: label = (if v_408 then tls13_key else caught-fail) in
                                                {2144}let x_138: bitstring = (if v_408 then (l_125,h_124) else caught-fail) in
                                                {2145}let client_wkh_9: bitstring = (if v_408 then catch-fail(hmac(@7_tls_h,client_hts_9,x_138)) else caught-fail) in
                                                {2146}let v_409: bool = not-caught-fail(client_wkh_9) in
                                                {2148}let h_125: bitstring = (if v_409 then zero else caught-fail) in
                                                {2147}let l_126: label = (if v_409 then tls13_key else caught-fail) in
                                                {2149}let x_139: bitstring = (if v_409 then (l_126,h_125) else caught-fail) in
                                                {2150}let server_wkh_9: bitstring = (if v_409 then catch-fail(hmac(@7_tls_h,server_hts_9,x_139)) else caught-fail) in
                                                {2151}let v_410: bool = not-caught-fail(server_wkh_9) in
                                                {2153}let h_126: bitstring = (if v_410 then zero else caught-fail) in
                                                {2152}let l_127: label = (if v_410 then tls13_finished else caught-fail) in
                                                {2154}let x_140: bitstring = (if v_410 then (l_127,h_126) else caught-fail) in
                                                {2155}let client_fk_9: bitstring = (if v_410 then catch-fail(hmac(@7_tls_h,client_hts_9,x_140)) else caught-fail) in
                                                {2156}let v_411: bool = not-caught-fail(client_fk_9) in
                                                {2158}let h_127: bitstring = (if v_411 then zero else caught-fail) in
                                                {2157}let l_128: label = (if v_411 then tls13_finished else caught-fail) in
                                                {2159}let x_141: bitstring = (if v_411 then (l_128,h_127) else caught-fail) in
                                                {2160}let server_fk_9: bitstring = (if v_411 then catch-fail(hmac(@7_tls_h,server_hts_9,x_141)) else caught-fail) in
                                                {2161}let v_412: bool = not-caught-fail(server_fk_9) in
                                                {2162}let (master_secret_26: bitstring,chk_16: aead_key,shk_15: aead_key,cfin_16: mac_key,sfin_15: mac_key) = (if v_403 then (if v_404 then (if v_406 then (if v_408 then (if v_409 then (if v_410 then (if v_411 then (if v_412 then (master_secret_25,client_wkh_9,server_wkh_9,client_fk_9,server_fk_9) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {2163}event Client_chk(@7_id_client,chk_16);
                                                {2164}event Client_shk(@7_id_client,shk_15);
                                                {2165}event Client_cfin(@7_id_client,cfin_16);
                                                {2166}event Client_sfin(@7_id_client,sfin_15);
                                                {2167}in(io, enc_ee_msg_8: bitstring);
                                                {2168}let ee_msg_9: msg = aead_dec(@7_tls_a,shk_15,0,zero,enc_ee_msg_8) in
                                                {2169}let EE(ech_ee_8: echExt,extra_ee_8: extraExt) = ee_msg_9 in
                                                {2170}let cur_log2_24: bitstring = (cur_log2_23,ee_msg_9) in
                                                {2171}out(ch_client_after_EE, (@7_id_client,ArgsClientAfterEE(cr'_6,sr_19,@7_tls_h,@7_tls_a,c_dom_5,s_dom_12,psk_52,safe_psk_14,@7_comp_psk,master_secret_26,chk_16,0,shk_15,1,cfin_16,sfin_15,cur_log2_24)))
                                            )
                                            else
                                                {2172}out(io, illegal_parameter)
                                        )
                                        else
                                            {2173}out(io, illegal_parameter)
                                )
                                else
                                    {2174}out(io, unexpected_message)
                            )
                            else
                                {2327}get pre_shared_keys(c_dom'_5: domain,=s_dom_12,=@7_tls_h,id_26: identityPsk,psk_53: preSharedKey,idP_7: idProc,is_safe_19: bool) in
                                {2175}event Selected_one_time_used_psk(@7_id_client,psk_53,is_safe_19);
                                {2176}event Selected_psk(c_dom_5,c_dom'_5,idP_7,is_safe_19);
                                {2177}event Selected_psk_no_missmatch(@7_id_client,s_dom_12,@7_tls_h,psk_53,id_26);
                                {2178}event Selected_psk_with_ID(c_dom_5,c_dom'_5,id_26,idP_7,is_safe_19);
                                {2179}let v_413: bitstring = (id_26,psk_53,is_safe_19) in
                                {2180}let v_414: bool = success?(1-proj-3-tuple(v_413)) in
                                {2181}let is_safe_20: bool = (if v_414 then 3-proj-3-tuple(v_413) else caught-fail) in
                                {2182}let psk_54: preSharedKey = (if v_414 then 2-proj-3-tuple(v_413) else caught-fail) in
                                {2183}let id_27: identityPsk = (if v_414 then 1-proj-3-tuple(v_413) else caught-fail) in
                                {2187}let k_34: bitstring = (if v_414 then catch-fail(psk2b(psk_54)) else caught-fail) in
                                {2188}let v_415: bool = not-caught-fail(k_34) in
                                {2186}let s_40: bitstring = (if v_414 then zero else caught-fail) in
                                {2189}let early_secret_33: bitstring = (if v_414 then catch-fail((if v_415 then hmac(@7_tls_h,s_40,k_34) else fail-any)) else caught-fail) in
                                {2190}let v_416: bool = not-caught-fail(early_secret_33) in
                                {2192}let m_42: bitstring = (if v_416 then zero else caught-fail) in
                                {2193}let h_128: bitstring = (if v_416 then catch-fail(hash(@7_tls_h,m_42)) else caught-fail) in
                                {2194}let v_417: bool = not-caught-fail(h_128) in
                                {2191}let l_129: label = (if v_416 then tls13_ext_res_binder else caught-fail) in
                                {2195}let x_142: bitstring = (if v_417 then (l_129,h_128) else caught-fail) in
                                {2196}let binder_key_22: bitstring = (if v_416 then catch-fail((if v_417 then hmac(@7_tls_h,early_secret_33,x_142) else fail-any)) else caught-fail) in
                                {2197}let v_418: bool = not-caught-fail(binder_key_22) in
                                {2198}let v_419: bitstring = (if v_414 then catch-fail((if v_416 then (if v_418 then (early_secret_33,binder_key_22) else fail-any) else fail-any)) else caught-fail) in
                                {2199}let v_420: bool = (not-caught-fail(v_419) && success?(1-proj-2-tuple(v_419))) in
                                {2200}let kb_22: mac_key = (if v_420 then 2-proj-2-tuple(v_419) else caught-fail) in
                                {2201}let es_33: bitstring = (if v_420 then 1-proj-2-tuple(v_419) else caught-fail) in
                                {2184}let offer_19: params = (if v_414 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_4,SNI(s_dom_12),ech_ext_5,extra_21,trunc_client_psk_ext(id_27)) else caught-fail) in
                                {2185}let cur_log'_9: bitstring = (if v_414 then (cur_log3_4,CH(cr_15,offer_19)) else caught-fail) in
                                {2202}let binders_8: bitstring = (if v_420 then catch-fail(hmac(@7_tls_h,kb_22,cur_log'_9)) else caught-fail) in
                                {2203}let v_421: bool = not-caught-fail(binders_8) in
                                {2204}let v_422: bitstring = catch-fail((if v_414 then (if v_420 then (if v_421 then (client_psk_ext(id_27,binders_8),(psk_54,id_27,es_33,is_safe_20)) else fail-any) else fail-any) else fail-any)) in
                                {2205}let v_423: bool = (not-caught-fail(v_422) && success?(1-proj-2-tuple(v_422))) in
                                {2206}let psk_data_13: bitstring = (if v_423 then 2-proj-2-tuple(v_422) else caught-fail) in
                                {2207}let psk_ext_21: preSharedKeyExt = (if v_423 then 1-proj-2-tuple(v_422) else caught-fail) in
                                {2208}let offer_20: params = (if v_423 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_4,SNI(s_dom_12),empty_ech_ext,empty_extra_ext,psk_ext_21) else caught-fail) in
                                {2209}let (client_hello'_7: msg,cr'_7: bytes32,kex_data'_7: bitstring,psk_data'_7: bitstring) = (if v_423 then (CH(cr_15,offer_20),cr_15,kex_data_6,psk_data_13) else fail-any) in
                                {2210}event ClientOffersAead(cr'_7,@7_tls_a);
                                {2211}event ClientOffersHash(cr'_7,@7_tls_h);
                                {2212}event ClientOffersGroup(cr'_7,@7_tls_g);
                                {2213}out(io, client_hello'_7);
                                {2215}in(io, server_hello'_7: msg);
                                {2216}let SH(sr'_7: bytes32,mode'_7: params) = server_hello'_7 in
                                (
                                    {2217}if (sr'_7 = B32(HRR24,HRR8)) then
                                        {2218}out(io, unexpected_message)
                                    else
                                        {2219}let (x_143: bitstring,g_9: group) = kex_data'_7 in
                                        {2220}let (psk_offer_9: preSharedKey,id_offer_9: identityPsk,es_offer_9: bitstring,is_safe_offer_9: bool) = psk_data'_7 in
                                        {2221}event Client_PSKOffer(@7_id_client,psk_offer_9,id_offer_9,is_safe_offer_9);
                                        {2222}event Client_Rand_client(@7_id_client,cr'_7);
                                        {2223}event Client_DH_client(@7_id_client,dh_pub(g_9,x_143));
                                        {2224}event Client_server_domain(@7_id_client,s_dom_12);
                                        {2225}let SH(sr_20: bytes32,mode_12: params) = server_hello'_7 in
                                        {2226}event Client_Rand_server(@7_id_client,sr_20);
                                        {2227}let nego(=TLS13,=@7_tls_h,=@7_tls_a,server_kex_ext(DHE_kex(=g_9,gy_10: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_22: preSharedKeyExt) = mode_12 in
                                        (
                                            {2229}event Client_DH_server(@7_id_client,gy_10);
                                            {2230}let v_424: bool = (psk_ext_22 = empty_psk_ext) in
                                            {2231}let psk_55: preSharedKey = (if v_424 then NoPsk else caught-fail) in
                                            {2233}let k_35: bitstring = (if v_424 then catch-fail(psk2b(psk_55)) else caught-fail) in
                                            {2234}let v_425: bool = not-caught-fail(k_35) in
                                            {2232}let s_41: bitstring = (if v_424 then zero else caught-fail) in
                                            {2235}let early_secret_34: bitstring = (if v_424 then catch-fail((if v_425 then hmac(@7_tls_h,s_41,k_35) else fail-any)) else caught-fail) in
                                            {2236}let v_426: bool = not-caught-fail(early_secret_34) in
                                            {2238}let m_43: bitstring = (if v_426 then zero else caught-fail) in
                                            {2239}let h_129: bitstring = (if v_426 then catch-fail(hash(@7_tls_h,m_43)) else caught-fail) in
                                            {2240}let v_427: bool = not-caught-fail(h_129) in
                                            {2237}let l_130: label = (if v_426 then tls13_ext_res_binder else caught-fail) in
                                            {2241}let x_144: bitstring = (if v_427 then (l_130,h_129) else caught-fail) in
                                            {2242}let binder_key_23: bitstring = (if v_426 then catch-fail((if v_427 then hmac(@7_tls_h,early_secret_34,x_144) else fail-any)) else caught-fail) in
                                            {2243}let v_428: bool = not-caught-fail(binder_key_23) in
                                            {2244}let v_429: bitstring = (if v_424 then catch-fail((if v_426 then (if v_428 then (early_secret_34,binder_key_23) else fail-any) else fail-any)) else caught-fail) in
                                            {2245}let v_430: bool = (not-caught-fail(v_429) && success?(1-proj-2-tuple(v_429))) in
                                            {2246}let kb_23: mac_key = (if v_430 then 2-proj-2-tuple(v_429) else caught-fail) in
                                            {2247}let es_34: bitstring = (if v_430 then 1-proj-2-tuple(v_429) else caught-fail) in
                                            {2248}let v_431: bitstring = (if not(v_424) then catch-fail(psk_data'_7) else caught-fail) in
                                            {2249}let v_432: bool = (not-caught-fail(v_431) && success?(1-proj-4-tuple(v_431))) in
                                            {2250}let is_safe_21: bool = (if v_432 then 4-proj-4-tuple(v_431) else caught-fail) in
                                            {2251}let es_35: bitstring = (if v_432 then 3-proj-4-tuple(v_431) else caught-fail) in
                                            {2252}let id_28: identityPsk = (if v_432 then 2-proj-4-tuple(v_431) else caught-fail) in
                                            {2253}let psk_56: preSharedKey = (if v_432 then 1-proj-4-tuple(v_431) else caught-fail) in
                                            {2254}let (psk_57: preSharedKey,early_secret_35: bitstring,valid_9: bool,safe_psk_15: bool) = (if v_424 then (if v_430 then (NoPsk,es_34,true,false) else fail-any) else (if v_432 then (psk_56,es_35,((psk_56 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_22)),is_safe_21) else fail-any)) in
                                            {2255}event Client_PSKChoosen(@7_id_client,psk_57,safe_psk_15);
                                            {2256}if valid_9 then
                                            (
                                                {2259}new s_42[]: seed;
                                                {2257}let gxy_19: element = catch-fail(dh_decap_fun(g_9,gy_10,x_143)) in
                                                {2258}let v_433: bool = not-caught-fail(gxy_19) in
                                                {2260}let gxy_20: element = (if v_433 then gxy_19 else dh_f(s_42)) in
                                                {2261}event Client_DH_gxy(@7_id_client,gxy_20);
                                                {2263}let m_44: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                {2264}let v_434: bool = not-caught-fail(m_44) in
                                                {2265}let h_130: bitstring = (if v_434 then catch-fail(hash(@7_tls_h,m_44)) else caught-fail) in
                                                {2266}let v_435: bool = not-caught-fail(h_130) in
                                                {2262}let l_131: label = tls13_derived in
                                                {2267}let x_145: bitstring = (if v_435 then (l_131,h_130) else caught-fail) in
                                                {2268}let extra_24: bitstring = catch-fail((if v_434 then (if v_435 then hmac(@7_tls_h,early_secret_35,x_145) else fail-any) else fail-any)) in
                                                {2269}let v_436: bool = not-caught-fail(extra_24) in
                                                {2270}let handshake_secret_10: bitstring = (if v_436 then hmac(@7_tls_h,extra_24,gxy_20) else fail-any) in
                                                {2272}let m_45: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                                {2273}let v_437: bool = not-caught-fail(m_45) in
                                                {2274}let h_131: bitstring = (if v_437 then catch-fail(hash(@7_tls_h,m_45)) else caught-fail) in
                                                {2275}let v_438: bool = not-caught-fail(h_131) in
                                                {2271}let l_132: label = tls13_derived in
                                                {2276}let x_146: bitstring = (if v_438 then (l_132,h_131) else caught-fail) in
                                                {2277}let extra_25: bitstring = catch-fail((if v_437 then (if v_438 then hmac(@7_tls_h,handshake_secret_10,x_146) else fail-any) else fail-any)) in
                                                {2278}let v_439: bool = not-caught-fail(extra_25) in
                                                {2279}let k_36: bitstring = (if v_439 then zero else caught-fail) in
                                                {2280}let master_secret_27: bitstring = (if v_439 then catch-fail(hmac(@7_tls_h,handshake_secret_10,k_36)) else caught-fail) in
                                                {2281}let v_440: bool = not-caught-fail(master_secret_27) in
                                                {2214}let cur_log4_7: bitstring = (cur_log3_4,client_hello'_7) in
                                                {2228}let cur_log2_25: bitstring = (cur_log4_7,server_hello'_7) in
                                                {2283}let h_132: bitstring = (if v_440 then catch-fail(hash(@7_tls_h,cur_log2_25)) else caught-fail) in
                                                {2284}let v_441: bool = not-caught-fail(h_132) in
                                                {2282}let l_133: label = (if v_440 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {2285}let x_147: bitstring = (if v_441 then (l_133,h_132) else caught-fail) in
                                                {2286}let client_hts_10: bitstring = (if v_440 then catch-fail((if v_441 then hmac(@7_tls_h,handshake_secret_10,x_147) else fail-any)) else caught-fail) in
                                                {2287}let v_442: bool = not-caught-fail(client_hts_10) in
                                                {2289}let h_133: bitstring = (if v_442 then catch-fail(hash(@7_tls_h,cur_log2_25)) else caught-fail) in
                                                {2290}let v_443: bool = not-caught-fail(h_133) in
                                                {2288}let l_134: label = (if v_442 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {2291}let x_148: bitstring = (if v_443 then (l_134,h_133) else caught-fail) in
                                                {2292}let server_hts_10: bitstring = (if v_442 then catch-fail((if v_443 then hmac(@7_tls_h,handshake_secret_10,x_148) else fail-any)) else caught-fail) in
                                                {2293}let v_444: bool = not-caught-fail(server_hts_10) in
                                                {2295}let h_134: bitstring = (if v_444 then zero else caught-fail) in
                                                {2294}let l_135: label = (if v_444 then tls13_key else caught-fail) in
                                                {2296}let x_149: bitstring = (if v_444 then (l_135,h_134) else caught-fail) in
                                                {2297}let client_wkh_10: bitstring = (if v_444 then catch-fail(hmac(@7_tls_h,client_hts_10,x_149)) else caught-fail) in
                                                {2298}let v_445: bool = not-caught-fail(client_wkh_10) in
                                                {2300}let h_135: bitstring = (if v_445 then zero else caught-fail) in
                                                {2299}let l_136: label = (if v_445 then tls13_key else caught-fail) in
                                                {2301}let x_150: bitstring = (if v_445 then (l_136,h_135) else caught-fail) in
                                                {2302}let server_wkh_10: bitstring = (if v_445 then catch-fail(hmac(@7_tls_h,server_hts_10,x_150)) else caught-fail) in
                                                {2303}let v_446: bool = not-caught-fail(server_wkh_10) in
                                                {2305}let h_136: bitstring = (if v_446 then zero else caught-fail) in
                                                {2304}let l_137: label = (if v_446 then tls13_finished else caught-fail) in
                                                {2306}let x_151: bitstring = (if v_446 then (l_137,h_136) else caught-fail) in
                                                {2307}let client_fk_10: bitstring = (if v_446 then catch-fail(hmac(@7_tls_h,client_hts_10,x_151)) else caught-fail) in
                                                {2308}let v_447: bool = not-caught-fail(client_fk_10) in
                                                {2310}let h_137: bitstring = (if v_447 then zero else caught-fail) in
                                                {2309}let l_138: label = (if v_447 then tls13_finished else caught-fail) in
                                                {2311}let x_152: bitstring = (if v_447 then (l_138,h_137) else caught-fail) in
                                                {2312}let server_fk_10: bitstring = (if v_447 then catch-fail(hmac(@7_tls_h,server_hts_10,x_152)) else caught-fail) in
                                                {2313}let v_448: bool = not-caught-fail(server_fk_10) in
                                                {2314}let (master_secret_28: bitstring,chk_17: aead_key,shk_16: aead_key,cfin_17: mac_key,sfin_16: mac_key) = (if v_439 then (if v_440 then (if v_442 then (if v_444 then (if v_445 then (if v_446 then (if v_447 then (if v_448 then (master_secret_27,client_wkh_10,server_wkh_10,client_fk_10,server_fk_10) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {2315}event Client_chk(@7_id_client,chk_17);
                                                {2316}event Client_shk(@7_id_client,shk_16);
                                                {2317}event Client_cfin(@7_id_client,cfin_17);
                                                {2318}event Client_sfin(@7_id_client,sfin_16);
                                                {2319}in(io, enc_ee_msg_9: bitstring);
                                                {2320}let ee_msg_10: msg = aead_dec(@7_tls_a,shk_16,0,zero,enc_ee_msg_9) in
                                                {2321}let EE(ech_ee_9: echExt,extra_ee_9: extraExt) = ee_msg_10 in
                                                {2322}let cur_log2_26: bitstring = (cur_log2_25,ee_msg_10) in
                                                {2323}out(ch_client_after_EE, (@7_id_client,ArgsClientAfterEE(cr'_7,sr_20,@7_tls_h,@7_tls_a,c_dom_5,s_dom_12,psk_57,safe_psk_15,@7_comp_psk,master_secret_28,chk_17,0,shk_16,1,cfin_17,sfin_16,cur_log2_26)))
                                            )
                                            else
                                                {2324}out(io, illegal_parameter)
                                        )
                                        else
                                            {2325}out(io, illegal_parameter)
                                )
                                else
                                    {2326}out(io, unexpected_message)
                        )
                        else
                            {2328}let psk_58: preSharedKey = NoPsk in
                            {2330}let k_37: bitstring = catch-fail(psk2b(psk_58)) in
                            {2331}let v_449: bool = not-caught-fail(k_37) in
                            {2329}let s_43: bitstring = zero in
                            {2332}let early_secret_36: bitstring = catch-fail((if v_449 then hmac(@7_tls_h,s_43,k_37) else fail-any)) in
                            {2333}let v_450: bool = not-caught-fail(early_secret_36) in
                            {2335}let m_46: bitstring = (if v_450 then zero else caught-fail) in
                            {2336}let h_138: bitstring = (if v_450 then catch-fail(hash(@7_tls_h,m_46)) else caught-fail) in
                            {2337}let v_451: bool = not-caught-fail(h_138) in
                            {2334}let l_139: label = (if v_450 then tls13_ext_res_binder else caught-fail) in
                            {2338}let x_153: bitstring = (if v_451 then (l_139,h_138) else caught-fail) in
                            {2339}let binder_key_24: bitstring = (if v_450 then catch-fail((if v_451 then hmac(@7_tls_h,early_secret_36,x_153) else fail-any)) else caught-fail) in
                            {2340}let v_452: bool = not-caught-fail(binder_key_24) in
                            {2341}let v_453: bitstring = catch-fail((if v_450 then (if v_452 then (early_secret_36,binder_key_24) else fail-any) else fail-any)) in
                            {2342}let v_454: bool = (not-caught-fail(v_453) && success?(1-proj-2-tuple(v_453))) in
                            {2343}let kb_24: mac_key = (if v_454 then 2-proj-2-tuple(v_453) else caught-fail) in
                            {2344}let es_36: bitstring = (if v_454 then 1-proj-2-tuple(v_453) else caught-fail) in
                            {2345}let v_455: bitstring = catch-fail((if v_454 then (empty_psk_ext,(NoPsk,zero,es_36,false)) else fail-any)) in
                            {2346}let v_456: bool = (not-caught-fail(v_455) && success?(1-proj-2-tuple(v_455))) in
                            {2347}let psk_data_14: bitstring = (if v_456 then 2-proj-2-tuple(v_455) else caught-fail) in
                            {2348}let psk_ext_23: preSharedKeyExt = (if v_456 then 1-proj-2-tuple(v_455) else caught-fail) in
                            {2349}let offer_21: params = (if v_456 then nego(TLS13,@7_tls_h,@7_tls_a,kex_ext_4,SNI(s_dom_12),empty_ech_ext,empty_extra_ext,psk_ext_23) else caught-fail) in
                            {2350}let (client_hello'_8: msg,cr'_8: bytes32,kex_data'_8: bitstring,psk_data'_8: bitstring) = (if v_456 then (CH(cr_15,offer_21),cr_15,kex_data_6,psk_data_14) else fail-any) in
                            {2351}event ClientOffersAead(cr'_8,@7_tls_a);
                            {2352}event ClientOffersHash(cr'_8,@7_tls_h);
                            {2353}event ClientOffersGroup(cr'_8,@7_tls_g);
                            {2354}out(io, client_hello'_8);
                            {2356}in(io, server_hello'_8: msg);
                            {2357}let SH(sr'_8: bytes32,mode'_8: params) = server_hello'_8 in
                            (
                                {2358}if (sr'_8 = B32(HRR24,HRR8)) then
                                    {2359}out(io, unexpected_message)
                                else
                                    {2360}let (x_154: bitstring,g_10: group) = kex_data'_8 in
                                    {2361}let (psk_offer_10: preSharedKey,id_offer_10: identityPsk,es_offer_10: bitstring,is_safe_offer_10: bool) = psk_data'_8 in
                                    {2362}event Client_PSKOffer(@7_id_client,psk_offer_10,id_offer_10,is_safe_offer_10);
                                    {2363}event Client_Rand_client(@7_id_client,cr'_8);
                                    {2364}event Client_DH_client(@7_id_client,dh_pub(g_10,x_154));
                                    {2365}event Client_server_domain(@7_id_client,s_dom_12);
                                    {2366}let SH(sr_21: bytes32,mode_13: params) = server_hello'_8 in
                                    {2367}event Client_Rand_server(@7_id_client,sr_21);
                                    {2368}let nego(=TLS13,=@7_tls_h,=@7_tls_a,server_kex_ext(DHE_kex(=g_10,gy_11: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_24: preSharedKeyExt) = mode_13 in
                                    (
                                        {2370}event Client_DH_server(@7_id_client,gy_11);
                                        {2371}let v_457: bool = (psk_ext_24 = empty_psk_ext) in
                                        {2372}let psk_59: preSharedKey = (if v_457 then NoPsk else caught-fail) in
                                        {2374}let k_38: bitstring = (if v_457 then catch-fail(psk2b(psk_59)) else caught-fail) in
                                        {2375}let v_458: bool = not-caught-fail(k_38) in
                                        {2373}let s_44: bitstring = (if v_457 then zero else caught-fail) in
                                        {2376}let early_secret_37: bitstring = (if v_457 then catch-fail((if v_458 then hmac(@7_tls_h,s_44,k_38) else fail-any)) else caught-fail) in
                                        {2377}let v_459: bool = not-caught-fail(early_secret_37) in
                                        {2379}let m_47: bitstring = (if v_459 then zero else caught-fail) in
                                        {2380}let h_139: bitstring = (if v_459 then catch-fail(hash(@7_tls_h,m_47)) else caught-fail) in
                                        {2381}let v_460: bool = not-caught-fail(h_139) in
                                        {2378}let l_140: label = (if v_459 then tls13_ext_res_binder else caught-fail) in
                                        {2382}let x_155: bitstring = (if v_460 then (l_140,h_139) else caught-fail) in
                                        {2383}let binder_key_25: bitstring = (if v_459 then catch-fail((if v_460 then hmac(@7_tls_h,early_secret_37,x_155) else fail-any)) else caught-fail) in
                                        {2384}let v_461: bool = not-caught-fail(binder_key_25) in
                                        {2385}let v_462: bitstring = (if v_457 then catch-fail((if v_459 then (if v_461 then (early_secret_37,binder_key_25) else fail-any) else fail-any)) else caught-fail) in
                                        {2386}let v_463: bool = (not-caught-fail(v_462) && success?(1-proj-2-tuple(v_462))) in
                                        {2387}let kb_25: mac_key = (if v_463 then 2-proj-2-tuple(v_462) else caught-fail) in
                                        {2388}let es_37: bitstring = (if v_463 then 1-proj-2-tuple(v_462) else caught-fail) in
                                        {2389}let v_464: bitstring = (if not(v_457) then catch-fail(psk_data'_8) else caught-fail) in
                                        {2390}let v_465: bool = (not-caught-fail(v_464) && success?(1-proj-4-tuple(v_464))) in
                                        {2391}let is_safe_22: bool = (if v_465 then 4-proj-4-tuple(v_464) else caught-fail) in
                                        {2392}let es_38: bitstring = (if v_465 then 3-proj-4-tuple(v_464) else caught-fail) in
                                        {2393}let id_29: identityPsk = (if v_465 then 2-proj-4-tuple(v_464) else caught-fail) in
                                        {2394}let psk_60: preSharedKey = (if v_465 then 1-proj-4-tuple(v_464) else caught-fail) in
                                        {2395}let (psk_61: preSharedKey,early_secret_38: bitstring,valid_10: bool,safe_psk_16: bool) = (if v_457 then (if v_463 then (NoPsk,es_37,true,false) else fail-any) else (if v_465 then (psk_60,es_38,((psk_60 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_24)),is_safe_22) else fail-any)) in
                                        {2396}event Client_PSKChoosen(@7_id_client,psk_61,safe_psk_16);
                                        {2397}if valid_10 then
                                        (
                                            {2400}new s_45[]: seed;
                                            {2398}let gxy_21: element = catch-fail(dh_decap_fun(g_10,gy_11,x_154)) in
                                            {2399}let v_466: bool = not-caught-fail(gxy_21) in
                                            {2401}let gxy_22: element = (if v_466 then gxy_21 else dh_f(s_45)) in
                                            {2402}event Client_DH_gxy(@7_id_client,gxy_22);
                                            {2404}let m_48: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                            {2405}let v_467: bool = not-caught-fail(m_48) in
                                            {2406}let h_140: bitstring = (if v_467 then catch-fail(hash(@7_tls_h,m_48)) else caught-fail) in
                                            {2407}let v_468: bool = not-caught-fail(h_140) in
                                            {2403}let l_141: label = tls13_derived in
                                            {2408}let x_156: bitstring = (if v_468 then (l_141,h_140) else caught-fail) in
                                            {2409}let extra_26: bitstring = catch-fail((if v_467 then (if v_468 then hmac(@7_tls_h,early_secret_38,x_156) else fail-any) else fail-any)) in
                                            {2410}let v_469: bool = not-caught-fail(extra_26) in
                                            {2411}let handshake_secret_11: bitstring = (if v_469 then hmac(@7_tls_h,extra_26,gxy_22) else fail-any) in
                                            {2413}let m_49: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                            {2414}let v_470: bool = not-caught-fail(m_49) in
                                            {2415}let h_141: bitstring = (if v_470 then catch-fail(hash(@7_tls_h,m_49)) else caught-fail) in
                                            {2416}let v_471: bool = not-caught-fail(h_141) in
                                            {2412}let l_142: label = tls13_derived in
                                            {2417}let x_157: bitstring = (if v_471 then (l_142,h_141) else caught-fail) in
                                            {2418}let extra_27: bitstring = catch-fail((if v_470 then (if v_471 then hmac(@7_tls_h,handshake_secret_11,x_157) else fail-any) else fail-any)) in
                                            {2419}let v_472: bool = not-caught-fail(extra_27) in
                                            {2420}let k_39: bitstring = (if v_472 then zero else caught-fail) in
                                            {2421}let master_secret_29: bitstring = (if v_472 then catch-fail(hmac(@7_tls_h,handshake_secret_11,k_39)) else caught-fail) in
                                            {2422}let v_473: bool = not-caught-fail(master_secret_29) in
                                            {2355}let cur_log4_8: bitstring = (cur_log3_4,client_hello'_8) in
                                            {2369}let cur_log2_27: bitstring = (cur_log4_8,server_hello'_8) in
                                            {2424}let h_142: bitstring = (if v_473 then catch-fail(hash(@7_tls_h,cur_log2_27)) else caught-fail) in
                                            {2425}let v_474: bool = not-caught-fail(h_142) in
                                            {2423}let l_143: label = (if v_473 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {2426}let x_158: bitstring = (if v_474 then (l_143,h_142) else caught-fail) in
                                            {2427}let client_hts_11: bitstring = (if v_473 then catch-fail((if v_474 then hmac(@7_tls_h,handshake_secret_11,x_158) else fail-any)) else caught-fail) in
                                            {2428}let v_475: bool = not-caught-fail(client_hts_11) in
                                            {2430}let h_143: bitstring = (if v_475 then catch-fail(hash(@7_tls_h,cur_log2_27)) else caught-fail) in
                                            {2431}let v_476: bool = not-caught-fail(h_143) in
                                            {2429}let l_144: label = (if v_475 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {2432}let x_159: bitstring = (if v_476 then (l_144,h_143) else caught-fail) in
                                            {2433}let server_hts_11: bitstring = (if v_475 then catch-fail((if v_476 then hmac(@7_tls_h,handshake_secret_11,x_159) else fail-any)) else caught-fail) in
                                            {2434}let v_477: bool = not-caught-fail(server_hts_11) in
                                            {2436}let h_144: bitstring = (if v_477 then zero else caught-fail) in
                                            {2435}let l_145: label = (if v_477 then tls13_key else caught-fail) in
                                            {2437}let x_160: bitstring = (if v_477 then (l_145,h_144) else caught-fail) in
                                            {2438}let client_wkh_11: bitstring = (if v_477 then catch-fail(hmac(@7_tls_h,client_hts_11,x_160)) else caught-fail) in
                                            {2439}let v_478: bool = not-caught-fail(client_wkh_11) in
                                            {2441}let h_145: bitstring = (if v_478 then zero else caught-fail) in
                                            {2440}let l_146: label = (if v_478 then tls13_key else caught-fail) in
                                            {2442}let x_161: bitstring = (if v_478 then (l_146,h_145) else caught-fail) in
                                            {2443}let server_wkh_11: bitstring = (if v_478 then catch-fail(hmac(@7_tls_h,server_hts_11,x_161)) else caught-fail) in
                                            {2444}let v_479: bool = not-caught-fail(server_wkh_11) in
                                            {2446}let h_146: bitstring = (if v_479 then zero else caught-fail) in
                                            {2445}let l_147: label = (if v_479 then tls13_finished else caught-fail) in
                                            {2447}let x_162: bitstring = (if v_479 then (l_147,h_146) else caught-fail) in
                                            {2448}let client_fk_11: bitstring = (if v_479 then catch-fail(hmac(@7_tls_h,client_hts_11,x_162)) else caught-fail) in
                                            {2449}let v_480: bool = not-caught-fail(client_fk_11) in
                                            {2451}let h_147: bitstring = (if v_480 then zero else caught-fail) in
                                            {2450}let l_148: label = (if v_480 then tls13_finished else caught-fail) in
                                            {2452}let x_163: bitstring = (if v_480 then (l_148,h_147) else caught-fail) in
                                            {2453}let server_fk_11: bitstring = (if v_480 then catch-fail(hmac(@7_tls_h,server_hts_11,x_163)) else caught-fail) in
                                            {2454}let v_481: bool = not-caught-fail(server_fk_11) in
                                            {2455}let (master_secret_30: bitstring,chk_18: aead_key,shk_17: aead_key,cfin_18: mac_key,sfin_17: mac_key) = (if v_472 then (if v_473 then (if v_475 then (if v_477 then (if v_478 then (if v_479 then (if v_480 then (if v_481 then (master_secret_29,client_wkh_11,server_wkh_11,client_fk_11,server_fk_11) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {2456}event Client_chk(@7_id_client,chk_18);
                                            {2457}event Client_shk(@7_id_client,shk_17);
                                            {2458}event Client_cfin(@7_id_client,cfin_18);
                                            {2459}event Client_sfin(@7_id_client,sfin_17);
                                            {2460}in(io, enc_ee_msg_10: bitstring);
                                            {2461}let ee_msg_11: msg = aead_dec(@7_tls_a,shk_17,0,zero,enc_ee_msg_10) in
                                            {2462}let EE(ech_ee_10: echExt,extra_ee_10: extraExt) = ee_msg_11 in
                                            {2463}let cur_log2_28: bitstring = (cur_log2_27,ee_msg_11) in
                                            {2464}out(ch_client_after_EE, (@7_id_client,ArgsClientAfterEE(cr'_8,sr_21,@7_tls_h,@7_tls_a,c_dom_5,s_dom_12,psk_61,safe_psk_16,@7_comp_psk,master_secret_30,chk_18,0,shk_17,1,cfin_18,sfin_17,cur_log2_28)))
                                        )
                                        else
                                            {2465}out(io, illegal_parameter)
                                    )
                                    else
                                        {2466}out(io, illegal_parameter)
                            )
                            else
                                {2467}out(io, unexpected_message)
                    )
                    else
                        {2468}out(io, illegal_parameter)
                )
                else
                    {2469}if send_kex then
                    (
                        {2470}let (x_164: bitstring,g_11: group) = kex_data_5 in
                        {2471}let (psk_offer_11: preSharedKey,id_offer_11: identityPsk,es_offer_11: bitstring,is_safe_offer_11: bool) = psk_data_11 in
                        {2472}event Client_PSKOffer(@7_id_client,psk_offer_11,id_offer_11,is_safe_offer_11);
                        {2473}event Client_Rand_client(@7_id_client,cr_14);
                        {2474}event Client_DH_client(@7_id_client,dh_pub(g_11,x_164));
                        {2475}event Client_server_domain(@7_id_client,s_dom_12);
                        {2476}let SH(sr_22: bytes32,mode_14: params) = server_hello_3 in
                        {2477}event Client_Rand_server(@7_id_client,sr_22);
                        {2478}let nego(=TLS13,=@7_tls_h,=@7_tls_a,server_kex_ext(DHE_kex(=g_11,gy_12: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_25: preSharedKeyExt) = mode_14 in
                        (
                            {2480}event Client_DH_server(@7_id_client,gy_12);
                            {2481}let v_482: bool = (psk_ext_25 = empty_psk_ext) in
                            {2482}let psk_62: preSharedKey = (if v_482 then NoPsk else caught-fail) in
                            {2484}let k_40: bitstring = (if v_482 then catch-fail(psk2b(psk_62)) else caught-fail) in
                            {2485}let v_483: bool = not-caught-fail(k_40) in
                            {2483}let s_46: bitstring = (if v_482 then zero else caught-fail) in
                            {2486}let early_secret_39: bitstring = (if v_482 then catch-fail((if v_483 then hmac(@7_tls_h,s_46,k_40) else fail-any)) else caught-fail) in
                            {2487}let v_484: bool = not-caught-fail(early_secret_39) in
                            {2489}let m_50: bitstring = (if v_484 then zero else caught-fail) in
                            {2490}let h_148: bitstring = (if v_484 then catch-fail(hash(@7_tls_h,m_50)) else caught-fail) in
                            {2491}let v_485: bool = not-caught-fail(h_148) in
                            {2488}let l_149: label = (if v_484 then tls13_ext_res_binder else caught-fail) in
                            {2492}let x_165: bitstring = (if v_485 then (l_149,h_148) else caught-fail) in
                            {2493}let binder_key_26: bitstring = (if v_484 then catch-fail((if v_485 then hmac(@7_tls_h,early_secret_39,x_165) else fail-any)) else caught-fail) in
                            {2494}let v_486: bool = not-caught-fail(binder_key_26) in
                            {2495}let v_487: bitstring = (if v_482 then catch-fail((if v_484 then (if v_486 then (early_secret_39,binder_key_26) else fail-any) else fail-any)) else caught-fail) in
                            {2496}let v_488: bool = (not-caught-fail(v_487) && success?(1-proj-2-tuple(v_487))) in
                            {2497}let kb_26: mac_key = (if v_488 then 2-proj-2-tuple(v_487) else caught-fail) in
                            {2498}let es_39: bitstring = (if v_488 then 1-proj-2-tuple(v_487) else caught-fail) in
                            {2499}let v_489: bitstring = (if not(v_482) then catch-fail(psk_data_11) else caught-fail) in
                            {2500}let v_490: bool = (not-caught-fail(v_489) && success?(1-proj-4-tuple(v_489))) in
                            {2501}let is_safe_23: bool = (if v_490 then 4-proj-4-tuple(v_489) else caught-fail) in
                            {2502}let es_40: bitstring = (if v_490 then 3-proj-4-tuple(v_489) else caught-fail) in
                            {2503}let id_30: identityPsk = (if v_490 then 2-proj-4-tuple(v_489) else caught-fail) in
                            {2504}let psk_63: preSharedKey = (if v_490 then 1-proj-4-tuple(v_489) else caught-fail) in
                            {2505}let (psk_64: preSharedKey,early_secret_40: bitstring,valid_11: bool,safe_psk_17: bool) = (if v_482 then (if v_488 then (NoPsk,es_39,true,false) else fail-any) else (if v_490 then (psk_63,es_40,((psk_63 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_25)),is_safe_23) else fail-any)) in
                            {2506}event Client_PSKChoosen(@7_id_client,psk_64,safe_psk_17);
                            {2507}if valid_11 then
                            (
                                {2510}new s_47[]: seed;
                                {2508}let gxy_23: element = catch-fail(dh_decap_fun(g_11,gy_12,x_164)) in
                                {2509}let v_491: bool = not-caught-fail(gxy_23) in
                                {2511}let gxy_24: element = (if v_491 then gxy_23 else dh_f(s_47)) in
                                {2512}event Client_DH_gxy(@7_id_client,gxy_24);
                                {2514}let m_51: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                {2515}let v_492: bool = not-caught-fail(m_51) in
                                {2516}let h_149: bitstring = (if v_492 then catch-fail(hash(@7_tls_h,m_51)) else caught-fail) in
                                {2517}let v_493: bool = not-caught-fail(h_149) in
                                {2513}let l_150: label = tls13_derived in
                                {2518}let x_166: bitstring = (if v_493 then (l_150,h_149) else caught-fail) in
                                {2519}let extra_28: bitstring = catch-fail((if v_492 then (if v_493 then hmac(@7_tls_h,early_secret_40,x_166) else fail-any) else fail-any)) in
                                {2520}let v_494: bool = not-caught-fail(extra_28) in
                                {2521}let handshake_secret_12: bitstring = (if v_494 then hmac(@7_tls_h,extra_28,gxy_24) else fail-any) in
                                {2523}let m_52: bitstring = catch-fail(hash(@7_tls_h,zero)) in
                                {2524}let v_495: bool = not-caught-fail(m_52) in
                                {2525}let h_150: bitstring = (if v_495 then catch-fail(hash(@7_tls_h,m_52)) else caught-fail) in
                                {2526}let v_496: bool = not-caught-fail(h_150) in
                                {2522}let l_151: label = tls13_derived in
                                {2527}let x_167: bitstring = (if v_496 then (l_151,h_150) else caught-fail) in
                                {2528}let extra_29: bitstring = catch-fail((if v_495 then (if v_496 then hmac(@7_tls_h,handshake_secret_12,x_167) else fail-any) else fail-any)) in
                                {2529}let v_497: bool = not-caught-fail(extra_29) in
                                {2530}let k_41: bitstring = (if v_497 then zero else caught-fail) in
                                {2531}let master_secret_31: bitstring = (if v_497 then catch-fail(hmac(@7_tls_h,handshake_secret_12,k_41)) else caught-fail) in
                                {2532}let v_498: bool = not-caught-fail(master_secret_31) in
                                {2479}let cur_log2_29: bitstring = (cur_log2_22,server_hello_3) in
                                {2534}let h_151: bitstring = (if v_498 then catch-fail(hash(@7_tls_h,cur_log2_29)) else caught-fail) in
                                {2535}let v_499: bool = not-caught-fail(h_151) in
                                {2533}let l_152: label = (if v_498 then tls13_client_handshake_traffic_secret else caught-fail) in
                                {2536}let x_168: bitstring = (if v_499 then (l_152,h_151) else caught-fail) in
                                {2537}let client_hts_12: bitstring = (if v_498 then catch-fail((if v_499 then hmac(@7_tls_h,handshake_secret_12,x_168) else fail-any)) else caught-fail) in
                                {2538}let v_500: bool = not-caught-fail(client_hts_12) in
                                {2540}let h_152: bitstring = (if v_500 then catch-fail(hash(@7_tls_h,cur_log2_29)) else caught-fail) in
                                {2541}let v_501: bool = not-caught-fail(h_152) in
                                {2539}let l_153: label = (if v_500 then tls13_server_handshake_traffic_secret else caught-fail) in
                                {2542}let x_169: bitstring = (if v_501 then (l_153,h_152) else caught-fail) in
                                {2543}let server_hts_12: bitstring = (if v_500 then catch-fail((if v_501 then hmac(@7_tls_h,handshake_secret_12,x_169) else fail-any)) else caught-fail) in
                                {2544}let v_502: bool = not-caught-fail(server_hts_12) in
                                {2546}let h_153: bitstring = (if v_502 then zero else caught-fail) in
                                {2545}let l_154: label = (if v_502 then tls13_key else caught-fail) in
                                {2547}let x_170: bitstring = (if v_502 then (l_154,h_153) else caught-fail) in
                                {2548}let client_wkh_12: bitstring = (if v_502 then catch-fail(hmac(@7_tls_h,client_hts_12,x_170)) else caught-fail) in
                                {2549}let v_503: bool = not-caught-fail(client_wkh_12) in
                                {2551}let h_154: bitstring = (if v_503 then zero else caught-fail) in
                                {2550}let l_155: label = (if v_503 then tls13_key else caught-fail) in
                                {2552}let x_171: bitstring = (if v_503 then (l_155,h_154) else caught-fail) in
                                {2553}let server_wkh_12: bitstring = (if v_503 then catch-fail(hmac(@7_tls_h,server_hts_12,x_171)) else caught-fail) in
                                {2554}let v_504: bool = not-caught-fail(server_wkh_12) in
                                {2556}let h_155: bitstring = (if v_504 then zero else caught-fail) in
                                {2555}let l_156: label = (if v_504 then tls13_finished else caught-fail) in
                                {2557}let x_172: bitstring = (if v_504 then (l_156,h_155) else caught-fail) in
                                {2558}let client_fk_12: bitstring = (if v_504 then catch-fail(hmac(@7_tls_h,client_hts_12,x_172)) else caught-fail) in
                                {2559}let v_505: bool = not-caught-fail(client_fk_12) in
                                {2561}let h_156: bitstring = (if v_505 then zero else caught-fail) in
                                {2560}let l_157: label = (if v_505 then tls13_finished else caught-fail) in
                                {2562}let x_173: bitstring = (if v_505 then (l_157,h_156) else caught-fail) in
                                {2563}let server_fk_12: bitstring = (if v_505 then catch-fail(hmac(@7_tls_h,server_hts_12,x_173)) else caught-fail) in
                                {2564}let v_506: bool = not-caught-fail(server_fk_12) in
                                {2565}let (master_secret_32: bitstring,chk_19: aead_key,shk_18: aead_key,cfin_19: mac_key,sfin_18: mac_key) = (if v_497 then (if v_498 then (if v_500 then (if v_502 then (if v_503 then (if v_504 then (if v_505 then (if v_506 then (master_secret_31,client_wkh_12,server_wkh_12,client_fk_12,server_fk_12) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                {2566}event Client_chk(@7_id_client,chk_19);
                                {2567}event Client_shk(@7_id_client,shk_18);
                                {2568}event Client_cfin(@7_id_client,cfin_19);
                                {2569}event Client_sfin(@7_id_client,sfin_18);
                                {2570}in(io, enc_ee_msg_11: bitstring);
                                {2571}let ee_msg_12: msg = aead_dec(@7_tls_a,shk_18,0,zero,enc_ee_msg_11) in
                                {2572}let EE(ech_ee_11: echExt,extra_ee_11: extraExt) = ee_msg_12 in
                                {2573}let cur_log2_30: bitstring = (cur_log2_29,ee_msg_12) in
                                {2574}out(ch_client_after_EE, (@7_id_client,ArgsClientAfterEE(cr_14,sr_22,@7_tls_h,@7_tls_a,c_dom_5,s_dom_12,psk_64,safe_psk_17,@7_comp_psk,master_secret_32,chk_19,0,shk_18,1,cfin_19,sfin_18,cur_log2_30)))
                            )
                            else
                                {2575}out(io, illegal_parameter)
                        )
                        else
                            {2576}out(io, illegal_parameter)
                    )
                    else
                        {2577}out(io, illegal_parameter)
            )
            else
                {2578}out(io, unexpected_message)
        )
) | (
    {2579}!
    {2580}new id_client_4: idProc;
    {2581}in(io, backend_dom: domain);
    {2582}event Same(backend_dom);
    {2583}in(io, frontend_dom: domain);
    {2584}event Same(frontend_dom);
    {2585}in(io, c_dom_6: domain);
    {2586}event Same(c_dom_6);
    {7100}get ech_configurations(ech_config(id_31: configId,g_12: group,pkR_1: element,=frontend_dom,h_alg_10: hash_alg,a_alg_8: aead_alg),skR_1: bitstring) in
    {2598}in(io, @6_send_kex: bool);
    {2599}let () = () in
    {2600}event Same(@6_send_kex);
    {2587}let ech_conf: echConfig = ech_config(id_31,g_12,pkR_1,frontend_dom,h_alg_10,a_alg_8) in
    {2603}let ech_config(config_id: configId,ech_g_2: group,pkR_2: element,o_dom: domain,ech_h_2: hash_alg,ech_a_2: aead_alg) = ech_conf in
    {2588}let @6_id_client: idProc = id_client_4 in
    {2604}event ClientOffersEchConfig(@6_id_client,ech_conf);
    {2606}new s_48[]: seed;
    {2607}let v_507: bitstring = (dh_xy(s_48,pkR_2),dh_encap_fun(ech_g_2,pkR_2,dh_xy(s_48,pkR_2))) in
    {2608}let v_508: bool = success?(1-proj-2-tuple(v_507)) in
    {2609}let enc: element = (if v_508 then 2-proj-2-tuple(v_507) else caught-fail) in
    {2610}let shared_secret: element = (if v_508 then 1-proj-2-tuple(v_507) else caught-fail) in
    {2613}let label_1: label = (if v_508 then hpke_info_hash else caught-fail) in
    {2605}let info: bitstring = (tls_ech_str,ech_conf) in
    {2614}let k_42: bitstring = (if v_508 then (label_1,info) else caught-fail) in
    {2612}let salt: bitstring = (if v_508 then zero else caught-fail) in
    {2615}let info_hash: bitstring = (if v_508 then catch-fail(hmac(ech_h_2,salt,k_42)) else caught-fail) in
    {2616}let v_509: bool = not-caught-fail(info_hash) in
    {2618}let ikm: bitstring = (if v_509 then zero else caught-fail) in
    {2617}let label_2: label = (if v_509 then hpke_secret else caught-fail) in
    {2619}let k_43: bitstring = (if v_509 then (label_2,ikm) else caught-fail) in
    {2620}let xsecret: bitstring = (if v_509 then catch-fail(hmac(ech_h_2,shared_secret,k_43)) else caught-fail) in
    {2621}let v_510: bool = not-caught-fail(xsecret) in
    {2622}let label_3: label = (if v_510 then hpke_key else caught-fail) in
    {2623}let x_174: bitstring = (if v_510 then (label_3,info_hash) else caught-fail) in
    {2624}let key: aead_key = (if v_510 then catch-fail(hmac(ech_h_2,xsecret,x_174)) else caught-fail) in
    {2625}let v_511: bool = not-caught-fail(key) in
    {2626}let label_4: label = (if v_511 then hpke_base_nonce else caught-fail) in
    {2627}let x_175: bitstring = (if v_511 then (label_4,info_hash) else caught-fail) in
    {2628}let base_nonce: bitstring = (if v_511 then catch-fail(hmac(ech_h_2,xsecret,x_175)) else caught-fail) in
    {2629}let v_512: bool = not-caught-fail(base_nonce) in
    {2611}let r: hpkeRole = (if v_508 then S else caught-fail) in
    {2630}let (enc_1: element,context: hpkeContext) = (if v_508 then (enc,(if v_509 then (if v_510 then (if v_511 then (if v_512 then hpke_context(r,key,base_nonce) else fail-any) else fail-any) else fail-any) else fail-any)) else fail-any) in
    {2631}let ech_config(config_id_1: configId,ech_g_3: group,pkR_3: element,o_dom_1: domain,ech_h_3: hash_alg,ech_a_3: aead_alg) = ech_conf in
    {2632}new s_49[]: seed;
    {2595}let @6_backend_g: group = id_g(StrongDH,1) in
    {2633}let gx_10: element = dh_pub(@6_backend_g,dh_k(s_49)) in
    {2634}let v_513: bitstring = (dh_k(s_49),gx_10) in
    {2635}let v_514: bool = success?(1-proj-2-tuple(v_513)) in
    {2636}let gx_11: element = (if v_514 then 2-proj-2-tuple(v_513) else caught-fail) in
    {2637}let x_176: bitstring = (if v_514 then 1-proj-2-tuple(v_513) else caught-fail) in
    {2602}let send_kex_4: bool = (not(false) || @6_send_kex) in
    {2638}let kex_4: kex_alg = (if v_514 then (if send_kex_4 then DHE_kex(@6_backend_g,gx_11) else DHE_group(@6_backend_g)) else caught-fail) in
    {2639}let (i_kex_ext: keyShareExt,i_kex_data: bitstring) = (if v_514 then (client_kex_ext(kex_4),(x_176,@6_backend_g)) else fail-any) in
    {2640}new s_50[]: seed;
    {2592}let @6_tls_g: group = id_g(StrongDH,1) in
    {2641}let gx_12: element = dh_pub(@6_tls_g,dh_k(s_50)) in
    {2642}let v_515: bitstring = (dh_k(s_50),gx_12) in
    {2643}let v_516: bool = success?(1-proj-2-tuple(v_515)) in
    {2644}let gx_13: element = (if v_516 then 2-proj-2-tuple(v_515) else caught-fail) in
    {2645}let x_177: bitstring = (if v_516 then 1-proj-2-tuple(v_515) else caught-fail) in
    {2646}let kex_5: kex_alg = (if v_516 then (if send_kex_4 then DHE_kex(@6_tls_g,gx_13) else DHE_group(@6_tls_g)) else caught-fail) in
    {2647}let (o_kex_ext: keyShareExt,o_kex_data: bitstring) = (if v_516 then (client_kex_ext(kex_5),(x_177,@6_tls_g)) else fail-any) in
    {2648}new rand24_5[]: bytes24;
    {2649}new rand8_5[]: bytes8;
    {2651}new rand24_6[]: bytes24;
    {2652}new rand8_6[]: bytes8;
    {2655}new payload[]: bitstring;
    {2656}new configid[]: configId;
    {2657}new s_51[]: seed;
    {2601}let @6_use_grease: bool = false in
    {2654}let v_517: bool = @6_use_grease in
    {2658}let gx_14: element = (if v_517 then dh_pub(ech_g_3,dh_k(s_51)) else caught-fail) in
    {2659}let v_518: bitstring = (if v_517 then catch-fail((dh_k(s_51),gx_14)) else caught-fail) in
    {2660}let v_519: bool = (not-caught-fail(v_518) && success?(1-proj-2-tuple(v_518))) in
    {2661}let gx_grease: element = (if v_519 then 2-proj-2-tuple(v_518) else caught-fail) in
    {2662}let x_grease: bitstring = (if v_519 then 1-proj-2-tuple(v_518) else caught-fail) in
    {2663}new s_52[]: seed;
    {2664}let v_520: bitstring = (if v_519 then catch-fail((dh_xy(s_52,gx_grease),dh_encap_fun(ech_g_3,gx_grease,dh_xy(s_52,gx_grease)))) else caught-fail) in
    {2665}let v_521: bool = (not-caught-fail(v_520) && success?(1-proj-2-tuple(v_520))) in
    {2666}let enc_grease: element = (if v_521 then 2-proj-2-tuple(v_520) else caught-fail) in
    {2667}let secret_grease: element = (if v_521 then 1-proj-2-tuple(v_520) else caught-fail) in
    {2668}let ech_inner_or_grease: echExt = (if v_517 then (if v_519 then (if v_521 then ECHClientHelloOuter(ech_h_3,ech_a_3,configid,enc_grease,payload) else fail-any) else fail-any) else ECHClientHelloInner) in
    {2653}let o_cr: bytes32 = B32(rand24_6,rand8_6) in
    {2650}let i_cr: bytes32 = B32(rand24_5,rand8_5) in
    {2594}let @6_backend_a: aead_alg = id_aead(StrongAE,1) in
    {2593}let @6_backend_h: hash_alg = id_hash(StrongHash,1) in
    {2591}let @6_tls_a: aead_alg = id_aead(StrongAE,1) in
    {2590}let @6_tls_h: hash_alg = id_hash(StrongHash,1) in
    {2589}let @6_i_extra_ext: extraExt = empty_extra_ext in
    {2669}let (dom_psk: domain,cr_psk: bytes32,kex_ext_psk: keyShareExt,extra_psk: extraExt,h_psk: hash_alg,a_psk: aead_alg) = (if @6_use_grease then (o_dom_1,o_cr,o_kex_ext,empty_extra_ext,@6_tls_h,@6_tls_a) else (backend_dom,i_cr,i_kex_ext,@6_i_extra_ext,@6_backend_h,@6_backend_a)) in
    {2597}let @6_comp_psk: bool = false in
    {2596}let @6_use_psk: bool = false in
    {2672}if @6_use_psk then
    (
        {2671}let cur_log_9: bitstring = zero in
        {2670}let old_psk_data_1: bitstring = zero in
        {2673}let (psk_65: preSharedKey,id_32: identityPsk,old_es_4: bitstring,is_safe_24: bool) = old_psk_data_1 in
        (
            {2677}let k_44: bitstring = catch-fail(psk2b(psk_65)) in
            {2678}let v_522: bool = not-caught-fail(k_44) in
            {2676}let s_53: bitstring = zero in
            {2679}let early_secret_41: bitstring = catch-fail((if v_522 then hmac(h_psk,s_53,k_44) else fail-any)) in
            {2680}let v_523: bool = not-caught-fail(early_secret_41) in
            {2682}let m_53: bitstring = (if v_523 then zero else caught-fail) in
            {2683}let h_157: bitstring = (if v_523 then catch-fail(hash(h_psk,m_53)) else caught-fail) in
            {2684}let v_524: bool = not-caught-fail(h_157) in
            {2681}let l_158: label = (if v_523 then tls13_ext_res_binder else caught-fail) in
            {2685}let x_178: bitstring = (if v_524 then (l_158,h_157) else caught-fail) in
            {2686}let binder_key_27: bitstring = (if v_523 then catch-fail((if v_524 then hmac(h_psk,early_secret_41,x_178) else fail-any)) else caught-fail) in
            {2687}let v_525: bool = not-caught-fail(binder_key_27) in
            {2688}let v_526: bitstring = catch-fail((if v_523 then (if v_525 then (early_secret_41,binder_key_27) else fail-any) else fail-any)) in
            {2689}let v_527: bool = (not-caught-fail(v_526) && success?(1-proj-2-tuple(v_526))) in
            {2690}let kb_27: mac_key = (if v_527 then 2-proj-2-tuple(v_526) else caught-fail) in
            {2691}let es_41: bitstring = (if v_527 then 1-proj-2-tuple(v_526) else caught-fail) in
            {2674}let offer_22: params = nego(TLS13,h_psk,a_psk,kex_ext_psk,SNI(dom_psk),ech_inner_or_grease,extra_psk,trunc_client_psk_ext(id_32)) in
            {2675}let cur_log'_10: bitstring = (cur_log_9,CH(cr_psk,offer_22)) in
            {2692}let binders_9: bitstring = (if v_527 then catch-fail(hmac(h_psk,kb_27,cur_log'_10)) else caught-fail) in
            {2693}let v_528: bool = not-caught-fail(binders_9) in
            {2694}let v_529: bitstring = catch-fail((if v_527 then (if v_528 then (client_psk_ext(id_32,binders_9),(psk_65,id_32,es_41,is_safe_24)) else fail-any) else fail-any)) in
            {2695}let v_530: bool = (not-caught-fail(v_529) && success?(1-proj-2-tuple(v_529))) in
            {2696}let psk_data_15: bitstring = (if v_530 then 2-proj-2-tuple(v_529) else caught-fail) in
            {2697}let psk_ext_26: preSharedKeyExt = (if v_530 then 1-proj-2-tuple(v_529) else caught-fail) in
            {2702}new fake_id[]: identityPsk;
            {2703}new fake_binder[]: bitstring;
            {2700}let v_531: bool = (if v_530 then catch-fail(@6_use_grease) else caught-fail) in
            {2709}let v_532: hpkeContext = (if is-false(v_531) then catch-fail(context) else caught-fail) in
            {2710}let v_533: bool = (not-caught-fail(v_532) && ((S =nf 1-proj-hpke_context(v_532)) && success?(1-proj-hpke_context(v_532)))) in
            {2711}let base_nonce_1: bitstring = (if v_533 then 3-proj-hpke_context(v_532) else caught-fail) in
            {2712}let key_1: aead_key = (if v_533 then 2-proj-hpke_context(v_532) else caught-fail) in
            {2708}let n: nat = (if is-false(v_531) then 1 else caught-fail) in
            {2705}let o_ech_ext_ADD: echExt = (if is-false(v_531) then ECHClientHelloOuter(ech_h_3,ech_a_3,config_id_1,enc_1,zero) else caught-fail) in
            {2704}let o_psk_ext: preSharedKeyExt = (if is-false(v_531) then (if @6_use_psk then client_psk_ext(fake_id,fake_binder) else empty_psk_ext) else caught-fail) in
            {2706}let o_offer_ADD: params = (if is-false(v_531) then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),o_ech_ext_ADD,empty_extra_ext,o_psk_ext) else caught-fail) in
            {2707}let o_client_hello_ADD: msg = (if is-false(v_531) then CH(o_cr,o_offer_ADD) else caught-fail) in
            {2698}let i_offer: params = (if v_530 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_26) else caught-fail) in
            {2699}let i_client_hello: msg = (if v_530 then CH(i_cr,i_offer) else caught-fail) in
            {2713}let payload_1: bitstring = (if is-false(v_531) then catch-fail((if v_533 then aead_enc(ech_a_3,key_1,(base_nonce_1,n),o_client_hello_ADD,i_client_hello) else fail-any)) else caught-fail) in
            {2714}let v_534: bool = not-caught-fail(payload_1) in
            {2715}let o_ech_ext: echExt = (if v_534 then ECHClientHelloOuter(ech_h_3,ech_a_3,config_id_1,enc_1,payload_1) else caught-fail) in
            {2716}let o_offer_1: params = (if v_534 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),o_ech_ext,empty_extra_ext,o_psk_ext) else caught-fail) in
            {2701}let o_offer: params = (if v_531 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),ech_inner_or_grease,empty_extra_ext,psk_ext_26) else caught-fail) in
            {2717}let (o_client_hello: msg,i_client_hello_1: msg,o_cr_1: bytes32,i_cr_1: bytes32,o_kex_data_1: bitstring,i_kex_data_1: bitstring,o_psk_ext_1: preSharedKeyExt,psk_data_16: bitstring,o_ech_ext_1: echExt) = (if v_530 then (if undo-catch-fail(v_531) then (CH(o_cr,o_offer),CH(o_cr,o_offer),o_cr,o_cr,o_kex_data,o_kex_data,psk_ext_26,psk_data_15,ech_inner_or_grease) else (if v_534 then (CH(o_cr,o_offer_1),i_client_hello,o_cr,i_cr,o_kex_data,i_kex_data,o_psk_ext,psk_data_15,o_ech_ext) else fail-any)) else fail-any) in
            {2718}out(io, o_client_hello);
            {2719}let (psk_66: preSharedKey,id_33: identityPsk,es_42: bitstring,safe: bool) = psk_data_16 in
            (
                {2720}if (false && (not(@6_use_grease) && (psk_66 ≠ NoPsk))) then
                {2721}let client_hello_7: bitstring = (zero,i_client_hello_1) in
                {2723}let h_158: bitstring = catch-fail(hash(@6_backend_h,client_hello_7)) in
                {2724}let v_535: bool = not-caught-fail(h_158) in
                {2722}let l_159: label = tls13_client_early_traffic_secret in
                {2725}let x_179: bitstring = (if v_535 then (l_159,h_158) else caught-fail) in
                {2726}let atsc0_4: bitstring = catch-fail((if v_535 then hmac(@6_backend_h,es_42,x_179) else fail-any)) in
                {2727}let v_536: bool = not-caught-fail(atsc0_4) in
                {2729}let h_159: bitstring = (if v_536 then zero else caught-fail) in
                {2728}let l_160: label = (if v_536 then tls13_key else caught-fail) in
                {2730}let x_180: bitstring = (if v_536 then (l_160,h_159) else caught-fail) in
                {2731}let kc0_4: bitstring = (if v_536 then catch-fail(hmac(@6_backend_h,atsc0_4,x_180)) else caught-fail) in
                {2732}let v_537: bool = not-caught-fail(kc0_4) in
                {2734}let h_160: bitstring = (if v_537 then catch-fail(hash(@6_backend_h,client_hello_7)) else caught-fail) in
                {2735}let v_538: bool = not-caught-fail(h_160) in
                {2733}let l_161: label = (if v_537 then tls13_early_exporter_master_secret else caught-fail) in
                {2736}let x_181: bitstring = (if v_538 then (l_161,h_160) else caught-fail) in
                {2737}let ems0_8: bitstring = (if v_537 then catch-fail((if v_538 then hmac(@6_backend_h,es_42,x_181) else fail-any)) else caught-fail) in
                {2738}let v_539: bool = not-caught-fail(ems0_8) in
                {2739}let (wkc0_4: aead_key,ems0_9: bitstring) = (if v_536 then (if v_537 then (if v_539 then (kc0_4,ems0_8) else fail-any) else fail-any) else fail-any) in
                {2740}!
                {2741}in(io, (i_4: nat,ad_4: bitstring));
                {2742}if is_nat(i_4) then
                {2743}new msg_ed_3[]: bitstring;
                {2745}new st_13: stamp;
                {2746}event ClientSequenceClient0RTTDataWriteKey(@6_id_client,st_13,i_4);
                {2747}event ClientSends0(@6_id_client,i_cr_1,psk_66,i_4,ad_4,msg_ed_3);
                {2744}let enc_ed_3: bitstring = aead_enc(@6_backend_a,wkc0_4,i_4,ad_4,msg_ed_3) in
                {2748}out(io, enc_ed_3)
            ) | (
                {2749}in(io, server_hello_4: msg);
                {2750}let SH(B32(sr24_2: bytes24,sr8_1: bytes8),mode_15: params) = server_hello_4 in
                (
                    {2751}if (false && (B32(sr24_2,sr8_1) = B32(HRR24,HRR8))) then
                    (
                        {2752}if (send_kex_4 ≠ true) then
                        {2753}let nego(=TLS13,h_alg_11: hash_alg,a_alg_9: aead_alg,hrr_kex_ext(g_13: group),=empty_sni_ext,ech_ext_6: echExt,=empty_extra_ext,=empty_psk_ext) = mode_15 in
                        {2754}let v_540: bool = (ech_ext_6 = empty_ech_ext) in
                        {2755}let hrr_mode: params = (if not(v_540) then nego(TLS13,@6_backend_h,@6_backend_a,hrr_kex_ext(@6_backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) else caught-fail) in
                        {2756}let hrr: msg = (if not(v_540) then SH(B32(HRR24,HRR8),hrr_mode) else caught-fail) in
                        {2757}let cur_log_10: bitstring = (if not(v_540) then ((zero,i_client_hello_1),hrr) else caught-fail) in
                        {2758}let transcript_hrr_ech_conf: bitstring = (if not(v_540) then catch-fail(hash(@6_backend_h,cur_log_10)) else caught-fail) in
                        {2759}let v_541: bool = not-caught-fail(transcript_hrr_ech_conf) in
                        {2761}let k_45: bitstring = (if v_541 then catch-fail(b32_2_b(get_random(i_client_hello_1))) else caught-fail) in
                        {2762}let v_542: bool = not-caught-fail(k_45) in
                        {2760}let s_54: bitstring = (if v_541 then zero else caught-fail) in
                        {2763}let k_46: bitstring = (if v_541 then catch-fail((if v_542 then hmac(@6_backend_h,s_54,k_45) else fail-any)) else caught-fail) in
                        {2764}let v_543: bool = not-caught-fail(k_46) in
                        {2765}let l_162: label = (if v_543 then hrr_ech_accept_confirmation else caught-fail) in
                        {2766}let x_182: bitstring = (if v_543 then (l_162,cur_log_10) else caught-fail) in
                        {2767}let is_ech_accepted: bool = (if v_540 then false else (if (ech_ext_6 = ECHHelloRetryRequest((if v_541 then crop_into_bytes8((if v_543 then hmac(@6_backend_h,k_46,x_182) else fail-any)) else fail-any))) then true else false)) in
                        {2768}event ClientEchAcceptance(@6_id_client,is_ech_accepted);
                        {2769}if is_ech_accepted then
                        (
                            {2771}let ech_config(config_id_2: configId,ech_g_4: group,pkR_4: element,o_dom_2: domain,ech_h_4: hash_alg,ech_a_4: aead_alg) = ech_conf in
                            {2773}new s_55[]: seed;
                            {2774}let gx_15: element = dh_pub(@6_backend_g,dh_k(s_55)) in
                            {2775}let v_544: bitstring = (dh_k(s_55),gx_15) in
                            {2776}let v_545: bool = success?(1-proj-2-tuple(v_544)) in
                            {2777}let gx_16: element = (if v_545 then 2-proj-2-tuple(v_544) else caught-fail) in
                            {2778}let x_183: bitstring = (if v_545 then 1-proj-2-tuple(v_544) else caught-fail) in
                            {2772}let send_key_share: bool = true in
                            {2779}let kex_6: kex_alg = (if v_545 then (if send_key_share then DHE_kex(@6_backend_g,gx_16) else DHE_group(@6_backend_g)) else caught-fail) in
                            {2780}let (i_kex_ext_1: keyShareExt,i_kex_data_2: bitstring) = (if v_545 then (client_kex_ext(kex_6),(x_183,@6_backend_g)) else fail-any) in
                            {2782}new s_56[]: seed;
                            {2783}let gx_17: element = dh_pub(@6_tls_g,dh_k(s_56)) in
                            {2784}let v_546: bitstring = (dh_k(s_56),gx_17) in
                            {2785}let v_547: bool = success?(1-proj-2-tuple(v_546)) in
                            {2786}let gx_18: element = (if v_547 then 2-proj-2-tuple(v_546) else caught-fail) in
                            {2787}let x_184: bitstring = (if v_547 then 1-proj-2-tuple(v_546) else caught-fail) in
                            {2781}let send_key_share_1: bool = true in
                            {2788}let kex_7: kex_alg = (if v_547 then (if send_key_share_1 then DHE_kex(@6_tls_g,gx_18) else DHE_group(@6_tls_g)) else caught-fail) in
                            {2789}let (o_kex_ext_1: keyShareExt,o_kex_data_2: bitstring) = (if v_547 then (client_kex_ext(kex_7),(x_184,@6_tls_g)) else fail-any) in
                            {2790}new rand24_7[]: bytes24;
                            {2791}new rand8_7[]: bytes8;
                            {2793}new rand24_8[]: bytes24;
                            {2794}new rand8_8[]: bytes8;
                            {2795}let o_cr_2: bytes32 = B32(rand24_8,rand8_8) in
                            {2792}let i_cr_2: bytes32 = B32(rand24_7,rand8_7) in
                            {2770}let cur_log_IN1_HRR: bitstring = ((zero,i_client_hello_1),server_hello_4) in
                            {2797}if @6_use_psk then
                            (
                                {2796}let ech_ext_7: echExt = ECHClientHelloInner in
                                {2798}let (psk_67: preSharedKey,id_34: identityPsk,old_es_5: bitstring,is_safe_25: bool) = psk_data_16 in
                                (
                                    {2802}let k_47: bitstring = catch-fail(psk2b(psk_67)) in
                                    {2803}let v_548: bool = not-caught-fail(k_47) in
                                    {2801}let s_57: bitstring = zero in
                                    {2804}let early_secret_42: bitstring = catch-fail((if v_548 then hmac(@6_backend_h,s_57,k_47) else fail-any)) in
                                    {2805}let v_549: bool = not-caught-fail(early_secret_42) in
                                    {2807}let m_54: bitstring = (if v_549 then zero else caught-fail) in
                                    {2808}let h_161: bitstring = (if v_549 then catch-fail(hash(@6_backend_h,m_54)) else caught-fail) in
                                    {2809}let v_550: bool = not-caught-fail(h_161) in
                                    {2806}let l_163: label = (if v_549 then tls13_ext_res_binder else caught-fail) in
                                    {2810}let x_185: bitstring = (if v_550 then (l_163,h_161) else caught-fail) in
                                    {2811}let binder_key_28: bitstring = (if v_549 then catch-fail((if v_550 then hmac(@6_backend_h,early_secret_42,x_185) else fail-any)) else caught-fail) in
                                    {2812}let v_551: bool = not-caught-fail(binder_key_28) in
                                    {2813}let v_552: bitstring = catch-fail((if v_549 then (if v_551 then (early_secret_42,binder_key_28) else fail-any) else fail-any)) in
                                    {2814}let v_553: bool = (not-caught-fail(v_552) && success?(1-proj-2-tuple(v_552))) in
                                    {2815}let kb_28: mac_key = (if v_553 then 2-proj-2-tuple(v_552) else caught-fail) in
                                    {2816}let es_43: bitstring = (if v_553 then 1-proj-2-tuple(v_552) else caught-fail) in
                                    {2799}let offer_23: params = nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_1,SNI(backend_dom),ech_ext_7,@6_i_extra_ext,trunc_client_psk_ext(id_34)) in
                                    {2800}let cur_log'_11: bitstring = (cur_log_IN1_HRR,CH(i_cr_2,offer_23)) in
                                    {2817}let binders_10: bitstring = (if v_553 then catch-fail(hmac(@6_backend_h,kb_28,cur_log'_11)) else caught-fail) in
                                    {2818}let v_554: bool = not-caught-fail(binders_10) in
                                    {2819}let v_555: bitstring = catch-fail((if v_553 then (if v_554 then (client_psk_ext(id_34,binders_10),(psk_67,id_34,es_43,is_safe_25)) else fail-any) else fail-any)) in
                                    {2820}let v_556: bool = (not-caught-fail(v_555) && success?(1-proj-2-tuple(v_555))) in
                                    {2821}let psk_data_17: bitstring = (if v_556 then 2-proj-2-tuple(v_555) else caught-fail) in
                                    {2822}let psk_ext_27: preSharedKeyExt = (if v_556 then 1-proj-2-tuple(v_555) else caught-fail) in
                                    {2825}new fake_id_1[]: identityPsk;
                                    {2826}new fake_binder_1[]: bitstring;
                                    {2832}let v_557: hpkeContext = (if v_556 then catch-fail(context) else caught-fail) in
                                    {2833}let v_558: bool = (not-caught-fail(v_557) && ((S =nf 1-proj-hpke_context(v_557)) && success?(1-proj-hpke_context(v_557)))) in
                                    {2834}let base_nonce_2: bitstring = (if v_558 then 3-proj-hpke_context(v_557) else caught-fail) in
                                    {2835}let key_2: aead_key = (if v_558 then 2-proj-hpke_context(v_557) else caught-fail) in
                                    {2831}let n_1: nat = (if v_556 then 2 else caught-fail) in
                                    {2828}let o_ech_ext_ADD_1: echExt = (if v_556 then ECHClientHelloOuter(ech_h_4,ech_a_4,config_id_2,zero,zero) else caught-fail) in
                                    {2827}let o_psk_ext_2: preSharedKeyExt = (if v_556 then (if @6_use_psk then client_psk_ext(fake_id_1,fake_binder_1) else empty_psk_ext) else caught-fail) in
                                    {2829}let o_offer_ADD_1: params = (if v_556 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_1,SNI(o_dom_2),o_ech_ext_ADD_1,empty_extra_ext,o_psk_ext_2) else caught-fail) in
                                    {2830}let o_client_hello_ADD_1: msg = (if v_556 then CH(o_cr_2,o_offer_ADD_1) else caught-fail) in
                                    {2823}let i_offer_1: params = (if v_556 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_1,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_27) else caught-fail) in
                                    {2824}let i_client_hello_2: msg = (if v_556 then CH(i_cr_2,i_offer_1) else caught-fail) in
                                    {2836}let payload_2: bitstring = (if v_556 then catch-fail((if v_558 then aead_enc(ech_a_4,key_2,(base_nonce_2,n_1),o_client_hello_ADD_1,i_client_hello_2) else fail-any)) else caught-fail) in
                                    {2837}let v_559: bool = not-caught-fail(payload_2) in
                                    {2838}let o_ech_ext_2: echExt = (if v_559 then ECHClientHelloOuter(ech_h_4,ech_a_4,config_id_2,zero,payload_2) else caught-fail) in
                                    {2839}let o_offer_2: params = (if v_559 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_1,SNI(o_dom_2),o_ech_ext_2,empty_extra_ext,o_psk_ext_2) else caught-fail) in
                                    {2840}let (o_client_hello': msg,i_client_hello': msg,i_cr': bytes32,i_kex_data': bitstring,psk_data'_9: bitstring) = (if v_556 then (if v_559 then (CH(o_cr_2,o_offer_2),i_client_hello_2,i_cr_2,i_kex_data_2,psk_data_17) else fail-any) else fail-any) in
                                    {2841}out(io, o_client_hello');
                                    {2842}in(io, server_hello'_9: msg);
                                    {2843}let SH(B32(sr24': bytes24,sr8': bytes8),params': params) = server_hello'_9 in
                                    {2845}let sh_modified_1: msg = SH(B32(sr24',zero8),params') in
                                    {2844}let cur_log_IN1_HRR_IN2: bitstring = (cur_log_IN1_HRR,i_client_hello') in
                                    {2846}let cur_log_sh_1: bitstring = (cur_log_IN1_HRR_IN2,sh_modified_1) in
                                    {2847}let transcript_ech_conf_1: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_1)) in
                                    {2848}let v_560: bool = not-caught-fail(transcript_ech_conf_1) in
                                    {2850}let k_48: bitstring = (if v_560 then catch-fail(b32_2_b(get_random(i_client_hello'))) else caught-fail) in
                                    {2851}let v_561: bool = not-caught-fail(k_48) in
                                    {2849}let s_58: bitstring = (if v_560 then zero else caught-fail) in
                                    {2852}let k_49: bitstring = (if v_560 then catch-fail((if v_561 then hmac(@6_backend_h,s_58,k_48) else fail-any)) else caught-fail) in
                                    {2853}let v_562: bool = not-caught-fail(k_49) in
                                    {2854}let l_164: label = (if v_562 then ech_accept_confirmation else caught-fail) in
                                    {2855}let x_186: bitstring = (if v_562 then (l_164,cur_log_sh_1) else caught-fail) in
                                    {2856}let sr8_2: bytes8 = (if v_560 then catch-fail(crop_into_bytes8((if v_562 then hmac(@6_backend_h,k_49,x_186) else fail-any))) else caught-fail) in
                                    {2857}let v_563: bool = not-caught-fail(sr8_2) in
                                    {2858}if (B32(sr24',sr8') = (if v_560 then (if v_563 then B32(sr24',sr8_2) else fail-any) else fail-any)) then
                                    {2859}let (x_187: bitstring,g_14: group) = i_kex_data' in
                                    {2860}let (psk_offer_12: preSharedKey,id_offer_12: identityPsk,es_offer_12: bitstring,is_safe_offer_12: bool) = psk_data'_9 in
                                    {2861}event Client_PSKOffer(@6_id_client,psk_offer_12,id_offer_12,is_safe_offer_12);
                                    {2862}event Client_Rand_client(@6_id_client,i_cr');
                                    {2863}event Client_DH_client(@6_id_client,dh_pub(g_14,x_187));
                                    {2864}event Client_server_domain(@6_id_client,backend_dom);
                                    {2865}let SH(sr_23: bytes32,mode_16: params) = server_hello'_9 in
                                    {2866}event Client_Rand_server(@6_id_client,sr_23);
                                    {2867}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_14,gy_13: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_28: preSharedKeyExt) = mode_16 in
                                    (
                                        {2869}event Client_DH_server(@6_id_client,gy_13);
                                        {2870}let v_564: bool = (psk_ext_28 = empty_psk_ext) in
                                        {2871}let psk_68: preSharedKey = (if v_564 then NoPsk else caught-fail) in
                                        {2873}let k_50: bitstring = (if v_564 then catch-fail(psk2b(psk_68)) else caught-fail) in
                                        {2874}let v_565: bool = not-caught-fail(k_50) in
                                        {2872}let s_59: bitstring = (if v_564 then zero else caught-fail) in
                                        {2875}let early_secret_43: bitstring = (if v_564 then catch-fail((if v_565 then hmac(@6_backend_h,s_59,k_50) else fail-any)) else caught-fail) in
                                        {2876}let v_566: bool = not-caught-fail(early_secret_43) in
                                        {2878}let m_55: bitstring = (if v_566 then zero else caught-fail) in
                                        {2879}let h_162: bitstring = (if v_566 then catch-fail(hash(@6_backend_h,m_55)) else caught-fail) in
                                        {2880}let v_567: bool = not-caught-fail(h_162) in
                                        {2877}let l_165: label = (if v_566 then tls13_ext_res_binder else caught-fail) in
                                        {2881}let x_188: bitstring = (if v_567 then (l_165,h_162) else caught-fail) in
                                        {2882}let binder_key_29: bitstring = (if v_566 then catch-fail((if v_567 then hmac(@6_backend_h,early_secret_43,x_188) else fail-any)) else caught-fail) in
                                        {2883}let v_568: bool = not-caught-fail(binder_key_29) in
                                        {2884}let v_569: bitstring = (if v_564 then catch-fail((if v_566 then (if v_568 then (early_secret_43,binder_key_29) else fail-any) else fail-any)) else caught-fail) in
                                        {2885}let v_570: bool = (not-caught-fail(v_569) && success?(1-proj-2-tuple(v_569))) in
                                        {2886}let kb_29: mac_key = (if v_570 then 2-proj-2-tuple(v_569) else caught-fail) in
                                        {2887}let es_44: bitstring = (if v_570 then 1-proj-2-tuple(v_569) else caught-fail) in
                                        {2888}let v_571: bitstring = (if not(v_564) then catch-fail(psk_data'_9) else caught-fail) in
                                        {2889}let v_572: bool = (not-caught-fail(v_571) && success?(1-proj-4-tuple(v_571))) in
                                        {2890}let is_safe_26: bool = (if v_572 then 4-proj-4-tuple(v_571) else caught-fail) in
                                        {2891}let es_45: bitstring = (if v_572 then 3-proj-4-tuple(v_571) else caught-fail) in
                                        {2892}let id_35: identityPsk = (if v_572 then 2-proj-4-tuple(v_571) else caught-fail) in
                                        {2893}let psk_69: preSharedKey = (if v_572 then 1-proj-4-tuple(v_571) else caught-fail) in
                                        {2894}let (psk_70: preSharedKey,early_secret_44: bitstring,valid_12: bool,safe_psk_18: bool) = (if v_564 then (if v_570 then (NoPsk,es_44,true,false) else fail-any) else (if v_572 then (psk_69,es_45,((psk_69 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_28)),is_safe_26) else fail-any)) in
                                        {2895}event Client_PSKChoosen(@6_id_client,psk_70,safe_psk_18);
                                        {2896}if valid_12 then
                                        (
                                            {2899}new s_60[]: seed;
                                            {2897}let gxy_25: element = catch-fail(dh_decap_fun(g_14,gy_13,x_187)) in
                                            {2898}let v_573: bool = not-caught-fail(gxy_25) in
                                            {2900}let gxy_26: element = (if v_573 then gxy_25 else dh_f(s_60)) in
                                            {2901}event Client_DH_gxy(@6_id_client,gxy_26);
                                            {2903}let m_56: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {2904}let v_574: bool = not-caught-fail(m_56) in
                                            {2905}let h_163: bitstring = (if v_574 then catch-fail(hash(@6_backend_h,m_56)) else caught-fail) in
                                            {2906}let v_575: bool = not-caught-fail(h_163) in
                                            {2902}let l_166: label = tls13_derived in
                                            {2907}let x_189: bitstring = (if v_575 then (l_166,h_163) else caught-fail) in
                                            {2908}let extra_30: bitstring = catch-fail((if v_574 then (if v_575 then hmac(@6_backend_h,early_secret_44,x_189) else fail-any) else fail-any)) in
                                            {2909}let v_576: bool = not-caught-fail(extra_30) in
                                            {2910}let handshake_secret_13: bitstring = (if v_576 then hmac(@6_backend_h,extra_30,gxy_26) else fail-any) in
                                            {2912}let m_57: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {2913}let v_577: bool = not-caught-fail(m_57) in
                                            {2914}let h_164: bitstring = (if v_577 then catch-fail(hash(@6_backend_h,m_57)) else caught-fail) in
                                            {2915}let v_578: bool = not-caught-fail(h_164) in
                                            {2911}let l_167: label = tls13_derived in
                                            {2916}let x_190: bitstring = (if v_578 then (l_167,h_164) else caught-fail) in
                                            {2917}let extra_31: bitstring = catch-fail((if v_577 then (if v_578 then hmac(@6_backend_h,handshake_secret_13,x_190) else fail-any) else fail-any)) in
                                            {2918}let v_579: bool = not-caught-fail(extra_31) in
                                            {2919}let k_51: bitstring = (if v_579 then zero else caught-fail) in
                                            {2920}let master_secret_33: bitstring = (if v_579 then catch-fail(hmac(@6_backend_h,handshake_secret_13,k_51)) else caught-fail) in
                                            {2921}let v_580: bool = not-caught-fail(master_secret_33) in
                                            {2868}let cur_log2_31: bitstring = (cur_log_IN1_HRR_IN2,server_hello'_9) in
                                            {2923}let h_165: bitstring = (if v_580 then catch-fail(hash(@6_backend_h,cur_log2_31)) else caught-fail) in
                                            {2924}let v_581: bool = not-caught-fail(h_165) in
                                            {2922}let l_168: label = (if v_580 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {2925}let x_191: bitstring = (if v_581 then (l_168,h_165) else caught-fail) in
                                            {2926}let client_hts_13: bitstring = (if v_580 then catch-fail((if v_581 then hmac(@6_backend_h,handshake_secret_13,x_191) else fail-any)) else caught-fail) in
                                            {2927}let v_582: bool = not-caught-fail(client_hts_13) in
                                            {2929}let h_166: bitstring = (if v_582 then catch-fail(hash(@6_backend_h,cur_log2_31)) else caught-fail) in
                                            {2930}let v_583: bool = not-caught-fail(h_166) in
                                            {2928}let l_169: label = (if v_582 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {2931}let x_192: bitstring = (if v_583 then (l_169,h_166) else caught-fail) in
                                            {2932}let server_hts_13: bitstring = (if v_582 then catch-fail((if v_583 then hmac(@6_backend_h,handshake_secret_13,x_192) else fail-any)) else caught-fail) in
                                            {2933}let v_584: bool = not-caught-fail(server_hts_13) in
                                            {2935}let h_167: bitstring = (if v_584 then zero else caught-fail) in
                                            {2934}let l_170: label = (if v_584 then tls13_key else caught-fail) in
                                            {2936}let x_193: bitstring = (if v_584 then (l_170,h_167) else caught-fail) in
                                            {2937}let client_wkh_13: bitstring = (if v_584 then catch-fail(hmac(@6_backend_h,client_hts_13,x_193)) else caught-fail) in
                                            {2938}let v_585: bool = not-caught-fail(client_wkh_13) in
                                            {2940}let h_168: bitstring = (if v_585 then zero else caught-fail) in
                                            {2939}let l_171: label = (if v_585 then tls13_key else caught-fail) in
                                            {2941}let x_194: bitstring = (if v_585 then (l_171,h_168) else caught-fail) in
                                            {2942}let server_wkh_13: bitstring = (if v_585 then catch-fail(hmac(@6_backend_h,server_hts_13,x_194)) else caught-fail) in
                                            {2943}let v_586: bool = not-caught-fail(server_wkh_13) in
                                            {2945}let h_169: bitstring = (if v_586 then zero else caught-fail) in
                                            {2944}let l_172: label = (if v_586 then tls13_finished else caught-fail) in
                                            {2946}let x_195: bitstring = (if v_586 then (l_172,h_169) else caught-fail) in
                                            {2947}let client_fk_13: bitstring = (if v_586 then catch-fail(hmac(@6_backend_h,client_hts_13,x_195)) else caught-fail) in
                                            {2948}let v_587: bool = not-caught-fail(client_fk_13) in
                                            {2950}let h_170: bitstring = (if v_587 then zero else caught-fail) in
                                            {2949}let l_173: label = (if v_587 then tls13_finished else caught-fail) in
                                            {2951}let x_196: bitstring = (if v_587 then (l_173,h_170) else caught-fail) in
                                            {2952}let server_fk_13: bitstring = (if v_587 then catch-fail(hmac(@6_backend_h,server_hts_13,x_196)) else caught-fail) in
                                            {2953}let v_588: bool = not-caught-fail(server_fk_13) in
                                            {2954}let (master_secret_34: bitstring,chk_20: aead_key,shk_19: aead_key,cfin_20: mac_key,sfin_19: mac_key) = (if v_579 then (if v_580 then (if v_582 then (if v_584 then (if v_585 then (if v_586 then (if v_587 then (if v_588 then (master_secret_33,client_wkh_13,server_wkh_13,client_fk_13,server_fk_13) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {2955}event Client_chk(@6_id_client,chk_20);
                                            {2956}event Client_shk(@6_id_client,shk_19);
                                            {2957}event Client_cfin(@6_id_client,cfin_20);
                                            {2958}event Client_sfin(@6_id_client,sfin_19);
                                            {2959}in(io, enc_ee_msg_12: bitstring);
                                            {2960}let ee_msg_13: msg = aead_dec(@6_backend_a,shk_19,0,zero,enc_ee_msg_12) in
                                            {2961}let EE(ech_ee_12: echExt,extra_ee_12: extraExt) = ee_msg_13 in
                                            {2962}let cur_log2_32: bitstring = (cur_log2_31,ee_msg_13) in
                                            {2963}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr',sr_23,@6_backend_h,@6_backend_a,c_dom_6,backend_dom,psk_70,safe_psk_18,@6_comp_psk,master_secret_34,chk_20,0,shk_19,1,cfin_20,sfin_19,cur_log2_32)))
                                        )
                                        else
                                            {2964}out(io, illegal_parameter)
                                    )
                                    else
                                        {2965}out(io, illegal_parameter)
                                )
                                else
                                    {3142}get pre_shared_keys(c_dom'_6: domain,=backend_dom,=@6_backend_h,id_36: identityPsk,psk_71: preSharedKey,idP_8: idProc,is_safe_27: bool) in
                                    {2966}event Selected_one_time_used_psk(@6_id_client,psk_71,is_safe_27);
                                    {2967}event Selected_psk(c_dom_6,c_dom'_6,idP_8,is_safe_27);
                                    {2968}event Selected_psk_no_missmatch(@6_id_client,backend_dom,@6_backend_h,psk_71,id_36);
                                    {2969}event Selected_psk_with_ID(c_dom_6,c_dom'_6,id_36,idP_8,is_safe_27);
                                    {2970}let v_589: bitstring = (id_36,psk_71,is_safe_27) in
                                    {2971}let v_590: bool = success?(1-proj-3-tuple(v_589)) in
                                    {2972}let is_safe_28: bool = (if v_590 then 3-proj-3-tuple(v_589) else caught-fail) in
                                    {2973}let psk_72: preSharedKey = (if v_590 then 2-proj-3-tuple(v_589) else caught-fail) in
                                    {2974}let id_37: identityPsk = (if v_590 then 1-proj-3-tuple(v_589) else caught-fail) in
                                    {2978}let k_52: bitstring = (if v_590 then catch-fail(psk2b(psk_72)) else caught-fail) in
                                    {2979}let v_591: bool = not-caught-fail(k_52) in
                                    {2977}let s_61: bitstring = (if v_590 then zero else caught-fail) in
                                    {2980}let early_secret_45: bitstring = (if v_590 then catch-fail((if v_591 then hmac(@6_backend_h,s_61,k_52) else fail-any)) else caught-fail) in
                                    {2981}let v_592: bool = not-caught-fail(early_secret_45) in
                                    {2983}let m_58: bitstring = (if v_592 then zero else caught-fail) in
                                    {2984}let h_171: bitstring = (if v_592 then catch-fail(hash(@6_backend_h,m_58)) else caught-fail) in
                                    {2985}let v_593: bool = not-caught-fail(h_171) in
                                    {2982}let l_174: label = (if v_592 then tls13_ext_res_binder else caught-fail) in
                                    {2986}let x_197: bitstring = (if v_593 then (l_174,h_171) else caught-fail) in
                                    {2987}let binder_key_30: bitstring = (if v_592 then catch-fail((if v_593 then hmac(@6_backend_h,early_secret_45,x_197) else fail-any)) else caught-fail) in
                                    {2988}let v_594: bool = not-caught-fail(binder_key_30) in
                                    {2989}let v_595: bitstring = (if v_590 then catch-fail((if v_592 then (if v_594 then (early_secret_45,binder_key_30) else fail-any) else fail-any)) else caught-fail) in
                                    {2990}let v_596: bool = (not-caught-fail(v_595) && success?(1-proj-2-tuple(v_595))) in
                                    {2991}let kb_30: mac_key = (if v_596 then 2-proj-2-tuple(v_595) else caught-fail) in
                                    {2992}let es_46: bitstring = (if v_596 then 1-proj-2-tuple(v_595) else caught-fail) in
                                    {2975}let offer_24: params = (if v_590 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_1,SNI(backend_dom),ech_ext_7,@6_i_extra_ext,trunc_client_psk_ext(id_37)) else caught-fail) in
                                    {2976}let cur_log'_12: bitstring = (if v_590 then (cur_log_IN1_HRR,CH(i_cr_2,offer_24)) else caught-fail) in
                                    {2993}let binders_11: bitstring = (if v_596 then catch-fail(hmac(@6_backend_h,kb_30,cur_log'_12)) else caught-fail) in
                                    {2994}let v_597: bool = not-caught-fail(binders_11) in
                                    {2995}let v_598: bitstring = catch-fail((if v_590 then (if v_596 then (if v_597 then (client_psk_ext(id_37,binders_11),(psk_72,id_37,es_46,is_safe_28)) else fail-any) else fail-any) else fail-any)) in
                                    {2996}let v_599: bool = (not-caught-fail(v_598) && success?(1-proj-2-tuple(v_598))) in
                                    {2997}let psk_data_18: bitstring = (if v_599 then 2-proj-2-tuple(v_598) else caught-fail) in
                                    {2998}let psk_ext_29: preSharedKeyExt = (if v_599 then 1-proj-2-tuple(v_598) else caught-fail) in
                                    {3001}new fake_id_2[]: identityPsk;
                                    {3002}new fake_binder_2[]: bitstring;
                                    {3008}let v_600: hpkeContext = (if v_599 then catch-fail(context) else caught-fail) in
                                    {3009}let v_601: bool = (not-caught-fail(v_600) && ((S =nf 1-proj-hpke_context(v_600)) && success?(1-proj-hpke_context(v_600)))) in
                                    {3010}let base_nonce_3: bitstring = (if v_601 then 3-proj-hpke_context(v_600) else caught-fail) in
                                    {3011}let key_3: aead_key = (if v_601 then 2-proj-hpke_context(v_600) else caught-fail) in
                                    {3007}let n_2: nat = (if v_599 then 2 else caught-fail) in
                                    {3004}let o_ech_ext_ADD_2: echExt = (if v_599 then ECHClientHelloOuter(ech_h_4,ech_a_4,config_id_2,zero,zero) else caught-fail) in
                                    {3003}let o_psk_ext_3: preSharedKeyExt = (if v_599 then (if @6_use_psk then client_psk_ext(fake_id_2,fake_binder_2) else empty_psk_ext) else caught-fail) in
                                    {3005}let o_offer_ADD_2: params = (if v_599 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_1,SNI(o_dom_2),o_ech_ext_ADD_2,empty_extra_ext,o_psk_ext_3) else caught-fail) in
                                    {3006}let o_client_hello_ADD_2: msg = (if v_599 then CH(o_cr_2,o_offer_ADD_2) else caught-fail) in
                                    {2999}let i_offer_2: params = (if v_599 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_1,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_29) else caught-fail) in
                                    {3000}let i_client_hello_3: msg = (if v_599 then CH(i_cr_2,i_offer_2) else caught-fail) in
                                    {3012}let payload_3: bitstring = (if v_599 then catch-fail((if v_601 then aead_enc(ech_a_4,key_3,(base_nonce_3,n_2),o_client_hello_ADD_2,i_client_hello_3) else fail-any)) else caught-fail) in
                                    {3013}let v_602: bool = not-caught-fail(payload_3) in
                                    {3014}let o_ech_ext_3: echExt = (if v_602 then ECHClientHelloOuter(ech_h_4,ech_a_4,config_id_2,zero,payload_3) else caught-fail) in
                                    {3015}let o_offer_3: params = (if v_602 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_1,SNI(o_dom_2),o_ech_ext_3,empty_extra_ext,o_psk_ext_3) else caught-fail) in
                                    {3016}let (o_client_hello'_1: msg,i_client_hello'_1: msg,i_cr'_1: bytes32,i_kex_data'_1: bitstring,psk_data'_10: bitstring) = (if v_599 then (if v_602 then (CH(o_cr_2,o_offer_3),i_client_hello_3,i_cr_2,i_kex_data_2,psk_data_18) else fail-any) else fail-any) in
                                    {3017}out(io, o_client_hello'_1);
                                    {3018}in(io, server_hello'_10: msg);
                                    {3019}let SH(B32(sr24'_1: bytes24,sr8'_1: bytes8),params'_1: params) = server_hello'_10 in
                                    {3021}let sh_modified_2: msg = SH(B32(sr24'_1,zero8),params'_1) in
                                    {3020}let cur_log_IN1_HRR_IN2_1: bitstring = (cur_log_IN1_HRR,i_client_hello'_1) in
                                    {3022}let cur_log_sh_2: bitstring = (cur_log_IN1_HRR_IN2_1,sh_modified_2) in
                                    {3023}let transcript_ech_conf_2: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_2)) in
                                    {3024}let v_603: bool = not-caught-fail(transcript_ech_conf_2) in
                                    {3026}let k_53: bitstring = (if v_603 then catch-fail(b32_2_b(get_random(i_client_hello'_1))) else caught-fail) in
                                    {3027}let v_604: bool = not-caught-fail(k_53) in
                                    {3025}let s_62: bitstring = (if v_603 then zero else caught-fail) in
                                    {3028}let k_54: bitstring = (if v_603 then catch-fail((if v_604 then hmac(@6_backend_h,s_62,k_53) else fail-any)) else caught-fail) in
                                    {3029}let v_605: bool = not-caught-fail(k_54) in
                                    {3030}let l_175: label = (if v_605 then ech_accept_confirmation else caught-fail) in
                                    {3031}let x_198: bitstring = (if v_605 then (l_175,cur_log_sh_2) else caught-fail) in
                                    {3032}let sr8_3: bytes8 = (if v_603 then catch-fail(crop_into_bytes8((if v_605 then hmac(@6_backend_h,k_54,x_198) else fail-any))) else caught-fail) in
                                    {3033}let v_606: bool = not-caught-fail(sr8_3) in
                                    {3034}if (B32(sr24'_1,sr8'_1) = (if v_603 then (if v_606 then B32(sr24'_1,sr8_3) else fail-any) else fail-any)) then
                                    {3035}let (x_199: bitstring,g_15: group) = i_kex_data'_1 in
                                    {3036}let (psk_offer_13: preSharedKey,id_offer_13: identityPsk,es_offer_13: bitstring,is_safe_offer_13: bool) = psk_data'_10 in
                                    {3037}event Client_PSKOffer(@6_id_client,psk_offer_13,id_offer_13,is_safe_offer_13);
                                    {3038}event Client_Rand_client(@6_id_client,i_cr'_1);
                                    {3039}event Client_DH_client(@6_id_client,dh_pub(g_15,x_199));
                                    {3040}event Client_server_domain(@6_id_client,backend_dom);
                                    {3041}let SH(sr_24: bytes32,mode_17: params) = server_hello'_10 in
                                    {3042}event Client_Rand_server(@6_id_client,sr_24);
                                    {3043}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_15,gy_14: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_30: preSharedKeyExt) = mode_17 in
                                    (
                                        {3045}event Client_DH_server(@6_id_client,gy_14);
                                        {3046}let v_607: bool = (psk_ext_30 = empty_psk_ext) in
                                        {3047}let psk_73: preSharedKey = (if v_607 then NoPsk else caught-fail) in
                                        {3049}let k_55: bitstring = (if v_607 then catch-fail(psk2b(psk_73)) else caught-fail) in
                                        {3050}let v_608: bool = not-caught-fail(k_55) in
                                        {3048}let s_63: bitstring = (if v_607 then zero else caught-fail) in
                                        {3051}let early_secret_46: bitstring = (if v_607 then catch-fail((if v_608 then hmac(@6_backend_h,s_63,k_55) else fail-any)) else caught-fail) in
                                        {3052}let v_609: bool = not-caught-fail(early_secret_46) in
                                        {3054}let m_59: bitstring = (if v_609 then zero else caught-fail) in
                                        {3055}let h_172: bitstring = (if v_609 then catch-fail(hash(@6_backend_h,m_59)) else caught-fail) in
                                        {3056}let v_610: bool = not-caught-fail(h_172) in
                                        {3053}let l_176: label = (if v_609 then tls13_ext_res_binder else caught-fail) in
                                        {3057}let x_200: bitstring = (if v_610 then (l_176,h_172) else caught-fail) in
                                        {3058}let binder_key_31: bitstring = (if v_609 then catch-fail((if v_610 then hmac(@6_backend_h,early_secret_46,x_200) else fail-any)) else caught-fail) in
                                        {3059}let v_611: bool = not-caught-fail(binder_key_31) in
                                        {3060}let v_612: bitstring = (if v_607 then catch-fail((if v_609 then (if v_611 then (early_secret_46,binder_key_31) else fail-any) else fail-any)) else caught-fail) in
                                        {3061}let v_613: bool = (not-caught-fail(v_612) && success?(1-proj-2-tuple(v_612))) in
                                        {3062}let kb_31: mac_key = (if v_613 then 2-proj-2-tuple(v_612) else caught-fail) in
                                        {3063}let es_47: bitstring = (if v_613 then 1-proj-2-tuple(v_612) else caught-fail) in
                                        {3064}let v_614: bitstring = (if not(v_607) then catch-fail(psk_data'_10) else caught-fail) in
                                        {3065}let v_615: bool = (not-caught-fail(v_614) && success?(1-proj-4-tuple(v_614))) in
                                        {3066}let is_safe_29: bool = (if v_615 then 4-proj-4-tuple(v_614) else caught-fail) in
                                        {3067}let es_48: bitstring = (if v_615 then 3-proj-4-tuple(v_614) else caught-fail) in
                                        {3068}let id_38: identityPsk = (if v_615 then 2-proj-4-tuple(v_614) else caught-fail) in
                                        {3069}let psk_74: preSharedKey = (if v_615 then 1-proj-4-tuple(v_614) else caught-fail) in
                                        {3070}let (psk_75: preSharedKey,early_secret_47: bitstring,valid_13: bool,safe_psk_19: bool) = (if v_607 then (if v_613 then (NoPsk,es_47,true,false) else fail-any) else (if v_615 then (psk_74,es_48,((psk_74 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_30)),is_safe_29) else fail-any)) in
                                        {3071}event Client_PSKChoosen(@6_id_client,psk_75,safe_psk_19);
                                        {3072}if valid_13 then
                                        (
                                            {3075}new s_64[]: seed;
                                            {3073}let gxy_27: element = catch-fail(dh_decap_fun(g_15,gy_14,x_199)) in
                                            {3074}let v_616: bool = not-caught-fail(gxy_27) in
                                            {3076}let gxy_28: element = (if v_616 then gxy_27 else dh_f(s_64)) in
                                            {3077}event Client_DH_gxy(@6_id_client,gxy_28);
                                            {3079}let m_60: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {3080}let v_617: bool = not-caught-fail(m_60) in
                                            {3081}let h_173: bitstring = (if v_617 then catch-fail(hash(@6_backend_h,m_60)) else caught-fail) in
                                            {3082}let v_618: bool = not-caught-fail(h_173) in
                                            {3078}let l_177: label = tls13_derived in
                                            {3083}let x_201: bitstring = (if v_618 then (l_177,h_173) else caught-fail) in
                                            {3084}let extra_32: bitstring = catch-fail((if v_617 then (if v_618 then hmac(@6_backend_h,early_secret_47,x_201) else fail-any) else fail-any)) in
                                            {3085}let v_619: bool = not-caught-fail(extra_32) in
                                            {3086}let handshake_secret_14: bitstring = (if v_619 then hmac(@6_backend_h,extra_32,gxy_28) else fail-any) in
                                            {3088}let m_61: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {3089}let v_620: bool = not-caught-fail(m_61) in
                                            {3090}let h_174: bitstring = (if v_620 then catch-fail(hash(@6_backend_h,m_61)) else caught-fail) in
                                            {3091}let v_621: bool = not-caught-fail(h_174) in
                                            {3087}let l_178: label = tls13_derived in
                                            {3092}let x_202: bitstring = (if v_621 then (l_178,h_174) else caught-fail) in
                                            {3093}let extra_33: bitstring = catch-fail((if v_620 then (if v_621 then hmac(@6_backend_h,handshake_secret_14,x_202) else fail-any) else fail-any)) in
                                            {3094}let v_622: bool = not-caught-fail(extra_33) in
                                            {3095}let k_56: bitstring = (if v_622 then zero else caught-fail) in
                                            {3096}let master_secret_35: bitstring = (if v_622 then catch-fail(hmac(@6_backend_h,handshake_secret_14,k_56)) else caught-fail) in
                                            {3097}let v_623: bool = not-caught-fail(master_secret_35) in
                                            {3044}let cur_log2_33: bitstring = (cur_log_IN1_HRR_IN2_1,server_hello'_10) in
                                            {3099}let h_175: bitstring = (if v_623 then catch-fail(hash(@6_backend_h,cur_log2_33)) else caught-fail) in
                                            {3100}let v_624: bool = not-caught-fail(h_175) in
                                            {3098}let l_179: label = (if v_623 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {3101}let x_203: bitstring = (if v_624 then (l_179,h_175) else caught-fail) in
                                            {3102}let client_hts_14: bitstring = (if v_623 then catch-fail((if v_624 then hmac(@6_backend_h,handshake_secret_14,x_203) else fail-any)) else caught-fail) in
                                            {3103}let v_625: bool = not-caught-fail(client_hts_14) in
                                            {3105}let h_176: bitstring = (if v_625 then catch-fail(hash(@6_backend_h,cur_log2_33)) else caught-fail) in
                                            {3106}let v_626: bool = not-caught-fail(h_176) in
                                            {3104}let l_180: label = (if v_625 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {3107}let x_204: bitstring = (if v_626 then (l_180,h_176) else caught-fail) in
                                            {3108}let server_hts_14: bitstring = (if v_625 then catch-fail((if v_626 then hmac(@6_backend_h,handshake_secret_14,x_204) else fail-any)) else caught-fail) in
                                            {3109}let v_627: bool = not-caught-fail(server_hts_14) in
                                            {3111}let h_177: bitstring = (if v_627 then zero else caught-fail) in
                                            {3110}let l_181: label = (if v_627 then tls13_key else caught-fail) in
                                            {3112}let x_205: bitstring = (if v_627 then (l_181,h_177) else caught-fail) in
                                            {3113}let client_wkh_14: bitstring = (if v_627 then catch-fail(hmac(@6_backend_h,client_hts_14,x_205)) else caught-fail) in
                                            {3114}let v_628: bool = not-caught-fail(client_wkh_14) in
                                            {3116}let h_178: bitstring = (if v_628 then zero else caught-fail) in
                                            {3115}let l_182: label = (if v_628 then tls13_key else caught-fail) in
                                            {3117}let x_206: bitstring = (if v_628 then (l_182,h_178) else caught-fail) in
                                            {3118}let server_wkh_14: bitstring = (if v_628 then catch-fail(hmac(@6_backend_h,server_hts_14,x_206)) else caught-fail) in
                                            {3119}let v_629: bool = not-caught-fail(server_wkh_14) in
                                            {3121}let h_179: bitstring = (if v_629 then zero else caught-fail) in
                                            {3120}let l_183: label = (if v_629 then tls13_finished else caught-fail) in
                                            {3122}let x_207: bitstring = (if v_629 then (l_183,h_179) else caught-fail) in
                                            {3123}let client_fk_14: bitstring = (if v_629 then catch-fail(hmac(@6_backend_h,client_hts_14,x_207)) else caught-fail) in
                                            {3124}let v_630: bool = not-caught-fail(client_fk_14) in
                                            {3126}let h_180: bitstring = (if v_630 then zero else caught-fail) in
                                            {3125}let l_184: label = (if v_630 then tls13_finished else caught-fail) in
                                            {3127}let x_208: bitstring = (if v_630 then (l_184,h_180) else caught-fail) in
                                            {3128}let server_fk_14: bitstring = (if v_630 then catch-fail(hmac(@6_backend_h,server_hts_14,x_208)) else caught-fail) in
                                            {3129}let v_631: bool = not-caught-fail(server_fk_14) in
                                            {3130}let (master_secret_36: bitstring,chk_21: aead_key,shk_20: aead_key,cfin_21: mac_key,sfin_20: mac_key) = (if v_622 then (if v_623 then (if v_625 then (if v_627 then (if v_628 then (if v_629 then (if v_630 then (if v_631 then (master_secret_35,client_wkh_14,server_wkh_14,client_fk_14,server_fk_14) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {3131}event Client_chk(@6_id_client,chk_21);
                                            {3132}event Client_shk(@6_id_client,shk_20);
                                            {3133}event Client_cfin(@6_id_client,cfin_21);
                                            {3134}event Client_sfin(@6_id_client,sfin_20);
                                            {3135}in(io, enc_ee_msg_13: bitstring);
                                            {3136}let ee_msg_14: msg = aead_dec(@6_backend_a,shk_20,0,zero,enc_ee_msg_13) in
                                            {3137}let EE(ech_ee_13: echExt,extra_ee_13: extraExt) = ee_msg_14 in
                                            {3138}let cur_log2_34: bitstring = (cur_log2_33,ee_msg_14) in
                                            {3139}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_1,sr_24,@6_backend_h,@6_backend_a,c_dom_6,backend_dom,psk_75,safe_psk_19,@6_comp_psk,master_secret_36,chk_21,0,shk_20,1,cfin_21,sfin_20,cur_log2_34)))
                                        )
                                        else
                                            {3140}out(io, illegal_parameter)
                                    )
                                    else
                                        {3141}out(io, illegal_parameter)
                            )
                            else
                                {3143}let psk_76: preSharedKey = NoPsk in
                                {3145}let k_57: bitstring = catch-fail(psk2b(psk_76)) in
                                {3146}let v_632: bool = not-caught-fail(k_57) in
                                {3144}let s_65: bitstring = zero in
                                {3147}let early_secret_48: bitstring = catch-fail((if v_632 then hmac(@6_backend_h,s_65,k_57) else fail-any)) in
                                {3148}let v_633: bool = not-caught-fail(early_secret_48) in
                                {3150}let m_62: bitstring = (if v_633 then zero else caught-fail) in
                                {3151}let h_181: bitstring = (if v_633 then catch-fail(hash(@6_backend_h,m_62)) else caught-fail) in
                                {3152}let v_634: bool = not-caught-fail(h_181) in
                                {3149}let l_185: label = (if v_633 then tls13_ext_res_binder else caught-fail) in
                                {3153}let x_209: bitstring = (if v_634 then (l_185,h_181) else caught-fail) in
                                {3154}let binder_key_32: bitstring = (if v_633 then catch-fail((if v_634 then hmac(@6_backend_h,early_secret_48,x_209) else fail-any)) else caught-fail) in
                                {3155}let v_635: bool = not-caught-fail(binder_key_32) in
                                {3156}let v_636: bitstring = catch-fail((if v_633 then (if v_635 then (early_secret_48,binder_key_32) else fail-any) else fail-any)) in
                                {3157}let v_637: bool = (not-caught-fail(v_636) && success?(1-proj-2-tuple(v_636))) in
                                {3158}let kb_32: mac_key = (if v_637 then 2-proj-2-tuple(v_636) else caught-fail) in
                                {3159}let es_49: bitstring = (if v_637 then 1-proj-2-tuple(v_636) else caught-fail) in
                                {3160}let v_638: bitstring = catch-fail((if v_637 then (empty_psk_ext,(NoPsk,zero,es_49,false)) else fail-any)) in
                                {3161}let v_639: bool = (not-caught-fail(v_638) && success?(1-proj-2-tuple(v_638))) in
                                {3162}let psk_data_19: bitstring = (if v_639 then 2-proj-2-tuple(v_638) else caught-fail) in
                                {3163}let psk_ext_31: preSharedKeyExt = (if v_639 then 1-proj-2-tuple(v_638) else caught-fail) in
                                {3166}new fake_id_3[]: identityPsk;
                                {3167}new fake_binder_3[]: bitstring;
                                {3173}let v_640: hpkeContext = (if v_639 then catch-fail(context) else caught-fail) in
                                {3174}let v_641: bool = (not-caught-fail(v_640) && ((S =nf 1-proj-hpke_context(v_640)) && success?(1-proj-hpke_context(v_640)))) in
                                {3175}let base_nonce_4: bitstring = (if v_641 then 3-proj-hpke_context(v_640) else caught-fail) in
                                {3176}let key_4: aead_key = (if v_641 then 2-proj-hpke_context(v_640) else caught-fail) in
                                {3172}let n_3: nat = (if v_639 then 2 else caught-fail) in
                                {3169}let o_ech_ext_ADD_3: echExt = (if v_639 then ECHClientHelloOuter(ech_h_4,ech_a_4,config_id_2,zero,zero) else caught-fail) in
                                {3168}let o_psk_ext_4: preSharedKeyExt = (if v_639 then (if @6_use_psk then client_psk_ext(fake_id_3,fake_binder_3) else empty_psk_ext) else caught-fail) in
                                {3170}let o_offer_ADD_3: params = (if v_639 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_1,SNI(o_dom_2),o_ech_ext_ADD_3,empty_extra_ext,o_psk_ext_4) else caught-fail) in
                                {3171}let o_client_hello_ADD_3: msg = (if v_639 then CH(o_cr_2,o_offer_ADD_3) else caught-fail) in
                                {3164}let i_offer_3: params = (if v_639 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_1,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_31) else caught-fail) in
                                {3165}let i_client_hello_4: msg = (if v_639 then CH(i_cr_2,i_offer_3) else caught-fail) in
                                {3177}let payload_4: bitstring = (if v_639 then catch-fail((if v_641 then aead_enc(ech_a_4,key_4,(base_nonce_4,n_3),o_client_hello_ADD_3,i_client_hello_4) else fail-any)) else caught-fail) in
                                {3178}let v_642: bool = not-caught-fail(payload_4) in
                                {3179}let o_ech_ext_4: echExt = (if v_642 then ECHClientHelloOuter(ech_h_4,ech_a_4,config_id_2,zero,payload_4) else caught-fail) in
                                {3180}let o_offer_4: params = (if v_642 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_1,SNI(o_dom_2),o_ech_ext_4,empty_extra_ext,o_psk_ext_4) else caught-fail) in
                                {3181}let (o_client_hello'_2: msg,i_client_hello'_2: msg,i_cr'_2: bytes32,i_kex_data'_2: bitstring,psk_data'_11: bitstring) = (if v_639 then (if v_642 then (CH(o_cr_2,o_offer_4),i_client_hello_4,i_cr_2,i_kex_data_2,psk_data_19) else fail-any) else fail-any) in
                                {3182}out(io, o_client_hello'_2);
                                {3183}in(io, server_hello'_11: msg);
                                {3184}let SH(B32(sr24'_2: bytes24,sr8'_2: bytes8),params'_2: params) = server_hello'_11 in
                                {3186}let sh_modified_3: msg = SH(B32(sr24'_2,zero8),params'_2) in
                                {3185}let cur_log_IN1_HRR_IN2_2: bitstring = (cur_log_IN1_HRR,i_client_hello'_2) in
                                {3187}let cur_log_sh_3: bitstring = (cur_log_IN1_HRR_IN2_2,sh_modified_3) in
                                {3188}let transcript_ech_conf_3: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_3)) in
                                {3189}let v_643: bool = not-caught-fail(transcript_ech_conf_3) in
                                {3191}let k_58: bitstring = (if v_643 then catch-fail(b32_2_b(get_random(i_client_hello'_2))) else caught-fail) in
                                {3192}let v_644: bool = not-caught-fail(k_58) in
                                {3190}let s_66: bitstring = (if v_643 then zero else caught-fail) in
                                {3193}let k_59: bitstring = (if v_643 then catch-fail((if v_644 then hmac(@6_backend_h,s_66,k_58) else fail-any)) else caught-fail) in
                                {3194}let v_645: bool = not-caught-fail(k_59) in
                                {3195}let l_186: label = (if v_645 then ech_accept_confirmation else caught-fail) in
                                {3196}let x_210: bitstring = (if v_645 then (l_186,cur_log_sh_3) else caught-fail) in
                                {3197}let sr8_4: bytes8 = (if v_643 then catch-fail(crop_into_bytes8((if v_645 then hmac(@6_backend_h,k_59,x_210) else fail-any))) else caught-fail) in
                                {3198}let v_646: bool = not-caught-fail(sr8_4) in
                                {3199}if (B32(sr24'_2,sr8'_2) = (if v_643 then (if v_646 then B32(sr24'_2,sr8_4) else fail-any) else fail-any)) then
                                {3200}let (x_211: bitstring,g_16: group) = i_kex_data'_2 in
                                {3201}let (psk_offer_14: preSharedKey,id_offer_14: identityPsk,es_offer_14: bitstring,is_safe_offer_14: bool) = psk_data'_11 in
                                {3202}event Client_PSKOffer(@6_id_client,psk_offer_14,id_offer_14,is_safe_offer_14);
                                {3203}event Client_Rand_client(@6_id_client,i_cr'_2);
                                {3204}event Client_DH_client(@6_id_client,dh_pub(g_16,x_211));
                                {3205}event Client_server_domain(@6_id_client,backend_dom);
                                {3206}let SH(sr_25: bytes32,mode_18: params) = server_hello'_11 in
                                {3207}event Client_Rand_server(@6_id_client,sr_25);
                                {3208}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_16,gy_15: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_32: preSharedKeyExt) = mode_18 in
                                (
                                    {3210}event Client_DH_server(@6_id_client,gy_15);
                                    {3211}let v_647: bool = (psk_ext_32 = empty_psk_ext) in
                                    {3212}let psk_77: preSharedKey = (if v_647 then NoPsk else caught-fail) in
                                    {3214}let k_60: bitstring = (if v_647 then catch-fail(psk2b(psk_77)) else caught-fail) in
                                    {3215}let v_648: bool = not-caught-fail(k_60) in
                                    {3213}let s_67: bitstring = (if v_647 then zero else caught-fail) in
                                    {3216}let early_secret_49: bitstring = (if v_647 then catch-fail((if v_648 then hmac(@6_backend_h,s_67,k_60) else fail-any)) else caught-fail) in
                                    {3217}let v_649: bool = not-caught-fail(early_secret_49) in
                                    {3219}let m_63: bitstring = (if v_649 then zero else caught-fail) in
                                    {3220}let h_182: bitstring = (if v_649 then catch-fail(hash(@6_backend_h,m_63)) else caught-fail) in
                                    {3221}let v_650: bool = not-caught-fail(h_182) in
                                    {3218}let l_187: label = (if v_649 then tls13_ext_res_binder else caught-fail) in
                                    {3222}let x_212: bitstring = (if v_650 then (l_187,h_182) else caught-fail) in
                                    {3223}let binder_key_33: bitstring = (if v_649 then catch-fail((if v_650 then hmac(@6_backend_h,early_secret_49,x_212) else fail-any)) else caught-fail) in
                                    {3224}let v_651: bool = not-caught-fail(binder_key_33) in
                                    {3225}let v_652: bitstring = (if v_647 then catch-fail((if v_649 then (if v_651 then (early_secret_49,binder_key_33) else fail-any) else fail-any)) else caught-fail) in
                                    {3226}let v_653: bool = (not-caught-fail(v_652) && success?(1-proj-2-tuple(v_652))) in
                                    {3227}let kb_33: mac_key = (if v_653 then 2-proj-2-tuple(v_652) else caught-fail) in
                                    {3228}let es_50: bitstring = (if v_653 then 1-proj-2-tuple(v_652) else caught-fail) in
                                    {3229}let v_654: bitstring = (if not(v_647) then catch-fail(psk_data'_11) else caught-fail) in
                                    {3230}let v_655: bool = (not-caught-fail(v_654) && success?(1-proj-4-tuple(v_654))) in
                                    {3231}let is_safe_30: bool = (if v_655 then 4-proj-4-tuple(v_654) else caught-fail) in
                                    {3232}let es_51: bitstring = (if v_655 then 3-proj-4-tuple(v_654) else caught-fail) in
                                    {3233}let id_39: identityPsk = (if v_655 then 2-proj-4-tuple(v_654) else caught-fail) in
                                    {3234}let psk_78: preSharedKey = (if v_655 then 1-proj-4-tuple(v_654) else caught-fail) in
                                    {3235}let (psk_79: preSharedKey,early_secret_50: bitstring,valid_14: bool,safe_psk_20: bool) = (if v_647 then (if v_653 then (NoPsk,es_50,true,false) else fail-any) else (if v_655 then (psk_78,es_51,((psk_78 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_32)),is_safe_30) else fail-any)) in
                                    {3236}event Client_PSKChoosen(@6_id_client,psk_79,safe_psk_20);
                                    {3237}if valid_14 then
                                    (
                                        {3240}new s_68[]: seed;
                                        {3238}let gxy_29: element = catch-fail(dh_decap_fun(g_16,gy_15,x_211)) in
                                        {3239}let v_656: bool = not-caught-fail(gxy_29) in
                                        {3241}let gxy_30: element = (if v_656 then gxy_29 else dh_f(s_68)) in
                                        {3242}event Client_DH_gxy(@6_id_client,gxy_30);
                                        {3244}let m_64: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {3245}let v_657: bool = not-caught-fail(m_64) in
                                        {3246}let h_183: bitstring = (if v_657 then catch-fail(hash(@6_backend_h,m_64)) else caught-fail) in
                                        {3247}let v_658: bool = not-caught-fail(h_183) in
                                        {3243}let l_188: label = tls13_derived in
                                        {3248}let x_213: bitstring = (if v_658 then (l_188,h_183) else caught-fail) in
                                        {3249}let extra_34: bitstring = catch-fail((if v_657 then (if v_658 then hmac(@6_backend_h,early_secret_50,x_213) else fail-any) else fail-any)) in
                                        {3250}let v_659: bool = not-caught-fail(extra_34) in
                                        {3251}let handshake_secret_15: bitstring = (if v_659 then hmac(@6_backend_h,extra_34,gxy_30) else fail-any) in
                                        {3253}let m_65: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {3254}let v_660: bool = not-caught-fail(m_65) in
                                        {3255}let h_184: bitstring = (if v_660 then catch-fail(hash(@6_backend_h,m_65)) else caught-fail) in
                                        {3256}let v_661: bool = not-caught-fail(h_184) in
                                        {3252}let l_189: label = tls13_derived in
                                        {3257}let x_214: bitstring = (if v_661 then (l_189,h_184) else caught-fail) in
                                        {3258}let extra_35: bitstring = catch-fail((if v_660 then (if v_661 then hmac(@6_backend_h,handshake_secret_15,x_214) else fail-any) else fail-any)) in
                                        {3259}let v_662: bool = not-caught-fail(extra_35) in
                                        {3260}let k_61: bitstring = (if v_662 then zero else caught-fail) in
                                        {3261}let master_secret_37: bitstring = (if v_662 then catch-fail(hmac(@6_backend_h,handshake_secret_15,k_61)) else caught-fail) in
                                        {3262}let v_663: bool = not-caught-fail(master_secret_37) in
                                        {3209}let cur_log2_35: bitstring = (cur_log_IN1_HRR_IN2_2,server_hello'_11) in
                                        {3264}let h_185: bitstring = (if v_663 then catch-fail(hash(@6_backend_h,cur_log2_35)) else caught-fail) in
                                        {3265}let v_664: bool = not-caught-fail(h_185) in
                                        {3263}let l_190: label = (if v_663 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {3266}let x_215: bitstring = (if v_664 then (l_190,h_185) else caught-fail) in
                                        {3267}let client_hts_15: bitstring = (if v_663 then catch-fail((if v_664 then hmac(@6_backend_h,handshake_secret_15,x_215) else fail-any)) else caught-fail) in
                                        {3268}let v_665: bool = not-caught-fail(client_hts_15) in
                                        {3270}let h_186: bitstring = (if v_665 then catch-fail(hash(@6_backend_h,cur_log2_35)) else caught-fail) in
                                        {3271}let v_666: bool = not-caught-fail(h_186) in
                                        {3269}let l_191: label = (if v_665 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {3272}let x_216: bitstring = (if v_666 then (l_191,h_186) else caught-fail) in
                                        {3273}let server_hts_15: bitstring = (if v_665 then catch-fail((if v_666 then hmac(@6_backend_h,handshake_secret_15,x_216) else fail-any)) else caught-fail) in
                                        {3274}let v_667: bool = not-caught-fail(server_hts_15) in
                                        {3276}let h_187: bitstring = (if v_667 then zero else caught-fail) in
                                        {3275}let l_192: label = (if v_667 then tls13_key else caught-fail) in
                                        {3277}let x_217: bitstring = (if v_667 then (l_192,h_187) else caught-fail) in
                                        {3278}let client_wkh_15: bitstring = (if v_667 then catch-fail(hmac(@6_backend_h,client_hts_15,x_217)) else caught-fail) in
                                        {3279}let v_668: bool = not-caught-fail(client_wkh_15) in
                                        {3281}let h_188: bitstring = (if v_668 then zero else caught-fail) in
                                        {3280}let l_193: label = (if v_668 then tls13_key else caught-fail) in
                                        {3282}let x_218: bitstring = (if v_668 then (l_193,h_188) else caught-fail) in
                                        {3283}let server_wkh_15: bitstring = (if v_668 then catch-fail(hmac(@6_backend_h,server_hts_15,x_218)) else caught-fail) in
                                        {3284}let v_669: bool = not-caught-fail(server_wkh_15) in
                                        {3286}let h_189: bitstring = (if v_669 then zero else caught-fail) in
                                        {3285}let l_194: label = (if v_669 then tls13_finished else caught-fail) in
                                        {3287}let x_219: bitstring = (if v_669 then (l_194,h_189) else caught-fail) in
                                        {3288}let client_fk_15: bitstring = (if v_669 then catch-fail(hmac(@6_backend_h,client_hts_15,x_219)) else caught-fail) in
                                        {3289}let v_670: bool = not-caught-fail(client_fk_15) in
                                        {3291}let h_190: bitstring = (if v_670 then zero else caught-fail) in
                                        {3290}let l_195: label = (if v_670 then tls13_finished else caught-fail) in
                                        {3292}let x_220: bitstring = (if v_670 then (l_195,h_190) else caught-fail) in
                                        {3293}let server_fk_15: bitstring = (if v_670 then catch-fail(hmac(@6_backend_h,server_hts_15,x_220)) else caught-fail) in
                                        {3294}let v_671: bool = not-caught-fail(server_fk_15) in
                                        {3295}let (master_secret_38: bitstring,chk_22: aead_key,shk_21: aead_key,cfin_22: mac_key,sfin_21: mac_key) = (if v_662 then (if v_663 then (if v_665 then (if v_667 then (if v_668 then (if v_669 then (if v_670 then (if v_671 then (master_secret_37,client_wkh_15,server_wkh_15,client_fk_15,server_fk_15) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {3296}event Client_chk(@6_id_client,chk_22);
                                        {3297}event Client_shk(@6_id_client,shk_21);
                                        {3298}event Client_cfin(@6_id_client,cfin_22);
                                        {3299}event Client_sfin(@6_id_client,sfin_21);
                                        {3300}in(io, enc_ee_msg_14: bitstring);
                                        {3301}let ee_msg_15: msg = aead_dec(@6_backend_a,shk_21,0,zero,enc_ee_msg_14) in
                                        {3302}let EE(ech_ee_14: echExt,extra_ee_14: extraExt) = ee_msg_15 in
                                        {3303}let cur_log2_36: bitstring = (cur_log2_35,ee_msg_15) in
                                        {3304}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_2,sr_25,@6_backend_h,@6_backend_a,c_dom_6,backend_dom,psk_79,safe_psk_20,@6_comp_psk,master_secret_38,chk_22,0,shk_21,1,cfin_22,sfin_21,cur_log2_36)))
                                    )
                                    else
                                        {3305}out(io, illegal_parameter)
                                )
                                else
                                    {3306}out(io, illegal_parameter)
                        )
                        else
                            {3308}let ech_config(config_id_3: configId,ech_g_5: group,pkR_5: element,o_dom_3: domain,ech_h_5: hash_alg,ech_a_5: aead_alg) = ech_conf in
                            {3309}new rand24_9[]: bytes24;
                            {3310}new rand8_9[]: bytes8;
                            {3313}new s_69[]: seed;
                            {3314}let gx_19: element = dh_pub(@6_tls_g,dh_k(s_69)) in
                            {3315}let v_672: bitstring = (dh_k(s_69),gx_19) in
                            {3316}let v_673: bool = success?(1-proj-2-tuple(v_672)) in
                            {3317}let gx_20: element = (if v_673 then 2-proj-2-tuple(v_672) else caught-fail) in
                            {3318}let x_221: bitstring = (if v_673 then 1-proj-2-tuple(v_672) else caught-fail) in
                            {3312}let send_key_share_2: bool = true in
                            {3319}let kex_8: kex_alg = (if v_673 then (if send_key_share_2 then DHE_kex(@6_tls_g,gx_20) else DHE_group(@6_tls_g)) else caught-fail) in
                            {3320}let (o_kex_ext_2: keyShareExt,kex_data_7: bitstring) = (if v_673 then (client_kex_ext(kex_8),(x_221,@6_tls_g)) else fail-any) in
                            {3311}let o_cr_3: bytes32 = B32(rand24_9,rand8_9) in
                            {3307}let cur_log_OU1_HRR: bitstring = ((zero,o_client_hello),server_hello_4) in
                            {3321}if @6_use_grease then
                            (
                                {3323}if @6_use_psk then
                                (
                                    {3322}let extra_36: extraExt = empty_extra_ext in
                                    {3324}let (psk_80: preSharedKey,id_40: identityPsk,old_es_6: bitstring,is_safe_31: bool) = psk_data_16 in
                                    (
                                        {3328}let k_62: bitstring = catch-fail(psk2b(psk_80)) in
                                        {3329}let v_674: bool = not-caught-fail(k_62) in
                                        {3327}let s_70: bitstring = zero in
                                        {3330}let early_secret_51: bitstring = catch-fail((if v_674 then hmac(@6_tls_h,s_70,k_62) else fail-any)) in
                                        {3331}let v_675: bool = not-caught-fail(early_secret_51) in
                                        {3333}let m_66: bitstring = (if v_675 then zero else caught-fail) in
                                        {3334}let h_191: bitstring = (if v_675 then catch-fail(hash(@6_tls_h,m_66)) else caught-fail) in
                                        {3335}let v_676: bool = not-caught-fail(h_191) in
                                        {3332}let l_196: label = (if v_675 then tls13_ext_res_binder else caught-fail) in
                                        {3336}let x_222: bitstring = (if v_676 then (l_196,h_191) else caught-fail) in
                                        {3337}let binder_key_34: bitstring = (if v_675 then catch-fail((if v_676 then hmac(@6_tls_h,early_secret_51,x_222) else fail-any)) else caught-fail) in
                                        {3338}let v_677: bool = not-caught-fail(binder_key_34) in
                                        {3339}let v_678: bitstring = catch-fail((if v_675 then (if v_677 then (early_secret_51,binder_key_34) else fail-any) else fail-any)) in
                                        {3340}let v_679: bool = (not-caught-fail(v_678) && success?(1-proj-2-tuple(v_678))) in
                                        {3341}let kb_34: mac_key = (if v_679 then 2-proj-2-tuple(v_678) else caught-fail) in
                                        {3342}let es_52: bitstring = (if v_679 then 1-proj-2-tuple(v_678) else caught-fail) in
                                        {3325}let offer_25: params = nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_2,SNI(o_dom_3),o_ech_ext_1,extra_36,trunc_client_psk_ext(id_40)) in
                                        {3326}let cur_log'_13: bitstring = (cur_log_OU1_HRR,CH(o_cr_3,offer_25)) in
                                        {3343}let binders_12: bitstring = (if v_679 then catch-fail(hmac(@6_tls_h,kb_34,cur_log'_13)) else caught-fail) in
                                        {3344}let v_680: bool = not-caught-fail(binders_12) in
                                        {3345}let v_681: bitstring = catch-fail((if v_679 then (if v_680 then (client_psk_ext(id_40,binders_12),(psk_80,id_40,es_52,is_safe_31)) else fail-any) else fail-any)) in
                                        {3346}let v_682: bool = (not-caught-fail(v_681) && success?(1-proj-2-tuple(v_681))) in
                                        {3347}let psk_data_20: bitstring = (if v_682 then 2-proj-2-tuple(v_681) else caught-fail) in
                                        {3348}let psk_ext_33: preSharedKeyExt = (if v_682 then 1-proj-2-tuple(v_681) else caught-fail) in
                                        {3349}let o_offer_5: params = (if v_682 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_2,SNI(o_dom_3),o_ech_ext_1,empty_extra_ext,psk_ext_33) else caught-fail) in
                                        {3350}let (client_hello'_9: msg,cr'_9: bytes32,kex_data'_9: bitstring,psk_data'_12: bitstring) = (if v_682 then (CH(o_cr_3,o_offer_5),o_cr_3,kex_data_7,psk_data_20) else fail-any) in
                                        {3351}out(io, client_hello'_9);
                                        {3353}in(io, server_hello'_12: msg);
                                        {3354}let SH(sr'_9: bytes32,mode'_9: params) = server_hello'_12 in
                                        (
                                            {3355}if (sr'_9 = B32(HRR24,HRR8)) then
                                                {3356}out(io, unexpected_message)
                                            else
                                                {3357}let (x_223: bitstring,g_17: group) = kex_data'_9 in
                                                {3358}let (psk_offer_15: preSharedKey,id_offer_15: identityPsk,es_offer_15: bitstring,is_safe_offer_15: bool) = psk_data'_12 in
                                                {3359}event Client_PSKOffer(@6_id_client,psk_offer_15,id_offer_15,is_safe_offer_15);
                                                {3360}event Client_Rand_client(@6_id_client,cr'_9);
                                                {3361}event Client_DH_client(@6_id_client,dh_pub(g_17,x_223));
                                                {3362}event Client_server_domain(@6_id_client,o_dom);
                                                {3363}let SH(sr_26: bytes32,mode_19: params) = server_hello'_12 in
                                                {3364}event Client_Rand_server(@6_id_client,sr_26);
                                                {3365}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_17,gy_16: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_34: preSharedKeyExt) = mode_19 in
                                                (
                                                    {3367}event Client_DH_server(@6_id_client,gy_16);
                                                    {3368}let v_683: bool = (psk_ext_34 = empty_psk_ext) in
                                                    {3369}let psk_81: preSharedKey = (if v_683 then NoPsk else caught-fail) in
                                                    {3371}let k_63: bitstring = (if v_683 then catch-fail(psk2b(psk_81)) else caught-fail) in
                                                    {3372}let v_684: bool = not-caught-fail(k_63) in
                                                    {3370}let s_71: bitstring = (if v_683 then zero else caught-fail) in
                                                    {3373}let early_secret_52: bitstring = (if v_683 then catch-fail((if v_684 then hmac(@6_tls_h,s_71,k_63) else fail-any)) else caught-fail) in
                                                    {3374}let v_685: bool = not-caught-fail(early_secret_52) in
                                                    {3376}let m_67: bitstring = (if v_685 then zero else caught-fail) in
                                                    {3377}let h_192: bitstring = (if v_685 then catch-fail(hash(@6_tls_h,m_67)) else caught-fail) in
                                                    {3378}let v_686: bool = not-caught-fail(h_192) in
                                                    {3375}let l_197: label = (if v_685 then tls13_ext_res_binder else caught-fail) in
                                                    {3379}let x_224: bitstring = (if v_686 then (l_197,h_192) else caught-fail) in
                                                    {3380}let binder_key_35: bitstring = (if v_685 then catch-fail((if v_686 then hmac(@6_tls_h,early_secret_52,x_224) else fail-any)) else caught-fail) in
                                                    {3381}let v_687: bool = not-caught-fail(binder_key_35) in
                                                    {3382}let v_688: bitstring = (if v_683 then catch-fail((if v_685 then (if v_687 then (early_secret_52,binder_key_35) else fail-any) else fail-any)) else caught-fail) in
                                                    {3383}let v_689: bool = (not-caught-fail(v_688) && success?(1-proj-2-tuple(v_688))) in
                                                    {3384}let kb_35: mac_key = (if v_689 then 2-proj-2-tuple(v_688) else caught-fail) in
                                                    {3385}let es_53: bitstring = (if v_689 then 1-proj-2-tuple(v_688) else caught-fail) in
                                                    {3386}let v_690: bitstring = (if not(v_683) then catch-fail(psk_data'_12) else caught-fail) in
                                                    {3387}let v_691: bool = (not-caught-fail(v_690) && success?(1-proj-4-tuple(v_690))) in
                                                    {3388}let is_safe_32: bool = (if v_691 then 4-proj-4-tuple(v_690) else caught-fail) in
                                                    {3389}let es_54: bitstring = (if v_691 then 3-proj-4-tuple(v_690) else caught-fail) in
                                                    {3390}let id_41: identityPsk = (if v_691 then 2-proj-4-tuple(v_690) else caught-fail) in
                                                    {3391}let psk_82: preSharedKey = (if v_691 then 1-proj-4-tuple(v_690) else caught-fail) in
                                                    {3392}let (psk_83: preSharedKey,early_secret_53: bitstring,valid_15: bool,safe_psk_21: bool) = (if v_683 then (if v_689 then (NoPsk,es_53,true,false) else fail-any) else (if v_691 then (psk_82,es_54,((psk_82 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_34)),is_safe_32) else fail-any)) in
                                                    {3393}event Client_PSKChoosen(@6_id_client,psk_83,safe_psk_21);
                                                    {3394}if valid_15 then
                                                    (
                                                        {3397}new s_72[]: seed;
                                                        {3395}let gxy_31: element = catch-fail(dh_decap_fun(g_17,gy_16,x_223)) in
                                                        {3396}let v_692: bool = not-caught-fail(gxy_31) in
                                                        {3398}let gxy_32: element = (if v_692 then gxy_31 else dh_f(s_72)) in
                                                        {3399}event Client_DH_gxy(@6_id_client,gxy_32);
                                                        {3401}let m_68: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {3402}let v_693: bool = not-caught-fail(m_68) in
                                                        {3403}let h_193: bitstring = (if v_693 then catch-fail(hash(@6_tls_h,m_68)) else caught-fail) in
                                                        {3404}let v_694: bool = not-caught-fail(h_193) in
                                                        {3400}let l_198: label = tls13_derived in
                                                        {3405}let x_225: bitstring = (if v_694 then (l_198,h_193) else caught-fail) in
                                                        {3406}let extra_37: bitstring = catch-fail((if v_693 then (if v_694 then hmac(@6_tls_h,early_secret_53,x_225) else fail-any) else fail-any)) in
                                                        {3407}let v_695: bool = not-caught-fail(extra_37) in
                                                        {3408}let handshake_secret_16: bitstring = (if v_695 then hmac(@6_tls_h,extra_37,gxy_32) else fail-any) in
                                                        {3410}let m_69: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {3411}let v_696: bool = not-caught-fail(m_69) in
                                                        {3412}let h_194: bitstring = (if v_696 then catch-fail(hash(@6_tls_h,m_69)) else caught-fail) in
                                                        {3413}let v_697: bool = not-caught-fail(h_194) in
                                                        {3409}let l_199: label = tls13_derived in
                                                        {3414}let x_226: bitstring = (if v_697 then (l_199,h_194) else caught-fail) in
                                                        {3415}let extra_38: bitstring = catch-fail((if v_696 then (if v_697 then hmac(@6_tls_h,handshake_secret_16,x_226) else fail-any) else fail-any)) in
                                                        {3416}let v_698: bool = not-caught-fail(extra_38) in
                                                        {3417}let k_64: bitstring = (if v_698 then zero else caught-fail) in
                                                        {3418}let master_secret_39: bitstring = (if v_698 then catch-fail(hmac(@6_tls_h,handshake_secret_16,k_64)) else caught-fail) in
                                                        {3419}let v_699: bool = not-caught-fail(master_secret_39) in
                                                        {3352}let cur_log_OU1_HRR_OU2: bitstring = (cur_log_OU1_HRR,client_hello'_9) in
                                                        {3366}let cur_log2_37: bitstring = (cur_log_OU1_HRR_OU2,server_hello'_12) in
                                                        {3421}let h_195: bitstring = (if v_699 then catch-fail(hash(@6_tls_h,cur_log2_37)) else caught-fail) in
                                                        {3422}let v_700: bool = not-caught-fail(h_195) in
                                                        {3420}let l_200: label = (if v_699 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {3423}let x_227: bitstring = (if v_700 then (l_200,h_195) else caught-fail) in
                                                        {3424}let client_hts_16: bitstring = (if v_699 then catch-fail((if v_700 then hmac(@6_tls_h,handshake_secret_16,x_227) else fail-any)) else caught-fail) in
                                                        {3425}let v_701: bool = not-caught-fail(client_hts_16) in
                                                        {3427}let h_196: bitstring = (if v_701 then catch-fail(hash(@6_tls_h,cur_log2_37)) else caught-fail) in
                                                        {3428}let v_702: bool = not-caught-fail(h_196) in
                                                        {3426}let l_201: label = (if v_701 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {3429}let x_228: bitstring = (if v_702 then (l_201,h_196) else caught-fail) in
                                                        {3430}let server_hts_16: bitstring = (if v_701 then catch-fail((if v_702 then hmac(@6_tls_h,handshake_secret_16,x_228) else fail-any)) else caught-fail) in
                                                        {3431}let v_703: bool = not-caught-fail(server_hts_16) in
                                                        {3433}let h_197: bitstring = (if v_703 then zero else caught-fail) in
                                                        {3432}let l_202: label = (if v_703 then tls13_key else caught-fail) in
                                                        {3434}let x_229: bitstring = (if v_703 then (l_202,h_197) else caught-fail) in
                                                        {3435}let client_wkh_16: bitstring = (if v_703 then catch-fail(hmac(@6_tls_h,client_hts_16,x_229)) else caught-fail) in
                                                        {3436}let v_704: bool = not-caught-fail(client_wkh_16) in
                                                        {3438}let h_198: bitstring = (if v_704 then zero else caught-fail) in
                                                        {3437}let l_203: label = (if v_704 then tls13_key else caught-fail) in
                                                        {3439}let x_230: bitstring = (if v_704 then (l_203,h_198) else caught-fail) in
                                                        {3440}let server_wkh_16: bitstring = (if v_704 then catch-fail(hmac(@6_tls_h,server_hts_16,x_230)) else caught-fail) in
                                                        {3441}let v_705: bool = not-caught-fail(server_wkh_16) in
                                                        {3443}let h_199: bitstring = (if v_705 then zero else caught-fail) in
                                                        {3442}let l_204: label = (if v_705 then tls13_finished else caught-fail) in
                                                        {3444}let x_231: bitstring = (if v_705 then (l_204,h_199) else caught-fail) in
                                                        {3445}let client_fk_16: bitstring = (if v_705 then catch-fail(hmac(@6_tls_h,client_hts_16,x_231)) else caught-fail) in
                                                        {3446}let v_706: bool = not-caught-fail(client_fk_16) in
                                                        {3448}let h_200: bitstring = (if v_706 then zero else caught-fail) in
                                                        {3447}let l_205: label = (if v_706 then tls13_finished else caught-fail) in
                                                        {3449}let x_232: bitstring = (if v_706 then (l_205,h_200) else caught-fail) in
                                                        {3450}let server_fk_16: bitstring = (if v_706 then catch-fail(hmac(@6_tls_h,server_hts_16,x_232)) else caught-fail) in
                                                        {3451}let v_707: bool = not-caught-fail(server_fk_16) in
                                                        {3452}let (master_secret_40: bitstring,chk_23: aead_key,shk_22: aead_key,cfin_23: mac_key,sfin_22: mac_key) = (if v_698 then (if v_699 then (if v_701 then (if v_703 then (if v_704 then (if v_705 then (if v_706 then (if v_707 then (master_secret_39,client_wkh_16,server_wkh_16,client_fk_16,server_fk_16) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {3453}event Client_chk(@6_id_client,chk_23);
                                                        {3454}event Client_shk(@6_id_client,shk_22);
                                                        {3455}event Client_cfin(@6_id_client,cfin_23);
                                                        {3456}event Client_sfin(@6_id_client,sfin_22);
                                                        {3457}in(io, enc_ee_msg_15: bitstring);
                                                        {3458}let ee_msg_16: msg = aead_dec(@6_tls_a,shk_22,0,zero,enc_ee_msg_15) in
                                                        {3459}let EE(ech_ee_15: echExt,extra_ee_15: extraExt) = ee_msg_16 in
                                                        {3460}let cur_log2_38: bitstring = (cur_log2_37,ee_msg_16) in
                                                        {3461}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_9,sr_26,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_83,safe_psk_21,@6_comp_psk,master_secret_40,chk_23,0,shk_22,1,cfin_23,sfin_22,cur_log2_38)))
                                                    )
                                                    else
                                                        {3462}out(io, illegal_parameter)
                                                )
                                                else
                                                    {3463}out(io, illegal_parameter)
                                        )
                                        else
                                            {3464}out(io, unexpected_message)
                                    )
                                    else
                                        {3614}get pre_shared_keys(c_dom'_7: domain,=o_dom_3,=@6_tls_h,id_42: identityPsk,psk_84: preSharedKey,idP_9: idProc,is_safe_33: bool) in
                                        {3465}event Selected_one_time_used_psk(@6_id_client,psk_84,is_safe_33);
                                        {3466}event Selected_psk(c_dom_6,c_dom'_7,idP_9,is_safe_33);
                                        {3467}event Selected_psk_no_missmatch(@6_id_client,o_dom_3,@6_tls_h,psk_84,id_42);
                                        {3468}event Selected_psk_with_ID(c_dom_6,c_dom'_7,id_42,idP_9,is_safe_33);
                                        {3469}let v_708: bitstring = (id_42,psk_84,is_safe_33) in
                                        {3470}let v_709: bool = success?(1-proj-3-tuple(v_708)) in
                                        {3471}let is_safe_34: bool = (if v_709 then 3-proj-3-tuple(v_708) else caught-fail) in
                                        {3472}let psk_85: preSharedKey = (if v_709 then 2-proj-3-tuple(v_708) else caught-fail) in
                                        {3473}let id_43: identityPsk = (if v_709 then 1-proj-3-tuple(v_708) else caught-fail) in
                                        {3477}let k_65: bitstring = (if v_709 then catch-fail(psk2b(psk_85)) else caught-fail) in
                                        {3478}let v_710: bool = not-caught-fail(k_65) in
                                        {3476}let s_73: bitstring = (if v_709 then zero else caught-fail) in
                                        {3479}let early_secret_54: bitstring = (if v_709 then catch-fail((if v_710 then hmac(@6_tls_h,s_73,k_65) else fail-any)) else caught-fail) in
                                        {3480}let v_711: bool = not-caught-fail(early_secret_54) in
                                        {3482}let m_70: bitstring = (if v_711 then zero else caught-fail) in
                                        {3483}let h_201: bitstring = (if v_711 then catch-fail(hash(@6_tls_h,m_70)) else caught-fail) in
                                        {3484}let v_712: bool = not-caught-fail(h_201) in
                                        {3481}let l_206: label = (if v_711 then tls13_ext_res_binder else caught-fail) in
                                        {3485}let x_233: bitstring = (if v_712 then (l_206,h_201) else caught-fail) in
                                        {3486}let binder_key_36: bitstring = (if v_711 then catch-fail((if v_712 then hmac(@6_tls_h,early_secret_54,x_233) else fail-any)) else caught-fail) in
                                        {3487}let v_713: bool = not-caught-fail(binder_key_36) in
                                        {3488}let v_714: bitstring = (if v_709 then catch-fail((if v_711 then (if v_713 then (early_secret_54,binder_key_36) else fail-any) else fail-any)) else caught-fail) in
                                        {3489}let v_715: bool = (not-caught-fail(v_714) && success?(1-proj-2-tuple(v_714))) in
                                        {3490}let kb_36: mac_key = (if v_715 then 2-proj-2-tuple(v_714) else caught-fail) in
                                        {3491}let es_55: bitstring = (if v_715 then 1-proj-2-tuple(v_714) else caught-fail) in
                                        {3474}let offer_26: params = (if v_709 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_2,SNI(o_dom_3),o_ech_ext_1,extra_36,trunc_client_psk_ext(id_43)) else caught-fail) in
                                        {3475}let cur_log'_14: bitstring = (if v_709 then (cur_log_OU1_HRR,CH(o_cr_3,offer_26)) else caught-fail) in
                                        {3492}let binders_13: bitstring = (if v_715 then catch-fail(hmac(@6_tls_h,kb_36,cur_log'_14)) else caught-fail) in
                                        {3493}let v_716: bool = not-caught-fail(binders_13) in
                                        {3494}let v_717: bitstring = catch-fail((if v_709 then (if v_715 then (if v_716 then (client_psk_ext(id_43,binders_13),(psk_85,id_43,es_55,is_safe_34)) else fail-any) else fail-any) else fail-any)) in
                                        {3495}let v_718: bool = (not-caught-fail(v_717) && success?(1-proj-2-tuple(v_717))) in
                                        {3496}let psk_data_21: bitstring = (if v_718 then 2-proj-2-tuple(v_717) else caught-fail) in
                                        {3497}let psk_ext_35: preSharedKeyExt = (if v_718 then 1-proj-2-tuple(v_717) else caught-fail) in
                                        {3498}let o_offer_6: params = (if v_718 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_2,SNI(o_dom_3),o_ech_ext_1,empty_extra_ext,psk_ext_35) else caught-fail) in
                                        {3499}let (client_hello'_10: msg,cr'_10: bytes32,kex_data'_10: bitstring,psk_data'_13: bitstring) = (if v_718 then (CH(o_cr_3,o_offer_6),o_cr_3,kex_data_7,psk_data_21) else fail-any) in
                                        {3500}out(io, client_hello'_10);
                                        {3502}in(io, server_hello'_13: msg);
                                        {3503}let SH(sr'_10: bytes32,mode'_10: params) = server_hello'_13 in
                                        (
                                            {3504}if (sr'_10 = B32(HRR24,HRR8)) then
                                                {3505}out(io, unexpected_message)
                                            else
                                                {3506}let (x_234: bitstring,g_18: group) = kex_data'_10 in
                                                {3507}let (psk_offer_16: preSharedKey,id_offer_16: identityPsk,es_offer_16: bitstring,is_safe_offer_16: bool) = psk_data'_13 in
                                                {3508}event Client_PSKOffer(@6_id_client,psk_offer_16,id_offer_16,is_safe_offer_16);
                                                {3509}event Client_Rand_client(@6_id_client,cr'_10);
                                                {3510}event Client_DH_client(@6_id_client,dh_pub(g_18,x_234));
                                                {3511}event Client_server_domain(@6_id_client,o_dom);
                                                {3512}let SH(sr_27: bytes32,mode_20: params) = server_hello'_13 in
                                                {3513}event Client_Rand_server(@6_id_client,sr_27);
                                                {3514}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_18,gy_17: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_36: preSharedKeyExt) = mode_20 in
                                                (
                                                    {3516}event Client_DH_server(@6_id_client,gy_17);
                                                    {3517}let v_719: bool = (psk_ext_36 = empty_psk_ext) in
                                                    {3518}let psk_86: preSharedKey = (if v_719 then NoPsk else caught-fail) in
                                                    {3520}let k_66: bitstring = (if v_719 then catch-fail(psk2b(psk_86)) else caught-fail) in
                                                    {3521}let v_720: bool = not-caught-fail(k_66) in
                                                    {3519}let s_74: bitstring = (if v_719 then zero else caught-fail) in
                                                    {3522}let early_secret_55: bitstring = (if v_719 then catch-fail((if v_720 then hmac(@6_tls_h,s_74,k_66) else fail-any)) else caught-fail) in
                                                    {3523}let v_721: bool = not-caught-fail(early_secret_55) in
                                                    {3525}let m_71: bitstring = (if v_721 then zero else caught-fail) in
                                                    {3526}let h_202: bitstring = (if v_721 then catch-fail(hash(@6_tls_h,m_71)) else caught-fail) in
                                                    {3527}let v_722: bool = not-caught-fail(h_202) in
                                                    {3524}let l_207: label = (if v_721 then tls13_ext_res_binder else caught-fail) in
                                                    {3528}let x_235: bitstring = (if v_722 then (l_207,h_202) else caught-fail) in
                                                    {3529}let binder_key_37: bitstring = (if v_721 then catch-fail((if v_722 then hmac(@6_tls_h,early_secret_55,x_235) else fail-any)) else caught-fail) in
                                                    {3530}let v_723: bool = not-caught-fail(binder_key_37) in
                                                    {3531}let v_724: bitstring = (if v_719 then catch-fail((if v_721 then (if v_723 then (early_secret_55,binder_key_37) else fail-any) else fail-any)) else caught-fail) in
                                                    {3532}let v_725: bool = (not-caught-fail(v_724) && success?(1-proj-2-tuple(v_724))) in
                                                    {3533}let kb_37: mac_key = (if v_725 then 2-proj-2-tuple(v_724) else caught-fail) in
                                                    {3534}let es_56: bitstring = (if v_725 then 1-proj-2-tuple(v_724) else caught-fail) in
                                                    {3535}let v_726: bitstring = (if not(v_719) then catch-fail(psk_data'_13) else caught-fail) in
                                                    {3536}let v_727: bool = (not-caught-fail(v_726) && success?(1-proj-4-tuple(v_726))) in
                                                    {3537}let is_safe_35: bool = (if v_727 then 4-proj-4-tuple(v_726) else caught-fail) in
                                                    {3538}let es_57: bitstring = (if v_727 then 3-proj-4-tuple(v_726) else caught-fail) in
                                                    {3539}let id_44: identityPsk = (if v_727 then 2-proj-4-tuple(v_726) else caught-fail) in
                                                    {3540}let psk_87: preSharedKey = (if v_727 then 1-proj-4-tuple(v_726) else caught-fail) in
                                                    {3541}let (psk_88: preSharedKey,early_secret_56: bitstring,valid_16: bool,safe_psk_22: bool) = (if v_719 then (if v_725 then (NoPsk,es_56,true,false) else fail-any) else (if v_727 then (psk_87,es_57,((psk_87 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_36)),is_safe_35) else fail-any)) in
                                                    {3542}event Client_PSKChoosen(@6_id_client,psk_88,safe_psk_22);
                                                    {3543}if valid_16 then
                                                    (
                                                        {3546}new s_75[]: seed;
                                                        {3544}let gxy_33: element = catch-fail(dh_decap_fun(g_18,gy_17,x_234)) in
                                                        {3545}let v_728: bool = not-caught-fail(gxy_33) in
                                                        {3547}let gxy_34: element = (if v_728 then gxy_33 else dh_f(s_75)) in
                                                        {3548}event Client_DH_gxy(@6_id_client,gxy_34);
                                                        {3550}let m_72: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {3551}let v_729: bool = not-caught-fail(m_72) in
                                                        {3552}let h_203: bitstring = (if v_729 then catch-fail(hash(@6_tls_h,m_72)) else caught-fail) in
                                                        {3553}let v_730: bool = not-caught-fail(h_203) in
                                                        {3549}let l_208: label = tls13_derived in
                                                        {3554}let x_236: bitstring = (if v_730 then (l_208,h_203) else caught-fail) in
                                                        {3555}let extra_39: bitstring = catch-fail((if v_729 then (if v_730 then hmac(@6_tls_h,early_secret_56,x_236) else fail-any) else fail-any)) in
                                                        {3556}let v_731: bool = not-caught-fail(extra_39) in
                                                        {3557}let handshake_secret_17: bitstring = (if v_731 then hmac(@6_tls_h,extra_39,gxy_34) else fail-any) in
                                                        {3559}let m_73: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {3560}let v_732: bool = not-caught-fail(m_73) in
                                                        {3561}let h_204: bitstring = (if v_732 then catch-fail(hash(@6_tls_h,m_73)) else caught-fail) in
                                                        {3562}let v_733: bool = not-caught-fail(h_204) in
                                                        {3558}let l_209: label = tls13_derived in
                                                        {3563}let x_237: bitstring = (if v_733 then (l_209,h_204) else caught-fail) in
                                                        {3564}let extra_40: bitstring = catch-fail((if v_732 then (if v_733 then hmac(@6_tls_h,handshake_secret_17,x_237) else fail-any) else fail-any)) in
                                                        {3565}let v_734: bool = not-caught-fail(extra_40) in
                                                        {3566}let k_67: bitstring = (if v_734 then zero else caught-fail) in
                                                        {3567}let master_secret_41: bitstring = (if v_734 then catch-fail(hmac(@6_tls_h,handshake_secret_17,k_67)) else caught-fail) in
                                                        {3568}let v_735: bool = not-caught-fail(master_secret_41) in
                                                        {3501}let cur_log_OU1_HRR_OU2_1: bitstring = (cur_log_OU1_HRR,client_hello'_10) in
                                                        {3515}let cur_log2_39: bitstring = (cur_log_OU1_HRR_OU2_1,server_hello'_13) in
                                                        {3570}let h_205: bitstring = (if v_735 then catch-fail(hash(@6_tls_h,cur_log2_39)) else caught-fail) in
                                                        {3571}let v_736: bool = not-caught-fail(h_205) in
                                                        {3569}let l_210: label = (if v_735 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {3572}let x_238: bitstring = (if v_736 then (l_210,h_205) else caught-fail) in
                                                        {3573}let client_hts_17: bitstring = (if v_735 then catch-fail((if v_736 then hmac(@6_tls_h,handshake_secret_17,x_238) else fail-any)) else caught-fail) in
                                                        {3574}let v_737: bool = not-caught-fail(client_hts_17) in
                                                        {3576}let h_206: bitstring = (if v_737 then catch-fail(hash(@6_tls_h,cur_log2_39)) else caught-fail) in
                                                        {3577}let v_738: bool = not-caught-fail(h_206) in
                                                        {3575}let l_211: label = (if v_737 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {3578}let x_239: bitstring = (if v_738 then (l_211,h_206) else caught-fail) in
                                                        {3579}let server_hts_17: bitstring = (if v_737 then catch-fail((if v_738 then hmac(@6_tls_h,handshake_secret_17,x_239) else fail-any)) else caught-fail) in
                                                        {3580}let v_739: bool = not-caught-fail(server_hts_17) in
                                                        {3582}let h_207: bitstring = (if v_739 then zero else caught-fail) in
                                                        {3581}let l_212: label = (if v_739 then tls13_key else caught-fail) in
                                                        {3583}let x_240: bitstring = (if v_739 then (l_212,h_207) else caught-fail) in
                                                        {3584}let client_wkh_17: bitstring = (if v_739 then catch-fail(hmac(@6_tls_h,client_hts_17,x_240)) else caught-fail) in
                                                        {3585}let v_740: bool = not-caught-fail(client_wkh_17) in
                                                        {3587}let h_208: bitstring = (if v_740 then zero else caught-fail) in
                                                        {3586}let l_213: label = (if v_740 then tls13_key else caught-fail) in
                                                        {3588}let x_241: bitstring = (if v_740 then (l_213,h_208) else caught-fail) in
                                                        {3589}let server_wkh_17: bitstring = (if v_740 then catch-fail(hmac(@6_tls_h,server_hts_17,x_241)) else caught-fail) in
                                                        {3590}let v_741: bool = not-caught-fail(server_wkh_17) in
                                                        {3592}let h_209: bitstring = (if v_741 then zero else caught-fail) in
                                                        {3591}let l_214: label = (if v_741 then tls13_finished else caught-fail) in
                                                        {3593}let x_242: bitstring = (if v_741 then (l_214,h_209) else caught-fail) in
                                                        {3594}let client_fk_17: bitstring = (if v_741 then catch-fail(hmac(@6_tls_h,client_hts_17,x_242)) else caught-fail) in
                                                        {3595}let v_742: bool = not-caught-fail(client_fk_17) in
                                                        {3597}let h_210: bitstring = (if v_742 then zero else caught-fail) in
                                                        {3596}let l_215: label = (if v_742 then tls13_finished else caught-fail) in
                                                        {3598}let x_243: bitstring = (if v_742 then (l_215,h_210) else caught-fail) in
                                                        {3599}let server_fk_17: bitstring = (if v_742 then catch-fail(hmac(@6_tls_h,server_hts_17,x_243)) else caught-fail) in
                                                        {3600}let v_743: bool = not-caught-fail(server_fk_17) in
                                                        {3601}let (master_secret_42: bitstring,chk_24: aead_key,shk_23: aead_key,cfin_24: mac_key,sfin_23: mac_key) = (if v_734 then (if v_735 then (if v_737 then (if v_739 then (if v_740 then (if v_741 then (if v_742 then (if v_743 then (master_secret_41,client_wkh_17,server_wkh_17,client_fk_17,server_fk_17) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {3602}event Client_chk(@6_id_client,chk_24);
                                                        {3603}event Client_shk(@6_id_client,shk_23);
                                                        {3604}event Client_cfin(@6_id_client,cfin_24);
                                                        {3605}event Client_sfin(@6_id_client,sfin_23);
                                                        {3606}in(io, enc_ee_msg_16: bitstring);
                                                        {3607}let ee_msg_17: msg = aead_dec(@6_tls_a,shk_23,0,zero,enc_ee_msg_16) in
                                                        {3608}let EE(ech_ee_16: echExt,extra_ee_16: extraExt) = ee_msg_17 in
                                                        {3609}let cur_log2_40: bitstring = (cur_log2_39,ee_msg_17) in
                                                        {3610}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_10,sr_27,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_88,safe_psk_22,@6_comp_psk,master_secret_42,chk_24,0,shk_23,1,cfin_24,sfin_23,cur_log2_40)))
                                                    )
                                                    else
                                                        {3611}out(io, illegal_parameter)
                                                )
                                                else
                                                    {3612}out(io, illegal_parameter)
                                        )
                                        else
                                            {3613}out(io, unexpected_message)
                                )
                                else
                                    {3615}let psk_89: preSharedKey = NoPsk in
                                    {3617}let k_68: bitstring = catch-fail(psk2b(psk_89)) in
                                    {3618}let v_744: bool = not-caught-fail(k_68) in
                                    {3616}let s_76: bitstring = zero in
                                    {3619}let early_secret_57: bitstring = catch-fail((if v_744 then hmac(@6_tls_h,s_76,k_68) else fail-any)) in
                                    {3620}let v_745: bool = not-caught-fail(early_secret_57) in
                                    {3622}let m_74: bitstring = (if v_745 then zero else caught-fail) in
                                    {3623}let h_211: bitstring = (if v_745 then catch-fail(hash(@6_tls_h,m_74)) else caught-fail) in
                                    {3624}let v_746: bool = not-caught-fail(h_211) in
                                    {3621}let l_216: label = (if v_745 then tls13_ext_res_binder else caught-fail) in
                                    {3625}let x_244: bitstring = (if v_746 then (l_216,h_211) else caught-fail) in
                                    {3626}let binder_key_38: bitstring = (if v_745 then catch-fail((if v_746 then hmac(@6_tls_h,early_secret_57,x_244) else fail-any)) else caught-fail) in
                                    {3627}let v_747: bool = not-caught-fail(binder_key_38) in
                                    {3628}let v_748: bitstring = catch-fail((if v_745 then (if v_747 then (early_secret_57,binder_key_38) else fail-any) else fail-any)) in
                                    {3629}let v_749: bool = (not-caught-fail(v_748) && success?(1-proj-2-tuple(v_748))) in
                                    {3630}let kb_38: mac_key = (if v_749 then 2-proj-2-tuple(v_748) else caught-fail) in
                                    {3631}let es_58: bitstring = (if v_749 then 1-proj-2-tuple(v_748) else caught-fail) in
                                    {3632}let v_750: bitstring = catch-fail((if v_749 then (empty_psk_ext,(NoPsk,zero,es_58,false)) else fail-any)) in
                                    {3633}let v_751: bool = (not-caught-fail(v_750) && success?(1-proj-2-tuple(v_750))) in
                                    {3634}let psk_data_22: bitstring = (if v_751 then 2-proj-2-tuple(v_750) else caught-fail) in
                                    {3635}let psk_ext_37: preSharedKeyExt = (if v_751 then 1-proj-2-tuple(v_750) else caught-fail) in
                                    {3636}let o_offer_7: params = (if v_751 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_2,SNI(o_dom_3),o_ech_ext_1,empty_extra_ext,psk_ext_37) else caught-fail) in
                                    {3637}let (client_hello'_11: msg,cr'_11: bytes32,kex_data'_11: bitstring,psk_data'_14: bitstring) = (if v_751 then (CH(o_cr_3,o_offer_7),o_cr_3,kex_data_7,psk_data_22) else fail-any) in
                                    {3638}out(io, client_hello'_11);
                                    {3640}in(io, server_hello'_14: msg);
                                    {3641}let SH(sr'_11: bytes32,mode'_11: params) = server_hello'_14 in
                                    (
                                        {3642}if (sr'_11 = B32(HRR24,HRR8)) then
                                            {3643}out(io, unexpected_message)
                                        else
                                            {3644}let (x_245: bitstring,g_19: group) = kex_data'_11 in
                                            {3645}let (psk_offer_17: preSharedKey,id_offer_17: identityPsk,es_offer_17: bitstring,is_safe_offer_17: bool) = psk_data'_14 in
                                            {3646}event Client_PSKOffer(@6_id_client,psk_offer_17,id_offer_17,is_safe_offer_17);
                                            {3647}event Client_Rand_client(@6_id_client,cr'_11);
                                            {3648}event Client_DH_client(@6_id_client,dh_pub(g_19,x_245));
                                            {3649}event Client_server_domain(@6_id_client,o_dom);
                                            {3650}let SH(sr_28: bytes32,mode_21: params) = server_hello'_14 in
                                            {3651}event Client_Rand_server(@6_id_client,sr_28);
                                            {3652}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_19,gy_18: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_38: preSharedKeyExt) = mode_21 in
                                            (
                                                {3654}event Client_DH_server(@6_id_client,gy_18);
                                                {3655}let v_752: bool = (psk_ext_38 = empty_psk_ext) in
                                                {3656}let psk_90: preSharedKey = (if v_752 then NoPsk else caught-fail) in
                                                {3658}let k_69: bitstring = (if v_752 then catch-fail(psk2b(psk_90)) else caught-fail) in
                                                {3659}let v_753: bool = not-caught-fail(k_69) in
                                                {3657}let s_77: bitstring = (if v_752 then zero else caught-fail) in
                                                {3660}let early_secret_58: bitstring = (if v_752 then catch-fail((if v_753 then hmac(@6_tls_h,s_77,k_69) else fail-any)) else caught-fail) in
                                                {3661}let v_754: bool = not-caught-fail(early_secret_58) in
                                                {3663}let m_75: bitstring = (if v_754 then zero else caught-fail) in
                                                {3664}let h_212: bitstring = (if v_754 then catch-fail(hash(@6_tls_h,m_75)) else caught-fail) in
                                                {3665}let v_755: bool = not-caught-fail(h_212) in
                                                {3662}let l_217: label = (if v_754 then tls13_ext_res_binder else caught-fail) in
                                                {3666}let x_246: bitstring = (if v_755 then (l_217,h_212) else caught-fail) in
                                                {3667}let binder_key_39: bitstring = (if v_754 then catch-fail((if v_755 then hmac(@6_tls_h,early_secret_58,x_246) else fail-any)) else caught-fail) in
                                                {3668}let v_756: bool = not-caught-fail(binder_key_39) in
                                                {3669}let v_757: bitstring = (if v_752 then catch-fail((if v_754 then (if v_756 then (early_secret_58,binder_key_39) else fail-any) else fail-any)) else caught-fail) in
                                                {3670}let v_758: bool = (not-caught-fail(v_757) && success?(1-proj-2-tuple(v_757))) in
                                                {3671}let kb_39: mac_key = (if v_758 then 2-proj-2-tuple(v_757) else caught-fail) in
                                                {3672}let es_59: bitstring = (if v_758 then 1-proj-2-tuple(v_757) else caught-fail) in
                                                {3673}let v_759: bitstring = (if not(v_752) then catch-fail(psk_data'_14) else caught-fail) in
                                                {3674}let v_760: bool = (not-caught-fail(v_759) && success?(1-proj-4-tuple(v_759))) in
                                                {3675}let is_safe_36: bool = (if v_760 then 4-proj-4-tuple(v_759) else caught-fail) in
                                                {3676}let es_60: bitstring = (if v_760 then 3-proj-4-tuple(v_759) else caught-fail) in
                                                {3677}let id_45: identityPsk = (if v_760 then 2-proj-4-tuple(v_759) else caught-fail) in
                                                {3678}let psk_91: preSharedKey = (if v_760 then 1-proj-4-tuple(v_759) else caught-fail) in
                                                {3679}let (psk_92: preSharedKey,early_secret_59: bitstring,valid_17: bool,safe_psk_23: bool) = (if v_752 then (if v_758 then (NoPsk,es_59,true,false) else fail-any) else (if v_760 then (psk_91,es_60,((psk_91 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_38)),is_safe_36) else fail-any)) in
                                                {3680}event Client_PSKChoosen(@6_id_client,psk_92,safe_psk_23);
                                                {3681}if valid_17 then
                                                (
                                                    {3684}new s_78[]: seed;
                                                    {3682}let gxy_35: element = catch-fail(dh_decap_fun(g_19,gy_18,x_245)) in
                                                    {3683}let v_761: bool = not-caught-fail(gxy_35) in
                                                    {3685}let gxy_36: element = (if v_761 then gxy_35 else dh_f(s_78)) in
                                                    {3686}event Client_DH_gxy(@6_id_client,gxy_36);
                                                    {3688}let m_76: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {3689}let v_762: bool = not-caught-fail(m_76) in
                                                    {3690}let h_213: bitstring = (if v_762 then catch-fail(hash(@6_tls_h,m_76)) else caught-fail) in
                                                    {3691}let v_763: bool = not-caught-fail(h_213) in
                                                    {3687}let l_218: label = tls13_derived in
                                                    {3692}let x_247: bitstring = (if v_763 then (l_218,h_213) else caught-fail) in
                                                    {3693}let extra_41: bitstring = catch-fail((if v_762 then (if v_763 then hmac(@6_tls_h,early_secret_59,x_247) else fail-any) else fail-any)) in
                                                    {3694}let v_764: bool = not-caught-fail(extra_41) in
                                                    {3695}let handshake_secret_18: bitstring = (if v_764 then hmac(@6_tls_h,extra_41,gxy_36) else fail-any) in
                                                    {3697}let m_77: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {3698}let v_765: bool = not-caught-fail(m_77) in
                                                    {3699}let h_214: bitstring = (if v_765 then catch-fail(hash(@6_tls_h,m_77)) else caught-fail) in
                                                    {3700}let v_766: bool = not-caught-fail(h_214) in
                                                    {3696}let l_219: label = tls13_derived in
                                                    {3701}let x_248: bitstring = (if v_766 then (l_219,h_214) else caught-fail) in
                                                    {3702}let extra_42: bitstring = catch-fail((if v_765 then (if v_766 then hmac(@6_tls_h,handshake_secret_18,x_248) else fail-any) else fail-any)) in
                                                    {3703}let v_767: bool = not-caught-fail(extra_42) in
                                                    {3704}let k_70: bitstring = (if v_767 then zero else caught-fail) in
                                                    {3705}let master_secret_43: bitstring = (if v_767 then catch-fail(hmac(@6_tls_h,handshake_secret_18,k_70)) else caught-fail) in
                                                    {3706}let v_768: bool = not-caught-fail(master_secret_43) in
                                                    {3639}let cur_log_OU1_HRR_OU2_2: bitstring = (cur_log_OU1_HRR,client_hello'_11) in
                                                    {3653}let cur_log2_41: bitstring = (cur_log_OU1_HRR_OU2_2,server_hello'_14) in
                                                    {3708}let h_215: bitstring = (if v_768 then catch-fail(hash(@6_tls_h,cur_log2_41)) else caught-fail) in
                                                    {3709}let v_769: bool = not-caught-fail(h_215) in
                                                    {3707}let l_220: label = (if v_768 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {3710}let x_249: bitstring = (if v_769 then (l_220,h_215) else caught-fail) in
                                                    {3711}let client_hts_18: bitstring = (if v_768 then catch-fail((if v_769 then hmac(@6_tls_h,handshake_secret_18,x_249) else fail-any)) else caught-fail) in
                                                    {3712}let v_770: bool = not-caught-fail(client_hts_18) in
                                                    {3714}let h_216: bitstring = (if v_770 then catch-fail(hash(@6_tls_h,cur_log2_41)) else caught-fail) in
                                                    {3715}let v_771: bool = not-caught-fail(h_216) in
                                                    {3713}let l_221: label = (if v_770 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {3716}let x_250: bitstring = (if v_771 then (l_221,h_216) else caught-fail) in
                                                    {3717}let server_hts_18: bitstring = (if v_770 then catch-fail((if v_771 then hmac(@6_tls_h,handshake_secret_18,x_250) else fail-any)) else caught-fail) in
                                                    {3718}let v_772: bool = not-caught-fail(server_hts_18) in
                                                    {3720}let h_217: bitstring = (if v_772 then zero else caught-fail) in
                                                    {3719}let l_222: label = (if v_772 then tls13_key else caught-fail) in
                                                    {3721}let x_251: bitstring = (if v_772 then (l_222,h_217) else caught-fail) in
                                                    {3722}let client_wkh_18: bitstring = (if v_772 then catch-fail(hmac(@6_tls_h,client_hts_18,x_251)) else caught-fail) in
                                                    {3723}let v_773: bool = not-caught-fail(client_wkh_18) in
                                                    {3725}let h_218: bitstring = (if v_773 then zero else caught-fail) in
                                                    {3724}let l_223: label = (if v_773 then tls13_key else caught-fail) in
                                                    {3726}let x_252: bitstring = (if v_773 then (l_223,h_218) else caught-fail) in
                                                    {3727}let server_wkh_18: bitstring = (if v_773 then catch-fail(hmac(@6_tls_h,server_hts_18,x_252)) else caught-fail) in
                                                    {3728}let v_774: bool = not-caught-fail(server_wkh_18) in
                                                    {3730}let h_219: bitstring = (if v_774 then zero else caught-fail) in
                                                    {3729}let l_224: label = (if v_774 then tls13_finished else caught-fail) in
                                                    {3731}let x_253: bitstring = (if v_774 then (l_224,h_219) else caught-fail) in
                                                    {3732}let client_fk_18: bitstring = (if v_774 then catch-fail(hmac(@6_tls_h,client_hts_18,x_253)) else caught-fail) in
                                                    {3733}let v_775: bool = not-caught-fail(client_fk_18) in
                                                    {3735}let h_220: bitstring = (if v_775 then zero else caught-fail) in
                                                    {3734}let l_225: label = (if v_775 then tls13_finished else caught-fail) in
                                                    {3736}let x_254: bitstring = (if v_775 then (l_225,h_220) else caught-fail) in
                                                    {3737}let server_fk_18: bitstring = (if v_775 then catch-fail(hmac(@6_tls_h,server_hts_18,x_254)) else caught-fail) in
                                                    {3738}let v_776: bool = not-caught-fail(server_fk_18) in
                                                    {3739}let (master_secret_44: bitstring,chk_25: aead_key,shk_24: aead_key,cfin_25: mac_key,sfin_24: mac_key) = (if v_767 then (if v_768 then (if v_770 then (if v_772 then (if v_773 then (if v_774 then (if v_775 then (if v_776 then (master_secret_43,client_wkh_18,server_wkh_18,client_fk_18,server_fk_18) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {3740}event Client_chk(@6_id_client,chk_25);
                                                    {3741}event Client_shk(@6_id_client,shk_24);
                                                    {3742}event Client_cfin(@6_id_client,cfin_25);
                                                    {3743}event Client_sfin(@6_id_client,sfin_24);
                                                    {3744}in(io, enc_ee_msg_17: bitstring);
                                                    {3745}let ee_msg_18: msg = aead_dec(@6_tls_a,shk_24,0,zero,enc_ee_msg_17) in
                                                    {3746}let EE(ech_ee_17: echExt,extra_ee_17: extraExt) = ee_msg_18 in
                                                    {3747}let cur_log2_42: bitstring = (cur_log2_41,ee_msg_18) in
                                                    {3748}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_11,sr_28,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_92,safe_psk_23,@6_comp_psk,master_secret_44,chk_25,0,shk_24,1,cfin_25,sfin_24,cur_log2_42)))
                                                )
                                                else
                                                    {3749}out(io, illegal_parameter)
                                            )
                                            else
                                                {3750}out(io, illegal_parameter)
                                    )
                                    else
                                        {3751}out(io, unexpected_message)
                            )
                            else
                                {3752}let psk_93: preSharedKey = NoPsk in
                                {3754}let k_71: bitstring = catch-fail(psk2b(psk_93)) in
                                {3755}let v_777: bool = not-caught-fail(k_71) in
                                {3753}let s_79: bitstring = zero in
                                {3756}let early_secret_60: bitstring = catch-fail((if v_777 then hmac(@6_tls_h,s_79,k_71) else fail-any)) in
                                {3757}let v_778: bool = not-caught-fail(early_secret_60) in
                                {3759}let m_78: bitstring = (if v_778 then zero else caught-fail) in
                                {3760}let h_221: bitstring = (if v_778 then catch-fail(hash(@6_tls_h,m_78)) else caught-fail) in
                                {3761}let v_779: bool = not-caught-fail(h_221) in
                                {3758}let l_226: label = (if v_778 then tls13_ext_res_binder else caught-fail) in
                                {3762}let x_255: bitstring = (if v_779 then (l_226,h_221) else caught-fail) in
                                {3763}let binder_key_40: bitstring = (if v_778 then catch-fail((if v_779 then hmac(@6_tls_h,early_secret_60,x_255) else fail-any)) else caught-fail) in
                                {3764}let v_780: bool = not-caught-fail(binder_key_40) in
                                {3765}let v_781: bitstring = catch-fail((if v_778 then (if v_780 then (early_secret_60,binder_key_40) else fail-any) else fail-any)) in
                                {3766}let v_782: bool = (not-caught-fail(v_781) && success?(1-proj-2-tuple(v_781))) in
                                {3767}let kb_40: mac_key = (if v_782 then 2-proj-2-tuple(v_781) else caught-fail) in
                                {3768}let es_61: bitstring = (if v_782 then 1-proj-2-tuple(v_781) else caught-fail) in
                                {3769}let v_783: preSharedKeyExt = (if v_782 then catch-fail(o_psk_ext_1) else caught-fail) in
                                {3770}let v_784: bool = (not-caught-fail(v_783) && success?(1-proj-client_psk_ext(v_783))) in
                                {3771}let fake_binder_4: bitstring = (if v_784 then 2-proj-client_psk_ext(v_783) else caught-fail) in
                                {3772}let fake_id_4: identityPsk = (if v_784 then 1-proj-client_psk_ext(v_783) else caught-fail) in
                                {3773}new fake_binder'[]: bitstring;
                                {3774}let v_785: bitstring = catch-fail((if v_782 then (if v_784 then (client_psk_ext(fake_id_4,fake_binder'),(NoPsk,zero,es_61,false)) else (empty_psk_ext,(NoPsk,zero,es_61,false))) else fail-any)) in
                                {3775}let v_786: bool = (not-caught-fail(v_785) && success?(1-proj-2-tuple(v_785))) in
                                {3776}let psk_data_23: bitstring = (if v_786 then 2-proj-2-tuple(v_785) else caught-fail) in
                                {3777}let psk_ext_39: preSharedKeyExt = (if v_786 then 1-proj-2-tuple(v_785) else caught-fail) in
                                {3778}let o_offer_8: params = (if v_786 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_2,SNI(o_dom_3),o_ech_ext_1,empty_extra_ext,psk_ext_39) else caught-fail) in
                                {3779}let (client_hello'_12: msg,cr'_12: bytes32,kex_data'_12: bitstring,psk_data'_15: bitstring) = (if v_786 then (CH(o_cr_3,o_offer_8),o_cr_3,kex_data_7,psk_data_23) else fail-any) in
                                {3780}out(io, client_hello'_12);
                                {3782}in(io, server_hello'_15: msg);
                                {3783}let SH(sr'_12: bytes32,mode'_12: params) = server_hello'_15 in
                                (
                                    {3784}if (sr'_12 = B32(HRR24,HRR8)) then
                                        {3785}out(io, unexpected_message)
                                    else
                                        {3786}let (x_256: bitstring,g_20: group) = kex_data'_12 in
                                        {3787}let (psk_offer_18: preSharedKey,id_offer_18: identityPsk,es_offer_18: bitstring,is_safe_offer_18: bool) = psk_data'_15 in
                                        {3788}event Client_PSKOffer(@6_id_client,psk_offer_18,id_offer_18,is_safe_offer_18);
                                        {3789}event Client_Rand_client(@6_id_client,cr'_12);
                                        {3790}event Client_DH_client(@6_id_client,dh_pub(g_20,x_256));
                                        {3791}event Client_server_domain(@6_id_client,o_dom);
                                        {3792}let SH(sr_29: bytes32,mode_22: params) = server_hello'_15 in
                                        {3793}event Client_Rand_server(@6_id_client,sr_29);
                                        {3794}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_20,gy_19: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_40: preSharedKeyExt) = mode_22 in
                                        (
                                            {3796}event Client_DH_server(@6_id_client,gy_19);
                                            {3797}let v_787: bool = (psk_ext_40 = empty_psk_ext) in
                                            {3798}let psk_94: preSharedKey = (if v_787 then NoPsk else caught-fail) in
                                            {3800}let k_72: bitstring = (if v_787 then catch-fail(psk2b(psk_94)) else caught-fail) in
                                            {3801}let v_788: bool = not-caught-fail(k_72) in
                                            {3799}let s_80: bitstring = (if v_787 then zero else caught-fail) in
                                            {3802}let early_secret_61: bitstring = (if v_787 then catch-fail((if v_788 then hmac(@6_tls_h,s_80,k_72) else fail-any)) else caught-fail) in
                                            {3803}let v_789: bool = not-caught-fail(early_secret_61) in
                                            {3805}let m_79: bitstring = (if v_789 then zero else caught-fail) in
                                            {3806}let h_222: bitstring = (if v_789 then catch-fail(hash(@6_tls_h,m_79)) else caught-fail) in
                                            {3807}let v_790: bool = not-caught-fail(h_222) in
                                            {3804}let l_227: label = (if v_789 then tls13_ext_res_binder else caught-fail) in
                                            {3808}let x_257: bitstring = (if v_790 then (l_227,h_222) else caught-fail) in
                                            {3809}let binder_key_41: bitstring = (if v_789 then catch-fail((if v_790 then hmac(@6_tls_h,early_secret_61,x_257) else fail-any)) else caught-fail) in
                                            {3810}let v_791: bool = not-caught-fail(binder_key_41) in
                                            {3811}let v_792: bitstring = (if v_787 then catch-fail((if v_789 then (if v_791 then (early_secret_61,binder_key_41) else fail-any) else fail-any)) else caught-fail) in
                                            {3812}let v_793: bool = (not-caught-fail(v_792) && success?(1-proj-2-tuple(v_792))) in
                                            {3813}let kb_41: mac_key = (if v_793 then 2-proj-2-tuple(v_792) else caught-fail) in
                                            {3814}let es_62: bitstring = (if v_793 then 1-proj-2-tuple(v_792) else caught-fail) in
                                            {3815}let v_794: bitstring = (if not(v_787) then catch-fail(psk_data'_15) else caught-fail) in
                                            {3816}let v_795: bool = (not-caught-fail(v_794) && success?(1-proj-4-tuple(v_794))) in
                                            {3817}let is_safe_37: bool = (if v_795 then 4-proj-4-tuple(v_794) else caught-fail) in
                                            {3818}let es_63: bitstring = (if v_795 then 3-proj-4-tuple(v_794) else caught-fail) in
                                            {3819}let id_46: identityPsk = (if v_795 then 2-proj-4-tuple(v_794) else caught-fail) in
                                            {3820}let psk_95: preSharedKey = (if v_795 then 1-proj-4-tuple(v_794) else caught-fail) in
                                            {3821}let (psk_96: preSharedKey,early_secret_62: bitstring,valid_18: bool,safe_psk_24: bool) = (if v_787 then (if v_793 then (NoPsk,es_62,true,false) else fail-any) else (if v_795 then (psk_95,es_63,((psk_95 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_40)),is_safe_37) else fail-any)) in
                                            {3822}event Client_PSKChoosen(@6_id_client,psk_96,safe_psk_24);
                                            {3823}if valid_18 then
                                            (
                                                {3826}new s_81[]: seed;
                                                {3824}let gxy_37: element = catch-fail(dh_decap_fun(g_20,gy_19,x_256)) in
                                                {3825}let v_796: bool = not-caught-fail(gxy_37) in
                                                {3827}let gxy_38: element = (if v_796 then gxy_37 else dh_f(s_81)) in
                                                {3828}event Client_DH_gxy(@6_id_client,gxy_38);
                                                {3830}let m_80: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                {3831}let v_797: bool = not-caught-fail(m_80) in
                                                {3832}let h_223: bitstring = (if v_797 then catch-fail(hash(@6_tls_h,m_80)) else caught-fail) in
                                                {3833}let v_798: bool = not-caught-fail(h_223) in
                                                {3829}let l_228: label = tls13_derived in
                                                {3834}let x_258: bitstring = (if v_798 then (l_228,h_223) else caught-fail) in
                                                {3835}let extra_43: bitstring = catch-fail((if v_797 then (if v_798 then hmac(@6_tls_h,early_secret_62,x_258) else fail-any) else fail-any)) in
                                                {3836}let v_799: bool = not-caught-fail(extra_43) in
                                                {3837}let handshake_secret_19: bitstring = (if v_799 then hmac(@6_tls_h,extra_43,gxy_38) else fail-any) in
                                                {3839}let m_81: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                {3840}let v_800: bool = not-caught-fail(m_81) in
                                                {3841}let h_224: bitstring = (if v_800 then catch-fail(hash(@6_tls_h,m_81)) else caught-fail) in
                                                {3842}let v_801: bool = not-caught-fail(h_224) in
                                                {3838}let l_229: label = tls13_derived in
                                                {3843}let x_259: bitstring = (if v_801 then (l_229,h_224) else caught-fail) in
                                                {3844}let extra_44: bitstring = catch-fail((if v_800 then (if v_801 then hmac(@6_tls_h,handshake_secret_19,x_259) else fail-any) else fail-any)) in
                                                {3845}let v_802: bool = not-caught-fail(extra_44) in
                                                {3846}let k_73: bitstring = (if v_802 then zero else caught-fail) in
                                                {3847}let master_secret_45: bitstring = (if v_802 then catch-fail(hmac(@6_tls_h,handshake_secret_19,k_73)) else caught-fail) in
                                                {3848}let v_803: bool = not-caught-fail(master_secret_45) in
                                                {3781}let cur_log_OU1_HRR_OU2_3: bitstring = (cur_log_OU1_HRR,client_hello'_12) in
                                                {3795}let cur_log2_43: bitstring = (cur_log_OU1_HRR_OU2_3,server_hello'_15) in
                                                {3850}let h_225: bitstring = (if v_803 then catch-fail(hash(@6_tls_h,cur_log2_43)) else caught-fail) in
                                                {3851}let v_804: bool = not-caught-fail(h_225) in
                                                {3849}let l_230: label = (if v_803 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {3852}let x_260: bitstring = (if v_804 then (l_230,h_225) else caught-fail) in
                                                {3853}let client_hts_19: bitstring = (if v_803 then catch-fail((if v_804 then hmac(@6_tls_h,handshake_secret_19,x_260) else fail-any)) else caught-fail) in
                                                {3854}let v_805: bool = not-caught-fail(client_hts_19) in
                                                {3856}let h_226: bitstring = (if v_805 then catch-fail(hash(@6_tls_h,cur_log2_43)) else caught-fail) in
                                                {3857}let v_806: bool = not-caught-fail(h_226) in
                                                {3855}let l_231: label = (if v_805 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {3858}let x_261: bitstring = (if v_806 then (l_231,h_226) else caught-fail) in
                                                {3859}let server_hts_19: bitstring = (if v_805 then catch-fail((if v_806 then hmac(@6_tls_h,handshake_secret_19,x_261) else fail-any)) else caught-fail) in
                                                {3860}let v_807: bool = not-caught-fail(server_hts_19) in
                                                {3862}let h_227: bitstring = (if v_807 then zero else caught-fail) in
                                                {3861}let l_232: label = (if v_807 then tls13_key else caught-fail) in
                                                {3863}let x_262: bitstring = (if v_807 then (l_232,h_227) else caught-fail) in
                                                {3864}let client_wkh_19: bitstring = (if v_807 then catch-fail(hmac(@6_tls_h,client_hts_19,x_262)) else caught-fail) in
                                                {3865}let v_808: bool = not-caught-fail(client_wkh_19) in
                                                {3867}let h_228: bitstring = (if v_808 then zero else caught-fail) in
                                                {3866}let l_233: label = (if v_808 then tls13_key else caught-fail) in
                                                {3868}let x_263: bitstring = (if v_808 then (l_233,h_228) else caught-fail) in
                                                {3869}let server_wkh_19: bitstring = (if v_808 then catch-fail(hmac(@6_tls_h,server_hts_19,x_263)) else caught-fail) in
                                                {3870}let v_809: bool = not-caught-fail(server_wkh_19) in
                                                {3872}let h_229: bitstring = (if v_809 then zero else caught-fail) in
                                                {3871}let l_234: label = (if v_809 then tls13_finished else caught-fail) in
                                                {3873}let x_264: bitstring = (if v_809 then (l_234,h_229) else caught-fail) in
                                                {3874}let client_fk_19: bitstring = (if v_809 then catch-fail(hmac(@6_tls_h,client_hts_19,x_264)) else caught-fail) in
                                                {3875}let v_810: bool = not-caught-fail(client_fk_19) in
                                                {3877}let h_230: bitstring = (if v_810 then zero else caught-fail) in
                                                {3876}let l_235: label = (if v_810 then tls13_finished else caught-fail) in
                                                {3878}let x_265: bitstring = (if v_810 then (l_235,h_230) else caught-fail) in
                                                {3879}let server_fk_19: bitstring = (if v_810 then catch-fail(hmac(@6_tls_h,server_hts_19,x_265)) else caught-fail) in
                                                {3880}let v_811: bool = not-caught-fail(server_fk_19) in
                                                {3881}let (master_secret_46: bitstring,chk_26: aead_key,shk_25: aead_key,cfin_26: mac_key,sfin_25: mac_key) = (if v_802 then (if v_803 then (if v_805 then (if v_807 then (if v_808 then (if v_809 then (if v_810 then (if v_811 then (master_secret_45,client_wkh_19,server_wkh_19,client_fk_19,server_fk_19) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {3882}event Client_chk(@6_id_client,chk_26);
                                                {3883}event Client_shk(@6_id_client,shk_25);
                                                {3884}event Client_cfin(@6_id_client,cfin_26);
                                                {3885}event Client_sfin(@6_id_client,sfin_25);
                                                {3886}in(io, enc_ee_msg_18: bitstring);
                                                {3887}let ee_msg_19: msg = aead_dec(@6_tls_a,shk_25,0,zero,enc_ee_msg_18) in
                                                {3888}let EE(ech_ee_18: echExt,extra_ee_18: extraExt) = ee_msg_19 in
                                                {3889}let cur_log2_44: bitstring = (cur_log2_43,ee_msg_19) in
                                                {3890}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_12,sr_29,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_96,safe_psk_24,@6_comp_psk,master_secret_46,chk_26,0,shk_25,1,cfin_26,sfin_25,cur_log2_44)))
                                            )
                                            else
                                                {3891}out(io, illegal_parameter)
                                        )
                                        else
                                            {3892}out(io, illegal_parameter)
                                )
                                else
                                    {3893}out(io, unexpected_message)
                    )
                    else
                        {3895}let sh_modified_4: msg = SH(B32(sr24_2,zero8),mode_15) in
                        {3894}let cur_log_11: bitstring = (zero,i_client_hello_1) in
                        {3896}let cur_log_sh_4: bitstring = (cur_log_11,sh_modified_4) in
                        {3897}let transcript_ech_conf_4: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_4)) in
                        {3898}let v_812: bool = not-caught-fail(transcript_ech_conf_4) in
                        {3900}let k_74: bitstring = (if v_812 then catch-fail(b32_2_b(get_random(i_client_hello_1))) else caught-fail) in
                        {3901}let v_813: bool = not-caught-fail(k_74) in
                        {3899}let s_82: bitstring = (if v_812 then zero else caught-fail) in
                        {3902}let k_75: bitstring = (if v_812 then catch-fail((if v_813 then hmac(@6_backend_h,s_82,k_74) else fail-any)) else caught-fail) in
                        {3903}let v_814: bool = not-caught-fail(k_75) in
                        {3904}let l_236: label = (if v_814 then ech_accept_confirmation else caught-fail) in
                        {3905}let x_266: bitstring = (if v_814 then (l_236,cur_log_sh_4) else caught-fail) in
                        {3906}let sr8_5: bytes8 = (if v_812 then catch-fail(crop_into_bytes8((if v_814 then hmac(@6_backend_h,k_75,x_266) else fail-any))) else caught-fail) in
                        {3907}let v_815: bool = not-caught-fail(sr8_5) in
                        {3908}if (B32(sr24_2,sr8_1) = (if v_812 then (if v_815 then B32(sr24_2,sr8_5) else fail-any) else fail-any)) then
                        (
                            {3909}event ClientEchAcceptance(@6_id_client,true);
                            {3911}let (x_267: bitstring,g_21: group) = i_kex_data_1 in
                            {3912}let (psk_offer_19: preSharedKey,id_offer_19: identityPsk,es_offer_19: bitstring,is_safe_offer_19: bool) = psk_data_16 in
                            {3913}event Client_PSKOffer(@6_id_client,psk_offer_19,id_offer_19,is_safe_offer_19);
                            {3914}event Client_Rand_client(@6_id_client,i_cr_1);
                            {3915}event Client_DH_client(@6_id_client,dh_pub(g_21,x_267));
                            {3916}event Client_server_domain(@6_id_client,backend_dom);
                            {3917}let SH(sr_30: bytes32,mode_23: params) = server_hello_4 in
                            {3918}event Client_Rand_server(@6_id_client,sr_30);
                            {3919}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_21,gy_20: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_41: preSharedKeyExt) = mode_23 in
                            (
                                {3921}event Client_DH_server(@6_id_client,gy_20);
                                {3922}let v_816: bool = (psk_ext_41 = empty_psk_ext) in
                                {3923}let psk_97: preSharedKey = (if v_816 then NoPsk else caught-fail) in
                                {3925}let k_76: bitstring = (if v_816 then catch-fail(psk2b(psk_97)) else caught-fail) in
                                {3926}let v_817: bool = not-caught-fail(k_76) in
                                {3924}let s_83: bitstring = (if v_816 then zero else caught-fail) in
                                {3927}let early_secret_63: bitstring = (if v_816 then catch-fail((if v_817 then hmac(@6_backend_h,s_83,k_76) else fail-any)) else caught-fail) in
                                {3928}let v_818: bool = not-caught-fail(early_secret_63) in
                                {3930}let m_82: bitstring = (if v_818 then zero else caught-fail) in
                                {3931}let h_231: bitstring = (if v_818 then catch-fail(hash(@6_backend_h,m_82)) else caught-fail) in
                                {3932}let v_819: bool = not-caught-fail(h_231) in
                                {3929}let l_237: label = (if v_818 then tls13_ext_res_binder else caught-fail) in
                                {3933}let x_268: bitstring = (if v_819 then (l_237,h_231) else caught-fail) in
                                {3934}let binder_key_42: bitstring = (if v_818 then catch-fail((if v_819 then hmac(@6_backend_h,early_secret_63,x_268) else fail-any)) else caught-fail) in
                                {3935}let v_820: bool = not-caught-fail(binder_key_42) in
                                {3936}let v_821: bitstring = (if v_816 then catch-fail((if v_818 then (if v_820 then (early_secret_63,binder_key_42) else fail-any) else fail-any)) else caught-fail) in
                                {3937}let v_822: bool = (not-caught-fail(v_821) && success?(1-proj-2-tuple(v_821))) in
                                {3938}let kb_42: mac_key = (if v_822 then 2-proj-2-tuple(v_821) else caught-fail) in
                                {3939}let es_64: bitstring = (if v_822 then 1-proj-2-tuple(v_821) else caught-fail) in
                                {3940}let v_823: bitstring = (if not(v_816) then catch-fail(psk_data_16) else caught-fail) in
                                {3941}let v_824: bool = (not-caught-fail(v_823) && success?(1-proj-4-tuple(v_823))) in
                                {3942}let is_safe_38: bool = (if v_824 then 4-proj-4-tuple(v_823) else caught-fail) in
                                {3943}let es_65: bitstring = (if v_824 then 3-proj-4-tuple(v_823) else caught-fail) in
                                {3944}let id_47: identityPsk = (if v_824 then 2-proj-4-tuple(v_823) else caught-fail) in
                                {3945}let psk_98: preSharedKey = (if v_824 then 1-proj-4-tuple(v_823) else caught-fail) in
                                {3946}let (psk_99: preSharedKey,early_secret_64: bitstring,valid_19: bool,safe_psk_25: bool) = (if v_816 then (if v_822 then (NoPsk,es_64,true,false) else fail-any) else (if v_824 then (psk_98,es_65,((psk_98 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_41)),is_safe_38) else fail-any)) in
                                {3947}event Client_PSKChoosen(@6_id_client,psk_99,safe_psk_25);
                                {3948}if valid_19 then
                                (
                                    {3951}new s_84[]: seed;
                                    {3949}let gxy_39: element = catch-fail(dh_decap_fun(g_21,gy_20,x_267)) in
                                    {3950}let v_825: bool = not-caught-fail(gxy_39) in
                                    {3952}let gxy_40: element = (if v_825 then gxy_39 else dh_f(s_84)) in
                                    {3953}event Client_DH_gxy(@6_id_client,gxy_40);
                                    {3955}let m_83: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                    {3956}let v_826: bool = not-caught-fail(m_83) in
                                    {3957}let h_232: bitstring = (if v_826 then catch-fail(hash(@6_backend_h,m_83)) else caught-fail) in
                                    {3958}let v_827: bool = not-caught-fail(h_232) in
                                    {3954}let l_238: label = tls13_derived in
                                    {3959}let x_269: bitstring = (if v_827 then (l_238,h_232) else caught-fail) in
                                    {3960}let extra_45: bitstring = catch-fail((if v_826 then (if v_827 then hmac(@6_backend_h,early_secret_64,x_269) else fail-any) else fail-any)) in
                                    {3961}let v_828: bool = not-caught-fail(extra_45) in
                                    {3962}let handshake_secret_20: bitstring = (if v_828 then hmac(@6_backend_h,extra_45,gxy_40) else fail-any) in
                                    {3964}let m_84: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                    {3965}let v_829: bool = not-caught-fail(m_84) in
                                    {3966}let h_233: bitstring = (if v_829 then catch-fail(hash(@6_backend_h,m_84)) else caught-fail) in
                                    {3967}let v_830: bool = not-caught-fail(h_233) in
                                    {3963}let l_239: label = tls13_derived in
                                    {3968}let x_270: bitstring = (if v_830 then (l_239,h_233) else caught-fail) in
                                    {3969}let extra_46: bitstring = catch-fail((if v_829 then (if v_830 then hmac(@6_backend_h,handshake_secret_20,x_270) else fail-any) else fail-any)) in
                                    {3970}let v_831: bool = not-caught-fail(extra_46) in
                                    {3971}let k_77: bitstring = (if v_831 then zero else caught-fail) in
                                    {3972}let master_secret_47: bitstring = (if v_831 then catch-fail(hmac(@6_backend_h,handshake_secret_20,k_77)) else caught-fail) in
                                    {3973}let v_832: bool = not-caught-fail(master_secret_47) in
                                    {3910}let cur_log_12: bitstring = (zero,i_client_hello_1) in
                                    {3920}let cur_log2_45: bitstring = (cur_log_12,server_hello_4) in
                                    {3975}let h_234: bitstring = (if v_832 then catch-fail(hash(@6_backend_h,cur_log2_45)) else caught-fail) in
                                    {3976}let v_833: bool = not-caught-fail(h_234) in
                                    {3974}let l_240: label = (if v_832 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {3977}let x_271: bitstring = (if v_833 then (l_240,h_234) else caught-fail) in
                                    {3978}let client_hts_20: bitstring = (if v_832 then catch-fail((if v_833 then hmac(@6_backend_h,handshake_secret_20,x_271) else fail-any)) else caught-fail) in
                                    {3979}let v_834: bool = not-caught-fail(client_hts_20) in
                                    {3981}let h_235: bitstring = (if v_834 then catch-fail(hash(@6_backend_h,cur_log2_45)) else caught-fail) in
                                    {3982}let v_835: bool = not-caught-fail(h_235) in
                                    {3980}let l_241: label = (if v_834 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {3983}let x_272: bitstring = (if v_835 then (l_241,h_235) else caught-fail) in
                                    {3984}let server_hts_20: bitstring = (if v_834 then catch-fail((if v_835 then hmac(@6_backend_h,handshake_secret_20,x_272) else fail-any)) else caught-fail) in
                                    {3985}let v_836: bool = not-caught-fail(server_hts_20) in
                                    {3987}let h_236: bitstring = (if v_836 then zero else caught-fail) in
                                    {3986}let l_242: label = (if v_836 then tls13_key else caught-fail) in
                                    {3988}let x_273: bitstring = (if v_836 then (l_242,h_236) else caught-fail) in
                                    {3989}let client_wkh_20: bitstring = (if v_836 then catch-fail(hmac(@6_backend_h,client_hts_20,x_273)) else caught-fail) in
                                    {3990}let v_837: bool = not-caught-fail(client_wkh_20) in
                                    {3992}let h_237: bitstring = (if v_837 then zero else caught-fail) in
                                    {3991}let l_243: label = (if v_837 then tls13_key else caught-fail) in
                                    {3993}let x_274: bitstring = (if v_837 then (l_243,h_237) else caught-fail) in
                                    {3994}let server_wkh_20: bitstring = (if v_837 then catch-fail(hmac(@6_backend_h,server_hts_20,x_274)) else caught-fail) in
                                    {3995}let v_838: bool = not-caught-fail(server_wkh_20) in
                                    {3997}let h_238: bitstring = (if v_838 then zero else caught-fail) in
                                    {3996}let l_244: label = (if v_838 then tls13_finished else caught-fail) in
                                    {3998}let x_275: bitstring = (if v_838 then (l_244,h_238) else caught-fail) in
                                    {3999}let client_fk_20: bitstring = (if v_838 then catch-fail(hmac(@6_backend_h,client_hts_20,x_275)) else caught-fail) in
                                    {4000}let v_839: bool = not-caught-fail(client_fk_20) in
                                    {4002}let h_239: bitstring = (if v_839 then zero else caught-fail) in
                                    {4001}let l_245: label = (if v_839 then tls13_finished else caught-fail) in
                                    {4003}let x_276: bitstring = (if v_839 then (l_245,h_239) else caught-fail) in
                                    {4004}let server_fk_20: bitstring = (if v_839 then catch-fail(hmac(@6_backend_h,server_hts_20,x_276)) else caught-fail) in
                                    {4005}let v_840: bool = not-caught-fail(server_fk_20) in
                                    {4006}let (master_secret_48: bitstring,chk_27: aead_key,shk_26: aead_key,cfin_27: mac_key,sfin_26: mac_key) = (if v_831 then (if v_832 then (if v_834 then (if v_836 then (if v_837 then (if v_838 then (if v_839 then (if v_840 then (master_secret_47,client_wkh_20,server_wkh_20,client_fk_20,server_fk_20) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {4007}event Client_chk(@6_id_client,chk_27);
                                    {4008}event Client_shk(@6_id_client,shk_26);
                                    {4009}event Client_cfin(@6_id_client,cfin_27);
                                    {4010}event Client_sfin(@6_id_client,sfin_26);
                                    {4011}in(io, enc_ee_msg_19: bitstring);
                                    {4012}let ee_msg_20: msg = aead_dec(@6_backend_a,shk_26,0,zero,enc_ee_msg_19) in
                                    {4013}let EE(ech_ee_19: echExt,extra_ee_19: extraExt) = ee_msg_20 in
                                    {4014}let cur_log2_46: bitstring = (cur_log2_45,ee_msg_20) in
                                    {4015}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr_1,sr_30,@6_backend_h,@6_backend_a,c_dom_6,backend_dom,psk_99,safe_psk_25,@6_comp_psk,master_secret_48,chk_27,0,shk_26,1,cfin_27,sfin_26,cur_log2_46)))
                                )
                                else
                                    {4016}out(io, illegal_parameter)
                            )
                            else
                                {4017}out(io, illegal_parameter)
                        )
                        else
                            {4018}event ClientEchAcceptance(@6_id_client,false);
                            {4019}let v_841: bool = @6_use_grease in
                            {4020}let psk_100: preSharedKey = (if not(v_841) then NoPsk else caught-fail) in
                            {4022}let k_78: bitstring = (if not(v_841) then catch-fail(psk2b(psk_100)) else caught-fail) in
                            {4023}let v_842: bool = not-caught-fail(k_78) in
                            {4021}let s_85: bitstring = (if not(v_841) then zero else caught-fail) in
                            {4024}let early_secret_65: bitstring = (if not(v_841) then catch-fail((if v_842 then hmac(@6_tls_h,s_85,k_78) else fail-any)) else caught-fail) in
                            {4025}let v_843: bool = not-caught-fail(early_secret_65) in
                            {4027}let m_85: bitstring = (if v_843 then zero else caught-fail) in
                            {4028}let h_240: bitstring = (if v_843 then catch-fail(hash(@6_tls_h,m_85)) else caught-fail) in
                            {4029}let v_844: bool = not-caught-fail(h_240) in
                            {4026}let l_246: label = (if v_843 then tls13_ext_res_binder else caught-fail) in
                            {4030}let x_277: bitstring = (if v_844 then (l_246,h_240) else caught-fail) in
                            {4031}let binder_key_43: bitstring = (if v_843 then catch-fail((if v_844 then hmac(@6_tls_h,early_secret_65,x_277) else fail-any)) else caught-fail) in
                            {4032}let v_845: bool = not-caught-fail(binder_key_43) in
                            {4033}let v_846: bitstring = (if not(v_841) then catch-fail((if v_843 then (if v_845 then (early_secret_65,binder_key_43) else fail-any) else fail-any)) else caught-fail) in
                            {4034}let v_847: bool = (not-caught-fail(v_846) && success?(1-proj-2-tuple(v_846))) in
                            {4035}let kb_43: mac_key = (if v_847 then 2-proj-2-tuple(v_846) else caught-fail) in
                            {4036}let es': bitstring = (if v_847 then 1-proj-2-tuple(v_846) else caught-fail) in
                            {4037}let psk_data'_16: bitstring = (if v_841 then psk_data_16 else (if v_847 then (NoPsk,zero,es',false) else fail-any)) in
                            {4039}let (x_278: bitstring,g_22: group) = o_kex_data_1 in
                            {4040}let (psk_offer_20: preSharedKey,id_offer_20: identityPsk,es_offer_20: bitstring,is_safe_offer_20: bool) = psk_data'_16 in
                            {4041}event Client_PSKOffer(@6_id_client,psk_offer_20,id_offer_20,is_safe_offer_20);
                            {4042}event Client_Rand_client(@6_id_client,o_cr_1);
                            {4043}event Client_DH_client(@6_id_client,dh_pub(g_22,x_278));
                            {4044}event Client_server_domain(@6_id_client,o_dom);
                            {4045}let SH(sr_31: bytes32,mode_24: params) = server_hello_4 in
                            {4046}event Client_Rand_server(@6_id_client,sr_31);
                            {4047}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_22,gy_21: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_42: preSharedKeyExt) = mode_24 in
                            (
                                {4049}event Client_DH_server(@6_id_client,gy_21);
                                {4050}let v_848: bool = (psk_ext_42 = empty_psk_ext) in
                                {4051}let psk_101: preSharedKey = (if v_848 then NoPsk else caught-fail) in
                                {4053}let k_79: bitstring = (if v_848 then catch-fail(psk2b(psk_101)) else caught-fail) in
                                {4054}let v_849: bool = not-caught-fail(k_79) in
                                {4052}let s_86: bitstring = (if v_848 then zero else caught-fail) in
                                {4055}let early_secret_66: bitstring = (if v_848 then catch-fail((if v_849 then hmac(@6_tls_h,s_86,k_79) else fail-any)) else caught-fail) in
                                {4056}let v_850: bool = not-caught-fail(early_secret_66) in
                                {4058}let m_86: bitstring = (if v_850 then zero else caught-fail) in
                                {4059}let h_241: bitstring = (if v_850 then catch-fail(hash(@6_tls_h,m_86)) else caught-fail) in
                                {4060}let v_851: bool = not-caught-fail(h_241) in
                                {4057}let l_247: label = (if v_850 then tls13_ext_res_binder else caught-fail) in
                                {4061}let x_279: bitstring = (if v_851 then (l_247,h_241) else caught-fail) in
                                {4062}let binder_key_44: bitstring = (if v_850 then catch-fail((if v_851 then hmac(@6_tls_h,early_secret_66,x_279) else fail-any)) else caught-fail) in
                                {4063}let v_852: bool = not-caught-fail(binder_key_44) in
                                {4064}let v_853: bitstring = (if v_848 then catch-fail((if v_850 then (if v_852 then (early_secret_66,binder_key_44) else fail-any) else fail-any)) else caught-fail) in
                                {4065}let v_854: bool = (not-caught-fail(v_853) && success?(1-proj-2-tuple(v_853))) in
                                {4066}let kb_44: mac_key = (if v_854 then 2-proj-2-tuple(v_853) else caught-fail) in
                                {4067}let es_66: bitstring = (if v_854 then 1-proj-2-tuple(v_853) else caught-fail) in
                                {4068}let v_855: bitstring = (if not(v_848) then catch-fail(psk_data'_16) else caught-fail) in
                                {4069}let v_856: bool = (not-caught-fail(v_855) && success?(1-proj-4-tuple(v_855))) in
                                {4070}let is_safe_39: bool = (if v_856 then 4-proj-4-tuple(v_855) else caught-fail) in
                                {4071}let es_67: bitstring = (if v_856 then 3-proj-4-tuple(v_855) else caught-fail) in
                                {4072}let id_48: identityPsk = (if v_856 then 2-proj-4-tuple(v_855) else caught-fail) in
                                {4073}let psk_102: preSharedKey = (if v_856 then 1-proj-4-tuple(v_855) else caught-fail) in
                                {4074}let (psk_103: preSharedKey,early_secret_67: bitstring,valid_20: bool,safe_psk_26: bool) = (if v_848 then (if v_854 then (NoPsk,es_66,true,false) else fail-any) else (if v_856 then (psk_102,es_67,((psk_102 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_42)),is_safe_39) else fail-any)) in
                                {4075}event Client_PSKChoosen(@6_id_client,psk_103,safe_psk_26);
                                {4076}if valid_20 then
                                (
                                    {4079}new s_87[]: seed;
                                    {4077}let gxy_41: element = catch-fail(dh_decap_fun(g_22,gy_21,x_278)) in
                                    {4078}let v_857: bool = not-caught-fail(gxy_41) in
                                    {4080}let gxy_42: element = (if v_857 then gxy_41 else dh_f(s_87)) in
                                    {4081}event Client_DH_gxy(@6_id_client,gxy_42);
                                    {4083}let m_87: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                    {4084}let v_858: bool = not-caught-fail(m_87) in
                                    {4085}let h_242: bitstring = (if v_858 then catch-fail(hash(@6_tls_h,m_87)) else caught-fail) in
                                    {4086}let v_859: bool = not-caught-fail(h_242) in
                                    {4082}let l_248: label = tls13_derived in
                                    {4087}let x_280: bitstring = (if v_859 then (l_248,h_242) else caught-fail) in
                                    {4088}let extra_47: bitstring = catch-fail((if v_858 then (if v_859 then hmac(@6_tls_h,early_secret_67,x_280) else fail-any) else fail-any)) in
                                    {4089}let v_860: bool = not-caught-fail(extra_47) in
                                    {4090}let handshake_secret_21: bitstring = (if v_860 then hmac(@6_tls_h,extra_47,gxy_42) else fail-any) in
                                    {4092}let m_88: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                    {4093}let v_861: bool = not-caught-fail(m_88) in
                                    {4094}let h_243: bitstring = (if v_861 then catch-fail(hash(@6_tls_h,m_88)) else caught-fail) in
                                    {4095}let v_862: bool = not-caught-fail(h_243) in
                                    {4091}let l_249: label = tls13_derived in
                                    {4096}let x_281: bitstring = (if v_862 then (l_249,h_243) else caught-fail) in
                                    {4097}let extra_48: bitstring = catch-fail((if v_861 then (if v_862 then hmac(@6_tls_h,handshake_secret_21,x_281) else fail-any) else fail-any)) in
                                    {4098}let v_863: bool = not-caught-fail(extra_48) in
                                    {4099}let k_80: bitstring = (if v_863 then zero else caught-fail) in
                                    {4100}let master_secret_49: bitstring = (if v_863 then catch-fail(hmac(@6_tls_h,handshake_secret_21,k_80)) else caught-fail) in
                                    {4101}let v_864: bool = not-caught-fail(master_secret_49) in
                                    {4038}let cur_log_13: bitstring = (zero,o_client_hello) in
                                    {4048}let cur_log2_47: bitstring = (cur_log_13,server_hello_4) in
                                    {4103}let h_244: bitstring = (if v_864 then catch-fail(hash(@6_tls_h,cur_log2_47)) else caught-fail) in
                                    {4104}let v_865: bool = not-caught-fail(h_244) in
                                    {4102}let l_250: label = (if v_864 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {4105}let x_282: bitstring = (if v_865 then (l_250,h_244) else caught-fail) in
                                    {4106}let client_hts_21: bitstring = (if v_864 then catch-fail((if v_865 then hmac(@6_tls_h,handshake_secret_21,x_282) else fail-any)) else caught-fail) in
                                    {4107}let v_866: bool = not-caught-fail(client_hts_21) in
                                    {4109}let h_245: bitstring = (if v_866 then catch-fail(hash(@6_tls_h,cur_log2_47)) else caught-fail) in
                                    {4110}let v_867: bool = not-caught-fail(h_245) in
                                    {4108}let l_251: label = (if v_866 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {4111}let x_283: bitstring = (if v_867 then (l_251,h_245) else caught-fail) in
                                    {4112}let server_hts_21: bitstring = (if v_866 then catch-fail((if v_867 then hmac(@6_tls_h,handshake_secret_21,x_283) else fail-any)) else caught-fail) in
                                    {4113}let v_868: bool = not-caught-fail(server_hts_21) in
                                    {4115}let h_246: bitstring = (if v_868 then zero else caught-fail) in
                                    {4114}let l_252: label = (if v_868 then tls13_key else caught-fail) in
                                    {4116}let x_284: bitstring = (if v_868 then (l_252,h_246) else caught-fail) in
                                    {4117}let client_wkh_21: bitstring = (if v_868 then catch-fail(hmac(@6_tls_h,client_hts_21,x_284)) else caught-fail) in
                                    {4118}let v_869: bool = not-caught-fail(client_wkh_21) in
                                    {4120}let h_247: bitstring = (if v_869 then zero else caught-fail) in
                                    {4119}let l_253: label = (if v_869 then tls13_key else caught-fail) in
                                    {4121}let x_285: bitstring = (if v_869 then (l_253,h_247) else caught-fail) in
                                    {4122}let server_wkh_21: bitstring = (if v_869 then catch-fail(hmac(@6_tls_h,server_hts_21,x_285)) else caught-fail) in
                                    {4123}let v_870: bool = not-caught-fail(server_wkh_21) in
                                    {4125}let h_248: bitstring = (if v_870 then zero else caught-fail) in
                                    {4124}let l_254: label = (if v_870 then tls13_finished else caught-fail) in
                                    {4126}let x_286: bitstring = (if v_870 then (l_254,h_248) else caught-fail) in
                                    {4127}let client_fk_21: bitstring = (if v_870 then catch-fail(hmac(@6_tls_h,client_hts_21,x_286)) else caught-fail) in
                                    {4128}let v_871: bool = not-caught-fail(client_fk_21) in
                                    {4130}let h_249: bitstring = (if v_871 then zero else caught-fail) in
                                    {4129}let l_255: label = (if v_871 then tls13_finished else caught-fail) in
                                    {4131}let x_287: bitstring = (if v_871 then (l_255,h_249) else caught-fail) in
                                    {4132}let server_fk_21: bitstring = (if v_871 then catch-fail(hmac(@6_tls_h,server_hts_21,x_287)) else caught-fail) in
                                    {4133}let v_872: bool = not-caught-fail(server_fk_21) in
                                    {4134}let (master_secret_50: bitstring,chk_28: aead_key,shk_27: aead_key,cfin_28: mac_key,sfin_27: mac_key) = (if v_863 then (if v_864 then (if v_866 then (if v_868 then (if v_869 then (if v_870 then (if v_871 then (if v_872 then (master_secret_49,client_wkh_21,server_wkh_21,client_fk_21,server_fk_21) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {4135}event Client_chk(@6_id_client,chk_28);
                                    {4136}event Client_shk(@6_id_client,shk_27);
                                    {4137}event Client_cfin(@6_id_client,cfin_28);
                                    {4138}event Client_sfin(@6_id_client,sfin_27);
                                    {4139}in(io, enc_ee_msg_20: bitstring);
                                    {4140}let ee_msg_21: msg = aead_dec(@6_tls_a,shk_27,0,zero,enc_ee_msg_20) in
                                    {4141}let EE(ech_ee_20: echExt,extra_ee_20: extraExt) = ee_msg_21 in
                                    {4142}let cur_log2_48: bitstring = (cur_log2_47,ee_msg_21) in
                                    {4143}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(o_cr_1,sr_31,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_103,safe_psk_26,@6_comp_psk,master_secret_50,chk_28,0,shk_27,1,cfin_28,sfin_27,cur_log2_48)))
                                )
                                else
                                    {4144}out(io, illegal_parameter)
                            )
                            else
                                {4145}out(io, illegal_parameter)
                )
                else
                    {4146}out(io, unexpected_message)
            )
        )
        else
            {5629}get pre_shared_keys(c_dom'_8: domain,=dom_psk,=h_psk,id_49: identityPsk,psk_104: preSharedKey,idP_10: idProc,is_safe_40: bool) in
            {4147}event Selected_one_time_used_psk(@6_id_client,psk_104,is_safe_40);
            {4148}event Selected_psk(c_dom_6,c_dom'_8,idP_10,is_safe_40);
            {4149}event Selected_psk_no_missmatch(@6_id_client,dom_psk,h_psk,psk_104,id_49);
            {4150}event Selected_psk_with_ID(c_dom_6,c_dom'_8,id_49,idP_10,is_safe_40);
            {4151}let v_873: bitstring = (id_49,psk_104,is_safe_40) in
            {4152}let v_874: bool = success?(1-proj-3-tuple(v_873)) in
            {4153}let is_safe_41: bool = (if v_874 then 3-proj-3-tuple(v_873) else caught-fail) in
            {4154}let psk_105: preSharedKey = (if v_874 then 2-proj-3-tuple(v_873) else caught-fail) in
            {4155}let id_50: identityPsk = (if v_874 then 1-proj-3-tuple(v_873) else caught-fail) in
            {4159}let k_81: bitstring = (if v_874 then catch-fail(psk2b(psk_105)) else caught-fail) in
            {4160}let v_875: bool = not-caught-fail(k_81) in
            {4158}let s_88: bitstring = (if v_874 then zero else caught-fail) in
            {4161}let early_secret_68: bitstring = (if v_874 then catch-fail((if v_875 then hmac(h_psk,s_88,k_81) else fail-any)) else caught-fail) in
            {4162}let v_876: bool = not-caught-fail(early_secret_68) in
            {4164}let m_89: bitstring = (if v_876 then zero else caught-fail) in
            {4165}let h_250: bitstring = (if v_876 then catch-fail(hash(h_psk,m_89)) else caught-fail) in
            {4166}let v_877: bool = not-caught-fail(h_250) in
            {4163}let l_256: label = (if v_876 then tls13_ext_res_binder else caught-fail) in
            {4167}let x_288: bitstring = (if v_877 then (l_256,h_250) else caught-fail) in
            {4168}let binder_key_45: bitstring = (if v_876 then catch-fail((if v_877 then hmac(h_psk,early_secret_68,x_288) else fail-any)) else caught-fail) in
            {4169}let v_878: bool = not-caught-fail(binder_key_45) in
            {4170}let v_879: bitstring = (if v_874 then catch-fail((if v_876 then (if v_878 then (early_secret_68,binder_key_45) else fail-any) else fail-any)) else caught-fail) in
            {4171}let v_880: bool = (not-caught-fail(v_879) && success?(1-proj-2-tuple(v_879))) in
            {4172}let kb_45: mac_key = (if v_880 then 2-proj-2-tuple(v_879) else caught-fail) in
            {4173}let es_68: bitstring = (if v_880 then 1-proj-2-tuple(v_879) else caught-fail) in
            {4156}let offer_27: params = (if v_874 then nego(TLS13,h_psk,a_psk,kex_ext_psk,SNI(dom_psk),ech_inner_or_grease,extra_psk,trunc_client_psk_ext(id_50)) else caught-fail) in
            {4157}let cur_log'_15: bitstring = (if v_874 then (cur_log_9,CH(cr_psk,offer_27)) else caught-fail) in
            {4174}let binders_14: bitstring = (if v_880 then catch-fail(hmac(h_psk,kb_45,cur_log'_15)) else caught-fail) in
            {4175}let v_881: bool = not-caught-fail(binders_14) in
            {4176}let v_882: bitstring = catch-fail((if v_874 then (if v_880 then (if v_881 then (client_psk_ext(id_50,binders_14),(psk_105,id_50,es_68,is_safe_41)) else fail-any) else fail-any) else fail-any)) in
            {4177}let v_883: bool = (not-caught-fail(v_882) && success?(1-proj-2-tuple(v_882))) in
            {4178}let psk_data_24: bitstring = (if v_883 then 2-proj-2-tuple(v_882) else caught-fail) in
            {4179}let psk_ext_43: preSharedKeyExt = (if v_883 then 1-proj-2-tuple(v_882) else caught-fail) in
            {4184}new fake_id_5[]: identityPsk;
            {4185}new fake_binder_5[]: bitstring;
            {4182}let v_884: bool = (if v_883 then catch-fail(@6_use_grease) else caught-fail) in
            {4191}let v_885: hpkeContext = (if is-false(v_884) then catch-fail(context) else caught-fail) in
            {4192}let v_886: bool = (not-caught-fail(v_885) && ((S =nf 1-proj-hpke_context(v_885)) && success?(1-proj-hpke_context(v_885)))) in
            {4193}let base_nonce_5: bitstring = (if v_886 then 3-proj-hpke_context(v_885) else caught-fail) in
            {4194}let key_5: aead_key = (if v_886 then 2-proj-hpke_context(v_885) else caught-fail) in
            {4190}let n_4: nat = (if is-false(v_884) then 1 else caught-fail) in
            {4187}let o_ech_ext_ADD_4: echExt = (if is-false(v_884) then ECHClientHelloOuter(ech_h_3,ech_a_3,config_id_1,enc_1,zero) else caught-fail) in
            {4186}let o_psk_ext_5: preSharedKeyExt = (if is-false(v_884) then (if @6_use_psk then client_psk_ext(fake_id_5,fake_binder_5) else empty_psk_ext) else caught-fail) in
            {4188}let o_offer_ADD_4: params = (if is-false(v_884) then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),o_ech_ext_ADD_4,empty_extra_ext,o_psk_ext_5) else caught-fail) in
            {4189}let o_client_hello_ADD_4: msg = (if is-false(v_884) then CH(o_cr,o_offer_ADD_4) else caught-fail) in
            {4180}let i_offer_4: params = (if v_883 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_43) else caught-fail) in
            {4181}let i_client_hello_5: msg = (if v_883 then CH(i_cr,i_offer_4) else caught-fail) in
            {4195}let payload_5: bitstring = (if is-false(v_884) then catch-fail((if v_886 then aead_enc(ech_a_3,key_5,(base_nonce_5,n_4),o_client_hello_ADD_4,i_client_hello_5) else fail-any)) else caught-fail) in
            {4196}let v_887: bool = not-caught-fail(payload_5) in
            {4197}let o_ech_ext_5: echExt = (if v_887 then ECHClientHelloOuter(ech_h_3,ech_a_3,config_id_1,enc_1,payload_5) else caught-fail) in
            {4198}let o_offer_10: params = (if v_887 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),o_ech_ext_5,empty_extra_ext,o_psk_ext_5) else caught-fail) in
            {4183}let o_offer_9: params = (if v_884 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),ech_inner_or_grease,empty_extra_ext,psk_ext_43) else caught-fail) in
            {4199}let (o_client_hello_1: msg,i_client_hello_6: msg,o_cr_4: bytes32,i_cr_3: bytes32,o_kex_data_3: bitstring,i_kex_data_3: bitstring,o_psk_ext_6: preSharedKeyExt,psk_data_25: bitstring,o_ech_ext_6: echExt) = (if v_883 then (if undo-catch-fail(v_884) then (CH(o_cr,o_offer_9),CH(o_cr,o_offer_9),o_cr,o_cr,o_kex_data,o_kex_data,psk_ext_43,psk_data_24,ech_inner_or_grease) else (if v_887 then (CH(o_cr,o_offer_10),i_client_hello_5,o_cr,i_cr,o_kex_data,i_kex_data,o_psk_ext_5,psk_data_24,o_ech_ext_5) else fail-any)) else fail-any) in
            {4200}out(io, o_client_hello_1);
            {4201}let (psk_106: preSharedKey,id_51: identityPsk,es_69: bitstring,safe_1: bool) = psk_data_25 in
            (
                {4202}if (false && (not(@6_use_grease) && (psk_106 ≠ NoPsk))) then
                {4203}let client_hello_8: bitstring = (zero,i_client_hello_6) in
                {4205}let h_251: bitstring = catch-fail(hash(@6_backend_h,client_hello_8)) in
                {4206}let v_888: bool = not-caught-fail(h_251) in
                {4204}let l_257: label = tls13_client_early_traffic_secret in
                {4207}let x_289: bitstring = (if v_888 then (l_257,h_251) else caught-fail) in
                {4208}let atsc0_5: bitstring = catch-fail((if v_888 then hmac(@6_backend_h,es_69,x_289) else fail-any)) in
                {4209}let v_889: bool = not-caught-fail(atsc0_5) in
                {4211}let h_252: bitstring = (if v_889 then zero else caught-fail) in
                {4210}let l_258: label = (if v_889 then tls13_key else caught-fail) in
                {4212}let x_290: bitstring = (if v_889 then (l_258,h_252) else caught-fail) in
                {4213}let kc0_5: bitstring = (if v_889 then catch-fail(hmac(@6_backend_h,atsc0_5,x_290)) else caught-fail) in
                {4214}let v_890: bool = not-caught-fail(kc0_5) in
                {4216}let h_253: bitstring = (if v_890 then catch-fail(hash(@6_backend_h,client_hello_8)) else caught-fail) in
                {4217}let v_891: bool = not-caught-fail(h_253) in
                {4215}let l_259: label = (if v_890 then tls13_early_exporter_master_secret else caught-fail) in
                {4218}let x_291: bitstring = (if v_891 then (l_259,h_253) else caught-fail) in
                {4219}let ems0_10: bitstring = (if v_890 then catch-fail((if v_891 then hmac(@6_backend_h,es_69,x_291) else fail-any)) else caught-fail) in
                {4220}let v_892: bool = not-caught-fail(ems0_10) in
                {4221}let (wkc0_5: aead_key,ems0_11: bitstring) = (if v_889 then (if v_890 then (if v_892 then (kc0_5,ems0_10) else fail-any) else fail-any) else fail-any) in
                {4222}!
                {4223}in(io, (i_5: nat,ad_5: bitstring));
                {4224}if is_nat(i_5) then
                {4225}new msg_ed_4[]: bitstring;
                {4227}new st_14: stamp;
                {4228}event ClientSequenceClient0RTTDataWriteKey(@6_id_client,st_14,i_5);
                {4229}event ClientSends0(@6_id_client,i_cr_3,psk_106,i_5,ad_5,msg_ed_4);
                {4226}let enc_ed_4: bitstring = aead_enc(@6_backend_a,wkc0_5,i_5,ad_5,msg_ed_4) in
                {4230}out(io, enc_ed_4)
            ) | (
                {4231}in(io, server_hello_5: msg);
                {4232}let SH(B32(sr24_3: bytes24,sr8_6: bytes8),mode_25: params) = server_hello_5 in
                (
                    {4233}if (false && (B32(sr24_3,sr8_6) = B32(HRR24,HRR8))) then
                    (
                        {4234}if (send_kex_4 ≠ true) then
                        {4235}let nego(=TLS13,h_alg_12: hash_alg,a_alg_10: aead_alg,hrr_kex_ext(g_23: group),=empty_sni_ext,ech_ext_8: echExt,=empty_extra_ext,=empty_psk_ext) = mode_25 in
                        {4236}let v_893: bool = (ech_ext_8 = empty_ech_ext) in
                        {4237}let hrr_mode_1: params = (if not(v_893) then nego(TLS13,@6_backend_h,@6_backend_a,hrr_kex_ext(@6_backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) else caught-fail) in
                        {4238}let hrr_1: msg = (if not(v_893) then SH(B32(HRR24,HRR8),hrr_mode_1) else caught-fail) in
                        {4239}let cur_log_14: bitstring = (if not(v_893) then ((zero,i_client_hello_6),hrr_1) else caught-fail) in
                        {4240}let transcript_hrr_ech_conf_1: bitstring = (if not(v_893) then catch-fail(hash(@6_backend_h,cur_log_14)) else caught-fail) in
                        {4241}let v_894: bool = not-caught-fail(transcript_hrr_ech_conf_1) in
                        {4243}let k_82: bitstring = (if v_894 then catch-fail(b32_2_b(get_random(i_client_hello_6))) else caught-fail) in
                        {4244}let v_895: bool = not-caught-fail(k_82) in
                        {4242}let s_89: bitstring = (if v_894 then zero else caught-fail) in
                        {4245}let k_83: bitstring = (if v_894 then catch-fail((if v_895 then hmac(@6_backend_h,s_89,k_82) else fail-any)) else caught-fail) in
                        {4246}let v_896: bool = not-caught-fail(k_83) in
                        {4247}let l_260: label = (if v_896 then hrr_ech_accept_confirmation else caught-fail) in
                        {4248}let x_292: bitstring = (if v_896 then (l_260,cur_log_14) else caught-fail) in
                        {4249}let is_ech_accepted_1: bool = (if v_893 then false else (if (ech_ext_8 = ECHHelloRetryRequest((if v_894 then crop_into_bytes8((if v_896 then hmac(@6_backend_h,k_83,x_292) else fail-any)) else fail-any))) then true else false)) in
                        {4250}event ClientEchAcceptance(@6_id_client,is_ech_accepted_1);
                        {4251}if is_ech_accepted_1 then
                        (
                            {4253}let ech_config(config_id_4: configId,ech_g_6: group,pkR_6: element,o_dom_4: domain,ech_h_6: hash_alg,ech_a_6: aead_alg) = ech_conf in
                            {4255}new s_90[]: seed;
                            {4256}let gx_21: element = dh_pub(@6_backend_g,dh_k(s_90)) in
                            {4257}let v_897: bitstring = (dh_k(s_90),gx_21) in
                            {4258}let v_898: bool = success?(1-proj-2-tuple(v_897)) in
                            {4259}let gx_22: element = (if v_898 then 2-proj-2-tuple(v_897) else caught-fail) in
                            {4260}let x_293: bitstring = (if v_898 then 1-proj-2-tuple(v_897) else caught-fail) in
                            {4254}let send_key_share_3: bool = true in
                            {4261}let kex_9: kex_alg = (if v_898 then (if send_key_share_3 then DHE_kex(@6_backend_g,gx_22) else DHE_group(@6_backend_g)) else caught-fail) in
                            {4262}let (i_kex_ext_2: keyShareExt,i_kex_data_4: bitstring) = (if v_898 then (client_kex_ext(kex_9),(x_293,@6_backend_g)) else fail-any) in
                            {4264}new s_91[]: seed;
                            {4265}let gx_23: element = dh_pub(@6_tls_g,dh_k(s_91)) in
                            {4266}let v_899: bitstring = (dh_k(s_91),gx_23) in
                            {4267}let v_900: bool = success?(1-proj-2-tuple(v_899)) in
                            {4268}let gx_24: element = (if v_900 then 2-proj-2-tuple(v_899) else caught-fail) in
                            {4269}let x_294: bitstring = (if v_900 then 1-proj-2-tuple(v_899) else caught-fail) in
                            {4263}let send_key_share_4: bool = true in
                            {4270}let kex_10: kex_alg = (if v_900 then (if send_key_share_4 then DHE_kex(@6_tls_g,gx_24) else DHE_group(@6_tls_g)) else caught-fail) in
                            {4271}let (o_kex_ext_3: keyShareExt,o_kex_data_4: bitstring) = (if v_900 then (client_kex_ext(kex_10),(x_294,@6_tls_g)) else fail-any) in
                            {4272}new rand24_10[]: bytes24;
                            {4273}new rand8_10[]: bytes8;
                            {4275}new rand24_11[]: bytes24;
                            {4276}new rand8_11[]: bytes8;
                            {4277}let o_cr_5: bytes32 = B32(rand24_11,rand8_11) in
                            {4274}let i_cr_4: bytes32 = B32(rand24_10,rand8_10) in
                            {4252}let cur_log_IN1_HRR_1: bitstring = ((zero,i_client_hello_6),server_hello_5) in
                            {4279}if @6_use_psk then
                            (
                                {4278}let ech_ext_9: echExt = ECHClientHelloInner in
                                {4280}let (psk_107: preSharedKey,id_52: identityPsk,old_es_7: bitstring,is_safe_42: bool) = psk_data_25 in
                                (
                                    {4284}let k_84: bitstring = catch-fail(psk2b(psk_107)) in
                                    {4285}let v_901: bool = not-caught-fail(k_84) in
                                    {4283}let s_92: bitstring = zero in
                                    {4286}let early_secret_69: bitstring = catch-fail((if v_901 then hmac(@6_backend_h,s_92,k_84) else fail-any)) in
                                    {4287}let v_902: bool = not-caught-fail(early_secret_69) in
                                    {4289}let m_90: bitstring = (if v_902 then zero else caught-fail) in
                                    {4290}let h_254: bitstring = (if v_902 then catch-fail(hash(@6_backend_h,m_90)) else caught-fail) in
                                    {4291}let v_903: bool = not-caught-fail(h_254) in
                                    {4288}let l_261: label = (if v_902 then tls13_ext_res_binder else caught-fail) in
                                    {4292}let x_295: bitstring = (if v_903 then (l_261,h_254) else caught-fail) in
                                    {4293}let binder_key_46: bitstring = (if v_902 then catch-fail((if v_903 then hmac(@6_backend_h,early_secret_69,x_295) else fail-any)) else caught-fail) in
                                    {4294}let v_904: bool = not-caught-fail(binder_key_46) in
                                    {4295}let v_905: bitstring = catch-fail((if v_902 then (if v_904 then (early_secret_69,binder_key_46) else fail-any) else fail-any)) in
                                    {4296}let v_906: bool = (not-caught-fail(v_905) && success?(1-proj-2-tuple(v_905))) in
                                    {4297}let kb_46: mac_key = (if v_906 then 2-proj-2-tuple(v_905) else caught-fail) in
                                    {4298}let es_70: bitstring = (if v_906 then 1-proj-2-tuple(v_905) else caught-fail) in
                                    {4281}let offer_28: params = nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_2,SNI(backend_dom),ech_ext_9,@6_i_extra_ext,trunc_client_psk_ext(id_52)) in
                                    {4282}let cur_log'_16: bitstring = (cur_log_IN1_HRR_1,CH(i_cr_4,offer_28)) in
                                    {4299}let binders_15: bitstring = (if v_906 then catch-fail(hmac(@6_backend_h,kb_46,cur_log'_16)) else caught-fail) in
                                    {4300}let v_907: bool = not-caught-fail(binders_15) in
                                    {4301}let v_908: bitstring = catch-fail((if v_906 then (if v_907 then (client_psk_ext(id_52,binders_15),(psk_107,id_52,es_70,is_safe_42)) else fail-any) else fail-any)) in
                                    {4302}let v_909: bool = (not-caught-fail(v_908) && success?(1-proj-2-tuple(v_908))) in
                                    {4303}let psk_data_26: bitstring = (if v_909 then 2-proj-2-tuple(v_908) else caught-fail) in
                                    {4304}let psk_ext_44: preSharedKeyExt = (if v_909 then 1-proj-2-tuple(v_908) else caught-fail) in
                                    {4307}new fake_id_6[]: identityPsk;
                                    {4308}new fake_binder_6[]: bitstring;
                                    {4314}let v_910: hpkeContext = (if v_909 then catch-fail(context) else caught-fail) in
                                    {4315}let v_911: bool = (not-caught-fail(v_910) && ((S =nf 1-proj-hpke_context(v_910)) && success?(1-proj-hpke_context(v_910)))) in
                                    {4316}let base_nonce_6: bitstring = (if v_911 then 3-proj-hpke_context(v_910) else caught-fail) in
                                    {4317}let key_6: aead_key = (if v_911 then 2-proj-hpke_context(v_910) else caught-fail) in
                                    {4313}let n_5: nat = (if v_909 then 2 else caught-fail) in
                                    {4310}let o_ech_ext_ADD_5: echExt = (if v_909 then ECHClientHelloOuter(ech_h_6,ech_a_6,config_id_4,zero,zero) else caught-fail) in
                                    {4309}let o_psk_ext_7: preSharedKeyExt = (if v_909 then (if @6_use_psk then client_psk_ext(fake_id_6,fake_binder_6) else empty_psk_ext) else caught-fail) in
                                    {4311}let o_offer_ADD_5: params = (if v_909 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_3,SNI(o_dom_4),o_ech_ext_ADD_5,empty_extra_ext,o_psk_ext_7) else caught-fail) in
                                    {4312}let o_client_hello_ADD_5: msg = (if v_909 then CH(o_cr_5,o_offer_ADD_5) else caught-fail) in
                                    {4305}let i_offer_5: params = (if v_909 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_2,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_44) else caught-fail) in
                                    {4306}let i_client_hello_7: msg = (if v_909 then CH(i_cr_4,i_offer_5) else caught-fail) in
                                    {4318}let payload_6: bitstring = (if v_909 then catch-fail((if v_911 then aead_enc(ech_a_6,key_6,(base_nonce_6,n_5),o_client_hello_ADD_5,i_client_hello_7) else fail-any)) else caught-fail) in
                                    {4319}let v_912: bool = not-caught-fail(payload_6) in
                                    {4320}let o_ech_ext_7: echExt = (if v_912 then ECHClientHelloOuter(ech_h_6,ech_a_6,config_id_4,zero,payload_6) else caught-fail) in
                                    {4321}let o_offer_11: params = (if v_912 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_3,SNI(o_dom_4),o_ech_ext_7,empty_extra_ext,o_psk_ext_7) else caught-fail) in
                                    {4322}let (o_client_hello'_3: msg,i_client_hello'_3: msg,i_cr'_3: bytes32,i_kex_data'_3: bitstring,psk_data'_17: bitstring) = (if v_909 then (if v_912 then (CH(o_cr_5,o_offer_11),i_client_hello_7,i_cr_4,i_kex_data_4,psk_data_26) else fail-any) else fail-any) in
                                    {4323}out(io, o_client_hello'_3);
                                    {4324}in(io, server_hello'_16: msg);
                                    {4325}let SH(B32(sr24'_3: bytes24,sr8'_3: bytes8),params'_3: params) = server_hello'_16 in
                                    {4327}let sh_modified_5: msg = SH(B32(sr24'_3,zero8),params'_3) in
                                    {4326}let cur_log_IN1_HRR_IN2_3: bitstring = (cur_log_IN1_HRR_1,i_client_hello'_3) in
                                    {4328}let cur_log_sh_5: bitstring = (cur_log_IN1_HRR_IN2_3,sh_modified_5) in
                                    {4329}let transcript_ech_conf_5: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_5)) in
                                    {4330}let v_913: bool = not-caught-fail(transcript_ech_conf_5) in
                                    {4332}let k_85: bitstring = (if v_913 then catch-fail(b32_2_b(get_random(i_client_hello'_3))) else caught-fail) in
                                    {4333}let v_914: bool = not-caught-fail(k_85) in
                                    {4331}let s_93: bitstring = (if v_913 then zero else caught-fail) in
                                    {4334}let k_86: bitstring = (if v_913 then catch-fail((if v_914 then hmac(@6_backend_h,s_93,k_85) else fail-any)) else caught-fail) in
                                    {4335}let v_915: bool = not-caught-fail(k_86) in
                                    {4336}let l_262: label = (if v_915 then ech_accept_confirmation else caught-fail) in
                                    {4337}let x_296: bitstring = (if v_915 then (l_262,cur_log_sh_5) else caught-fail) in
                                    {4338}let sr8_7: bytes8 = (if v_913 then catch-fail(crop_into_bytes8((if v_915 then hmac(@6_backend_h,k_86,x_296) else fail-any))) else caught-fail) in
                                    {4339}let v_916: bool = not-caught-fail(sr8_7) in
                                    {4340}if (B32(sr24'_3,sr8'_3) = (if v_913 then (if v_916 then B32(sr24'_3,sr8_7) else fail-any) else fail-any)) then
                                    {4341}let (x_297: bitstring,g_24: group) = i_kex_data'_3 in
                                    {4342}let (psk_offer_21: preSharedKey,id_offer_21: identityPsk,es_offer_21: bitstring,is_safe_offer_21: bool) = psk_data'_17 in
                                    {4343}event Client_PSKOffer(@6_id_client,psk_offer_21,id_offer_21,is_safe_offer_21);
                                    {4344}event Client_Rand_client(@6_id_client,i_cr'_3);
                                    {4345}event Client_DH_client(@6_id_client,dh_pub(g_24,x_297));
                                    {4346}event Client_server_domain(@6_id_client,backend_dom);
                                    {4347}let SH(sr_32: bytes32,mode_26: params) = server_hello'_16 in
                                    {4348}event Client_Rand_server(@6_id_client,sr_32);
                                    {4349}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_24,gy_22: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_45: preSharedKeyExt) = mode_26 in
                                    (
                                        {4351}event Client_DH_server(@6_id_client,gy_22);
                                        {4352}let v_917: bool = (psk_ext_45 = empty_psk_ext) in
                                        {4353}let psk_108: preSharedKey = (if v_917 then NoPsk else caught-fail) in
                                        {4355}let k_87: bitstring = (if v_917 then catch-fail(psk2b(psk_108)) else caught-fail) in
                                        {4356}let v_918: bool = not-caught-fail(k_87) in
                                        {4354}let s_94: bitstring = (if v_917 then zero else caught-fail) in
                                        {4357}let early_secret_70: bitstring = (if v_917 then catch-fail((if v_918 then hmac(@6_backend_h,s_94,k_87) else fail-any)) else caught-fail) in
                                        {4358}let v_919: bool = not-caught-fail(early_secret_70) in
                                        {4360}let m_91: bitstring = (if v_919 then zero else caught-fail) in
                                        {4361}let h_255: bitstring = (if v_919 then catch-fail(hash(@6_backend_h,m_91)) else caught-fail) in
                                        {4362}let v_920: bool = not-caught-fail(h_255) in
                                        {4359}let l_263: label = (if v_919 then tls13_ext_res_binder else caught-fail) in
                                        {4363}let x_298: bitstring = (if v_920 then (l_263,h_255) else caught-fail) in
                                        {4364}let binder_key_47: bitstring = (if v_919 then catch-fail((if v_920 then hmac(@6_backend_h,early_secret_70,x_298) else fail-any)) else caught-fail) in
                                        {4365}let v_921: bool = not-caught-fail(binder_key_47) in
                                        {4366}let v_922: bitstring = (if v_917 then catch-fail((if v_919 then (if v_921 then (early_secret_70,binder_key_47) else fail-any) else fail-any)) else caught-fail) in
                                        {4367}let v_923: bool = (not-caught-fail(v_922) && success?(1-proj-2-tuple(v_922))) in
                                        {4368}let kb_47: mac_key = (if v_923 then 2-proj-2-tuple(v_922) else caught-fail) in
                                        {4369}let es_71: bitstring = (if v_923 then 1-proj-2-tuple(v_922) else caught-fail) in
                                        {4370}let v_924: bitstring = (if not(v_917) then catch-fail(psk_data'_17) else caught-fail) in
                                        {4371}let v_925: bool = (not-caught-fail(v_924) && success?(1-proj-4-tuple(v_924))) in
                                        {4372}let is_safe_43: bool = (if v_925 then 4-proj-4-tuple(v_924) else caught-fail) in
                                        {4373}let es_72: bitstring = (if v_925 then 3-proj-4-tuple(v_924) else caught-fail) in
                                        {4374}let id_53: identityPsk = (if v_925 then 2-proj-4-tuple(v_924) else caught-fail) in
                                        {4375}let psk_109: preSharedKey = (if v_925 then 1-proj-4-tuple(v_924) else caught-fail) in
                                        {4376}let (psk_110: preSharedKey,early_secret_71: bitstring,valid_21: bool,safe_psk_27: bool) = (if v_917 then (if v_923 then (NoPsk,es_71,true,false) else fail-any) else (if v_925 then (psk_109,es_72,((psk_109 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_45)),is_safe_43) else fail-any)) in
                                        {4377}event Client_PSKChoosen(@6_id_client,psk_110,safe_psk_27);
                                        {4378}if valid_21 then
                                        (
                                            {4381}new s_95[]: seed;
                                            {4379}let gxy_43: element = catch-fail(dh_decap_fun(g_24,gy_22,x_297)) in
                                            {4380}let v_926: bool = not-caught-fail(gxy_43) in
                                            {4382}let gxy_44: element = (if v_926 then gxy_43 else dh_f(s_95)) in
                                            {4383}event Client_DH_gxy(@6_id_client,gxy_44);
                                            {4385}let m_92: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {4386}let v_927: bool = not-caught-fail(m_92) in
                                            {4387}let h_256: bitstring = (if v_927 then catch-fail(hash(@6_backend_h,m_92)) else caught-fail) in
                                            {4388}let v_928: bool = not-caught-fail(h_256) in
                                            {4384}let l_264: label = tls13_derived in
                                            {4389}let x_299: bitstring = (if v_928 then (l_264,h_256) else caught-fail) in
                                            {4390}let extra_49: bitstring = catch-fail((if v_927 then (if v_928 then hmac(@6_backend_h,early_secret_71,x_299) else fail-any) else fail-any)) in
                                            {4391}let v_929: bool = not-caught-fail(extra_49) in
                                            {4392}let handshake_secret_22: bitstring = (if v_929 then hmac(@6_backend_h,extra_49,gxy_44) else fail-any) in
                                            {4394}let m_93: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {4395}let v_930: bool = not-caught-fail(m_93) in
                                            {4396}let h_257: bitstring = (if v_930 then catch-fail(hash(@6_backend_h,m_93)) else caught-fail) in
                                            {4397}let v_931: bool = not-caught-fail(h_257) in
                                            {4393}let l_265: label = tls13_derived in
                                            {4398}let x_300: bitstring = (if v_931 then (l_265,h_257) else caught-fail) in
                                            {4399}let extra_50: bitstring = catch-fail((if v_930 then (if v_931 then hmac(@6_backend_h,handshake_secret_22,x_300) else fail-any) else fail-any)) in
                                            {4400}let v_932: bool = not-caught-fail(extra_50) in
                                            {4401}let k_88: bitstring = (if v_932 then zero else caught-fail) in
                                            {4402}let master_secret_51: bitstring = (if v_932 then catch-fail(hmac(@6_backend_h,handshake_secret_22,k_88)) else caught-fail) in
                                            {4403}let v_933: bool = not-caught-fail(master_secret_51) in
                                            {4350}let cur_log2_49: bitstring = (cur_log_IN1_HRR_IN2_3,server_hello'_16) in
                                            {4405}let h_258: bitstring = (if v_933 then catch-fail(hash(@6_backend_h,cur_log2_49)) else caught-fail) in
                                            {4406}let v_934: bool = not-caught-fail(h_258) in
                                            {4404}let l_266: label = (if v_933 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {4407}let x_301: bitstring = (if v_934 then (l_266,h_258) else caught-fail) in
                                            {4408}let client_hts_22: bitstring = (if v_933 then catch-fail((if v_934 then hmac(@6_backend_h,handshake_secret_22,x_301) else fail-any)) else caught-fail) in
                                            {4409}let v_935: bool = not-caught-fail(client_hts_22) in
                                            {4411}let h_259: bitstring = (if v_935 then catch-fail(hash(@6_backend_h,cur_log2_49)) else caught-fail) in
                                            {4412}let v_936: bool = not-caught-fail(h_259) in
                                            {4410}let l_267: label = (if v_935 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {4413}let x_302: bitstring = (if v_936 then (l_267,h_259) else caught-fail) in
                                            {4414}let server_hts_22: bitstring = (if v_935 then catch-fail((if v_936 then hmac(@6_backend_h,handshake_secret_22,x_302) else fail-any)) else caught-fail) in
                                            {4415}let v_937: bool = not-caught-fail(server_hts_22) in
                                            {4417}let h_260: bitstring = (if v_937 then zero else caught-fail) in
                                            {4416}let l_268: label = (if v_937 then tls13_key else caught-fail) in
                                            {4418}let x_303: bitstring = (if v_937 then (l_268,h_260) else caught-fail) in
                                            {4419}let client_wkh_22: bitstring = (if v_937 then catch-fail(hmac(@6_backend_h,client_hts_22,x_303)) else caught-fail) in
                                            {4420}let v_938: bool = not-caught-fail(client_wkh_22) in
                                            {4422}let h_261: bitstring = (if v_938 then zero else caught-fail) in
                                            {4421}let l_269: label = (if v_938 then tls13_key else caught-fail) in
                                            {4423}let x_304: bitstring = (if v_938 then (l_269,h_261) else caught-fail) in
                                            {4424}let server_wkh_22: bitstring = (if v_938 then catch-fail(hmac(@6_backend_h,server_hts_22,x_304)) else caught-fail) in
                                            {4425}let v_939: bool = not-caught-fail(server_wkh_22) in
                                            {4427}let h_262: bitstring = (if v_939 then zero else caught-fail) in
                                            {4426}let l_270: label = (if v_939 then tls13_finished else caught-fail) in
                                            {4428}let x_305: bitstring = (if v_939 then (l_270,h_262) else caught-fail) in
                                            {4429}let client_fk_22: bitstring = (if v_939 then catch-fail(hmac(@6_backend_h,client_hts_22,x_305)) else caught-fail) in
                                            {4430}let v_940: bool = not-caught-fail(client_fk_22) in
                                            {4432}let h_263: bitstring = (if v_940 then zero else caught-fail) in
                                            {4431}let l_271: label = (if v_940 then tls13_finished else caught-fail) in
                                            {4433}let x_306: bitstring = (if v_940 then (l_271,h_263) else caught-fail) in
                                            {4434}let server_fk_22: bitstring = (if v_940 then catch-fail(hmac(@6_backend_h,server_hts_22,x_306)) else caught-fail) in
                                            {4435}let v_941: bool = not-caught-fail(server_fk_22) in
                                            {4436}let (master_secret_52: bitstring,chk_29: aead_key,shk_28: aead_key,cfin_29: mac_key,sfin_28: mac_key) = (if v_932 then (if v_933 then (if v_935 then (if v_937 then (if v_938 then (if v_939 then (if v_940 then (if v_941 then (master_secret_51,client_wkh_22,server_wkh_22,client_fk_22,server_fk_22) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {4437}event Client_chk(@6_id_client,chk_29);
                                            {4438}event Client_shk(@6_id_client,shk_28);
                                            {4439}event Client_cfin(@6_id_client,cfin_29);
                                            {4440}event Client_sfin(@6_id_client,sfin_28);
                                            {4441}in(io, enc_ee_msg_21: bitstring);
                                            {4442}let ee_msg_22: msg = aead_dec(@6_backend_a,shk_28,0,zero,enc_ee_msg_21) in
                                            {4443}let EE(ech_ee_21: echExt,extra_ee_21: extraExt) = ee_msg_22 in
                                            {4444}let cur_log2_50: bitstring = (cur_log2_49,ee_msg_22) in
                                            {4445}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_3,sr_32,@6_backend_h,@6_backend_a,c_dom_6,backend_dom,psk_110,safe_psk_27,@6_comp_psk,master_secret_52,chk_29,0,shk_28,1,cfin_29,sfin_28,cur_log2_50)))
                                        )
                                        else
                                            {4446}out(io, illegal_parameter)
                                    )
                                    else
                                        {4447}out(io, illegal_parameter)
                                )
                                else
                                    {4624}get pre_shared_keys(c_dom'_9: domain,=backend_dom,=@6_backend_h,id_54: identityPsk,psk_111: preSharedKey,idP_11: idProc,is_safe_44: bool) in
                                    {4448}event Selected_one_time_used_psk(@6_id_client,psk_111,is_safe_44);
                                    {4449}event Selected_psk(c_dom_6,c_dom'_9,idP_11,is_safe_44);
                                    {4450}event Selected_psk_no_missmatch(@6_id_client,backend_dom,@6_backend_h,psk_111,id_54);
                                    {4451}event Selected_psk_with_ID(c_dom_6,c_dom'_9,id_54,idP_11,is_safe_44);
                                    {4452}let v_942: bitstring = (id_54,psk_111,is_safe_44) in
                                    {4453}let v_943: bool = success?(1-proj-3-tuple(v_942)) in
                                    {4454}let is_safe_45: bool = (if v_943 then 3-proj-3-tuple(v_942) else caught-fail) in
                                    {4455}let psk_112: preSharedKey = (if v_943 then 2-proj-3-tuple(v_942) else caught-fail) in
                                    {4456}let id_55: identityPsk = (if v_943 then 1-proj-3-tuple(v_942) else caught-fail) in
                                    {4460}let k_89: bitstring = (if v_943 then catch-fail(psk2b(psk_112)) else caught-fail) in
                                    {4461}let v_944: bool = not-caught-fail(k_89) in
                                    {4459}let s_96: bitstring = (if v_943 then zero else caught-fail) in
                                    {4462}let early_secret_72: bitstring = (if v_943 then catch-fail((if v_944 then hmac(@6_backend_h,s_96,k_89) else fail-any)) else caught-fail) in
                                    {4463}let v_945: bool = not-caught-fail(early_secret_72) in
                                    {4465}let m_94: bitstring = (if v_945 then zero else caught-fail) in
                                    {4466}let h_264: bitstring = (if v_945 then catch-fail(hash(@6_backend_h,m_94)) else caught-fail) in
                                    {4467}let v_946: bool = not-caught-fail(h_264) in
                                    {4464}let l_272: label = (if v_945 then tls13_ext_res_binder else caught-fail) in
                                    {4468}let x_307: bitstring = (if v_946 then (l_272,h_264) else caught-fail) in
                                    {4469}let binder_key_48: bitstring = (if v_945 then catch-fail((if v_946 then hmac(@6_backend_h,early_secret_72,x_307) else fail-any)) else caught-fail) in
                                    {4470}let v_947: bool = not-caught-fail(binder_key_48) in
                                    {4471}let v_948: bitstring = (if v_943 then catch-fail((if v_945 then (if v_947 then (early_secret_72,binder_key_48) else fail-any) else fail-any)) else caught-fail) in
                                    {4472}let v_949: bool = (not-caught-fail(v_948) && success?(1-proj-2-tuple(v_948))) in
                                    {4473}let kb_48: mac_key = (if v_949 then 2-proj-2-tuple(v_948) else caught-fail) in
                                    {4474}let es_73: bitstring = (if v_949 then 1-proj-2-tuple(v_948) else caught-fail) in
                                    {4457}let offer_29: params = (if v_943 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_2,SNI(backend_dom),ech_ext_9,@6_i_extra_ext,trunc_client_psk_ext(id_55)) else caught-fail) in
                                    {4458}let cur_log'_17: bitstring = (if v_943 then (cur_log_IN1_HRR_1,CH(i_cr_4,offer_29)) else caught-fail) in
                                    {4475}let binders_16: bitstring = (if v_949 then catch-fail(hmac(@6_backend_h,kb_48,cur_log'_17)) else caught-fail) in
                                    {4476}let v_950: bool = not-caught-fail(binders_16) in
                                    {4477}let v_951: bitstring = catch-fail((if v_943 then (if v_949 then (if v_950 then (client_psk_ext(id_55,binders_16),(psk_112,id_55,es_73,is_safe_45)) else fail-any) else fail-any) else fail-any)) in
                                    {4478}let v_952: bool = (not-caught-fail(v_951) && success?(1-proj-2-tuple(v_951))) in
                                    {4479}let psk_data_27: bitstring = (if v_952 then 2-proj-2-tuple(v_951) else caught-fail) in
                                    {4480}let psk_ext_46: preSharedKeyExt = (if v_952 then 1-proj-2-tuple(v_951) else caught-fail) in
                                    {4483}new fake_id_7[]: identityPsk;
                                    {4484}new fake_binder_7[]: bitstring;
                                    {4490}let v_953: hpkeContext = (if v_952 then catch-fail(context) else caught-fail) in
                                    {4491}let v_954: bool = (not-caught-fail(v_953) && ((S =nf 1-proj-hpke_context(v_953)) && success?(1-proj-hpke_context(v_953)))) in
                                    {4492}let base_nonce_7: bitstring = (if v_954 then 3-proj-hpke_context(v_953) else caught-fail) in
                                    {4493}let key_7: aead_key = (if v_954 then 2-proj-hpke_context(v_953) else caught-fail) in
                                    {4489}let n_6: nat = (if v_952 then 2 else caught-fail) in
                                    {4486}let o_ech_ext_ADD_6: echExt = (if v_952 then ECHClientHelloOuter(ech_h_6,ech_a_6,config_id_4,zero,zero) else caught-fail) in
                                    {4485}let o_psk_ext_8: preSharedKeyExt = (if v_952 then (if @6_use_psk then client_psk_ext(fake_id_7,fake_binder_7) else empty_psk_ext) else caught-fail) in
                                    {4487}let o_offer_ADD_6: params = (if v_952 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_3,SNI(o_dom_4),o_ech_ext_ADD_6,empty_extra_ext,o_psk_ext_8) else caught-fail) in
                                    {4488}let o_client_hello_ADD_6: msg = (if v_952 then CH(o_cr_5,o_offer_ADD_6) else caught-fail) in
                                    {4481}let i_offer_6: params = (if v_952 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_2,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_46) else caught-fail) in
                                    {4482}let i_client_hello_8: msg = (if v_952 then CH(i_cr_4,i_offer_6) else caught-fail) in
                                    {4494}let payload_7: bitstring = (if v_952 then catch-fail((if v_954 then aead_enc(ech_a_6,key_7,(base_nonce_7,n_6),o_client_hello_ADD_6,i_client_hello_8) else fail-any)) else caught-fail) in
                                    {4495}let v_955: bool = not-caught-fail(payload_7) in
                                    {4496}let o_ech_ext_8: echExt = (if v_955 then ECHClientHelloOuter(ech_h_6,ech_a_6,config_id_4,zero,payload_7) else caught-fail) in
                                    {4497}let o_offer_12: params = (if v_955 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_3,SNI(o_dom_4),o_ech_ext_8,empty_extra_ext,o_psk_ext_8) else caught-fail) in
                                    {4498}let (o_client_hello'_4: msg,i_client_hello'_4: msg,i_cr'_4: bytes32,i_kex_data'_4: bitstring,psk_data'_18: bitstring) = (if v_952 then (if v_955 then (CH(o_cr_5,o_offer_12),i_client_hello_8,i_cr_4,i_kex_data_4,psk_data_27) else fail-any) else fail-any) in
                                    {4499}out(io, o_client_hello'_4);
                                    {4500}in(io, server_hello'_17: msg);
                                    {4501}let SH(B32(sr24'_4: bytes24,sr8'_4: bytes8),params'_4: params) = server_hello'_17 in
                                    {4503}let sh_modified_6: msg = SH(B32(sr24'_4,zero8),params'_4) in
                                    {4502}let cur_log_IN1_HRR_IN2_4: bitstring = (cur_log_IN1_HRR_1,i_client_hello'_4) in
                                    {4504}let cur_log_sh_6: bitstring = (cur_log_IN1_HRR_IN2_4,sh_modified_6) in
                                    {4505}let transcript_ech_conf_6: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_6)) in
                                    {4506}let v_956: bool = not-caught-fail(transcript_ech_conf_6) in
                                    {4508}let k_90: bitstring = (if v_956 then catch-fail(b32_2_b(get_random(i_client_hello'_4))) else caught-fail) in
                                    {4509}let v_957: bool = not-caught-fail(k_90) in
                                    {4507}let s_97: bitstring = (if v_956 then zero else caught-fail) in
                                    {4510}let k_91: bitstring = (if v_956 then catch-fail((if v_957 then hmac(@6_backend_h,s_97,k_90) else fail-any)) else caught-fail) in
                                    {4511}let v_958: bool = not-caught-fail(k_91) in
                                    {4512}let l_273: label = (if v_958 then ech_accept_confirmation else caught-fail) in
                                    {4513}let x_308: bitstring = (if v_958 then (l_273,cur_log_sh_6) else caught-fail) in
                                    {4514}let sr8_8: bytes8 = (if v_956 then catch-fail(crop_into_bytes8((if v_958 then hmac(@6_backend_h,k_91,x_308) else fail-any))) else caught-fail) in
                                    {4515}let v_959: bool = not-caught-fail(sr8_8) in
                                    {4516}if (B32(sr24'_4,sr8'_4) = (if v_956 then (if v_959 then B32(sr24'_4,sr8_8) else fail-any) else fail-any)) then
                                    {4517}let (x_309: bitstring,g_25: group) = i_kex_data'_4 in
                                    {4518}let (psk_offer_22: preSharedKey,id_offer_22: identityPsk,es_offer_22: bitstring,is_safe_offer_22: bool) = psk_data'_18 in
                                    {4519}event Client_PSKOffer(@6_id_client,psk_offer_22,id_offer_22,is_safe_offer_22);
                                    {4520}event Client_Rand_client(@6_id_client,i_cr'_4);
                                    {4521}event Client_DH_client(@6_id_client,dh_pub(g_25,x_309));
                                    {4522}event Client_server_domain(@6_id_client,backend_dom);
                                    {4523}let SH(sr_33: bytes32,mode_27: params) = server_hello'_17 in
                                    {4524}event Client_Rand_server(@6_id_client,sr_33);
                                    {4525}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_25,gy_23: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_47: preSharedKeyExt) = mode_27 in
                                    (
                                        {4527}event Client_DH_server(@6_id_client,gy_23);
                                        {4528}let v_960: bool = (psk_ext_47 = empty_psk_ext) in
                                        {4529}let psk_113: preSharedKey = (if v_960 then NoPsk else caught-fail) in
                                        {4531}let k_92: bitstring = (if v_960 then catch-fail(psk2b(psk_113)) else caught-fail) in
                                        {4532}let v_961: bool = not-caught-fail(k_92) in
                                        {4530}let s_98: bitstring = (if v_960 then zero else caught-fail) in
                                        {4533}let early_secret_73: bitstring = (if v_960 then catch-fail((if v_961 then hmac(@6_backend_h,s_98,k_92) else fail-any)) else caught-fail) in
                                        {4534}let v_962: bool = not-caught-fail(early_secret_73) in
                                        {4536}let m_95: bitstring = (if v_962 then zero else caught-fail) in
                                        {4537}let h_265: bitstring = (if v_962 then catch-fail(hash(@6_backend_h,m_95)) else caught-fail) in
                                        {4538}let v_963: bool = not-caught-fail(h_265) in
                                        {4535}let l_274: label = (if v_962 then tls13_ext_res_binder else caught-fail) in
                                        {4539}let x_310: bitstring = (if v_963 then (l_274,h_265) else caught-fail) in
                                        {4540}let binder_key_49: bitstring = (if v_962 then catch-fail((if v_963 then hmac(@6_backend_h,early_secret_73,x_310) else fail-any)) else caught-fail) in
                                        {4541}let v_964: bool = not-caught-fail(binder_key_49) in
                                        {4542}let v_965: bitstring = (if v_960 then catch-fail((if v_962 then (if v_964 then (early_secret_73,binder_key_49) else fail-any) else fail-any)) else caught-fail) in
                                        {4543}let v_966: bool = (not-caught-fail(v_965) && success?(1-proj-2-tuple(v_965))) in
                                        {4544}let kb_49: mac_key = (if v_966 then 2-proj-2-tuple(v_965) else caught-fail) in
                                        {4545}let es_74: bitstring = (if v_966 then 1-proj-2-tuple(v_965) else caught-fail) in
                                        {4546}let v_967: bitstring = (if not(v_960) then catch-fail(psk_data'_18) else caught-fail) in
                                        {4547}let v_968: bool = (not-caught-fail(v_967) && success?(1-proj-4-tuple(v_967))) in
                                        {4548}let is_safe_46: bool = (if v_968 then 4-proj-4-tuple(v_967) else caught-fail) in
                                        {4549}let es_75: bitstring = (if v_968 then 3-proj-4-tuple(v_967) else caught-fail) in
                                        {4550}let id_56: identityPsk = (if v_968 then 2-proj-4-tuple(v_967) else caught-fail) in
                                        {4551}let psk_114: preSharedKey = (if v_968 then 1-proj-4-tuple(v_967) else caught-fail) in
                                        {4552}let (psk_115: preSharedKey,early_secret_74: bitstring,valid_22: bool,safe_psk_28: bool) = (if v_960 then (if v_966 then (NoPsk,es_74,true,false) else fail-any) else (if v_968 then (psk_114,es_75,((psk_114 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_47)),is_safe_46) else fail-any)) in
                                        {4553}event Client_PSKChoosen(@6_id_client,psk_115,safe_psk_28);
                                        {4554}if valid_22 then
                                        (
                                            {4557}new s_99[]: seed;
                                            {4555}let gxy_45: element = catch-fail(dh_decap_fun(g_25,gy_23,x_309)) in
                                            {4556}let v_969: bool = not-caught-fail(gxy_45) in
                                            {4558}let gxy_46: element = (if v_969 then gxy_45 else dh_f(s_99)) in
                                            {4559}event Client_DH_gxy(@6_id_client,gxy_46);
                                            {4561}let m_96: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {4562}let v_970: bool = not-caught-fail(m_96) in
                                            {4563}let h_266: bitstring = (if v_970 then catch-fail(hash(@6_backend_h,m_96)) else caught-fail) in
                                            {4564}let v_971: bool = not-caught-fail(h_266) in
                                            {4560}let l_275: label = tls13_derived in
                                            {4565}let x_311: bitstring = (if v_971 then (l_275,h_266) else caught-fail) in
                                            {4566}let extra_51: bitstring = catch-fail((if v_970 then (if v_971 then hmac(@6_backend_h,early_secret_74,x_311) else fail-any) else fail-any)) in
                                            {4567}let v_972: bool = not-caught-fail(extra_51) in
                                            {4568}let handshake_secret_23: bitstring = (if v_972 then hmac(@6_backend_h,extra_51,gxy_46) else fail-any) in
                                            {4570}let m_97: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                            {4571}let v_973: bool = not-caught-fail(m_97) in
                                            {4572}let h_267: bitstring = (if v_973 then catch-fail(hash(@6_backend_h,m_97)) else caught-fail) in
                                            {4573}let v_974: bool = not-caught-fail(h_267) in
                                            {4569}let l_276: label = tls13_derived in
                                            {4574}let x_312: bitstring = (if v_974 then (l_276,h_267) else caught-fail) in
                                            {4575}let extra_52: bitstring = catch-fail((if v_973 then (if v_974 then hmac(@6_backend_h,handshake_secret_23,x_312) else fail-any) else fail-any)) in
                                            {4576}let v_975: bool = not-caught-fail(extra_52) in
                                            {4577}let k_93: bitstring = (if v_975 then zero else caught-fail) in
                                            {4578}let master_secret_53: bitstring = (if v_975 then catch-fail(hmac(@6_backend_h,handshake_secret_23,k_93)) else caught-fail) in
                                            {4579}let v_976: bool = not-caught-fail(master_secret_53) in
                                            {4526}let cur_log2_51: bitstring = (cur_log_IN1_HRR_IN2_4,server_hello'_17) in
                                            {4581}let h_268: bitstring = (if v_976 then catch-fail(hash(@6_backend_h,cur_log2_51)) else caught-fail) in
                                            {4582}let v_977: bool = not-caught-fail(h_268) in
                                            {4580}let l_277: label = (if v_976 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {4583}let x_313: bitstring = (if v_977 then (l_277,h_268) else caught-fail) in
                                            {4584}let client_hts_23: bitstring = (if v_976 then catch-fail((if v_977 then hmac(@6_backend_h,handshake_secret_23,x_313) else fail-any)) else caught-fail) in
                                            {4585}let v_978: bool = not-caught-fail(client_hts_23) in
                                            {4587}let h_269: bitstring = (if v_978 then catch-fail(hash(@6_backend_h,cur_log2_51)) else caught-fail) in
                                            {4588}let v_979: bool = not-caught-fail(h_269) in
                                            {4586}let l_278: label = (if v_978 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {4589}let x_314: bitstring = (if v_979 then (l_278,h_269) else caught-fail) in
                                            {4590}let server_hts_23: bitstring = (if v_978 then catch-fail((if v_979 then hmac(@6_backend_h,handshake_secret_23,x_314) else fail-any)) else caught-fail) in
                                            {4591}let v_980: bool = not-caught-fail(server_hts_23) in
                                            {4593}let h_270: bitstring = (if v_980 then zero else caught-fail) in
                                            {4592}let l_279: label = (if v_980 then tls13_key else caught-fail) in
                                            {4594}let x_315: bitstring = (if v_980 then (l_279,h_270) else caught-fail) in
                                            {4595}let client_wkh_23: bitstring = (if v_980 then catch-fail(hmac(@6_backend_h,client_hts_23,x_315)) else caught-fail) in
                                            {4596}let v_981: bool = not-caught-fail(client_wkh_23) in
                                            {4598}let h_271: bitstring = (if v_981 then zero else caught-fail) in
                                            {4597}let l_280: label = (if v_981 then tls13_key else caught-fail) in
                                            {4599}let x_316: bitstring = (if v_981 then (l_280,h_271) else caught-fail) in
                                            {4600}let server_wkh_23: bitstring = (if v_981 then catch-fail(hmac(@6_backend_h,server_hts_23,x_316)) else caught-fail) in
                                            {4601}let v_982: bool = not-caught-fail(server_wkh_23) in
                                            {4603}let h_272: bitstring = (if v_982 then zero else caught-fail) in
                                            {4602}let l_281: label = (if v_982 then tls13_finished else caught-fail) in
                                            {4604}let x_317: bitstring = (if v_982 then (l_281,h_272) else caught-fail) in
                                            {4605}let client_fk_23: bitstring = (if v_982 then catch-fail(hmac(@6_backend_h,client_hts_23,x_317)) else caught-fail) in
                                            {4606}let v_983: bool = not-caught-fail(client_fk_23) in
                                            {4608}let h_273: bitstring = (if v_983 then zero else caught-fail) in
                                            {4607}let l_282: label = (if v_983 then tls13_finished else caught-fail) in
                                            {4609}let x_318: bitstring = (if v_983 then (l_282,h_273) else caught-fail) in
                                            {4610}let server_fk_23: bitstring = (if v_983 then catch-fail(hmac(@6_backend_h,server_hts_23,x_318)) else caught-fail) in
                                            {4611}let v_984: bool = not-caught-fail(server_fk_23) in
                                            {4612}let (master_secret_54: bitstring,chk_30: aead_key,shk_29: aead_key,cfin_30: mac_key,sfin_29: mac_key) = (if v_975 then (if v_976 then (if v_978 then (if v_980 then (if v_981 then (if v_982 then (if v_983 then (if v_984 then (master_secret_53,client_wkh_23,server_wkh_23,client_fk_23,server_fk_23) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {4613}event Client_chk(@6_id_client,chk_30);
                                            {4614}event Client_shk(@6_id_client,shk_29);
                                            {4615}event Client_cfin(@6_id_client,cfin_30);
                                            {4616}event Client_sfin(@6_id_client,sfin_29);
                                            {4617}in(io, enc_ee_msg_22: bitstring);
                                            {4618}let ee_msg_23: msg = aead_dec(@6_backend_a,shk_29,0,zero,enc_ee_msg_22) in
                                            {4619}let EE(ech_ee_22: echExt,extra_ee_22: extraExt) = ee_msg_23 in
                                            {4620}let cur_log2_52: bitstring = (cur_log2_51,ee_msg_23) in
                                            {4621}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_4,sr_33,@6_backend_h,@6_backend_a,c_dom_6,backend_dom,psk_115,safe_psk_28,@6_comp_psk,master_secret_54,chk_30,0,shk_29,1,cfin_30,sfin_29,cur_log2_52)))
                                        )
                                        else
                                            {4622}out(io, illegal_parameter)
                                    )
                                    else
                                        {4623}out(io, illegal_parameter)
                            )
                            else
                                {4625}let psk_116: preSharedKey = NoPsk in
                                {4627}let k_94: bitstring = catch-fail(psk2b(psk_116)) in
                                {4628}let v_985: bool = not-caught-fail(k_94) in
                                {4626}let s_100: bitstring = zero in
                                {4629}let early_secret_75: bitstring = catch-fail((if v_985 then hmac(@6_backend_h,s_100,k_94) else fail-any)) in
                                {4630}let v_986: bool = not-caught-fail(early_secret_75) in
                                {4632}let m_98: bitstring = (if v_986 then zero else caught-fail) in
                                {4633}let h_274: bitstring = (if v_986 then catch-fail(hash(@6_backend_h,m_98)) else caught-fail) in
                                {4634}let v_987: bool = not-caught-fail(h_274) in
                                {4631}let l_283: label = (if v_986 then tls13_ext_res_binder else caught-fail) in
                                {4635}let x_319: bitstring = (if v_987 then (l_283,h_274) else caught-fail) in
                                {4636}let binder_key_50: bitstring = (if v_986 then catch-fail((if v_987 then hmac(@6_backend_h,early_secret_75,x_319) else fail-any)) else caught-fail) in
                                {4637}let v_988: bool = not-caught-fail(binder_key_50) in
                                {4638}let v_989: bitstring = catch-fail((if v_986 then (if v_988 then (early_secret_75,binder_key_50) else fail-any) else fail-any)) in
                                {4639}let v_990: bool = (not-caught-fail(v_989) && success?(1-proj-2-tuple(v_989))) in
                                {4640}let kb_50: mac_key = (if v_990 then 2-proj-2-tuple(v_989) else caught-fail) in
                                {4641}let es_76: bitstring = (if v_990 then 1-proj-2-tuple(v_989) else caught-fail) in
                                {4642}let v_991: bitstring = catch-fail((if v_990 then (empty_psk_ext,(NoPsk,zero,es_76,false)) else fail-any)) in
                                {4643}let v_992: bool = (not-caught-fail(v_991) && success?(1-proj-2-tuple(v_991))) in
                                {4644}let psk_data_28: bitstring = (if v_992 then 2-proj-2-tuple(v_991) else caught-fail) in
                                {4645}let psk_ext_48: preSharedKeyExt = (if v_992 then 1-proj-2-tuple(v_991) else caught-fail) in
                                {4648}new fake_id_8[]: identityPsk;
                                {4649}new fake_binder_8[]: bitstring;
                                {4655}let v_993: hpkeContext = (if v_992 then catch-fail(context) else caught-fail) in
                                {4656}let v_994: bool = (not-caught-fail(v_993) && ((S =nf 1-proj-hpke_context(v_993)) && success?(1-proj-hpke_context(v_993)))) in
                                {4657}let base_nonce_8: bitstring = (if v_994 then 3-proj-hpke_context(v_993) else caught-fail) in
                                {4658}let key_8: aead_key = (if v_994 then 2-proj-hpke_context(v_993) else caught-fail) in
                                {4654}let n_7: nat = (if v_992 then 2 else caught-fail) in
                                {4651}let o_ech_ext_ADD_7: echExt = (if v_992 then ECHClientHelloOuter(ech_h_6,ech_a_6,config_id_4,zero,zero) else caught-fail) in
                                {4650}let o_psk_ext_9: preSharedKeyExt = (if v_992 then (if @6_use_psk then client_psk_ext(fake_id_8,fake_binder_8) else empty_psk_ext) else caught-fail) in
                                {4652}let o_offer_ADD_7: params = (if v_992 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_3,SNI(o_dom_4),o_ech_ext_ADD_7,empty_extra_ext,o_psk_ext_9) else caught-fail) in
                                {4653}let o_client_hello_ADD_7: msg = (if v_992 then CH(o_cr_5,o_offer_ADD_7) else caught-fail) in
                                {4646}let i_offer_7: params = (if v_992 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_2,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_48) else caught-fail) in
                                {4647}let i_client_hello_9: msg = (if v_992 then CH(i_cr_4,i_offer_7) else caught-fail) in
                                {4659}let payload_8: bitstring = (if v_992 then catch-fail((if v_994 then aead_enc(ech_a_6,key_8,(base_nonce_8,n_7),o_client_hello_ADD_7,i_client_hello_9) else fail-any)) else caught-fail) in
                                {4660}let v_995: bool = not-caught-fail(payload_8) in
                                {4661}let o_ech_ext_9: echExt = (if v_995 then ECHClientHelloOuter(ech_h_6,ech_a_6,config_id_4,zero,payload_8) else caught-fail) in
                                {4662}let o_offer_13: params = (if v_995 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_3,SNI(o_dom_4),o_ech_ext_9,empty_extra_ext,o_psk_ext_9) else caught-fail) in
                                {4663}let (o_client_hello'_5: msg,i_client_hello'_5: msg,i_cr'_5: bytes32,i_kex_data'_5: bitstring,psk_data'_19: bitstring) = (if v_992 then (if v_995 then (CH(o_cr_5,o_offer_13),i_client_hello_9,i_cr_4,i_kex_data_4,psk_data_28) else fail-any) else fail-any) in
                                {4664}out(io, o_client_hello'_5);
                                {4665}in(io, server_hello'_18: msg);
                                {4666}let SH(B32(sr24'_5: bytes24,sr8'_5: bytes8),params'_5: params) = server_hello'_18 in
                                {4668}let sh_modified_7: msg = SH(B32(sr24'_5,zero8),params'_5) in
                                {4667}let cur_log_IN1_HRR_IN2_5: bitstring = (cur_log_IN1_HRR_1,i_client_hello'_5) in
                                {4669}let cur_log_sh_7: bitstring = (cur_log_IN1_HRR_IN2_5,sh_modified_7) in
                                {4670}let transcript_ech_conf_7: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_7)) in
                                {4671}let v_996: bool = not-caught-fail(transcript_ech_conf_7) in
                                {4673}let k_95: bitstring = (if v_996 then catch-fail(b32_2_b(get_random(i_client_hello'_5))) else caught-fail) in
                                {4674}let v_997: bool = not-caught-fail(k_95) in
                                {4672}let s_101: bitstring = (if v_996 then zero else caught-fail) in
                                {4675}let k_96: bitstring = (if v_996 then catch-fail((if v_997 then hmac(@6_backend_h,s_101,k_95) else fail-any)) else caught-fail) in
                                {4676}let v_998: bool = not-caught-fail(k_96) in
                                {4677}let l_284: label = (if v_998 then ech_accept_confirmation else caught-fail) in
                                {4678}let x_320: bitstring = (if v_998 then (l_284,cur_log_sh_7) else caught-fail) in
                                {4679}let sr8_9: bytes8 = (if v_996 then catch-fail(crop_into_bytes8((if v_998 then hmac(@6_backend_h,k_96,x_320) else fail-any))) else caught-fail) in
                                {4680}let v_999: bool = not-caught-fail(sr8_9) in
                                {4681}if (B32(sr24'_5,sr8'_5) = (if v_996 then (if v_999 then B32(sr24'_5,sr8_9) else fail-any) else fail-any)) then
                                {4682}let (x_321: bitstring,g_26: group) = i_kex_data'_5 in
                                {4683}let (psk_offer_23: preSharedKey,id_offer_23: identityPsk,es_offer_23: bitstring,is_safe_offer_23: bool) = psk_data'_19 in
                                {4684}event Client_PSKOffer(@6_id_client,psk_offer_23,id_offer_23,is_safe_offer_23);
                                {4685}event Client_Rand_client(@6_id_client,i_cr'_5);
                                {4686}event Client_DH_client(@6_id_client,dh_pub(g_26,x_321));
                                {4687}event Client_server_domain(@6_id_client,backend_dom);
                                {4688}let SH(sr_34: bytes32,mode_28: params) = server_hello'_18 in
                                {4689}event Client_Rand_server(@6_id_client,sr_34);
                                {4690}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_26,gy_24: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_49: preSharedKeyExt) = mode_28 in
                                (
                                    {4692}event Client_DH_server(@6_id_client,gy_24);
                                    {4693}let v_1000: bool = (psk_ext_49 = empty_psk_ext) in
                                    {4694}let psk_117: preSharedKey = (if v_1000 then NoPsk else caught-fail) in
                                    {4696}let k_97: bitstring = (if v_1000 then catch-fail(psk2b(psk_117)) else caught-fail) in
                                    {4697}let v_1001: bool = not-caught-fail(k_97) in
                                    {4695}let s_102: bitstring = (if v_1000 then zero else caught-fail) in
                                    {4698}let early_secret_76: bitstring = (if v_1000 then catch-fail((if v_1001 then hmac(@6_backend_h,s_102,k_97) else fail-any)) else caught-fail) in
                                    {4699}let v_1002: bool = not-caught-fail(early_secret_76) in
                                    {4701}let m_99: bitstring = (if v_1002 then zero else caught-fail) in
                                    {4702}let h_275: bitstring = (if v_1002 then catch-fail(hash(@6_backend_h,m_99)) else caught-fail) in
                                    {4703}let v_1003: bool = not-caught-fail(h_275) in
                                    {4700}let l_285: label = (if v_1002 then tls13_ext_res_binder else caught-fail) in
                                    {4704}let x_322: bitstring = (if v_1003 then (l_285,h_275) else caught-fail) in
                                    {4705}let binder_key_51: bitstring = (if v_1002 then catch-fail((if v_1003 then hmac(@6_backend_h,early_secret_76,x_322) else fail-any)) else caught-fail) in
                                    {4706}let v_1004: bool = not-caught-fail(binder_key_51) in
                                    {4707}let v_1005: bitstring = (if v_1000 then catch-fail((if v_1002 then (if v_1004 then (early_secret_76,binder_key_51) else fail-any) else fail-any)) else caught-fail) in
                                    {4708}let v_1006: bool = (not-caught-fail(v_1005) && success?(1-proj-2-tuple(v_1005))) in
                                    {4709}let kb_51: mac_key = (if v_1006 then 2-proj-2-tuple(v_1005) else caught-fail) in
                                    {4710}let es_77: bitstring = (if v_1006 then 1-proj-2-tuple(v_1005) else caught-fail) in
                                    {4711}let v_1007: bitstring = (if not(v_1000) then catch-fail(psk_data'_19) else caught-fail) in
                                    {4712}let v_1008: bool = (not-caught-fail(v_1007) && success?(1-proj-4-tuple(v_1007))) in
                                    {4713}let is_safe_47: bool = (if v_1008 then 4-proj-4-tuple(v_1007) else caught-fail) in
                                    {4714}let es_78: bitstring = (if v_1008 then 3-proj-4-tuple(v_1007) else caught-fail) in
                                    {4715}let id_57: identityPsk = (if v_1008 then 2-proj-4-tuple(v_1007) else caught-fail) in
                                    {4716}let psk_118: preSharedKey = (if v_1008 then 1-proj-4-tuple(v_1007) else caught-fail) in
                                    {4717}let (psk_119: preSharedKey,early_secret_77: bitstring,valid_23: bool,safe_psk_29: bool) = (if v_1000 then (if v_1006 then (NoPsk,es_77,true,false) else fail-any) else (if v_1008 then (psk_118,es_78,((psk_118 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_49)),is_safe_47) else fail-any)) in
                                    {4718}event Client_PSKChoosen(@6_id_client,psk_119,safe_psk_29);
                                    {4719}if valid_23 then
                                    (
                                        {4722}new s_103[]: seed;
                                        {4720}let gxy_47: element = catch-fail(dh_decap_fun(g_26,gy_24,x_321)) in
                                        {4721}let v_1009: bool = not-caught-fail(gxy_47) in
                                        {4723}let gxy_48: element = (if v_1009 then gxy_47 else dh_f(s_103)) in
                                        {4724}event Client_DH_gxy(@6_id_client,gxy_48);
                                        {4726}let m_100: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {4727}let v_1010: bool = not-caught-fail(m_100) in
                                        {4728}let h_276: bitstring = (if v_1010 then catch-fail(hash(@6_backend_h,m_100)) else caught-fail) in
                                        {4729}let v_1011: bool = not-caught-fail(h_276) in
                                        {4725}let l_286: label = tls13_derived in
                                        {4730}let x_323: bitstring = (if v_1011 then (l_286,h_276) else caught-fail) in
                                        {4731}let extra_53: bitstring = catch-fail((if v_1010 then (if v_1011 then hmac(@6_backend_h,early_secret_77,x_323) else fail-any) else fail-any)) in
                                        {4732}let v_1012: bool = not-caught-fail(extra_53) in
                                        {4733}let handshake_secret_24: bitstring = (if v_1012 then hmac(@6_backend_h,extra_53,gxy_48) else fail-any) in
                                        {4735}let m_101: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {4736}let v_1013: bool = not-caught-fail(m_101) in
                                        {4737}let h_277: bitstring = (if v_1013 then catch-fail(hash(@6_backend_h,m_101)) else caught-fail) in
                                        {4738}let v_1014: bool = not-caught-fail(h_277) in
                                        {4734}let l_287: label = tls13_derived in
                                        {4739}let x_324: bitstring = (if v_1014 then (l_287,h_277) else caught-fail) in
                                        {4740}let extra_54: bitstring = catch-fail((if v_1013 then (if v_1014 then hmac(@6_backend_h,handshake_secret_24,x_324) else fail-any) else fail-any)) in
                                        {4741}let v_1015: bool = not-caught-fail(extra_54) in
                                        {4742}let k_98: bitstring = (if v_1015 then zero else caught-fail) in
                                        {4743}let master_secret_55: bitstring = (if v_1015 then catch-fail(hmac(@6_backend_h,handshake_secret_24,k_98)) else caught-fail) in
                                        {4744}let v_1016: bool = not-caught-fail(master_secret_55) in
                                        {4691}let cur_log2_53: bitstring = (cur_log_IN1_HRR_IN2_5,server_hello'_18) in
                                        {4746}let h_278: bitstring = (if v_1016 then catch-fail(hash(@6_backend_h,cur_log2_53)) else caught-fail) in
                                        {4747}let v_1017: bool = not-caught-fail(h_278) in
                                        {4745}let l_288: label = (if v_1016 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {4748}let x_325: bitstring = (if v_1017 then (l_288,h_278) else caught-fail) in
                                        {4749}let client_hts_24: bitstring = (if v_1016 then catch-fail((if v_1017 then hmac(@6_backend_h,handshake_secret_24,x_325) else fail-any)) else caught-fail) in
                                        {4750}let v_1018: bool = not-caught-fail(client_hts_24) in
                                        {4752}let h_279: bitstring = (if v_1018 then catch-fail(hash(@6_backend_h,cur_log2_53)) else caught-fail) in
                                        {4753}let v_1019: bool = not-caught-fail(h_279) in
                                        {4751}let l_289: label = (if v_1018 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {4754}let x_326: bitstring = (if v_1019 then (l_289,h_279) else caught-fail) in
                                        {4755}let server_hts_24: bitstring = (if v_1018 then catch-fail((if v_1019 then hmac(@6_backend_h,handshake_secret_24,x_326) else fail-any)) else caught-fail) in
                                        {4756}let v_1020: bool = not-caught-fail(server_hts_24) in
                                        {4758}let h_280: bitstring = (if v_1020 then zero else caught-fail) in
                                        {4757}let l_290: label = (if v_1020 then tls13_key else caught-fail) in
                                        {4759}let x_327: bitstring = (if v_1020 then (l_290,h_280) else caught-fail) in
                                        {4760}let client_wkh_24: bitstring = (if v_1020 then catch-fail(hmac(@6_backend_h,client_hts_24,x_327)) else caught-fail) in
                                        {4761}let v_1021: bool = not-caught-fail(client_wkh_24) in
                                        {4763}let h_281: bitstring = (if v_1021 then zero else caught-fail) in
                                        {4762}let l_291: label = (if v_1021 then tls13_key else caught-fail) in
                                        {4764}let x_328: bitstring = (if v_1021 then (l_291,h_281) else caught-fail) in
                                        {4765}let server_wkh_24: bitstring = (if v_1021 then catch-fail(hmac(@6_backend_h,server_hts_24,x_328)) else caught-fail) in
                                        {4766}let v_1022: bool = not-caught-fail(server_wkh_24) in
                                        {4768}let h_282: bitstring = (if v_1022 then zero else caught-fail) in
                                        {4767}let l_292: label = (if v_1022 then tls13_finished else caught-fail) in
                                        {4769}let x_329: bitstring = (if v_1022 then (l_292,h_282) else caught-fail) in
                                        {4770}let client_fk_24: bitstring = (if v_1022 then catch-fail(hmac(@6_backend_h,client_hts_24,x_329)) else caught-fail) in
                                        {4771}let v_1023: bool = not-caught-fail(client_fk_24) in
                                        {4773}let h_283: bitstring = (if v_1023 then zero else caught-fail) in
                                        {4772}let l_293: label = (if v_1023 then tls13_finished else caught-fail) in
                                        {4774}let x_330: bitstring = (if v_1023 then (l_293,h_283) else caught-fail) in
                                        {4775}let server_fk_24: bitstring = (if v_1023 then catch-fail(hmac(@6_backend_h,server_hts_24,x_330)) else caught-fail) in
                                        {4776}let v_1024: bool = not-caught-fail(server_fk_24) in
                                        {4777}let (master_secret_56: bitstring,chk_31: aead_key,shk_30: aead_key,cfin_31: mac_key,sfin_30: mac_key) = (if v_1015 then (if v_1016 then (if v_1018 then (if v_1020 then (if v_1021 then (if v_1022 then (if v_1023 then (if v_1024 then (master_secret_55,client_wkh_24,server_wkh_24,client_fk_24,server_fk_24) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {4778}event Client_chk(@6_id_client,chk_31);
                                        {4779}event Client_shk(@6_id_client,shk_30);
                                        {4780}event Client_cfin(@6_id_client,cfin_31);
                                        {4781}event Client_sfin(@6_id_client,sfin_30);
                                        {4782}in(io, enc_ee_msg_23: bitstring);
                                        {4783}let ee_msg_24: msg = aead_dec(@6_backend_a,shk_30,0,zero,enc_ee_msg_23) in
                                        {4784}let EE(ech_ee_23: echExt,extra_ee_23: extraExt) = ee_msg_24 in
                                        {4785}let cur_log2_54: bitstring = (cur_log2_53,ee_msg_24) in
                                        {4786}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_5,sr_34,@6_backend_h,@6_backend_a,c_dom_6,backend_dom,psk_119,safe_psk_29,@6_comp_psk,master_secret_56,chk_31,0,shk_30,1,cfin_31,sfin_30,cur_log2_54)))
                                    )
                                    else
                                        {4787}out(io, illegal_parameter)
                                )
                                else
                                    {4788}out(io, illegal_parameter)
                        )
                        else
                            {4790}let ech_config(config_id_5: configId,ech_g_7: group,pkR_7: element,o_dom_5: domain,ech_h_7: hash_alg,ech_a_7: aead_alg) = ech_conf in
                            {4791}new rand24_12[]: bytes24;
                            {4792}new rand8_12[]: bytes8;
                            {4795}new s_104[]: seed;
                            {4796}let gx_25: element = dh_pub(@6_tls_g,dh_k(s_104)) in
                            {4797}let v_1025: bitstring = (dh_k(s_104),gx_25) in
                            {4798}let v_1026: bool = success?(1-proj-2-tuple(v_1025)) in
                            {4799}let gx_26: element = (if v_1026 then 2-proj-2-tuple(v_1025) else caught-fail) in
                            {4800}let x_331: bitstring = (if v_1026 then 1-proj-2-tuple(v_1025) else caught-fail) in
                            {4794}let send_key_share_5: bool = true in
                            {4801}let kex_11: kex_alg = (if v_1026 then (if send_key_share_5 then DHE_kex(@6_tls_g,gx_26) else DHE_group(@6_tls_g)) else caught-fail) in
                            {4802}let (o_kex_ext_4: keyShareExt,kex_data_8: bitstring) = (if v_1026 then (client_kex_ext(kex_11),(x_331,@6_tls_g)) else fail-any) in
                            {4793}let o_cr_6: bytes32 = B32(rand24_12,rand8_12) in
                            {4789}let cur_log_OU1_HRR_1: bitstring = ((zero,o_client_hello_1),server_hello_5) in
                            {4803}if @6_use_grease then
                            (
                                {4805}if @6_use_psk then
                                (
                                    {4804}let extra_55: extraExt = empty_extra_ext in
                                    {4806}let (psk_120: preSharedKey,id_58: identityPsk,old_es_8: bitstring,is_safe_48: bool) = psk_data_25 in
                                    (
                                        {4810}let k_99: bitstring = catch-fail(psk2b(psk_120)) in
                                        {4811}let v_1027: bool = not-caught-fail(k_99) in
                                        {4809}let s_105: bitstring = zero in
                                        {4812}let early_secret_78: bitstring = catch-fail((if v_1027 then hmac(@6_tls_h,s_105,k_99) else fail-any)) in
                                        {4813}let v_1028: bool = not-caught-fail(early_secret_78) in
                                        {4815}let m_102: bitstring = (if v_1028 then zero else caught-fail) in
                                        {4816}let h_284: bitstring = (if v_1028 then catch-fail(hash(@6_tls_h,m_102)) else caught-fail) in
                                        {4817}let v_1029: bool = not-caught-fail(h_284) in
                                        {4814}let l_294: label = (if v_1028 then tls13_ext_res_binder else caught-fail) in
                                        {4818}let x_332: bitstring = (if v_1029 then (l_294,h_284) else caught-fail) in
                                        {4819}let binder_key_52: bitstring = (if v_1028 then catch-fail((if v_1029 then hmac(@6_tls_h,early_secret_78,x_332) else fail-any)) else caught-fail) in
                                        {4820}let v_1030: bool = not-caught-fail(binder_key_52) in
                                        {4821}let v_1031: bitstring = catch-fail((if v_1028 then (if v_1030 then (early_secret_78,binder_key_52) else fail-any) else fail-any)) in
                                        {4822}let v_1032: bool = (not-caught-fail(v_1031) && success?(1-proj-2-tuple(v_1031))) in
                                        {4823}let kb_52: mac_key = (if v_1032 then 2-proj-2-tuple(v_1031) else caught-fail) in
                                        {4824}let es_79: bitstring = (if v_1032 then 1-proj-2-tuple(v_1031) else caught-fail) in
                                        {4807}let offer_30: params = nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_4,SNI(o_dom_5),o_ech_ext_6,extra_55,trunc_client_psk_ext(id_58)) in
                                        {4808}let cur_log'_18: bitstring = (cur_log_OU1_HRR_1,CH(o_cr_6,offer_30)) in
                                        {4825}let binders_17: bitstring = (if v_1032 then catch-fail(hmac(@6_tls_h,kb_52,cur_log'_18)) else caught-fail) in
                                        {4826}let v_1033: bool = not-caught-fail(binders_17) in
                                        {4827}let v_1034: bitstring = catch-fail((if v_1032 then (if v_1033 then (client_psk_ext(id_58,binders_17),(psk_120,id_58,es_79,is_safe_48)) else fail-any) else fail-any)) in
                                        {4828}let v_1035: bool = (not-caught-fail(v_1034) && success?(1-proj-2-tuple(v_1034))) in
                                        {4829}let psk_data_29: bitstring = (if v_1035 then 2-proj-2-tuple(v_1034) else caught-fail) in
                                        {4830}let psk_ext_50: preSharedKeyExt = (if v_1035 then 1-proj-2-tuple(v_1034) else caught-fail) in
                                        {4831}let o_offer_14: params = (if v_1035 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_4,SNI(o_dom_5),o_ech_ext_6,empty_extra_ext,psk_ext_50) else caught-fail) in
                                        {4832}let (client_hello'_13: msg,cr'_13: bytes32,kex_data'_13: bitstring,psk_data'_20: bitstring) = (if v_1035 then (CH(o_cr_6,o_offer_14),o_cr_6,kex_data_8,psk_data_29) else fail-any) in
                                        {4833}out(io, client_hello'_13);
                                        {4835}in(io, server_hello'_19: msg);
                                        {4836}let SH(sr'_13: bytes32,mode'_13: params) = server_hello'_19 in
                                        (
                                            {4837}if (sr'_13 = B32(HRR24,HRR8)) then
                                                {4838}out(io, unexpected_message)
                                            else
                                                {4839}let (x_333: bitstring,g_27: group) = kex_data'_13 in
                                                {4840}let (psk_offer_24: preSharedKey,id_offer_24: identityPsk,es_offer_24: bitstring,is_safe_offer_24: bool) = psk_data'_20 in
                                                {4841}event Client_PSKOffer(@6_id_client,psk_offer_24,id_offer_24,is_safe_offer_24);
                                                {4842}event Client_Rand_client(@6_id_client,cr'_13);
                                                {4843}event Client_DH_client(@6_id_client,dh_pub(g_27,x_333));
                                                {4844}event Client_server_domain(@6_id_client,o_dom);
                                                {4845}let SH(sr_35: bytes32,mode_29: params) = server_hello'_19 in
                                                {4846}event Client_Rand_server(@6_id_client,sr_35);
                                                {4847}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_27,gy_25: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_51: preSharedKeyExt) = mode_29 in
                                                (
                                                    {4849}event Client_DH_server(@6_id_client,gy_25);
                                                    {4850}let v_1036: bool = (psk_ext_51 = empty_psk_ext) in
                                                    {4851}let psk_121: preSharedKey = (if v_1036 then NoPsk else caught-fail) in
                                                    {4853}let k_100: bitstring = (if v_1036 then catch-fail(psk2b(psk_121)) else caught-fail) in
                                                    {4854}let v_1037: bool = not-caught-fail(k_100) in
                                                    {4852}let s_106: bitstring = (if v_1036 then zero else caught-fail) in
                                                    {4855}let early_secret_79: bitstring = (if v_1036 then catch-fail((if v_1037 then hmac(@6_tls_h,s_106,k_100) else fail-any)) else caught-fail) in
                                                    {4856}let v_1038: bool = not-caught-fail(early_secret_79) in
                                                    {4858}let m_103: bitstring = (if v_1038 then zero else caught-fail) in
                                                    {4859}let h_285: bitstring = (if v_1038 then catch-fail(hash(@6_tls_h,m_103)) else caught-fail) in
                                                    {4860}let v_1039: bool = not-caught-fail(h_285) in
                                                    {4857}let l_295: label = (if v_1038 then tls13_ext_res_binder else caught-fail) in
                                                    {4861}let x_334: bitstring = (if v_1039 then (l_295,h_285) else caught-fail) in
                                                    {4862}let binder_key_53: bitstring = (if v_1038 then catch-fail((if v_1039 then hmac(@6_tls_h,early_secret_79,x_334) else fail-any)) else caught-fail) in
                                                    {4863}let v_1040: bool = not-caught-fail(binder_key_53) in
                                                    {4864}let v_1041: bitstring = (if v_1036 then catch-fail((if v_1038 then (if v_1040 then (early_secret_79,binder_key_53) else fail-any) else fail-any)) else caught-fail) in
                                                    {4865}let v_1042: bool = (not-caught-fail(v_1041) && success?(1-proj-2-tuple(v_1041))) in
                                                    {4866}let kb_53: mac_key = (if v_1042 then 2-proj-2-tuple(v_1041) else caught-fail) in
                                                    {4867}let es_80: bitstring = (if v_1042 then 1-proj-2-tuple(v_1041) else caught-fail) in
                                                    {4868}let v_1043: bitstring = (if not(v_1036) then catch-fail(psk_data'_20) else caught-fail) in
                                                    {4869}let v_1044: bool = (not-caught-fail(v_1043) && success?(1-proj-4-tuple(v_1043))) in
                                                    {4870}let is_safe_49: bool = (if v_1044 then 4-proj-4-tuple(v_1043) else caught-fail) in
                                                    {4871}let es_81: bitstring = (if v_1044 then 3-proj-4-tuple(v_1043) else caught-fail) in
                                                    {4872}let id_59: identityPsk = (if v_1044 then 2-proj-4-tuple(v_1043) else caught-fail) in
                                                    {4873}let psk_122: preSharedKey = (if v_1044 then 1-proj-4-tuple(v_1043) else caught-fail) in
                                                    {4874}let (psk_123: preSharedKey,early_secret_80: bitstring,valid_24: bool,safe_psk_30: bool) = (if v_1036 then (if v_1042 then (NoPsk,es_80,true,false) else fail-any) else (if v_1044 then (psk_122,es_81,((psk_122 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_51)),is_safe_49) else fail-any)) in
                                                    {4875}event Client_PSKChoosen(@6_id_client,psk_123,safe_psk_30);
                                                    {4876}if valid_24 then
                                                    (
                                                        {4879}new s_107[]: seed;
                                                        {4877}let gxy_49: element = catch-fail(dh_decap_fun(g_27,gy_25,x_333)) in
                                                        {4878}let v_1045: bool = not-caught-fail(gxy_49) in
                                                        {4880}let gxy_50: element = (if v_1045 then gxy_49 else dh_f(s_107)) in
                                                        {4881}event Client_DH_gxy(@6_id_client,gxy_50);
                                                        {4883}let m_104: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {4884}let v_1046: bool = not-caught-fail(m_104) in
                                                        {4885}let h_286: bitstring = (if v_1046 then catch-fail(hash(@6_tls_h,m_104)) else caught-fail) in
                                                        {4886}let v_1047: bool = not-caught-fail(h_286) in
                                                        {4882}let l_296: label = tls13_derived in
                                                        {4887}let x_335: bitstring = (if v_1047 then (l_296,h_286) else caught-fail) in
                                                        {4888}let extra_56: bitstring = catch-fail((if v_1046 then (if v_1047 then hmac(@6_tls_h,early_secret_80,x_335) else fail-any) else fail-any)) in
                                                        {4889}let v_1048: bool = not-caught-fail(extra_56) in
                                                        {4890}let handshake_secret_25: bitstring = (if v_1048 then hmac(@6_tls_h,extra_56,gxy_50) else fail-any) in
                                                        {4892}let m_105: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {4893}let v_1049: bool = not-caught-fail(m_105) in
                                                        {4894}let h_287: bitstring = (if v_1049 then catch-fail(hash(@6_tls_h,m_105)) else caught-fail) in
                                                        {4895}let v_1050: bool = not-caught-fail(h_287) in
                                                        {4891}let l_297: label = tls13_derived in
                                                        {4896}let x_336: bitstring = (if v_1050 then (l_297,h_287) else caught-fail) in
                                                        {4897}let extra_57: bitstring = catch-fail((if v_1049 then (if v_1050 then hmac(@6_tls_h,handshake_secret_25,x_336) else fail-any) else fail-any)) in
                                                        {4898}let v_1051: bool = not-caught-fail(extra_57) in
                                                        {4899}let k_101: bitstring = (if v_1051 then zero else caught-fail) in
                                                        {4900}let master_secret_57: bitstring = (if v_1051 then catch-fail(hmac(@6_tls_h,handshake_secret_25,k_101)) else caught-fail) in
                                                        {4901}let v_1052: bool = not-caught-fail(master_secret_57) in
                                                        {4834}let cur_log_OU1_HRR_OU2_4: bitstring = (cur_log_OU1_HRR_1,client_hello'_13) in
                                                        {4848}let cur_log2_55: bitstring = (cur_log_OU1_HRR_OU2_4,server_hello'_19) in
                                                        {4903}let h_288: bitstring = (if v_1052 then catch-fail(hash(@6_tls_h,cur_log2_55)) else caught-fail) in
                                                        {4904}let v_1053: bool = not-caught-fail(h_288) in
                                                        {4902}let l_298: label = (if v_1052 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {4905}let x_337: bitstring = (if v_1053 then (l_298,h_288) else caught-fail) in
                                                        {4906}let client_hts_25: bitstring = (if v_1052 then catch-fail((if v_1053 then hmac(@6_tls_h,handshake_secret_25,x_337) else fail-any)) else caught-fail) in
                                                        {4907}let v_1054: bool = not-caught-fail(client_hts_25) in
                                                        {4909}let h_289: bitstring = (if v_1054 then catch-fail(hash(@6_tls_h,cur_log2_55)) else caught-fail) in
                                                        {4910}let v_1055: bool = not-caught-fail(h_289) in
                                                        {4908}let l_299: label = (if v_1054 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {4911}let x_338: bitstring = (if v_1055 then (l_299,h_289) else caught-fail) in
                                                        {4912}let server_hts_25: bitstring = (if v_1054 then catch-fail((if v_1055 then hmac(@6_tls_h,handshake_secret_25,x_338) else fail-any)) else caught-fail) in
                                                        {4913}let v_1056: bool = not-caught-fail(server_hts_25) in
                                                        {4915}let h_290: bitstring = (if v_1056 then zero else caught-fail) in
                                                        {4914}let l_300: label = (if v_1056 then tls13_key else caught-fail) in
                                                        {4916}let x_339: bitstring = (if v_1056 then (l_300,h_290) else caught-fail) in
                                                        {4917}let client_wkh_25: bitstring = (if v_1056 then catch-fail(hmac(@6_tls_h,client_hts_25,x_339)) else caught-fail) in
                                                        {4918}let v_1057: bool = not-caught-fail(client_wkh_25) in
                                                        {4920}let h_291: bitstring = (if v_1057 then zero else caught-fail) in
                                                        {4919}let l_301: label = (if v_1057 then tls13_key else caught-fail) in
                                                        {4921}let x_340: bitstring = (if v_1057 then (l_301,h_291) else caught-fail) in
                                                        {4922}let server_wkh_25: bitstring = (if v_1057 then catch-fail(hmac(@6_tls_h,server_hts_25,x_340)) else caught-fail) in
                                                        {4923}let v_1058: bool = not-caught-fail(server_wkh_25) in
                                                        {4925}let h_292: bitstring = (if v_1058 then zero else caught-fail) in
                                                        {4924}let l_302: label = (if v_1058 then tls13_finished else caught-fail) in
                                                        {4926}let x_341: bitstring = (if v_1058 then (l_302,h_292) else caught-fail) in
                                                        {4927}let client_fk_25: bitstring = (if v_1058 then catch-fail(hmac(@6_tls_h,client_hts_25,x_341)) else caught-fail) in
                                                        {4928}let v_1059: bool = not-caught-fail(client_fk_25) in
                                                        {4930}let h_293: bitstring = (if v_1059 then zero else caught-fail) in
                                                        {4929}let l_303: label = (if v_1059 then tls13_finished else caught-fail) in
                                                        {4931}let x_342: bitstring = (if v_1059 then (l_303,h_293) else caught-fail) in
                                                        {4932}let server_fk_25: bitstring = (if v_1059 then catch-fail(hmac(@6_tls_h,server_hts_25,x_342)) else caught-fail) in
                                                        {4933}let v_1060: bool = not-caught-fail(server_fk_25) in
                                                        {4934}let (master_secret_58: bitstring,chk_32: aead_key,shk_31: aead_key,cfin_32: mac_key,sfin_31: mac_key) = (if v_1051 then (if v_1052 then (if v_1054 then (if v_1056 then (if v_1057 then (if v_1058 then (if v_1059 then (if v_1060 then (master_secret_57,client_wkh_25,server_wkh_25,client_fk_25,server_fk_25) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {4935}event Client_chk(@6_id_client,chk_32);
                                                        {4936}event Client_shk(@6_id_client,shk_31);
                                                        {4937}event Client_cfin(@6_id_client,cfin_32);
                                                        {4938}event Client_sfin(@6_id_client,sfin_31);
                                                        {4939}in(io, enc_ee_msg_24: bitstring);
                                                        {4940}let ee_msg_25: msg = aead_dec(@6_tls_a,shk_31,0,zero,enc_ee_msg_24) in
                                                        {4941}let EE(ech_ee_24: echExt,extra_ee_24: extraExt) = ee_msg_25 in
                                                        {4942}let cur_log2_56: bitstring = (cur_log2_55,ee_msg_25) in
                                                        {4943}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_13,sr_35,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_123,safe_psk_30,@6_comp_psk,master_secret_58,chk_32,0,shk_31,1,cfin_32,sfin_31,cur_log2_56)))
                                                    )
                                                    else
                                                        {4944}out(io, illegal_parameter)
                                                )
                                                else
                                                    {4945}out(io, illegal_parameter)
                                        )
                                        else
                                            {4946}out(io, unexpected_message)
                                    )
                                    else
                                        {5096}get pre_shared_keys(c_dom'_10: domain,=o_dom_5,=@6_tls_h,id_60: identityPsk,psk_124: preSharedKey,idP_12: idProc,is_safe_50: bool) in
                                        {4947}event Selected_one_time_used_psk(@6_id_client,psk_124,is_safe_50);
                                        {4948}event Selected_psk(c_dom_6,c_dom'_10,idP_12,is_safe_50);
                                        {4949}event Selected_psk_no_missmatch(@6_id_client,o_dom_5,@6_tls_h,psk_124,id_60);
                                        {4950}event Selected_psk_with_ID(c_dom_6,c_dom'_10,id_60,idP_12,is_safe_50);
                                        {4951}let v_1061: bitstring = (id_60,psk_124,is_safe_50) in
                                        {4952}let v_1062: bool = success?(1-proj-3-tuple(v_1061)) in
                                        {4953}let is_safe_51: bool = (if v_1062 then 3-proj-3-tuple(v_1061) else caught-fail) in
                                        {4954}let psk_125: preSharedKey = (if v_1062 then 2-proj-3-tuple(v_1061) else caught-fail) in
                                        {4955}let id_61: identityPsk = (if v_1062 then 1-proj-3-tuple(v_1061) else caught-fail) in
                                        {4959}let k_102: bitstring = (if v_1062 then catch-fail(psk2b(psk_125)) else caught-fail) in
                                        {4960}let v_1063: bool = not-caught-fail(k_102) in
                                        {4958}let s_108: bitstring = (if v_1062 then zero else caught-fail) in
                                        {4961}let early_secret_81: bitstring = (if v_1062 then catch-fail((if v_1063 then hmac(@6_tls_h,s_108,k_102) else fail-any)) else caught-fail) in
                                        {4962}let v_1064: bool = not-caught-fail(early_secret_81) in
                                        {4964}let m_106: bitstring = (if v_1064 then zero else caught-fail) in
                                        {4965}let h_294: bitstring = (if v_1064 then catch-fail(hash(@6_tls_h,m_106)) else caught-fail) in
                                        {4966}let v_1065: bool = not-caught-fail(h_294) in
                                        {4963}let l_304: label = (if v_1064 then tls13_ext_res_binder else caught-fail) in
                                        {4967}let x_343: bitstring = (if v_1065 then (l_304,h_294) else caught-fail) in
                                        {4968}let binder_key_54: bitstring = (if v_1064 then catch-fail((if v_1065 then hmac(@6_tls_h,early_secret_81,x_343) else fail-any)) else caught-fail) in
                                        {4969}let v_1066: bool = not-caught-fail(binder_key_54) in
                                        {4970}let v_1067: bitstring = (if v_1062 then catch-fail((if v_1064 then (if v_1066 then (early_secret_81,binder_key_54) else fail-any) else fail-any)) else caught-fail) in
                                        {4971}let v_1068: bool = (not-caught-fail(v_1067) && success?(1-proj-2-tuple(v_1067))) in
                                        {4972}let kb_54: mac_key = (if v_1068 then 2-proj-2-tuple(v_1067) else caught-fail) in
                                        {4973}let es_82: bitstring = (if v_1068 then 1-proj-2-tuple(v_1067) else caught-fail) in
                                        {4956}let offer_31: params = (if v_1062 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_4,SNI(o_dom_5),o_ech_ext_6,extra_55,trunc_client_psk_ext(id_61)) else caught-fail) in
                                        {4957}let cur_log'_19: bitstring = (if v_1062 then (cur_log_OU1_HRR_1,CH(o_cr_6,offer_31)) else caught-fail) in
                                        {4974}let binders_18: bitstring = (if v_1068 then catch-fail(hmac(@6_tls_h,kb_54,cur_log'_19)) else caught-fail) in
                                        {4975}let v_1069: bool = not-caught-fail(binders_18) in
                                        {4976}let v_1070: bitstring = catch-fail((if v_1062 then (if v_1068 then (if v_1069 then (client_psk_ext(id_61,binders_18),(psk_125,id_61,es_82,is_safe_51)) else fail-any) else fail-any) else fail-any)) in
                                        {4977}let v_1071: bool = (not-caught-fail(v_1070) && success?(1-proj-2-tuple(v_1070))) in
                                        {4978}let psk_data_30: bitstring = (if v_1071 then 2-proj-2-tuple(v_1070) else caught-fail) in
                                        {4979}let psk_ext_52: preSharedKeyExt = (if v_1071 then 1-proj-2-tuple(v_1070) else caught-fail) in
                                        {4980}let o_offer_15: params = (if v_1071 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_4,SNI(o_dom_5),o_ech_ext_6,empty_extra_ext,psk_ext_52) else caught-fail) in
                                        {4981}let (client_hello'_14: msg,cr'_14: bytes32,kex_data'_14: bitstring,psk_data'_21: bitstring) = (if v_1071 then (CH(o_cr_6,o_offer_15),o_cr_6,kex_data_8,psk_data_30) else fail-any) in
                                        {4982}out(io, client_hello'_14);
                                        {4984}in(io, server_hello'_20: msg);
                                        {4985}let SH(sr'_14: bytes32,mode'_14: params) = server_hello'_20 in
                                        (
                                            {4986}if (sr'_14 = B32(HRR24,HRR8)) then
                                                {4987}out(io, unexpected_message)
                                            else
                                                {4988}let (x_344: bitstring,g_28: group) = kex_data'_14 in
                                                {4989}let (psk_offer_25: preSharedKey,id_offer_25: identityPsk,es_offer_25: bitstring,is_safe_offer_25: bool) = psk_data'_21 in
                                                {4990}event Client_PSKOffer(@6_id_client,psk_offer_25,id_offer_25,is_safe_offer_25);
                                                {4991}event Client_Rand_client(@6_id_client,cr'_14);
                                                {4992}event Client_DH_client(@6_id_client,dh_pub(g_28,x_344));
                                                {4993}event Client_server_domain(@6_id_client,o_dom);
                                                {4994}let SH(sr_36: bytes32,mode_30: params) = server_hello'_20 in
                                                {4995}event Client_Rand_server(@6_id_client,sr_36);
                                                {4996}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_28,gy_26: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_53: preSharedKeyExt) = mode_30 in
                                                (
                                                    {4998}event Client_DH_server(@6_id_client,gy_26);
                                                    {4999}let v_1072: bool = (psk_ext_53 = empty_psk_ext) in
                                                    {5000}let psk_126: preSharedKey = (if v_1072 then NoPsk else caught-fail) in
                                                    {5002}let k_103: bitstring = (if v_1072 then catch-fail(psk2b(psk_126)) else caught-fail) in
                                                    {5003}let v_1073: bool = not-caught-fail(k_103) in
                                                    {5001}let s_109: bitstring = (if v_1072 then zero else caught-fail) in
                                                    {5004}let early_secret_82: bitstring = (if v_1072 then catch-fail((if v_1073 then hmac(@6_tls_h,s_109,k_103) else fail-any)) else caught-fail) in
                                                    {5005}let v_1074: bool = not-caught-fail(early_secret_82) in
                                                    {5007}let m_107: bitstring = (if v_1074 then zero else caught-fail) in
                                                    {5008}let h_295: bitstring = (if v_1074 then catch-fail(hash(@6_tls_h,m_107)) else caught-fail) in
                                                    {5009}let v_1075: bool = not-caught-fail(h_295) in
                                                    {5006}let l_305: label = (if v_1074 then tls13_ext_res_binder else caught-fail) in
                                                    {5010}let x_345: bitstring = (if v_1075 then (l_305,h_295) else caught-fail) in
                                                    {5011}let binder_key_55: bitstring = (if v_1074 then catch-fail((if v_1075 then hmac(@6_tls_h,early_secret_82,x_345) else fail-any)) else caught-fail) in
                                                    {5012}let v_1076: bool = not-caught-fail(binder_key_55) in
                                                    {5013}let v_1077: bitstring = (if v_1072 then catch-fail((if v_1074 then (if v_1076 then (early_secret_82,binder_key_55) else fail-any) else fail-any)) else caught-fail) in
                                                    {5014}let v_1078: bool = (not-caught-fail(v_1077) && success?(1-proj-2-tuple(v_1077))) in
                                                    {5015}let kb_55: mac_key = (if v_1078 then 2-proj-2-tuple(v_1077) else caught-fail) in
                                                    {5016}let es_83: bitstring = (if v_1078 then 1-proj-2-tuple(v_1077) else caught-fail) in
                                                    {5017}let v_1079: bitstring = (if not(v_1072) then catch-fail(psk_data'_21) else caught-fail) in
                                                    {5018}let v_1080: bool = (not-caught-fail(v_1079) && success?(1-proj-4-tuple(v_1079))) in
                                                    {5019}let is_safe_52: bool = (if v_1080 then 4-proj-4-tuple(v_1079) else caught-fail) in
                                                    {5020}let es_84: bitstring = (if v_1080 then 3-proj-4-tuple(v_1079) else caught-fail) in
                                                    {5021}let id_62: identityPsk = (if v_1080 then 2-proj-4-tuple(v_1079) else caught-fail) in
                                                    {5022}let psk_127: preSharedKey = (if v_1080 then 1-proj-4-tuple(v_1079) else caught-fail) in
                                                    {5023}let (psk_128: preSharedKey,early_secret_83: bitstring,valid_25: bool,safe_psk_31: bool) = (if v_1072 then (if v_1078 then (NoPsk,es_83,true,false) else fail-any) else (if v_1080 then (psk_127,es_84,((psk_127 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_53)),is_safe_52) else fail-any)) in
                                                    {5024}event Client_PSKChoosen(@6_id_client,psk_128,safe_psk_31);
                                                    {5025}if valid_25 then
                                                    (
                                                        {5028}new s_110[]: seed;
                                                        {5026}let gxy_51: element = catch-fail(dh_decap_fun(g_28,gy_26,x_344)) in
                                                        {5027}let v_1081: bool = not-caught-fail(gxy_51) in
                                                        {5029}let gxy_52: element = (if v_1081 then gxy_51 else dh_f(s_110)) in
                                                        {5030}event Client_DH_gxy(@6_id_client,gxy_52);
                                                        {5032}let m_108: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {5033}let v_1082: bool = not-caught-fail(m_108) in
                                                        {5034}let h_296: bitstring = (if v_1082 then catch-fail(hash(@6_tls_h,m_108)) else caught-fail) in
                                                        {5035}let v_1083: bool = not-caught-fail(h_296) in
                                                        {5031}let l_306: label = tls13_derived in
                                                        {5036}let x_346: bitstring = (if v_1083 then (l_306,h_296) else caught-fail) in
                                                        {5037}let extra_58: bitstring = catch-fail((if v_1082 then (if v_1083 then hmac(@6_tls_h,early_secret_83,x_346) else fail-any) else fail-any)) in
                                                        {5038}let v_1084: bool = not-caught-fail(extra_58) in
                                                        {5039}let handshake_secret_26: bitstring = (if v_1084 then hmac(@6_tls_h,extra_58,gxy_52) else fail-any) in
                                                        {5041}let m_109: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                        {5042}let v_1085: bool = not-caught-fail(m_109) in
                                                        {5043}let h_297: bitstring = (if v_1085 then catch-fail(hash(@6_tls_h,m_109)) else caught-fail) in
                                                        {5044}let v_1086: bool = not-caught-fail(h_297) in
                                                        {5040}let l_307: label = tls13_derived in
                                                        {5045}let x_347: bitstring = (if v_1086 then (l_307,h_297) else caught-fail) in
                                                        {5046}let extra_59: bitstring = catch-fail((if v_1085 then (if v_1086 then hmac(@6_tls_h,handshake_secret_26,x_347) else fail-any) else fail-any)) in
                                                        {5047}let v_1087: bool = not-caught-fail(extra_59) in
                                                        {5048}let k_104: bitstring = (if v_1087 then zero else caught-fail) in
                                                        {5049}let master_secret_59: bitstring = (if v_1087 then catch-fail(hmac(@6_tls_h,handshake_secret_26,k_104)) else caught-fail) in
                                                        {5050}let v_1088: bool = not-caught-fail(master_secret_59) in
                                                        {4983}let cur_log_OU1_HRR_OU2_5: bitstring = (cur_log_OU1_HRR_1,client_hello'_14) in
                                                        {4997}let cur_log2_57: bitstring = (cur_log_OU1_HRR_OU2_5,server_hello'_20) in
                                                        {5052}let h_298: bitstring = (if v_1088 then catch-fail(hash(@6_tls_h,cur_log2_57)) else caught-fail) in
                                                        {5053}let v_1089: bool = not-caught-fail(h_298) in
                                                        {5051}let l_308: label = (if v_1088 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {5054}let x_348: bitstring = (if v_1089 then (l_308,h_298) else caught-fail) in
                                                        {5055}let client_hts_26: bitstring = (if v_1088 then catch-fail((if v_1089 then hmac(@6_tls_h,handshake_secret_26,x_348) else fail-any)) else caught-fail) in
                                                        {5056}let v_1090: bool = not-caught-fail(client_hts_26) in
                                                        {5058}let h_299: bitstring = (if v_1090 then catch-fail(hash(@6_tls_h,cur_log2_57)) else caught-fail) in
                                                        {5059}let v_1091: bool = not-caught-fail(h_299) in
                                                        {5057}let l_309: label = (if v_1090 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {5060}let x_349: bitstring = (if v_1091 then (l_309,h_299) else caught-fail) in
                                                        {5061}let server_hts_26: bitstring = (if v_1090 then catch-fail((if v_1091 then hmac(@6_tls_h,handshake_secret_26,x_349) else fail-any)) else caught-fail) in
                                                        {5062}let v_1092: bool = not-caught-fail(server_hts_26) in
                                                        {5064}let h_300: bitstring = (if v_1092 then zero else caught-fail) in
                                                        {5063}let l_310: label = (if v_1092 then tls13_key else caught-fail) in
                                                        {5065}let x_350: bitstring = (if v_1092 then (l_310,h_300) else caught-fail) in
                                                        {5066}let client_wkh_26: bitstring = (if v_1092 then catch-fail(hmac(@6_tls_h,client_hts_26,x_350)) else caught-fail) in
                                                        {5067}let v_1093: bool = not-caught-fail(client_wkh_26) in
                                                        {5069}let h_301: bitstring = (if v_1093 then zero else caught-fail) in
                                                        {5068}let l_311: label = (if v_1093 then tls13_key else caught-fail) in
                                                        {5070}let x_351: bitstring = (if v_1093 then (l_311,h_301) else caught-fail) in
                                                        {5071}let server_wkh_26: bitstring = (if v_1093 then catch-fail(hmac(@6_tls_h,server_hts_26,x_351)) else caught-fail) in
                                                        {5072}let v_1094: bool = not-caught-fail(server_wkh_26) in
                                                        {5074}let h_302: bitstring = (if v_1094 then zero else caught-fail) in
                                                        {5073}let l_312: label = (if v_1094 then tls13_finished else caught-fail) in
                                                        {5075}let x_352: bitstring = (if v_1094 then (l_312,h_302) else caught-fail) in
                                                        {5076}let client_fk_26: bitstring = (if v_1094 then catch-fail(hmac(@6_tls_h,client_hts_26,x_352)) else caught-fail) in
                                                        {5077}let v_1095: bool = not-caught-fail(client_fk_26) in
                                                        {5079}let h_303: bitstring = (if v_1095 then zero else caught-fail) in
                                                        {5078}let l_313: label = (if v_1095 then tls13_finished else caught-fail) in
                                                        {5080}let x_353: bitstring = (if v_1095 then (l_313,h_303) else caught-fail) in
                                                        {5081}let server_fk_26: bitstring = (if v_1095 then catch-fail(hmac(@6_tls_h,server_hts_26,x_353)) else caught-fail) in
                                                        {5082}let v_1096: bool = not-caught-fail(server_fk_26) in
                                                        {5083}let (master_secret_60: bitstring,chk_33: aead_key,shk_32: aead_key,cfin_33: mac_key,sfin_32: mac_key) = (if v_1087 then (if v_1088 then (if v_1090 then (if v_1092 then (if v_1093 then (if v_1094 then (if v_1095 then (if v_1096 then (master_secret_59,client_wkh_26,server_wkh_26,client_fk_26,server_fk_26) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {5084}event Client_chk(@6_id_client,chk_33);
                                                        {5085}event Client_shk(@6_id_client,shk_32);
                                                        {5086}event Client_cfin(@6_id_client,cfin_33);
                                                        {5087}event Client_sfin(@6_id_client,sfin_32);
                                                        {5088}in(io, enc_ee_msg_25: bitstring);
                                                        {5089}let ee_msg_26: msg = aead_dec(@6_tls_a,shk_32,0,zero,enc_ee_msg_25) in
                                                        {5090}let EE(ech_ee_25: echExt,extra_ee_25: extraExt) = ee_msg_26 in
                                                        {5091}let cur_log2_58: bitstring = (cur_log2_57,ee_msg_26) in
                                                        {5092}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_14,sr_36,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_128,safe_psk_31,@6_comp_psk,master_secret_60,chk_33,0,shk_32,1,cfin_33,sfin_32,cur_log2_58)))
                                                    )
                                                    else
                                                        {5093}out(io, illegal_parameter)
                                                )
                                                else
                                                    {5094}out(io, illegal_parameter)
                                        )
                                        else
                                            {5095}out(io, unexpected_message)
                                )
                                else
                                    {5097}let psk_129: preSharedKey = NoPsk in
                                    {5099}let k_105: bitstring = catch-fail(psk2b(psk_129)) in
                                    {5100}let v_1097: bool = not-caught-fail(k_105) in
                                    {5098}let s_111: bitstring = zero in
                                    {5101}let early_secret_84: bitstring = catch-fail((if v_1097 then hmac(@6_tls_h,s_111,k_105) else fail-any)) in
                                    {5102}let v_1098: bool = not-caught-fail(early_secret_84) in
                                    {5104}let m_110: bitstring = (if v_1098 then zero else caught-fail) in
                                    {5105}let h_304: bitstring = (if v_1098 then catch-fail(hash(@6_tls_h,m_110)) else caught-fail) in
                                    {5106}let v_1099: bool = not-caught-fail(h_304) in
                                    {5103}let l_314: label = (if v_1098 then tls13_ext_res_binder else caught-fail) in
                                    {5107}let x_354: bitstring = (if v_1099 then (l_314,h_304) else caught-fail) in
                                    {5108}let binder_key_56: bitstring = (if v_1098 then catch-fail((if v_1099 then hmac(@6_tls_h,early_secret_84,x_354) else fail-any)) else caught-fail) in
                                    {5109}let v_1100: bool = not-caught-fail(binder_key_56) in
                                    {5110}let v_1101: bitstring = catch-fail((if v_1098 then (if v_1100 then (early_secret_84,binder_key_56) else fail-any) else fail-any)) in
                                    {5111}let v_1102: bool = (not-caught-fail(v_1101) && success?(1-proj-2-tuple(v_1101))) in
                                    {5112}let kb_56: mac_key = (if v_1102 then 2-proj-2-tuple(v_1101) else caught-fail) in
                                    {5113}let es_85: bitstring = (if v_1102 then 1-proj-2-tuple(v_1101) else caught-fail) in
                                    {5114}let v_1103: bitstring = catch-fail((if v_1102 then (empty_psk_ext,(NoPsk,zero,es_85,false)) else fail-any)) in
                                    {5115}let v_1104: bool = (not-caught-fail(v_1103) && success?(1-proj-2-tuple(v_1103))) in
                                    {5116}let psk_data_31: bitstring = (if v_1104 then 2-proj-2-tuple(v_1103) else caught-fail) in
                                    {5117}let psk_ext_54: preSharedKeyExt = (if v_1104 then 1-proj-2-tuple(v_1103) else caught-fail) in
                                    {5118}let o_offer_16: params = (if v_1104 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_4,SNI(o_dom_5),o_ech_ext_6,empty_extra_ext,psk_ext_54) else caught-fail) in
                                    {5119}let (client_hello'_15: msg,cr'_15: bytes32,kex_data'_15: bitstring,psk_data'_22: bitstring) = (if v_1104 then (CH(o_cr_6,o_offer_16),o_cr_6,kex_data_8,psk_data_31) else fail-any) in
                                    {5120}out(io, client_hello'_15);
                                    {5122}in(io, server_hello'_21: msg);
                                    {5123}let SH(sr'_15: bytes32,mode'_15: params) = server_hello'_21 in
                                    (
                                        {5124}if (sr'_15 = B32(HRR24,HRR8)) then
                                            {5125}out(io, unexpected_message)
                                        else
                                            {5126}let (x_355: bitstring,g_29: group) = kex_data'_15 in
                                            {5127}let (psk_offer_26: preSharedKey,id_offer_26: identityPsk,es_offer_26: bitstring,is_safe_offer_26: bool) = psk_data'_22 in
                                            {5128}event Client_PSKOffer(@6_id_client,psk_offer_26,id_offer_26,is_safe_offer_26);
                                            {5129}event Client_Rand_client(@6_id_client,cr'_15);
                                            {5130}event Client_DH_client(@6_id_client,dh_pub(g_29,x_355));
                                            {5131}event Client_server_domain(@6_id_client,o_dom);
                                            {5132}let SH(sr_37: bytes32,mode_31: params) = server_hello'_21 in
                                            {5133}event Client_Rand_server(@6_id_client,sr_37);
                                            {5134}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_29,gy_27: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_55: preSharedKeyExt) = mode_31 in
                                            (
                                                {5136}event Client_DH_server(@6_id_client,gy_27);
                                                {5137}let v_1105: bool = (psk_ext_55 = empty_psk_ext) in
                                                {5138}let psk_130: preSharedKey = (if v_1105 then NoPsk else caught-fail) in
                                                {5140}let k_106: bitstring = (if v_1105 then catch-fail(psk2b(psk_130)) else caught-fail) in
                                                {5141}let v_1106: bool = not-caught-fail(k_106) in
                                                {5139}let s_112: bitstring = (if v_1105 then zero else caught-fail) in
                                                {5142}let early_secret_85: bitstring = (if v_1105 then catch-fail((if v_1106 then hmac(@6_tls_h,s_112,k_106) else fail-any)) else caught-fail) in
                                                {5143}let v_1107: bool = not-caught-fail(early_secret_85) in
                                                {5145}let m_111: bitstring = (if v_1107 then zero else caught-fail) in
                                                {5146}let h_305: bitstring = (if v_1107 then catch-fail(hash(@6_tls_h,m_111)) else caught-fail) in
                                                {5147}let v_1108: bool = not-caught-fail(h_305) in
                                                {5144}let l_315: label = (if v_1107 then tls13_ext_res_binder else caught-fail) in
                                                {5148}let x_356: bitstring = (if v_1108 then (l_315,h_305) else caught-fail) in
                                                {5149}let binder_key_57: bitstring = (if v_1107 then catch-fail((if v_1108 then hmac(@6_tls_h,early_secret_85,x_356) else fail-any)) else caught-fail) in
                                                {5150}let v_1109: bool = not-caught-fail(binder_key_57) in
                                                {5151}let v_1110: bitstring = (if v_1105 then catch-fail((if v_1107 then (if v_1109 then (early_secret_85,binder_key_57) else fail-any) else fail-any)) else caught-fail) in
                                                {5152}let v_1111: bool = (not-caught-fail(v_1110) && success?(1-proj-2-tuple(v_1110))) in
                                                {5153}let kb_57: mac_key = (if v_1111 then 2-proj-2-tuple(v_1110) else caught-fail) in
                                                {5154}let es_86: bitstring = (if v_1111 then 1-proj-2-tuple(v_1110) else caught-fail) in
                                                {5155}let v_1112: bitstring = (if not(v_1105) then catch-fail(psk_data'_22) else caught-fail) in
                                                {5156}let v_1113: bool = (not-caught-fail(v_1112) && success?(1-proj-4-tuple(v_1112))) in
                                                {5157}let is_safe_53: bool = (if v_1113 then 4-proj-4-tuple(v_1112) else caught-fail) in
                                                {5158}let es_87: bitstring = (if v_1113 then 3-proj-4-tuple(v_1112) else caught-fail) in
                                                {5159}let id_63: identityPsk = (if v_1113 then 2-proj-4-tuple(v_1112) else caught-fail) in
                                                {5160}let psk_131: preSharedKey = (if v_1113 then 1-proj-4-tuple(v_1112) else caught-fail) in
                                                {5161}let (psk_132: preSharedKey,early_secret_86: bitstring,valid_26: bool,safe_psk_32: bool) = (if v_1105 then (if v_1111 then (NoPsk,es_86,true,false) else fail-any) else (if v_1113 then (psk_131,es_87,((psk_131 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_55)),is_safe_53) else fail-any)) in
                                                {5162}event Client_PSKChoosen(@6_id_client,psk_132,safe_psk_32);
                                                {5163}if valid_26 then
                                                (
                                                    {5166}new s_113[]: seed;
                                                    {5164}let gxy_53: element = catch-fail(dh_decap_fun(g_29,gy_27,x_355)) in
                                                    {5165}let v_1114: bool = not-caught-fail(gxy_53) in
                                                    {5167}let gxy_54: element = (if v_1114 then gxy_53 else dh_f(s_113)) in
                                                    {5168}event Client_DH_gxy(@6_id_client,gxy_54);
                                                    {5170}let m_112: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {5171}let v_1115: bool = not-caught-fail(m_112) in
                                                    {5172}let h_306: bitstring = (if v_1115 then catch-fail(hash(@6_tls_h,m_112)) else caught-fail) in
                                                    {5173}let v_1116: bool = not-caught-fail(h_306) in
                                                    {5169}let l_316: label = tls13_derived in
                                                    {5174}let x_357: bitstring = (if v_1116 then (l_316,h_306) else caught-fail) in
                                                    {5175}let extra_60: bitstring = catch-fail((if v_1115 then (if v_1116 then hmac(@6_tls_h,early_secret_86,x_357) else fail-any) else fail-any)) in
                                                    {5176}let v_1117: bool = not-caught-fail(extra_60) in
                                                    {5177}let handshake_secret_27: bitstring = (if v_1117 then hmac(@6_tls_h,extra_60,gxy_54) else fail-any) in
                                                    {5179}let m_113: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {5180}let v_1118: bool = not-caught-fail(m_113) in
                                                    {5181}let h_307: bitstring = (if v_1118 then catch-fail(hash(@6_tls_h,m_113)) else caught-fail) in
                                                    {5182}let v_1119: bool = not-caught-fail(h_307) in
                                                    {5178}let l_317: label = tls13_derived in
                                                    {5183}let x_358: bitstring = (if v_1119 then (l_317,h_307) else caught-fail) in
                                                    {5184}let extra_61: bitstring = catch-fail((if v_1118 then (if v_1119 then hmac(@6_tls_h,handshake_secret_27,x_358) else fail-any) else fail-any)) in
                                                    {5185}let v_1120: bool = not-caught-fail(extra_61) in
                                                    {5186}let k_107: bitstring = (if v_1120 then zero else caught-fail) in
                                                    {5187}let master_secret_61: bitstring = (if v_1120 then catch-fail(hmac(@6_tls_h,handshake_secret_27,k_107)) else caught-fail) in
                                                    {5188}let v_1121: bool = not-caught-fail(master_secret_61) in
                                                    {5121}let cur_log_OU1_HRR_OU2_6: bitstring = (cur_log_OU1_HRR_1,client_hello'_15) in
                                                    {5135}let cur_log2_59: bitstring = (cur_log_OU1_HRR_OU2_6,server_hello'_21) in
                                                    {5190}let h_308: bitstring = (if v_1121 then catch-fail(hash(@6_tls_h,cur_log2_59)) else caught-fail) in
                                                    {5191}let v_1122: bool = not-caught-fail(h_308) in
                                                    {5189}let l_318: label = (if v_1121 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {5192}let x_359: bitstring = (if v_1122 then (l_318,h_308) else caught-fail) in
                                                    {5193}let client_hts_27: bitstring = (if v_1121 then catch-fail((if v_1122 then hmac(@6_tls_h,handshake_secret_27,x_359) else fail-any)) else caught-fail) in
                                                    {5194}let v_1123: bool = not-caught-fail(client_hts_27) in
                                                    {5196}let h_309: bitstring = (if v_1123 then catch-fail(hash(@6_tls_h,cur_log2_59)) else caught-fail) in
                                                    {5197}let v_1124: bool = not-caught-fail(h_309) in
                                                    {5195}let l_319: label = (if v_1123 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {5198}let x_360: bitstring = (if v_1124 then (l_319,h_309) else caught-fail) in
                                                    {5199}let server_hts_27: bitstring = (if v_1123 then catch-fail((if v_1124 then hmac(@6_tls_h,handshake_secret_27,x_360) else fail-any)) else caught-fail) in
                                                    {5200}let v_1125: bool = not-caught-fail(server_hts_27) in
                                                    {5202}let h_310: bitstring = (if v_1125 then zero else caught-fail) in
                                                    {5201}let l_320: label = (if v_1125 then tls13_key else caught-fail) in
                                                    {5203}let x_361: bitstring = (if v_1125 then (l_320,h_310) else caught-fail) in
                                                    {5204}let client_wkh_27: bitstring = (if v_1125 then catch-fail(hmac(@6_tls_h,client_hts_27,x_361)) else caught-fail) in
                                                    {5205}let v_1126: bool = not-caught-fail(client_wkh_27) in
                                                    {5207}let h_311: bitstring = (if v_1126 then zero else caught-fail) in
                                                    {5206}let l_321: label = (if v_1126 then tls13_key else caught-fail) in
                                                    {5208}let x_362: bitstring = (if v_1126 then (l_321,h_311) else caught-fail) in
                                                    {5209}let server_wkh_27: bitstring = (if v_1126 then catch-fail(hmac(@6_tls_h,server_hts_27,x_362)) else caught-fail) in
                                                    {5210}let v_1127: bool = not-caught-fail(server_wkh_27) in
                                                    {5212}let h_312: bitstring = (if v_1127 then zero else caught-fail) in
                                                    {5211}let l_322: label = (if v_1127 then tls13_finished else caught-fail) in
                                                    {5213}let x_363: bitstring = (if v_1127 then (l_322,h_312) else caught-fail) in
                                                    {5214}let client_fk_27: bitstring = (if v_1127 then catch-fail(hmac(@6_tls_h,client_hts_27,x_363)) else caught-fail) in
                                                    {5215}let v_1128: bool = not-caught-fail(client_fk_27) in
                                                    {5217}let h_313: bitstring = (if v_1128 then zero else caught-fail) in
                                                    {5216}let l_323: label = (if v_1128 then tls13_finished else caught-fail) in
                                                    {5218}let x_364: bitstring = (if v_1128 then (l_323,h_313) else caught-fail) in
                                                    {5219}let server_fk_27: bitstring = (if v_1128 then catch-fail(hmac(@6_tls_h,server_hts_27,x_364)) else caught-fail) in
                                                    {5220}let v_1129: bool = not-caught-fail(server_fk_27) in
                                                    {5221}let (master_secret_62: bitstring,chk_34: aead_key,shk_33: aead_key,cfin_34: mac_key,sfin_33: mac_key) = (if v_1120 then (if v_1121 then (if v_1123 then (if v_1125 then (if v_1126 then (if v_1127 then (if v_1128 then (if v_1129 then (master_secret_61,client_wkh_27,server_wkh_27,client_fk_27,server_fk_27) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {5222}event Client_chk(@6_id_client,chk_34);
                                                    {5223}event Client_shk(@6_id_client,shk_33);
                                                    {5224}event Client_cfin(@6_id_client,cfin_34);
                                                    {5225}event Client_sfin(@6_id_client,sfin_33);
                                                    {5226}in(io, enc_ee_msg_26: bitstring);
                                                    {5227}let ee_msg_27: msg = aead_dec(@6_tls_a,shk_33,0,zero,enc_ee_msg_26) in
                                                    {5228}let EE(ech_ee_26: echExt,extra_ee_26: extraExt) = ee_msg_27 in
                                                    {5229}let cur_log2_60: bitstring = (cur_log2_59,ee_msg_27) in
                                                    {5230}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_15,sr_37,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_132,safe_psk_32,@6_comp_psk,master_secret_62,chk_34,0,shk_33,1,cfin_34,sfin_33,cur_log2_60)))
                                                )
                                                else
                                                    {5231}out(io, illegal_parameter)
                                            )
                                            else
                                                {5232}out(io, illegal_parameter)
                                    )
                                    else
                                        {5233}out(io, unexpected_message)
                            )
                            else
                                {5234}let psk_133: preSharedKey = NoPsk in
                                {5236}let k_108: bitstring = catch-fail(psk2b(psk_133)) in
                                {5237}let v_1130: bool = not-caught-fail(k_108) in
                                {5235}let s_114: bitstring = zero in
                                {5238}let early_secret_87: bitstring = catch-fail((if v_1130 then hmac(@6_tls_h,s_114,k_108) else fail-any)) in
                                {5239}let v_1131: bool = not-caught-fail(early_secret_87) in
                                {5241}let m_114: bitstring = (if v_1131 then zero else caught-fail) in
                                {5242}let h_314: bitstring = (if v_1131 then catch-fail(hash(@6_tls_h,m_114)) else caught-fail) in
                                {5243}let v_1132: bool = not-caught-fail(h_314) in
                                {5240}let l_324: label = (if v_1131 then tls13_ext_res_binder else caught-fail) in
                                {5244}let x_365: bitstring = (if v_1132 then (l_324,h_314) else caught-fail) in
                                {5245}let binder_key_58: bitstring = (if v_1131 then catch-fail((if v_1132 then hmac(@6_tls_h,early_secret_87,x_365) else fail-any)) else caught-fail) in
                                {5246}let v_1133: bool = not-caught-fail(binder_key_58) in
                                {5247}let v_1134: bitstring = catch-fail((if v_1131 then (if v_1133 then (early_secret_87,binder_key_58) else fail-any) else fail-any)) in
                                {5248}let v_1135: bool = (not-caught-fail(v_1134) && success?(1-proj-2-tuple(v_1134))) in
                                {5249}let kb_58: mac_key = (if v_1135 then 2-proj-2-tuple(v_1134) else caught-fail) in
                                {5250}let es_88: bitstring = (if v_1135 then 1-proj-2-tuple(v_1134) else caught-fail) in
                                {5251}let v_1136: preSharedKeyExt = (if v_1135 then catch-fail(o_psk_ext_6) else caught-fail) in
                                {5252}let v_1137: bool = (not-caught-fail(v_1136) && success?(1-proj-client_psk_ext(v_1136))) in
                                {5253}let fake_binder_9: bitstring = (if v_1137 then 2-proj-client_psk_ext(v_1136) else caught-fail) in
                                {5254}let fake_id_9: identityPsk = (if v_1137 then 1-proj-client_psk_ext(v_1136) else caught-fail) in
                                {5255}new fake_binder'_1[]: bitstring;
                                {5256}let v_1138: bitstring = catch-fail((if v_1135 then (if v_1137 then (client_psk_ext(fake_id_9,fake_binder'_1),(NoPsk,zero,es_88,false)) else (empty_psk_ext,(NoPsk,zero,es_88,false))) else fail-any)) in
                                {5257}let v_1139: bool = (not-caught-fail(v_1138) && success?(1-proj-2-tuple(v_1138))) in
                                {5258}let psk_data_32: bitstring = (if v_1139 then 2-proj-2-tuple(v_1138) else caught-fail) in
                                {5259}let psk_ext_56: preSharedKeyExt = (if v_1139 then 1-proj-2-tuple(v_1138) else caught-fail) in
                                {5260}let o_offer_17: params = (if v_1139 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_4,SNI(o_dom_5),o_ech_ext_6,empty_extra_ext,psk_ext_56) else caught-fail) in
                                {5261}let (client_hello'_16: msg,cr'_16: bytes32,kex_data'_16: bitstring,psk_data'_23: bitstring) = (if v_1139 then (CH(o_cr_6,o_offer_17),o_cr_6,kex_data_8,psk_data_32) else fail-any) in
                                {5262}out(io, client_hello'_16);
                                {5264}in(io, server_hello'_22: msg);
                                {5265}let SH(sr'_16: bytes32,mode'_16: params) = server_hello'_22 in
                                (
                                    {5266}if (sr'_16 = B32(HRR24,HRR8)) then
                                        {5267}out(io, unexpected_message)
                                    else
                                        {5268}let (x_366: bitstring,g_30: group) = kex_data'_16 in
                                        {5269}let (psk_offer_27: preSharedKey,id_offer_27: identityPsk,es_offer_27: bitstring,is_safe_offer_27: bool) = psk_data'_23 in
                                        {5270}event Client_PSKOffer(@6_id_client,psk_offer_27,id_offer_27,is_safe_offer_27);
                                        {5271}event Client_Rand_client(@6_id_client,cr'_16);
                                        {5272}event Client_DH_client(@6_id_client,dh_pub(g_30,x_366));
                                        {5273}event Client_server_domain(@6_id_client,o_dom);
                                        {5274}let SH(sr_38: bytes32,mode_32: params) = server_hello'_22 in
                                        {5275}event Client_Rand_server(@6_id_client,sr_38);
                                        {5276}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_30,gy_28: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_57: preSharedKeyExt) = mode_32 in
                                        (
                                            {5278}event Client_DH_server(@6_id_client,gy_28);
                                            {5279}let v_1140: bool = (psk_ext_57 = empty_psk_ext) in
                                            {5280}let psk_134: preSharedKey = (if v_1140 then NoPsk else caught-fail) in
                                            {5282}let k_109: bitstring = (if v_1140 then catch-fail(psk2b(psk_134)) else caught-fail) in
                                            {5283}let v_1141: bool = not-caught-fail(k_109) in
                                            {5281}let s_115: bitstring = (if v_1140 then zero else caught-fail) in
                                            {5284}let early_secret_88: bitstring = (if v_1140 then catch-fail((if v_1141 then hmac(@6_tls_h,s_115,k_109) else fail-any)) else caught-fail) in
                                            {5285}let v_1142: bool = not-caught-fail(early_secret_88) in
                                            {5287}let m_115: bitstring = (if v_1142 then zero else caught-fail) in
                                            {5288}let h_315: bitstring = (if v_1142 then catch-fail(hash(@6_tls_h,m_115)) else caught-fail) in
                                            {5289}let v_1143: bool = not-caught-fail(h_315) in
                                            {5286}let l_325: label = (if v_1142 then tls13_ext_res_binder else caught-fail) in
                                            {5290}let x_367: bitstring = (if v_1143 then (l_325,h_315) else caught-fail) in
                                            {5291}let binder_key_59: bitstring = (if v_1142 then catch-fail((if v_1143 then hmac(@6_tls_h,early_secret_88,x_367) else fail-any)) else caught-fail) in
                                            {5292}let v_1144: bool = not-caught-fail(binder_key_59) in
                                            {5293}let v_1145: bitstring = (if v_1140 then catch-fail((if v_1142 then (if v_1144 then (early_secret_88,binder_key_59) else fail-any) else fail-any)) else caught-fail) in
                                            {5294}let v_1146: bool = (not-caught-fail(v_1145) && success?(1-proj-2-tuple(v_1145))) in
                                            {5295}let kb_59: mac_key = (if v_1146 then 2-proj-2-tuple(v_1145) else caught-fail) in
                                            {5296}let es_89: bitstring = (if v_1146 then 1-proj-2-tuple(v_1145) else caught-fail) in
                                            {5297}let v_1147: bitstring = (if not(v_1140) then catch-fail(psk_data'_23) else caught-fail) in
                                            {5298}let v_1148: bool = (not-caught-fail(v_1147) && success?(1-proj-4-tuple(v_1147))) in
                                            {5299}let is_safe_54: bool = (if v_1148 then 4-proj-4-tuple(v_1147) else caught-fail) in
                                            {5300}let es_90: bitstring = (if v_1148 then 3-proj-4-tuple(v_1147) else caught-fail) in
                                            {5301}let id_64: identityPsk = (if v_1148 then 2-proj-4-tuple(v_1147) else caught-fail) in
                                            {5302}let psk_135: preSharedKey = (if v_1148 then 1-proj-4-tuple(v_1147) else caught-fail) in
                                            {5303}let (psk_136: preSharedKey,early_secret_89: bitstring,valid_27: bool,safe_psk_33: bool) = (if v_1140 then (if v_1146 then (NoPsk,es_89,true,false) else fail-any) else (if v_1148 then (psk_135,es_90,((psk_135 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_57)),is_safe_54) else fail-any)) in
                                            {5304}event Client_PSKChoosen(@6_id_client,psk_136,safe_psk_33);
                                            {5305}if valid_27 then
                                            (
                                                {5308}new s_116[]: seed;
                                                {5306}let gxy_55: element = catch-fail(dh_decap_fun(g_30,gy_28,x_366)) in
                                                {5307}let v_1149: bool = not-caught-fail(gxy_55) in
                                                {5309}let gxy_56: element = (if v_1149 then gxy_55 else dh_f(s_116)) in
                                                {5310}event Client_DH_gxy(@6_id_client,gxy_56);
                                                {5312}let m_116: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                {5313}let v_1150: bool = not-caught-fail(m_116) in
                                                {5314}let h_316: bitstring = (if v_1150 then catch-fail(hash(@6_tls_h,m_116)) else caught-fail) in
                                                {5315}let v_1151: bool = not-caught-fail(h_316) in
                                                {5311}let l_326: label = tls13_derived in
                                                {5316}let x_368: bitstring = (if v_1151 then (l_326,h_316) else caught-fail) in
                                                {5317}let extra_62: bitstring = catch-fail((if v_1150 then (if v_1151 then hmac(@6_tls_h,early_secret_89,x_368) else fail-any) else fail-any)) in
                                                {5318}let v_1152: bool = not-caught-fail(extra_62) in
                                                {5319}let handshake_secret_28: bitstring = (if v_1152 then hmac(@6_tls_h,extra_62,gxy_56) else fail-any) in
                                                {5321}let m_117: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                {5322}let v_1153: bool = not-caught-fail(m_117) in
                                                {5323}let h_317: bitstring = (if v_1153 then catch-fail(hash(@6_tls_h,m_117)) else caught-fail) in
                                                {5324}let v_1154: bool = not-caught-fail(h_317) in
                                                {5320}let l_327: label = tls13_derived in
                                                {5325}let x_369: bitstring = (if v_1154 then (l_327,h_317) else caught-fail) in
                                                {5326}let extra_63: bitstring = catch-fail((if v_1153 then (if v_1154 then hmac(@6_tls_h,handshake_secret_28,x_369) else fail-any) else fail-any)) in
                                                {5327}let v_1155: bool = not-caught-fail(extra_63) in
                                                {5328}let k_110: bitstring = (if v_1155 then zero else caught-fail) in
                                                {5329}let master_secret_63: bitstring = (if v_1155 then catch-fail(hmac(@6_tls_h,handshake_secret_28,k_110)) else caught-fail) in
                                                {5330}let v_1156: bool = not-caught-fail(master_secret_63) in
                                                {5263}let cur_log_OU1_HRR_OU2_7: bitstring = (cur_log_OU1_HRR_1,client_hello'_16) in
                                                {5277}let cur_log2_61: bitstring = (cur_log_OU1_HRR_OU2_7,server_hello'_22) in
                                                {5332}let h_318: bitstring = (if v_1156 then catch-fail(hash(@6_tls_h,cur_log2_61)) else caught-fail) in
                                                {5333}let v_1157: bool = not-caught-fail(h_318) in
                                                {5331}let l_328: label = (if v_1156 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {5334}let x_370: bitstring = (if v_1157 then (l_328,h_318) else caught-fail) in
                                                {5335}let client_hts_28: bitstring = (if v_1156 then catch-fail((if v_1157 then hmac(@6_tls_h,handshake_secret_28,x_370) else fail-any)) else caught-fail) in
                                                {5336}let v_1158: bool = not-caught-fail(client_hts_28) in
                                                {5338}let h_319: bitstring = (if v_1158 then catch-fail(hash(@6_tls_h,cur_log2_61)) else caught-fail) in
                                                {5339}let v_1159: bool = not-caught-fail(h_319) in
                                                {5337}let l_329: label = (if v_1158 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {5340}let x_371: bitstring = (if v_1159 then (l_329,h_319) else caught-fail) in
                                                {5341}let server_hts_28: bitstring = (if v_1158 then catch-fail((if v_1159 then hmac(@6_tls_h,handshake_secret_28,x_371) else fail-any)) else caught-fail) in
                                                {5342}let v_1160: bool = not-caught-fail(server_hts_28) in
                                                {5344}let h_320: bitstring = (if v_1160 then zero else caught-fail) in
                                                {5343}let l_330: label = (if v_1160 then tls13_key else caught-fail) in
                                                {5345}let x_372: bitstring = (if v_1160 then (l_330,h_320) else caught-fail) in
                                                {5346}let client_wkh_28: bitstring = (if v_1160 then catch-fail(hmac(@6_tls_h,client_hts_28,x_372)) else caught-fail) in
                                                {5347}let v_1161: bool = not-caught-fail(client_wkh_28) in
                                                {5349}let h_321: bitstring = (if v_1161 then zero else caught-fail) in
                                                {5348}let l_331: label = (if v_1161 then tls13_key else caught-fail) in
                                                {5350}let x_373: bitstring = (if v_1161 then (l_331,h_321) else caught-fail) in
                                                {5351}let server_wkh_28: bitstring = (if v_1161 then catch-fail(hmac(@6_tls_h,server_hts_28,x_373)) else caught-fail) in
                                                {5352}let v_1162: bool = not-caught-fail(server_wkh_28) in
                                                {5354}let h_322: bitstring = (if v_1162 then zero else caught-fail) in
                                                {5353}let l_332: label = (if v_1162 then tls13_finished else caught-fail) in
                                                {5355}let x_374: bitstring = (if v_1162 then (l_332,h_322) else caught-fail) in
                                                {5356}let client_fk_28: bitstring = (if v_1162 then catch-fail(hmac(@6_tls_h,client_hts_28,x_374)) else caught-fail) in
                                                {5357}let v_1163: bool = not-caught-fail(client_fk_28) in
                                                {5359}let h_323: bitstring = (if v_1163 then zero else caught-fail) in
                                                {5358}let l_333: label = (if v_1163 then tls13_finished else caught-fail) in
                                                {5360}let x_375: bitstring = (if v_1163 then (l_333,h_323) else caught-fail) in
                                                {5361}let server_fk_28: bitstring = (if v_1163 then catch-fail(hmac(@6_tls_h,server_hts_28,x_375)) else caught-fail) in
                                                {5362}let v_1164: bool = not-caught-fail(server_fk_28) in
                                                {5363}let (master_secret_64: bitstring,chk_35: aead_key,shk_34: aead_key,cfin_35: mac_key,sfin_34: mac_key) = (if v_1155 then (if v_1156 then (if v_1158 then (if v_1160 then (if v_1161 then (if v_1162 then (if v_1163 then (if v_1164 then (master_secret_63,client_wkh_28,server_wkh_28,client_fk_28,server_fk_28) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {5364}event Client_chk(@6_id_client,chk_35);
                                                {5365}event Client_shk(@6_id_client,shk_34);
                                                {5366}event Client_cfin(@6_id_client,cfin_35);
                                                {5367}event Client_sfin(@6_id_client,sfin_34);
                                                {5368}in(io, enc_ee_msg_27: bitstring);
                                                {5369}let ee_msg_28: msg = aead_dec(@6_tls_a,shk_34,0,zero,enc_ee_msg_27) in
                                                {5370}let EE(ech_ee_27: echExt,extra_ee_27: extraExt) = ee_msg_28 in
                                                {5371}let cur_log2_62: bitstring = (cur_log2_61,ee_msg_28) in
                                                {5372}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_16,sr_38,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_136,safe_psk_33,@6_comp_psk,master_secret_64,chk_35,0,shk_34,1,cfin_35,sfin_34,cur_log2_62)))
                                            )
                                            else
                                                {5373}out(io, illegal_parameter)
                                        )
                                        else
                                            {5374}out(io, illegal_parameter)
                                )
                                else
                                    {5375}out(io, unexpected_message)
                    )
                    else
                        {5377}let sh_modified_8: msg = SH(B32(sr24_3,zero8),mode_25) in
                        {5376}let cur_log_15: bitstring = (zero,i_client_hello_6) in
                        {5378}let cur_log_sh_8: bitstring = (cur_log_15,sh_modified_8) in
                        {5379}let transcript_ech_conf_8: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_8)) in
                        {5380}let v_1165: bool = not-caught-fail(transcript_ech_conf_8) in
                        {5382}let k_111: bitstring = (if v_1165 then catch-fail(b32_2_b(get_random(i_client_hello_6))) else caught-fail) in
                        {5383}let v_1166: bool = not-caught-fail(k_111) in
                        {5381}let s_117: bitstring = (if v_1165 then zero else caught-fail) in
                        {5384}let k_112: bitstring = (if v_1165 then catch-fail((if v_1166 then hmac(@6_backend_h,s_117,k_111) else fail-any)) else caught-fail) in
                        {5385}let v_1167: bool = not-caught-fail(k_112) in
                        {5386}let l_334: label = (if v_1167 then ech_accept_confirmation else caught-fail) in
                        {5387}let x_376: bitstring = (if v_1167 then (l_334,cur_log_sh_8) else caught-fail) in
                        {5388}let sr8_10: bytes8 = (if v_1165 then catch-fail(crop_into_bytes8((if v_1167 then hmac(@6_backend_h,k_112,x_376) else fail-any))) else caught-fail) in
                        {5389}let v_1168: bool = not-caught-fail(sr8_10) in
                        {5390}if (B32(sr24_3,sr8_6) = (if v_1165 then (if v_1168 then B32(sr24_3,sr8_10) else fail-any) else fail-any)) then
                        (
                            {5391}event ClientEchAcceptance(@6_id_client,true);
                            {5393}let (x_377: bitstring,g_31: group) = i_kex_data_3 in
                            {5394}let (psk_offer_28: preSharedKey,id_offer_28: identityPsk,es_offer_28: bitstring,is_safe_offer_28: bool) = psk_data_25 in
                            {5395}event Client_PSKOffer(@6_id_client,psk_offer_28,id_offer_28,is_safe_offer_28);
                            {5396}event Client_Rand_client(@6_id_client,i_cr_3);
                            {5397}event Client_DH_client(@6_id_client,dh_pub(g_31,x_377));
                            {5398}event Client_server_domain(@6_id_client,backend_dom);
                            {5399}let SH(sr_39: bytes32,mode_33: params) = server_hello_5 in
                            {5400}event Client_Rand_server(@6_id_client,sr_39);
                            {5401}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_31,gy_29: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_58: preSharedKeyExt) = mode_33 in
                            (
                                {5403}event Client_DH_server(@6_id_client,gy_29);
                                {5404}let v_1169: bool = (psk_ext_58 = empty_psk_ext) in
                                {5405}let psk_137: preSharedKey = (if v_1169 then NoPsk else caught-fail) in
                                {5407}let k_113: bitstring = (if v_1169 then catch-fail(psk2b(psk_137)) else caught-fail) in
                                {5408}let v_1170: bool = not-caught-fail(k_113) in
                                {5406}let s_118: bitstring = (if v_1169 then zero else caught-fail) in
                                {5409}let early_secret_90: bitstring = (if v_1169 then catch-fail((if v_1170 then hmac(@6_backend_h,s_118,k_113) else fail-any)) else caught-fail) in
                                {5410}let v_1171: bool = not-caught-fail(early_secret_90) in
                                {5412}let m_118: bitstring = (if v_1171 then zero else caught-fail) in
                                {5413}let h_324: bitstring = (if v_1171 then catch-fail(hash(@6_backend_h,m_118)) else caught-fail) in
                                {5414}let v_1172: bool = not-caught-fail(h_324) in
                                {5411}let l_335: label = (if v_1171 then tls13_ext_res_binder else caught-fail) in
                                {5415}let x_378: bitstring = (if v_1172 then (l_335,h_324) else caught-fail) in
                                {5416}let binder_key_60: bitstring = (if v_1171 then catch-fail((if v_1172 then hmac(@6_backend_h,early_secret_90,x_378) else fail-any)) else caught-fail) in
                                {5417}let v_1173: bool = not-caught-fail(binder_key_60) in
                                {5418}let v_1174: bitstring = (if v_1169 then catch-fail((if v_1171 then (if v_1173 then (early_secret_90,binder_key_60) else fail-any) else fail-any)) else caught-fail) in
                                {5419}let v_1175: bool = (not-caught-fail(v_1174) && success?(1-proj-2-tuple(v_1174))) in
                                {5420}let kb_60: mac_key = (if v_1175 then 2-proj-2-tuple(v_1174) else caught-fail) in
                                {5421}let es_91: bitstring = (if v_1175 then 1-proj-2-tuple(v_1174) else caught-fail) in
                                {5422}let v_1176: bitstring = (if not(v_1169) then catch-fail(psk_data_25) else caught-fail) in
                                {5423}let v_1177: bool = (not-caught-fail(v_1176) && success?(1-proj-4-tuple(v_1176))) in
                                {5424}let is_safe_55: bool = (if v_1177 then 4-proj-4-tuple(v_1176) else caught-fail) in
                                {5425}let es_92: bitstring = (if v_1177 then 3-proj-4-tuple(v_1176) else caught-fail) in
                                {5426}let id_65: identityPsk = (if v_1177 then 2-proj-4-tuple(v_1176) else caught-fail) in
                                {5427}let psk_138: preSharedKey = (if v_1177 then 1-proj-4-tuple(v_1176) else caught-fail) in
                                {5428}let (psk_139: preSharedKey,early_secret_91: bitstring,valid_28: bool,safe_psk_34: bool) = (if v_1169 then (if v_1175 then (NoPsk,es_91,true,false) else fail-any) else (if v_1177 then (psk_138,es_92,((psk_138 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_58)),is_safe_55) else fail-any)) in
                                {5429}event Client_PSKChoosen(@6_id_client,psk_139,safe_psk_34);
                                {5430}if valid_28 then
                                (
                                    {5433}new s_119[]: seed;
                                    {5431}let gxy_57: element = catch-fail(dh_decap_fun(g_31,gy_29,x_377)) in
                                    {5432}let v_1178: bool = not-caught-fail(gxy_57) in
                                    {5434}let gxy_58: element = (if v_1178 then gxy_57 else dh_f(s_119)) in
                                    {5435}event Client_DH_gxy(@6_id_client,gxy_58);
                                    {5437}let m_119: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                    {5438}let v_1179: bool = not-caught-fail(m_119) in
                                    {5439}let h_325: bitstring = (if v_1179 then catch-fail(hash(@6_backend_h,m_119)) else caught-fail) in
                                    {5440}let v_1180: bool = not-caught-fail(h_325) in
                                    {5436}let l_336: label = tls13_derived in
                                    {5441}let x_379: bitstring = (if v_1180 then (l_336,h_325) else caught-fail) in
                                    {5442}let extra_64: bitstring = catch-fail((if v_1179 then (if v_1180 then hmac(@6_backend_h,early_secret_91,x_379) else fail-any) else fail-any)) in
                                    {5443}let v_1181: bool = not-caught-fail(extra_64) in
                                    {5444}let handshake_secret_29: bitstring = (if v_1181 then hmac(@6_backend_h,extra_64,gxy_58) else fail-any) in
                                    {5446}let m_120: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                    {5447}let v_1182: bool = not-caught-fail(m_120) in
                                    {5448}let h_326: bitstring = (if v_1182 then catch-fail(hash(@6_backend_h,m_120)) else caught-fail) in
                                    {5449}let v_1183: bool = not-caught-fail(h_326) in
                                    {5445}let l_337: label = tls13_derived in
                                    {5450}let x_380: bitstring = (if v_1183 then (l_337,h_326) else caught-fail) in
                                    {5451}let extra_65: bitstring = catch-fail((if v_1182 then (if v_1183 then hmac(@6_backend_h,handshake_secret_29,x_380) else fail-any) else fail-any)) in
                                    {5452}let v_1184: bool = not-caught-fail(extra_65) in
                                    {5453}let k_114: bitstring = (if v_1184 then zero else caught-fail) in
                                    {5454}let master_secret_65: bitstring = (if v_1184 then catch-fail(hmac(@6_backend_h,handshake_secret_29,k_114)) else caught-fail) in
                                    {5455}let v_1185: bool = not-caught-fail(master_secret_65) in
                                    {5392}let cur_log_16: bitstring = (zero,i_client_hello_6) in
                                    {5402}let cur_log2_63: bitstring = (cur_log_16,server_hello_5) in
                                    {5457}let h_327: bitstring = (if v_1185 then catch-fail(hash(@6_backend_h,cur_log2_63)) else caught-fail) in
                                    {5458}let v_1186: bool = not-caught-fail(h_327) in
                                    {5456}let l_338: label = (if v_1185 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {5459}let x_381: bitstring = (if v_1186 then (l_338,h_327) else caught-fail) in
                                    {5460}let client_hts_29: bitstring = (if v_1185 then catch-fail((if v_1186 then hmac(@6_backend_h,handshake_secret_29,x_381) else fail-any)) else caught-fail) in
                                    {5461}let v_1187: bool = not-caught-fail(client_hts_29) in
                                    {5463}let h_328: bitstring = (if v_1187 then catch-fail(hash(@6_backend_h,cur_log2_63)) else caught-fail) in
                                    {5464}let v_1188: bool = not-caught-fail(h_328) in
                                    {5462}let l_339: label = (if v_1187 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {5465}let x_382: bitstring = (if v_1188 then (l_339,h_328) else caught-fail) in
                                    {5466}let server_hts_29: bitstring = (if v_1187 then catch-fail((if v_1188 then hmac(@6_backend_h,handshake_secret_29,x_382) else fail-any)) else caught-fail) in
                                    {5467}let v_1189: bool = not-caught-fail(server_hts_29) in
                                    {5469}let h_329: bitstring = (if v_1189 then zero else caught-fail) in
                                    {5468}let l_340: label = (if v_1189 then tls13_key else caught-fail) in
                                    {5470}let x_383: bitstring = (if v_1189 then (l_340,h_329) else caught-fail) in
                                    {5471}let client_wkh_29: bitstring = (if v_1189 then catch-fail(hmac(@6_backend_h,client_hts_29,x_383)) else caught-fail) in
                                    {5472}let v_1190: bool = not-caught-fail(client_wkh_29) in
                                    {5474}let h_330: bitstring = (if v_1190 then zero else caught-fail) in
                                    {5473}let l_341: label = (if v_1190 then tls13_key else caught-fail) in
                                    {5475}let x_384: bitstring = (if v_1190 then (l_341,h_330) else caught-fail) in
                                    {5476}let server_wkh_29: bitstring = (if v_1190 then catch-fail(hmac(@6_backend_h,server_hts_29,x_384)) else caught-fail) in
                                    {5477}let v_1191: bool = not-caught-fail(server_wkh_29) in
                                    {5479}let h_331: bitstring = (if v_1191 then zero else caught-fail) in
                                    {5478}let l_342: label = (if v_1191 then tls13_finished else caught-fail) in
                                    {5480}let x_385: bitstring = (if v_1191 then (l_342,h_331) else caught-fail) in
                                    {5481}let client_fk_29: bitstring = (if v_1191 then catch-fail(hmac(@6_backend_h,client_hts_29,x_385)) else caught-fail) in
                                    {5482}let v_1192: bool = not-caught-fail(client_fk_29) in
                                    {5484}let h_332: bitstring = (if v_1192 then zero else caught-fail) in
                                    {5483}let l_343: label = (if v_1192 then tls13_finished else caught-fail) in
                                    {5485}let x_386: bitstring = (if v_1192 then (l_343,h_332) else caught-fail) in
                                    {5486}let server_fk_29: bitstring = (if v_1192 then catch-fail(hmac(@6_backend_h,server_hts_29,x_386)) else caught-fail) in
                                    {5487}let v_1193: bool = not-caught-fail(server_fk_29) in
                                    {5488}let (master_secret_66: bitstring,chk_36: aead_key,shk_35: aead_key,cfin_36: mac_key,sfin_35: mac_key) = (if v_1184 then (if v_1185 then (if v_1187 then (if v_1189 then (if v_1190 then (if v_1191 then (if v_1192 then (if v_1193 then (master_secret_65,client_wkh_29,server_wkh_29,client_fk_29,server_fk_29) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {5489}event Client_chk(@6_id_client,chk_36);
                                    {5490}event Client_shk(@6_id_client,shk_35);
                                    {5491}event Client_cfin(@6_id_client,cfin_36);
                                    {5492}event Client_sfin(@6_id_client,sfin_35);
                                    {5493}in(io, enc_ee_msg_28: bitstring);
                                    {5494}let ee_msg_29: msg = aead_dec(@6_backend_a,shk_35,0,zero,enc_ee_msg_28) in
                                    {5495}let EE(ech_ee_28: echExt,extra_ee_28: extraExt) = ee_msg_29 in
                                    {5496}let cur_log2_64: bitstring = (cur_log2_63,ee_msg_29) in
                                    {5497}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr_3,sr_39,@6_backend_h,@6_backend_a,c_dom_6,backend_dom,psk_139,safe_psk_34,@6_comp_psk,master_secret_66,chk_36,0,shk_35,1,cfin_36,sfin_35,cur_log2_64)))
                                )
                                else
                                    {5498}out(io, illegal_parameter)
                            )
                            else
                                {5499}out(io, illegal_parameter)
                        )
                        else
                            {5500}event ClientEchAcceptance(@6_id_client,false);
                            {5501}let v_1194: bool = @6_use_grease in
                            {5502}let psk_140: preSharedKey = (if not(v_1194) then NoPsk else caught-fail) in
                            {5504}let k_115: bitstring = (if not(v_1194) then catch-fail(psk2b(psk_140)) else caught-fail) in
                            {5505}let v_1195: bool = not-caught-fail(k_115) in
                            {5503}let s_120: bitstring = (if not(v_1194) then zero else caught-fail) in
                            {5506}let early_secret_92: bitstring = (if not(v_1194) then catch-fail((if v_1195 then hmac(@6_tls_h,s_120,k_115) else fail-any)) else caught-fail) in
                            {5507}let v_1196: bool = not-caught-fail(early_secret_92) in
                            {5509}let m_121: bitstring = (if v_1196 then zero else caught-fail) in
                            {5510}let h_333: bitstring = (if v_1196 then catch-fail(hash(@6_tls_h,m_121)) else caught-fail) in
                            {5511}let v_1197: bool = not-caught-fail(h_333) in
                            {5508}let l_344: label = (if v_1196 then tls13_ext_res_binder else caught-fail) in
                            {5512}let x_387: bitstring = (if v_1197 then (l_344,h_333) else caught-fail) in
                            {5513}let binder_key_61: bitstring = (if v_1196 then catch-fail((if v_1197 then hmac(@6_tls_h,early_secret_92,x_387) else fail-any)) else caught-fail) in
                            {5514}let v_1198: bool = not-caught-fail(binder_key_61) in
                            {5515}let v_1199: bitstring = (if not(v_1194) then catch-fail((if v_1196 then (if v_1198 then (early_secret_92,binder_key_61) else fail-any) else fail-any)) else caught-fail) in
                            {5516}let v_1200: bool = (not-caught-fail(v_1199) && success?(1-proj-2-tuple(v_1199))) in
                            {5517}let kb_61: mac_key = (if v_1200 then 2-proj-2-tuple(v_1199) else caught-fail) in
                            {5518}let es'_1: bitstring = (if v_1200 then 1-proj-2-tuple(v_1199) else caught-fail) in
                            {5519}let psk_data'_24: bitstring = (if v_1194 then psk_data_25 else (if v_1200 then (NoPsk,zero,es'_1,false) else fail-any)) in
                            {5521}let (x_388: bitstring,g_32: group) = o_kex_data_3 in
                            {5522}let (psk_offer_29: preSharedKey,id_offer_29: identityPsk,es_offer_29: bitstring,is_safe_offer_29: bool) = psk_data'_24 in
                            {5523}event Client_PSKOffer(@6_id_client,psk_offer_29,id_offer_29,is_safe_offer_29);
                            {5524}event Client_Rand_client(@6_id_client,o_cr_4);
                            {5525}event Client_DH_client(@6_id_client,dh_pub(g_32,x_388));
                            {5526}event Client_server_domain(@6_id_client,o_dom);
                            {5527}let SH(sr_40: bytes32,mode_34: params) = server_hello_5 in
                            {5528}event Client_Rand_server(@6_id_client,sr_40);
                            {5529}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_32,gy_30: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_59: preSharedKeyExt) = mode_34 in
                            (
                                {5531}event Client_DH_server(@6_id_client,gy_30);
                                {5532}let v_1201: bool = (psk_ext_59 = empty_psk_ext) in
                                {5533}let psk_141: preSharedKey = (if v_1201 then NoPsk else caught-fail) in
                                {5535}let k_116: bitstring = (if v_1201 then catch-fail(psk2b(psk_141)) else caught-fail) in
                                {5536}let v_1202: bool = not-caught-fail(k_116) in
                                {5534}let s_121: bitstring = (if v_1201 then zero else caught-fail) in
                                {5537}let early_secret_93: bitstring = (if v_1201 then catch-fail((if v_1202 then hmac(@6_tls_h,s_121,k_116) else fail-any)) else caught-fail) in
                                {5538}let v_1203: bool = not-caught-fail(early_secret_93) in
                                {5540}let m_122: bitstring = (if v_1203 then zero else caught-fail) in
                                {5541}let h_334: bitstring = (if v_1203 then catch-fail(hash(@6_tls_h,m_122)) else caught-fail) in
                                {5542}let v_1204: bool = not-caught-fail(h_334) in
                                {5539}let l_345: label = (if v_1203 then tls13_ext_res_binder else caught-fail) in
                                {5543}let x_389: bitstring = (if v_1204 then (l_345,h_334) else caught-fail) in
                                {5544}let binder_key_62: bitstring = (if v_1203 then catch-fail((if v_1204 then hmac(@6_tls_h,early_secret_93,x_389) else fail-any)) else caught-fail) in
                                {5545}let v_1205: bool = not-caught-fail(binder_key_62) in
                                {5546}let v_1206: bitstring = (if v_1201 then catch-fail((if v_1203 then (if v_1205 then (early_secret_93,binder_key_62) else fail-any) else fail-any)) else caught-fail) in
                                {5547}let v_1207: bool = (not-caught-fail(v_1206) && success?(1-proj-2-tuple(v_1206))) in
                                {5548}let kb_62: mac_key = (if v_1207 then 2-proj-2-tuple(v_1206) else caught-fail) in
                                {5549}let es_93: bitstring = (if v_1207 then 1-proj-2-tuple(v_1206) else caught-fail) in
                                {5550}let v_1208: bitstring = (if not(v_1201) then catch-fail(psk_data'_24) else caught-fail) in
                                {5551}let v_1209: bool = (not-caught-fail(v_1208) && success?(1-proj-4-tuple(v_1208))) in
                                {5552}let is_safe_56: bool = (if v_1209 then 4-proj-4-tuple(v_1208) else caught-fail) in
                                {5553}let es_94: bitstring = (if v_1209 then 3-proj-4-tuple(v_1208) else caught-fail) in
                                {5554}let id_66: identityPsk = (if v_1209 then 2-proj-4-tuple(v_1208) else caught-fail) in
                                {5555}let psk_142: preSharedKey = (if v_1209 then 1-proj-4-tuple(v_1208) else caught-fail) in
                                {5556}let (psk_143: preSharedKey,early_secret_94: bitstring,valid_29: bool,safe_psk_35: bool) = (if v_1201 then (if v_1207 then (NoPsk,es_93,true,false) else fail-any) else (if v_1209 then (psk_142,es_94,((psk_142 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_59)),is_safe_56) else fail-any)) in
                                {5557}event Client_PSKChoosen(@6_id_client,psk_143,safe_psk_35);
                                {5558}if valid_29 then
                                (
                                    {5561}new s_122[]: seed;
                                    {5559}let gxy_59: element = catch-fail(dh_decap_fun(g_32,gy_30,x_388)) in
                                    {5560}let v_1210: bool = not-caught-fail(gxy_59) in
                                    {5562}let gxy_60: element = (if v_1210 then gxy_59 else dh_f(s_122)) in
                                    {5563}event Client_DH_gxy(@6_id_client,gxy_60);
                                    {5565}let m_123: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                    {5566}let v_1211: bool = not-caught-fail(m_123) in
                                    {5567}let h_335: bitstring = (if v_1211 then catch-fail(hash(@6_tls_h,m_123)) else caught-fail) in
                                    {5568}let v_1212: bool = not-caught-fail(h_335) in
                                    {5564}let l_346: label = tls13_derived in
                                    {5569}let x_390: bitstring = (if v_1212 then (l_346,h_335) else caught-fail) in
                                    {5570}let extra_66: bitstring = catch-fail((if v_1211 then (if v_1212 then hmac(@6_tls_h,early_secret_94,x_390) else fail-any) else fail-any)) in
                                    {5571}let v_1213: bool = not-caught-fail(extra_66) in
                                    {5572}let handshake_secret_30: bitstring = (if v_1213 then hmac(@6_tls_h,extra_66,gxy_60) else fail-any) in
                                    {5574}let m_124: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                    {5575}let v_1214: bool = not-caught-fail(m_124) in
                                    {5576}let h_336: bitstring = (if v_1214 then catch-fail(hash(@6_tls_h,m_124)) else caught-fail) in
                                    {5577}let v_1215: bool = not-caught-fail(h_336) in
                                    {5573}let l_347: label = tls13_derived in
                                    {5578}let x_391: bitstring = (if v_1215 then (l_347,h_336) else caught-fail) in
                                    {5579}let extra_67: bitstring = catch-fail((if v_1214 then (if v_1215 then hmac(@6_tls_h,handshake_secret_30,x_391) else fail-any) else fail-any)) in
                                    {5580}let v_1216: bool = not-caught-fail(extra_67) in
                                    {5581}let k_117: bitstring = (if v_1216 then zero else caught-fail) in
                                    {5582}let master_secret_67: bitstring = (if v_1216 then catch-fail(hmac(@6_tls_h,handshake_secret_30,k_117)) else caught-fail) in
                                    {5583}let v_1217: bool = not-caught-fail(master_secret_67) in
                                    {5520}let cur_log_17: bitstring = (zero,o_client_hello_1) in
                                    {5530}let cur_log2_65: bitstring = (cur_log_17,server_hello_5) in
                                    {5585}let h_337: bitstring = (if v_1217 then catch-fail(hash(@6_tls_h,cur_log2_65)) else caught-fail) in
                                    {5586}let v_1218: bool = not-caught-fail(h_337) in
                                    {5584}let l_348: label = (if v_1217 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {5587}let x_392: bitstring = (if v_1218 then (l_348,h_337) else caught-fail) in
                                    {5588}let client_hts_30: bitstring = (if v_1217 then catch-fail((if v_1218 then hmac(@6_tls_h,handshake_secret_30,x_392) else fail-any)) else caught-fail) in
                                    {5589}let v_1219: bool = not-caught-fail(client_hts_30) in
                                    {5591}let h_338: bitstring = (if v_1219 then catch-fail(hash(@6_tls_h,cur_log2_65)) else caught-fail) in
                                    {5592}let v_1220: bool = not-caught-fail(h_338) in
                                    {5590}let l_349: label = (if v_1219 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {5593}let x_393: bitstring = (if v_1220 then (l_349,h_338) else caught-fail) in
                                    {5594}let server_hts_30: bitstring = (if v_1219 then catch-fail((if v_1220 then hmac(@6_tls_h,handshake_secret_30,x_393) else fail-any)) else caught-fail) in
                                    {5595}let v_1221: bool = not-caught-fail(server_hts_30) in
                                    {5597}let h_339: bitstring = (if v_1221 then zero else caught-fail) in
                                    {5596}let l_350: label = (if v_1221 then tls13_key else caught-fail) in
                                    {5598}let x_394: bitstring = (if v_1221 then (l_350,h_339) else caught-fail) in
                                    {5599}let client_wkh_30: bitstring = (if v_1221 then catch-fail(hmac(@6_tls_h,client_hts_30,x_394)) else caught-fail) in
                                    {5600}let v_1222: bool = not-caught-fail(client_wkh_30) in
                                    {5602}let h_340: bitstring = (if v_1222 then zero else caught-fail) in
                                    {5601}let l_351: label = (if v_1222 then tls13_key else caught-fail) in
                                    {5603}let x_395: bitstring = (if v_1222 then (l_351,h_340) else caught-fail) in
                                    {5604}let server_wkh_30: bitstring = (if v_1222 then catch-fail(hmac(@6_tls_h,server_hts_30,x_395)) else caught-fail) in
                                    {5605}let v_1223: bool = not-caught-fail(server_wkh_30) in
                                    {5607}let h_341: bitstring = (if v_1223 then zero else caught-fail) in
                                    {5606}let l_352: label = (if v_1223 then tls13_finished else caught-fail) in
                                    {5608}let x_396: bitstring = (if v_1223 then (l_352,h_341) else caught-fail) in
                                    {5609}let client_fk_30: bitstring = (if v_1223 then catch-fail(hmac(@6_tls_h,client_hts_30,x_396)) else caught-fail) in
                                    {5610}let v_1224: bool = not-caught-fail(client_fk_30) in
                                    {5612}let h_342: bitstring = (if v_1224 then zero else caught-fail) in
                                    {5611}let l_353: label = (if v_1224 then tls13_finished else caught-fail) in
                                    {5613}let x_397: bitstring = (if v_1224 then (l_353,h_342) else caught-fail) in
                                    {5614}let server_fk_30: bitstring = (if v_1224 then catch-fail(hmac(@6_tls_h,server_hts_30,x_397)) else caught-fail) in
                                    {5615}let v_1225: bool = not-caught-fail(server_fk_30) in
                                    {5616}let (master_secret_68: bitstring,chk_37: aead_key,shk_36: aead_key,cfin_37: mac_key,sfin_36: mac_key) = (if v_1216 then (if v_1217 then (if v_1219 then (if v_1221 then (if v_1222 then (if v_1223 then (if v_1224 then (if v_1225 then (master_secret_67,client_wkh_30,server_wkh_30,client_fk_30,server_fk_30) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {5617}event Client_chk(@6_id_client,chk_37);
                                    {5618}event Client_shk(@6_id_client,shk_36);
                                    {5619}event Client_cfin(@6_id_client,cfin_37);
                                    {5620}event Client_sfin(@6_id_client,sfin_36);
                                    {5621}in(io, enc_ee_msg_29: bitstring);
                                    {5622}let ee_msg_30: msg = aead_dec(@6_tls_a,shk_36,0,zero,enc_ee_msg_29) in
                                    {5623}let EE(ech_ee_29: echExt,extra_ee_29: extraExt) = ee_msg_30 in
                                    {5624}let cur_log2_66: bitstring = (cur_log2_65,ee_msg_30) in
                                    {5625}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(o_cr_4,sr_40,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_143,safe_psk_35,@6_comp_psk,master_secret_68,chk_37,0,shk_36,1,cfin_37,sfin_36,cur_log2_66)))
                                )
                                else
                                    {5626}out(io, illegal_parameter)
                            )
                            else
                                {5627}out(io, illegal_parameter)
                )
                else
                    {5628}out(io, unexpected_message)
            )
    )
    else
        {5630}let psk_144: preSharedKey = NoPsk in
        {5632}let k_118: bitstring = catch-fail(psk2b(psk_144)) in
        {5633}let v_1226: bool = not-caught-fail(k_118) in
        {5631}let s_123: bitstring = zero in
        {5634}let early_secret_95: bitstring = catch-fail((if v_1226 then hmac(h_psk,s_123,k_118) else fail-any)) in
        {5635}let v_1227: bool = not-caught-fail(early_secret_95) in
        {5637}let m_125: bitstring = (if v_1227 then zero else caught-fail) in
        {5638}let h_343: bitstring = (if v_1227 then catch-fail(hash(h_psk,m_125)) else caught-fail) in
        {5639}let v_1228: bool = not-caught-fail(h_343) in
        {5636}let l_354: label = (if v_1227 then tls13_ext_res_binder else caught-fail) in
        {5640}let x_398: bitstring = (if v_1228 then (l_354,h_343) else caught-fail) in
        {5641}let binder_key_63: bitstring = (if v_1227 then catch-fail((if v_1228 then hmac(h_psk,early_secret_95,x_398) else fail-any)) else caught-fail) in
        {5642}let v_1229: bool = not-caught-fail(binder_key_63) in
        {5643}let v_1230: bitstring = catch-fail((if v_1227 then (if v_1229 then (early_secret_95,binder_key_63) else fail-any) else fail-any)) in
        {5644}let v_1231: bool = (not-caught-fail(v_1230) && success?(1-proj-2-tuple(v_1230))) in
        {5645}let kb_63: mac_key = (if v_1231 then 2-proj-2-tuple(v_1230) else caught-fail) in
        {5646}let es_95: bitstring = (if v_1231 then 1-proj-2-tuple(v_1230) else caught-fail) in
        {5647}let v_1232: bitstring = catch-fail((if v_1231 then (empty_psk_ext,(NoPsk,zero,es_95,false)) else fail-any)) in
        {5648}let v_1233: bool = (not-caught-fail(v_1232) && success?(1-proj-2-tuple(v_1232))) in
        {5649}let psk_data_33: bitstring = (if v_1233 then 2-proj-2-tuple(v_1232) else caught-fail) in
        {5650}let psk_ext_60: preSharedKeyExt = (if v_1233 then 1-proj-2-tuple(v_1232) else caught-fail) in
        {5655}new fake_id_10[]: identityPsk;
        {5656}new fake_binder_10[]: bitstring;
        {5653}let v_1234: bool = (if v_1233 then catch-fail(@6_use_grease) else caught-fail) in
        {5662}let v_1235: hpkeContext = (if is-false(v_1234) then catch-fail(context) else caught-fail) in
        {5663}let v_1236: bool = (not-caught-fail(v_1235) && ((S =nf 1-proj-hpke_context(v_1235)) && success?(1-proj-hpke_context(v_1235)))) in
        {5664}let base_nonce_9: bitstring = (if v_1236 then 3-proj-hpke_context(v_1235) else caught-fail) in
        {5665}let key_9: aead_key = (if v_1236 then 2-proj-hpke_context(v_1235) else caught-fail) in
        {5661}let n_8: nat = (if is-false(v_1234) then 1 else caught-fail) in
        {5658}let o_ech_ext_ADD_8: echExt = (if is-false(v_1234) then ECHClientHelloOuter(ech_h_3,ech_a_3,config_id_1,enc_1,zero) else caught-fail) in
        {5657}let o_psk_ext_10: preSharedKeyExt = (if is-false(v_1234) then (if @6_use_psk then client_psk_ext(fake_id_10,fake_binder_10) else empty_psk_ext) else caught-fail) in
        {5659}let o_offer_ADD_8: params = (if is-false(v_1234) then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),o_ech_ext_ADD_8,empty_extra_ext,o_psk_ext_10) else caught-fail) in
        {5660}let o_client_hello_ADD_8: msg = (if is-false(v_1234) then CH(o_cr,o_offer_ADD_8) else caught-fail) in
        {5651}let i_offer_8: params = (if v_1233 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_60) else caught-fail) in
        {5652}let i_client_hello_10: msg = (if v_1233 then CH(i_cr,i_offer_8) else caught-fail) in
        {5666}let payload_9: bitstring = (if is-false(v_1234) then catch-fail((if v_1236 then aead_enc(ech_a_3,key_9,(base_nonce_9,n_8),o_client_hello_ADD_8,i_client_hello_10) else fail-any)) else caught-fail) in
        {5667}let v_1237: bool = not-caught-fail(payload_9) in
        {5668}let o_ech_ext_10: echExt = (if v_1237 then ECHClientHelloOuter(ech_h_3,ech_a_3,config_id_1,enc_1,payload_9) else caught-fail) in
        {5669}let o_offer_19: params = (if v_1237 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),o_ech_ext_10,empty_extra_ext,o_psk_ext_10) else caught-fail) in
        {5654}let o_offer_18: params = (if v_1234 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext,SNI(o_dom_1),ech_inner_or_grease,empty_extra_ext,psk_ext_60) else caught-fail) in
        {5670}let (o_client_hello_2: msg,i_client_hello_11: msg,o_cr_7: bytes32,i_cr_5: bytes32,o_kex_data_5: bitstring,i_kex_data_5: bitstring,o_psk_ext_11: preSharedKeyExt,psk_data_34: bitstring,o_ech_ext_11: echExt) = (if v_1233 then (if undo-catch-fail(v_1234) then (CH(o_cr,o_offer_18),CH(o_cr,o_offer_18),o_cr,o_cr,o_kex_data,o_kex_data,psk_ext_60,psk_data_33,ech_inner_or_grease) else (if v_1237 then (CH(o_cr,o_offer_19),i_client_hello_10,o_cr,i_cr,o_kex_data,i_kex_data,o_psk_ext_10,psk_data_33,o_ech_ext_10) else fail-any)) else fail-any) in
        {5671}out(io, o_client_hello_2);
        {5672}let (psk_145: preSharedKey,id_67: identityPsk,es_96: bitstring,safe_2: bool) = psk_data_34 in
        (
            {5673}if (false && (not(@6_use_grease) && (psk_145 ≠ NoPsk))) then
            {5674}let client_hello_9: bitstring = (zero,i_client_hello_11) in
            {5676}let h_344: bitstring = catch-fail(hash(@6_backend_h,client_hello_9)) in
            {5677}let v_1238: bool = not-caught-fail(h_344) in
            {5675}let l_355: label = tls13_client_early_traffic_secret in
            {5678}let x_399: bitstring = (if v_1238 then (l_355,h_344) else caught-fail) in
            {5679}let atsc0_6: bitstring = catch-fail((if v_1238 then hmac(@6_backend_h,es_96,x_399) else fail-any)) in
            {5680}let v_1239: bool = not-caught-fail(atsc0_6) in
            {5682}let h_345: bitstring = (if v_1239 then zero else caught-fail) in
            {5681}let l_356: label = (if v_1239 then tls13_key else caught-fail) in
            {5683}let x_400: bitstring = (if v_1239 then (l_356,h_345) else caught-fail) in
            {5684}let kc0_6: bitstring = (if v_1239 then catch-fail(hmac(@6_backend_h,atsc0_6,x_400)) else caught-fail) in
            {5685}let v_1240: bool = not-caught-fail(kc0_6) in
            {5687}let h_346: bitstring = (if v_1240 then catch-fail(hash(@6_backend_h,client_hello_9)) else caught-fail) in
            {5688}let v_1241: bool = not-caught-fail(h_346) in
            {5686}let l_357: label = (if v_1240 then tls13_early_exporter_master_secret else caught-fail) in
            {5689}let x_401: bitstring = (if v_1241 then (l_357,h_346) else caught-fail) in
            {5690}let ems0_12: bitstring = (if v_1240 then catch-fail((if v_1241 then hmac(@6_backend_h,es_96,x_401) else fail-any)) else caught-fail) in
            {5691}let v_1242: bool = not-caught-fail(ems0_12) in
            {5692}let (wkc0_6: aead_key,ems0_13: bitstring) = (if v_1239 then (if v_1240 then (if v_1242 then (kc0_6,ems0_12) else fail-any) else fail-any) else fail-any) in
            {5693}!
            {5694}in(io, (i_6: nat,ad_6: bitstring));
            {5695}if is_nat(i_6) then
            {5696}new msg_ed_5[]: bitstring;
            {5698}new st_15: stamp;
            {5699}event ClientSequenceClient0RTTDataWriteKey(@6_id_client,st_15,i_6);
            {5700}event ClientSends0(@6_id_client,i_cr_5,psk_145,i_6,ad_6,msg_ed_5);
            {5697}let enc_ed_5: bitstring = aead_enc(@6_backend_a,wkc0_6,i_6,ad_6,msg_ed_5) in
            {5701}out(io, enc_ed_5)
        ) | (
            {5702}in(io, server_hello_6: msg);
            {5703}let SH(B32(sr24_4: bytes24,sr8_11: bytes8),mode_35: params) = server_hello_6 in
            (
                {5704}if (false && (B32(sr24_4,sr8_11) = B32(HRR24,HRR8))) then
                (
                    {5705}if (send_kex_4 ≠ true) then
                    {5706}let nego(=TLS13,h_alg_13: hash_alg,a_alg_11: aead_alg,hrr_kex_ext(g_33: group),=empty_sni_ext,ech_ext_10: echExt,=empty_extra_ext,=empty_psk_ext) = mode_35 in
                    {5707}let v_1243: bool = (ech_ext_10 = empty_ech_ext) in
                    {5708}let hrr_mode_2: params = (if not(v_1243) then nego(TLS13,@6_backend_h,@6_backend_a,hrr_kex_ext(@6_backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) else caught-fail) in
                    {5709}let hrr_2: msg = (if not(v_1243) then SH(B32(HRR24,HRR8),hrr_mode_2) else caught-fail) in
                    {5710}let cur_log_18: bitstring = (if not(v_1243) then ((zero,i_client_hello_11),hrr_2) else caught-fail) in
                    {5711}let transcript_hrr_ech_conf_2: bitstring = (if not(v_1243) then catch-fail(hash(@6_backend_h,cur_log_18)) else caught-fail) in
                    {5712}let v_1244: bool = not-caught-fail(transcript_hrr_ech_conf_2) in
                    {5714}let k_119: bitstring = (if v_1244 then catch-fail(b32_2_b(get_random(i_client_hello_11))) else caught-fail) in
                    {5715}let v_1245: bool = not-caught-fail(k_119) in
                    {5713}let s_124: bitstring = (if v_1244 then zero else caught-fail) in
                    {5716}let k_120: bitstring = (if v_1244 then catch-fail((if v_1245 then hmac(@6_backend_h,s_124,k_119) else fail-any)) else caught-fail) in
                    {5717}let v_1246: bool = not-caught-fail(k_120) in
                    {5718}let l_358: label = (if v_1246 then hrr_ech_accept_confirmation else caught-fail) in
                    {5719}let x_402: bitstring = (if v_1246 then (l_358,cur_log_18) else caught-fail) in
                    {5720}let is_ech_accepted_2: bool = (if v_1243 then false else (if (ech_ext_10 = ECHHelloRetryRequest((if v_1244 then crop_into_bytes8((if v_1246 then hmac(@6_backend_h,k_120,x_402) else fail-any)) else fail-any))) then true else false)) in
                    {5721}event ClientEchAcceptance(@6_id_client,is_ech_accepted_2);
                    {5722}if is_ech_accepted_2 then
                    (
                        {5724}let ech_config(config_id_6: configId,ech_g_8: group,pkR_8: element,o_dom_6: domain,ech_h_8: hash_alg,ech_a_8: aead_alg) = ech_conf in
                        {5726}new s_125[]: seed;
                        {5727}let gx_27: element = dh_pub(@6_backend_g,dh_k(s_125)) in
                        {5728}let v_1247: bitstring = (dh_k(s_125),gx_27) in
                        {5729}let v_1248: bool = success?(1-proj-2-tuple(v_1247)) in
                        {5730}let gx_28: element = (if v_1248 then 2-proj-2-tuple(v_1247) else caught-fail) in
                        {5731}let x_403: bitstring = (if v_1248 then 1-proj-2-tuple(v_1247) else caught-fail) in
                        {5725}let send_key_share_6: bool = true in
                        {5732}let kex_12: kex_alg = (if v_1248 then (if send_key_share_6 then DHE_kex(@6_backend_g,gx_28) else DHE_group(@6_backend_g)) else caught-fail) in
                        {5733}let (i_kex_ext_3: keyShareExt,i_kex_data_6: bitstring) = (if v_1248 then (client_kex_ext(kex_12),(x_403,@6_backend_g)) else fail-any) in
                        {5735}new s_126[]: seed;
                        {5736}let gx_29: element = dh_pub(@6_tls_g,dh_k(s_126)) in
                        {5737}let v_1249: bitstring = (dh_k(s_126),gx_29) in
                        {5738}let v_1250: bool = success?(1-proj-2-tuple(v_1249)) in
                        {5739}let gx_30: element = (if v_1250 then 2-proj-2-tuple(v_1249) else caught-fail) in
                        {5740}let x_404: bitstring = (if v_1250 then 1-proj-2-tuple(v_1249) else caught-fail) in
                        {5734}let send_key_share_7: bool = true in
                        {5741}let kex_13: kex_alg = (if v_1250 then (if send_key_share_7 then DHE_kex(@6_tls_g,gx_30) else DHE_group(@6_tls_g)) else caught-fail) in
                        {5742}let (o_kex_ext_5: keyShareExt,o_kex_data_6: bitstring) = (if v_1250 then (client_kex_ext(kex_13),(x_404,@6_tls_g)) else fail-any) in
                        {5743}new rand24_13[]: bytes24;
                        {5744}new rand8_13[]: bytes8;
                        {5746}new rand24_14[]: bytes24;
                        {5747}new rand8_14[]: bytes8;
                        {5748}let o_cr_8: bytes32 = B32(rand24_14,rand8_14) in
                        {5745}let i_cr_6: bytes32 = B32(rand24_13,rand8_13) in
                        {5723}let cur_log_IN1_HRR_2: bitstring = ((zero,i_client_hello_11),server_hello_6) in
                        {5750}if @6_use_psk then
                        (
                            {5749}let ech_ext_11: echExt = ECHClientHelloInner in
                            {5751}let (psk_146: preSharedKey,id_68: identityPsk,old_es_9: bitstring,is_safe_57: bool) = psk_data_34 in
                            (
                                {5755}let k_121: bitstring = catch-fail(psk2b(psk_146)) in
                                {5756}let v_1251: bool = not-caught-fail(k_121) in
                                {5754}let s_127: bitstring = zero in
                                {5757}let early_secret_96: bitstring = catch-fail((if v_1251 then hmac(@6_backend_h,s_127,k_121) else fail-any)) in
                                {5758}let v_1252: bool = not-caught-fail(early_secret_96) in
                                {5760}let m_126: bitstring = (if v_1252 then zero else caught-fail) in
                                {5761}let h_347: bitstring = (if v_1252 then catch-fail(hash(@6_backend_h,m_126)) else caught-fail) in
                                {5762}let v_1253: bool = not-caught-fail(h_347) in
                                {5759}let l_359: label = (if v_1252 then tls13_ext_res_binder else caught-fail) in
                                {5763}let x_405: bitstring = (if v_1253 then (l_359,h_347) else caught-fail) in
                                {5764}let binder_key_64: bitstring = (if v_1252 then catch-fail((if v_1253 then hmac(@6_backend_h,early_secret_96,x_405) else fail-any)) else caught-fail) in
                                {5765}let v_1254: bool = not-caught-fail(binder_key_64) in
                                {5766}let v_1255: bitstring = catch-fail((if v_1252 then (if v_1254 then (early_secret_96,binder_key_64) else fail-any) else fail-any)) in
                                {5767}let v_1256: bool = (not-caught-fail(v_1255) && success?(1-proj-2-tuple(v_1255))) in
                                {5768}let kb_64: mac_key = (if v_1256 then 2-proj-2-tuple(v_1255) else caught-fail) in
                                {5769}let es_97: bitstring = (if v_1256 then 1-proj-2-tuple(v_1255) else caught-fail) in
                                {5752}let offer_32: params = nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_3,SNI(backend_dom),ech_ext_11,@6_i_extra_ext,trunc_client_psk_ext(id_68)) in
                                {5753}let cur_log'_20: bitstring = (cur_log_IN1_HRR_2,CH(i_cr_6,offer_32)) in
                                {5770}let binders_19: bitstring = (if v_1256 then catch-fail(hmac(@6_backend_h,kb_64,cur_log'_20)) else caught-fail) in
                                {5771}let v_1257: bool = not-caught-fail(binders_19) in
                                {5772}let v_1258: bitstring = catch-fail((if v_1256 then (if v_1257 then (client_psk_ext(id_68,binders_19),(psk_146,id_68,es_97,is_safe_57)) else fail-any) else fail-any)) in
                                {5773}let v_1259: bool = (not-caught-fail(v_1258) && success?(1-proj-2-tuple(v_1258))) in
                                {5774}let psk_data_35: bitstring = (if v_1259 then 2-proj-2-tuple(v_1258) else caught-fail) in
                                {5775}let psk_ext_61: preSharedKeyExt = (if v_1259 then 1-proj-2-tuple(v_1258) else caught-fail) in
                                {5778}new fake_id_11[]: identityPsk;
                                {5779}new fake_binder_11[]: bitstring;
                                {5785}let v_1260: hpkeContext = (if v_1259 then catch-fail(context) else caught-fail) in
                                {5786}let v_1261: bool = (not-caught-fail(v_1260) && ((S =nf 1-proj-hpke_context(v_1260)) && success?(1-proj-hpke_context(v_1260)))) in
                                {5787}let base_nonce_10: bitstring = (if v_1261 then 3-proj-hpke_context(v_1260) else caught-fail) in
                                {5788}let key_10: aead_key = (if v_1261 then 2-proj-hpke_context(v_1260) else caught-fail) in
                                {5784}let n_9: nat = (if v_1259 then 2 else caught-fail) in
                                {5781}let o_ech_ext_ADD_9: echExt = (if v_1259 then ECHClientHelloOuter(ech_h_8,ech_a_8,config_id_6,zero,zero) else caught-fail) in
                                {5780}let o_psk_ext_12: preSharedKeyExt = (if v_1259 then (if @6_use_psk then client_psk_ext(fake_id_11,fake_binder_11) else empty_psk_ext) else caught-fail) in
                                {5782}let o_offer_ADD_9: params = (if v_1259 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_5,SNI(o_dom_6),o_ech_ext_ADD_9,empty_extra_ext,o_psk_ext_12) else caught-fail) in
                                {5783}let o_client_hello_ADD_9: msg = (if v_1259 then CH(o_cr_8,o_offer_ADD_9) else caught-fail) in
                                {5776}let i_offer_9: params = (if v_1259 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_3,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_61) else caught-fail) in
                                {5777}let i_client_hello_12: msg = (if v_1259 then CH(i_cr_6,i_offer_9) else caught-fail) in
                                {5789}let payload_10: bitstring = (if v_1259 then catch-fail((if v_1261 then aead_enc(ech_a_8,key_10,(base_nonce_10,n_9),o_client_hello_ADD_9,i_client_hello_12) else fail-any)) else caught-fail) in
                                {5790}let v_1262: bool = not-caught-fail(payload_10) in
                                {5791}let o_ech_ext_12: echExt = (if v_1262 then ECHClientHelloOuter(ech_h_8,ech_a_8,config_id_6,zero,payload_10) else caught-fail) in
                                {5792}let o_offer_20: params = (if v_1262 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_5,SNI(o_dom_6),o_ech_ext_12,empty_extra_ext,o_psk_ext_12) else caught-fail) in
                                {5793}let (o_client_hello'_6: msg,i_client_hello'_6: msg,i_cr'_6: bytes32,i_kex_data'_6: bitstring,psk_data'_25: bitstring) = (if v_1259 then (if v_1262 then (CH(o_cr_8,o_offer_20),i_client_hello_12,i_cr_6,i_kex_data_6,psk_data_35) else fail-any) else fail-any) in
                                {5794}out(io, o_client_hello'_6);
                                {5795}in(io, server_hello'_23: msg);
                                {5796}let SH(B32(sr24'_6: bytes24,sr8'_6: bytes8),params'_6: params) = server_hello'_23 in
                                {5798}let sh_modified_9: msg = SH(B32(sr24'_6,zero8),params'_6) in
                                {5797}let cur_log_IN1_HRR_IN2_6: bitstring = (cur_log_IN1_HRR_2,i_client_hello'_6) in
                                {5799}let cur_log_sh_9: bitstring = (cur_log_IN1_HRR_IN2_6,sh_modified_9) in
                                {5800}let transcript_ech_conf_9: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_9)) in
                                {5801}let v_1263: bool = not-caught-fail(transcript_ech_conf_9) in
                                {5803}let k_122: bitstring = (if v_1263 then catch-fail(b32_2_b(get_random(i_client_hello'_6))) else caught-fail) in
                                {5804}let v_1264: bool = not-caught-fail(k_122) in
                                {5802}let s_128: bitstring = (if v_1263 then zero else caught-fail) in
                                {5805}let k_123: bitstring = (if v_1263 then catch-fail((if v_1264 then hmac(@6_backend_h,s_128,k_122) else fail-any)) else caught-fail) in
                                {5806}let v_1265: bool = not-caught-fail(k_123) in
                                {5807}let l_360: label = (if v_1265 then ech_accept_confirmation else caught-fail) in
                                {5808}let x_406: bitstring = (if v_1265 then (l_360,cur_log_sh_9) else caught-fail) in
                                {5809}let sr8_12: bytes8 = (if v_1263 then catch-fail(crop_into_bytes8((if v_1265 then hmac(@6_backend_h,k_123,x_406) else fail-any))) else caught-fail) in
                                {5810}let v_1266: bool = not-caught-fail(sr8_12) in
                                {5811}if (B32(sr24'_6,sr8'_6) = (if v_1263 then (if v_1266 then B32(sr24'_6,sr8_12) else fail-any) else fail-any)) then
                                {5812}let (x_407: bitstring,g_34: group) = i_kex_data'_6 in
                                {5813}let (psk_offer_30: preSharedKey,id_offer_30: identityPsk,es_offer_30: bitstring,is_safe_offer_30: bool) = psk_data'_25 in
                                {5814}event Client_PSKOffer(@6_id_client,psk_offer_30,id_offer_30,is_safe_offer_30);
                                {5815}event Client_Rand_client(@6_id_client,i_cr'_6);
                                {5816}event Client_DH_client(@6_id_client,dh_pub(g_34,x_407));
                                {5817}event Client_server_domain(@6_id_client,backend_dom);
                                {5818}let SH(sr_41: bytes32,mode_36: params) = server_hello'_23 in
                                {5819}event Client_Rand_server(@6_id_client,sr_41);
                                {5820}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_34,gy_31: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_62: preSharedKeyExt) = mode_36 in
                                (
                                    {5822}event Client_DH_server(@6_id_client,gy_31);
                                    {5823}let v_1267: bool = (psk_ext_62 = empty_psk_ext) in
                                    {5824}let psk_147: preSharedKey = (if v_1267 then NoPsk else caught-fail) in
                                    {5826}let k_124: bitstring = (if v_1267 then catch-fail(psk2b(psk_147)) else caught-fail) in
                                    {5827}let v_1268: bool = not-caught-fail(k_124) in
                                    {5825}let s_129: bitstring = (if v_1267 then zero else caught-fail) in
                                    {5828}let early_secret_97: bitstring = (if v_1267 then catch-fail((if v_1268 then hmac(@6_backend_h,s_129,k_124) else fail-any)) else caught-fail) in
                                    {5829}let v_1269: bool = not-caught-fail(early_secret_97) in
                                    {5831}let m_127: bitstring = (if v_1269 then zero else caught-fail) in
                                    {5832}let h_348: bitstring = (if v_1269 then catch-fail(hash(@6_backend_h,m_127)) else caught-fail) in
                                    {5833}let v_1270: bool = not-caught-fail(h_348) in
                                    {5830}let l_361: label = (if v_1269 then tls13_ext_res_binder else caught-fail) in
                                    {5834}let x_408: bitstring = (if v_1270 then (l_361,h_348) else caught-fail) in
                                    {5835}let binder_key_65: bitstring = (if v_1269 then catch-fail((if v_1270 then hmac(@6_backend_h,early_secret_97,x_408) else fail-any)) else caught-fail) in
                                    {5836}let v_1271: bool = not-caught-fail(binder_key_65) in
                                    {5837}let v_1272: bitstring = (if v_1267 then catch-fail((if v_1269 then (if v_1271 then (early_secret_97,binder_key_65) else fail-any) else fail-any)) else caught-fail) in
                                    {5838}let v_1273: bool = (not-caught-fail(v_1272) && success?(1-proj-2-tuple(v_1272))) in
                                    {5839}let kb_65: mac_key = (if v_1273 then 2-proj-2-tuple(v_1272) else caught-fail) in
                                    {5840}let es_98: bitstring = (if v_1273 then 1-proj-2-tuple(v_1272) else caught-fail) in
                                    {5841}let v_1274: bitstring = (if not(v_1267) then catch-fail(psk_data'_25) else caught-fail) in
                                    {5842}let v_1275: bool = (not-caught-fail(v_1274) && success?(1-proj-4-tuple(v_1274))) in
                                    {5843}let is_safe_58: bool = (if v_1275 then 4-proj-4-tuple(v_1274) else caught-fail) in
                                    {5844}let es_99: bitstring = (if v_1275 then 3-proj-4-tuple(v_1274) else caught-fail) in
                                    {5845}let id_69: identityPsk = (if v_1275 then 2-proj-4-tuple(v_1274) else caught-fail) in
                                    {5846}let psk_148: preSharedKey = (if v_1275 then 1-proj-4-tuple(v_1274) else caught-fail) in
                                    {5847}let (psk_149: preSharedKey,early_secret_98: bitstring,valid_30: bool,safe_psk_36: bool) = (if v_1267 then (if v_1273 then (NoPsk,es_98,true,false) else fail-any) else (if v_1275 then (psk_148,es_99,((psk_148 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_62)),is_safe_58) else fail-any)) in
                                    {5848}event Client_PSKChoosen(@6_id_client,psk_149,safe_psk_36);
                                    {5849}if valid_30 then
                                    (
                                        {5852}new s_130[]: seed;
                                        {5850}let gxy_61: element = catch-fail(dh_decap_fun(g_34,gy_31,x_407)) in
                                        {5851}let v_1276: bool = not-caught-fail(gxy_61) in
                                        {5853}let gxy_62: element = (if v_1276 then gxy_61 else dh_f(s_130)) in
                                        {5854}event Client_DH_gxy(@6_id_client,gxy_62);
                                        {5856}let m_128: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {5857}let v_1277: bool = not-caught-fail(m_128) in
                                        {5858}let h_349: bitstring = (if v_1277 then catch-fail(hash(@6_backend_h,m_128)) else caught-fail) in
                                        {5859}let v_1278: bool = not-caught-fail(h_349) in
                                        {5855}let l_362: label = tls13_derived in
                                        {5860}let x_409: bitstring = (if v_1278 then (l_362,h_349) else caught-fail) in
                                        {5861}let extra_68: bitstring = catch-fail((if v_1277 then (if v_1278 then hmac(@6_backend_h,early_secret_98,x_409) else fail-any) else fail-any)) in
                                        {5862}let v_1279: bool = not-caught-fail(extra_68) in
                                        {5863}let handshake_secret_31: bitstring = (if v_1279 then hmac(@6_backend_h,extra_68,gxy_62) else fail-any) in
                                        {5865}let m_129: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {5866}let v_1280: bool = not-caught-fail(m_129) in
                                        {5867}let h_350: bitstring = (if v_1280 then catch-fail(hash(@6_backend_h,m_129)) else caught-fail) in
                                        {5868}let v_1281: bool = not-caught-fail(h_350) in
                                        {5864}let l_363: label = tls13_derived in
                                        {5869}let x_410: bitstring = (if v_1281 then (l_363,h_350) else caught-fail) in
                                        {5870}let extra_69: bitstring = catch-fail((if v_1280 then (if v_1281 then hmac(@6_backend_h,handshake_secret_31,x_410) else fail-any) else fail-any)) in
                                        {5871}let v_1282: bool = not-caught-fail(extra_69) in
                                        {5872}let k_125: bitstring = (if v_1282 then zero else caught-fail) in
                                        {5873}let master_secret_69: bitstring = (if v_1282 then catch-fail(hmac(@6_backend_h,handshake_secret_31,k_125)) else caught-fail) in
                                        {5874}let v_1283: bool = not-caught-fail(master_secret_69) in
                                        {5821}let cur_log2_67: bitstring = (cur_log_IN1_HRR_IN2_6,server_hello'_23) in
                                        {5876}let h_351: bitstring = (if v_1283 then catch-fail(hash(@6_backend_h,cur_log2_67)) else caught-fail) in
                                        {5877}let v_1284: bool = not-caught-fail(h_351) in
                                        {5875}let l_364: label = (if v_1283 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {5878}let x_411: bitstring = (if v_1284 then (l_364,h_351) else caught-fail) in
                                        {5879}let client_hts_31: bitstring = (if v_1283 then catch-fail((if v_1284 then hmac(@6_backend_h,handshake_secret_31,x_411) else fail-any)) else caught-fail) in
                                        {5880}let v_1285: bool = not-caught-fail(client_hts_31) in
                                        {5882}let h_352: bitstring = (if v_1285 then catch-fail(hash(@6_backend_h,cur_log2_67)) else caught-fail) in
                                        {5883}let v_1286: bool = not-caught-fail(h_352) in
                                        {5881}let l_365: label = (if v_1285 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {5884}let x_412: bitstring = (if v_1286 then (l_365,h_352) else caught-fail) in
                                        {5885}let server_hts_31: bitstring = (if v_1285 then catch-fail((if v_1286 then hmac(@6_backend_h,handshake_secret_31,x_412) else fail-any)) else caught-fail) in
                                        {5886}let v_1287: bool = not-caught-fail(server_hts_31) in
                                        {5888}let h_353: bitstring = (if v_1287 then zero else caught-fail) in
                                        {5887}let l_366: label = (if v_1287 then tls13_key else caught-fail) in
                                        {5889}let x_413: bitstring = (if v_1287 then (l_366,h_353) else caught-fail) in
                                        {5890}let client_wkh_31: bitstring = (if v_1287 then catch-fail(hmac(@6_backend_h,client_hts_31,x_413)) else caught-fail) in
                                        {5891}let v_1288: bool = not-caught-fail(client_wkh_31) in
                                        {5893}let h_354: bitstring = (if v_1288 then zero else caught-fail) in
                                        {5892}let l_367: label = (if v_1288 then tls13_key else caught-fail) in
                                        {5894}let x_414: bitstring = (if v_1288 then (l_367,h_354) else caught-fail) in
                                        {5895}let server_wkh_31: bitstring = (if v_1288 then catch-fail(hmac(@6_backend_h,server_hts_31,x_414)) else caught-fail) in
                                        {5896}let v_1289: bool = not-caught-fail(server_wkh_31) in
                                        {5898}let h_355: bitstring = (if v_1289 then zero else caught-fail) in
                                        {5897}let l_368: label = (if v_1289 then tls13_finished else caught-fail) in
                                        {5899}let x_415: bitstring = (if v_1289 then (l_368,h_355) else caught-fail) in
                                        {5900}let client_fk_31: bitstring = (if v_1289 then catch-fail(hmac(@6_backend_h,client_hts_31,x_415)) else caught-fail) in
                                        {5901}let v_1290: bool = not-caught-fail(client_fk_31) in
                                        {5903}let h_356: bitstring = (if v_1290 then zero else caught-fail) in
                                        {5902}let l_369: label = (if v_1290 then tls13_finished else caught-fail) in
                                        {5904}let x_416: bitstring = (if v_1290 then (l_369,h_356) else caught-fail) in
                                        {5905}let server_fk_31: bitstring = (if v_1290 then catch-fail(hmac(@6_backend_h,server_hts_31,x_416)) else caught-fail) in
                                        {5906}let v_1291: bool = not-caught-fail(server_fk_31) in
                                        {5907}let (master_secret_70: bitstring,chk_38: aead_key,shk_37: aead_key,cfin_38: mac_key,sfin_37: mac_key) = (if v_1282 then (if v_1283 then (if v_1285 then (if v_1287 then (if v_1288 then (if v_1289 then (if v_1290 then (if v_1291 then (master_secret_69,client_wkh_31,server_wkh_31,client_fk_31,server_fk_31) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {5908}event Client_chk(@6_id_client,chk_38);
                                        {5909}event Client_shk(@6_id_client,shk_37);
                                        {5910}event Client_cfin(@6_id_client,cfin_38);
                                        {5911}event Client_sfin(@6_id_client,sfin_37);
                                        {5912}in(io, enc_ee_msg_30: bitstring);
                                        {5913}let ee_msg_31: msg = aead_dec(@6_backend_a,shk_37,0,zero,enc_ee_msg_30) in
                                        {5914}let EE(ech_ee_30: echExt,extra_ee_30: extraExt) = ee_msg_31 in
                                        {5915}let cur_log2_68: bitstring = (cur_log2_67,ee_msg_31) in
                                        {5916}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_6,sr_41,@6_backend_h,@6_backend_a,c_dom_6,backend_dom,psk_149,safe_psk_36,@6_comp_psk,master_secret_70,chk_38,0,shk_37,1,cfin_38,sfin_37,cur_log2_68)))
                                    )
                                    else
                                        {5917}out(io, illegal_parameter)
                                )
                                else
                                    {5918}out(io, illegal_parameter)
                            )
                            else
                                {6095}get pre_shared_keys(c_dom'_11: domain,=backend_dom,=@6_backend_h,id_70: identityPsk,psk_150: preSharedKey,idP_13: idProc,is_safe_59: bool) in
                                {5919}event Selected_one_time_used_psk(@6_id_client,psk_150,is_safe_59);
                                {5920}event Selected_psk(c_dom_6,c_dom'_11,idP_13,is_safe_59);
                                {5921}event Selected_psk_no_missmatch(@6_id_client,backend_dom,@6_backend_h,psk_150,id_70);
                                {5922}event Selected_psk_with_ID(c_dom_6,c_dom'_11,id_70,idP_13,is_safe_59);
                                {5923}let v_1292: bitstring = (id_70,psk_150,is_safe_59) in
                                {5924}let v_1293: bool = success?(1-proj-3-tuple(v_1292)) in
                                {5925}let is_safe_60: bool = (if v_1293 then 3-proj-3-tuple(v_1292) else caught-fail) in
                                {5926}let psk_151: preSharedKey = (if v_1293 then 2-proj-3-tuple(v_1292) else caught-fail) in
                                {5927}let id_71: identityPsk = (if v_1293 then 1-proj-3-tuple(v_1292) else caught-fail) in
                                {5931}let k_126: bitstring = (if v_1293 then catch-fail(psk2b(psk_151)) else caught-fail) in
                                {5932}let v_1294: bool = not-caught-fail(k_126) in
                                {5930}let s_131: bitstring = (if v_1293 then zero else caught-fail) in
                                {5933}let early_secret_99: bitstring = (if v_1293 then catch-fail((if v_1294 then hmac(@6_backend_h,s_131,k_126) else fail-any)) else caught-fail) in
                                {5934}let v_1295: bool = not-caught-fail(early_secret_99) in
                                {5936}let m_130: bitstring = (if v_1295 then zero else caught-fail) in
                                {5937}let h_357: bitstring = (if v_1295 then catch-fail(hash(@6_backend_h,m_130)) else caught-fail) in
                                {5938}let v_1296: bool = not-caught-fail(h_357) in
                                {5935}let l_370: label = (if v_1295 then tls13_ext_res_binder else caught-fail) in
                                {5939}let x_417: bitstring = (if v_1296 then (l_370,h_357) else caught-fail) in
                                {5940}let binder_key_66: bitstring = (if v_1295 then catch-fail((if v_1296 then hmac(@6_backend_h,early_secret_99,x_417) else fail-any)) else caught-fail) in
                                {5941}let v_1297: bool = not-caught-fail(binder_key_66) in
                                {5942}let v_1298: bitstring = (if v_1293 then catch-fail((if v_1295 then (if v_1297 then (early_secret_99,binder_key_66) else fail-any) else fail-any)) else caught-fail) in
                                {5943}let v_1299: bool = (not-caught-fail(v_1298) && success?(1-proj-2-tuple(v_1298))) in
                                {5944}let kb_66: mac_key = (if v_1299 then 2-proj-2-tuple(v_1298) else caught-fail) in
                                {5945}let es_100: bitstring = (if v_1299 then 1-proj-2-tuple(v_1298) else caught-fail) in
                                {5928}let offer_33: params = (if v_1293 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_3,SNI(backend_dom),ech_ext_11,@6_i_extra_ext,trunc_client_psk_ext(id_71)) else caught-fail) in
                                {5929}let cur_log'_21: bitstring = (if v_1293 then (cur_log_IN1_HRR_2,CH(i_cr_6,offer_33)) else caught-fail) in
                                {5946}let binders_20: bitstring = (if v_1299 then catch-fail(hmac(@6_backend_h,kb_66,cur_log'_21)) else caught-fail) in
                                {5947}let v_1300: bool = not-caught-fail(binders_20) in
                                {5948}let v_1301: bitstring = catch-fail((if v_1293 then (if v_1299 then (if v_1300 then (client_psk_ext(id_71,binders_20),(psk_151,id_71,es_100,is_safe_60)) else fail-any) else fail-any) else fail-any)) in
                                {5949}let v_1302: bool = (not-caught-fail(v_1301) && success?(1-proj-2-tuple(v_1301))) in
                                {5950}let psk_data_36: bitstring = (if v_1302 then 2-proj-2-tuple(v_1301) else caught-fail) in
                                {5951}let psk_ext_63: preSharedKeyExt = (if v_1302 then 1-proj-2-tuple(v_1301) else caught-fail) in
                                {5954}new fake_id_12[]: identityPsk;
                                {5955}new fake_binder_12[]: bitstring;
                                {5961}let v_1303: hpkeContext = (if v_1302 then catch-fail(context) else caught-fail) in
                                {5962}let v_1304: bool = (not-caught-fail(v_1303) && ((S =nf 1-proj-hpke_context(v_1303)) && success?(1-proj-hpke_context(v_1303)))) in
                                {5963}let base_nonce_11: bitstring = (if v_1304 then 3-proj-hpke_context(v_1303) else caught-fail) in
                                {5964}let key_11: aead_key = (if v_1304 then 2-proj-hpke_context(v_1303) else caught-fail) in
                                {5960}let n_10: nat = (if v_1302 then 2 else caught-fail) in
                                {5957}let o_ech_ext_ADD_10: echExt = (if v_1302 then ECHClientHelloOuter(ech_h_8,ech_a_8,config_id_6,zero,zero) else caught-fail) in
                                {5956}let o_psk_ext_13: preSharedKeyExt = (if v_1302 then (if @6_use_psk then client_psk_ext(fake_id_12,fake_binder_12) else empty_psk_ext) else caught-fail) in
                                {5958}let o_offer_ADD_10: params = (if v_1302 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_5,SNI(o_dom_6),o_ech_ext_ADD_10,empty_extra_ext,o_psk_ext_13) else caught-fail) in
                                {5959}let o_client_hello_ADD_10: msg = (if v_1302 then CH(o_cr_8,o_offer_ADD_10) else caught-fail) in
                                {5952}let i_offer_10: params = (if v_1302 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_3,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_63) else caught-fail) in
                                {5953}let i_client_hello_13: msg = (if v_1302 then CH(i_cr_6,i_offer_10) else caught-fail) in
                                {5965}let payload_11: bitstring = (if v_1302 then catch-fail((if v_1304 then aead_enc(ech_a_8,key_11,(base_nonce_11,n_10),o_client_hello_ADD_10,i_client_hello_13) else fail-any)) else caught-fail) in
                                {5966}let v_1305: bool = not-caught-fail(payload_11) in
                                {5967}let o_ech_ext_13: echExt = (if v_1305 then ECHClientHelloOuter(ech_h_8,ech_a_8,config_id_6,zero,payload_11) else caught-fail) in
                                {5968}let o_offer_21: params = (if v_1305 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_5,SNI(o_dom_6),o_ech_ext_13,empty_extra_ext,o_psk_ext_13) else caught-fail) in
                                {5969}let (o_client_hello'_7: msg,i_client_hello'_7: msg,i_cr'_7: bytes32,i_kex_data'_7: bitstring,psk_data'_26: bitstring) = (if v_1302 then (if v_1305 then (CH(o_cr_8,o_offer_21),i_client_hello_13,i_cr_6,i_kex_data_6,psk_data_36) else fail-any) else fail-any) in
                                {5970}out(io, o_client_hello'_7);
                                {5971}in(io, server_hello'_24: msg);
                                {5972}let SH(B32(sr24'_7: bytes24,sr8'_7: bytes8),params'_7: params) = server_hello'_24 in
                                {5974}let sh_modified_10: msg = SH(B32(sr24'_7,zero8),params'_7) in
                                {5973}let cur_log_IN1_HRR_IN2_7: bitstring = (cur_log_IN1_HRR_2,i_client_hello'_7) in
                                {5975}let cur_log_sh_10: bitstring = (cur_log_IN1_HRR_IN2_7,sh_modified_10) in
                                {5976}let transcript_ech_conf_10: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_10)) in
                                {5977}let v_1306: bool = not-caught-fail(transcript_ech_conf_10) in
                                {5979}let k_127: bitstring = (if v_1306 then catch-fail(b32_2_b(get_random(i_client_hello'_7))) else caught-fail) in
                                {5980}let v_1307: bool = not-caught-fail(k_127) in
                                {5978}let s_132: bitstring = (if v_1306 then zero else caught-fail) in
                                {5981}let k_128: bitstring = (if v_1306 then catch-fail((if v_1307 then hmac(@6_backend_h,s_132,k_127) else fail-any)) else caught-fail) in
                                {5982}let v_1308: bool = not-caught-fail(k_128) in
                                {5983}let l_371: label = (if v_1308 then ech_accept_confirmation else caught-fail) in
                                {5984}let x_418: bitstring = (if v_1308 then (l_371,cur_log_sh_10) else caught-fail) in
                                {5985}let sr8_13: bytes8 = (if v_1306 then catch-fail(crop_into_bytes8((if v_1308 then hmac(@6_backend_h,k_128,x_418) else fail-any))) else caught-fail) in
                                {5986}let v_1309: bool = not-caught-fail(sr8_13) in
                                {5987}if (B32(sr24'_7,sr8'_7) = (if v_1306 then (if v_1309 then B32(sr24'_7,sr8_13) else fail-any) else fail-any)) then
                                {5988}let (x_419: bitstring,g_35: group) = i_kex_data'_7 in
                                {5989}let (psk_offer_31: preSharedKey,id_offer_31: identityPsk,es_offer_31: bitstring,is_safe_offer_31: bool) = psk_data'_26 in
                                {5990}event Client_PSKOffer(@6_id_client,psk_offer_31,id_offer_31,is_safe_offer_31);
                                {5991}event Client_Rand_client(@6_id_client,i_cr'_7);
                                {5992}event Client_DH_client(@6_id_client,dh_pub(g_35,x_419));
                                {5993}event Client_server_domain(@6_id_client,backend_dom);
                                {5994}let SH(sr_42: bytes32,mode_37: params) = server_hello'_24 in
                                {5995}event Client_Rand_server(@6_id_client,sr_42);
                                {5996}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_35,gy_32: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_64: preSharedKeyExt) = mode_37 in
                                (
                                    {5998}event Client_DH_server(@6_id_client,gy_32);
                                    {5999}let v_1310: bool = (psk_ext_64 = empty_psk_ext) in
                                    {6000}let psk_152: preSharedKey = (if v_1310 then NoPsk else caught-fail) in
                                    {6002}let k_129: bitstring = (if v_1310 then catch-fail(psk2b(psk_152)) else caught-fail) in
                                    {6003}let v_1311: bool = not-caught-fail(k_129) in
                                    {6001}let s_133: bitstring = (if v_1310 then zero else caught-fail) in
                                    {6004}let early_secret_100: bitstring = (if v_1310 then catch-fail((if v_1311 then hmac(@6_backend_h,s_133,k_129) else fail-any)) else caught-fail) in
                                    {6005}let v_1312: bool = not-caught-fail(early_secret_100) in
                                    {6007}let m_131: bitstring = (if v_1312 then zero else caught-fail) in
                                    {6008}let h_358: bitstring = (if v_1312 then catch-fail(hash(@6_backend_h,m_131)) else caught-fail) in
                                    {6009}let v_1313: bool = not-caught-fail(h_358) in
                                    {6006}let l_372: label = (if v_1312 then tls13_ext_res_binder else caught-fail) in
                                    {6010}let x_420: bitstring = (if v_1313 then (l_372,h_358) else caught-fail) in
                                    {6011}let binder_key_67: bitstring = (if v_1312 then catch-fail((if v_1313 then hmac(@6_backend_h,early_secret_100,x_420) else fail-any)) else caught-fail) in
                                    {6012}let v_1314: bool = not-caught-fail(binder_key_67) in
                                    {6013}let v_1315: bitstring = (if v_1310 then catch-fail((if v_1312 then (if v_1314 then (early_secret_100,binder_key_67) else fail-any) else fail-any)) else caught-fail) in
                                    {6014}let v_1316: bool = (not-caught-fail(v_1315) && success?(1-proj-2-tuple(v_1315))) in
                                    {6015}let kb_67: mac_key = (if v_1316 then 2-proj-2-tuple(v_1315) else caught-fail) in
                                    {6016}let es_101: bitstring = (if v_1316 then 1-proj-2-tuple(v_1315) else caught-fail) in
                                    {6017}let v_1317: bitstring = (if not(v_1310) then catch-fail(psk_data'_26) else caught-fail) in
                                    {6018}let v_1318: bool = (not-caught-fail(v_1317) && success?(1-proj-4-tuple(v_1317))) in
                                    {6019}let is_safe_61: bool = (if v_1318 then 4-proj-4-tuple(v_1317) else caught-fail) in
                                    {6020}let es_102: bitstring = (if v_1318 then 3-proj-4-tuple(v_1317) else caught-fail) in
                                    {6021}let id_72: identityPsk = (if v_1318 then 2-proj-4-tuple(v_1317) else caught-fail) in
                                    {6022}let psk_153: preSharedKey = (if v_1318 then 1-proj-4-tuple(v_1317) else caught-fail) in
                                    {6023}let (psk_154: preSharedKey,early_secret_101: bitstring,valid_31: bool,safe_psk_37: bool) = (if v_1310 then (if v_1316 then (NoPsk,es_101,true,false) else fail-any) else (if v_1318 then (psk_153,es_102,((psk_153 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_64)),is_safe_61) else fail-any)) in
                                    {6024}event Client_PSKChoosen(@6_id_client,psk_154,safe_psk_37);
                                    {6025}if valid_31 then
                                    (
                                        {6028}new s_134[]: seed;
                                        {6026}let gxy_63: element = catch-fail(dh_decap_fun(g_35,gy_32,x_419)) in
                                        {6027}let v_1319: bool = not-caught-fail(gxy_63) in
                                        {6029}let gxy_64: element = (if v_1319 then gxy_63 else dh_f(s_134)) in
                                        {6030}event Client_DH_gxy(@6_id_client,gxy_64);
                                        {6032}let m_132: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {6033}let v_1320: bool = not-caught-fail(m_132) in
                                        {6034}let h_359: bitstring = (if v_1320 then catch-fail(hash(@6_backend_h,m_132)) else caught-fail) in
                                        {6035}let v_1321: bool = not-caught-fail(h_359) in
                                        {6031}let l_373: label = tls13_derived in
                                        {6036}let x_421: bitstring = (if v_1321 then (l_373,h_359) else caught-fail) in
                                        {6037}let extra_70: bitstring = catch-fail((if v_1320 then (if v_1321 then hmac(@6_backend_h,early_secret_101,x_421) else fail-any) else fail-any)) in
                                        {6038}let v_1322: bool = not-caught-fail(extra_70) in
                                        {6039}let handshake_secret_32: bitstring = (if v_1322 then hmac(@6_backend_h,extra_70,gxy_64) else fail-any) in
                                        {6041}let m_133: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                        {6042}let v_1323: bool = not-caught-fail(m_133) in
                                        {6043}let h_360: bitstring = (if v_1323 then catch-fail(hash(@6_backend_h,m_133)) else caught-fail) in
                                        {6044}let v_1324: bool = not-caught-fail(h_360) in
                                        {6040}let l_374: label = tls13_derived in
                                        {6045}let x_422: bitstring = (if v_1324 then (l_374,h_360) else caught-fail) in
                                        {6046}let extra_71: bitstring = catch-fail((if v_1323 then (if v_1324 then hmac(@6_backend_h,handshake_secret_32,x_422) else fail-any) else fail-any)) in
                                        {6047}let v_1325: bool = not-caught-fail(extra_71) in
                                        {6048}let k_130: bitstring = (if v_1325 then zero else caught-fail) in
                                        {6049}let master_secret_71: bitstring = (if v_1325 then catch-fail(hmac(@6_backend_h,handshake_secret_32,k_130)) else caught-fail) in
                                        {6050}let v_1326: bool = not-caught-fail(master_secret_71) in
                                        {5997}let cur_log2_69: bitstring = (cur_log_IN1_HRR_IN2_7,server_hello'_24) in
                                        {6052}let h_361: bitstring = (if v_1326 then catch-fail(hash(@6_backend_h,cur_log2_69)) else caught-fail) in
                                        {6053}let v_1327: bool = not-caught-fail(h_361) in
                                        {6051}let l_375: label = (if v_1326 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {6054}let x_423: bitstring = (if v_1327 then (l_375,h_361) else caught-fail) in
                                        {6055}let client_hts_32: bitstring = (if v_1326 then catch-fail((if v_1327 then hmac(@6_backend_h,handshake_secret_32,x_423) else fail-any)) else caught-fail) in
                                        {6056}let v_1328: bool = not-caught-fail(client_hts_32) in
                                        {6058}let h_362: bitstring = (if v_1328 then catch-fail(hash(@6_backend_h,cur_log2_69)) else caught-fail) in
                                        {6059}let v_1329: bool = not-caught-fail(h_362) in
                                        {6057}let l_376: label = (if v_1328 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {6060}let x_424: bitstring = (if v_1329 then (l_376,h_362) else caught-fail) in
                                        {6061}let server_hts_32: bitstring = (if v_1328 then catch-fail((if v_1329 then hmac(@6_backend_h,handshake_secret_32,x_424) else fail-any)) else caught-fail) in
                                        {6062}let v_1330: bool = not-caught-fail(server_hts_32) in
                                        {6064}let h_363: bitstring = (if v_1330 then zero else caught-fail) in
                                        {6063}let l_377: label = (if v_1330 then tls13_key else caught-fail) in
                                        {6065}let x_425: bitstring = (if v_1330 then (l_377,h_363) else caught-fail) in
                                        {6066}let client_wkh_32: bitstring = (if v_1330 then catch-fail(hmac(@6_backend_h,client_hts_32,x_425)) else caught-fail) in
                                        {6067}let v_1331: bool = not-caught-fail(client_wkh_32) in
                                        {6069}let h_364: bitstring = (if v_1331 then zero else caught-fail) in
                                        {6068}let l_378: label = (if v_1331 then tls13_key else caught-fail) in
                                        {6070}let x_426: bitstring = (if v_1331 then (l_378,h_364) else caught-fail) in
                                        {6071}let server_wkh_32: bitstring = (if v_1331 then catch-fail(hmac(@6_backend_h,server_hts_32,x_426)) else caught-fail) in
                                        {6072}let v_1332: bool = not-caught-fail(server_wkh_32) in
                                        {6074}let h_365: bitstring = (if v_1332 then zero else caught-fail) in
                                        {6073}let l_379: label = (if v_1332 then tls13_finished else caught-fail) in
                                        {6075}let x_427: bitstring = (if v_1332 then (l_379,h_365) else caught-fail) in
                                        {6076}let client_fk_32: bitstring = (if v_1332 then catch-fail(hmac(@6_backend_h,client_hts_32,x_427)) else caught-fail) in
                                        {6077}let v_1333: bool = not-caught-fail(client_fk_32) in
                                        {6079}let h_366: bitstring = (if v_1333 then zero else caught-fail) in
                                        {6078}let l_380: label = (if v_1333 then tls13_finished else caught-fail) in
                                        {6080}let x_428: bitstring = (if v_1333 then (l_380,h_366) else caught-fail) in
                                        {6081}let server_fk_32: bitstring = (if v_1333 then catch-fail(hmac(@6_backend_h,server_hts_32,x_428)) else caught-fail) in
                                        {6082}let v_1334: bool = not-caught-fail(server_fk_32) in
                                        {6083}let (master_secret_72: bitstring,chk_39: aead_key,shk_38: aead_key,cfin_39: mac_key,sfin_38: mac_key) = (if v_1325 then (if v_1326 then (if v_1328 then (if v_1330 then (if v_1331 then (if v_1332 then (if v_1333 then (if v_1334 then (master_secret_71,client_wkh_32,server_wkh_32,client_fk_32,server_fk_32) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {6084}event Client_chk(@6_id_client,chk_39);
                                        {6085}event Client_shk(@6_id_client,shk_38);
                                        {6086}event Client_cfin(@6_id_client,cfin_39);
                                        {6087}event Client_sfin(@6_id_client,sfin_38);
                                        {6088}in(io, enc_ee_msg_31: bitstring);
                                        {6089}let ee_msg_32: msg = aead_dec(@6_backend_a,shk_38,0,zero,enc_ee_msg_31) in
                                        {6090}let EE(ech_ee_31: echExt,extra_ee_31: extraExt) = ee_msg_32 in
                                        {6091}let cur_log2_70: bitstring = (cur_log2_69,ee_msg_32) in
                                        {6092}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_7,sr_42,@6_backend_h,@6_backend_a,c_dom_6,backend_dom,psk_154,safe_psk_37,@6_comp_psk,master_secret_72,chk_39,0,shk_38,1,cfin_39,sfin_38,cur_log2_70)))
                                    )
                                    else
                                        {6093}out(io, illegal_parameter)
                                )
                                else
                                    {6094}out(io, illegal_parameter)
                        )
                        else
                            {6096}let psk_155: preSharedKey = NoPsk in
                            {6098}let k_131: bitstring = catch-fail(psk2b(psk_155)) in
                            {6099}let v_1335: bool = not-caught-fail(k_131) in
                            {6097}let s_135: bitstring = zero in
                            {6100}let early_secret_102: bitstring = catch-fail((if v_1335 then hmac(@6_backend_h,s_135,k_131) else fail-any)) in
                            {6101}let v_1336: bool = not-caught-fail(early_secret_102) in
                            {6103}let m_134: bitstring = (if v_1336 then zero else caught-fail) in
                            {6104}let h_367: bitstring = (if v_1336 then catch-fail(hash(@6_backend_h,m_134)) else caught-fail) in
                            {6105}let v_1337: bool = not-caught-fail(h_367) in
                            {6102}let l_381: label = (if v_1336 then tls13_ext_res_binder else caught-fail) in
                            {6106}let x_429: bitstring = (if v_1337 then (l_381,h_367) else caught-fail) in
                            {6107}let binder_key_68: bitstring = (if v_1336 then catch-fail((if v_1337 then hmac(@6_backend_h,early_secret_102,x_429) else fail-any)) else caught-fail) in
                            {6108}let v_1338: bool = not-caught-fail(binder_key_68) in
                            {6109}let v_1339: bitstring = catch-fail((if v_1336 then (if v_1338 then (early_secret_102,binder_key_68) else fail-any) else fail-any)) in
                            {6110}let v_1340: bool = (not-caught-fail(v_1339) && success?(1-proj-2-tuple(v_1339))) in
                            {6111}let kb_68: mac_key = (if v_1340 then 2-proj-2-tuple(v_1339) else caught-fail) in
                            {6112}let es_103: bitstring = (if v_1340 then 1-proj-2-tuple(v_1339) else caught-fail) in
                            {6113}let v_1341: bitstring = catch-fail((if v_1340 then (empty_psk_ext,(NoPsk,zero,es_103,false)) else fail-any)) in
                            {6114}let v_1342: bool = (not-caught-fail(v_1341) && success?(1-proj-2-tuple(v_1341))) in
                            {6115}let psk_data_37: bitstring = (if v_1342 then 2-proj-2-tuple(v_1341) else caught-fail) in
                            {6116}let psk_ext_65: preSharedKeyExt = (if v_1342 then 1-proj-2-tuple(v_1341) else caught-fail) in
                            {6119}new fake_id_13[]: identityPsk;
                            {6120}new fake_binder_13[]: bitstring;
                            {6126}let v_1343: hpkeContext = (if v_1342 then catch-fail(context) else caught-fail) in
                            {6127}let v_1344: bool = (not-caught-fail(v_1343) && ((S =nf 1-proj-hpke_context(v_1343)) && success?(1-proj-hpke_context(v_1343)))) in
                            {6128}let base_nonce_12: bitstring = (if v_1344 then 3-proj-hpke_context(v_1343) else caught-fail) in
                            {6129}let key_12: aead_key = (if v_1344 then 2-proj-hpke_context(v_1343) else caught-fail) in
                            {6125}let n_11: nat = (if v_1342 then 2 else caught-fail) in
                            {6122}let o_ech_ext_ADD_11: echExt = (if v_1342 then ECHClientHelloOuter(ech_h_8,ech_a_8,config_id_6,zero,zero) else caught-fail) in
                            {6121}let o_psk_ext_14: preSharedKeyExt = (if v_1342 then (if @6_use_psk then client_psk_ext(fake_id_13,fake_binder_13) else empty_psk_ext) else caught-fail) in
                            {6123}let o_offer_ADD_11: params = (if v_1342 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_5,SNI(o_dom_6),o_ech_ext_ADD_11,empty_extra_ext,o_psk_ext_14) else caught-fail) in
                            {6124}let o_client_hello_ADD_11: msg = (if v_1342 then CH(o_cr_8,o_offer_ADD_11) else caught-fail) in
                            {6117}let i_offer_11: params = (if v_1342 then nego(TLS13,@6_backend_h,@6_backend_a,i_kex_ext_3,SNI(backend_dom),ECHClientHelloInner,@6_i_extra_ext,psk_ext_65) else caught-fail) in
                            {6118}let i_client_hello_14: msg = (if v_1342 then CH(i_cr_6,i_offer_11) else caught-fail) in
                            {6130}let payload_12: bitstring = (if v_1342 then catch-fail((if v_1344 then aead_enc(ech_a_8,key_12,(base_nonce_12,n_11),o_client_hello_ADD_11,i_client_hello_14) else fail-any)) else caught-fail) in
                            {6131}let v_1345: bool = not-caught-fail(payload_12) in
                            {6132}let o_ech_ext_14: echExt = (if v_1345 then ECHClientHelloOuter(ech_h_8,ech_a_8,config_id_6,zero,payload_12) else caught-fail) in
                            {6133}let o_offer_22: params = (if v_1345 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_5,SNI(o_dom_6),o_ech_ext_14,empty_extra_ext,o_psk_ext_14) else caught-fail) in
                            {6134}let (o_client_hello'_8: msg,i_client_hello'_8: msg,i_cr'_8: bytes32,i_kex_data'_8: bitstring,psk_data'_27: bitstring) = (if v_1342 then (if v_1345 then (CH(o_cr_8,o_offer_22),i_client_hello_14,i_cr_6,i_kex_data_6,psk_data_37) else fail-any) else fail-any) in
                            {6135}out(io, o_client_hello'_8);
                            {6136}in(io, server_hello'_25: msg);
                            {6137}let SH(B32(sr24'_8: bytes24,sr8'_8: bytes8),params'_8: params) = server_hello'_25 in
                            {6139}let sh_modified_11: msg = SH(B32(sr24'_8,zero8),params'_8) in
                            {6138}let cur_log_IN1_HRR_IN2_8: bitstring = (cur_log_IN1_HRR_2,i_client_hello'_8) in
                            {6140}let cur_log_sh_11: bitstring = (cur_log_IN1_HRR_IN2_8,sh_modified_11) in
                            {6141}let transcript_ech_conf_11: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_11)) in
                            {6142}let v_1346: bool = not-caught-fail(transcript_ech_conf_11) in
                            {6144}let k_132: bitstring = (if v_1346 then catch-fail(b32_2_b(get_random(i_client_hello'_8))) else caught-fail) in
                            {6145}let v_1347: bool = not-caught-fail(k_132) in
                            {6143}let s_136: bitstring = (if v_1346 then zero else caught-fail) in
                            {6146}let k_133: bitstring = (if v_1346 then catch-fail((if v_1347 then hmac(@6_backend_h,s_136,k_132) else fail-any)) else caught-fail) in
                            {6147}let v_1348: bool = not-caught-fail(k_133) in
                            {6148}let l_382: label = (if v_1348 then ech_accept_confirmation else caught-fail) in
                            {6149}let x_430: bitstring = (if v_1348 then (l_382,cur_log_sh_11) else caught-fail) in
                            {6150}let sr8_14: bytes8 = (if v_1346 then catch-fail(crop_into_bytes8((if v_1348 then hmac(@6_backend_h,k_133,x_430) else fail-any))) else caught-fail) in
                            {6151}let v_1349: bool = not-caught-fail(sr8_14) in
                            {6152}if (B32(sr24'_8,sr8'_8) = (if v_1346 then (if v_1349 then B32(sr24'_8,sr8_14) else fail-any) else fail-any)) then
                            {6153}let (x_431: bitstring,g_36: group) = i_kex_data'_8 in
                            {6154}let (psk_offer_32: preSharedKey,id_offer_32: identityPsk,es_offer_32: bitstring,is_safe_offer_32: bool) = psk_data'_27 in
                            {6155}event Client_PSKOffer(@6_id_client,psk_offer_32,id_offer_32,is_safe_offer_32);
                            {6156}event Client_Rand_client(@6_id_client,i_cr'_8);
                            {6157}event Client_DH_client(@6_id_client,dh_pub(g_36,x_431));
                            {6158}event Client_server_domain(@6_id_client,backend_dom);
                            {6159}let SH(sr_43: bytes32,mode_38: params) = server_hello'_25 in
                            {6160}event Client_Rand_server(@6_id_client,sr_43);
                            {6161}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_36,gy_33: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_66: preSharedKeyExt) = mode_38 in
                            (
                                {6163}event Client_DH_server(@6_id_client,gy_33);
                                {6164}let v_1350: bool = (psk_ext_66 = empty_psk_ext) in
                                {6165}let psk_156: preSharedKey = (if v_1350 then NoPsk else caught-fail) in
                                {6167}let k_134: bitstring = (if v_1350 then catch-fail(psk2b(psk_156)) else caught-fail) in
                                {6168}let v_1351: bool = not-caught-fail(k_134) in
                                {6166}let s_137: bitstring = (if v_1350 then zero else caught-fail) in
                                {6169}let early_secret_103: bitstring = (if v_1350 then catch-fail((if v_1351 then hmac(@6_backend_h,s_137,k_134) else fail-any)) else caught-fail) in
                                {6170}let v_1352: bool = not-caught-fail(early_secret_103) in
                                {6172}let m_135: bitstring = (if v_1352 then zero else caught-fail) in
                                {6173}let h_368: bitstring = (if v_1352 then catch-fail(hash(@6_backend_h,m_135)) else caught-fail) in
                                {6174}let v_1353: bool = not-caught-fail(h_368) in
                                {6171}let l_383: label = (if v_1352 then tls13_ext_res_binder else caught-fail) in
                                {6175}let x_432: bitstring = (if v_1353 then (l_383,h_368) else caught-fail) in
                                {6176}let binder_key_69: bitstring = (if v_1352 then catch-fail((if v_1353 then hmac(@6_backend_h,early_secret_103,x_432) else fail-any)) else caught-fail) in
                                {6177}let v_1354: bool = not-caught-fail(binder_key_69) in
                                {6178}let v_1355: bitstring = (if v_1350 then catch-fail((if v_1352 then (if v_1354 then (early_secret_103,binder_key_69) else fail-any) else fail-any)) else caught-fail) in
                                {6179}let v_1356: bool = (not-caught-fail(v_1355) && success?(1-proj-2-tuple(v_1355))) in
                                {6180}let kb_69: mac_key = (if v_1356 then 2-proj-2-tuple(v_1355) else caught-fail) in
                                {6181}let es_104: bitstring = (if v_1356 then 1-proj-2-tuple(v_1355) else caught-fail) in
                                {6182}let v_1357: bitstring = (if not(v_1350) then catch-fail(psk_data'_27) else caught-fail) in
                                {6183}let v_1358: bool = (not-caught-fail(v_1357) && success?(1-proj-4-tuple(v_1357))) in
                                {6184}let is_safe_62: bool = (if v_1358 then 4-proj-4-tuple(v_1357) else caught-fail) in
                                {6185}let es_105: bitstring = (if v_1358 then 3-proj-4-tuple(v_1357) else caught-fail) in
                                {6186}let id_73: identityPsk = (if v_1358 then 2-proj-4-tuple(v_1357) else caught-fail) in
                                {6187}let psk_157: preSharedKey = (if v_1358 then 1-proj-4-tuple(v_1357) else caught-fail) in
                                {6188}let (psk_158: preSharedKey,early_secret_104: bitstring,valid_32: bool,safe_psk_38: bool) = (if v_1350 then (if v_1356 then (NoPsk,es_104,true,false) else fail-any) else (if v_1358 then (psk_157,es_105,((psk_157 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_66)),is_safe_62) else fail-any)) in
                                {6189}event Client_PSKChoosen(@6_id_client,psk_158,safe_psk_38);
                                {6190}if valid_32 then
                                (
                                    {6193}new s_138[]: seed;
                                    {6191}let gxy_65: element = catch-fail(dh_decap_fun(g_36,gy_33,x_431)) in
                                    {6192}let v_1359: bool = not-caught-fail(gxy_65) in
                                    {6194}let gxy_66: element = (if v_1359 then gxy_65 else dh_f(s_138)) in
                                    {6195}event Client_DH_gxy(@6_id_client,gxy_66);
                                    {6197}let m_136: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                    {6198}let v_1360: bool = not-caught-fail(m_136) in
                                    {6199}let h_369: bitstring = (if v_1360 then catch-fail(hash(@6_backend_h,m_136)) else caught-fail) in
                                    {6200}let v_1361: bool = not-caught-fail(h_369) in
                                    {6196}let l_384: label = tls13_derived in
                                    {6201}let x_433: bitstring = (if v_1361 then (l_384,h_369) else caught-fail) in
                                    {6202}let extra_72: bitstring = catch-fail((if v_1360 then (if v_1361 then hmac(@6_backend_h,early_secret_104,x_433) else fail-any) else fail-any)) in
                                    {6203}let v_1362: bool = not-caught-fail(extra_72) in
                                    {6204}let handshake_secret_33: bitstring = (if v_1362 then hmac(@6_backend_h,extra_72,gxy_66) else fail-any) in
                                    {6206}let m_137: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                    {6207}let v_1363: bool = not-caught-fail(m_137) in
                                    {6208}let h_370: bitstring = (if v_1363 then catch-fail(hash(@6_backend_h,m_137)) else caught-fail) in
                                    {6209}let v_1364: bool = not-caught-fail(h_370) in
                                    {6205}let l_385: label = tls13_derived in
                                    {6210}let x_434: bitstring = (if v_1364 then (l_385,h_370) else caught-fail) in
                                    {6211}let extra_73: bitstring = catch-fail((if v_1363 then (if v_1364 then hmac(@6_backend_h,handshake_secret_33,x_434) else fail-any) else fail-any)) in
                                    {6212}let v_1365: bool = not-caught-fail(extra_73) in
                                    {6213}let k_135: bitstring = (if v_1365 then zero else caught-fail) in
                                    {6214}let master_secret_73: bitstring = (if v_1365 then catch-fail(hmac(@6_backend_h,handshake_secret_33,k_135)) else caught-fail) in
                                    {6215}let v_1366: bool = not-caught-fail(master_secret_73) in
                                    {6162}let cur_log2_71: bitstring = (cur_log_IN1_HRR_IN2_8,server_hello'_25) in
                                    {6217}let h_371: bitstring = (if v_1366 then catch-fail(hash(@6_backend_h,cur_log2_71)) else caught-fail) in
                                    {6218}let v_1367: bool = not-caught-fail(h_371) in
                                    {6216}let l_386: label = (if v_1366 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {6219}let x_435: bitstring = (if v_1367 then (l_386,h_371) else caught-fail) in
                                    {6220}let client_hts_33: bitstring = (if v_1366 then catch-fail((if v_1367 then hmac(@6_backend_h,handshake_secret_33,x_435) else fail-any)) else caught-fail) in
                                    {6221}let v_1368: bool = not-caught-fail(client_hts_33) in
                                    {6223}let h_372: bitstring = (if v_1368 then catch-fail(hash(@6_backend_h,cur_log2_71)) else caught-fail) in
                                    {6224}let v_1369: bool = not-caught-fail(h_372) in
                                    {6222}let l_387: label = (if v_1368 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {6225}let x_436: bitstring = (if v_1369 then (l_387,h_372) else caught-fail) in
                                    {6226}let server_hts_33: bitstring = (if v_1368 then catch-fail((if v_1369 then hmac(@6_backend_h,handshake_secret_33,x_436) else fail-any)) else caught-fail) in
                                    {6227}let v_1370: bool = not-caught-fail(server_hts_33) in
                                    {6229}let h_373: bitstring = (if v_1370 then zero else caught-fail) in
                                    {6228}let l_388: label = (if v_1370 then tls13_key else caught-fail) in
                                    {6230}let x_437: bitstring = (if v_1370 then (l_388,h_373) else caught-fail) in
                                    {6231}let client_wkh_33: bitstring = (if v_1370 then catch-fail(hmac(@6_backend_h,client_hts_33,x_437)) else caught-fail) in
                                    {6232}let v_1371: bool = not-caught-fail(client_wkh_33) in
                                    {6234}let h_374: bitstring = (if v_1371 then zero else caught-fail) in
                                    {6233}let l_389: label = (if v_1371 then tls13_key else caught-fail) in
                                    {6235}let x_438: bitstring = (if v_1371 then (l_389,h_374) else caught-fail) in
                                    {6236}let server_wkh_33: bitstring = (if v_1371 then catch-fail(hmac(@6_backend_h,server_hts_33,x_438)) else caught-fail) in
                                    {6237}let v_1372: bool = not-caught-fail(server_wkh_33) in
                                    {6239}let h_375: bitstring = (if v_1372 then zero else caught-fail) in
                                    {6238}let l_390: label = (if v_1372 then tls13_finished else caught-fail) in
                                    {6240}let x_439: bitstring = (if v_1372 then (l_390,h_375) else caught-fail) in
                                    {6241}let client_fk_33: bitstring = (if v_1372 then catch-fail(hmac(@6_backend_h,client_hts_33,x_439)) else caught-fail) in
                                    {6242}let v_1373: bool = not-caught-fail(client_fk_33) in
                                    {6244}let h_376: bitstring = (if v_1373 then zero else caught-fail) in
                                    {6243}let l_391: label = (if v_1373 then tls13_finished else caught-fail) in
                                    {6245}let x_440: bitstring = (if v_1373 then (l_391,h_376) else caught-fail) in
                                    {6246}let server_fk_33: bitstring = (if v_1373 then catch-fail(hmac(@6_backend_h,server_hts_33,x_440)) else caught-fail) in
                                    {6247}let v_1374: bool = not-caught-fail(server_fk_33) in
                                    {6248}let (master_secret_74: bitstring,chk_40: aead_key,shk_39: aead_key,cfin_40: mac_key,sfin_39: mac_key) = (if v_1365 then (if v_1366 then (if v_1368 then (if v_1370 then (if v_1371 then (if v_1372 then (if v_1373 then (if v_1374 then (master_secret_73,client_wkh_33,server_wkh_33,client_fk_33,server_fk_33) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {6249}event Client_chk(@6_id_client,chk_40);
                                    {6250}event Client_shk(@6_id_client,shk_39);
                                    {6251}event Client_cfin(@6_id_client,cfin_40);
                                    {6252}event Client_sfin(@6_id_client,sfin_39);
                                    {6253}in(io, enc_ee_msg_32: bitstring);
                                    {6254}let ee_msg_33: msg = aead_dec(@6_backend_a,shk_39,0,zero,enc_ee_msg_32) in
                                    {6255}let EE(ech_ee_32: echExt,extra_ee_32: extraExt) = ee_msg_33 in
                                    {6256}let cur_log2_72: bitstring = (cur_log2_71,ee_msg_33) in
                                    {6257}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr'_8,sr_43,@6_backend_h,@6_backend_a,c_dom_6,backend_dom,psk_158,safe_psk_38,@6_comp_psk,master_secret_74,chk_40,0,shk_39,1,cfin_40,sfin_39,cur_log2_72)))
                                )
                                else
                                    {6258}out(io, illegal_parameter)
                            )
                            else
                                {6259}out(io, illegal_parameter)
                    )
                    else
                        {6261}let ech_config(config_id_7: configId,ech_g_9: group,pkR_9: element,o_dom_7: domain,ech_h_9: hash_alg,ech_a_9: aead_alg) = ech_conf in
                        {6262}new rand24_15[]: bytes24;
                        {6263}new rand8_15[]: bytes8;
                        {6266}new s_139[]: seed;
                        {6267}let gx_31: element = dh_pub(@6_tls_g,dh_k(s_139)) in
                        {6268}let v_1375: bitstring = (dh_k(s_139),gx_31) in
                        {6269}let v_1376: bool = success?(1-proj-2-tuple(v_1375)) in
                        {6270}let gx_32: element = (if v_1376 then 2-proj-2-tuple(v_1375) else caught-fail) in
                        {6271}let x_441: bitstring = (if v_1376 then 1-proj-2-tuple(v_1375) else caught-fail) in
                        {6265}let send_key_share_8: bool = true in
                        {6272}let kex_14: kex_alg = (if v_1376 then (if send_key_share_8 then DHE_kex(@6_tls_g,gx_32) else DHE_group(@6_tls_g)) else caught-fail) in
                        {6273}let (o_kex_ext_6: keyShareExt,kex_data_9: bitstring) = (if v_1376 then (client_kex_ext(kex_14),(x_441,@6_tls_g)) else fail-any) in
                        {6264}let o_cr_9: bytes32 = B32(rand24_15,rand8_15) in
                        {6260}let cur_log_OU1_HRR_2: bitstring = ((zero,o_client_hello_2),server_hello_6) in
                        {6274}if @6_use_grease then
                        (
                            {6276}if @6_use_psk then
                            (
                                {6275}let extra_74: extraExt = empty_extra_ext in
                                {6277}let (psk_159: preSharedKey,id_74: identityPsk,old_es_10: bitstring,is_safe_63: bool) = psk_data_34 in
                                (
                                    {6281}let k_136: bitstring = catch-fail(psk2b(psk_159)) in
                                    {6282}let v_1377: bool = not-caught-fail(k_136) in
                                    {6280}let s_140: bitstring = zero in
                                    {6283}let early_secret_105: bitstring = catch-fail((if v_1377 then hmac(@6_tls_h,s_140,k_136) else fail-any)) in
                                    {6284}let v_1378: bool = not-caught-fail(early_secret_105) in
                                    {6286}let m_138: bitstring = (if v_1378 then zero else caught-fail) in
                                    {6287}let h_377: bitstring = (if v_1378 then catch-fail(hash(@6_tls_h,m_138)) else caught-fail) in
                                    {6288}let v_1379: bool = not-caught-fail(h_377) in
                                    {6285}let l_392: label = (if v_1378 then tls13_ext_res_binder else caught-fail) in
                                    {6289}let x_442: bitstring = (if v_1379 then (l_392,h_377) else caught-fail) in
                                    {6290}let binder_key_70: bitstring = (if v_1378 then catch-fail((if v_1379 then hmac(@6_tls_h,early_secret_105,x_442) else fail-any)) else caught-fail) in
                                    {6291}let v_1380: bool = not-caught-fail(binder_key_70) in
                                    {6292}let v_1381: bitstring = catch-fail((if v_1378 then (if v_1380 then (early_secret_105,binder_key_70) else fail-any) else fail-any)) in
                                    {6293}let v_1382: bool = (not-caught-fail(v_1381) && success?(1-proj-2-tuple(v_1381))) in
                                    {6294}let kb_70: mac_key = (if v_1382 then 2-proj-2-tuple(v_1381) else caught-fail) in
                                    {6295}let es_106: bitstring = (if v_1382 then 1-proj-2-tuple(v_1381) else caught-fail) in
                                    {6278}let offer_34: params = nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_6,SNI(o_dom_7),o_ech_ext_11,extra_74,trunc_client_psk_ext(id_74)) in
                                    {6279}let cur_log'_22: bitstring = (cur_log_OU1_HRR_2,CH(o_cr_9,offer_34)) in
                                    {6296}let binders_21: bitstring = (if v_1382 then catch-fail(hmac(@6_tls_h,kb_70,cur_log'_22)) else caught-fail) in
                                    {6297}let v_1383: bool = not-caught-fail(binders_21) in
                                    {6298}let v_1384: bitstring = catch-fail((if v_1382 then (if v_1383 then (client_psk_ext(id_74,binders_21),(psk_159,id_74,es_106,is_safe_63)) else fail-any) else fail-any)) in
                                    {6299}let v_1385: bool = (not-caught-fail(v_1384) && success?(1-proj-2-tuple(v_1384))) in
                                    {6300}let psk_data_38: bitstring = (if v_1385 then 2-proj-2-tuple(v_1384) else caught-fail) in
                                    {6301}let psk_ext_67: preSharedKeyExt = (if v_1385 then 1-proj-2-tuple(v_1384) else caught-fail) in
                                    {6302}let o_offer_23: params = (if v_1385 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_6,SNI(o_dom_7),o_ech_ext_11,empty_extra_ext,psk_ext_67) else caught-fail) in
                                    {6303}let (client_hello'_17: msg,cr'_17: bytes32,kex_data'_17: bitstring,psk_data'_28: bitstring) = (if v_1385 then (CH(o_cr_9,o_offer_23),o_cr_9,kex_data_9,psk_data_38) else fail-any) in
                                    {6304}out(io, client_hello'_17);
                                    {6306}in(io, server_hello'_26: msg);
                                    {6307}let SH(sr'_17: bytes32,mode'_17: params) = server_hello'_26 in
                                    (
                                        {6308}if (sr'_17 = B32(HRR24,HRR8)) then
                                            {6309}out(io, unexpected_message)
                                        else
                                            {6310}let (x_443: bitstring,g_37: group) = kex_data'_17 in
                                            {6311}let (psk_offer_33: preSharedKey,id_offer_33: identityPsk,es_offer_33: bitstring,is_safe_offer_33: bool) = psk_data'_28 in
                                            {6312}event Client_PSKOffer(@6_id_client,psk_offer_33,id_offer_33,is_safe_offer_33);
                                            {6313}event Client_Rand_client(@6_id_client,cr'_17);
                                            {6314}event Client_DH_client(@6_id_client,dh_pub(g_37,x_443));
                                            {6315}event Client_server_domain(@6_id_client,o_dom);
                                            {6316}let SH(sr_44: bytes32,mode_39: params) = server_hello'_26 in
                                            {6317}event Client_Rand_server(@6_id_client,sr_44);
                                            {6318}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_37,gy_34: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_68: preSharedKeyExt) = mode_39 in
                                            (
                                                {6320}event Client_DH_server(@6_id_client,gy_34);
                                                {6321}let v_1386: bool = (psk_ext_68 = empty_psk_ext) in
                                                {6322}let psk_160: preSharedKey = (if v_1386 then NoPsk else caught-fail) in
                                                {6324}let k_137: bitstring = (if v_1386 then catch-fail(psk2b(psk_160)) else caught-fail) in
                                                {6325}let v_1387: bool = not-caught-fail(k_137) in
                                                {6323}let s_141: bitstring = (if v_1386 then zero else caught-fail) in
                                                {6326}let early_secret_106: bitstring = (if v_1386 then catch-fail((if v_1387 then hmac(@6_tls_h,s_141,k_137) else fail-any)) else caught-fail) in
                                                {6327}let v_1388: bool = not-caught-fail(early_secret_106) in
                                                {6329}let m_139: bitstring = (if v_1388 then zero else caught-fail) in
                                                {6330}let h_378: bitstring = (if v_1388 then catch-fail(hash(@6_tls_h,m_139)) else caught-fail) in
                                                {6331}let v_1389: bool = not-caught-fail(h_378) in
                                                {6328}let l_393: label = (if v_1388 then tls13_ext_res_binder else caught-fail) in
                                                {6332}let x_444: bitstring = (if v_1389 then (l_393,h_378) else caught-fail) in
                                                {6333}let binder_key_71: bitstring = (if v_1388 then catch-fail((if v_1389 then hmac(@6_tls_h,early_secret_106,x_444) else fail-any)) else caught-fail) in
                                                {6334}let v_1390: bool = not-caught-fail(binder_key_71) in
                                                {6335}let v_1391: bitstring = (if v_1386 then catch-fail((if v_1388 then (if v_1390 then (early_secret_106,binder_key_71) else fail-any) else fail-any)) else caught-fail) in
                                                {6336}let v_1392: bool = (not-caught-fail(v_1391) && success?(1-proj-2-tuple(v_1391))) in
                                                {6337}let kb_71: mac_key = (if v_1392 then 2-proj-2-tuple(v_1391) else caught-fail) in
                                                {6338}let es_107: bitstring = (if v_1392 then 1-proj-2-tuple(v_1391) else caught-fail) in
                                                {6339}let v_1393: bitstring = (if not(v_1386) then catch-fail(psk_data'_28) else caught-fail) in
                                                {6340}let v_1394: bool = (not-caught-fail(v_1393) && success?(1-proj-4-tuple(v_1393))) in
                                                {6341}let is_safe_64: bool = (if v_1394 then 4-proj-4-tuple(v_1393) else caught-fail) in
                                                {6342}let es_108: bitstring = (if v_1394 then 3-proj-4-tuple(v_1393) else caught-fail) in
                                                {6343}let id_75: identityPsk = (if v_1394 then 2-proj-4-tuple(v_1393) else caught-fail) in
                                                {6344}let psk_161: preSharedKey = (if v_1394 then 1-proj-4-tuple(v_1393) else caught-fail) in
                                                {6345}let (psk_162: preSharedKey,early_secret_107: bitstring,valid_33: bool,safe_psk_39: bool) = (if v_1386 then (if v_1392 then (NoPsk,es_107,true,false) else fail-any) else (if v_1394 then (psk_161,es_108,((psk_161 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_68)),is_safe_64) else fail-any)) in
                                                {6346}event Client_PSKChoosen(@6_id_client,psk_162,safe_psk_39);
                                                {6347}if valid_33 then
                                                (
                                                    {6350}new s_142[]: seed;
                                                    {6348}let gxy_67: element = catch-fail(dh_decap_fun(g_37,gy_34,x_443)) in
                                                    {6349}let v_1395: bool = not-caught-fail(gxy_67) in
                                                    {6351}let gxy_68: element = (if v_1395 then gxy_67 else dh_f(s_142)) in
                                                    {6352}event Client_DH_gxy(@6_id_client,gxy_68);
                                                    {6354}let m_140: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {6355}let v_1396: bool = not-caught-fail(m_140) in
                                                    {6356}let h_379: bitstring = (if v_1396 then catch-fail(hash(@6_tls_h,m_140)) else caught-fail) in
                                                    {6357}let v_1397: bool = not-caught-fail(h_379) in
                                                    {6353}let l_394: label = tls13_derived in
                                                    {6358}let x_445: bitstring = (if v_1397 then (l_394,h_379) else caught-fail) in
                                                    {6359}let extra_75: bitstring = catch-fail((if v_1396 then (if v_1397 then hmac(@6_tls_h,early_secret_107,x_445) else fail-any) else fail-any)) in
                                                    {6360}let v_1398: bool = not-caught-fail(extra_75) in
                                                    {6361}let handshake_secret_34: bitstring = (if v_1398 then hmac(@6_tls_h,extra_75,gxy_68) else fail-any) in
                                                    {6363}let m_141: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {6364}let v_1399: bool = not-caught-fail(m_141) in
                                                    {6365}let h_380: bitstring = (if v_1399 then catch-fail(hash(@6_tls_h,m_141)) else caught-fail) in
                                                    {6366}let v_1400: bool = not-caught-fail(h_380) in
                                                    {6362}let l_395: label = tls13_derived in
                                                    {6367}let x_446: bitstring = (if v_1400 then (l_395,h_380) else caught-fail) in
                                                    {6368}let extra_76: bitstring = catch-fail((if v_1399 then (if v_1400 then hmac(@6_tls_h,handshake_secret_34,x_446) else fail-any) else fail-any)) in
                                                    {6369}let v_1401: bool = not-caught-fail(extra_76) in
                                                    {6370}let k_138: bitstring = (if v_1401 then zero else caught-fail) in
                                                    {6371}let master_secret_75: bitstring = (if v_1401 then catch-fail(hmac(@6_tls_h,handshake_secret_34,k_138)) else caught-fail) in
                                                    {6372}let v_1402: bool = not-caught-fail(master_secret_75) in
                                                    {6305}let cur_log_OU1_HRR_OU2_8: bitstring = (cur_log_OU1_HRR_2,client_hello'_17) in
                                                    {6319}let cur_log2_73: bitstring = (cur_log_OU1_HRR_OU2_8,server_hello'_26) in
                                                    {6374}let h_381: bitstring = (if v_1402 then catch-fail(hash(@6_tls_h,cur_log2_73)) else caught-fail) in
                                                    {6375}let v_1403: bool = not-caught-fail(h_381) in
                                                    {6373}let l_396: label = (if v_1402 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {6376}let x_447: bitstring = (if v_1403 then (l_396,h_381) else caught-fail) in
                                                    {6377}let client_hts_34: bitstring = (if v_1402 then catch-fail((if v_1403 then hmac(@6_tls_h,handshake_secret_34,x_447) else fail-any)) else caught-fail) in
                                                    {6378}let v_1404: bool = not-caught-fail(client_hts_34) in
                                                    {6380}let h_382: bitstring = (if v_1404 then catch-fail(hash(@6_tls_h,cur_log2_73)) else caught-fail) in
                                                    {6381}let v_1405: bool = not-caught-fail(h_382) in
                                                    {6379}let l_397: label = (if v_1404 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {6382}let x_448: bitstring = (if v_1405 then (l_397,h_382) else caught-fail) in
                                                    {6383}let server_hts_34: bitstring = (if v_1404 then catch-fail((if v_1405 then hmac(@6_tls_h,handshake_secret_34,x_448) else fail-any)) else caught-fail) in
                                                    {6384}let v_1406: bool = not-caught-fail(server_hts_34) in
                                                    {6386}let h_383: bitstring = (if v_1406 then zero else caught-fail) in
                                                    {6385}let l_398: label = (if v_1406 then tls13_key else caught-fail) in
                                                    {6387}let x_449: bitstring = (if v_1406 then (l_398,h_383) else caught-fail) in
                                                    {6388}let client_wkh_34: bitstring = (if v_1406 then catch-fail(hmac(@6_tls_h,client_hts_34,x_449)) else caught-fail) in
                                                    {6389}let v_1407: bool = not-caught-fail(client_wkh_34) in
                                                    {6391}let h_384: bitstring = (if v_1407 then zero else caught-fail) in
                                                    {6390}let l_399: label = (if v_1407 then tls13_key else caught-fail) in
                                                    {6392}let x_450: bitstring = (if v_1407 then (l_399,h_384) else caught-fail) in
                                                    {6393}let server_wkh_34: bitstring = (if v_1407 then catch-fail(hmac(@6_tls_h,server_hts_34,x_450)) else caught-fail) in
                                                    {6394}let v_1408: bool = not-caught-fail(server_wkh_34) in
                                                    {6396}let h_385: bitstring = (if v_1408 then zero else caught-fail) in
                                                    {6395}let l_400: label = (if v_1408 then tls13_finished else caught-fail) in
                                                    {6397}let x_451: bitstring = (if v_1408 then (l_400,h_385) else caught-fail) in
                                                    {6398}let client_fk_34: bitstring = (if v_1408 then catch-fail(hmac(@6_tls_h,client_hts_34,x_451)) else caught-fail) in
                                                    {6399}let v_1409: bool = not-caught-fail(client_fk_34) in
                                                    {6401}let h_386: bitstring = (if v_1409 then zero else caught-fail) in
                                                    {6400}let l_401: label = (if v_1409 then tls13_finished else caught-fail) in
                                                    {6402}let x_452: bitstring = (if v_1409 then (l_401,h_386) else caught-fail) in
                                                    {6403}let server_fk_34: bitstring = (if v_1409 then catch-fail(hmac(@6_tls_h,server_hts_34,x_452)) else caught-fail) in
                                                    {6404}let v_1410: bool = not-caught-fail(server_fk_34) in
                                                    {6405}let (master_secret_76: bitstring,chk_41: aead_key,shk_40: aead_key,cfin_41: mac_key,sfin_40: mac_key) = (if v_1401 then (if v_1402 then (if v_1404 then (if v_1406 then (if v_1407 then (if v_1408 then (if v_1409 then (if v_1410 then (master_secret_75,client_wkh_34,server_wkh_34,client_fk_34,server_fk_34) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {6406}event Client_chk(@6_id_client,chk_41);
                                                    {6407}event Client_shk(@6_id_client,shk_40);
                                                    {6408}event Client_cfin(@6_id_client,cfin_41);
                                                    {6409}event Client_sfin(@6_id_client,sfin_40);
                                                    {6410}in(io, enc_ee_msg_33: bitstring);
                                                    {6411}let ee_msg_34: msg = aead_dec(@6_tls_a,shk_40,0,zero,enc_ee_msg_33) in
                                                    {6412}let EE(ech_ee_33: echExt,extra_ee_33: extraExt) = ee_msg_34 in
                                                    {6413}let cur_log2_74: bitstring = (cur_log2_73,ee_msg_34) in
                                                    {6414}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_17,sr_44,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_162,safe_psk_39,@6_comp_psk,master_secret_76,chk_41,0,shk_40,1,cfin_41,sfin_40,cur_log2_74)))
                                                )
                                                else
                                                    {6415}out(io, illegal_parameter)
                                            )
                                            else
                                                {6416}out(io, illegal_parameter)
                                    )
                                    else
                                        {6417}out(io, unexpected_message)
                                )
                                else
                                    {6567}get pre_shared_keys(c_dom'_12: domain,=o_dom_7,=@6_tls_h,id_76: identityPsk,psk_163: preSharedKey,idP_14: idProc,is_safe_65: bool) in
                                    {6418}event Selected_one_time_used_psk(@6_id_client,psk_163,is_safe_65);
                                    {6419}event Selected_psk(c_dom_6,c_dom'_12,idP_14,is_safe_65);
                                    {6420}event Selected_psk_no_missmatch(@6_id_client,o_dom_7,@6_tls_h,psk_163,id_76);
                                    {6421}event Selected_psk_with_ID(c_dom_6,c_dom'_12,id_76,idP_14,is_safe_65);
                                    {6422}let v_1411: bitstring = (id_76,psk_163,is_safe_65) in
                                    {6423}let v_1412: bool = success?(1-proj-3-tuple(v_1411)) in
                                    {6424}let is_safe_66: bool = (if v_1412 then 3-proj-3-tuple(v_1411) else caught-fail) in
                                    {6425}let psk_164: preSharedKey = (if v_1412 then 2-proj-3-tuple(v_1411) else caught-fail) in
                                    {6426}let id_77: identityPsk = (if v_1412 then 1-proj-3-tuple(v_1411) else caught-fail) in
                                    {6430}let k_139: bitstring = (if v_1412 then catch-fail(psk2b(psk_164)) else caught-fail) in
                                    {6431}let v_1413: bool = not-caught-fail(k_139) in
                                    {6429}let s_143: bitstring = (if v_1412 then zero else caught-fail) in
                                    {6432}let early_secret_108: bitstring = (if v_1412 then catch-fail((if v_1413 then hmac(@6_tls_h,s_143,k_139) else fail-any)) else caught-fail) in
                                    {6433}let v_1414: bool = not-caught-fail(early_secret_108) in
                                    {6435}let m_142: bitstring = (if v_1414 then zero else caught-fail) in
                                    {6436}let h_387: bitstring = (if v_1414 then catch-fail(hash(@6_tls_h,m_142)) else caught-fail) in
                                    {6437}let v_1415: bool = not-caught-fail(h_387) in
                                    {6434}let l_402: label = (if v_1414 then tls13_ext_res_binder else caught-fail) in
                                    {6438}let x_453: bitstring = (if v_1415 then (l_402,h_387) else caught-fail) in
                                    {6439}let binder_key_72: bitstring = (if v_1414 then catch-fail((if v_1415 then hmac(@6_tls_h,early_secret_108,x_453) else fail-any)) else caught-fail) in
                                    {6440}let v_1416: bool = not-caught-fail(binder_key_72) in
                                    {6441}let v_1417: bitstring = (if v_1412 then catch-fail((if v_1414 then (if v_1416 then (early_secret_108,binder_key_72) else fail-any) else fail-any)) else caught-fail) in
                                    {6442}let v_1418: bool = (not-caught-fail(v_1417) && success?(1-proj-2-tuple(v_1417))) in
                                    {6443}let kb_72: mac_key = (if v_1418 then 2-proj-2-tuple(v_1417) else caught-fail) in
                                    {6444}let es_109: bitstring = (if v_1418 then 1-proj-2-tuple(v_1417) else caught-fail) in
                                    {6427}let offer_35: params = (if v_1412 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_6,SNI(o_dom_7),o_ech_ext_11,extra_74,trunc_client_psk_ext(id_77)) else caught-fail) in
                                    {6428}let cur_log'_23: bitstring = (if v_1412 then (cur_log_OU1_HRR_2,CH(o_cr_9,offer_35)) else caught-fail) in
                                    {6445}let binders_22: bitstring = (if v_1418 then catch-fail(hmac(@6_tls_h,kb_72,cur_log'_23)) else caught-fail) in
                                    {6446}let v_1419: bool = not-caught-fail(binders_22) in
                                    {6447}let v_1420: bitstring = catch-fail((if v_1412 then (if v_1418 then (if v_1419 then (client_psk_ext(id_77,binders_22),(psk_164,id_77,es_109,is_safe_66)) else fail-any) else fail-any) else fail-any)) in
                                    {6448}let v_1421: bool = (not-caught-fail(v_1420) && success?(1-proj-2-tuple(v_1420))) in
                                    {6449}let psk_data_39: bitstring = (if v_1421 then 2-proj-2-tuple(v_1420) else caught-fail) in
                                    {6450}let psk_ext_69: preSharedKeyExt = (if v_1421 then 1-proj-2-tuple(v_1420) else caught-fail) in
                                    {6451}let o_offer_24: params = (if v_1421 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_6,SNI(o_dom_7),o_ech_ext_11,empty_extra_ext,psk_ext_69) else caught-fail) in
                                    {6452}let (client_hello'_18: msg,cr'_18: bytes32,kex_data'_18: bitstring,psk_data'_29: bitstring) = (if v_1421 then (CH(o_cr_9,o_offer_24),o_cr_9,kex_data_9,psk_data_39) else fail-any) in
                                    {6453}out(io, client_hello'_18);
                                    {6455}in(io, server_hello'_27: msg);
                                    {6456}let SH(sr'_18: bytes32,mode'_18: params) = server_hello'_27 in
                                    (
                                        {6457}if (sr'_18 = B32(HRR24,HRR8)) then
                                            {6458}out(io, unexpected_message)
                                        else
                                            {6459}let (x_454: bitstring,g_38: group) = kex_data'_18 in
                                            {6460}let (psk_offer_34: preSharedKey,id_offer_34: identityPsk,es_offer_34: bitstring,is_safe_offer_34: bool) = psk_data'_29 in
                                            {6461}event Client_PSKOffer(@6_id_client,psk_offer_34,id_offer_34,is_safe_offer_34);
                                            {6462}event Client_Rand_client(@6_id_client,cr'_18);
                                            {6463}event Client_DH_client(@6_id_client,dh_pub(g_38,x_454));
                                            {6464}event Client_server_domain(@6_id_client,o_dom);
                                            {6465}let SH(sr_45: bytes32,mode_40: params) = server_hello'_27 in
                                            {6466}event Client_Rand_server(@6_id_client,sr_45);
                                            {6467}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_38,gy_35: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_70: preSharedKeyExt) = mode_40 in
                                            (
                                                {6469}event Client_DH_server(@6_id_client,gy_35);
                                                {6470}let v_1422: bool = (psk_ext_70 = empty_psk_ext) in
                                                {6471}let psk_165: preSharedKey = (if v_1422 then NoPsk else caught-fail) in
                                                {6473}let k_140: bitstring = (if v_1422 then catch-fail(psk2b(psk_165)) else caught-fail) in
                                                {6474}let v_1423: bool = not-caught-fail(k_140) in
                                                {6472}let s_144: bitstring = (if v_1422 then zero else caught-fail) in
                                                {6475}let early_secret_109: bitstring = (if v_1422 then catch-fail((if v_1423 then hmac(@6_tls_h,s_144,k_140) else fail-any)) else caught-fail) in
                                                {6476}let v_1424: bool = not-caught-fail(early_secret_109) in
                                                {6478}let m_143: bitstring = (if v_1424 then zero else caught-fail) in
                                                {6479}let h_388: bitstring = (if v_1424 then catch-fail(hash(@6_tls_h,m_143)) else caught-fail) in
                                                {6480}let v_1425: bool = not-caught-fail(h_388) in
                                                {6477}let l_403: label = (if v_1424 then tls13_ext_res_binder else caught-fail) in
                                                {6481}let x_455: bitstring = (if v_1425 then (l_403,h_388) else caught-fail) in
                                                {6482}let binder_key_73: bitstring = (if v_1424 then catch-fail((if v_1425 then hmac(@6_tls_h,early_secret_109,x_455) else fail-any)) else caught-fail) in
                                                {6483}let v_1426: bool = not-caught-fail(binder_key_73) in
                                                {6484}let v_1427: bitstring = (if v_1422 then catch-fail((if v_1424 then (if v_1426 then (early_secret_109,binder_key_73) else fail-any) else fail-any)) else caught-fail) in
                                                {6485}let v_1428: bool = (not-caught-fail(v_1427) && success?(1-proj-2-tuple(v_1427))) in
                                                {6486}let kb_73: mac_key = (if v_1428 then 2-proj-2-tuple(v_1427) else caught-fail) in
                                                {6487}let es_110: bitstring = (if v_1428 then 1-proj-2-tuple(v_1427) else caught-fail) in
                                                {6488}let v_1429: bitstring = (if not(v_1422) then catch-fail(psk_data'_29) else caught-fail) in
                                                {6489}let v_1430: bool = (not-caught-fail(v_1429) && success?(1-proj-4-tuple(v_1429))) in
                                                {6490}let is_safe_67: bool = (if v_1430 then 4-proj-4-tuple(v_1429) else caught-fail) in
                                                {6491}let es_111: bitstring = (if v_1430 then 3-proj-4-tuple(v_1429) else caught-fail) in
                                                {6492}let id_78: identityPsk = (if v_1430 then 2-proj-4-tuple(v_1429) else caught-fail) in
                                                {6493}let psk_166: preSharedKey = (if v_1430 then 1-proj-4-tuple(v_1429) else caught-fail) in
                                                {6494}let (psk_167: preSharedKey,early_secret_110: bitstring,valid_34: bool,safe_psk_40: bool) = (if v_1422 then (if v_1428 then (NoPsk,es_110,true,false) else fail-any) else (if v_1430 then (psk_166,es_111,((psk_166 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_70)),is_safe_67) else fail-any)) in
                                                {6495}event Client_PSKChoosen(@6_id_client,psk_167,safe_psk_40);
                                                {6496}if valid_34 then
                                                (
                                                    {6499}new s_145[]: seed;
                                                    {6497}let gxy_69: element = catch-fail(dh_decap_fun(g_38,gy_35,x_454)) in
                                                    {6498}let v_1431: bool = not-caught-fail(gxy_69) in
                                                    {6500}let gxy_70: element = (if v_1431 then gxy_69 else dh_f(s_145)) in
                                                    {6501}event Client_DH_gxy(@6_id_client,gxy_70);
                                                    {6503}let m_144: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {6504}let v_1432: bool = not-caught-fail(m_144) in
                                                    {6505}let h_389: bitstring = (if v_1432 then catch-fail(hash(@6_tls_h,m_144)) else caught-fail) in
                                                    {6506}let v_1433: bool = not-caught-fail(h_389) in
                                                    {6502}let l_404: label = tls13_derived in
                                                    {6507}let x_456: bitstring = (if v_1433 then (l_404,h_389) else caught-fail) in
                                                    {6508}let extra_77: bitstring = catch-fail((if v_1432 then (if v_1433 then hmac(@6_tls_h,early_secret_110,x_456) else fail-any) else fail-any)) in
                                                    {6509}let v_1434: bool = not-caught-fail(extra_77) in
                                                    {6510}let handshake_secret_35: bitstring = (if v_1434 then hmac(@6_tls_h,extra_77,gxy_70) else fail-any) in
                                                    {6512}let m_145: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                    {6513}let v_1435: bool = not-caught-fail(m_145) in
                                                    {6514}let h_390: bitstring = (if v_1435 then catch-fail(hash(@6_tls_h,m_145)) else caught-fail) in
                                                    {6515}let v_1436: bool = not-caught-fail(h_390) in
                                                    {6511}let l_405: label = tls13_derived in
                                                    {6516}let x_457: bitstring = (if v_1436 then (l_405,h_390) else caught-fail) in
                                                    {6517}let extra_78: bitstring = catch-fail((if v_1435 then (if v_1436 then hmac(@6_tls_h,handshake_secret_35,x_457) else fail-any) else fail-any)) in
                                                    {6518}let v_1437: bool = not-caught-fail(extra_78) in
                                                    {6519}let k_141: bitstring = (if v_1437 then zero else caught-fail) in
                                                    {6520}let master_secret_77: bitstring = (if v_1437 then catch-fail(hmac(@6_tls_h,handshake_secret_35,k_141)) else caught-fail) in
                                                    {6521}let v_1438: bool = not-caught-fail(master_secret_77) in
                                                    {6454}let cur_log_OU1_HRR_OU2_9: bitstring = (cur_log_OU1_HRR_2,client_hello'_18) in
                                                    {6468}let cur_log2_75: bitstring = (cur_log_OU1_HRR_OU2_9,server_hello'_27) in
                                                    {6523}let h_391: bitstring = (if v_1438 then catch-fail(hash(@6_tls_h,cur_log2_75)) else caught-fail) in
                                                    {6524}let v_1439: bool = not-caught-fail(h_391) in
                                                    {6522}let l_406: label = (if v_1438 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {6525}let x_458: bitstring = (if v_1439 then (l_406,h_391) else caught-fail) in
                                                    {6526}let client_hts_35: bitstring = (if v_1438 then catch-fail((if v_1439 then hmac(@6_tls_h,handshake_secret_35,x_458) else fail-any)) else caught-fail) in
                                                    {6527}let v_1440: bool = not-caught-fail(client_hts_35) in
                                                    {6529}let h_392: bitstring = (if v_1440 then catch-fail(hash(@6_tls_h,cur_log2_75)) else caught-fail) in
                                                    {6530}let v_1441: bool = not-caught-fail(h_392) in
                                                    {6528}let l_407: label = (if v_1440 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {6531}let x_459: bitstring = (if v_1441 then (l_407,h_392) else caught-fail) in
                                                    {6532}let server_hts_35: bitstring = (if v_1440 then catch-fail((if v_1441 then hmac(@6_tls_h,handshake_secret_35,x_459) else fail-any)) else caught-fail) in
                                                    {6533}let v_1442: bool = not-caught-fail(server_hts_35) in
                                                    {6535}let h_393: bitstring = (if v_1442 then zero else caught-fail) in
                                                    {6534}let l_408: label = (if v_1442 then tls13_key else caught-fail) in
                                                    {6536}let x_460: bitstring = (if v_1442 then (l_408,h_393) else caught-fail) in
                                                    {6537}let client_wkh_35: bitstring = (if v_1442 then catch-fail(hmac(@6_tls_h,client_hts_35,x_460)) else caught-fail) in
                                                    {6538}let v_1443: bool = not-caught-fail(client_wkh_35) in
                                                    {6540}let h_394: bitstring = (if v_1443 then zero else caught-fail) in
                                                    {6539}let l_409: label = (if v_1443 then tls13_key else caught-fail) in
                                                    {6541}let x_461: bitstring = (if v_1443 then (l_409,h_394) else caught-fail) in
                                                    {6542}let server_wkh_35: bitstring = (if v_1443 then catch-fail(hmac(@6_tls_h,server_hts_35,x_461)) else caught-fail) in
                                                    {6543}let v_1444: bool = not-caught-fail(server_wkh_35) in
                                                    {6545}let h_395: bitstring = (if v_1444 then zero else caught-fail) in
                                                    {6544}let l_410: label = (if v_1444 then tls13_finished else caught-fail) in
                                                    {6546}let x_462: bitstring = (if v_1444 then (l_410,h_395) else caught-fail) in
                                                    {6547}let client_fk_35: bitstring = (if v_1444 then catch-fail(hmac(@6_tls_h,client_hts_35,x_462)) else caught-fail) in
                                                    {6548}let v_1445: bool = not-caught-fail(client_fk_35) in
                                                    {6550}let h_396: bitstring = (if v_1445 then zero else caught-fail) in
                                                    {6549}let l_411: label = (if v_1445 then tls13_finished else caught-fail) in
                                                    {6551}let x_463: bitstring = (if v_1445 then (l_411,h_396) else caught-fail) in
                                                    {6552}let server_fk_35: bitstring = (if v_1445 then catch-fail(hmac(@6_tls_h,server_hts_35,x_463)) else caught-fail) in
                                                    {6553}let v_1446: bool = not-caught-fail(server_fk_35) in
                                                    {6554}let (master_secret_78: bitstring,chk_42: aead_key,shk_41: aead_key,cfin_42: mac_key,sfin_41: mac_key) = (if v_1437 then (if v_1438 then (if v_1440 then (if v_1442 then (if v_1443 then (if v_1444 then (if v_1445 then (if v_1446 then (master_secret_77,client_wkh_35,server_wkh_35,client_fk_35,server_fk_35) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {6555}event Client_chk(@6_id_client,chk_42);
                                                    {6556}event Client_shk(@6_id_client,shk_41);
                                                    {6557}event Client_cfin(@6_id_client,cfin_42);
                                                    {6558}event Client_sfin(@6_id_client,sfin_41);
                                                    {6559}in(io, enc_ee_msg_34: bitstring);
                                                    {6560}let ee_msg_35: msg = aead_dec(@6_tls_a,shk_41,0,zero,enc_ee_msg_34) in
                                                    {6561}let EE(ech_ee_34: echExt,extra_ee_34: extraExt) = ee_msg_35 in
                                                    {6562}let cur_log2_76: bitstring = (cur_log2_75,ee_msg_35) in
                                                    {6563}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_18,sr_45,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_167,safe_psk_40,@6_comp_psk,master_secret_78,chk_42,0,shk_41,1,cfin_42,sfin_41,cur_log2_76)))
                                                )
                                                else
                                                    {6564}out(io, illegal_parameter)
                                            )
                                            else
                                                {6565}out(io, illegal_parameter)
                                    )
                                    else
                                        {6566}out(io, unexpected_message)
                            )
                            else
                                {6568}let psk_168: preSharedKey = NoPsk in
                                {6570}let k_142: bitstring = catch-fail(psk2b(psk_168)) in
                                {6571}let v_1447: bool = not-caught-fail(k_142) in
                                {6569}let s_146: bitstring = zero in
                                {6572}let early_secret_111: bitstring = catch-fail((if v_1447 then hmac(@6_tls_h,s_146,k_142) else fail-any)) in
                                {6573}let v_1448: bool = not-caught-fail(early_secret_111) in
                                {6575}let m_146: bitstring = (if v_1448 then zero else caught-fail) in
                                {6576}let h_397: bitstring = (if v_1448 then catch-fail(hash(@6_tls_h,m_146)) else caught-fail) in
                                {6577}let v_1449: bool = not-caught-fail(h_397) in
                                {6574}let l_412: label = (if v_1448 then tls13_ext_res_binder else caught-fail) in
                                {6578}let x_464: bitstring = (if v_1449 then (l_412,h_397) else caught-fail) in
                                {6579}let binder_key_74: bitstring = (if v_1448 then catch-fail((if v_1449 then hmac(@6_tls_h,early_secret_111,x_464) else fail-any)) else caught-fail) in
                                {6580}let v_1450: bool = not-caught-fail(binder_key_74) in
                                {6581}let v_1451: bitstring = catch-fail((if v_1448 then (if v_1450 then (early_secret_111,binder_key_74) else fail-any) else fail-any)) in
                                {6582}let v_1452: bool = (not-caught-fail(v_1451) && success?(1-proj-2-tuple(v_1451))) in
                                {6583}let kb_74: mac_key = (if v_1452 then 2-proj-2-tuple(v_1451) else caught-fail) in
                                {6584}let es_112: bitstring = (if v_1452 then 1-proj-2-tuple(v_1451) else caught-fail) in
                                {6585}let v_1453: bitstring = catch-fail((if v_1452 then (empty_psk_ext,(NoPsk,zero,es_112,false)) else fail-any)) in
                                {6586}let v_1454: bool = (not-caught-fail(v_1453) && success?(1-proj-2-tuple(v_1453))) in
                                {6587}let psk_data_40: bitstring = (if v_1454 then 2-proj-2-tuple(v_1453) else caught-fail) in
                                {6588}let psk_ext_71: preSharedKeyExt = (if v_1454 then 1-proj-2-tuple(v_1453) else caught-fail) in
                                {6589}let o_offer_25: params = (if v_1454 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_6,SNI(o_dom_7),o_ech_ext_11,empty_extra_ext,psk_ext_71) else caught-fail) in
                                {6590}let (client_hello'_19: msg,cr'_19: bytes32,kex_data'_19: bitstring,psk_data'_30: bitstring) = (if v_1454 then (CH(o_cr_9,o_offer_25),o_cr_9,kex_data_9,psk_data_40) else fail-any) in
                                {6591}out(io, client_hello'_19);
                                {6593}in(io, server_hello'_28: msg);
                                {6594}let SH(sr'_19: bytes32,mode'_19: params) = server_hello'_28 in
                                (
                                    {6595}if (sr'_19 = B32(HRR24,HRR8)) then
                                        {6596}out(io, unexpected_message)
                                    else
                                        {6597}let (x_465: bitstring,g_39: group) = kex_data'_19 in
                                        {6598}let (psk_offer_35: preSharedKey,id_offer_35: identityPsk,es_offer_35: bitstring,is_safe_offer_35: bool) = psk_data'_30 in
                                        {6599}event Client_PSKOffer(@6_id_client,psk_offer_35,id_offer_35,is_safe_offer_35);
                                        {6600}event Client_Rand_client(@6_id_client,cr'_19);
                                        {6601}event Client_DH_client(@6_id_client,dh_pub(g_39,x_465));
                                        {6602}event Client_server_domain(@6_id_client,o_dom);
                                        {6603}let SH(sr_46: bytes32,mode_41: params) = server_hello'_28 in
                                        {6604}event Client_Rand_server(@6_id_client,sr_46);
                                        {6605}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_39,gy_36: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_72: preSharedKeyExt) = mode_41 in
                                        (
                                            {6607}event Client_DH_server(@6_id_client,gy_36);
                                            {6608}let v_1455: bool = (psk_ext_72 = empty_psk_ext) in
                                            {6609}let psk_169: preSharedKey = (if v_1455 then NoPsk else caught-fail) in
                                            {6611}let k_143: bitstring = (if v_1455 then catch-fail(psk2b(psk_169)) else caught-fail) in
                                            {6612}let v_1456: bool = not-caught-fail(k_143) in
                                            {6610}let s_147: bitstring = (if v_1455 then zero else caught-fail) in
                                            {6613}let early_secret_112: bitstring = (if v_1455 then catch-fail((if v_1456 then hmac(@6_tls_h,s_147,k_143) else fail-any)) else caught-fail) in
                                            {6614}let v_1457: bool = not-caught-fail(early_secret_112) in
                                            {6616}let m_147: bitstring = (if v_1457 then zero else caught-fail) in
                                            {6617}let h_398: bitstring = (if v_1457 then catch-fail(hash(@6_tls_h,m_147)) else caught-fail) in
                                            {6618}let v_1458: bool = not-caught-fail(h_398) in
                                            {6615}let l_413: label = (if v_1457 then tls13_ext_res_binder else caught-fail) in
                                            {6619}let x_466: bitstring = (if v_1458 then (l_413,h_398) else caught-fail) in
                                            {6620}let binder_key_75: bitstring = (if v_1457 then catch-fail((if v_1458 then hmac(@6_tls_h,early_secret_112,x_466) else fail-any)) else caught-fail) in
                                            {6621}let v_1459: bool = not-caught-fail(binder_key_75) in
                                            {6622}let v_1460: bitstring = (if v_1455 then catch-fail((if v_1457 then (if v_1459 then (early_secret_112,binder_key_75) else fail-any) else fail-any)) else caught-fail) in
                                            {6623}let v_1461: bool = (not-caught-fail(v_1460) && success?(1-proj-2-tuple(v_1460))) in
                                            {6624}let kb_75: mac_key = (if v_1461 then 2-proj-2-tuple(v_1460) else caught-fail) in
                                            {6625}let es_113: bitstring = (if v_1461 then 1-proj-2-tuple(v_1460) else caught-fail) in
                                            {6626}let v_1462: bitstring = (if not(v_1455) then catch-fail(psk_data'_30) else caught-fail) in
                                            {6627}let v_1463: bool = (not-caught-fail(v_1462) && success?(1-proj-4-tuple(v_1462))) in
                                            {6628}let is_safe_68: bool = (if v_1463 then 4-proj-4-tuple(v_1462) else caught-fail) in
                                            {6629}let es_114: bitstring = (if v_1463 then 3-proj-4-tuple(v_1462) else caught-fail) in
                                            {6630}let id_79: identityPsk = (if v_1463 then 2-proj-4-tuple(v_1462) else caught-fail) in
                                            {6631}let psk_170: preSharedKey = (if v_1463 then 1-proj-4-tuple(v_1462) else caught-fail) in
                                            {6632}let (psk_171: preSharedKey,early_secret_113: bitstring,valid_35: bool,safe_psk_41: bool) = (if v_1455 then (if v_1461 then (NoPsk,es_113,true,false) else fail-any) else (if v_1463 then (psk_170,es_114,((psk_170 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_72)),is_safe_68) else fail-any)) in
                                            {6633}event Client_PSKChoosen(@6_id_client,psk_171,safe_psk_41);
                                            {6634}if valid_35 then
                                            (
                                                {6637}new s_148[]: seed;
                                                {6635}let gxy_71: element = catch-fail(dh_decap_fun(g_39,gy_36,x_465)) in
                                                {6636}let v_1464: bool = not-caught-fail(gxy_71) in
                                                {6638}let gxy_72: element = (if v_1464 then gxy_71 else dh_f(s_148)) in
                                                {6639}event Client_DH_gxy(@6_id_client,gxy_72);
                                                {6641}let m_148: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                {6642}let v_1465: bool = not-caught-fail(m_148) in
                                                {6643}let h_399: bitstring = (if v_1465 then catch-fail(hash(@6_tls_h,m_148)) else caught-fail) in
                                                {6644}let v_1466: bool = not-caught-fail(h_399) in
                                                {6640}let l_414: label = tls13_derived in
                                                {6645}let x_467: bitstring = (if v_1466 then (l_414,h_399) else caught-fail) in
                                                {6646}let extra_79: bitstring = catch-fail((if v_1465 then (if v_1466 then hmac(@6_tls_h,early_secret_113,x_467) else fail-any) else fail-any)) in
                                                {6647}let v_1467: bool = not-caught-fail(extra_79) in
                                                {6648}let handshake_secret_36: bitstring = (if v_1467 then hmac(@6_tls_h,extra_79,gxy_72) else fail-any) in
                                                {6650}let m_149: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                                {6651}let v_1468: bool = not-caught-fail(m_149) in
                                                {6652}let h_400: bitstring = (if v_1468 then catch-fail(hash(@6_tls_h,m_149)) else caught-fail) in
                                                {6653}let v_1469: bool = not-caught-fail(h_400) in
                                                {6649}let l_415: label = tls13_derived in
                                                {6654}let x_468: bitstring = (if v_1469 then (l_415,h_400) else caught-fail) in
                                                {6655}let extra_80: bitstring = catch-fail((if v_1468 then (if v_1469 then hmac(@6_tls_h,handshake_secret_36,x_468) else fail-any) else fail-any)) in
                                                {6656}let v_1470: bool = not-caught-fail(extra_80) in
                                                {6657}let k_144: bitstring = (if v_1470 then zero else caught-fail) in
                                                {6658}let master_secret_79: bitstring = (if v_1470 then catch-fail(hmac(@6_tls_h,handshake_secret_36,k_144)) else caught-fail) in
                                                {6659}let v_1471: bool = not-caught-fail(master_secret_79) in
                                                {6592}let cur_log_OU1_HRR_OU2_10: bitstring = (cur_log_OU1_HRR_2,client_hello'_19) in
                                                {6606}let cur_log2_77: bitstring = (cur_log_OU1_HRR_OU2_10,server_hello'_28) in
                                                {6661}let h_401: bitstring = (if v_1471 then catch-fail(hash(@6_tls_h,cur_log2_77)) else caught-fail) in
                                                {6662}let v_1472: bool = not-caught-fail(h_401) in
                                                {6660}let l_416: label = (if v_1471 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {6663}let x_469: bitstring = (if v_1472 then (l_416,h_401) else caught-fail) in
                                                {6664}let client_hts_36: bitstring = (if v_1471 then catch-fail((if v_1472 then hmac(@6_tls_h,handshake_secret_36,x_469) else fail-any)) else caught-fail) in
                                                {6665}let v_1473: bool = not-caught-fail(client_hts_36) in
                                                {6667}let h_402: bitstring = (if v_1473 then catch-fail(hash(@6_tls_h,cur_log2_77)) else caught-fail) in
                                                {6668}let v_1474: bool = not-caught-fail(h_402) in
                                                {6666}let l_417: label = (if v_1473 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {6669}let x_470: bitstring = (if v_1474 then (l_417,h_402) else caught-fail) in
                                                {6670}let server_hts_36: bitstring = (if v_1473 then catch-fail((if v_1474 then hmac(@6_tls_h,handshake_secret_36,x_470) else fail-any)) else caught-fail) in
                                                {6671}let v_1475: bool = not-caught-fail(server_hts_36) in
                                                {6673}let h_403: bitstring = (if v_1475 then zero else caught-fail) in
                                                {6672}let l_418: label = (if v_1475 then tls13_key else caught-fail) in
                                                {6674}let x_471: bitstring = (if v_1475 then (l_418,h_403) else caught-fail) in
                                                {6675}let client_wkh_36: bitstring = (if v_1475 then catch-fail(hmac(@6_tls_h,client_hts_36,x_471)) else caught-fail) in
                                                {6676}let v_1476: bool = not-caught-fail(client_wkh_36) in
                                                {6678}let h_404: bitstring = (if v_1476 then zero else caught-fail) in
                                                {6677}let l_419: label = (if v_1476 then tls13_key else caught-fail) in
                                                {6679}let x_472: bitstring = (if v_1476 then (l_419,h_404) else caught-fail) in
                                                {6680}let server_wkh_36: bitstring = (if v_1476 then catch-fail(hmac(@6_tls_h,server_hts_36,x_472)) else caught-fail) in
                                                {6681}let v_1477: bool = not-caught-fail(server_wkh_36) in
                                                {6683}let h_405: bitstring = (if v_1477 then zero else caught-fail) in
                                                {6682}let l_420: label = (if v_1477 then tls13_finished else caught-fail) in
                                                {6684}let x_473: bitstring = (if v_1477 then (l_420,h_405) else caught-fail) in
                                                {6685}let client_fk_36: bitstring = (if v_1477 then catch-fail(hmac(@6_tls_h,client_hts_36,x_473)) else caught-fail) in
                                                {6686}let v_1478: bool = not-caught-fail(client_fk_36) in
                                                {6688}let h_406: bitstring = (if v_1478 then zero else caught-fail) in
                                                {6687}let l_421: label = (if v_1478 then tls13_finished else caught-fail) in
                                                {6689}let x_474: bitstring = (if v_1478 then (l_421,h_406) else caught-fail) in
                                                {6690}let server_fk_36: bitstring = (if v_1478 then catch-fail(hmac(@6_tls_h,server_hts_36,x_474)) else caught-fail) in
                                                {6691}let v_1479: bool = not-caught-fail(server_fk_36) in
                                                {6692}let (master_secret_80: bitstring,chk_43: aead_key,shk_42: aead_key,cfin_43: mac_key,sfin_42: mac_key) = (if v_1470 then (if v_1471 then (if v_1473 then (if v_1475 then (if v_1476 then (if v_1477 then (if v_1478 then (if v_1479 then (master_secret_79,client_wkh_36,server_wkh_36,client_fk_36,server_fk_36) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {6693}event Client_chk(@6_id_client,chk_43);
                                                {6694}event Client_shk(@6_id_client,shk_42);
                                                {6695}event Client_cfin(@6_id_client,cfin_43);
                                                {6696}event Client_sfin(@6_id_client,sfin_42);
                                                {6697}in(io, enc_ee_msg_35: bitstring);
                                                {6698}let ee_msg_36: msg = aead_dec(@6_tls_a,shk_42,0,zero,enc_ee_msg_35) in
                                                {6699}let EE(ech_ee_35: echExt,extra_ee_35: extraExt) = ee_msg_36 in
                                                {6700}let cur_log2_78: bitstring = (cur_log2_77,ee_msg_36) in
                                                {6701}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_19,sr_46,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_171,safe_psk_41,@6_comp_psk,master_secret_80,chk_43,0,shk_42,1,cfin_43,sfin_42,cur_log2_78)))
                                            )
                                            else
                                                {6702}out(io, illegal_parameter)
                                        )
                                        else
                                            {6703}out(io, illegal_parameter)
                                )
                                else
                                    {6704}out(io, unexpected_message)
                        )
                        else
                            {6705}let psk_172: preSharedKey = NoPsk in
                            {6707}let k_145: bitstring = catch-fail(psk2b(psk_172)) in
                            {6708}let v_1480: bool = not-caught-fail(k_145) in
                            {6706}let s_149: bitstring = zero in
                            {6709}let early_secret_114: bitstring = catch-fail((if v_1480 then hmac(@6_tls_h,s_149,k_145) else fail-any)) in
                            {6710}let v_1481: bool = not-caught-fail(early_secret_114) in
                            {6712}let m_150: bitstring = (if v_1481 then zero else caught-fail) in
                            {6713}let h_407: bitstring = (if v_1481 then catch-fail(hash(@6_tls_h,m_150)) else caught-fail) in
                            {6714}let v_1482: bool = not-caught-fail(h_407) in
                            {6711}let l_422: label = (if v_1481 then tls13_ext_res_binder else caught-fail) in
                            {6715}let x_475: bitstring = (if v_1482 then (l_422,h_407) else caught-fail) in
                            {6716}let binder_key_76: bitstring = (if v_1481 then catch-fail((if v_1482 then hmac(@6_tls_h,early_secret_114,x_475) else fail-any)) else caught-fail) in
                            {6717}let v_1483: bool = not-caught-fail(binder_key_76) in
                            {6718}let v_1484: bitstring = catch-fail((if v_1481 then (if v_1483 then (early_secret_114,binder_key_76) else fail-any) else fail-any)) in
                            {6719}let v_1485: bool = (not-caught-fail(v_1484) && success?(1-proj-2-tuple(v_1484))) in
                            {6720}let kb_76: mac_key = (if v_1485 then 2-proj-2-tuple(v_1484) else caught-fail) in
                            {6721}let es_115: bitstring = (if v_1485 then 1-proj-2-tuple(v_1484) else caught-fail) in
                            {6722}let v_1486: preSharedKeyExt = (if v_1485 then catch-fail(o_psk_ext_11) else caught-fail) in
                            {6723}let v_1487: bool = (not-caught-fail(v_1486) && success?(1-proj-client_psk_ext(v_1486))) in
                            {6724}let fake_binder_14: bitstring = (if v_1487 then 2-proj-client_psk_ext(v_1486) else caught-fail) in
                            {6725}let fake_id_14: identityPsk = (if v_1487 then 1-proj-client_psk_ext(v_1486) else caught-fail) in
                            {6726}new fake_binder'_2[]: bitstring;
                            {6727}let v_1488: bitstring = catch-fail((if v_1485 then (if v_1487 then (client_psk_ext(fake_id_14,fake_binder'_2),(NoPsk,zero,es_115,false)) else (empty_psk_ext,(NoPsk,zero,es_115,false))) else fail-any)) in
                            {6728}let v_1489: bool = (not-caught-fail(v_1488) && success?(1-proj-2-tuple(v_1488))) in
                            {6729}let psk_data_41: bitstring = (if v_1489 then 2-proj-2-tuple(v_1488) else caught-fail) in
                            {6730}let psk_ext_73: preSharedKeyExt = (if v_1489 then 1-proj-2-tuple(v_1488) else caught-fail) in
                            {6731}let o_offer_26: params = (if v_1489 then nego(TLS13,@6_tls_h,@6_tls_a,o_kex_ext_6,SNI(o_dom_7),o_ech_ext_11,empty_extra_ext,psk_ext_73) else caught-fail) in
                            {6732}let (client_hello'_20: msg,cr'_20: bytes32,kex_data'_20: bitstring,psk_data'_31: bitstring) = (if v_1489 then (CH(o_cr_9,o_offer_26),o_cr_9,kex_data_9,psk_data_41) else fail-any) in
                            {6733}out(io, client_hello'_20);
                            {6735}in(io, server_hello'_29: msg);
                            {6736}let SH(sr'_20: bytes32,mode'_20: params) = server_hello'_29 in
                            (
                                {6737}if (sr'_20 = B32(HRR24,HRR8)) then
                                    {6738}out(io, unexpected_message)
                                else
                                    {6739}let (x_476: bitstring,g_40: group) = kex_data'_20 in
                                    {6740}let (psk_offer_36: preSharedKey,id_offer_36: identityPsk,es_offer_36: bitstring,is_safe_offer_36: bool) = psk_data'_31 in
                                    {6741}event Client_PSKOffer(@6_id_client,psk_offer_36,id_offer_36,is_safe_offer_36);
                                    {6742}event Client_Rand_client(@6_id_client,cr'_20);
                                    {6743}event Client_DH_client(@6_id_client,dh_pub(g_40,x_476));
                                    {6744}event Client_server_domain(@6_id_client,o_dom);
                                    {6745}let SH(sr_47: bytes32,mode_42: params) = server_hello'_29 in
                                    {6746}event Client_Rand_server(@6_id_client,sr_47);
                                    {6747}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_40,gy_37: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_74: preSharedKeyExt) = mode_42 in
                                    (
                                        {6749}event Client_DH_server(@6_id_client,gy_37);
                                        {6750}let v_1490: bool = (psk_ext_74 = empty_psk_ext) in
                                        {6751}let psk_173: preSharedKey = (if v_1490 then NoPsk else caught-fail) in
                                        {6753}let k_146: bitstring = (if v_1490 then catch-fail(psk2b(psk_173)) else caught-fail) in
                                        {6754}let v_1491: bool = not-caught-fail(k_146) in
                                        {6752}let s_150: bitstring = (if v_1490 then zero else caught-fail) in
                                        {6755}let early_secret_115: bitstring = (if v_1490 then catch-fail((if v_1491 then hmac(@6_tls_h,s_150,k_146) else fail-any)) else caught-fail) in
                                        {6756}let v_1492: bool = not-caught-fail(early_secret_115) in
                                        {6758}let m_151: bitstring = (if v_1492 then zero else caught-fail) in
                                        {6759}let h_408: bitstring = (if v_1492 then catch-fail(hash(@6_tls_h,m_151)) else caught-fail) in
                                        {6760}let v_1493: bool = not-caught-fail(h_408) in
                                        {6757}let l_423: label = (if v_1492 then tls13_ext_res_binder else caught-fail) in
                                        {6761}let x_477: bitstring = (if v_1493 then (l_423,h_408) else caught-fail) in
                                        {6762}let binder_key_77: bitstring = (if v_1492 then catch-fail((if v_1493 then hmac(@6_tls_h,early_secret_115,x_477) else fail-any)) else caught-fail) in
                                        {6763}let v_1494: bool = not-caught-fail(binder_key_77) in
                                        {6764}let v_1495: bitstring = (if v_1490 then catch-fail((if v_1492 then (if v_1494 then (early_secret_115,binder_key_77) else fail-any) else fail-any)) else caught-fail) in
                                        {6765}let v_1496: bool = (not-caught-fail(v_1495) && success?(1-proj-2-tuple(v_1495))) in
                                        {6766}let kb_77: mac_key = (if v_1496 then 2-proj-2-tuple(v_1495) else caught-fail) in
                                        {6767}let es_116: bitstring = (if v_1496 then 1-proj-2-tuple(v_1495) else caught-fail) in
                                        {6768}let v_1497: bitstring = (if not(v_1490) then catch-fail(psk_data'_31) else caught-fail) in
                                        {6769}let v_1498: bool = (not-caught-fail(v_1497) && success?(1-proj-4-tuple(v_1497))) in
                                        {6770}let is_safe_69: bool = (if v_1498 then 4-proj-4-tuple(v_1497) else caught-fail) in
                                        {6771}let es_117: bitstring = (if v_1498 then 3-proj-4-tuple(v_1497) else caught-fail) in
                                        {6772}let id_80: identityPsk = (if v_1498 then 2-proj-4-tuple(v_1497) else caught-fail) in
                                        {6773}let psk_174: preSharedKey = (if v_1498 then 1-proj-4-tuple(v_1497) else caught-fail) in
                                        {6774}let (psk_175: preSharedKey,early_secret_116: bitstring,valid_36: bool,safe_psk_42: bool) = (if v_1490 then (if v_1496 then (NoPsk,es_116,true,false) else fail-any) else (if v_1498 then (psk_174,es_117,((psk_174 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_74)),is_safe_69) else fail-any)) in
                                        {6775}event Client_PSKChoosen(@6_id_client,psk_175,safe_psk_42);
                                        {6776}if valid_36 then
                                        (
                                            {6779}new s_151[]: seed;
                                            {6777}let gxy_73: element = catch-fail(dh_decap_fun(g_40,gy_37,x_476)) in
                                            {6778}let v_1499: bool = not-caught-fail(gxy_73) in
                                            {6780}let gxy_74: element = (if v_1499 then gxy_73 else dh_f(s_151)) in
                                            {6781}event Client_DH_gxy(@6_id_client,gxy_74);
                                            {6783}let m_152: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                            {6784}let v_1500: bool = not-caught-fail(m_152) in
                                            {6785}let h_409: bitstring = (if v_1500 then catch-fail(hash(@6_tls_h,m_152)) else caught-fail) in
                                            {6786}let v_1501: bool = not-caught-fail(h_409) in
                                            {6782}let l_424: label = tls13_derived in
                                            {6787}let x_478: bitstring = (if v_1501 then (l_424,h_409) else caught-fail) in
                                            {6788}let extra_81: bitstring = catch-fail((if v_1500 then (if v_1501 then hmac(@6_tls_h,early_secret_116,x_478) else fail-any) else fail-any)) in
                                            {6789}let v_1502: bool = not-caught-fail(extra_81) in
                                            {6790}let handshake_secret_37: bitstring = (if v_1502 then hmac(@6_tls_h,extra_81,gxy_74) else fail-any) in
                                            {6792}let m_153: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                            {6793}let v_1503: bool = not-caught-fail(m_153) in
                                            {6794}let h_410: bitstring = (if v_1503 then catch-fail(hash(@6_tls_h,m_153)) else caught-fail) in
                                            {6795}let v_1504: bool = not-caught-fail(h_410) in
                                            {6791}let l_425: label = tls13_derived in
                                            {6796}let x_479: bitstring = (if v_1504 then (l_425,h_410) else caught-fail) in
                                            {6797}let extra_82: bitstring = catch-fail((if v_1503 then (if v_1504 then hmac(@6_tls_h,handshake_secret_37,x_479) else fail-any) else fail-any)) in
                                            {6798}let v_1505: bool = not-caught-fail(extra_82) in
                                            {6799}let k_147: bitstring = (if v_1505 then zero else caught-fail) in
                                            {6800}let master_secret_81: bitstring = (if v_1505 then catch-fail(hmac(@6_tls_h,handshake_secret_37,k_147)) else caught-fail) in
                                            {6801}let v_1506: bool = not-caught-fail(master_secret_81) in
                                            {6734}let cur_log_OU1_HRR_OU2_11: bitstring = (cur_log_OU1_HRR_2,client_hello'_20) in
                                            {6748}let cur_log2_79: bitstring = (cur_log_OU1_HRR_OU2_11,server_hello'_29) in
                                            {6803}let h_411: bitstring = (if v_1506 then catch-fail(hash(@6_tls_h,cur_log2_79)) else caught-fail) in
                                            {6804}let v_1507: bool = not-caught-fail(h_411) in
                                            {6802}let l_426: label = (if v_1506 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {6805}let x_480: bitstring = (if v_1507 then (l_426,h_411) else caught-fail) in
                                            {6806}let client_hts_37: bitstring = (if v_1506 then catch-fail((if v_1507 then hmac(@6_tls_h,handshake_secret_37,x_480) else fail-any)) else caught-fail) in
                                            {6807}let v_1508: bool = not-caught-fail(client_hts_37) in
                                            {6809}let h_412: bitstring = (if v_1508 then catch-fail(hash(@6_tls_h,cur_log2_79)) else caught-fail) in
                                            {6810}let v_1509: bool = not-caught-fail(h_412) in
                                            {6808}let l_427: label = (if v_1508 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {6811}let x_481: bitstring = (if v_1509 then (l_427,h_412) else caught-fail) in
                                            {6812}let server_hts_37: bitstring = (if v_1508 then catch-fail((if v_1509 then hmac(@6_tls_h,handshake_secret_37,x_481) else fail-any)) else caught-fail) in
                                            {6813}let v_1510: bool = not-caught-fail(server_hts_37) in
                                            {6815}let h_413: bitstring = (if v_1510 then zero else caught-fail) in
                                            {6814}let l_428: label = (if v_1510 then tls13_key else caught-fail) in
                                            {6816}let x_482: bitstring = (if v_1510 then (l_428,h_413) else caught-fail) in
                                            {6817}let client_wkh_37: bitstring = (if v_1510 then catch-fail(hmac(@6_tls_h,client_hts_37,x_482)) else caught-fail) in
                                            {6818}let v_1511: bool = not-caught-fail(client_wkh_37) in
                                            {6820}let h_414: bitstring = (if v_1511 then zero else caught-fail) in
                                            {6819}let l_429: label = (if v_1511 then tls13_key else caught-fail) in
                                            {6821}let x_483: bitstring = (if v_1511 then (l_429,h_414) else caught-fail) in
                                            {6822}let server_wkh_37: bitstring = (if v_1511 then catch-fail(hmac(@6_tls_h,server_hts_37,x_483)) else caught-fail) in
                                            {6823}let v_1512: bool = not-caught-fail(server_wkh_37) in
                                            {6825}let h_415: bitstring = (if v_1512 then zero else caught-fail) in
                                            {6824}let l_430: label = (if v_1512 then tls13_finished else caught-fail) in
                                            {6826}let x_484: bitstring = (if v_1512 then (l_430,h_415) else caught-fail) in
                                            {6827}let client_fk_37: bitstring = (if v_1512 then catch-fail(hmac(@6_tls_h,client_hts_37,x_484)) else caught-fail) in
                                            {6828}let v_1513: bool = not-caught-fail(client_fk_37) in
                                            {6830}let h_416: bitstring = (if v_1513 then zero else caught-fail) in
                                            {6829}let l_431: label = (if v_1513 then tls13_finished else caught-fail) in
                                            {6831}let x_485: bitstring = (if v_1513 then (l_431,h_416) else caught-fail) in
                                            {6832}let server_fk_37: bitstring = (if v_1513 then catch-fail(hmac(@6_tls_h,server_hts_37,x_485)) else caught-fail) in
                                            {6833}let v_1514: bool = not-caught-fail(server_fk_37) in
                                            {6834}let (master_secret_82: bitstring,chk_44: aead_key,shk_43: aead_key,cfin_44: mac_key,sfin_43: mac_key) = (if v_1505 then (if v_1506 then (if v_1508 then (if v_1510 then (if v_1511 then (if v_1512 then (if v_1513 then (if v_1514 then (master_secret_81,client_wkh_37,server_wkh_37,client_fk_37,server_fk_37) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {6835}event Client_chk(@6_id_client,chk_44);
                                            {6836}event Client_shk(@6_id_client,shk_43);
                                            {6837}event Client_cfin(@6_id_client,cfin_44);
                                            {6838}event Client_sfin(@6_id_client,sfin_43);
                                            {6839}in(io, enc_ee_msg_36: bitstring);
                                            {6840}let ee_msg_37: msg = aead_dec(@6_tls_a,shk_43,0,zero,enc_ee_msg_36) in
                                            {6841}let EE(ech_ee_36: echExt,extra_ee_36: extraExt) = ee_msg_37 in
                                            {6842}let cur_log2_80: bitstring = (cur_log2_79,ee_msg_37) in
                                            {6843}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(cr'_20,sr_47,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_175,safe_psk_42,@6_comp_psk,master_secret_82,chk_44,0,shk_43,1,cfin_44,sfin_43,cur_log2_80)))
                                        )
                                        else
                                            {6844}out(io, illegal_parameter)
                                    )
                                    else
                                        {6845}out(io, illegal_parameter)
                            )
                            else
                                {6846}out(io, unexpected_message)
                )
                else
                    {6848}let sh_modified_12: msg = SH(B32(sr24_4,zero8),mode_35) in
                    {6847}let cur_log_19: bitstring = (zero,i_client_hello_11) in
                    {6849}let cur_log_sh_12: bitstring = (cur_log_19,sh_modified_12) in
                    {6850}let transcript_ech_conf_12: bitstring = catch-fail(hash(@6_backend_h,cur_log_sh_12)) in
                    {6851}let v_1515: bool = not-caught-fail(transcript_ech_conf_12) in
                    {6853}let k_148: bitstring = (if v_1515 then catch-fail(b32_2_b(get_random(i_client_hello_11))) else caught-fail) in
                    {6854}let v_1516: bool = not-caught-fail(k_148) in
                    {6852}let s_152: bitstring = (if v_1515 then zero else caught-fail) in
                    {6855}let k_149: bitstring = (if v_1515 then catch-fail((if v_1516 then hmac(@6_backend_h,s_152,k_148) else fail-any)) else caught-fail) in
                    {6856}let v_1517: bool = not-caught-fail(k_149) in
                    {6857}let l_432: label = (if v_1517 then ech_accept_confirmation else caught-fail) in
                    {6858}let x_486: bitstring = (if v_1517 then (l_432,cur_log_sh_12) else caught-fail) in
                    {6859}let sr8_15: bytes8 = (if v_1515 then catch-fail(crop_into_bytes8((if v_1517 then hmac(@6_backend_h,k_149,x_486) else fail-any))) else caught-fail) in
                    {6860}let v_1518: bool = not-caught-fail(sr8_15) in
                    {6861}if (B32(sr24_4,sr8_11) = (if v_1515 then (if v_1518 then B32(sr24_4,sr8_15) else fail-any) else fail-any)) then
                    (
                        {6862}event ClientEchAcceptance(@6_id_client,true);
                        {6864}let (x_487: bitstring,g_41: group) = i_kex_data_5 in
                        {6865}let (psk_offer_37: preSharedKey,id_offer_37: identityPsk,es_offer_37: bitstring,is_safe_offer_37: bool) = psk_data_34 in
                        {6866}event Client_PSKOffer(@6_id_client,psk_offer_37,id_offer_37,is_safe_offer_37);
                        {6867}event Client_Rand_client(@6_id_client,i_cr_5);
                        {6868}event Client_DH_client(@6_id_client,dh_pub(g_41,x_487));
                        {6869}event Client_server_domain(@6_id_client,backend_dom);
                        {6870}let SH(sr_48: bytes32,mode_43: params) = server_hello_6 in
                        {6871}event Client_Rand_server(@6_id_client,sr_48);
                        {6872}let nego(=TLS13,=@6_backend_h,=@6_backend_a,server_kex_ext(DHE_kex(=g_41,gy_38: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_75: preSharedKeyExt) = mode_43 in
                        (
                            {6874}event Client_DH_server(@6_id_client,gy_38);
                            {6875}let v_1519: bool = (psk_ext_75 = empty_psk_ext) in
                            {6876}let psk_176: preSharedKey = (if v_1519 then NoPsk else caught-fail) in
                            {6878}let k_150: bitstring = (if v_1519 then catch-fail(psk2b(psk_176)) else caught-fail) in
                            {6879}let v_1520: bool = not-caught-fail(k_150) in
                            {6877}let s_153: bitstring = (if v_1519 then zero else caught-fail) in
                            {6880}let early_secret_117: bitstring = (if v_1519 then catch-fail((if v_1520 then hmac(@6_backend_h,s_153,k_150) else fail-any)) else caught-fail) in
                            {6881}let v_1521: bool = not-caught-fail(early_secret_117) in
                            {6883}let m_154: bitstring = (if v_1521 then zero else caught-fail) in
                            {6884}let h_417: bitstring = (if v_1521 then catch-fail(hash(@6_backend_h,m_154)) else caught-fail) in
                            {6885}let v_1522: bool = not-caught-fail(h_417) in
                            {6882}let l_433: label = (if v_1521 then tls13_ext_res_binder else caught-fail) in
                            {6886}let x_488: bitstring = (if v_1522 then (l_433,h_417) else caught-fail) in
                            {6887}let binder_key_78: bitstring = (if v_1521 then catch-fail((if v_1522 then hmac(@6_backend_h,early_secret_117,x_488) else fail-any)) else caught-fail) in
                            {6888}let v_1523: bool = not-caught-fail(binder_key_78) in
                            {6889}let v_1524: bitstring = (if v_1519 then catch-fail((if v_1521 then (if v_1523 then (early_secret_117,binder_key_78) else fail-any) else fail-any)) else caught-fail) in
                            {6890}let v_1525: bool = (not-caught-fail(v_1524) && success?(1-proj-2-tuple(v_1524))) in
                            {6891}let kb_78: mac_key = (if v_1525 then 2-proj-2-tuple(v_1524) else caught-fail) in
                            {6892}let es_118: bitstring = (if v_1525 then 1-proj-2-tuple(v_1524) else caught-fail) in
                            {6893}let v_1526: bitstring = (if not(v_1519) then catch-fail(psk_data_34) else caught-fail) in
                            {6894}let v_1527: bool = (not-caught-fail(v_1526) && success?(1-proj-4-tuple(v_1526))) in
                            {6895}let is_safe_70: bool = (if v_1527 then 4-proj-4-tuple(v_1526) else caught-fail) in
                            {6896}let es_119: bitstring = (if v_1527 then 3-proj-4-tuple(v_1526) else caught-fail) in
                            {6897}let id_81: identityPsk = (if v_1527 then 2-proj-4-tuple(v_1526) else caught-fail) in
                            {6898}let psk_177: preSharedKey = (if v_1527 then 1-proj-4-tuple(v_1526) else caught-fail) in
                            {6899}let (psk_178: preSharedKey,early_secret_118: bitstring,valid_37: bool,safe_psk_43: bool) = (if v_1519 then (if v_1525 then (NoPsk,es_118,true,false) else fail-any) else (if v_1527 then (psk_177,es_119,((psk_177 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_75)),is_safe_70) else fail-any)) in
                            {6900}event Client_PSKChoosen(@6_id_client,psk_178,safe_psk_43);
                            {6901}if valid_37 then
                            (
                                {6904}new s_154[]: seed;
                                {6902}let gxy_75: element = catch-fail(dh_decap_fun(g_41,gy_38,x_487)) in
                                {6903}let v_1528: bool = not-caught-fail(gxy_75) in
                                {6905}let gxy_76: element = (if v_1528 then gxy_75 else dh_f(s_154)) in
                                {6906}event Client_DH_gxy(@6_id_client,gxy_76);
                                {6908}let m_155: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                {6909}let v_1529: bool = not-caught-fail(m_155) in
                                {6910}let h_418: bitstring = (if v_1529 then catch-fail(hash(@6_backend_h,m_155)) else caught-fail) in
                                {6911}let v_1530: bool = not-caught-fail(h_418) in
                                {6907}let l_434: label = tls13_derived in
                                {6912}let x_489: bitstring = (if v_1530 then (l_434,h_418) else caught-fail) in
                                {6913}let extra_83: bitstring = catch-fail((if v_1529 then (if v_1530 then hmac(@6_backend_h,early_secret_118,x_489) else fail-any) else fail-any)) in
                                {6914}let v_1531: bool = not-caught-fail(extra_83) in
                                {6915}let handshake_secret_38: bitstring = (if v_1531 then hmac(@6_backend_h,extra_83,gxy_76) else fail-any) in
                                {6917}let m_156: bitstring = catch-fail(hash(@6_backend_h,zero)) in
                                {6918}let v_1532: bool = not-caught-fail(m_156) in
                                {6919}let h_419: bitstring = (if v_1532 then catch-fail(hash(@6_backend_h,m_156)) else caught-fail) in
                                {6920}let v_1533: bool = not-caught-fail(h_419) in
                                {6916}let l_435: label = tls13_derived in
                                {6921}let x_490: bitstring = (if v_1533 then (l_435,h_419) else caught-fail) in
                                {6922}let extra_84: bitstring = catch-fail((if v_1532 then (if v_1533 then hmac(@6_backend_h,handshake_secret_38,x_490) else fail-any) else fail-any)) in
                                {6923}let v_1534: bool = not-caught-fail(extra_84) in
                                {6924}let k_151: bitstring = (if v_1534 then zero else caught-fail) in
                                {6925}let master_secret_83: bitstring = (if v_1534 then catch-fail(hmac(@6_backend_h,handshake_secret_38,k_151)) else caught-fail) in
                                {6926}let v_1535: bool = not-caught-fail(master_secret_83) in
                                {6863}let cur_log_20: bitstring = (zero,i_client_hello_11) in
                                {6873}let cur_log2_81: bitstring = (cur_log_20,server_hello_6) in
                                {6928}let h_420: bitstring = (if v_1535 then catch-fail(hash(@6_backend_h,cur_log2_81)) else caught-fail) in
                                {6929}let v_1536: bool = not-caught-fail(h_420) in
                                {6927}let l_436: label = (if v_1535 then tls13_client_handshake_traffic_secret else caught-fail) in
                                {6930}let x_491: bitstring = (if v_1536 then (l_436,h_420) else caught-fail) in
                                {6931}let client_hts_38: bitstring = (if v_1535 then catch-fail((if v_1536 then hmac(@6_backend_h,handshake_secret_38,x_491) else fail-any)) else caught-fail) in
                                {6932}let v_1537: bool = not-caught-fail(client_hts_38) in
                                {6934}let h_421: bitstring = (if v_1537 then catch-fail(hash(@6_backend_h,cur_log2_81)) else caught-fail) in
                                {6935}let v_1538: bool = not-caught-fail(h_421) in
                                {6933}let l_437: label = (if v_1537 then tls13_server_handshake_traffic_secret else caught-fail) in
                                {6936}let x_492: bitstring = (if v_1538 then (l_437,h_421) else caught-fail) in
                                {6937}let server_hts_38: bitstring = (if v_1537 then catch-fail((if v_1538 then hmac(@6_backend_h,handshake_secret_38,x_492) else fail-any)) else caught-fail) in
                                {6938}let v_1539: bool = not-caught-fail(server_hts_38) in
                                {6940}let h_422: bitstring = (if v_1539 then zero else caught-fail) in
                                {6939}let l_438: label = (if v_1539 then tls13_key else caught-fail) in
                                {6941}let x_493: bitstring = (if v_1539 then (l_438,h_422) else caught-fail) in
                                {6942}let client_wkh_38: bitstring = (if v_1539 then catch-fail(hmac(@6_backend_h,client_hts_38,x_493)) else caught-fail) in
                                {6943}let v_1540: bool = not-caught-fail(client_wkh_38) in
                                {6945}let h_423: bitstring = (if v_1540 then zero else caught-fail) in
                                {6944}let l_439: label = (if v_1540 then tls13_key else caught-fail) in
                                {6946}let x_494: bitstring = (if v_1540 then (l_439,h_423) else caught-fail) in
                                {6947}let server_wkh_38: bitstring = (if v_1540 then catch-fail(hmac(@6_backend_h,server_hts_38,x_494)) else caught-fail) in
                                {6948}let v_1541: bool = not-caught-fail(server_wkh_38) in
                                {6950}let h_424: bitstring = (if v_1541 then zero else caught-fail) in
                                {6949}let l_440: label = (if v_1541 then tls13_finished else caught-fail) in
                                {6951}let x_495: bitstring = (if v_1541 then (l_440,h_424) else caught-fail) in
                                {6952}let client_fk_38: bitstring = (if v_1541 then catch-fail(hmac(@6_backend_h,client_hts_38,x_495)) else caught-fail) in
                                {6953}let v_1542: bool = not-caught-fail(client_fk_38) in
                                {6955}let h_425: bitstring = (if v_1542 then zero else caught-fail) in
                                {6954}let l_441: label = (if v_1542 then tls13_finished else caught-fail) in
                                {6956}let x_496: bitstring = (if v_1542 then (l_441,h_425) else caught-fail) in
                                {6957}let server_fk_38: bitstring = (if v_1542 then catch-fail(hmac(@6_backend_h,server_hts_38,x_496)) else caught-fail) in
                                {6958}let v_1543: bool = not-caught-fail(server_fk_38) in
                                {6959}let (master_secret_84: bitstring,chk_45: aead_key,shk_44: aead_key,cfin_45: mac_key,sfin_44: mac_key) = (if v_1534 then (if v_1535 then (if v_1537 then (if v_1539 then (if v_1540 then (if v_1541 then (if v_1542 then (if v_1543 then (master_secret_83,client_wkh_38,server_wkh_38,client_fk_38,server_fk_38) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                {6960}event Client_chk(@6_id_client,chk_45);
                                {6961}event Client_shk(@6_id_client,shk_44);
                                {6962}event Client_cfin(@6_id_client,cfin_45);
                                {6963}event Client_sfin(@6_id_client,sfin_44);
                                {6964}in(io, enc_ee_msg_37: bitstring);
                                {6965}let ee_msg_38: msg = aead_dec(@6_backend_a,shk_44,0,zero,enc_ee_msg_37) in
                                {6966}let EE(ech_ee_37: echExt,extra_ee_37: extraExt) = ee_msg_38 in
                                {6967}let cur_log2_82: bitstring = (cur_log2_81,ee_msg_38) in
                                {6968}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(i_cr_5,sr_48,@6_backend_h,@6_backend_a,c_dom_6,backend_dom,psk_178,safe_psk_43,@6_comp_psk,master_secret_84,chk_45,0,shk_44,1,cfin_45,sfin_44,cur_log2_82)))
                            )
                            else
                                {6969}out(io, illegal_parameter)
                        )
                        else
                            {6970}out(io, illegal_parameter)
                    )
                    else
                        {6971}event ClientEchAcceptance(@6_id_client,false);
                        {6972}let v_1544: bool = @6_use_grease in
                        {6973}let psk_179: preSharedKey = (if not(v_1544) then NoPsk else caught-fail) in
                        {6975}let k_152: bitstring = (if not(v_1544) then catch-fail(psk2b(psk_179)) else caught-fail) in
                        {6976}let v_1545: bool = not-caught-fail(k_152) in
                        {6974}let s_155: bitstring = (if not(v_1544) then zero else caught-fail) in
                        {6977}let early_secret_119: bitstring = (if not(v_1544) then catch-fail((if v_1545 then hmac(@6_tls_h,s_155,k_152) else fail-any)) else caught-fail) in
                        {6978}let v_1546: bool = not-caught-fail(early_secret_119) in
                        {6980}let m_157: bitstring = (if v_1546 then zero else caught-fail) in
                        {6981}let h_426: bitstring = (if v_1546 then catch-fail(hash(@6_tls_h,m_157)) else caught-fail) in
                        {6982}let v_1547: bool = not-caught-fail(h_426) in
                        {6979}let l_442: label = (if v_1546 then tls13_ext_res_binder else caught-fail) in
                        {6983}let x_497: bitstring = (if v_1547 then (l_442,h_426) else caught-fail) in
                        {6984}let binder_key_79: bitstring = (if v_1546 then catch-fail((if v_1547 then hmac(@6_tls_h,early_secret_119,x_497) else fail-any)) else caught-fail) in
                        {6985}let v_1548: bool = not-caught-fail(binder_key_79) in
                        {6986}let v_1549: bitstring = (if not(v_1544) then catch-fail((if v_1546 then (if v_1548 then (early_secret_119,binder_key_79) else fail-any) else fail-any)) else caught-fail) in
                        {6987}let v_1550: bool = (not-caught-fail(v_1549) && success?(1-proj-2-tuple(v_1549))) in
                        {6988}let kb_79: mac_key = (if v_1550 then 2-proj-2-tuple(v_1549) else caught-fail) in
                        {6989}let es'_2: bitstring = (if v_1550 then 1-proj-2-tuple(v_1549) else caught-fail) in
                        {6990}let psk_data'_32: bitstring = (if v_1544 then psk_data_34 else (if v_1550 then (NoPsk,zero,es'_2,false) else fail-any)) in
                        {6992}let (x_498: bitstring,g_42: group) = o_kex_data_5 in
                        {6993}let (psk_offer_38: preSharedKey,id_offer_38: identityPsk,es_offer_38: bitstring,is_safe_offer_38: bool) = psk_data'_32 in
                        {6994}event Client_PSKOffer(@6_id_client,psk_offer_38,id_offer_38,is_safe_offer_38);
                        {6995}event Client_Rand_client(@6_id_client,o_cr_7);
                        {6996}event Client_DH_client(@6_id_client,dh_pub(g_42,x_498));
                        {6997}event Client_server_domain(@6_id_client,o_dom);
                        {6998}let SH(sr_49: bytes32,mode_44: params) = server_hello_6 in
                        {6999}event Client_Rand_server(@6_id_client,sr_49);
                        {7000}let nego(=TLS13,=@6_tls_h,=@6_tls_a,server_kex_ext(DHE_kex(=g_42,gy_39: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_76: preSharedKeyExt) = mode_44 in
                        (
                            {7002}event Client_DH_server(@6_id_client,gy_39);
                            {7003}let v_1551: bool = (psk_ext_76 = empty_psk_ext) in
                            {7004}let psk_180: preSharedKey = (if v_1551 then NoPsk else caught-fail) in
                            {7006}let k_153: bitstring = (if v_1551 then catch-fail(psk2b(psk_180)) else caught-fail) in
                            {7007}let v_1552: bool = not-caught-fail(k_153) in
                            {7005}let s_156: bitstring = (if v_1551 then zero else caught-fail) in
                            {7008}let early_secret_120: bitstring = (if v_1551 then catch-fail((if v_1552 then hmac(@6_tls_h,s_156,k_153) else fail-any)) else caught-fail) in
                            {7009}let v_1553: bool = not-caught-fail(early_secret_120) in
                            {7011}let m_158: bitstring = (if v_1553 then zero else caught-fail) in
                            {7012}let h_427: bitstring = (if v_1553 then catch-fail(hash(@6_tls_h,m_158)) else caught-fail) in
                            {7013}let v_1554: bool = not-caught-fail(h_427) in
                            {7010}let l_443: label = (if v_1553 then tls13_ext_res_binder else caught-fail) in
                            {7014}let x_499: bitstring = (if v_1554 then (l_443,h_427) else caught-fail) in
                            {7015}let binder_key_80: bitstring = (if v_1553 then catch-fail((if v_1554 then hmac(@6_tls_h,early_secret_120,x_499) else fail-any)) else caught-fail) in
                            {7016}let v_1555: bool = not-caught-fail(binder_key_80) in
                            {7017}let v_1556: bitstring = (if v_1551 then catch-fail((if v_1553 then (if v_1555 then (early_secret_120,binder_key_80) else fail-any) else fail-any)) else caught-fail) in
                            {7018}let v_1557: bool = (not-caught-fail(v_1556) && success?(1-proj-2-tuple(v_1556))) in
                            {7019}let kb_80: mac_key = (if v_1557 then 2-proj-2-tuple(v_1556) else caught-fail) in
                            {7020}let es_120: bitstring = (if v_1557 then 1-proj-2-tuple(v_1556) else caught-fail) in
                            {7021}let v_1558: bitstring = (if not(v_1551) then catch-fail(psk_data'_32) else caught-fail) in
                            {7022}let v_1559: bool = (not-caught-fail(v_1558) && success?(1-proj-4-tuple(v_1558))) in
                            {7023}let is_safe_71: bool = (if v_1559 then 4-proj-4-tuple(v_1558) else caught-fail) in
                            {7024}let es_121: bitstring = (if v_1559 then 3-proj-4-tuple(v_1558) else caught-fail) in
                            {7025}let id_82: identityPsk = (if v_1559 then 2-proj-4-tuple(v_1558) else caught-fail) in
                            {7026}let psk_181: preSharedKey = (if v_1559 then 1-proj-4-tuple(v_1558) else caught-fail) in
                            {7027}let (psk_182: preSharedKey,early_secret_121: bitstring,valid_38: bool,safe_psk_44: bool) = (if v_1551 then (if v_1557 then (NoPsk,es_120,true,false) else fail-any) else (if v_1559 then (psk_181,es_121,((psk_181 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_76)),is_safe_71) else fail-any)) in
                            {7028}event Client_PSKChoosen(@6_id_client,psk_182,safe_psk_44);
                            {7029}if valid_38 then
                            (
                                {7032}new s_157[]: seed;
                                {7030}let gxy_77: element = catch-fail(dh_decap_fun(g_42,gy_39,x_498)) in
                                {7031}let v_1560: bool = not-caught-fail(gxy_77) in
                                {7033}let gxy_78: element = (if v_1560 then gxy_77 else dh_f(s_157)) in
                                {7034}event Client_DH_gxy(@6_id_client,gxy_78);
                                {7036}let m_159: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                {7037}let v_1561: bool = not-caught-fail(m_159) in
                                {7038}let h_428: bitstring = (if v_1561 then catch-fail(hash(@6_tls_h,m_159)) else caught-fail) in
                                {7039}let v_1562: bool = not-caught-fail(h_428) in
                                {7035}let l_444: label = tls13_derived in
                                {7040}let x_500: bitstring = (if v_1562 then (l_444,h_428) else caught-fail) in
                                {7041}let extra_85: bitstring = catch-fail((if v_1561 then (if v_1562 then hmac(@6_tls_h,early_secret_121,x_500) else fail-any) else fail-any)) in
                                {7042}let v_1563: bool = not-caught-fail(extra_85) in
                                {7043}let handshake_secret_39: bitstring = (if v_1563 then hmac(@6_tls_h,extra_85,gxy_78) else fail-any) in
                                {7045}let m_160: bitstring = catch-fail(hash(@6_tls_h,zero)) in
                                {7046}let v_1564: bool = not-caught-fail(m_160) in
                                {7047}let h_429: bitstring = (if v_1564 then catch-fail(hash(@6_tls_h,m_160)) else caught-fail) in
                                {7048}let v_1565: bool = not-caught-fail(h_429) in
                                {7044}let l_445: label = tls13_derived in
                                {7049}let x_501: bitstring = (if v_1565 then (l_445,h_429) else caught-fail) in
                                {7050}let extra_86: bitstring = catch-fail((if v_1564 then (if v_1565 then hmac(@6_tls_h,handshake_secret_39,x_501) else fail-any) else fail-any)) in
                                {7051}let v_1566: bool = not-caught-fail(extra_86) in
                                {7052}let k_154: bitstring = (if v_1566 then zero else caught-fail) in
                                {7053}let master_secret_85: bitstring = (if v_1566 then catch-fail(hmac(@6_tls_h,handshake_secret_39,k_154)) else caught-fail) in
                                {7054}let v_1567: bool = not-caught-fail(master_secret_85) in
                                {6991}let cur_log_21: bitstring = (zero,o_client_hello_2) in
                                {7001}let cur_log2_83: bitstring = (cur_log_21,server_hello_6) in
                                {7056}let h_430: bitstring = (if v_1567 then catch-fail(hash(@6_tls_h,cur_log2_83)) else caught-fail) in
                                {7057}let v_1568: bool = not-caught-fail(h_430) in
                                {7055}let l_446: label = (if v_1567 then tls13_client_handshake_traffic_secret else caught-fail) in
                                {7058}let x_502: bitstring = (if v_1568 then (l_446,h_430) else caught-fail) in
                                {7059}let client_hts_39: bitstring = (if v_1567 then catch-fail((if v_1568 then hmac(@6_tls_h,handshake_secret_39,x_502) else fail-any)) else caught-fail) in
                                {7060}let v_1569: bool = not-caught-fail(client_hts_39) in
                                {7062}let h_431: bitstring = (if v_1569 then catch-fail(hash(@6_tls_h,cur_log2_83)) else caught-fail) in
                                {7063}let v_1570: bool = not-caught-fail(h_431) in
                                {7061}let l_447: label = (if v_1569 then tls13_server_handshake_traffic_secret else caught-fail) in
                                {7064}let x_503: bitstring = (if v_1570 then (l_447,h_431) else caught-fail) in
                                {7065}let server_hts_39: bitstring = (if v_1569 then catch-fail((if v_1570 then hmac(@6_tls_h,handshake_secret_39,x_503) else fail-any)) else caught-fail) in
                                {7066}let v_1571: bool = not-caught-fail(server_hts_39) in
                                {7068}let h_432: bitstring = (if v_1571 then zero else caught-fail) in
                                {7067}let l_448: label = (if v_1571 then tls13_key else caught-fail) in
                                {7069}let x_504: bitstring = (if v_1571 then (l_448,h_432) else caught-fail) in
                                {7070}let client_wkh_39: bitstring = (if v_1571 then catch-fail(hmac(@6_tls_h,client_hts_39,x_504)) else caught-fail) in
                                {7071}let v_1572: bool = not-caught-fail(client_wkh_39) in
                                {7073}let h_433: bitstring = (if v_1572 then zero else caught-fail) in
                                {7072}let l_449: label = (if v_1572 then tls13_key else caught-fail) in
                                {7074}let x_505: bitstring = (if v_1572 then (l_449,h_433) else caught-fail) in
                                {7075}let server_wkh_39: bitstring = (if v_1572 then catch-fail(hmac(@6_tls_h,server_hts_39,x_505)) else caught-fail) in
                                {7076}let v_1573: bool = not-caught-fail(server_wkh_39) in
                                {7078}let h_434: bitstring = (if v_1573 then zero else caught-fail) in
                                {7077}let l_450: label = (if v_1573 then tls13_finished else caught-fail) in
                                {7079}let x_506: bitstring = (if v_1573 then (l_450,h_434) else caught-fail) in
                                {7080}let client_fk_39: bitstring = (if v_1573 then catch-fail(hmac(@6_tls_h,client_hts_39,x_506)) else caught-fail) in
                                {7081}let v_1574: bool = not-caught-fail(client_fk_39) in
                                {7083}let h_435: bitstring = (if v_1574 then zero else caught-fail) in
                                {7082}let l_451: label = (if v_1574 then tls13_finished else caught-fail) in
                                {7084}let x_507: bitstring = (if v_1574 then (l_451,h_435) else caught-fail) in
                                {7085}let server_fk_39: bitstring = (if v_1574 then catch-fail(hmac(@6_tls_h,server_hts_39,x_507)) else caught-fail) in
                                {7086}let v_1575: bool = not-caught-fail(server_fk_39) in
                                {7087}let (master_secret_86: bitstring,chk_46: aead_key,shk_45: aead_key,cfin_46: mac_key,sfin_45: mac_key) = (if v_1566 then (if v_1567 then (if v_1569 then (if v_1571 then (if v_1572 then (if v_1573 then (if v_1574 then (if v_1575 then (master_secret_85,client_wkh_39,server_wkh_39,client_fk_39,server_fk_39) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                {7088}event Client_chk(@6_id_client,chk_46);
                                {7089}event Client_shk(@6_id_client,shk_45);
                                {7090}event Client_cfin(@6_id_client,cfin_46);
                                {7091}event Client_sfin(@6_id_client,sfin_45);
                                {7092}in(io, enc_ee_msg_38: bitstring);
                                {7093}let ee_msg_39: msg = aead_dec(@6_tls_a,shk_45,0,zero,enc_ee_msg_38) in
                                {7094}let EE(ech_ee_38: echExt,extra_ee_38: extraExt) = ee_msg_39 in
                                {7095}let cur_log2_84: bitstring = (cur_log2_83,ee_msg_39) in
                                {7096}out(ch_client_after_EE, (@6_id_client,ArgsClientAfterEE(o_cr_7,sr_49,@6_tls_h,@6_tls_a,c_dom_6,o_dom,psk_182,safe_psk_44,@6_comp_psk,master_secret_86,chk_46,0,shk_45,1,cfin_46,sfin_45,cur_log2_84)))
                            )
                            else
                                {7097}out(io, illegal_parameter)
                        )
                        else
                            {7098}out(io, illegal_parameter)
            )
            else
                {7099}out(io, unexpected_message)
        )
) | (
    {7101}!
    {7102}new id_server_4: idProc;
    {7103}in(io, s_dom_13: domain);
    {7104}event Same(s_dom_13);
    {7113}in(io, use_ech: bool);
    {7114}new @5_st[]: stamp;
    {7115}event PreciseInput(@5_st,use_ech);
    {7116}let () = () in
    {7117}event Same(use_ech);
    {7120}in(io, o_client_hello_3: msg);
    {7121}let CH(cr_16: bytes32,nego(=TLS13,c_h_alg: hash_alg,c_a_alg: aead_alg,kex_ext_5: keyShareExt,sni_ext_2: sniExt,ech_ext_12: echExt,extra_ext_3: extraExt,psk_ext_77: preSharedKeyExt)) = o_client_hello_3 in
    (
        {7122}if (sni_ext_2 = SNI(s_dom_13)) then
        (
            {7313}get ech_configurations(ech_config(config_id_8: configId,ech_g_10: group,pkR_10: element,=s_dom_13,ech_h_10: hash_alg,ech_a_10: aead_alg),skR_2: bitstring) in
            {7125}new @4_st[]: stamp;
            {7123}let ech_conf_1: echConfig = ech_config(config_id_8,ech_g_10,pkR_10,s_dom_13,ech_h_10,ech_a_10) in
            {7124}let @4_x: bitstring = (ech_conf_1,skR_2) in
            {7126}event PreciseInput(@4_st,@4_x);
            {7127}let () = () in
            {7105}let id_server_5: idProc = id_server_4 in
            {7128}event ServerChoosesEchConfig(id_server_5,ech_conf_1,use_ech);
            {7129}let v_1576: echConfig = ech_conf_1 in
            {7130}let v_1577: bool = success?(1-proj-ech_config(v_1576)) in
            {7131}let a_alg_12: aead_alg = (if v_1577 then 6-proj-ech_config(v_1576) else caught-fail) in
            {7132}let h_alg_14: hash_alg = (if v_1577 then 5-proj-ech_config(v_1576) else caught-fail) in
            {7133}let s_dom_14: domain = (if v_1577 then 4-proj-ech_config(v_1576) else caught-fail) in
            {7134}let pkR_11: element = (if v_1577 then 3-proj-ech_config(v_1576) else caught-fail) in
            {7135}let g_43: group = (if v_1577 then 2-proj-ech_config(v_1576) else caught-fail) in
            {7136}let config_id_9: configId = (if v_1577 then 1-proj-ech_config(v_1576) else caught-fail) in
            {7137}new s_158[]: seed;
            {7138}let gx_33: element = (if v_1577 then dh_pub(g_43,dh_k(s_158)) else caught-fail) in
            {7139}let v_1578: bitstring = (if v_1577 then catch-fail((dh_k(s_158),gx_33)) else caught-fail) in
            {7140}let v_1579: bool = (not-caught-fail(v_1578) && success?(1-proj-2-tuple(v_1578))) in
            {7141}let pkR': element = (if v_1579 then 2-proj-2-tuple(v_1578) else caught-fail) in
            {7142}let skR': bitstring = (if v_1579 then 1-proj-2-tuple(v_1578) else caught-fail) in
            {7143}new config_id'[]: configId;
            {7144}let retry_ech_ext: echExt = (if v_1577 then (if v_1579 then ECHConfigList(ech_config(config_id',g_43,pkR',s_dom_14,h_alg_14,a_alg_12)) else fail-any) else fail-any) in
            {7119}let req_cert_3: bool = true in
            {7118}let use_psk_1: bool = false in
            {7109}let tls_g_1: group = id_g(StrongDH,1) in
            {7108}let tls_a_1: aead_alg = id_aead(StrongAE,1) in
            {7107}let tls_h_1: hash_alg = id_hash(StrongHash,1) in
            {7106}let extra_ext_2: extraExt = empty_extra_ext in
            {7145}if ((use_ech ≠ true) || (ech_ext_12 = empty_ech_ext)) then
            (
                {7146}event ServerEchAcceptance(id_server_5,false);
                {7148}let CH(cr_17: bytes32,nego(=TLS13,=tls_h_1,=tls_a_1,kex_ext_6: keyShareExt,SNI(=s_dom_13),ech_ext_13: echExt,extra_ext_4: extraExt,psk_ext_78: preSharedKeyExt)) = o_client_hello_3 in
                (
                    {7147}let ee_msg_40: msg = EE(empty_ech_ext,extra_ext_2) in
                    {7149}let (=true,client_kex_ext(DHE_group(=tls_g_1))) = (false,kex_ext_6) in
                    (
                        {7150}let hrr_mode_3: params = nego(TLS13,tls_h_1,tls_a_1,hrr_kex_ext(tls_g_1),empty_sni_ext,empty_ech_ext,empty_extra_ext,empty_psk_ext) in
                        {7151}let hello_retry_request: msg = SH(B32(HRR24,HRR8),hrr_mode_3) in
                        {7152}out(io, hello_retry_request);
                        {7154}in(io, client_hello'_21: msg);
                        {7155}let CH(cr'_21: bytes32,offer': params) = client_hello'_21 in
                        (
                            {7153}let cur_log_HRR: bitstring = ((zero,o_client_hello_3),hello_retry_request) in
                            {7156}out(ch_server_SH, (id_server_5,ArgsServerSH(tls_g_1,tls_h_1,tls_a_1,s_dom_13,req_cert_3,false,use_psk_1,false,ee_msg_40,client_hello'_21,cur_log_HRR)))
                        )
                        else
                            {7157}out(io, unexpected_message)
                    )
                    else
                        {7158}let client_kex_ext(DHE_kex(=tls_g_1,gx_34: element)) = kex_ext_6 in
                            {7159}out(ch_server_SH, (id_server_5,ArgsServerSH(tls_g_1,tls_h_1,tls_a_1,s_dom_13,req_cert_3,false,use_psk_1,true,ee_msg_40,o_client_hello_3,zero)))
                        else
                            {7160}out(io, handshake_failure)
                )
                else
                    {7161}out(io, handshake_failure)
            )
            else
                {7162}let ECHClientHelloOuter(ech_h': hash_alg,ech_a': aead_alg,config_id'_1: configId,enc_2: element,payload_13: bitstring) = ech_ext_12 in
                (
                    {7163}if ((ech_h' = ech_h_10) && ((ech_a' = ech_a_10) && (config_id'_1 = config_id_8))) then
                    (
                        {7167}new s_159[]: seed;
                        {7171}let label_5: label = hpke_info_hash in
                        {7164}let info_1: bitstring = (tls_ech_str,ech_conf_1) in
                        {7172}let k_155: bitstring = (label_5,info_1) in
                        {7170}let salt_1: bitstring = zero in
                        {7173}let info_hash_1: bitstring = catch-fail(hmac(ech_h_10,salt_1,k_155)) in
                        {7174}let v_1581: bool = not-caught-fail(info_hash_1) in
                        {7176}let ikm_1: bitstring = (if v_1581 then zero else caught-fail) in
                        {7175}let label_6: label = (if v_1581 then hpke_secret else caught-fail) in
                        {7177}let k_156: bitstring = (if v_1581 then (label_6,ikm_1) else caught-fail) in
                        {7165}let gxy_79: element = catch-fail(dh_decap_fun(ech_g_10,enc_2,skR_2)) in
                        {7166}let v_1580: bool = not-caught-fail(gxy_79) in
                        {7168}let shared_secret_1: element = (if v_1580 then gxy_79 else dh_f(s_159)) in
                        {7178}let xsecret_1: bitstring = (if v_1581 then catch-fail(hmac(ech_h_10,shared_secret_1,k_156)) else caught-fail) in
                        {7179}let v_1582: bool = not-caught-fail(xsecret_1) in
                        {7180}let label_7: label = (if v_1582 then hpke_key else caught-fail) in
                        {7181}let x_508: bitstring = (if v_1582 then (label_7,info_hash_1) else caught-fail) in
                        {7182}let key_13: aead_key = (if v_1582 then catch-fail(hmac(ech_h_10,xsecret_1,x_508)) else caught-fail) in
                        {7183}let v_1583: bool = not-caught-fail(key_13) in
                        {7184}let label_8: label = (if v_1583 then hpke_base_nonce else caught-fail) in
                        {7185}let x_509: bitstring = (if v_1583 then (label_8,info_hash_1) else caught-fail) in
                        {7186}let base_nonce_13: bitstring = (if v_1583 then catch-fail(hmac(ech_h_10,xsecret_1,x_509)) else caught-fail) in
                        {7187}let v_1584: bool = not-caught-fail(base_nonce_13) in
                        {7169}let r_1: hpkeRole = R in
                        {7188}let context_1: hpkeContext = (if v_1581 then (if v_1582 then (if v_1583 then (if v_1584 then hpke_context(r_1,key_13,base_nonce_13) else fail-any) else fail-any) else fail-any) else fail-any) in
                        {7189}let v_1585: msg = o_client_hello_3 in
                        {7190}let v_1586: bool = (success?(1-proj-nego(2-proj-CH(v_1585))) && success?(1-proj-CH(v_1585))) in
                        {7191}let psk_ext_79: preSharedKeyExt = (if v_1586 then 8-proj-nego(2-proj-CH(v_1585)) else caught-fail) in
                        {7192}let extra_ext_5: extraExt = (if v_1586 then 7-proj-nego(2-proj-CH(v_1585)) else caught-fail) in
                        {7193}let ech_ext_14: echExt = (if v_1586 then 6-proj-nego(2-proj-CH(v_1585)) else caught-fail) in
                        {7194}let sni_ext_3: sniExt = (if v_1586 then 5-proj-nego(2-proj-CH(v_1585)) else caught-fail) in
                        {7195}let kex_ext_7: keyShareExt = (if v_1586 then 4-proj-nego(2-proj-CH(v_1585)) else caught-fail) in
                        {7196}let a_alg_13: aead_alg = (if v_1586 then 3-proj-nego(2-proj-CH(v_1585)) else caught-fail) in
                        {7197}let h_alg_15: hash_alg = (if v_1586 then 2-proj-nego(2-proj-CH(v_1585)) else caught-fail) in
                        {7198}let v_1587: TLS_version = (if v_1586 then 1-proj-nego(2-proj-CH(v_1585)) else caught-fail) in
                        {7199}let r_2: bytes32 = (if v_1586 then 1-proj-CH(v_1585) else caught-fail) in
                        {7200}let v_1588: echExt = (if v_1586 then catch-fail(ech_ext_14) else caught-fail) in
                        {7201}let v_1589: bool = (not-caught-fail(v_1588) && success?(1-proj-ECHClientHelloOuter(v_1588))) in
                        {7202}let payload_14: bitstring = (if v_1589 then 5-proj-ECHClientHelloOuter(v_1588) else caught-fail) in
                        {7203}let enc_3: element = (if v_1589 then 4-proj-ECHClientHelloOuter(v_1588) else caught-fail) in
                        {7204}let config_id_10: configId = (if v_1589 then 3-proj-ECHClientHelloOuter(v_1588) else caught-fail) in
                        {7205}let a_alg_ech: aead_alg = (if v_1589 then 2-proj-ECHClientHelloOuter(v_1588) else caught-fail) in
                        {7206}let h_alg_ech: hash_alg = (if v_1589 then 1-proj-ECHClientHelloOuter(v_1588) else caught-fail) in
                        {7207}let ech_ext': echExt = (if v_1589 then ECHClientHelloOuter(h_alg_ech,a_alg_ech,config_id_10,enc_3,zero) else caught-fail) in
                        {7208}let client_hello_AAD: msg = (if v_1586 then (if v_1589 then CH(r_2,nego(v_1587,h_alg_15,a_alg_13,kex_ext_7,sni_ext_3,ech_ext',extra_ext_5,psk_ext_79)) else fail-any) else fail-any) in
                        {7210}let v_1590: hpkeContext = context_1 in
                        {7211}let v_1591: bool = ((R =nf 1-proj-hpke_context(v_1590)) && success?(1-proj-hpke_context(v_1590))) in
                        {7212}let base_nonce_14: bitstring = (if v_1591 then 3-proj-hpke_context(v_1590) else caught-fail) in
                        {7213}let key_14: aead_key = (if v_1591 then 2-proj-hpke_context(v_1590) else caught-fail) in
                        {7209}let n_12: nat = 1 in
                        {7214}let i_client_hello_15: msg = (if v_1591 then aead_dec(ech_a_10,key_14,(base_nonce_14,n_12),client_hello_AAD,payload_13) else fail-any) in
                        (
                            {7215}let CH(cr'_22: bytes32,nego(=TLS13,c_h_alg': hash_alg,c_a_alg': aead_alg,kex_ext': keyShareExt,SNI(i_dom: domain),=ECHClientHelloInner,extra_ext': extraExt,psk_ext': preSharedKeyExt)) = i_client_hello_15 in
                            (
                                {7216}event ServerEchAcceptance(id_server_5,true);
                                {7111}let backend_a: aead_alg = id_aead(StrongAE,1) in
                                {7110}let backend_h: hash_alg = id_hash(StrongHash,1) in
                                {7218}let CH(cr_18: bytes32,nego(=TLS13,=backend_h,=backend_a,kex_ext_8: keyShareExt,SNI(i_dom_1: domain),=ECHClientHelloInner,extra_ext_6: extraExt,psk_ext_80: preSharedKeyExt)) = i_client_hello_15 in
                                (
                                    {7217}let ee_msg_41: msg = EE(empty_ech_ext,extra_ext_2) in
                                    {7112}let backend_g: group = id_g(StrongDH,1) in
                                    {7219}let (=true,client_kex_ext(DHE_group(=backend_g))) = (false,kex_ext_8) in
                                    (
                                        {7220}let hrr_mode_4: params = nego(TLS13,backend_h,backend_a,hrr_kex_ext(backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) in
                                        {7221}let hrr_3: msg = SH(B32(HRR24,HRR8),hrr_mode_4) in
                                        {7222}let cur_log_22: bitstring = ((zero,i_client_hello_15),hrr_3) in
                                        {7223}let transcript_hrr_ech_conf_3: bitstring = catch-fail(hash(backend_h,cur_log_22)) in
                                        {7224}let v_1592: bool = not-caught-fail(transcript_hrr_ech_conf_3) in
                                        {7226}let k_157: bitstring = (if v_1592 then catch-fail(b32_2_b(get_random(i_client_hello_15))) else caught-fail) in
                                        {7227}let v_1593: bool = not-caught-fail(k_157) in
                                        {7225}let s_160: bitstring = (if v_1592 then zero else caught-fail) in
                                        {7228}let k_158: bitstring = (if v_1592 then catch-fail((if v_1593 then hmac(backend_h,s_160,k_157) else fail-any)) else caught-fail) in
                                        {7229}let v_1594: bool = not-caught-fail(k_158) in
                                        {7230}let l_452: label = (if v_1594 then hrr_ech_accept_confirmation else caught-fail) in
                                        {7231}let x_510: bitstring = (if v_1594 then (l_452,cur_log_22) else caught-fail) in
                                        {7232}let hrr_accept_confirmation: bytes8 = catch-fail((if v_1592 then crop_into_bytes8((if v_1594 then hmac(backend_h,k_158,x_510) else fail-any)) else fail-any)) in
                                        {7233}let v_1595: bool = not-caught-fail(hrr_accept_confirmation) in
                                        {7234}let hrr_mode_5: params = (if v_1595 then nego(TLS13,backend_h,backend_a,hrr_kex_ext(backend_g),empty_sni_ext,ECHHelloRetryRequest(hrr_accept_confirmation),empty_extra_ext,empty_psk_ext) else caught-fail) in
                                        {7235}let hrr_msg: msg = (if v_1595 then SH(B32(HRR24,HRR8),hrr_mode_5) else fail-any) in
                                        {7236}out(io, hrr_msg);
                                        {7237}let ech_config(id_conf: configId,ech_g_11: group,pkR_12: element,s_dom_15: domain,ech_h_11: hash_alg,ech_a_11: aead_alg) = ech_conf_1 in
                                        {7238}in(io, o_client_hello_4: msg);
                                        {7239}let CH(cr'_23: bytes32,nego(=TLS13,h_alg': hash_alg,a_alg': aead_alg,kex_ext'_1: keyShareExt,SNI(=s_dom_15),ech_ext_15: echExt,extra_ext'_1: extraExt,psk_ext'_1: preSharedKeyExt)) = o_client_hello_4 in
                                        (
                                            {7240}if (ech_ext_15 = empty_ech_ext) then
                                                {7241}out(io, missing_extension)
                                            else
                                                {7242}let ECHClientHelloOuter(=ech_h_11,=ech_a_11,=id_conf,=zero,payload_15: bitstring) = ech_ext_15 in
                                                (
                                                    {7243}let v_1596: msg = o_client_hello_4 in
                                                    {7244}let v_1597: bool = (success?(1-proj-nego(2-proj-CH(v_1596))) && success?(1-proj-CH(v_1596))) in
                                                    {7245}let psk_ext_81: preSharedKeyExt = (if v_1597 then 8-proj-nego(2-proj-CH(v_1596)) else caught-fail) in
                                                    {7246}let extra_ext_7: extraExt = (if v_1597 then 7-proj-nego(2-proj-CH(v_1596)) else caught-fail) in
                                                    {7247}let ech_ext_16: echExt = (if v_1597 then 6-proj-nego(2-proj-CH(v_1596)) else caught-fail) in
                                                    {7248}let sni_ext_4: sniExt = (if v_1597 then 5-proj-nego(2-proj-CH(v_1596)) else caught-fail) in
                                                    {7249}let kex_ext_9: keyShareExt = (if v_1597 then 4-proj-nego(2-proj-CH(v_1596)) else caught-fail) in
                                                    {7250}let a_alg_14: aead_alg = (if v_1597 then 3-proj-nego(2-proj-CH(v_1596)) else caught-fail) in
                                                    {7251}let h_alg_16: hash_alg = (if v_1597 then 2-proj-nego(2-proj-CH(v_1596)) else caught-fail) in
                                                    {7252}let v_1598: TLS_version = (if v_1597 then 1-proj-nego(2-proj-CH(v_1596)) else caught-fail) in
                                                    {7253}let r_3: bytes32 = (if v_1597 then 1-proj-CH(v_1596) else caught-fail) in
                                                    {7254}let v_1599: echExt = (if v_1597 then catch-fail(ech_ext_16) else caught-fail) in
                                                    {7255}let v_1600: bool = (not-caught-fail(v_1599) && success?(1-proj-ECHClientHelloOuter(v_1599))) in
                                                    {7256}let payload_16: bitstring = (if v_1600 then 5-proj-ECHClientHelloOuter(v_1599) else caught-fail) in
                                                    {7257}let enc_4: element = (if v_1600 then 4-proj-ECHClientHelloOuter(v_1599) else caught-fail) in
                                                    {7258}let config_id_11: configId = (if v_1600 then 3-proj-ECHClientHelloOuter(v_1599) else caught-fail) in
                                                    {7259}let a_alg_ech_1: aead_alg = (if v_1600 then 2-proj-ECHClientHelloOuter(v_1599) else caught-fail) in
                                                    {7260}let h_alg_ech_1: hash_alg = (if v_1600 then 1-proj-ECHClientHelloOuter(v_1599) else caught-fail) in
                                                    {7261}let ech_ext'_1: echExt = (if v_1600 then ECHClientHelloOuter(h_alg_ech_1,a_alg_ech_1,config_id_11,enc_4,zero) else caught-fail) in
                                                    {7262}let client_hello_AAD_1: msg = (if v_1597 then (if v_1600 then CH(r_3,nego(v_1598,h_alg_16,a_alg_14,kex_ext_9,sni_ext_4,ech_ext'_1,extra_ext_7,psk_ext_81)) else fail-any) else fail-any) in
                                                    {7264}let v_1601: hpkeContext = context_1 in
                                                    {7265}let v_1602: bool = ((R =nf 1-proj-hpke_context(v_1601)) && success?(1-proj-hpke_context(v_1601))) in
                                                    {7266}let base_nonce_15: bitstring = (if v_1602 then 3-proj-hpke_context(v_1601) else caught-fail) in
                                                    {7267}let key_15: aead_key = (if v_1602 then 2-proj-hpke_context(v_1601) else caught-fail) in
                                                    {7263}let n_13: nat = 2 in
                                                    {7268}let i_client_hello'_9: msg = (if v_1602 then aead_dec(ech_a_11,key_15,(base_nonce_15,n_13),client_hello_AAD_1,payload_15) else fail-any) in
                                                    (
                                                        {7269}let CH(i_cr_7: bytes32,nego(=TLS13,i_h_alg: hash_alg,i_a_alg: aead_alg,i_kex_ext_4: keyShareExt,SNI(=i_dom_1),=ECHClientHelloInner,i_extra_ext: extraExt,i_psk_ext: preSharedKeyExt)) = i_client_hello'_9 in
                                                            {7270}out(ch_server_SH, (id_server_5,ArgsServerSH(backend_g,backend_h,backend_a,i_dom_1,req_cert_3,true,use_psk_1,false,ee_msg_41,i_client_hello'_9,((zero,i_client_hello_15),hrr_msg))))
                                                        else
                                                            {7271}out(io, illegal_parameter)
                                                    )
                                                    else
                                                        {7272}out(io, decrypt_error)
                                                )
                                                else
                                                    {7273}out(io, illegal_parameter)
                                        )
                                        else
                                            {7274}out(io, unexpected_message)
                                    )
                                    else
                                        {7275}let client_kex_ext(DHE_kex(=backend_g,gx_35: element)) = kex_ext_8 in
                                            {7276}out(ch_server_SH, (id_server_5,ArgsServerSH(backend_g,backend_h,backend_a,i_dom_1,req_cert_3,true,use_psk_1,true,ee_msg_41,i_client_hello_15,zero)))
                                        else
                                            {7277}out(io, handshake_failure)
                                )
                                else
                                    {7278}out(io, handshake_failure)
                            )
                            else
                                {7279}out(io, illegal_parameter)
                        )
                        else
                            {7280}event ServerEchAcceptance(id_server_5,false);
                            {7282}let CH(cr_19: bytes32,nego(=TLS13,=tls_h_1,=tls_a_1,kex_ext_10: keyShareExt,SNI(=s_dom_13),ech_ext_17: echExt,extra_ext_8: extraExt,psk_ext_82: preSharedKeyExt)) = o_client_hello_3 in
                            (
                                {7281}let ee_msg_42: msg = EE(retry_ech_ext,extra_ext_2) in
                                {7283}let (=true,client_kex_ext(DHE_group(=tls_g_1))) = (false,kex_ext_10) in
                                (
                                    {7284}let hrr_mode_6: params = nego(TLS13,tls_h_1,tls_a_1,hrr_kex_ext(tls_g_1),empty_sni_ext,empty_ech_ext,empty_extra_ext,empty_psk_ext) in
                                    {7285}let hello_retry_request_1: msg = SH(B32(HRR24,HRR8),hrr_mode_6) in
                                    {7286}out(io, hello_retry_request_1);
                                    {7288}in(io, client_hello'_22: msg);
                                    {7289}let CH(cr'_24: bytes32,offer'_1: params) = client_hello'_22 in
                                    (
                                        {7287}let cur_log_HRR_1: bitstring = ((zero,o_client_hello_3),hello_retry_request_1) in
                                        {7290}out(ch_server_SH, (id_server_5,ArgsServerSH(tls_g_1,tls_h_1,tls_a_1,s_dom_13,req_cert_3,false,use_psk_1,false,ee_msg_42,client_hello'_22,cur_log_HRR_1)))
                                    )
                                    else
                                        {7291}out(io, unexpected_message)
                                )
                                else
                                    {7292}let client_kex_ext(DHE_kex(=tls_g_1,gx_36: element)) = kex_ext_10 in
                                        {7293}out(ch_server_SH, (id_server_5,ArgsServerSH(tls_g_1,tls_h_1,tls_a_1,s_dom_13,req_cert_3,false,use_psk_1,true,ee_msg_42,o_client_hello_3,zero)))
                                    else
                                        {7294}out(io, handshake_failure)
                            )
                            else
                                {7295}out(io, handshake_failure)
                    )
                    else
                        {7296}event ServerEchAcceptance(id_server_5,false);
                        {7298}let CH(cr_20: bytes32,nego(=TLS13,=tls_h_1,=tls_a_1,kex_ext_11: keyShareExt,SNI(=s_dom_13),ech_ext_18: echExt,extra_ext_9: extraExt,psk_ext_83: preSharedKeyExt)) = o_client_hello_3 in
                        (
                            {7297}let ee_msg_43: msg = EE(retry_ech_ext,extra_ext_2) in
                            {7299}let (=true,client_kex_ext(DHE_group(=tls_g_1))) = (false,kex_ext_11) in
                            (
                                {7300}let hrr_mode_7: params = nego(TLS13,tls_h_1,tls_a_1,hrr_kex_ext(tls_g_1),empty_sni_ext,empty_ech_ext,empty_extra_ext,empty_psk_ext) in
                                {7301}let hello_retry_request_2: msg = SH(B32(HRR24,HRR8),hrr_mode_7) in
                                {7302}out(io, hello_retry_request_2);
                                {7304}in(io, client_hello'_23: msg);
                                {7305}let CH(cr'_25: bytes32,offer'_2: params) = client_hello'_23 in
                                (
                                    {7303}let cur_log_HRR_2: bitstring = ((zero,o_client_hello_3),hello_retry_request_2) in
                                    {7306}out(ch_server_SH, (id_server_5,ArgsServerSH(tls_g_1,tls_h_1,tls_a_1,s_dom_13,req_cert_3,false,use_psk_1,false,ee_msg_43,client_hello'_23,cur_log_HRR_2)))
                                )
                                else
                                    {7307}out(io, unexpected_message)
                            )
                            else
                                {7308}let client_kex_ext(DHE_kex(=tls_g_1,gx_37: element)) = kex_ext_11 in
                                    {7309}out(ch_server_SH, (id_server_5,ArgsServerSH(tls_g_1,tls_h_1,tls_a_1,s_dom_13,req_cert_3,false,use_psk_1,true,ee_msg_43,o_client_hello_3,zero)))
                                else
                                    {7310}out(io, handshake_failure)
                        )
                        else
                            {7311}out(io, handshake_failure)
                )
                else
                    {7312}out(io, illegal_parameter)
        )
        else
            {7314}out(io, handshake_failure)
    )
    else
        {7315}out(io, unexpected_message)
) | (
    {7316}!
    {7317}in(io, ClientA: domain);
    {7318}in(io, ClientB: domain);
    {7320}in(io, frontend_dom_1: domain);
    {7321}event Same(frontend_dom_1);
    {7322}in(io, backend_dom_1: domain);
    {7323}event Same(backend_dom_1);
    {7324}new s_161: seed;
    {11841}get ech_configurations(ech_config(id_83: configId,g_44: group,pkR_13: element,=frontend_dom_1,h_alg_17: hash_alg,a_alg_15: aead_alg),skR_3: bitstring) in
    {7326}let ech_conf_2: echConfig = ech_config(id_83,g_44,pkR_13,frontend_dom_1,h_alg_17,a_alg_15) in
    {7325}let id_client_5: idProc = idClientDiff(s_161) in
    {7327}event ConfigOffered(id_client_5,ech_conf_2);
    {7337}in(io, @8_send_kex: bool);
    {7338}new @8_st[]: stamp;
    {7339}event PreciseInput(@8_st,@8_send_kex);
    {7340}let () = () in
    {7341}event Same(@8_send_kex);
    {7344}let ech_config(config_id_12: configId,ech_g_12: group,pkR_14: element,o_dom_8: domain,ech_h_12: hash_alg,ech_a_12: aead_alg) = ech_conf_2 in
    {7345}event ClientOffersEchConfig(id_client_5,ech_conf_2);
    {7347}new s_162[]: seed;
    {7348}let v_1603: bitstring = (dh_xy(s_162,pkR_14),dh_encap_fun(ech_g_12,pkR_14,dh_xy(s_162,pkR_14))) in
    {7349}let v_1604: bool = success?(1-proj-2-tuple(v_1603)) in
    {7350}let enc_5: element = (if v_1604 then 2-proj-2-tuple(v_1603) else caught-fail) in
    {7351}let shared_secret_2: element = (if v_1604 then 1-proj-2-tuple(v_1603) else caught-fail) in
    {7354}let label_9: label = (if v_1604 then hpke_info_hash else caught-fail) in
    {7346}let info_2: bitstring = (tls_ech_str,ech_conf_2) in
    {7355}let k_159: bitstring = (if v_1604 then (label_9,info_2) else caught-fail) in
    {7353}let salt_2: bitstring = (if v_1604 then zero else caught-fail) in
    {7356}let info_hash_2: bitstring = (if v_1604 then catch-fail(hmac(ech_h_12,salt_2,k_159)) else caught-fail) in
    {7357}let v_1605: bool = not-caught-fail(info_hash_2) in
    {7359}let ikm_2: bitstring = (if v_1605 then zero else caught-fail) in
    {7358}let label_10: label = (if v_1605 then hpke_secret else caught-fail) in
    {7360}let k_160: bitstring = (if v_1605 then (label_10,ikm_2) else caught-fail) in
    {7361}let xsecret_2: bitstring = (if v_1605 then catch-fail(hmac(ech_h_12,shared_secret_2,k_160)) else caught-fail) in
    {7362}let v_1606: bool = not-caught-fail(xsecret_2) in
    {7363}let label_11: label = (if v_1606 then hpke_key else caught-fail) in
    {7364}let x_511: bitstring = (if v_1606 then (label_11,info_hash_2) else caught-fail) in
    {7365}let key_16: aead_key = (if v_1606 then catch-fail(hmac(ech_h_12,xsecret_2,x_511)) else caught-fail) in
    {7366}let v_1607: bool = not-caught-fail(key_16) in
    {7367}let label_12: label = (if v_1607 then hpke_base_nonce else caught-fail) in
    {7368}let x_512: bitstring = (if v_1607 then (label_12,info_hash_2) else caught-fail) in
    {7369}let base_nonce_16: bitstring = (if v_1607 then catch-fail(hmac(ech_h_12,xsecret_2,x_512)) else caught-fail) in
    {7370}let v_1608: bool = not-caught-fail(base_nonce_16) in
    {7352}let r_4: hpkeRole = (if v_1604 then S else caught-fail) in
    {7371}let (enc_6: element,context_2: hpkeContext) = (if v_1604 then (enc_5,(if v_1605 then (if v_1606 then (if v_1607 then (if v_1608 then hpke_context(r_4,key_16,base_nonce_16) else fail-any) else fail-any) else fail-any) else fail-any)) else fail-any) in
    {7372}let ech_config(config_id_13: configId,ech_g_13: group,pkR_15: element,o_dom_9: domain,ech_h_13: hash_alg,ech_a_13: aead_alg) = ech_conf_2 in
    {7373}new s_163[]: seed;
    {7334}let @8_backend_g: group = id_g(StrongDH,1) in
    {7374}let gx_38: element = dh_pub(@8_backend_g,dh_k(s_163)) in
    {7375}let v_1609: bitstring = (dh_k(s_163),gx_38) in
    {7376}let v_1610: bool = success?(1-proj-2-tuple(v_1609)) in
    {7377}let gx_39: element = (if v_1610 then 2-proj-2-tuple(v_1609) else caught-fail) in
    {7378}let x_513: bitstring = (if v_1610 then 1-proj-2-tuple(v_1609) else caught-fail) in
    {7343}let send_kex_5: bool = (not(false) || @8_send_kex) in
    {7379}let kex_15: kex_alg = (if v_1610 then (if send_kex_5 then DHE_kex(@8_backend_g,gx_39) else DHE_group(@8_backend_g)) else caught-fail) in
    {7380}let (i_kex_ext_5: keyShareExt,i_kex_data_7: bitstring) = (if v_1610 then (client_kex_ext(kex_15),(x_513,@8_backend_g)) else fail-any) in
    {7381}new s_164[]: seed;
    {7331}let @8_tls_g: group = id_g(StrongDH,1) in
    {7382}let gx_40: element = dh_pub(@8_tls_g,dh_k(s_164)) in
    {7383}let v_1611: bitstring = (dh_k(s_164),gx_40) in
    {7384}let v_1612: bool = success?(1-proj-2-tuple(v_1611)) in
    {7385}let gx_41: element = (if v_1612 then 2-proj-2-tuple(v_1611) else caught-fail) in
    {7386}let x_514: bitstring = (if v_1612 then 1-proj-2-tuple(v_1611) else caught-fail) in
    {7387}let kex_16: kex_alg = (if v_1612 then (if send_kex_5 then DHE_kex(@8_tls_g,gx_41) else DHE_group(@8_tls_g)) else caught-fail) in
    {7388}let (o_kex_ext_7: keyShareExt,o_kex_data_7: bitstring) = (if v_1612 then (client_kex_ext(kex_16),(x_514,@8_tls_g)) else fail-any) in
    {7389}new rand24_16[]: bytes24;
    {7390}new rand8_16[]: bytes8;
    {7392}new rand24_17[]: bytes24;
    {7393}new rand8_17[]: bytes8;
    {7396}new payload_17[]: bitstring;
    {7397}new configid_1[]: configId;
    {7398}new s_165[]: seed;
    {7342}let @8_use_grease: bool = false in
    {7395}let v_1613: bool = @8_use_grease in
    {7399}let gx_42: element = (if v_1613 then dh_pub(ech_g_13,dh_k(s_165)) else caught-fail) in
    {7400}let v_1614: bitstring = (if v_1613 then catch-fail((dh_k(s_165),gx_42)) else caught-fail) in
    {7401}let v_1615: bool = (not-caught-fail(v_1614) && success?(1-proj-2-tuple(v_1614))) in
    {7402}let gx_grease_1: element = (if v_1615 then 2-proj-2-tuple(v_1614) else caught-fail) in
    {7403}let x_grease_1: bitstring = (if v_1615 then 1-proj-2-tuple(v_1614) else caught-fail) in
    {7404}new s_166[]: seed;
    {7405}let v_1616: bitstring = (if v_1615 then catch-fail((dh_xy(s_166,gx_grease_1),dh_encap_fun(ech_g_13,gx_grease_1,dh_xy(s_166,gx_grease_1)))) else caught-fail) in
    {7406}let v_1617: bool = (not-caught-fail(v_1616) && success?(1-proj-2-tuple(v_1616))) in
    {7407}let enc_grease_1: element = (if v_1617 then 2-proj-2-tuple(v_1616) else caught-fail) in
    {7408}let secret_grease_1: element = (if v_1617 then 1-proj-2-tuple(v_1616) else caught-fail) in
    {7409}let ech_inner_or_grease_1: echExt = (if v_1613 then (if v_1615 then (if v_1617 then ECHClientHelloOuter(ech_h_13,ech_a_13,configid_1,enc_grease_1,payload_17) else fail-any) else fail-any) else ECHClientHelloInner) in
    {7394}let o_cr_10: bytes32 = B32(rand24_17,rand8_17) in
    {7391}let i_cr_8: bytes32 = B32(rand24_16,rand8_16) in
    {7333}let @8_backend_a: aead_alg = id_aead(StrongAE,1) in
    {7332}let @8_backend_h: hash_alg = id_hash(StrongHash,1) in
    {7330}let @8_tls_a: aead_alg = id_aead(StrongAE,1) in
    {7329}let @8_tls_h: hash_alg = id_hash(StrongHash,1) in
    {7328}let @8_i_extra_ext: extraExt = empty_extra_ext in
    {7410}let (dom_psk_1: domain,cr_psk_1: bytes32,kex_ext_psk_1: keyShareExt,extra_psk_1: extraExt,h_psk_1: hash_alg,a_psk_1: aead_alg) = (if @8_use_grease then (o_dom_9,o_cr_10,o_kex_ext_7,empty_extra_ext,@8_tls_h,@8_tls_a) else (backend_dom_1,i_cr_8,i_kex_ext_5,@8_i_extra_ext,@8_backend_h,@8_backend_a)) in
    {7336}let @8_comp_psk: bool = false in
    {7335}let @8_use_psk: bool = false in
    {7319}let c_dom_7: domain = choice[ClientA,ClientB] in
    {7413}if @8_use_psk then
    (
        {7412}let cur_log_23: bitstring = zero in
        {7411}let old_psk_data_2: bitstring = zero in
        {7414}let (psk_183: preSharedKey,id_84: identityPsk,old_es_11: bitstring,is_safe_72: bool) = old_psk_data_2 in
        (
            {7418}let k_161: bitstring = catch-fail(psk2b(psk_183)) in
            {7419}let v_1618: bool = not-caught-fail(k_161) in
            {7417}let s_167: bitstring = zero in
            {7420}let early_secret_122: bitstring = catch-fail((if v_1618 then hmac(h_psk_1,s_167,k_161) else fail-any)) in
            {7421}let v_1619: bool = not-caught-fail(early_secret_122) in
            {7423}let m_161: bitstring = (if v_1619 then zero else caught-fail) in
            {7424}let h_436: bitstring = (if v_1619 then catch-fail(hash(h_psk_1,m_161)) else caught-fail) in
            {7425}let v_1620: bool = not-caught-fail(h_436) in
            {7422}let l_453: label = (if v_1619 then tls13_ext_res_binder else caught-fail) in
            {7426}let x_515: bitstring = (if v_1620 then (l_453,h_436) else caught-fail) in
            {7427}let binder_key_81: bitstring = (if v_1619 then catch-fail((if v_1620 then hmac(h_psk_1,early_secret_122,x_515) else fail-any)) else caught-fail) in
            {7428}let v_1621: bool = not-caught-fail(binder_key_81) in
            {7429}let v_1622: bitstring = catch-fail((if v_1619 then (if v_1621 then (early_secret_122,binder_key_81) else fail-any) else fail-any)) in
            {7430}let v_1623: bool = (not-caught-fail(v_1622) && success?(1-proj-2-tuple(v_1622))) in
            {7431}let kb_81: mac_key = (if v_1623 then 2-proj-2-tuple(v_1622) else caught-fail) in
            {7432}let es_122: bitstring = (if v_1623 then 1-proj-2-tuple(v_1622) else caught-fail) in
            {7415}let offer_36: params = nego(TLS13,h_psk_1,a_psk_1,kex_ext_psk_1,SNI(dom_psk_1),ech_inner_or_grease_1,extra_psk_1,trunc_client_psk_ext(id_84)) in
            {7416}let cur_log'_24: bitstring = (cur_log_23,CH(cr_psk_1,offer_36)) in
            {7433}let binders_23: bitstring = (if v_1623 then catch-fail(hmac(h_psk_1,kb_81,cur_log'_24)) else caught-fail) in
            {7434}let v_1624: bool = not-caught-fail(binders_23) in
            {7435}let v_1625: bitstring = catch-fail((if v_1623 then (if v_1624 then (client_psk_ext(id_84,binders_23),(psk_183,id_84,es_122,is_safe_72)) else fail-any) else fail-any)) in
            {7436}let v_1626: bool = (not-caught-fail(v_1625) && success?(1-proj-2-tuple(v_1625))) in
            {7437}let psk_data_42: bitstring = (if v_1626 then 2-proj-2-tuple(v_1625) else caught-fail) in
            {7438}let psk_ext_84: preSharedKeyExt = (if v_1626 then 1-proj-2-tuple(v_1625) else caught-fail) in
            {7443}new fake_id_15[]: identityPsk;
            {7444}new fake_binder_15[]: bitstring;
            {7441}let v_1627: bool = (if v_1626 then catch-fail(@8_use_grease) else caught-fail) in
            {7450}let v_1628: hpkeContext = (if is-false(v_1627) then catch-fail(context_2) else caught-fail) in
            {7451}let v_1629: bool = (not-caught-fail(v_1628) && ((S =nf 1-proj-hpke_context(v_1628)) && success?(1-proj-hpke_context(v_1628)))) in
            {7452}let base_nonce_17: bitstring = (if v_1629 then 3-proj-hpke_context(v_1628) else caught-fail) in
            {7453}let key_17: aead_key = (if v_1629 then 2-proj-hpke_context(v_1628) else caught-fail) in
            {7449}let n_14: nat = (if is-false(v_1627) then 1 else caught-fail) in
            {7446}let o_ech_ext_ADD_12: echExt = (if is-false(v_1627) then ECHClientHelloOuter(ech_h_13,ech_a_13,config_id_13,enc_6,zero) else caught-fail) in
            {7445}let o_psk_ext_15: preSharedKeyExt = (if is-false(v_1627) then (if @8_use_psk then client_psk_ext(fake_id_15,fake_binder_15) else empty_psk_ext) else caught-fail) in
            {7447}let o_offer_ADD_12: params = (if is-false(v_1627) then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),o_ech_ext_ADD_12,empty_extra_ext,o_psk_ext_15) else caught-fail) in
            {7448}let o_client_hello_ADD_12: msg = (if is-false(v_1627) then CH(o_cr_10,o_offer_ADD_12) else caught-fail) in
            {7439}let i_offer_12: params = (if v_1626 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_5,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_84) else caught-fail) in
            {7440}let i_client_hello_16: msg = (if v_1626 then CH(i_cr_8,i_offer_12) else caught-fail) in
            {7454}let payload_18: bitstring = (if is-false(v_1627) then catch-fail((if v_1629 then aead_enc(ech_a_13,key_17,(base_nonce_17,n_14),o_client_hello_ADD_12,i_client_hello_16) else fail-any)) else caught-fail) in
            {7455}let v_1630: bool = not-caught-fail(payload_18) in
            {7456}let o_ech_ext_15: echExt = (if v_1630 then ECHClientHelloOuter(ech_h_13,ech_a_13,config_id_13,enc_6,payload_18) else caught-fail) in
            {7457}let o_offer_28: params = (if v_1630 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),o_ech_ext_15,empty_extra_ext,o_psk_ext_15) else caught-fail) in
            {7442}let o_offer_27: params = (if v_1627 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),ech_inner_or_grease_1,empty_extra_ext,psk_ext_84) else caught-fail) in
            {7458}let (o_client_hello_5: msg,i_client_hello_17: msg,o_cr_11: bytes32,i_cr_9: bytes32,o_kex_data_8: bitstring,i_kex_data_8: bitstring,o_psk_ext_16: preSharedKeyExt,psk_data_43: bitstring,o_ech_ext_16: echExt) = (if v_1626 then (if undo-catch-fail(v_1627) then (CH(o_cr_10,o_offer_27),CH(o_cr_10,o_offer_27),o_cr_10,o_cr_10,o_kex_data_7,o_kex_data_7,psk_ext_84,psk_data_42,ech_inner_or_grease_1) else (if v_1630 then (CH(o_cr_10,o_offer_28),i_client_hello_16,o_cr_10,i_cr_8,o_kex_data_7,i_kex_data_7,o_psk_ext_15,psk_data_42,o_ech_ext_15) else fail-any)) else fail-any) in
            {7459}out(io, o_client_hello_5);
            {7460}let (psk_184: preSharedKey,id_85: identityPsk,es_123: bitstring,safe_3: bool) = psk_data_43 in
            (
                {7461}if (false && (not(@8_use_grease) && (psk_184 ≠ NoPsk))) then
                {7462}let client_hello_10: bitstring = (zero,i_client_hello_17) in
                {7464}let h_437: bitstring = catch-fail(hash(@8_backend_h,client_hello_10)) in
                {7465}let v_1631: bool = not-caught-fail(h_437) in
                {7463}let l_454: label = tls13_client_early_traffic_secret in
                {7466}let x_516: bitstring = (if v_1631 then (l_454,h_437) else caught-fail) in
                {7467}let atsc0_7: bitstring = catch-fail((if v_1631 then hmac(@8_backend_h,es_123,x_516) else fail-any)) in
                {7468}let v_1632: bool = not-caught-fail(atsc0_7) in
                {7470}let h_438: bitstring = (if v_1632 then zero else caught-fail) in
                {7469}let l_455: label = (if v_1632 then tls13_key else caught-fail) in
                {7471}let x_517: bitstring = (if v_1632 then (l_455,h_438) else caught-fail) in
                {7472}let kc0_7: bitstring = (if v_1632 then catch-fail(hmac(@8_backend_h,atsc0_7,x_517)) else caught-fail) in
                {7473}let v_1633: bool = not-caught-fail(kc0_7) in
                {7475}let h_439: bitstring = (if v_1633 then catch-fail(hash(@8_backend_h,client_hello_10)) else caught-fail) in
                {7476}let v_1634: bool = not-caught-fail(h_439) in
                {7474}let l_456: label = (if v_1633 then tls13_early_exporter_master_secret else caught-fail) in
                {7477}let x_518: bitstring = (if v_1634 then (l_456,h_439) else caught-fail) in
                {7478}let ems0_14: bitstring = (if v_1633 then catch-fail((if v_1634 then hmac(@8_backend_h,es_123,x_518) else fail-any)) else caught-fail) in
                {7479}let v_1635: bool = not-caught-fail(ems0_14) in
                {7480}let (wkc0_7: aead_key,ems0_15: bitstring) = (if v_1632 then (if v_1633 then (if v_1635 then (kc0_7,ems0_14) else fail-any) else fail-any) else fail-any) in
                {7481}!
                {7482}in(io, (i_7: nat,ad_7: bitstring));
                {7483}if is_nat(i_7) then
                {7484}new msg_ed_6[]: bitstring;
                {7486}new st_16: stamp;
                {7487}event ClientSequenceClient0RTTDataWriteKey(id_client_5,st_16,i_7);
                {7488}event ClientSends0(id_client_5,i_cr_9,psk_184,i_7,ad_7,msg_ed_6);
                {7485}let enc_ed_6: bitstring = aead_enc(@8_backend_a,wkc0_7,i_7,ad_7,msg_ed_6) in
                {7489}out(io, enc_ed_6)
            ) | (
                {7490}in(io, server_hello_7: msg);
                {7491}let SH(B32(sr24_5: bytes24,sr8_16: bytes8),mode_45: params) = server_hello_7 in
                (
                    {7492}if (false && (B32(sr24_5,sr8_16) = B32(HRR24,HRR8))) then
                    (
                        {7493}if (send_kex_5 ≠ true) then
                        {7494}let nego(=TLS13,h_alg_18: hash_alg,a_alg_16: aead_alg,hrr_kex_ext(g_45: group),=empty_sni_ext,ech_ext_19: echExt,=empty_extra_ext,=empty_psk_ext) = mode_45 in
                        {7495}let v_1636: bool = (ech_ext_19 = empty_ech_ext) in
                        {7496}let hrr_mode_8: params = (if not(v_1636) then nego(TLS13,@8_backend_h,@8_backend_a,hrr_kex_ext(@8_backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) else caught-fail) in
                        {7497}let hrr_4: msg = (if not(v_1636) then SH(B32(HRR24,HRR8),hrr_mode_8) else caught-fail) in
                        {7498}let cur_log_24: bitstring = (if not(v_1636) then ((zero,i_client_hello_17),hrr_4) else caught-fail) in
                        {7499}let transcript_hrr_ech_conf_4: bitstring = (if not(v_1636) then catch-fail(hash(@8_backend_h,cur_log_24)) else caught-fail) in
                        {7500}let v_1637: bool = not-caught-fail(transcript_hrr_ech_conf_4) in
                        {7502}let k_162: bitstring = (if v_1637 then catch-fail(b32_2_b(get_random(i_client_hello_17))) else caught-fail) in
                        {7503}let v_1638: bool = not-caught-fail(k_162) in
                        {7501}let s_168: bitstring = (if v_1637 then zero else caught-fail) in
                        {7504}let k_163: bitstring = (if v_1637 then catch-fail((if v_1638 then hmac(@8_backend_h,s_168,k_162) else fail-any)) else caught-fail) in
                        {7505}let v_1639: bool = not-caught-fail(k_163) in
                        {7506}let l_457: label = (if v_1639 then hrr_ech_accept_confirmation else caught-fail) in
                        {7507}let x_519: bitstring = (if v_1639 then (l_457,cur_log_24) else caught-fail) in
                        {7508}let is_ech_accepted_3: bool = (if v_1636 then false else (if (ech_ext_19 = ECHHelloRetryRequest((if v_1637 then crop_into_bytes8((if v_1639 then hmac(@8_backend_h,k_163,x_519) else fail-any)) else fail-any))) then true else false)) in
                        {7509}event ClientEchAcceptance(id_client_5,is_ech_accepted_3);
                        {7510}if is_ech_accepted_3 then
                        (
                            {7512}let ech_config(config_id_14: configId,ech_g_14: group,pkR_16: element,o_dom_10: domain,ech_h_14: hash_alg,ech_a_14: aead_alg) = ech_conf_2 in
                            {7514}new s_169[]: seed;
                            {7515}let gx_43: element = dh_pub(@8_backend_g,dh_k(s_169)) in
                            {7516}let v_1640: bitstring = (dh_k(s_169),gx_43) in
                            {7517}let v_1641: bool = success?(1-proj-2-tuple(v_1640)) in
                            {7518}let gx_44: element = (if v_1641 then 2-proj-2-tuple(v_1640) else caught-fail) in
                            {7519}let x_520: bitstring = (if v_1641 then 1-proj-2-tuple(v_1640) else caught-fail) in
                            {7513}let send_key_share_9: bool = true in
                            {7520}let kex_17: kex_alg = (if v_1641 then (if send_key_share_9 then DHE_kex(@8_backend_g,gx_44) else DHE_group(@8_backend_g)) else caught-fail) in
                            {7521}let (i_kex_ext_6: keyShareExt,i_kex_data_9: bitstring) = (if v_1641 then (client_kex_ext(kex_17),(x_520,@8_backend_g)) else fail-any) in
                            {7523}new s_170[]: seed;
                            {7524}let gx_45: element = dh_pub(@8_tls_g,dh_k(s_170)) in
                            {7525}let v_1642: bitstring = (dh_k(s_170),gx_45) in
                            {7526}let v_1643: bool = success?(1-proj-2-tuple(v_1642)) in
                            {7527}let gx_46: element = (if v_1643 then 2-proj-2-tuple(v_1642) else caught-fail) in
                            {7528}let x_521: bitstring = (if v_1643 then 1-proj-2-tuple(v_1642) else caught-fail) in
                            {7522}let send_key_share_10: bool = true in
                            {7529}let kex_18: kex_alg = (if v_1643 then (if send_key_share_10 then DHE_kex(@8_tls_g,gx_46) else DHE_group(@8_tls_g)) else caught-fail) in
                            {7530}let (o_kex_ext_8: keyShareExt,o_kex_data_9: bitstring) = (if v_1643 then (client_kex_ext(kex_18),(x_521,@8_tls_g)) else fail-any) in
                            {7531}new rand24_18[]: bytes24;
                            {7532}new rand8_18[]: bytes8;
                            {7534}new rand24_19[]: bytes24;
                            {7535}new rand8_19[]: bytes8;
                            {7536}let o_cr_12: bytes32 = B32(rand24_19,rand8_19) in
                            {7533}let i_cr_10: bytes32 = B32(rand24_18,rand8_18) in
                            {7511}let cur_log_IN1_HRR_3: bitstring = ((zero,i_client_hello_17),server_hello_7) in
                            {7538}if @8_use_psk then
                            (
                                {7537}let ech_ext_20: echExt = ECHClientHelloInner in
                                {7539}let (psk_185: preSharedKey,id_86: identityPsk,old_es_12: bitstring,is_safe_73: bool) = psk_data_43 in
                                (
                                    {7543}let k_164: bitstring = catch-fail(psk2b(psk_185)) in
                                    {7544}let v_1644: bool = not-caught-fail(k_164) in
                                    {7542}let s_171: bitstring = zero in
                                    {7545}let early_secret_123: bitstring = catch-fail((if v_1644 then hmac(@8_backend_h,s_171,k_164) else fail-any)) in
                                    {7546}let v_1645: bool = not-caught-fail(early_secret_123) in
                                    {7548}let m_162: bitstring = (if v_1645 then zero else caught-fail) in
                                    {7549}let h_440: bitstring = (if v_1645 then catch-fail(hash(@8_backend_h,m_162)) else caught-fail) in
                                    {7550}let v_1646: bool = not-caught-fail(h_440) in
                                    {7547}let l_458: label = (if v_1645 then tls13_ext_res_binder else caught-fail) in
                                    {7551}let x_522: bitstring = (if v_1646 then (l_458,h_440) else caught-fail) in
                                    {7552}let binder_key_82: bitstring = (if v_1645 then catch-fail((if v_1646 then hmac(@8_backend_h,early_secret_123,x_522) else fail-any)) else caught-fail) in
                                    {7553}let v_1647: bool = not-caught-fail(binder_key_82) in
                                    {7554}let v_1648: bitstring = catch-fail((if v_1645 then (if v_1647 then (early_secret_123,binder_key_82) else fail-any) else fail-any)) in
                                    {7555}let v_1649: bool = (not-caught-fail(v_1648) && success?(1-proj-2-tuple(v_1648))) in
                                    {7556}let kb_82: mac_key = (if v_1649 then 2-proj-2-tuple(v_1648) else caught-fail) in
                                    {7557}let es_124: bitstring = (if v_1649 then 1-proj-2-tuple(v_1648) else caught-fail) in
                                    {7540}let offer_37: params = nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_6,SNI(backend_dom_1),ech_ext_20,@8_i_extra_ext,trunc_client_psk_ext(id_86)) in
                                    {7541}let cur_log'_25: bitstring = (cur_log_IN1_HRR_3,CH(i_cr_10,offer_37)) in
                                    {7558}let binders_24: bitstring = (if v_1649 then catch-fail(hmac(@8_backend_h,kb_82,cur_log'_25)) else caught-fail) in
                                    {7559}let v_1650: bool = not-caught-fail(binders_24) in
                                    {7560}let v_1651: bitstring = catch-fail((if v_1649 then (if v_1650 then (client_psk_ext(id_86,binders_24),(psk_185,id_86,es_124,is_safe_73)) else fail-any) else fail-any)) in
                                    {7561}let v_1652: bool = (not-caught-fail(v_1651) && success?(1-proj-2-tuple(v_1651))) in
                                    {7562}let psk_data_44: bitstring = (if v_1652 then 2-proj-2-tuple(v_1651) else caught-fail) in
                                    {7563}let psk_ext_85: preSharedKeyExt = (if v_1652 then 1-proj-2-tuple(v_1651) else caught-fail) in
                                    {7566}new fake_id_16[]: identityPsk;
                                    {7567}new fake_binder_16[]: bitstring;
                                    {7573}let v_1653: hpkeContext = (if v_1652 then catch-fail(context_2) else caught-fail) in
                                    {7574}let v_1654: bool = (not-caught-fail(v_1653) && ((S =nf 1-proj-hpke_context(v_1653)) && success?(1-proj-hpke_context(v_1653)))) in
                                    {7575}let base_nonce_18: bitstring = (if v_1654 then 3-proj-hpke_context(v_1653) else caught-fail) in
                                    {7576}let key_18: aead_key = (if v_1654 then 2-proj-hpke_context(v_1653) else caught-fail) in
                                    {7572}let n_15: nat = (if v_1652 then 2 else caught-fail) in
                                    {7569}let o_ech_ext_ADD_13: echExt = (if v_1652 then ECHClientHelloOuter(ech_h_14,ech_a_14,config_id_14,zero,zero) else caught-fail) in
                                    {7568}let o_psk_ext_17: preSharedKeyExt = (if v_1652 then (if @8_use_psk then client_psk_ext(fake_id_16,fake_binder_16) else empty_psk_ext) else caught-fail) in
                                    {7570}let o_offer_ADD_13: params = (if v_1652 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_8,SNI(o_dom_10),o_ech_ext_ADD_13,empty_extra_ext,o_psk_ext_17) else caught-fail) in
                                    {7571}let o_client_hello_ADD_13: msg = (if v_1652 then CH(o_cr_12,o_offer_ADD_13) else caught-fail) in
                                    {7564}let i_offer_13: params = (if v_1652 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_6,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_85) else caught-fail) in
                                    {7565}let i_client_hello_18: msg = (if v_1652 then CH(i_cr_10,i_offer_13) else caught-fail) in
                                    {7577}let payload_19: bitstring = (if v_1652 then catch-fail((if v_1654 then aead_enc(ech_a_14,key_18,(base_nonce_18,n_15),o_client_hello_ADD_13,i_client_hello_18) else fail-any)) else caught-fail) in
                                    {7578}let v_1655: bool = not-caught-fail(payload_19) in
                                    {7579}let o_ech_ext_17: echExt = (if v_1655 then ECHClientHelloOuter(ech_h_14,ech_a_14,config_id_14,zero,payload_19) else caught-fail) in
                                    {7580}let o_offer_29: params = (if v_1655 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_8,SNI(o_dom_10),o_ech_ext_17,empty_extra_ext,o_psk_ext_17) else caught-fail) in
                                    {7581}let (o_client_hello'_9: msg,i_client_hello'_10: msg,i_cr'_9: bytes32,i_kex_data'_9: bitstring,psk_data'_33: bitstring) = (if v_1652 then (if v_1655 then (CH(o_cr_12,o_offer_29),i_client_hello_18,i_cr_10,i_kex_data_9,psk_data_44) else fail-any) else fail-any) in
                                    {7582}out(io, o_client_hello'_9);
                                    {7583}in(io, server_hello'_30: msg);
                                    {7584}let SH(B32(sr24'_9: bytes24,sr8'_9: bytes8),params'_9: params) = server_hello'_30 in
                                    {7586}let sh_modified_13: msg = SH(B32(sr24'_9,zero8),params'_9) in
                                    {7585}let cur_log_IN1_HRR_IN2_9: bitstring = (cur_log_IN1_HRR_3,i_client_hello'_10) in
                                    {7587}let cur_log_sh_13: bitstring = (cur_log_IN1_HRR_IN2_9,sh_modified_13) in
                                    {7588}let transcript_ech_conf_13: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_13)) in
                                    {7589}let v_1656: bool = not-caught-fail(transcript_ech_conf_13) in
                                    {7591}let k_165: bitstring = (if v_1656 then catch-fail(b32_2_b(get_random(i_client_hello'_10))) else caught-fail) in
                                    {7592}let v_1657: bool = not-caught-fail(k_165) in
                                    {7590}let s_172: bitstring = (if v_1656 then zero else caught-fail) in
                                    {7593}let k_166: bitstring = (if v_1656 then catch-fail((if v_1657 then hmac(@8_backend_h,s_172,k_165) else fail-any)) else caught-fail) in
                                    {7594}let v_1658: bool = not-caught-fail(k_166) in
                                    {7595}let l_459: label = (if v_1658 then ech_accept_confirmation else caught-fail) in
                                    {7596}let x_523: bitstring = (if v_1658 then (l_459,cur_log_sh_13) else caught-fail) in
                                    {7597}let sr8_17: bytes8 = (if v_1656 then catch-fail(crop_into_bytes8((if v_1658 then hmac(@8_backend_h,k_166,x_523) else fail-any))) else caught-fail) in
                                    {7598}let v_1659: bool = not-caught-fail(sr8_17) in
                                    {7599}if (B32(sr24'_9,sr8'_9) = (if v_1656 then (if v_1659 then B32(sr24'_9,sr8_17) else fail-any) else fail-any)) then
                                    {7600}let (x_524: bitstring,g_46: group) = i_kex_data'_9 in
                                    {7601}let (psk_offer_39: preSharedKey,id_offer_39: identityPsk,es_offer_39: bitstring,is_safe_offer_39: bool) = psk_data'_33 in
                                    {7602}event Client_PSKOffer(id_client_5,psk_offer_39,id_offer_39,is_safe_offer_39);
                                    {7603}event Client_Rand_client(id_client_5,i_cr'_9);
                                    {7604}event Client_DH_client(id_client_5,dh_pub(g_46,x_524));
                                    {7605}event Client_server_domain(id_client_5,backend_dom_1);
                                    {7606}let SH(sr_50: bytes32,mode_46: params) = server_hello'_30 in
                                    {7607}event Client_Rand_server(id_client_5,sr_50);
                                    {7608}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_46,gy_40: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_86: preSharedKeyExt) = mode_46 in
                                    (
                                        {7610}event Client_DH_server(id_client_5,gy_40);
                                        {7611}let v_1660: bool = (psk_ext_86 = empty_psk_ext) in
                                        {7612}let psk_186: preSharedKey = (if v_1660 then NoPsk else caught-fail) in
                                        {7614}let k_167: bitstring = (if v_1660 then catch-fail(psk2b(psk_186)) else caught-fail) in
                                        {7615}let v_1661: bool = not-caught-fail(k_167) in
                                        {7613}let s_173: bitstring = (if v_1660 then zero else caught-fail) in
                                        {7616}let early_secret_124: bitstring = (if v_1660 then catch-fail((if v_1661 then hmac(@8_backend_h,s_173,k_167) else fail-any)) else caught-fail) in
                                        {7617}let v_1662: bool = not-caught-fail(early_secret_124) in
                                        {7619}let m_163: bitstring = (if v_1662 then zero else caught-fail) in
                                        {7620}let h_441: bitstring = (if v_1662 then catch-fail(hash(@8_backend_h,m_163)) else caught-fail) in
                                        {7621}let v_1663: bool = not-caught-fail(h_441) in
                                        {7618}let l_460: label = (if v_1662 then tls13_ext_res_binder else caught-fail) in
                                        {7622}let x_525: bitstring = (if v_1663 then (l_460,h_441) else caught-fail) in
                                        {7623}let binder_key_83: bitstring = (if v_1662 then catch-fail((if v_1663 then hmac(@8_backend_h,early_secret_124,x_525) else fail-any)) else caught-fail) in
                                        {7624}let v_1664: bool = not-caught-fail(binder_key_83) in
                                        {7625}let v_1665: bitstring = (if v_1660 then catch-fail((if v_1662 then (if v_1664 then (early_secret_124,binder_key_83) else fail-any) else fail-any)) else caught-fail) in
                                        {7626}let v_1666: bool = (not-caught-fail(v_1665) && success?(1-proj-2-tuple(v_1665))) in
                                        {7627}let kb_83: mac_key = (if v_1666 then 2-proj-2-tuple(v_1665) else caught-fail) in
                                        {7628}let es_125: bitstring = (if v_1666 then 1-proj-2-tuple(v_1665) else caught-fail) in
                                        {7629}let v_1667: bitstring = (if not(v_1660) then catch-fail(psk_data'_33) else caught-fail) in
                                        {7630}let v_1668: bool = (not-caught-fail(v_1667) && success?(1-proj-4-tuple(v_1667))) in
                                        {7631}let is_safe_74: bool = (if v_1668 then 4-proj-4-tuple(v_1667) else caught-fail) in
                                        {7632}let es_126: bitstring = (if v_1668 then 3-proj-4-tuple(v_1667) else caught-fail) in
                                        {7633}let id_87: identityPsk = (if v_1668 then 2-proj-4-tuple(v_1667) else caught-fail) in
                                        {7634}let psk_187: preSharedKey = (if v_1668 then 1-proj-4-tuple(v_1667) else caught-fail) in
                                        {7635}let (psk_188: preSharedKey,early_secret_125: bitstring,valid_39: bool,safe_psk_45: bool) = (if v_1660 then (if v_1666 then (NoPsk,es_125,true,false) else fail-any) else (if v_1668 then (psk_187,es_126,((psk_187 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_86)),is_safe_74) else fail-any)) in
                                        {7636}event Client_PSKChoosen(id_client_5,psk_188,safe_psk_45);
                                        {7637}if valid_39 then
                                        (
                                            {7640}new s_174[]: seed;
                                            {7638}let gxy_80: element = catch-fail(dh_decap_fun(g_46,gy_40,x_524)) in
                                            {7639}let v_1669: bool = not-caught-fail(gxy_80) in
                                            {7641}let gxy_81: element = (if v_1669 then gxy_80 else dh_f(s_174)) in
                                            {7642}event Client_DH_gxy(id_client_5,gxy_81);
                                            {7644}let m_164: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {7645}let v_1670: bool = not-caught-fail(m_164) in
                                            {7646}let h_442: bitstring = (if v_1670 then catch-fail(hash(@8_backend_h,m_164)) else caught-fail) in
                                            {7647}let v_1671: bool = not-caught-fail(h_442) in
                                            {7643}let l_461: label = tls13_derived in
                                            {7648}let x_526: bitstring = (if v_1671 then (l_461,h_442) else caught-fail) in
                                            {7649}let extra_87: bitstring = catch-fail((if v_1670 then (if v_1671 then hmac(@8_backend_h,early_secret_125,x_526) else fail-any) else fail-any)) in
                                            {7650}let v_1672: bool = not-caught-fail(extra_87) in
                                            {7651}let handshake_secret_40: bitstring = (if v_1672 then hmac(@8_backend_h,extra_87,gxy_81) else fail-any) in
                                            {7653}let m_165: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {7654}let v_1673: bool = not-caught-fail(m_165) in
                                            {7655}let h_443: bitstring = (if v_1673 then catch-fail(hash(@8_backend_h,m_165)) else caught-fail) in
                                            {7656}let v_1674: bool = not-caught-fail(h_443) in
                                            {7652}let l_462: label = tls13_derived in
                                            {7657}let x_527: bitstring = (if v_1674 then (l_462,h_443) else caught-fail) in
                                            {7658}let extra_88: bitstring = catch-fail((if v_1673 then (if v_1674 then hmac(@8_backend_h,handshake_secret_40,x_527) else fail-any) else fail-any)) in
                                            {7659}let v_1675: bool = not-caught-fail(extra_88) in
                                            {7660}let k_168: bitstring = (if v_1675 then zero else caught-fail) in
                                            {7661}let master_secret_87: bitstring = (if v_1675 then catch-fail(hmac(@8_backend_h,handshake_secret_40,k_168)) else caught-fail) in
                                            {7662}let v_1676: bool = not-caught-fail(master_secret_87) in
                                            {7609}let cur_log2_85: bitstring = (cur_log_IN1_HRR_IN2_9,server_hello'_30) in
                                            {7664}let h_444: bitstring = (if v_1676 then catch-fail(hash(@8_backend_h,cur_log2_85)) else caught-fail) in
                                            {7665}let v_1677: bool = not-caught-fail(h_444) in
                                            {7663}let l_463: label = (if v_1676 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {7666}let x_528: bitstring = (if v_1677 then (l_463,h_444) else caught-fail) in
                                            {7667}let client_hts_40: bitstring = (if v_1676 then catch-fail((if v_1677 then hmac(@8_backend_h,handshake_secret_40,x_528) else fail-any)) else caught-fail) in
                                            {7668}let v_1678: bool = not-caught-fail(client_hts_40) in
                                            {7670}let h_445: bitstring = (if v_1678 then catch-fail(hash(@8_backend_h,cur_log2_85)) else caught-fail) in
                                            {7671}let v_1679: bool = not-caught-fail(h_445) in
                                            {7669}let l_464: label = (if v_1678 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {7672}let x_529: bitstring = (if v_1679 then (l_464,h_445) else caught-fail) in
                                            {7673}let server_hts_40: bitstring = (if v_1678 then catch-fail((if v_1679 then hmac(@8_backend_h,handshake_secret_40,x_529) else fail-any)) else caught-fail) in
                                            {7674}let v_1680: bool = not-caught-fail(server_hts_40) in
                                            {7676}let h_446: bitstring = (if v_1680 then zero else caught-fail) in
                                            {7675}let l_465: label = (if v_1680 then tls13_key else caught-fail) in
                                            {7677}let x_530: bitstring = (if v_1680 then (l_465,h_446) else caught-fail) in
                                            {7678}let client_wkh_40: bitstring = (if v_1680 then catch-fail(hmac(@8_backend_h,client_hts_40,x_530)) else caught-fail) in
                                            {7679}let v_1681: bool = not-caught-fail(client_wkh_40) in
                                            {7681}let h_447: bitstring = (if v_1681 then zero else caught-fail) in
                                            {7680}let l_466: label = (if v_1681 then tls13_key else caught-fail) in
                                            {7682}let x_531: bitstring = (if v_1681 then (l_466,h_447) else caught-fail) in
                                            {7683}let server_wkh_40: bitstring = (if v_1681 then catch-fail(hmac(@8_backend_h,server_hts_40,x_531)) else caught-fail) in
                                            {7684}let v_1682: bool = not-caught-fail(server_wkh_40) in
                                            {7686}let h_448: bitstring = (if v_1682 then zero else caught-fail) in
                                            {7685}let l_467: label = (if v_1682 then tls13_finished else caught-fail) in
                                            {7687}let x_532: bitstring = (if v_1682 then (l_467,h_448) else caught-fail) in
                                            {7688}let client_fk_40: bitstring = (if v_1682 then catch-fail(hmac(@8_backend_h,client_hts_40,x_532)) else caught-fail) in
                                            {7689}let v_1683: bool = not-caught-fail(client_fk_40) in
                                            {7691}let h_449: bitstring = (if v_1683 then zero else caught-fail) in
                                            {7690}let l_468: label = (if v_1683 then tls13_finished else caught-fail) in
                                            {7692}let x_533: bitstring = (if v_1683 then (l_468,h_449) else caught-fail) in
                                            {7693}let server_fk_40: bitstring = (if v_1683 then catch-fail(hmac(@8_backend_h,server_hts_40,x_533)) else caught-fail) in
                                            {7694}let v_1684: bool = not-caught-fail(server_fk_40) in
                                            {7695}let (master_secret_88: bitstring,chk_47: aead_key,shk_46: aead_key,cfin_47: mac_key,sfin_46: mac_key) = (if v_1675 then (if v_1676 then (if v_1678 then (if v_1680 then (if v_1681 then (if v_1682 then (if v_1683 then (if v_1684 then (master_secret_87,client_wkh_40,server_wkh_40,client_fk_40,server_fk_40) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {7696}event Client_chk(id_client_5,chk_47);
                                            {7697}event Client_shk(id_client_5,shk_46);
                                            {7698}event Client_cfin(id_client_5,cfin_47);
                                            {7699}event Client_sfin(id_client_5,sfin_46);
                                            {7700}in(io, enc_ee_msg_39: bitstring);
                                            {7701}let ee_msg_44: msg = aead_dec(@8_backend_a,shk_46,0,zero,enc_ee_msg_39) in
                                            {7702}let EE(ech_ee_39: echExt,extra_ee_39: extraExt) = ee_msg_44 in
                                            {7703}let cur_log2_86: bitstring = (cur_log2_85,ee_msg_44) in
                                            {7704}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_9,sr_50,@8_backend_h,@8_backend_a,c_dom_7,backend_dom_1,psk_188,safe_psk_45,@8_comp_psk,master_secret_88,chk_47,0,shk_46,1,cfin_47,sfin_46,cur_log2_86)))
                                        )
                                        else
                                            {7705}out(io, illegal_parameter)
                                    )
                                    else
                                        {7706}out(io, illegal_parameter)
                                )
                                else
                                    {7883}get pre_shared_keys(c_dom'_13: domain,=backend_dom_1,=@8_backend_h,id_88: identityPsk,psk_189: preSharedKey,idP_15: idProc,is_safe_75: bool) in
                                    {7707}event Selected_one_time_used_psk(id_client_5,psk_189,is_safe_75);
                                    {7708}event Selected_psk(c_dom_7,c_dom'_13,idP_15,is_safe_75);
                                    {7709}event Selected_psk_no_missmatch(id_client_5,backend_dom_1,@8_backend_h,psk_189,id_88);
                                    {7710}event Selected_psk_with_ID(c_dom_7,c_dom'_13,id_88,idP_15,is_safe_75);
                                    {7711}let v_1685: bitstring = (id_88,psk_189,is_safe_75) in
                                    {7712}let v_1686: bool = success?(1-proj-3-tuple(v_1685)) in
                                    {7713}let is_safe_76: bool = (if v_1686 then 3-proj-3-tuple(v_1685) else caught-fail) in
                                    {7714}let psk_190: preSharedKey = (if v_1686 then 2-proj-3-tuple(v_1685) else caught-fail) in
                                    {7715}let id_89: identityPsk = (if v_1686 then 1-proj-3-tuple(v_1685) else caught-fail) in
                                    {7719}let k_169: bitstring = (if v_1686 then catch-fail(psk2b(psk_190)) else caught-fail) in
                                    {7720}let v_1687: bool = not-caught-fail(k_169) in
                                    {7718}let s_175: bitstring = (if v_1686 then zero else caught-fail) in
                                    {7721}let early_secret_126: bitstring = (if v_1686 then catch-fail((if v_1687 then hmac(@8_backend_h,s_175,k_169) else fail-any)) else caught-fail) in
                                    {7722}let v_1688: bool = not-caught-fail(early_secret_126) in
                                    {7724}let m_166: bitstring = (if v_1688 then zero else caught-fail) in
                                    {7725}let h_450: bitstring = (if v_1688 then catch-fail(hash(@8_backend_h,m_166)) else caught-fail) in
                                    {7726}let v_1689: bool = not-caught-fail(h_450) in
                                    {7723}let l_469: label = (if v_1688 then tls13_ext_res_binder else caught-fail) in
                                    {7727}let x_534: bitstring = (if v_1689 then (l_469,h_450) else caught-fail) in
                                    {7728}let binder_key_84: bitstring = (if v_1688 then catch-fail((if v_1689 then hmac(@8_backend_h,early_secret_126,x_534) else fail-any)) else caught-fail) in
                                    {7729}let v_1690: bool = not-caught-fail(binder_key_84) in
                                    {7730}let v_1691: bitstring = (if v_1686 then catch-fail((if v_1688 then (if v_1690 then (early_secret_126,binder_key_84) else fail-any) else fail-any)) else caught-fail) in
                                    {7731}let v_1692: bool = (not-caught-fail(v_1691) && success?(1-proj-2-tuple(v_1691))) in
                                    {7732}let kb_84: mac_key = (if v_1692 then 2-proj-2-tuple(v_1691) else caught-fail) in
                                    {7733}let es_127: bitstring = (if v_1692 then 1-proj-2-tuple(v_1691) else caught-fail) in
                                    {7716}let offer_38: params = (if v_1686 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_6,SNI(backend_dom_1),ech_ext_20,@8_i_extra_ext,trunc_client_psk_ext(id_89)) else caught-fail) in
                                    {7717}let cur_log'_26: bitstring = (if v_1686 then (cur_log_IN1_HRR_3,CH(i_cr_10,offer_38)) else caught-fail) in
                                    {7734}let binders_25: bitstring = (if v_1692 then catch-fail(hmac(@8_backend_h,kb_84,cur_log'_26)) else caught-fail) in
                                    {7735}let v_1693: bool = not-caught-fail(binders_25) in
                                    {7736}let v_1694: bitstring = catch-fail((if v_1686 then (if v_1692 then (if v_1693 then (client_psk_ext(id_89,binders_25),(psk_190,id_89,es_127,is_safe_76)) else fail-any) else fail-any) else fail-any)) in
                                    {7737}let v_1695: bool = (not-caught-fail(v_1694) && success?(1-proj-2-tuple(v_1694))) in
                                    {7738}let psk_data_45: bitstring = (if v_1695 then 2-proj-2-tuple(v_1694) else caught-fail) in
                                    {7739}let psk_ext_87: preSharedKeyExt = (if v_1695 then 1-proj-2-tuple(v_1694) else caught-fail) in
                                    {7742}new fake_id_17[]: identityPsk;
                                    {7743}new fake_binder_17[]: bitstring;
                                    {7749}let v_1696: hpkeContext = (if v_1695 then catch-fail(context_2) else caught-fail) in
                                    {7750}let v_1697: bool = (not-caught-fail(v_1696) && ((S =nf 1-proj-hpke_context(v_1696)) && success?(1-proj-hpke_context(v_1696)))) in
                                    {7751}let base_nonce_19: bitstring = (if v_1697 then 3-proj-hpke_context(v_1696) else caught-fail) in
                                    {7752}let key_19: aead_key = (if v_1697 then 2-proj-hpke_context(v_1696) else caught-fail) in
                                    {7748}let n_16: nat = (if v_1695 then 2 else caught-fail) in
                                    {7745}let o_ech_ext_ADD_14: echExt = (if v_1695 then ECHClientHelloOuter(ech_h_14,ech_a_14,config_id_14,zero,zero) else caught-fail) in
                                    {7744}let o_psk_ext_18: preSharedKeyExt = (if v_1695 then (if @8_use_psk then client_psk_ext(fake_id_17,fake_binder_17) else empty_psk_ext) else caught-fail) in
                                    {7746}let o_offer_ADD_14: params = (if v_1695 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_8,SNI(o_dom_10),o_ech_ext_ADD_14,empty_extra_ext,o_psk_ext_18) else caught-fail) in
                                    {7747}let o_client_hello_ADD_14: msg = (if v_1695 then CH(o_cr_12,o_offer_ADD_14) else caught-fail) in
                                    {7740}let i_offer_14: params = (if v_1695 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_6,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_87) else caught-fail) in
                                    {7741}let i_client_hello_19: msg = (if v_1695 then CH(i_cr_10,i_offer_14) else caught-fail) in
                                    {7753}let payload_20: bitstring = (if v_1695 then catch-fail((if v_1697 then aead_enc(ech_a_14,key_19,(base_nonce_19,n_16),o_client_hello_ADD_14,i_client_hello_19) else fail-any)) else caught-fail) in
                                    {7754}let v_1698: bool = not-caught-fail(payload_20) in
                                    {7755}let o_ech_ext_18: echExt = (if v_1698 then ECHClientHelloOuter(ech_h_14,ech_a_14,config_id_14,zero,payload_20) else caught-fail) in
                                    {7756}let o_offer_30: params = (if v_1698 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_8,SNI(o_dom_10),o_ech_ext_18,empty_extra_ext,o_psk_ext_18) else caught-fail) in
                                    {7757}let (o_client_hello'_10: msg,i_client_hello'_11: msg,i_cr'_10: bytes32,i_kex_data'_10: bitstring,psk_data'_34: bitstring) = (if v_1695 then (if v_1698 then (CH(o_cr_12,o_offer_30),i_client_hello_19,i_cr_10,i_kex_data_9,psk_data_45) else fail-any) else fail-any) in
                                    {7758}out(io, o_client_hello'_10);
                                    {7759}in(io, server_hello'_31: msg);
                                    {7760}let SH(B32(sr24'_10: bytes24,sr8'_10: bytes8),params'_10: params) = server_hello'_31 in
                                    {7762}let sh_modified_14: msg = SH(B32(sr24'_10,zero8),params'_10) in
                                    {7761}let cur_log_IN1_HRR_IN2_10: bitstring = (cur_log_IN1_HRR_3,i_client_hello'_11) in
                                    {7763}let cur_log_sh_14: bitstring = (cur_log_IN1_HRR_IN2_10,sh_modified_14) in
                                    {7764}let transcript_ech_conf_14: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_14)) in
                                    {7765}let v_1699: bool = not-caught-fail(transcript_ech_conf_14) in
                                    {7767}let k_170: bitstring = (if v_1699 then catch-fail(b32_2_b(get_random(i_client_hello'_11))) else caught-fail) in
                                    {7768}let v_1700: bool = not-caught-fail(k_170) in
                                    {7766}let s_176: bitstring = (if v_1699 then zero else caught-fail) in
                                    {7769}let k_171: bitstring = (if v_1699 then catch-fail((if v_1700 then hmac(@8_backend_h,s_176,k_170) else fail-any)) else caught-fail) in
                                    {7770}let v_1701: bool = not-caught-fail(k_171) in
                                    {7771}let l_470: label = (if v_1701 then ech_accept_confirmation else caught-fail) in
                                    {7772}let x_535: bitstring = (if v_1701 then (l_470,cur_log_sh_14) else caught-fail) in
                                    {7773}let sr8_18: bytes8 = (if v_1699 then catch-fail(crop_into_bytes8((if v_1701 then hmac(@8_backend_h,k_171,x_535) else fail-any))) else caught-fail) in
                                    {7774}let v_1702: bool = not-caught-fail(sr8_18) in
                                    {7775}if (B32(sr24'_10,sr8'_10) = (if v_1699 then (if v_1702 then B32(sr24'_10,sr8_18) else fail-any) else fail-any)) then
                                    {7776}let (x_536: bitstring,g_47: group) = i_kex_data'_10 in
                                    {7777}let (psk_offer_40: preSharedKey,id_offer_40: identityPsk,es_offer_40: bitstring,is_safe_offer_40: bool) = psk_data'_34 in
                                    {7778}event Client_PSKOffer(id_client_5,psk_offer_40,id_offer_40,is_safe_offer_40);
                                    {7779}event Client_Rand_client(id_client_5,i_cr'_10);
                                    {7780}event Client_DH_client(id_client_5,dh_pub(g_47,x_536));
                                    {7781}event Client_server_domain(id_client_5,backend_dom_1);
                                    {7782}let SH(sr_51: bytes32,mode_47: params) = server_hello'_31 in
                                    {7783}event Client_Rand_server(id_client_5,sr_51);
                                    {7784}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_47,gy_41: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_88: preSharedKeyExt) = mode_47 in
                                    (
                                        {7786}event Client_DH_server(id_client_5,gy_41);
                                        {7787}let v_1703: bool = (psk_ext_88 = empty_psk_ext) in
                                        {7788}let psk_191: preSharedKey = (if v_1703 then NoPsk else caught-fail) in
                                        {7790}let k_172: bitstring = (if v_1703 then catch-fail(psk2b(psk_191)) else caught-fail) in
                                        {7791}let v_1704: bool = not-caught-fail(k_172) in
                                        {7789}let s_177: bitstring = (if v_1703 then zero else caught-fail) in
                                        {7792}let early_secret_127: bitstring = (if v_1703 then catch-fail((if v_1704 then hmac(@8_backend_h,s_177,k_172) else fail-any)) else caught-fail) in
                                        {7793}let v_1705: bool = not-caught-fail(early_secret_127) in
                                        {7795}let m_167: bitstring = (if v_1705 then zero else caught-fail) in
                                        {7796}let h_451: bitstring = (if v_1705 then catch-fail(hash(@8_backend_h,m_167)) else caught-fail) in
                                        {7797}let v_1706: bool = not-caught-fail(h_451) in
                                        {7794}let l_471: label = (if v_1705 then tls13_ext_res_binder else caught-fail) in
                                        {7798}let x_537: bitstring = (if v_1706 then (l_471,h_451) else caught-fail) in
                                        {7799}let binder_key_85: bitstring = (if v_1705 then catch-fail((if v_1706 then hmac(@8_backend_h,early_secret_127,x_537) else fail-any)) else caught-fail) in
                                        {7800}let v_1707: bool = not-caught-fail(binder_key_85) in
                                        {7801}let v_1708: bitstring = (if v_1703 then catch-fail((if v_1705 then (if v_1707 then (early_secret_127,binder_key_85) else fail-any) else fail-any)) else caught-fail) in
                                        {7802}let v_1709: bool = (not-caught-fail(v_1708) && success?(1-proj-2-tuple(v_1708))) in
                                        {7803}let kb_85: mac_key = (if v_1709 then 2-proj-2-tuple(v_1708) else caught-fail) in
                                        {7804}let es_128: bitstring = (if v_1709 then 1-proj-2-tuple(v_1708) else caught-fail) in
                                        {7805}let v_1710: bitstring = (if not(v_1703) then catch-fail(psk_data'_34) else caught-fail) in
                                        {7806}let v_1711: bool = (not-caught-fail(v_1710) && success?(1-proj-4-tuple(v_1710))) in
                                        {7807}let is_safe_77: bool = (if v_1711 then 4-proj-4-tuple(v_1710) else caught-fail) in
                                        {7808}let es_129: bitstring = (if v_1711 then 3-proj-4-tuple(v_1710) else caught-fail) in
                                        {7809}let id_90: identityPsk = (if v_1711 then 2-proj-4-tuple(v_1710) else caught-fail) in
                                        {7810}let psk_192: preSharedKey = (if v_1711 then 1-proj-4-tuple(v_1710) else caught-fail) in
                                        {7811}let (psk_193: preSharedKey,early_secret_128: bitstring,valid_40: bool,safe_psk_46: bool) = (if v_1703 then (if v_1709 then (NoPsk,es_128,true,false) else fail-any) else (if v_1711 then (psk_192,es_129,((psk_192 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_88)),is_safe_77) else fail-any)) in
                                        {7812}event Client_PSKChoosen(id_client_5,psk_193,safe_psk_46);
                                        {7813}if valid_40 then
                                        (
                                            {7816}new s_178[]: seed;
                                            {7814}let gxy_82: element = catch-fail(dh_decap_fun(g_47,gy_41,x_536)) in
                                            {7815}let v_1712: bool = not-caught-fail(gxy_82) in
                                            {7817}let gxy_83: element = (if v_1712 then gxy_82 else dh_f(s_178)) in
                                            {7818}event Client_DH_gxy(id_client_5,gxy_83);
                                            {7820}let m_168: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {7821}let v_1713: bool = not-caught-fail(m_168) in
                                            {7822}let h_452: bitstring = (if v_1713 then catch-fail(hash(@8_backend_h,m_168)) else caught-fail) in
                                            {7823}let v_1714: bool = not-caught-fail(h_452) in
                                            {7819}let l_472: label = tls13_derived in
                                            {7824}let x_538: bitstring = (if v_1714 then (l_472,h_452) else caught-fail) in
                                            {7825}let extra_89: bitstring = catch-fail((if v_1713 then (if v_1714 then hmac(@8_backend_h,early_secret_128,x_538) else fail-any) else fail-any)) in
                                            {7826}let v_1715: bool = not-caught-fail(extra_89) in
                                            {7827}let handshake_secret_41: bitstring = (if v_1715 then hmac(@8_backend_h,extra_89,gxy_83) else fail-any) in
                                            {7829}let m_169: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {7830}let v_1716: bool = not-caught-fail(m_169) in
                                            {7831}let h_453: bitstring = (if v_1716 then catch-fail(hash(@8_backend_h,m_169)) else caught-fail) in
                                            {7832}let v_1717: bool = not-caught-fail(h_453) in
                                            {7828}let l_473: label = tls13_derived in
                                            {7833}let x_539: bitstring = (if v_1717 then (l_473,h_453) else caught-fail) in
                                            {7834}let extra_90: bitstring = catch-fail((if v_1716 then (if v_1717 then hmac(@8_backend_h,handshake_secret_41,x_539) else fail-any) else fail-any)) in
                                            {7835}let v_1718: bool = not-caught-fail(extra_90) in
                                            {7836}let k_173: bitstring = (if v_1718 then zero else caught-fail) in
                                            {7837}let master_secret_89: bitstring = (if v_1718 then catch-fail(hmac(@8_backend_h,handshake_secret_41,k_173)) else caught-fail) in
                                            {7838}let v_1719: bool = not-caught-fail(master_secret_89) in
                                            {7785}let cur_log2_87: bitstring = (cur_log_IN1_HRR_IN2_10,server_hello'_31) in
                                            {7840}let h_454: bitstring = (if v_1719 then catch-fail(hash(@8_backend_h,cur_log2_87)) else caught-fail) in
                                            {7841}let v_1720: bool = not-caught-fail(h_454) in
                                            {7839}let l_474: label = (if v_1719 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {7842}let x_540: bitstring = (if v_1720 then (l_474,h_454) else caught-fail) in
                                            {7843}let client_hts_41: bitstring = (if v_1719 then catch-fail((if v_1720 then hmac(@8_backend_h,handshake_secret_41,x_540) else fail-any)) else caught-fail) in
                                            {7844}let v_1721: bool = not-caught-fail(client_hts_41) in
                                            {7846}let h_455: bitstring = (if v_1721 then catch-fail(hash(@8_backend_h,cur_log2_87)) else caught-fail) in
                                            {7847}let v_1722: bool = not-caught-fail(h_455) in
                                            {7845}let l_475: label = (if v_1721 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {7848}let x_541: bitstring = (if v_1722 then (l_475,h_455) else caught-fail) in
                                            {7849}let server_hts_41: bitstring = (if v_1721 then catch-fail((if v_1722 then hmac(@8_backend_h,handshake_secret_41,x_541) else fail-any)) else caught-fail) in
                                            {7850}let v_1723: bool = not-caught-fail(server_hts_41) in
                                            {7852}let h_456: bitstring = (if v_1723 then zero else caught-fail) in
                                            {7851}let l_476: label = (if v_1723 then tls13_key else caught-fail) in
                                            {7853}let x_542: bitstring = (if v_1723 then (l_476,h_456) else caught-fail) in
                                            {7854}let client_wkh_41: bitstring = (if v_1723 then catch-fail(hmac(@8_backend_h,client_hts_41,x_542)) else caught-fail) in
                                            {7855}let v_1724: bool = not-caught-fail(client_wkh_41) in
                                            {7857}let h_457: bitstring = (if v_1724 then zero else caught-fail) in
                                            {7856}let l_477: label = (if v_1724 then tls13_key else caught-fail) in
                                            {7858}let x_543: bitstring = (if v_1724 then (l_477,h_457) else caught-fail) in
                                            {7859}let server_wkh_41: bitstring = (if v_1724 then catch-fail(hmac(@8_backend_h,server_hts_41,x_543)) else caught-fail) in
                                            {7860}let v_1725: bool = not-caught-fail(server_wkh_41) in
                                            {7862}let h_458: bitstring = (if v_1725 then zero else caught-fail) in
                                            {7861}let l_478: label = (if v_1725 then tls13_finished else caught-fail) in
                                            {7863}let x_544: bitstring = (if v_1725 then (l_478,h_458) else caught-fail) in
                                            {7864}let client_fk_41: bitstring = (if v_1725 then catch-fail(hmac(@8_backend_h,client_hts_41,x_544)) else caught-fail) in
                                            {7865}let v_1726: bool = not-caught-fail(client_fk_41) in
                                            {7867}let h_459: bitstring = (if v_1726 then zero else caught-fail) in
                                            {7866}let l_479: label = (if v_1726 then tls13_finished else caught-fail) in
                                            {7868}let x_545: bitstring = (if v_1726 then (l_479,h_459) else caught-fail) in
                                            {7869}let server_fk_41: bitstring = (if v_1726 then catch-fail(hmac(@8_backend_h,server_hts_41,x_545)) else caught-fail) in
                                            {7870}let v_1727: bool = not-caught-fail(server_fk_41) in
                                            {7871}let (master_secret_90: bitstring,chk_48: aead_key,shk_47: aead_key,cfin_48: mac_key,sfin_47: mac_key) = (if v_1718 then (if v_1719 then (if v_1721 then (if v_1723 then (if v_1724 then (if v_1725 then (if v_1726 then (if v_1727 then (master_secret_89,client_wkh_41,server_wkh_41,client_fk_41,server_fk_41) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {7872}event Client_chk(id_client_5,chk_48);
                                            {7873}event Client_shk(id_client_5,shk_47);
                                            {7874}event Client_cfin(id_client_5,cfin_48);
                                            {7875}event Client_sfin(id_client_5,sfin_47);
                                            {7876}in(io, enc_ee_msg_40: bitstring);
                                            {7877}let ee_msg_45: msg = aead_dec(@8_backend_a,shk_47,0,zero,enc_ee_msg_40) in
                                            {7878}let EE(ech_ee_40: echExt,extra_ee_40: extraExt) = ee_msg_45 in
                                            {7879}let cur_log2_88: bitstring = (cur_log2_87,ee_msg_45) in
                                            {7880}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_10,sr_51,@8_backend_h,@8_backend_a,c_dom_7,backend_dom_1,psk_193,safe_psk_46,@8_comp_psk,master_secret_90,chk_48,0,shk_47,1,cfin_48,sfin_47,cur_log2_88)))
                                        )
                                        else
                                            {7881}out(io, illegal_parameter)
                                    )
                                    else
                                        {7882}out(io, illegal_parameter)
                            )
                            else
                                {7884}let psk_194: preSharedKey = NoPsk in
                                {7886}let k_174: bitstring = catch-fail(psk2b(psk_194)) in
                                {7887}let v_1728: bool = not-caught-fail(k_174) in
                                {7885}let s_179: bitstring = zero in
                                {7888}let early_secret_129: bitstring = catch-fail((if v_1728 then hmac(@8_backend_h,s_179,k_174) else fail-any)) in
                                {7889}let v_1729: bool = not-caught-fail(early_secret_129) in
                                {7891}let m_170: bitstring = (if v_1729 then zero else caught-fail) in
                                {7892}let h_460: bitstring = (if v_1729 then catch-fail(hash(@8_backend_h,m_170)) else caught-fail) in
                                {7893}let v_1730: bool = not-caught-fail(h_460) in
                                {7890}let l_480: label = (if v_1729 then tls13_ext_res_binder else caught-fail) in
                                {7894}let x_546: bitstring = (if v_1730 then (l_480,h_460) else caught-fail) in
                                {7895}let binder_key_86: bitstring = (if v_1729 then catch-fail((if v_1730 then hmac(@8_backend_h,early_secret_129,x_546) else fail-any)) else caught-fail) in
                                {7896}let v_1731: bool = not-caught-fail(binder_key_86) in
                                {7897}let v_1732: bitstring = catch-fail((if v_1729 then (if v_1731 then (early_secret_129,binder_key_86) else fail-any) else fail-any)) in
                                {7898}let v_1733: bool = (not-caught-fail(v_1732) && success?(1-proj-2-tuple(v_1732))) in
                                {7899}let kb_86: mac_key = (if v_1733 then 2-proj-2-tuple(v_1732) else caught-fail) in
                                {7900}let es_130: bitstring = (if v_1733 then 1-proj-2-tuple(v_1732) else caught-fail) in
                                {7901}let v_1734: bitstring = catch-fail((if v_1733 then (empty_psk_ext,(NoPsk,zero,es_130,false)) else fail-any)) in
                                {7902}let v_1735: bool = (not-caught-fail(v_1734) && success?(1-proj-2-tuple(v_1734))) in
                                {7903}let psk_data_46: bitstring = (if v_1735 then 2-proj-2-tuple(v_1734) else caught-fail) in
                                {7904}let psk_ext_89: preSharedKeyExt = (if v_1735 then 1-proj-2-tuple(v_1734) else caught-fail) in
                                {7907}new fake_id_18[]: identityPsk;
                                {7908}new fake_binder_18[]: bitstring;
                                {7914}let v_1736: hpkeContext = (if v_1735 then catch-fail(context_2) else caught-fail) in
                                {7915}let v_1737: bool = (not-caught-fail(v_1736) && ((S =nf 1-proj-hpke_context(v_1736)) && success?(1-proj-hpke_context(v_1736)))) in
                                {7916}let base_nonce_20: bitstring = (if v_1737 then 3-proj-hpke_context(v_1736) else caught-fail) in
                                {7917}let key_20: aead_key = (if v_1737 then 2-proj-hpke_context(v_1736) else caught-fail) in
                                {7913}let n_17: nat = (if v_1735 then 2 else caught-fail) in
                                {7910}let o_ech_ext_ADD_15: echExt = (if v_1735 then ECHClientHelloOuter(ech_h_14,ech_a_14,config_id_14,zero,zero) else caught-fail) in
                                {7909}let o_psk_ext_19: preSharedKeyExt = (if v_1735 then (if @8_use_psk then client_psk_ext(fake_id_18,fake_binder_18) else empty_psk_ext) else caught-fail) in
                                {7911}let o_offer_ADD_15: params = (if v_1735 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_8,SNI(o_dom_10),o_ech_ext_ADD_15,empty_extra_ext,o_psk_ext_19) else caught-fail) in
                                {7912}let o_client_hello_ADD_15: msg = (if v_1735 then CH(o_cr_12,o_offer_ADD_15) else caught-fail) in
                                {7905}let i_offer_15: params = (if v_1735 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_6,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_89) else caught-fail) in
                                {7906}let i_client_hello_20: msg = (if v_1735 then CH(i_cr_10,i_offer_15) else caught-fail) in
                                {7918}let payload_21: bitstring = (if v_1735 then catch-fail((if v_1737 then aead_enc(ech_a_14,key_20,(base_nonce_20,n_17),o_client_hello_ADD_15,i_client_hello_20) else fail-any)) else caught-fail) in
                                {7919}let v_1738: bool = not-caught-fail(payload_21) in
                                {7920}let o_ech_ext_19: echExt = (if v_1738 then ECHClientHelloOuter(ech_h_14,ech_a_14,config_id_14,zero,payload_21) else caught-fail) in
                                {7921}let o_offer_31: params = (if v_1738 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_8,SNI(o_dom_10),o_ech_ext_19,empty_extra_ext,o_psk_ext_19) else caught-fail) in
                                {7922}let (o_client_hello'_11: msg,i_client_hello'_12: msg,i_cr'_11: bytes32,i_kex_data'_11: bitstring,psk_data'_35: bitstring) = (if v_1735 then (if v_1738 then (CH(o_cr_12,o_offer_31),i_client_hello_20,i_cr_10,i_kex_data_9,psk_data_46) else fail-any) else fail-any) in
                                {7923}out(io, o_client_hello'_11);
                                {7924}in(io, server_hello'_32: msg);
                                {7925}let SH(B32(sr24'_11: bytes24,sr8'_11: bytes8),params'_11: params) = server_hello'_32 in
                                {7927}let sh_modified_15: msg = SH(B32(sr24'_11,zero8),params'_11) in
                                {7926}let cur_log_IN1_HRR_IN2_11: bitstring = (cur_log_IN1_HRR_3,i_client_hello'_12) in
                                {7928}let cur_log_sh_15: bitstring = (cur_log_IN1_HRR_IN2_11,sh_modified_15) in
                                {7929}let transcript_ech_conf_15: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_15)) in
                                {7930}let v_1739: bool = not-caught-fail(transcript_ech_conf_15) in
                                {7932}let k_175: bitstring = (if v_1739 then catch-fail(b32_2_b(get_random(i_client_hello'_12))) else caught-fail) in
                                {7933}let v_1740: bool = not-caught-fail(k_175) in
                                {7931}let s_180: bitstring = (if v_1739 then zero else caught-fail) in
                                {7934}let k_176: bitstring = (if v_1739 then catch-fail((if v_1740 then hmac(@8_backend_h,s_180,k_175) else fail-any)) else caught-fail) in
                                {7935}let v_1741: bool = not-caught-fail(k_176) in
                                {7936}let l_481: label = (if v_1741 then ech_accept_confirmation else caught-fail) in
                                {7937}let x_547: bitstring = (if v_1741 then (l_481,cur_log_sh_15) else caught-fail) in
                                {7938}let sr8_19: bytes8 = (if v_1739 then catch-fail(crop_into_bytes8((if v_1741 then hmac(@8_backend_h,k_176,x_547) else fail-any))) else caught-fail) in
                                {7939}let v_1742: bool = not-caught-fail(sr8_19) in
                                {7940}if (B32(sr24'_11,sr8'_11) = (if v_1739 then (if v_1742 then B32(sr24'_11,sr8_19) else fail-any) else fail-any)) then
                                {7941}let (x_548: bitstring,g_48: group) = i_kex_data'_11 in
                                {7942}let (psk_offer_41: preSharedKey,id_offer_41: identityPsk,es_offer_41: bitstring,is_safe_offer_41: bool) = psk_data'_35 in
                                {7943}event Client_PSKOffer(id_client_5,psk_offer_41,id_offer_41,is_safe_offer_41);
                                {7944}event Client_Rand_client(id_client_5,i_cr'_11);
                                {7945}event Client_DH_client(id_client_5,dh_pub(g_48,x_548));
                                {7946}event Client_server_domain(id_client_5,backend_dom_1);
                                {7947}let SH(sr_52: bytes32,mode_48: params) = server_hello'_32 in
                                {7948}event Client_Rand_server(id_client_5,sr_52);
                                {7949}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_48,gy_42: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_90: preSharedKeyExt) = mode_48 in
                                (
                                    {7951}event Client_DH_server(id_client_5,gy_42);
                                    {7952}let v_1743: bool = (psk_ext_90 = empty_psk_ext) in
                                    {7953}let psk_195: preSharedKey = (if v_1743 then NoPsk else caught-fail) in
                                    {7955}let k_177: bitstring = (if v_1743 then catch-fail(psk2b(psk_195)) else caught-fail) in
                                    {7956}let v_1744: bool = not-caught-fail(k_177) in
                                    {7954}let s_181: bitstring = (if v_1743 then zero else caught-fail) in
                                    {7957}let early_secret_130: bitstring = (if v_1743 then catch-fail((if v_1744 then hmac(@8_backend_h,s_181,k_177) else fail-any)) else caught-fail) in
                                    {7958}let v_1745: bool = not-caught-fail(early_secret_130) in
                                    {7960}let m_171: bitstring = (if v_1745 then zero else caught-fail) in
                                    {7961}let h_461: bitstring = (if v_1745 then catch-fail(hash(@8_backend_h,m_171)) else caught-fail) in
                                    {7962}let v_1746: bool = not-caught-fail(h_461) in
                                    {7959}let l_482: label = (if v_1745 then tls13_ext_res_binder else caught-fail) in
                                    {7963}let x_549: bitstring = (if v_1746 then (l_482,h_461) else caught-fail) in
                                    {7964}let binder_key_87: bitstring = (if v_1745 then catch-fail((if v_1746 then hmac(@8_backend_h,early_secret_130,x_549) else fail-any)) else caught-fail) in
                                    {7965}let v_1747: bool = not-caught-fail(binder_key_87) in
                                    {7966}let v_1748: bitstring = (if v_1743 then catch-fail((if v_1745 then (if v_1747 then (early_secret_130,binder_key_87) else fail-any) else fail-any)) else caught-fail) in
                                    {7967}let v_1749: bool = (not-caught-fail(v_1748) && success?(1-proj-2-tuple(v_1748))) in
                                    {7968}let kb_87: mac_key = (if v_1749 then 2-proj-2-tuple(v_1748) else caught-fail) in
                                    {7969}let es_131: bitstring = (if v_1749 then 1-proj-2-tuple(v_1748) else caught-fail) in
                                    {7970}let v_1750: bitstring = (if not(v_1743) then catch-fail(psk_data'_35) else caught-fail) in
                                    {7971}let v_1751: bool = (not-caught-fail(v_1750) && success?(1-proj-4-tuple(v_1750))) in
                                    {7972}let is_safe_78: bool = (if v_1751 then 4-proj-4-tuple(v_1750) else caught-fail) in
                                    {7973}let es_132: bitstring = (if v_1751 then 3-proj-4-tuple(v_1750) else caught-fail) in
                                    {7974}let id_91: identityPsk = (if v_1751 then 2-proj-4-tuple(v_1750) else caught-fail) in
                                    {7975}let psk_196: preSharedKey = (if v_1751 then 1-proj-4-tuple(v_1750) else caught-fail) in
                                    {7976}let (psk_197: preSharedKey,early_secret_131: bitstring,valid_41: bool,safe_psk_47: bool) = (if v_1743 then (if v_1749 then (NoPsk,es_131,true,false) else fail-any) else (if v_1751 then (psk_196,es_132,((psk_196 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_90)),is_safe_78) else fail-any)) in
                                    {7977}event Client_PSKChoosen(id_client_5,psk_197,safe_psk_47);
                                    {7978}if valid_41 then
                                    (
                                        {7981}new s_182[]: seed;
                                        {7979}let gxy_84: element = catch-fail(dh_decap_fun(g_48,gy_42,x_548)) in
                                        {7980}let v_1752: bool = not-caught-fail(gxy_84) in
                                        {7982}let gxy_85: element = (if v_1752 then gxy_84 else dh_f(s_182)) in
                                        {7983}event Client_DH_gxy(id_client_5,gxy_85);
                                        {7985}let m_172: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {7986}let v_1753: bool = not-caught-fail(m_172) in
                                        {7987}let h_462: bitstring = (if v_1753 then catch-fail(hash(@8_backend_h,m_172)) else caught-fail) in
                                        {7988}let v_1754: bool = not-caught-fail(h_462) in
                                        {7984}let l_483: label = tls13_derived in
                                        {7989}let x_550: bitstring = (if v_1754 then (l_483,h_462) else caught-fail) in
                                        {7990}let extra_91: bitstring = catch-fail((if v_1753 then (if v_1754 then hmac(@8_backend_h,early_secret_131,x_550) else fail-any) else fail-any)) in
                                        {7991}let v_1755: bool = not-caught-fail(extra_91) in
                                        {7992}let handshake_secret_42: bitstring = (if v_1755 then hmac(@8_backend_h,extra_91,gxy_85) else fail-any) in
                                        {7994}let m_173: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {7995}let v_1756: bool = not-caught-fail(m_173) in
                                        {7996}let h_463: bitstring = (if v_1756 then catch-fail(hash(@8_backend_h,m_173)) else caught-fail) in
                                        {7997}let v_1757: bool = not-caught-fail(h_463) in
                                        {7993}let l_484: label = tls13_derived in
                                        {7998}let x_551: bitstring = (if v_1757 then (l_484,h_463) else caught-fail) in
                                        {7999}let extra_92: bitstring = catch-fail((if v_1756 then (if v_1757 then hmac(@8_backend_h,handshake_secret_42,x_551) else fail-any) else fail-any)) in
                                        {8000}let v_1758: bool = not-caught-fail(extra_92) in
                                        {8001}let k_178: bitstring = (if v_1758 then zero else caught-fail) in
                                        {8002}let master_secret_91: bitstring = (if v_1758 then catch-fail(hmac(@8_backend_h,handshake_secret_42,k_178)) else caught-fail) in
                                        {8003}let v_1759: bool = not-caught-fail(master_secret_91) in
                                        {7950}let cur_log2_89: bitstring = (cur_log_IN1_HRR_IN2_11,server_hello'_32) in
                                        {8005}let h_464: bitstring = (if v_1759 then catch-fail(hash(@8_backend_h,cur_log2_89)) else caught-fail) in
                                        {8006}let v_1760: bool = not-caught-fail(h_464) in
                                        {8004}let l_485: label = (if v_1759 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {8007}let x_552: bitstring = (if v_1760 then (l_485,h_464) else caught-fail) in
                                        {8008}let client_hts_42: bitstring = (if v_1759 then catch-fail((if v_1760 then hmac(@8_backend_h,handshake_secret_42,x_552) else fail-any)) else caught-fail) in
                                        {8009}let v_1761: bool = not-caught-fail(client_hts_42) in
                                        {8011}let h_465: bitstring = (if v_1761 then catch-fail(hash(@8_backend_h,cur_log2_89)) else caught-fail) in
                                        {8012}let v_1762: bool = not-caught-fail(h_465) in
                                        {8010}let l_486: label = (if v_1761 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {8013}let x_553: bitstring = (if v_1762 then (l_486,h_465) else caught-fail) in
                                        {8014}let server_hts_42: bitstring = (if v_1761 then catch-fail((if v_1762 then hmac(@8_backend_h,handshake_secret_42,x_553) else fail-any)) else caught-fail) in
                                        {8015}let v_1763: bool = not-caught-fail(server_hts_42) in
                                        {8017}let h_466: bitstring = (if v_1763 then zero else caught-fail) in
                                        {8016}let l_487: label = (if v_1763 then tls13_key else caught-fail) in
                                        {8018}let x_554: bitstring = (if v_1763 then (l_487,h_466) else caught-fail) in
                                        {8019}let client_wkh_42: bitstring = (if v_1763 then catch-fail(hmac(@8_backend_h,client_hts_42,x_554)) else caught-fail) in
                                        {8020}let v_1764: bool = not-caught-fail(client_wkh_42) in
                                        {8022}let h_467: bitstring = (if v_1764 then zero else caught-fail) in
                                        {8021}let l_488: label = (if v_1764 then tls13_key else caught-fail) in
                                        {8023}let x_555: bitstring = (if v_1764 then (l_488,h_467) else caught-fail) in
                                        {8024}let server_wkh_42: bitstring = (if v_1764 then catch-fail(hmac(@8_backend_h,server_hts_42,x_555)) else caught-fail) in
                                        {8025}let v_1765: bool = not-caught-fail(server_wkh_42) in
                                        {8027}let h_468: bitstring = (if v_1765 then zero else caught-fail) in
                                        {8026}let l_489: label = (if v_1765 then tls13_finished else caught-fail) in
                                        {8028}let x_556: bitstring = (if v_1765 then (l_489,h_468) else caught-fail) in
                                        {8029}let client_fk_42: bitstring = (if v_1765 then catch-fail(hmac(@8_backend_h,client_hts_42,x_556)) else caught-fail) in
                                        {8030}let v_1766: bool = not-caught-fail(client_fk_42) in
                                        {8032}let h_469: bitstring = (if v_1766 then zero else caught-fail) in
                                        {8031}let l_490: label = (if v_1766 then tls13_finished else caught-fail) in
                                        {8033}let x_557: bitstring = (if v_1766 then (l_490,h_469) else caught-fail) in
                                        {8034}let server_fk_42: bitstring = (if v_1766 then catch-fail(hmac(@8_backend_h,server_hts_42,x_557)) else caught-fail) in
                                        {8035}let v_1767: bool = not-caught-fail(server_fk_42) in
                                        {8036}let (master_secret_92: bitstring,chk_49: aead_key,shk_48: aead_key,cfin_49: mac_key,sfin_48: mac_key) = (if v_1758 then (if v_1759 then (if v_1761 then (if v_1763 then (if v_1764 then (if v_1765 then (if v_1766 then (if v_1767 then (master_secret_91,client_wkh_42,server_wkh_42,client_fk_42,server_fk_42) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {8037}event Client_chk(id_client_5,chk_49);
                                        {8038}event Client_shk(id_client_5,shk_48);
                                        {8039}event Client_cfin(id_client_5,cfin_49);
                                        {8040}event Client_sfin(id_client_5,sfin_48);
                                        {8041}in(io, enc_ee_msg_41: bitstring);
                                        {8042}let ee_msg_46: msg = aead_dec(@8_backend_a,shk_48,0,zero,enc_ee_msg_41) in
                                        {8043}let EE(ech_ee_41: echExt,extra_ee_41: extraExt) = ee_msg_46 in
                                        {8044}let cur_log2_90: bitstring = (cur_log2_89,ee_msg_46) in
                                        {8045}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_11,sr_52,@8_backend_h,@8_backend_a,c_dom_7,backend_dom_1,psk_197,safe_psk_47,@8_comp_psk,master_secret_92,chk_49,0,shk_48,1,cfin_49,sfin_48,cur_log2_90)))
                                    )
                                    else
                                        {8046}out(io, illegal_parameter)
                                )
                                else
                                    {8047}out(io, illegal_parameter)
                        )
                        else
                            {8049}let ech_config(config_id_15: configId,ech_g_15: group,pkR_17: element,o_dom_11: domain,ech_h_15: hash_alg,ech_a_15: aead_alg) = ech_conf_2 in
                            {8050}new rand24_20[]: bytes24;
                            {8051}new rand8_20[]: bytes8;
                            {8054}new s_183[]: seed;
                            {8055}let gx_47: element = dh_pub(@8_tls_g,dh_k(s_183)) in
                            {8056}let v_1768: bitstring = (dh_k(s_183),gx_47) in
                            {8057}let v_1769: bool = success?(1-proj-2-tuple(v_1768)) in
                            {8058}let gx_48: element = (if v_1769 then 2-proj-2-tuple(v_1768) else caught-fail) in
                            {8059}let x_558: bitstring = (if v_1769 then 1-proj-2-tuple(v_1768) else caught-fail) in
                            {8053}let send_key_share_11: bool = true in
                            {8060}let kex_19: kex_alg = (if v_1769 then (if send_key_share_11 then DHE_kex(@8_tls_g,gx_48) else DHE_group(@8_tls_g)) else caught-fail) in
                            {8061}let (o_kex_ext_9: keyShareExt,kex_data_10: bitstring) = (if v_1769 then (client_kex_ext(kex_19),(x_558,@8_tls_g)) else fail-any) in
                            {8052}let o_cr_13: bytes32 = B32(rand24_20,rand8_20) in
                            {8048}let cur_log_OU1_HRR_3: bitstring = ((zero,o_client_hello_5),server_hello_7) in
                            {8062}if @8_use_grease then
                            (
                                {8064}if @8_use_psk then
                                (
                                    {8063}let extra_93: extraExt = empty_extra_ext in
                                    {8065}let (psk_198: preSharedKey,id_92: identityPsk,old_es_13: bitstring,is_safe_79: bool) = psk_data_43 in
                                    (
                                        {8069}let k_179: bitstring = catch-fail(psk2b(psk_198)) in
                                        {8070}let v_1770: bool = not-caught-fail(k_179) in
                                        {8068}let s_184: bitstring = zero in
                                        {8071}let early_secret_132: bitstring = catch-fail((if v_1770 then hmac(@8_tls_h,s_184,k_179) else fail-any)) in
                                        {8072}let v_1771: bool = not-caught-fail(early_secret_132) in
                                        {8074}let m_174: bitstring = (if v_1771 then zero else caught-fail) in
                                        {8075}let h_470: bitstring = (if v_1771 then catch-fail(hash(@8_tls_h,m_174)) else caught-fail) in
                                        {8076}let v_1772: bool = not-caught-fail(h_470) in
                                        {8073}let l_491: label = (if v_1771 then tls13_ext_res_binder else caught-fail) in
                                        {8077}let x_559: bitstring = (if v_1772 then (l_491,h_470) else caught-fail) in
                                        {8078}let binder_key_88: bitstring = (if v_1771 then catch-fail((if v_1772 then hmac(@8_tls_h,early_secret_132,x_559) else fail-any)) else caught-fail) in
                                        {8079}let v_1773: bool = not-caught-fail(binder_key_88) in
                                        {8080}let v_1774: bitstring = catch-fail((if v_1771 then (if v_1773 then (early_secret_132,binder_key_88) else fail-any) else fail-any)) in
                                        {8081}let v_1775: bool = (not-caught-fail(v_1774) && success?(1-proj-2-tuple(v_1774))) in
                                        {8082}let kb_88: mac_key = (if v_1775 then 2-proj-2-tuple(v_1774) else caught-fail) in
                                        {8083}let es_133: bitstring = (if v_1775 then 1-proj-2-tuple(v_1774) else caught-fail) in
                                        {8066}let offer_39: params = nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_9,SNI(o_dom_11),o_ech_ext_16,extra_93,trunc_client_psk_ext(id_92)) in
                                        {8067}let cur_log'_27: bitstring = (cur_log_OU1_HRR_3,CH(o_cr_13,offer_39)) in
                                        {8084}let binders_26: bitstring = (if v_1775 then catch-fail(hmac(@8_tls_h,kb_88,cur_log'_27)) else caught-fail) in
                                        {8085}let v_1776: bool = not-caught-fail(binders_26) in
                                        {8086}let v_1777: bitstring = catch-fail((if v_1775 then (if v_1776 then (client_psk_ext(id_92,binders_26),(psk_198,id_92,es_133,is_safe_79)) else fail-any) else fail-any)) in
                                        {8087}let v_1778: bool = (not-caught-fail(v_1777) && success?(1-proj-2-tuple(v_1777))) in
                                        {8088}let psk_data_47: bitstring = (if v_1778 then 2-proj-2-tuple(v_1777) else caught-fail) in
                                        {8089}let psk_ext_91: preSharedKeyExt = (if v_1778 then 1-proj-2-tuple(v_1777) else caught-fail) in
                                        {8090}let o_offer_32: params = (if v_1778 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_9,SNI(o_dom_11),o_ech_ext_16,empty_extra_ext,psk_ext_91) else caught-fail) in
                                        {8091}let (client_hello'_24: msg,cr'_26: bytes32,kex_data'_21: bitstring,psk_data'_36: bitstring) = (if v_1778 then (CH(o_cr_13,o_offer_32),o_cr_13,kex_data_10,psk_data_47) else fail-any) in
                                        {8092}out(io, client_hello'_24);
                                        {8094}in(io, server_hello'_33: msg);
                                        {8095}let SH(sr'_21: bytes32,mode'_21: params) = server_hello'_33 in
                                        (
                                            {8096}if (sr'_21 = B32(HRR24,HRR8)) then
                                                {8097}out(io, unexpected_message)
                                            else
                                                {8098}let (x_560: bitstring,g_49: group) = kex_data'_21 in
                                                {8099}let (psk_offer_42: preSharedKey,id_offer_42: identityPsk,es_offer_42: bitstring,is_safe_offer_42: bool) = psk_data'_36 in
                                                {8100}event Client_PSKOffer(id_client_5,psk_offer_42,id_offer_42,is_safe_offer_42);
                                                {8101}event Client_Rand_client(id_client_5,cr'_26);
                                                {8102}event Client_DH_client(id_client_5,dh_pub(g_49,x_560));
                                                {8103}event Client_server_domain(id_client_5,o_dom_8);
                                                {8104}let SH(sr_53: bytes32,mode_49: params) = server_hello'_33 in
                                                {8105}event Client_Rand_server(id_client_5,sr_53);
                                                {8106}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_49,gy_43: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_92: preSharedKeyExt) = mode_49 in
                                                (
                                                    {8108}event Client_DH_server(id_client_5,gy_43);
                                                    {8109}let v_1779: bool = (psk_ext_92 = empty_psk_ext) in
                                                    {8110}let psk_199: preSharedKey = (if v_1779 then NoPsk else caught-fail) in
                                                    {8112}let k_180: bitstring = (if v_1779 then catch-fail(psk2b(psk_199)) else caught-fail) in
                                                    {8113}let v_1780: bool = not-caught-fail(k_180) in
                                                    {8111}let s_185: bitstring = (if v_1779 then zero else caught-fail) in
                                                    {8114}let early_secret_133: bitstring = (if v_1779 then catch-fail((if v_1780 then hmac(@8_tls_h,s_185,k_180) else fail-any)) else caught-fail) in
                                                    {8115}let v_1781: bool = not-caught-fail(early_secret_133) in
                                                    {8117}let m_175: bitstring = (if v_1781 then zero else caught-fail) in
                                                    {8118}let h_471: bitstring = (if v_1781 then catch-fail(hash(@8_tls_h,m_175)) else caught-fail) in
                                                    {8119}let v_1782: bool = not-caught-fail(h_471) in
                                                    {8116}let l_492: label = (if v_1781 then tls13_ext_res_binder else caught-fail) in
                                                    {8120}let x_561: bitstring = (if v_1782 then (l_492,h_471) else caught-fail) in
                                                    {8121}let binder_key_89: bitstring = (if v_1781 then catch-fail((if v_1782 then hmac(@8_tls_h,early_secret_133,x_561) else fail-any)) else caught-fail) in
                                                    {8122}let v_1783: bool = not-caught-fail(binder_key_89) in
                                                    {8123}let v_1784: bitstring = (if v_1779 then catch-fail((if v_1781 then (if v_1783 then (early_secret_133,binder_key_89) else fail-any) else fail-any)) else caught-fail) in
                                                    {8124}let v_1785: bool = (not-caught-fail(v_1784) && success?(1-proj-2-tuple(v_1784))) in
                                                    {8125}let kb_89: mac_key = (if v_1785 then 2-proj-2-tuple(v_1784) else caught-fail) in
                                                    {8126}let es_134: bitstring = (if v_1785 then 1-proj-2-tuple(v_1784) else caught-fail) in
                                                    {8127}let v_1786: bitstring = (if not(v_1779) then catch-fail(psk_data'_36) else caught-fail) in
                                                    {8128}let v_1787: bool = (not-caught-fail(v_1786) && success?(1-proj-4-tuple(v_1786))) in
                                                    {8129}let is_safe_80: bool = (if v_1787 then 4-proj-4-tuple(v_1786) else caught-fail) in
                                                    {8130}let es_135: bitstring = (if v_1787 then 3-proj-4-tuple(v_1786) else caught-fail) in
                                                    {8131}let id_93: identityPsk = (if v_1787 then 2-proj-4-tuple(v_1786) else caught-fail) in
                                                    {8132}let psk_200: preSharedKey = (if v_1787 then 1-proj-4-tuple(v_1786) else caught-fail) in
                                                    {8133}let (psk_201: preSharedKey,early_secret_134: bitstring,valid_42: bool,safe_psk_48: bool) = (if v_1779 then (if v_1785 then (NoPsk,es_134,true,false) else fail-any) else (if v_1787 then (psk_200,es_135,((psk_200 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_92)),is_safe_80) else fail-any)) in
                                                    {8134}event Client_PSKChoosen(id_client_5,psk_201,safe_psk_48);
                                                    {8135}if valid_42 then
                                                    (
                                                        {8138}new s_186[]: seed;
                                                        {8136}let gxy_86: element = catch-fail(dh_decap_fun(g_49,gy_43,x_560)) in
                                                        {8137}let v_1788: bool = not-caught-fail(gxy_86) in
                                                        {8139}let gxy_87: element = (if v_1788 then gxy_86 else dh_f(s_186)) in
                                                        {8140}event Client_DH_gxy(id_client_5,gxy_87);
                                                        {8142}let m_176: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {8143}let v_1789: bool = not-caught-fail(m_176) in
                                                        {8144}let h_472: bitstring = (if v_1789 then catch-fail(hash(@8_tls_h,m_176)) else caught-fail) in
                                                        {8145}let v_1790: bool = not-caught-fail(h_472) in
                                                        {8141}let l_493: label = tls13_derived in
                                                        {8146}let x_562: bitstring = (if v_1790 then (l_493,h_472) else caught-fail) in
                                                        {8147}let extra_94: bitstring = catch-fail((if v_1789 then (if v_1790 then hmac(@8_tls_h,early_secret_134,x_562) else fail-any) else fail-any)) in
                                                        {8148}let v_1791: bool = not-caught-fail(extra_94) in
                                                        {8149}let handshake_secret_43: bitstring = (if v_1791 then hmac(@8_tls_h,extra_94,gxy_87) else fail-any) in
                                                        {8151}let m_177: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {8152}let v_1792: bool = not-caught-fail(m_177) in
                                                        {8153}let h_473: bitstring = (if v_1792 then catch-fail(hash(@8_tls_h,m_177)) else caught-fail) in
                                                        {8154}let v_1793: bool = not-caught-fail(h_473) in
                                                        {8150}let l_494: label = tls13_derived in
                                                        {8155}let x_563: bitstring = (if v_1793 then (l_494,h_473) else caught-fail) in
                                                        {8156}let extra_95: bitstring = catch-fail((if v_1792 then (if v_1793 then hmac(@8_tls_h,handshake_secret_43,x_563) else fail-any) else fail-any)) in
                                                        {8157}let v_1794: bool = not-caught-fail(extra_95) in
                                                        {8158}let k_181: bitstring = (if v_1794 then zero else caught-fail) in
                                                        {8159}let master_secret_93: bitstring = (if v_1794 then catch-fail(hmac(@8_tls_h,handshake_secret_43,k_181)) else caught-fail) in
                                                        {8160}let v_1795: bool = not-caught-fail(master_secret_93) in
                                                        {8093}let cur_log_OU1_HRR_OU2_12: bitstring = (cur_log_OU1_HRR_3,client_hello'_24) in
                                                        {8107}let cur_log2_91: bitstring = (cur_log_OU1_HRR_OU2_12,server_hello'_33) in
                                                        {8162}let h_474: bitstring = (if v_1795 then catch-fail(hash(@8_tls_h,cur_log2_91)) else caught-fail) in
                                                        {8163}let v_1796: bool = not-caught-fail(h_474) in
                                                        {8161}let l_495: label = (if v_1795 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {8164}let x_564: bitstring = (if v_1796 then (l_495,h_474) else caught-fail) in
                                                        {8165}let client_hts_43: bitstring = (if v_1795 then catch-fail((if v_1796 then hmac(@8_tls_h,handshake_secret_43,x_564) else fail-any)) else caught-fail) in
                                                        {8166}let v_1797: bool = not-caught-fail(client_hts_43) in
                                                        {8168}let h_475: bitstring = (if v_1797 then catch-fail(hash(@8_tls_h,cur_log2_91)) else caught-fail) in
                                                        {8169}let v_1798: bool = not-caught-fail(h_475) in
                                                        {8167}let l_496: label = (if v_1797 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {8170}let x_565: bitstring = (if v_1798 then (l_496,h_475) else caught-fail) in
                                                        {8171}let server_hts_43: bitstring = (if v_1797 then catch-fail((if v_1798 then hmac(@8_tls_h,handshake_secret_43,x_565) else fail-any)) else caught-fail) in
                                                        {8172}let v_1799: bool = not-caught-fail(server_hts_43) in
                                                        {8174}let h_476: bitstring = (if v_1799 then zero else caught-fail) in
                                                        {8173}let l_497: label = (if v_1799 then tls13_key else caught-fail) in
                                                        {8175}let x_566: bitstring = (if v_1799 then (l_497,h_476) else caught-fail) in
                                                        {8176}let client_wkh_43: bitstring = (if v_1799 then catch-fail(hmac(@8_tls_h,client_hts_43,x_566)) else caught-fail) in
                                                        {8177}let v_1800: bool = not-caught-fail(client_wkh_43) in
                                                        {8179}let h_477: bitstring = (if v_1800 then zero else caught-fail) in
                                                        {8178}let l_498: label = (if v_1800 then tls13_key else caught-fail) in
                                                        {8180}let x_567: bitstring = (if v_1800 then (l_498,h_477) else caught-fail) in
                                                        {8181}let server_wkh_43: bitstring = (if v_1800 then catch-fail(hmac(@8_tls_h,server_hts_43,x_567)) else caught-fail) in
                                                        {8182}let v_1801: bool = not-caught-fail(server_wkh_43) in
                                                        {8184}let h_478: bitstring = (if v_1801 then zero else caught-fail) in
                                                        {8183}let l_499: label = (if v_1801 then tls13_finished else caught-fail) in
                                                        {8185}let x_568: bitstring = (if v_1801 then (l_499,h_478) else caught-fail) in
                                                        {8186}let client_fk_43: bitstring = (if v_1801 then catch-fail(hmac(@8_tls_h,client_hts_43,x_568)) else caught-fail) in
                                                        {8187}let v_1802: bool = not-caught-fail(client_fk_43) in
                                                        {8189}let h_479: bitstring = (if v_1802 then zero else caught-fail) in
                                                        {8188}let l_500: label = (if v_1802 then tls13_finished else caught-fail) in
                                                        {8190}let x_569: bitstring = (if v_1802 then (l_500,h_479) else caught-fail) in
                                                        {8191}let server_fk_43: bitstring = (if v_1802 then catch-fail(hmac(@8_tls_h,server_hts_43,x_569)) else caught-fail) in
                                                        {8192}let v_1803: bool = not-caught-fail(server_fk_43) in
                                                        {8193}let (master_secret_94: bitstring,chk_50: aead_key,shk_49: aead_key,cfin_50: mac_key,sfin_49: mac_key) = (if v_1794 then (if v_1795 then (if v_1797 then (if v_1799 then (if v_1800 then (if v_1801 then (if v_1802 then (if v_1803 then (master_secret_93,client_wkh_43,server_wkh_43,client_fk_43,server_fk_43) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {8194}event Client_chk(id_client_5,chk_50);
                                                        {8195}event Client_shk(id_client_5,shk_49);
                                                        {8196}event Client_cfin(id_client_5,cfin_50);
                                                        {8197}event Client_sfin(id_client_5,sfin_49);
                                                        {8198}in(io, enc_ee_msg_42: bitstring);
                                                        {8199}let ee_msg_47: msg = aead_dec(@8_tls_a,shk_49,0,zero,enc_ee_msg_42) in
                                                        {8200}let EE(ech_ee_42: echExt,extra_ee_42: extraExt) = ee_msg_47 in
                                                        {8201}let cur_log2_92: bitstring = (cur_log2_91,ee_msg_47) in
                                                        {8202}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_26,sr_53,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_201,safe_psk_48,@8_comp_psk,master_secret_94,chk_50,0,shk_49,1,cfin_50,sfin_49,cur_log2_92)))
                                                    )
                                                    else
                                                        {8203}out(io, illegal_parameter)
                                                )
                                                else
                                                    {8204}out(io, illegal_parameter)
                                        )
                                        else
                                            {8205}out(io, unexpected_message)
                                    )
                                    else
                                        {8355}get pre_shared_keys(c_dom'_14: domain,=o_dom_11,=@8_tls_h,id_94: identityPsk,psk_202: preSharedKey,idP_16: idProc,is_safe_81: bool) in
                                        {8206}event Selected_one_time_used_psk(id_client_5,psk_202,is_safe_81);
                                        {8207}event Selected_psk(c_dom_7,c_dom'_14,idP_16,is_safe_81);
                                        {8208}event Selected_psk_no_missmatch(id_client_5,o_dom_11,@8_tls_h,psk_202,id_94);
                                        {8209}event Selected_psk_with_ID(c_dom_7,c_dom'_14,id_94,idP_16,is_safe_81);
                                        {8210}let v_1804: bitstring = (id_94,psk_202,is_safe_81) in
                                        {8211}let v_1805: bool = success?(1-proj-3-tuple(v_1804)) in
                                        {8212}let is_safe_82: bool = (if v_1805 then 3-proj-3-tuple(v_1804) else caught-fail) in
                                        {8213}let psk_203: preSharedKey = (if v_1805 then 2-proj-3-tuple(v_1804) else caught-fail) in
                                        {8214}let id_95: identityPsk = (if v_1805 then 1-proj-3-tuple(v_1804) else caught-fail) in
                                        {8218}let k_182: bitstring = (if v_1805 then catch-fail(psk2b(psk_203)) else caught-fail) in
                                        {8219}let v_1806: bool = not-caught-fail(k_182) in
                                        {8217}let s_187: bitstring = (if v_1805 then zero else caught-fail) in
                                        {8220}let early_secret_135: bitstring = (if v_1805 then catch-fail((if v_1806 then hmac(@8_tls_h,s_187,k_182) else fail-any)) else caught-fail) in
                                        {8221}let v_1807: bool = not-caught-fail(early_secret_135) in
                                        {8223}let m_178: bitstring = (if v_1807 then zero else caught-fail) in
                                        {8224}let h_480: bitstring = (if v_1807 then catch-fail(hash(@8_tls_h,m_178)) else caught-fail) in
                                        {8225}let v_1808: bool = not-caught-fail(h_480) in
                                        {8222}let l_501: label = (if v_1807 then tls13_ext_res_binder else caught-fail) in
                                        {8226}let x_570: bitstring = (if v_1808 then (l_501,h_480) else caught-fail) in
                                        {8227}let binder_key_90: bitstring = (if v_1807 then catch-fail((if v_1808 then hmac(@8_tls_h,early_secret_135,x_570) else fail-any)) else caught-fail) in
                                        {8228}let v_1809: bool = not-caught-fail(binder_key_90) in
                                        {8229}let v_1810: bitstring = (if v_1805 then catch-fail((if v_1807 then (if v_1809 then (early_secret_135,binder_key_90) else fail-any) else fail-any)) else caught-fail) in
                                        {8230}let v_1811: bool = (not-caught-fail(v_1810) && success?(1-proj-2-tuple(v_1810))) in
                                        {8231}let kb_90: mac_key = (if v_1811 then 2-proj-2-tuple(v_1810) else caught-fail) in
                                        {8232}let es_136: bitstring = (if v_1811 then 1-proj-2-tuple(v_1810) else caught-fail) in
                                        {8215}let offer_40: params = (if v_1805 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_9,SNI(o_dom_11),o_ech_ext_16,extra_93,trunc_client_psk_ext(id_95)) else caught-fail) in
                                        {8216}let cur_log'_28: bitstring = (if v_1805 then (cur_log_OU1_HRR_3,CH(o_cr_13,offer_40)) else caught-fail) in
                                        {8233}let binders_27: bitstring = (if v_1811 then catch-fail(hmac(@8_tls_h,kb_90,cur_log'_28)) else caught-fail) in
                                        {8234}let v_1812: bool = not-caught-fail(binders_27) in
                                        {8235}let v_1813: bitstring = catch-fail((if v_1805 then (if v_1811 then (if v_1812 then (client_psk_ext(id_95,binders_27),(psk_203,id_95,es_136,is_safe_82)) else fail-any) else fail-any) else fail-any)) in
                                        {8236}let v_1814: bool = (not-caught-fail(v_1813) && success?(1-proj-2-tuple(v_1813))) in
                                        {8237}let psk_data_48: bitstring = (if v_1814 then 2-proj-2-tuple(v_1813) else caught-fail) in
                                        {8238}let psk_ext_93: preSharedKeyExt = (if v_1814 then 1-proj-2-tuple(v_1813) else caught-fail) in
                                        {8239}let o_offer_33: params = (if v_1814 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_9,SNI(o_dom_11),o_ech_ext_16,empty_extra_ext,psk_ext_93) else caught-fail) in
                                        {8240}let (client_hello'_25: msg,cr'_27: bytes32,kex_data'_22: bitstring,psk_data'_37: bitstring) = (if v_1814 then (CH(o_cr_13,o_offer_33),o_cr_13,kex_data_10,psk_data_48) else fail-any) in
                                        {8241}out(io, client_hello'_25);
                                        {8243}in(io, server_hello'_34: msg);
                                        {8244}let SH(sr'_22: bytes32,mode'_22: params) = server_hello'_34 in
                                        (
                                            {8245}if (sr'_22 = B32(HRR24,HRR8)) then
                                                {8246}out(io, unexpected_message)
                                            else
                                                {8247}let (x_571: bitstring,g_50: group) = kex_data'_22 in
                                                {8248}let (psk_offer_43: preSharedKey,id_offer_43: identityPsk,es_offer_43: bitstring,is_safe_offer_43: bool) = psk_data'_37 in
                                                {8249}event Client_PSKOffer(id_client_5,psk_offer_43,id_offer_43,is_safe_offer_43);
                                                {8250}event Client_Rand_client(id_client_5,cr'_27);
                                                {8251}event Client_DH_client(id_client_5,dh_pub(g_50,x_571));
                                                {8252}event Client_server_domain(id_client_5,o_dom_8);
                                                {8253}let SH(sr_54: bytes32,mode_50: params) = server_hello'_34 in
                                                {8254}event Client_Rand_server(id_client_5,sr_54);
                                                {8255}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_50,gy_44: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_94: preSharedKeyExt) = mode_50 in
                                                (
                                                    {8257}event Client_DH_server(id_client_5,gy_44);
                                                    {8258}let v_1815: bool = (psk_ext_94 = empty_psk_ext) in
                                                    {8259}let psk_204: preSharedKey = (if v_1815 then NoPsk else caught-fail) in
                                                    {8261}let k_183: bitstring = (if v_1815 then catch-fail(psk2b(psk_204)) else caught-fail) in
                                                    {8262}let v_1816: bool = not-caught-fail(k_183) in
                                                    {8260}let s_188: bitstring = (if v_1815 then zero else caught-fail) in
                                                    {8263}let early_secret_136: bitstring = (if v_1815 then catch-fail((if v_1816 then hmac(@8_tls_h,s_188,k_183) else fail-any)) else caught-fail) in
                                                    {8264}let v_1817: bool = not-caught-fail(early_secret_136) in
                                                    {8266}let m_179: bitstring = (if v_1817 then zero else caught-fail) in
                                                    {8267}let h_481: bitstring = (if v_1817 then catch-fail(hash(@8_tls_h,m_179)) else caught-fail) in
                                                    {8268}let v_1818: bool = not-caught-fail(h_481) in
                                                    {8265}let l_502: label = (if v_1817 then tls13_ext_res_binder else caught-fail) in
                                                    {8269}let x_572: bitstring = (if v_1818 then (l_502,h_481) else caught-fail) in
                                                    {8270}let binder_key_91: bitstring = (if v_1817 then catch-fail((if v_1818 then hmac(@8_tls_h,early_secret_136,x_572) else fail-any)) else caught-fail) in
                                                    {8271}let v_1819: bool = not-caught-fail(binder_key_91) in
                                                    {8272}let v_1820: bitstring = (if v_1815 then catch-fail((if v_1817 then (if v_1819 then (early_secret_136,binder_key_91) else fail-any) else fail-any)) else caught-fail) in
                                                    {8273}let v_1821: bool = (not-caught-fail(v_1820) && success?(1-proj-2-tuple(v_1820))) in
                                                    {8274}let kb_91: mac_key = (if v_1821 then 2-proj-2-tuple(v_1820) else caught-fail) in
                                                    {8275}let es_137: bitstring = (if v_1821 then 1-proj-2-tuple(v_1820) else caught-fail) in
                                                    {8276}let v_1822: bitstring = (if not(v_1815) then catch-fail(psk_data'_37) else caught-fail) in
                                                    {8277}let v_1823: bool = (not-caught-fail(v_1822) && success?(1-proj-4-tuple(v_1822))) in
                                                    {8278}let is_safe_83: bool = (if v_1823 then 4-proj-4-tuple(v_1822) else caught-fail) in
                                                    {8279}let es_138: bitstring = (if v_1823 then 3-proj-4-tuple(v_1822) else caught-fail) in
                                                    {8280}let id_96: identityPsk = (if v_1823 then 2-proj-4-tuple(v_1822) else caught-fail) in
                                                    {8281}let psk_205: preSharedKey = (if v_1823 then 1-proj-4-tuple(v_1822) else caught-fail) in
                                                    {8282}let (psk_206: preSharedKey,early_secret_137: bitstring,valid_43: bool,safe_psk_49: bool) = (if v_1815 then (if v_1821 then (NoPsk,es_137,true,false) else fail-any) else (if v_1823 then (psk_205,es_138,((psk_205 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_94)),is_safe_83) else fail-any)) in
                                                    {8283}event Client_PSKChoosen(id_client_5,psk_206,safe_psk_49);
                                                    {8284}if valid_43 then
                                                    (
                                                        {8287}new s_189[]: seed;
                                                        {8285}let gxy_88: element = catch-fail(dh_decap_fun(g_50,gy_44,x_571)) in
                                                        {8286}let v_1824: bool = not-caught-fail(gxy_88) in
                                                        {8288}let gxy_89: element = (if v_1824 then gxy_88 else dh_f(s_189)) in
                                                        {8289}event Client_DH_gxy(id_client_5,gxy_89);
                                                        {8291}let m_180: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {8292}let v_1825: bool = not-caught-fail(m_180) in
                                                        {8293}let h_482: bitstring = (if v_1825 then catch-fail(hash(@8_tls_h,m_180)) else caught-fail) in
                                                        {8294}let v_1826: bool = not-caught-fail(h_482) in
                                                        {8290}let l_503: label = tls13_derived in
                                                        {8295}let x_573: bitstring = (if v_1826 then (l_503,h_482) else caught-fail) in
                                                        {8296}let extra_96: bitstring = catch-fail((if v_1825 then (if v_1826 then hmac(@8_tls_h,early_secret_137,x_573) else fail-any) else fail-any)) in
                                                        {8297}let v_1827: bool = not-caught-fail(extra_96) in
                                                        {8298}let handshake_secret_44: bitstring = (if v_1827 then hmac(@8_tls_h,extra_96,gxy_89) else fail-any) in
                                                        {8300}let m_181: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {8301}let v_1828: bool = not-caught-fail(m_181) in
                                                        {8302}let h_483: bitstring = (if v_1828 then catch-fail(hash(@8_tls_h,m_181)) else caught-fail) in
                                                        {8303}let v_1829: bool = not-caught-fail(h_483) in
                                                        {8299}let l_504: label = tls13_derived in
                                                        {8304}let x_574: bitstring = (if v_1829 then (l_504,h_483) else caught-fail) in
                                                        {8305}let extra_97: bitstring = catch-fail((if v_1828 then (if v_1829 then hmac(@8_tls_h,handshake_secret_44,x_574) else fail-any) else fail-any)) in
                                                        {8306}let v_1830: bool = not-caught-fail(extra_97) in
                                                        {8307}let k_184: bitstring = (if v_1830 then zero else caught-fail) in
                                                        {8308}let master_secret_95: bitstring = (if v_1830 then catch-fail(hmac(@8_tls_h,handshake_secret_44,k_184)) else caught-fail) in
                                                        {8309}let v_1831: bool = not-caught-fail(master_secret_95) in
                                                        {8242}let cur_log_OU1_HRR_OU2_13: bitstring = (cur_log_OU1_HRR_3,client_hello'_25) in
                                                        {8256}let cur_log2_93: bitstring = (cur_log_OU1_HRR_OU2_13,server_hello'_34) in
                                                        {8311}let h_484: bitstring = (if v_1831 then catch-fail(hash(@8_tls_h,cur_log2_93)) else caught-fail) in
                                                        {8312}let v_1832: bool = not-caught-fail(h_484) in
                                                        {8310}let l_505: label = (if v_1831 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {8313}let x_575: bitstring = (if v_1832 then (l_505,h_484) else caught-fail) in
                                                        {8314}let client_hts_44: bitstring = (if v_1831 then catch-fail((if v_1832 then hmac(@8_tls_h,handshake_secret_44,x_575) else fail-any)) else caught-fail) in
                                                        {8315}let v_1833: bool = not-caught-fail(client_hts_44) in
                                                        {8317}let h_485: bitstring = (if v_1833 then catch-fail(hash(@8_tls_h,cur_log2_93)) else caught-fail) in
                                                        {8318}let v_1834: bool = not-caught-fail(h_485) in
                                                        {8316}let l_506: label = (if v_1833 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {8319}let x_576: bitstring = (if v_1834 then (l_506,h_485) else caught-fail) in
                                                        {8320}let server_hts_44: bitstring = (if v_1833 then catch-fail((if v_1834 then hmac(@8_tls_h,handshake_secret_44,x_576) else fail-any)) else caught-fail) in
                                                        {8321}let v_1835: bool = not-caught-fail(server_hts_44) in
                                                        {8323}let h_486: bitstring = (if v_1835 then zero else caught-fail) in
                                                        {8322}let l_507: label = (if v_1835 then tls13_key else caught-fail) in
                                                        {8324}let x_577: bitstring = (if v_1835 then (l_507,h_486) else caught-fail) in
                                                        {8325}let client_wkh_44: bitstring = (if v_1835 then catch-fail(hmac(@8_tls_h,client_hts_44,x_577)) else caught-fail) in
                                                        {8326}let v_1836: bool = not-caught-fail(client_wkh_44) in
                                                        {8328}let h_487: bitstring = (if v_1836 then zero else caught-fail) in
                                                        {8327}let l_508: label = (if v_1836 then tls13_key else caught-fail) in
                                                        {8329}let x_578: bitstring = (if v_1836 then (l_508,h_487) else caught-fail) in
                                                        {8330}let server_wkh_44: bitstring = (if v_1836 then catch-fail(hmac(@8_tls_h,server_hts_44,x_578)) else caught-fail) in
                                                        {8331}let v_1837: bool = not-caught-fail(server_wkh_44) in
                                                        {8333}let h_488: bitstring = (if v_1837 then zero else caught-fail) in
                                                        {8332}let l_509: label = (if v_1837 then tls13_finished else caught-fail) in
                                                        {8334}let x_579: bitstring = (if v_1837 then (l_509,h_488) else caught-fail) in
                                                        {8335}let client_fk_44: bitstring = (if v_1837 then catch-fail(hmac(@8_tls_h,client_hts_44,x_579)) else caught-fail) in
                                                        {8336}let v_1838: bool = not-caught-fail(client_fk_44) in
                                                        {8338}let h_489: bitstring = (if v_1838 then zero else caught-fail) in
                                                        {8337}let l_510: label = (if v_1838 then tls13_finished else caught-fail) in
                                                        {8339}let x_580: bitstring = (if v_1838 then (l_510,h_489) else caught-fail) in
                                                        {8340}let server_fk_44: bitstring = (if v_1838 then catch-fail(hmac(@8_tls_h,server_hts_44,x_580)) else caught-fail) in
                                                        {8341}let v_1839: bool = not-caught-fail(server_fk_44) in
                                                        {8342}let (master_secret_96: bitstring,chk_51: aead_key,shk_50: aead_key,cfin_51: mac_key,sfin_50: mac_key) = (if v_1830 then (if v_1831 then (if v_1833 then (if v_1835 then (if v_1836 then (if v_1837 then (if v_1838 then (if v_1839 then (master_secret_95,client_wkh_44,server_wkh_44,client_fk_44,server_fk_44) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {8343}event Client_chk(id_client_5,chk_51);
                                                        {8344}event Client_shk(id_client_5,shk_50);
                                                        {8345}event Client_cfin(id_client_5,cfin_51);
                                                        {8346}event Client_sfin(id_client_5,sfin_50);
                                                        {8347}in(io, enc_ee_msg_43: bitstring);
                                                        {8348}let ee_msg_48: msg = aead_dec(@8_tls_a,shk_50,0,zero,enc_ee_msg_43) in
                                                        {8349}let EE(ech_ee_43: echExt,extra_ee_43: extraExt) = ee_msg_48 in
                                                        {8350}let cur_log2_94: bitstring = (cur_log2_93,ee_msg_48) in
                                                        {8351}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_27,sr_54,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_206,safe_psk_49,@8_comp_psk,master_secret_96,chk_51,0,shk_50,1,cfin_51,sfin_50,cur_log2_94)))
                                                    )
                                                    else
                                                        {8352}out(io, illegal_parameter)
                                                )
                                                else
                                                    {8353}out(io, illegal_parameter)
                                        )
                                        else
                                            {8354}out(io, unexpected_message)
                                )
                                else
                                    {8356}let psk_207: preSharedKey = NoPsk in
                                    {8358}let k_185: bitstring = catch-fail(psk2b(psk_207)) in
                                    {8359}let v_1840: bool = not-caught-fail(k_185) in
                                    {8357}let s_190: bitstring = zero in
                                    {8360}let early_secret_138: bitstring = catch-fail((if v_1840 then hmac(@8_tls_h,s_190,k_185) else fail-any)) in
                                    {8361}let v_1841: bool = not-caught-fail(early_secret_138) in
                                    {8363}let m_182: bitstring = (if v_1841 then zero else caught-fail) in
                                    {8364}let h_490: bitstring = (if v_1841 then catch-fail(hash(@8_tls_h,m_182)) else caught-fail) in
                                    {8365}let v_1842: bool = not-caught-fail(h_490) in
                                    {8362}let l_511: label = (if v_1841 then tls13_ext_res_binder else caught-fail) in
                                    {8366}let x_581: bitstring = (if v_1842 then (l_511,h_490) else caught-fail) in
                                    {8367}let binder_key_92: bitstring = (if v_1841 then catch-fail((if v_1842 then hmac(@8_tls_h,early_secret_138,x_581) else fail-any)) else caught-fail) in
                                    {8368}let v_1843: bool = not-caught-fail(binder_key_92) in
                                    {8369}let v_1844: bitstring = catch-fail((if v_1841 then (if v_1843 then (early_secret_138,binder_key_92) else fail-any) else fail-any)) in
                                    {8370}let v_1845: bool = (not-caught-fail(v_1844) && success?(1-proj-2-tuple(v_1844))) in
                                    {8371}let kb_92: mac_key = (if v_1845 then 2-proj-2-tuple(v_1844) else caught-fail) in
                                    {8372}let es_139: bitstring = (if v_1845 then 1-proj-2-tuple(v_1844) else caught-fail) in
                                    {8373}let v_1846: bitstring = catch-fail((if v_1845 then (empty_psk_ext,(NoPsk,zero,es_139,false)) else fail-any)) in
                                    {8374}let v_1847: bool = (not-caught-fail(v_1846) && success?(1-proj-2-tuple(v_1846))) in
                                    {8375}let psk_data_49: bitstring = (if v_1847 then 2-proj-2-tuple(v_1846) else caught-fail) in
                                    {8376}let psk_ext_95: preSharedKeyExt = (if v_1847 then 1-proj-2-tuple(v_1846) else caught-fail) in
                                    {8377}let o_offer_34: params = (if v_1847 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_9,SNI(o_dom_11),o_ech_ext_16,empty_extra_ext,psk_ext_95) else caught-fail) in
                                    {8378}let (client_hello'_26: msg,cr'_28: bytes32,kex_data'_23: bitstring,psk_data'_38: bitstring) = (if v_1847 then (CH(o_cr_13,o_offer_34),o_cr_13,kex_data_10,psk_data_49) else fail-any) in
                                    {8379}out(io, client_hello'_26);
                                    {8381}in(io, server_hello'_35: msg);
                                    {8382}let SH(sr'_23: bytes32,mode'_23: params) = server_hello'_35 in
                                    (
                                        {8383}if (sr'_23 = B32(HRR24,HRR8)) then
                                            {8384}out(io, unexpected_message)
                                        else
                                            {8385}let (x_582: bitstring,g_51: group) = kex_data'_23 in
                                            {8386}let (psk_offer_44: preSharedKey,id_offer_44: identityPsk,es_offer_44: bitstring,is_safe_offer_44: bool) = psk_data'_38 in
                                            {8387}event Client_PSKOffer(id_client_5,psk_offer_44,id_offer_44,is_safe_offer_44);
                                            {8388}event Client_Rand_client(id_client_5,cr'_28);
                                            {8389}event Client_DH_client(id_client_5,dh_pub(g_51,x_582));
                                            {8390}event Client_server_domain(id_client_5,o_dom_8);
                                            {8391}let SH(sr_55: bytes32,mode_51: params) = server_hello'_35 in
                                            {8392}event Client_Rand_server(id_client_5,sr_55);
                                            {8393}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_51,gy_45: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_96: preSharedKeyExt) = mode_51 in
                                            (
                                                {8395}event Client_DH_server(id_client_5,gy_45);
                                                {8396}let v_1848: bool = (psk_ext_96 = empty_psk_ext) in
                                                {8397}let psk_208: preSharedKey = (if v_1848 then NoPsk else caught-fail) in
                                                {8399}let k_186: bitstring = (if v_1848 then catch-fail(psk2b(psk_208)) else caught-fail) in
                                                {8400}let v_1849: bool = not-caught-fail(k_186) in
                                                {8398}let s_191: bitstring = (if v_1848 then zero else caught-fail) in
                                                {8401}let early_secret_139: bitstring = (if v_1848 then catch-fail((if v_1849 then hmac(@8_tls_h,s_191,k_186) else fail-any)) else caught-fail) in
                                                {8402}let v_1850: bool = not-caught-fail(early_secret_139) in
                                                {8404}let m_183: bitstring = (if v_1850 then zero else caught-fail) in
                                                {8405}let h_491: bitstring = (if v_1850 then catch-fail(hash(@8_tls_h,m_183)) else caught-fail) in
                                                {8406}let v_1851: bool = not-caught-fail(h_491) in
                                                {8403}let l_512: label = (if v_1850 then tls13_ext_res_binder else caught-fail) in
                                                {8407}let x_583: bitstring = (if v_1851 then (l_512,h_491) else caught-fail) in
                                                {8408}let binder_key_93: bitstring = (if v_1850 then catch-fail((if v_1851 then hmac(@8_tls_h,early_secret_139,x_583) else fail-any)) else caught-fail) in
                                                {8409}let v_1852: bool = not-caught-fail(binder_key_93) in
                                                {8410}let v_1853: bitstring = (if v_1848 then catch-fail((if v_1850 then (if v_1852 then (early_secret_139,binder_key_93) else fail-any) else fail-any)) else caught-fail) in
                                                {8411}let v_1854: bool = (not-caught-fail(v_1853) && success?(1-proj-2-tuple(v_1853))) in
                                                {8412}let kb_93: mac_key = (if v_1854 then 2-proj-2-tuple(v_1853) else caught-fail) in
                                                {8413}let es_140: bitstring = (if v_1854 then 1-proj-2-tuple(v_1853) else caught-fail) in
                                                {8414}let v_1855: bitstring = (if not(v_1848) then catch-fail(psk_data'_38) else caught-fail) in
                                                {8415}let v_1856: bool = (not-caught-fail(v_1855) && success?(1-proj-4-tuple(v_1855))) in
                                                {8416}let is_safe_84: bool = (if v_1856 then 4-proj-4-tuple(v_1855) else caught-fail) in
                                                {8417}let es_141: bitstring = (if v_1856 then 3-proj-4-tuple(v_1855) else caught-fail) in
                                                {8418}let id_97: identityPsk = (if v_1856 then 2-proj-4-tuple(v_1855) else caught-fail) in
                                                {8419}let psk_209: preSharedKey = (if v_1856 then 1-proj-4-tuple(v_1855) else caught-fail) in
                                                {8420}let (psk_210: preSharedKey,early_secret_140: bitstring,valid_44: bool,safe_psk_50: bool) = (if v_1848 then (if v_1854 then (NoPsk,es_140,true,false) else fail-any) else (if v_1856 then (psk_209,es_141,((psk_209 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_96)),is_safe_84) else fail-any)) in
                                                {8421}event Client_PSKChoosen(id_client_5,psk_210,safe_psk_50);
                                                {8422}if valid_44 then
                                                (
                                                    {8425}new s_192[]: seed;
                                                    {8423}let gxy_90: element = catch-fail(dh_decap_fun(g_51,gy_45,x_582)) in
                                                    {8424}let v_1857: bool = not-caught-fail(gxy_90) in
                                                    {8426}let gxy_91: element = (if v_1857 then gxy_90 else dh_f(s_192)) in
                                                    {8427}event Client_DH_gxy(id_client_5,gxy_91);
                                                    {8429}let m_184: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {8430}let v_1858: bool = not-caught-fail(m_184) in
                                                    {8431}let h_492: bitstring = (if v_1858 then catch-fail(hash(@8_tls_h,m_184)) else caught-fail) in
                                                    {8432}let v_1859: bool = not-caught-fail(h_492) in
                                                    {8428}let l_513: label = tls13_derived in
                                                    {8433}let x_584: bitstring = (if v_1859 then (l_513,h_492) else caught-fail) in
                                                    {8434}let extra_98: bitstring = catch-fail((if v_1858 then (if v_1859 then hmac(@8_tls_h,early_secret_140,x_584) else fail-any) else fail-any)) in
                                                    {8435}let v_1860: bool = not-caught-fail(extra_98) in
                                                    {8436}let handshake_secret_45: bitstring = (if v_1860 then hmac(@8_tls_h,extra_98,gxy_91) else fail-any) in
                                                    {8438}let m_185: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {8439}let v_1861: bool = not-caught-fail(m_185) in
                                                    {8440}let h_493: bitstring = (if v_1861 then catch-fail(hash(@8_tls_h,m_185)) else caught-fail) in
                                                    {8441}let v_1862: bool = not-caught-fail(h_493) in
                                                    {8437}let l_514: label = tls13_derived in
                                                    {8442}let x_585: bitstring = (if v_1862 then (l_514,h_493) else caught-fail) in
                                                    {8443}let extra_99: bitstring = catch-fail((if v_1861 then (if v_1862 then hmac(@8_tls_h,handshake_secret_45,x_585) else fail-any) else fail-any)) in
                                                    {8444}let v_1863: bool = not-caught-fail(extra_99) in
                                                    {8445}let k_187: bitstring = (if v_1863 then zero else caught-fail) in
                                                    {8446}let master_secret_97: bitstring = (if v_1863 then catch-fail(hmac(@8_tls_h,handshake_secret_45,k_187)) else caught-fail) in
                                                    {8447}let v_1864: bool = not-caught-fail(master_secret_97) in
                                                    {8380}let cur_log_OU1_HRR_OU2_14: bitstring = (cur_log_OU1_HRR_3,client_hello'_26) in
                                                    {8394}let cur_log2_95: bitstring = (cur_log_OU1_HRR_OU2_14,server_hello'_35) in
                                                    {8449}let h_494: bitstring = (if v_1864 then catch-fail(hash(@8_tls_h,cur_log2_95)) else caught-fail) in
                                                    {8450}let v_1865: bool = not-caught-fail(h_494) in
                                                    {8448}let l_515: label = (if v_1864 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {8451}let x_586: bitstring = (if v_1865 then (l_515,h_494) else caught-fail) in
                                                    {8452}let client_hts_45: bitstring = (if v_1864 then catch-fail((if v_1865 then hmac(@8_tls_h,handshake_secret_45,x_586) else fail-any)) else caught-fail) in
                                                    {8453}let v_1866: bool = not-caught-fail(client_hts_45) in
                                                    {8455}let h_495: bitstring = (if v_1866 then catch-fail(hash(@8_tls_h,cur_log2_95)) else caught-fail) in
                                                    {8456}let v_1867: bool = not-caught-fail(h_495) in
                                                    {8454}let l_516: label = (if v_1866 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {8457}let x_587: bitstring = (if v_1867 then (l_516,h_495) else caught-fail) in
                                                    {8458}let server_hts_45: bitstring = (if v_1866 then catch-fail((if v_1867 then hmac(@8_tls_h,handshake_secret_45,x_587) else fail-any)) else caught-fail) in
                                                    {8459}let v_1868: bool = not-caught-fail(server_hts_45) in
                                                    {8461}let h_496: bitstring = (if v_1868 then zero else caught-fail) in
                                                    {8460}let l_517: label = (if v_1868 then tls13_key else caught-fail) in
                                                    {8462}let x_588: bitstring = (if v_1868 then (l_517,h_496) else caught-fail) in
                                                    {8463}let client_wkh_45: bitstring = (if v_1868 then catch-fail(hmac(@8_tls_h,client_hts_45,x_588)) else caught-fail) in
                                                    {8464}let v_1869: bool = not-caught-fail(client_wkh_45) in
                                                    {8466}let h_497: bitstring = (if v_1869 then zero else caught-fail) in
                                                    {8465}let l_518: label = (if v_1869 then tls13_key else caught-fail) in
                                                    {8467}let x_589: bitstring = (if v_1869 then (l_518,h_497) else caught-fail) in
                                                    {8468}let server_wkh_45: bitstring = (if v_1869 then catch-fail(hmac(@8_tls_h,server_hts_45,x_589)) else caught-fail) in
                                                    {8469}let v_1870: bool = not-caught-fail(server_wkh_45) in
                                                    {8471}let h_498: bitstring = (if v_1870 then zero else caught-fail) in
                                                    {8470}let l_519: label = (if v_1870 then tls13_finished else caught-fail) in
                                                    {8472}let x_590: bitstring = (if v_1870 then (l_519,h_498) else caught-fail) in
                                                    {8473}let client_fk_45: bitstring = (if v_1870 then catch-fail(hmac(@8_tls_h,client_hts_45,x_590)) else caught-fail) in
                                                    {8474}let v_1871: bool = not-caught-fail(client_fk_45) in
                                                    {8476}let h_499: bitstring = (if v_1871 then zero else caught-fail) in
                                                    {8475}let l_520: label = (if v_1871 then tls13_finished else caught-fail) in
                                                    {8477}let x_591: bitstring = (if v_1871 then (l_520,h_499) else caught-fail) in
                                                    {8478}let server_fk_45: bitstring = (if v_1871 then catch-fail(hmac(@8_tls_h,server_hts_45,x_591)) else caught-fail) in
                                                    {8479}let v_1872: bool = not-caught-fail(server_fk_45) in
                                                    {8480}let (master_secret_98: bitstring,chk_52: aead_key,shk_51: aead_key,cfin_52: mac_key,sfin_51: mac_key) = (if v_1863 then (if v_1864 then (if v_1866 then (if v_1868 then (if v_1869 then (if v_1870 then (if v_1871 then (if v_1872 then (master_secret_97,client_wkh_45,server_wkh_45,client_fk_45,server_fk_45) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {8481}event Client_chk(id_client_5,chk_52);
                                                    {8482}event Client_shk(id_client_5,shk_51);
                                                    {8483}event Client_cfin(id_client_5,cfin_52);
                                                    {8484}event Client_sfin(id_client_5,sfin_51);
                                                    {8485}in(io, enc_ee_msg_44: bitstring);
                                                    {8486}let ee_msg_49: msg = aead_dec(@8_tls_a,shk_51,0,zero,enc_ee_msg_44) in
                                                    {8487}let EE(ech_ee_44: echExt,extra_ee_44: extraExt) = ee_msg_49 in
                                                    {8488}let cur_log2_96: bitstring = (cur_log2_95,ee_msg_49) in
                                                    {8489}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_28,sr_55,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_210,safe_psk_50,@8_comp_psk,master_secret_98,chk_52,0,shk_51,1,cfin_52,sfin_51,cur_log2_96)))
                                                )
                                                else
                                                    {8490}out(io, illegal_parameter)
                                            )
                                            else
                                                {8491}out(io, illegal_parameter)
                                    )
                                    else
                                        {8492}out(io, unexpected_message)
                            )
                            else
                                {8493}let psk_211: preSharedKey = NoPsk in
                                {8495}let k_188: bitstring = catch-fail(psk2b(psk_211)) in
                                {8496}let v_1873: bool = not-caught-fail(k_188) in
                                {8494}let s_193: bitstring = zero in
                                {8497}let early_secret_141: bitstring = catch-fail((if v_1873 then hmac(@8_tls_h,s_193,k_188) else fail-any)) in
                                {8498}let v_1874: bool = not-caught-fail(early_secret_141) in
                                {8500}let m_186: bitstring = (if v_1874 then zero else caught-fail) in
                                {8501}let h_500: bitstring = (if v_1874 then catch-fail(hash(@8_tls_h,m_186)) else caught-fail) in
                                {8502}let v_1875: bool = not-caught-fail(h_500) in
                                {8499}let l_521: label = (if v_1874 then tls13_ext_res_binder else caught-fail) in
                                {8503}let x_592: bitstring = (if v_1875 then (l_521,h_500) else caught-fail) in
                                {8504}let binder_key_94: bitstring = (if v_1874 then catch-fail((if v_1875 then hmac(@8_tls_h,early_secret_141,x_592) else fail-any)) else caught-fail) in
                                {8505}let v_1876: bool = not-caught-fail(binder_key_94) in
                                {8506}let v_1877: bitstring = catch-fail((if v_1874 then (if v_1876 then (early_secret_141,binder_key_94) else fail-any) else fail-any)) in
                                {8507}let v_1878: bool = (not-caught-fail(v_1877) && success?(1-proj-2-tuple(v_1877))) in
                                {8508}let kb_94: mac_key = (if v_1878 then 2-proj-2-tuple(v_1877) else caught-fail) in
                                {8509}let es_142: bitstring = (if v_1878 then 1-proj-2-tuple(v_1877) else caught-fail) in
                                {8510}let v_1879: preSharedKeyExt = (if v_1878 then catch-fail(o_psk_ext_16) else caught-fail) in
                                {8511}let v_1880: bool = (not-caught-fail(v_1879) && success?(1-proj-client_psk_ext(v_1879))) in
                                {8512}let fake_binder_19: bitstring = (if v_1880 then 2-proj-client_psk_ext(v_1879) else caught-fail) in
                                {8513}let fake_id_19: identityPsk = (if v_1880 then 1-proj-client_psk_ext(v_1879) else caught-fail) in
                                {8514}new fake_binder'_3[]: bitstring;
                                {8515}let v_1881: bitstring = catch-fail((if v_1878 then (if v_1880 then (client_psk_ext(fake_id_19,fake_binder'_3),(NoPsk,zero,es_142,false)) else (empty_psk_ext,(NoPsk,zero,es_142,false))) else fail-any)) in
                                {8516}let v_1882: bool = (not-caught-fail(v_1881) && success?(1-proj-2-tuple(v_1881))) in
                                {8517}let psk_data_50: bitstring = (if v_1882 then 2-proj-2-tuple(v_1881) else caught-fail) in
                                {8518}let psk_ext_97: preSharedKeyExt = (if v_1882 then 1-proj-2-tuple(v_1881) else caught-fail) in
                                {8519}let o_offer_35: params = (if v_1882 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_9,SNI(o_dom_11),o_ech_ext_16,empty_extra_ext,psk_ext_97) else caught-fail) in
                                {8520}let (client_hello'_27: msg,cr'_29: bytes32,kex_data'_24: bitstring,psk_data'_39: bitstring) = (if v_1882 then (CH(o_cr_13,o_offer_35),o_cr_13,kex_data_10,psk_data_50) else fail-any) in
                                {8521}out(io, client_hello'_27);
                                {8523}in(io, server_hello'_36: msg);
                                {8524}let SH(sr'_24: bytes32,mode'_24: params) = server_hello'_36 in
                                (
                                    {8525}if (sr'_24 = B32(HRR24,HRR8)) then
                                        {8526}out(io, unexpected_message)
                                    else
                                        {8527}let (x_593: bitstring,g_52: group) = kex_data'_24 in
                                        {8528}let (psk_offer_45: preSharedKey,id_offer_45: identityPsk,es_offer_45: bitstring,is_safe_offer_45: bool) = psk_data'_39 in
                                        {8529}event Client_PSKOffer(id_client_5,psk_offer_45,id_offer_45,is_safe_offer_45);
                                        {8530}event Client_Rand_client(id_client_5,cr'_29);
                                        {8531}event Client_DH_client(id_client_5,dh_pub(g_52,x_593));
                                        {8532}event Client_server_domain(id_client_5,o_dom_8);
                                        {8533}let SH(sr_56: bytes32,mode_52: params) = server_hello'_36 in
                                        {8534}event Client_Rand_server(id_client_5,sr_56);
                                        {8535}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_52,gy_46: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_98: preSharedKeyExt) = mode_52 in
                                        (
                                            {8537}event Client_DH_server(id_client_5,gy_46);
                                            {8538}let v_1883: bool = (psk_ext_98 = empty_psk_ext) in
                                            {8539}let psk_212: preSharedKey = (if v_1883 then NoPsk else caught-fail) in
                                            {8541}let k_189: bitstring = (if v_1883 then catch-fail(psk2b(psk_212)) else caught-fail) in
                                            {8542}let v_1884: bool = not-caught-fail(k_189) in
                                            {8540}let s_194: bitstring = (if v_1883 then zero else caught-fail) in
                                            {8543}let early_secret_142: bitstring = (if v_1883 then catch-fail((if v_1884 then hmac(@8_tls_h,s_194,k_189) else fail-any)) else caught-fail) in
                                            {8544}let v_1885: bool = not-caught-fail(early_secret_142) in
                                            {8546}let m_187: bitstring = (if v_1885 then zero else caught-fail) in
                                            {8547}let h_501: bitstring = (if v_1885 then catch-fail(hash(@8_tls_h,m_187)) else caught-fail) in
                                            {8548}let v_1886: bool = not-caught-fail(h_501) in
                                            {8545}let l_522: label = (if v_1885 then tls13_ext_res_binder else caught-fail) in
                                            {8549}let x_594: bitstring = (if v_1886 then (l_522,h_501) else caught-fail) in
                                            {8550}let binder_key_95: bitstring = (if v_1885 then catch-fail((if v_1886 then hmac(@8_tls_h,early_secret_142,x_594) else fail-any)) else caught-fail) in
                                            {8551}let v_1887: bool = not-caught-fail(binder_key_95) in
                                            {8552}let v_1888: bitstring = (if v_1883 then catch-fail((if v_1885 then (if v_1887 then (early_secret_142,binder_key_95) else fail-any) else fail-any)) else caught-fail) in
                                            {8553}let v_1889: bool = (not-caught-fail(v_1888) && success?(1-proj-2-tuple(v_1888))) in
                                            {8554}let kb_95: mac_key = (if v_1889 then 2-proj-2-tuple(v_1888) else caught-fail) in
                                            {8555}let es_143: bitstring = (if v_1889 then 1-proj-2-tuple(v_1888) else caught-fail) in
                                            {8556}let v_1890: bitstring = (if not(v_1883) then catch-fail(psk_data'_39) else caught-fail) in
                                            {8557}let v_1891: bool = (not-caught-fail(v_1890) && success?(1-proj-4-tuple(v_1890))) in
                                            {8558}let is_safe_85: bool = (if v_1891 then 4-proj-4-tuple(v_1890) else caught-fail) in
                                            {8559}let es_144: bitstring = (if v_1891 then 3-proj-4-tuple(v_1890) else caught-fail) in
                                            {8560}let id_98: identityPsk = (if v_1891 then 2-proj-4-tuple(v_1890) else caught-fail) in
                                            {8561}let psk_213: preSharedKey = (if v_1891 then 1-proj-4-tuple(v_1890) else caught-fail) in
                                            {8562}let (psk_214: preSharedKey,early_secret_143: bitstring,valid_45: bool,safe_psk_51: bool) = (if v_1883 then (if v_1889 then (NoPsk,es_143,true,false) else fail-any) else (if v_1891 then (psk_213,es_144,((psk_213 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_98)),is_safe_85) else fail-any)) in
                                            {8563}event Client_PSKChoosen(id_client_5,psk_214,safe_psk_51);
                                            {8564}if valid_45 then
                                            (
                                                {8567}new s_195[]: seed;
                                                {8565}let gxy_92: element = catch-fail(dh_decap_fun(g_52,gy_46,x_593)) in
                                                {8566}let v_1892: bool = not-caught-fail(gxy_92) in
                                                {8568}let gxy_93: element = (if v_1892 then gxy_92 else dh_f(s_195)) in
                                                {8569}event Client_DH_gxy(id_client_5,gxy_93);
                                                {8571}let m_188: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                {8572}let v_1893: bool = not-caught-fail(m_188) in
                                                {8573}let h_502: bitstring = (if v_1893 then catch-fail(hash(@8_tls_h,m_188)) else caught-fail) in
                                                {8574}let v_1894: bool = not-caught-fail(h_502) in
                                                {8570}let l_523: label = tls13_derived in
                                                {8575}let x_595: bitstring = (if v_1894 then (l_523,h_502) else caught-fail) in
                                                {8576}let extra_100: bitstring = catch-fail((if v_1893 then (if v_1894 then hmac(@8_tls_h,early_secret_143,x_595) else fail-any) else fail-any)) in
                                                {8577}let v_1895: bool = not-caught-fail(extra_100) in
                                                {8578}let handshake_secret_46: bitstring = (if v_1895 then hmac(@8_tls_h,extra_100,gxy_93) else fail-any) in
                                                {8580}let m_189: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                {8581}let v_1896: bool = not-caught-fail(m_189) in
                                                {8582}let h_503: bitstring = (if v_1896 then catch-fail(hash(@8_tls_h,m_189)) else caught-fail) in
                                                {8583}let v_1897: bool = not-caught-fail(h_503) in
                                                {8579}let l_524: label = tls13_derived in
                                                {8584}let x_596: bitstring = (if v_1897 then (l_524,h_503) else caught-fail) in
                                                {8585}let extra_101: bitstring = catch-fail((if v_1896 then (if v_1897 then hmac(@8_tls_h,handshake_secret_46,x_596) else fail-any) else fail-any)) in
                                                {8586}let v_1898: bool = not-caught-fail(extra_101) in
                                                {8587}let k_190: bitstring = (if v_1898 then zero else caught-fail) in
                                                {8588}let master_secret_99: bitstring = (if v_1898 then catch-fail(hmac(@8_tls_h,handshake_secret_46,k_190)) else caught-fail) in
                                                {8589}let v_1899: bool = not-caught-fail(master_secret_99) in
                                                {8522}let cur_log_OU1_HRR_OU2_15: bitstring = (cur_log_OU1_HRR_3,client_hello'_27) in
                                                {8536}let cur_log2_97: bitstring = (cur_log_OU1_HRR_OU2_15,server_hello'_36) in
                                                {8591}let h_504: bitstring = (if v_1899 then catch-fail(hash(@8_tls_h,cur_log2_97)) else caught-fail) in
                                                {8592}let v_1900: bool = not-caught-fail(h_504) in
                                                {8590}let l_525: label = (if v_1899 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {8593}let x_597: bitstring = (if v_1900 then (l_525,h_504) else caught-fail) in
                                                {8594}let client_hts_46: bitstring = (if v_1899 then catch-fail((if v_1900 then hmac(@8_tls_h,handshake_secret_46,x_597) else fail-any)) else caught-fail) in
                                                {8595}let v_1901: bool = not-caught-fail(client_hts_46) in
                                                {8597}let h_505: bitstring = (if v_1901 then catch-fail(hash(@8_tls_h,cur_log2_97)) else caught-fail) in
                                                {8598}let v_1902: bool = not-caught-fail(h_505) in
                                                {8596}let l_526: label = (if v_1901 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {8599}let x_598: bitstring = (if v_1902 then (l_526,h_505) else caught-fail) in
                                                {8600}let server_hts_46: bitstring = (if v_1901 then catch-fail((if v_1902 then hmac(@8_tls_h,handshake_secret_46,x_598) else fail-any)) else caught-fail) in
                                                {8601}let v_1903: bool = not-caught-fail(server_hts_46) in
                                                {8603}let h_506: bitstring = (if v_1903 then zero else caught-fail) in
                                                {8602}let l_527: label = (if v_1903 then tls13_key else caught-fail) in
                                                {8604}let x_599: bitstring = (if v_1903 then (l_527,h_506) else caught-fail) in
                                                {8605}let client_wkh_46: bitstring = (if v_1903 then catch-fail(hmac(@8_tls_h,client_hts_46,x_599)) else caught-fail) in
                                                {8606}let v_1904: bool = not-caught-fail(client_wkh_46) in
                                                {8608}let h_507: bitstring = (if v_1904 then zero else caught-fail) in
                                                {8607}let l_528: label = (if v_1904 then tls13_key else caught-fail) in
                                                {8609}let x_600: bitstring = (if v_1904 then (l_528,h_507) else caught-fail) in
                                                {8610}let server_wkh_46: bitstring = (if v_1904 then catch-fail(hmac(@8_tls_h,server_hts_46,x_600)) else caught-fail) in
                                                {8611}let v_1905: bool = not-caught-fail(server_wkh_46) in
                                                {8613}let h_508: bitstring = (if v_1905 then zero else caught-fail) in
                                                {8612}let l_529: label = (if v_1905 then tls13_finished else caught-fail) in
                                                {8614}let x_601: bitstring = (if v_1905 then (l_529,h_508) else caught-fail) in
                                                {8615}let client_fk_46: bitstring = (if v_1905 then catch-fail(hmac(@8_tls_h,client_hts_46,x_601)) else caught-fail) in
                                                {8616}let v_1906: bool = not-caught-fail(client_fk_46) in
                                                {8618}let h_509: bitstring = (if v_1906 then zero else caught-fail) in
                                                {8617}let l_530: label = (if v_1906 then tls13_finished else caught-fail) in
                                                {8619}let x_602: bitstring = (if v_1906 then (l_530,h_509) else caught-fail) in
                                                {8620}let server_fk_46: bitstring = (if v_1906 then catch-fail(hmac(@8_tls_h,server_hts_46,x_602)) else caught-fail) in
                                                {8621}let v_1907: bool = not-caught-fail(server_fk_46) in
                                                {8622}let (master_secret_100: bitstring,chk_53: aead_key,shk_52: aead_key,cfin_53: mac_key,sfin_52: mac_key) = (if v_1898 then (if v_1899 then (if v_1901 then (if v_1903 then (if v_1904 then (if v_1905 then (if v_1906 then (if v_1907 then (master_secret_99,client_wkh_46,server_wkh_46,client_fk_46,server_fk_46) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {8623}event Client_chk(id_client_5,chk_53);
                                                {8624}event Client_shk(id_client_5,shk_52);
                                                {8625}event Client_cfin(id_client_5,cfin_53);
                                                {8626}event Client_sfin(id_client_5,sfin_52);
                                                {8627}in(io, enc_ee_msg_45: bitstring);
                                                {8628}let ee_msg_50: msg = aead_dec(@8_tls_a,shk_52,0,zero,enc_ee_msg_45) in
                                                {8629}let EE(ech_ee_45: echExt,extra_ee_45: extraExt) = ee_msg_50 in
                                                {8630}let cur_log2_98: bitstring = (cur_log2_97,ee_msg_50) in
                                                {8631}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_29,sr_56,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_214,safe_psk_51,@8_comp_psk,master_secret_100,chk_53,0,shk_52,1,cfin_53,sfin_52,cur_log2_98)))
                                            )
                                            else
                                                {8632}out(io, illegal_parameter)
                                        )
                                        else
                                            {8633}out(io, illegal_parameter)
                                )
                                else
                                    {8634}out(io, unexpected_message)
                    )
                    else
                        {8636}let sh_modified_16: msg = SH(B32(sr24_5,zero8),mode_45) in
                        {8635}let cur_log_25: bitstring = (zero,i_client_hello_17) in
                        {8637}let cur_log_sh_16: bitstring = (cur_log_25,sh_modified_16) in
                        {8638}let transcript_ech_conf_16: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_16)) in
                        {8639}let v_1908: bool = not-caught-fail(transcript_ech_conf_16) in
                        {8641}let k_191: bitstring = (if v_1908 then catch-fail(b32_2_b(get_random(i_client_hello_17))) else caught-fail) in
                        {8642}let v_1909: bool = not-caught-fail(k_191) in
                        {8640}let s_196: bitstring = (if v_1908 then zero else caught-fail) in
                        {8643}let k_192: bitstring = (if v_1908 then catch-fail((if v_1909 then hmac(@8_backend_h,s_196,k_191) else fail-any)) else caught-fail) in
                        {8644}let v_1910: bool = not-caught-fail(k_192) in
                        {8645}let l_531: label = (if v_1910 then ech_accept_confirmation else caught-fail) in
                        {8646}let x_603: bitstring = (if v_1910 then (l_531,cur_log_sh_16) else caught-fail) in
                        {8647}let sr8_20: bytes8 = (if v_1908 then catch-fail(crop_into_bytes8((if v_1910 then hmac(@8_backend_h,k_192,x_603) else fail-any))) else caught-fail) in
                        {8648}let v_1911: bool = not-caught-fail(sr8_20) in
                        {8649}if (B32(sr24_5,sr8_16) = (if v_1908 then (if v_1911 then B32(sr24_5,sr8_20) else fail-any) else fail-any)) then
                        (
                            {8650}event ClientEchAcceptance(id_client_5,true);
                            {8652}let (x_604: bitstring,g_53: group) = i_kex_data_8 in
                            {8653}let (psk_offer_46: preSharedKey,id_offer_46: identityPsk,es_offer_46: bitstring,is_safe_offer_46: bool) = psk_data_43 in
                            {8654}event Client_PSKOffer(id_client_5,psk_offer_46,id_offer_46,is_safe_offer_46);
                            {8655}event Client_Rand_client(id_client_5,i_cr_9);
                            {8656}event Client_DH_client(id_client_5,dh_pub(g_53,x_604));
                            {8657}event Client_server_domain(id_client_5,backend_dom_1);
                            {8658}let SH(sr_57: bytes32,mode_53: params) = server_hello_7 in
                            {8659}event Client_Rand_server(id_client_5,sr_57);
                            {8660}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_53,gy_47: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_99: preSharedKeyExt) = mode_53 in
                            (
                                {8662}event Client_DH_server(id_client_5,gy_47);
                                {8663}let v_1912: bool = (psk_ext_99 = empty_psk_ext) in
                                {8664}let psk_215: preSharedKey = (if v_1912 then NoPsk else caught-fail) in
                                {8666}let k_193: bitstring = (if v_1912 then catch-fail(psk2b(psk_215)) else caught-fail) in
                                {8667}let v_1913: bool = not-caught-fail(k_193) in
                                {8665}let s_197: bitstring = (if v_1912 then zero else caught-fail) in
                                {8668}let early_secret_144: bitstring = (if v_1912 then catch-fail((if v_1913 then hmac(@8_backend_h,s_197,k_193) else fail-any)) else caught-fail) in
                                {8669}let v_1914: bool = not-caught-fail(early_secret_144) in
                                {8671}let m_190: bitstring = (if v_1914 then zero else caught-fail) in
                                {8672}let h_510: bitstring = (if v_1914 then catch-fail(hash(@8_backend_h,m_190)) else caught-fail) in
                                {8673}let v_1915: bool = not-caught-fail(h_510) in
                                {8670}let l_532: label = (if v_1914 then tls13_ext_res_binder else caught-fail) in
                                {8674}let x_605: bitstring = (if v_1915 then (l_532,h_510) else caught-fail) in
                                {8675}let binder_key_96: bitstring = (if v_1914 then catch-fail((if v_1915 then hmac(@8_backend_h,early_secret_144,x_605) else fail-any)) else caught-fail) in
                                {8676}let v_1916: bool = not-caught-fail(binder_key_96) in
                                {8677}let v_1917: bitstring = (if v_1912 then catch-fail((if v_1914 then (if v_1916 then (early_secret_144,binder_key_96) else fail-any) else fail-any)) else caught-fail) in
                                {8678}let v_1918: bool = (not-caught-fail(v_1917) && success?(1-proj-2-tuple(v_1917))) in
                                {8679}let kb_96: mac_key = (if v_1918 then 2-proj-2-tuple(v_1917) else caught-fail) in
                                {8680}let es_145: bitstring = (if v_1918 then 1-proj-2-tuple(v_1917) else caught-fail) in
                                {8681}let v_1919: bitstring = (if not(v_1912) then catch-fail(psk_data_43) else caught-fail) in
                                {8682}let v_1920: bool = (not-caught-fail(v_1919) && success?(1-proj-4-tuple(v_1919))) in
                                {8683}let is_safe_86: bool = (if v_1920 then 4-proj-4-tuple(v_1919) else caught-fail) in
                                {8684}let es_146: bitstring = (if v_1920 then 3-proj-4-tuple(v_1919) else caught-fail) in
                                {8685}let id_99: identityPsk = (if v_1920 then 2-proj-4-tuple(v_1919) else caught-fail) in
                                {8686}let psk_216: preSharedKey = (if v_1920 then 1-proj-4-tuple(v_1919) else caught-fail) in
                                {8687}let (psk_217: preSharedKey,early_secret_145: bitstring,valid_46: bool,safe_psk_52: bool) = (if v_1912 then (if v_1918 then (NoPsk,es_145,true,false) else fail-any) else (if v_1920 then (psk_216,es_146,((psk_216 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_99)),is_safe_86) else fail-any)) in
                                {8688}event Client_PSKChoosen(id_client_5,psk_217,safe_psk_52);
                                {8689}if valid_46 then
                                (
                                    {8692}new s_198[]: seed;
                                    {8690}let gxy_94: element = catch-fail(dh_decap_fun(g_53,gy_47,x_604)) in
                                    {8691}let v_1921: bool = not-caught-fail(gxy_94) in
                                    {8693}let gxy_95: element = (if v_1921 then gxy_94 else dh_f(s_198)) in
                                    {8694}event Client_DH_gxy(id_client_5,gxy_95);
                                    {8696}let m_191: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                    {8697}let v_1922: bool = not-caught-fail(m_191) in
                                    {8698}let h_511: bitstring = (if v_1922 then catch-fail(hash(@8_backend_h,m_191)) else caught-fail) in
                                    {8699}let v_1923: bool = not-caught-fail(h_511) in
                                    {8695}let l_533: label = tls13_derived in
                                    {8700}let x_606: bitstring = (if v_1923 then (l_533,h_511) else caught-fail) in
                                    {8701}let extra_102: bitstring = catch-fail((if v_1922 then (if v_1923 then hmac(@8_backend_h,early_secret_145,x_606) else fail-any) else fail-any)) in
                                    {8702}let v_1924: bool = not-caught-fail(extra_102) in
                                    {8703}let handshake_secret_47: bitstring = (if v_1924 then hmac(@8_backend_h,extra_102,gxy_95) else fail-any) in
                                    {8705}let m_192: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                    {8706}let v_1925: bool = not-caught-fail(m_192) in
                                    {8707}let h_512: bitstring = (if v_1925 then catch-fail(hash(@8_backend_h,m_192)) else caught-fail) in
                                    {8708}let v_1926: bool = not-caught-fail(h_512) in
                                    {8704}let l_534: label = tls13_derived in
                                    {8709}let x_607: bitstring = (if v_1926 then (l_534,h_512) else caught-fail) in
                                    {8710}let extra_103: bitstring = catch-fail((if v_1925 then (if v_1926 then hmac(@8_backend_h,handshake_secret_47,x_607) else fail-any) else fail-any)) in
                                    {8711}let v_1927: bool = not-caught-fail(extra_103) in
                                    {8712}let k_194: bitstring = (if v_1927 then zero else caught-fail) in
                                    {8713}let master_secret_101: bitstring = (if v_1927 then catch-fail(hmac(@8_backend_h,handshake_secret_47,k_194)) else caught-fail) in
                                    {8714}let v_1928: bool = not-caught-fail(master_secret_101) in
                                    {8651}let cur_log_26: bitstring = (zero,i_client_hello_17) in
                                    {8661}let cur_log2_99: bitstring = (cur_log_26,server_hello_7) in
                                    {8716}let h_513: bitstring = (if v_1928 then catch-fail(hash(@8_backend_h,cur_log2_99)) else caught-fail) in
                                    {8717}let v_1929: bool = not-caught-fail(h_513) in
                                    {8715}let l_535: label = (if v_1928 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {8718}let x_608: bitstring = (if v_1929 then (l_535,h_513) else caught-fail) in
                                    {8719}let client_hts_47: bitstring = (if v_1928 then catch-fail((if v_1929 then hmac(@8_backend_h,handshake_secret_47,x_608) else fail-any)) else caught-fail) in
                                    {8720}let v_1930: bool = not-caught-fail(client_hts_47) in
                                    {8722}let h_514: bitstring = (if v_1930 then catch-fail(hash(@8_backend_h,cur_log2_99)) else caught-fail) in
                                    {8723}let v_1931: bool = not-caught-fail(h_514) in
                                    {8721}let l_536: label = (if v_1930 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {8724}let x_609: bitstring = (if v_1931 then (l_536,h_514) else caught-fail) in
                                    {8725}let server_hts_47: bitstring = (if v_1930 then catch-fail((if v_1931 then hmac(@8_backend_h,handshake_secret_47,x_609) else fail-any)) else caught-fail) in
                                    {8726}let v_1932: bool = not-caught-fail(server_hts_47) in
                                    {8728}let h_515: bitstring = (if v_1932 then zero else caught-fail) in
                                    {8727}let l_537: label = (if v_1932 then tls13_key else caught-fail) in
                                    {8729}let x_610: bitstring = (if v_1932 then (l_537,h_515) else caught-fail) in
                                    {8730}let client_wkh_47: bitstring = (if v_1932 then catch-fail(hmac(@8_backend_h,client_hts_47,x_610)) else caught-fail) in
                                    {8731}let v_1933: bool = not-caught-fail(client_wkh_47) in
                                    {8733}let h_516: bitstring = (if v_1933 then zero else caught-fail) in
                                    {8732}let l_538: label = (if v_1933 then tls13_key else caught-fail) in
                                    {8734}let x_611: bitstring = (if v_1933 then (l_538,h_516) else caught-fail) in
                                    {8735}let server_wkh_47: bitstring = (if v_1933 then catch-fail(hmac(@8_backend_h,server_hts_47,x_611)) else caught-fail) in
                                    {8736}let v_1934: bool = not-caught-fail(server_wkh_47) in
                                    {8738}let h_517: bitstring = (if v_1934 then zero else caught-fail) in
                                    {8737}let l_539: label = (if v_1934 then tls13_finished else caught-fail) in
                                    {8739}let x_612: bitstring = (if v_1934 then (l_539,h_517) else caught-fail) in
                                    {8740}let client_fk_47: bitstring = (if v_1934 then catch-fail(hmac(@8_backend_h,client_hts_47,x_612)) else caught-fail) in
                                    {8741}let v_1935: bool = not-caught-fail(client_fk_47) in
                                    {8743}let h_518: bitstring = (if v_1935 then zero else caught-fail) in
                                    {8742}let l_540: label = (if v_1935 then tls13_finished else caught-fail) in
                                    {8744}let x_613: bitstring = (if v_1935 then (l_540,h_518) else caught-fail) in
                                    {8745}let server_fk_47: bitstring = (if v_1935 then catch-fail(hmac(@8_backend_h,server_hts_47,x_613)) else caught-fail) in
                                    {8746}let v_1936: bool = not-caught-fail(server_fk_47) in
                                    {8747}let (master_secret_102: bitstring,chk_54: aead_key,shk_53: aead_key,cfin_54: mac_key,sfin_53: mac_key) = (if v_1927 then (if v_1928 then (if v_1930 then (if v_1932 then (if v_1933 then (if v_1934 then (if v_1935 then (if v_1936 then (master_secret_101,client_wkh_47,server_wkh_47,client_fk_47,server_fk_47) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {8748}event Client_chk(id_client_5,chk_54);
                                    {8749}event Client_shk(id_client_5,shk_53);
                                    {8750}event Client_cfin(id_client_5,cfin_54);
                                    {8751}event Client_sfin(id_client_5,sfin_53);
                                    {8752}in(io, enc_ee_msg_46: bitstring);
                                    {8753}let ee_msg_51: msg = aead_dec(@8_backend_a,shk_53,0,zero,enc_ee_msg_46) in
                                    {8754}let EE(ech_ee_46: echExt,extra_ee_46: extraExt) = ee_msg_51 in
                                    {8755}let cur_log2_100: bitstring = (cur_log2_99,ee_msg_51) in
                                    {8756}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr_9,sr_57,@8_backend_h,@8_backend_a,c_dom_7,backend_dom_1,psk_217,safe_psk_52,@8_comp_psk,master_secret_102,chk_54,0,shk_53,1,cfin_54,sfin_53,cur_log2_100)))
                                )
                                else
                                    {8757}out(io, illegal_parameter)
                            )
                            else
                                {8758}out(io, illegal_parameter)
                        )
                        else
                            {8759}event ClientEchAcceptance(id_client_5,false);
                            {8760}let v_1937: bool = @8_use_grease in
                            {8761}let psk_218: preSharedKey = (if not(v_1937) then NoPsk else caught-fail) in
                            {8763}let k_195: bitstring = (if not(v_1937) then catch-fail(psk2b(psk_218)) else caught-fail) in
                            {8764}let v_1938: bool = not-caught-fail(k_195) in
                            {8762}let s_199: bitstring = (if not(v_1937) then zero else caught-fail) in
                            {8765}let early_secret_146: bitstring = (if not(v_1937) then catch-fail((if v_1938 then hmac(@8_tls_h,s_199,k_195) else fail-any)) else caught-fail) in
                            {8766}let v_1939: bool = not-caught-fail(early_secret_146) in
                            {8768}let m_193: bitstring = (if v_1939 then zero else caught-fail) in
                            {8769}let h_519: bitstring = (if v_1939 then catch-fail(hash(@8_tls_h,m_193)) else caught-fail) in
                            {8770}let v_1940: bool = not-caught-fail(h_519) in
                            {8767}let l_541: label = (if v_1939 then tls13_ext_res_binder else caught-fail) in
                            {8771}let x_614: bitstring = (if v_1940 then (l_541,h_519) else caught-fail) in
                            {8772}let binder_key_97: bitstring = (if v_1939 then catch-fail((if v_1940 then hmac(@8_tls_h,early_secret_146,x_614) else fail-any)) else caught-fail) in
                            {8773}let v_1941: bool = not-caught-fail(binder_key_97) in
                            {8774}let v_1942: bitstring = (if not(v_1937) then catch-fail((if v_1939 then (if v_1941 then (early_secret_146,binder_key_97) else fail-any) else fail-any)) else caught-fail) in
                            {8775}let v_1943: bool = (not-caught-fail(v_1942) && success?(1-proj-2-tuple(v_1942))) in
                            {8776}let kb_97: mac_key = (if v_1943 then 2-proj-2-tuple(v_1942) else caught-fail) in
                            {8777}let es'_3: bitstring = (if v_1943 then 1-proj-2-tuple(v_1942) else caught-fail) in
                            {8778}let psk_data'_40: bitstring = (if v_1937 then psk_data_43 else (if v_1943 then (NoPsk,zero,es'_3,false) else fail-any)) in
                            {8780}let (x_615: bitstring,g_54: group) = o_kex_data_8 in
                            {8781}let (psk_offer_47: preSharedKey,id_offer_47: identityPsk,es_offer_47: bitstring,is_safe_offer_47: bool) = psk_data'_40 in
                            {8782}event Client_PSKOffer(id_client_5,psk_offer_47,id_offer_47,is_safe_offer_47);
                            {8783}event Client_Rand_client(id_client_5,o_cr_11);
                            {8784}event Client_DH_client(id_client_5,dh_pub(g_54,x_615));
                            {8785}event Client_server_domain(id_client_5,o_dom_8);
                            {8786}let SH(sr_58: bytes32,mode_54: params) = server_hello_7 in
                            {8787}event Client_Rand_server(id_client_5,sr_58);
                            {8788}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_54,gy_48: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_100: preSharedKeyExt) = mode_54 in
                            (
                                {8790}event Client_DH_server(id_client_5,gy_48);
                                {8791}let v_1944: bool = (psk_ext_100 = empty_psk_ext) in
                                {8792}let psk_219: preSharedKey = (if v_1944 then NoPsk else caught-fail) in
                                {8794}let k_196: bitstring = (if v_1944 then catch-fail(psk2b(psk_219)) else caught-fail) in
                                {8795}let v_1945: bool = not-caught-fail(k_196) in
                                {8793}let s_200: bitstring = (if v_1944 then zero else caught-fail) in
                                {8796}let early_secret_147: bitstring = (if v_1944 then catch-fail((if v_1945 then hmac(@8_tls_h,s_200,k_196) else fail-any)) else caught-fail) in
                                {8797}let v_1946: bool = not-caught-fail(early_secret_147) in
                                {8799}let m_194: bitstring = (if v_1946 then zero else caught-fail) in
                                {8800}let h_520: bitstring = (if v_1946 then catch-fail(hash(@8_tls_h,m_194)) else caught-fail) in
                                {8801}let v_1947: bool = not-caught-fail(h_520) in
                                {8798}let l_542: label = (if v_1946 then tls13_ext_res_binder else caught-fail) in
                                {8802}let x_616: bitstring = (if v_1947 then (l_542,h_520) else caught-fail) in
                                {8803}let binder_key_98: bitstring = (if v_1946 then catch-fail((if v_1947 then hmac(@8_tls_h,early_secret_147,x_616) else fail-any)) else caught-fail) in
                                {8804}let v_1948: bool = not-caught-fail(binder_key_98) in
                                {8805}let v_1949: bitstring = (if v_1944 then catch-fail((if v_1946 then (if v_1948 then (early_secret_147,binder_key_98) else fail-any) else fail-any)) else caught-fail) in
                                {8806}let v_1950: bool = (not-caught-fail(v_1949) && success?(1-proj-2-tuple(v_1949))) in
                                {8807}let kb_98: mac_key = (if v_1950 then 2-proj-2-tuple(v_1949) else caught-fail) in
                                {8808}let es_147: bitstring = (if v_1950 then 1-proj-2-tuple(v_1949) else caught-fail) in
                                {8809}let v_1951: bitstring = (if not(v_1944) then catch-fail(psk_data'_40) else caught-fail) in
                                {8810}let v_1952: bool = (not-caught-fail(v_1951) && success?(1-proj-4-tuple(v_1951))) in
                                {8811}let is_safe_87: bool = (if v_1952 then 4-proj-4-tuple(v_1951) else caught-fail) in
                                {8812}let es_148: bitstring = (if v_1952 then 3-proj-4-tuple(v_1951) else caught-fail) in
                                {8813}let id_100: identityPsk = (if v_1952 then 2-proj-4-tuple(v_1951) else caught-fail) in
                                {8814}let psk_220: preSharedKey = (if v_1952 then 1-proj-4-tuple(v_1951) else caught-fail) in
                                {8815}let (psk_221: preSharedKey,early_secret_148: bitstring,valid_47: bool,safe_psk_53: bool) = (if v_1944 then (if v_1950 then (NoPsk,es_147,true,false) else fail-any) else (if v_1952 then (psk_220,es_148,((psk_220 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_100)),is_safe_87) else fail-any)) in
                                {8816}event Client_PSKChoosen(id_client_5,psk_221,safe_psk_53);
                                {8817}if valid_47 then
                                (
                                    {8820}new s_201[]: seed;
                                    {8818}let gxy_96: element = catch-fail(dh_decap_fun(g_54,gy_48,x_615)) in
                                    {8819}let v_1953: bool = not-caught-fail(gxy_96) in
                                    {8821}let gxy_97: element = (if v_1953 then gxy_96 else dh_f(s_201)) in
                                    {8822}event Client_DH_gxy(id_client_5,gxy_97);
                                    {8824}let m_195: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                    {8825}let v_1954: bool = not-caught-fail(m_195) in
                                    {8826}let h_521: bitstring = (if v_1954 then catch-fail(hash(@8_tls_h,m_195)) else caught-fail) in
                                    {8827}let v_1955: bool = not-caught-fail(h_521) in
                                    {8823}let l_543: label = tls13_derived in
                                    {8828}let x_617: bitstring = (if v_1955 then (l_543,h_521) else caught-fail) in
                                    {8829}let extra_104: bitstring = catch-fail((if v_1954 then (if v_1955 then hmac(@8_tls_h,early_secret_148,x_617) else fail-any) else fail-any)) in
                                    {8830}let v_1956: bool = not-caught-fail(extra_104) in
                                    {8831}let handshake_secret_48: bitstring = (if v_1956 then hmac(@8_tls_h,extra_104,gxy_97) else fail-any) in
                                    {8833}let m_196: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                    {8834}let v_1957: bool = not-caught-fail(m_196) in
                                    {8835}let h_522: bitstring = (if v_1957 then catch-fail(hash(@8_tls_h,m_196)) else caught-fail) in
                                    {8836}let v_1958: bool = not-caught-fail(h_522) in
                                    {8832}let l_544: label = tls13_derived in
                                    {8837}let x_618: bitstring = (if v_1958 then (l_544,h_522) else caught-fail) in
                                    {8838}let extra_105: bitstring = catch-fail((if v_1957 then (if v_1958 then hmac(@8_tls_h,handshake_secret_48,x_618) else fail-any) else fail-any)) in
                                    {8839}let v_1959: bool = not-caught-fail(extra_105) in
                                    {8840}let k_197: bitstring = (if v_1959 then zero else caught-fail) in
                                    {8841}let master_secret_103: bitstring = (if v_1959 then catch-fail(hmac(@8_tls_h,handshake_secret_48,k_197)) else caught-fail) in
                                    {8842}let v_1960: bool = not-caught-fail(master_secret_103) in
                                    {8779}let cur_log_27: bitstring = (zero,o_client_hello_5) in
                                    {8789}let cur_log2_101: bitstring = (cur_log_27,server_hello_7) in
                                    {8844}let h_523: bitstring = (if v_1960 then catch-fail(hash(@8_tls_h,cur_log2_101)) else caught-fail) in
                                    {8845}let v_1961: bool = not-caught-fail(h_523) in
                                    {8843}let l_545: label = (if v_1960 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {8846}let x_619: bitstring = (if v_1961 then (l_545,h_523) else caught-fail) in
                                    {8847}let client_hts_48: bitstring = (if v_1960 then catch-fail((if v_1961 then hmac(@8_tls_h,handshake_secret_48,x_619) else fail-any)) else caught-fail) in
                                    {8848}let v_1962: bool = not-caught-fail(client_hts_48) in
                                    {8850}let h_524: bitstring = (if v_1962 then catch-fail(hash(@8_tls_h,cur_log2_101)) else caught-fail) in
                                    {8851}let v_1963: bool = not-caught-fail(h_524) in
                                    {8849}let l_546: label = (if v_1962 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {8852}let x_620: bitstring = (if v_1963 then (l_546,h_524) else caught-fail) in
                                    {8853}let server_hts_48: bitstring = (if v_1962 then catch-fail((if v_1963 then hmac(@8_tls_h,handshake_secret_48,x_620) else fail-any)) else caught-fail) in
                                    {8854}let v_1964: bool = not-caught-fail(server_hts_48) in
                                    {8856}let h_525: bitstring = (if v_1964 then zero else caught-fail) in
                                    {8855}let l_547: label = (if v_1964 then tls13_key else caught-fail) in
                                    {8857}let x_621: bitstring = (if v_1964 then (l_547,h_525) else caught-fail) in
                                    {8858}let client_wkh_48: bitstring = (if v_1964 then catch-fail(hmac(@8_tls_h,client_hts_48,x_621)) else caught-fail) in
                                    {8859}let v_1965: bool = not-caught-fail(client_wkh_48) in
                                    {8861}let h_526: bitstring = (if v_1965 then zero else caught-fail) in
                                    {8860}let l_548: label = (if v_1965 then tls13_key else caught-fail) in
                                    {8862}let x_622: bitstring = (if v_1965 then (l_548,h_526) else caught-fail) in
                                    {8863}let server_wkh_48: bitstring = (if v_1965 then catch-fail(hmac(@8_tls_h,server_hts_48,x_622)) else caught-fail) in
                                    {8864}let v_1966: bool = not-caught-fail(server_wkh_48) in
                                    {8866}let h_527: bitstring = (if v_1966 then zero else caught-fail) in
                                    {8865}let l_549: label = (if v_1966 then tls13_finished else caught-fail) in
                                    {8867}let x_623: bitstring = (if v_1966 then (l_549,h_527) else caught-fail) in
                                    {8868}let client_fk_48: bitstring = (if v_1966 then catch-fail(hmac(@8_tls_h,client_hts_48,x_623)) else caught-fail) in
                                    {8869}let v_1967: bool = not-caught-fail(client_fk_48) in
                                    {8871}let h_528: bitstring = (if v_1967 then zero else caught-fail) in
                                    {8870}let l_550: label = (if v_1967 then tls13_finished else caught-fail) in
                                    {8872}let x_624: bitstring = (if v_1967 then (l_550,h_528) else caught-fail) in
                                    {8873}let server_fk_48: bitstring = (if v_1967 then catch-fail(hmac(@8_tls_h,server_hts_48,x_624)) else caught-fail) in
                                    {8874}let v_1968: bool = not-caught-fail(server_fk_48) in
                                    {8875}let (master_secret_104: bitstring,chk_55: aead_key,shk_54: aead_key,cfin_55: mac_key,sfin_54: mac_key) = (if v_1959 then (if v_1960 then (if v_1962 then (if v_1964 then (if v_1965 then (if v_1966 then (if v_1967 then (if v_1968 then (master_secret_103,client_wkh_48,server_wkh_48,client_fk_48,server_fk_48) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {8876}event Client_chk(id_client_5,chk_55);
                                    {8877}event Client_shk(id_client_5,shk_54);
                                    {8878}event Client_cfin(id_client_5,cfin_55);
                                    {8879}event Client_sfin(id_client_5,sfin_54);
                                    {8880}in(io, enc_ee_msg_47: bitstring);
                                    {8881}let ee_msg_52: msg = aead_dec(@8_tls_a,shk_54,0,zero,enc_ee_msg_47) in
                                    {8882}let EE(ech_ee_47: echExt,extra_ee_47: extraExt) = ee_msg_52 in
                                    {8883}let cur_log2_102: bitstring = (cur_log2_101,ee_msg_52) in
                                    {8884}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(o_cr_11,sr_58,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_221,safe_psk_53,@8_comp_psk,master_secret_104,chk_55,0,shk_54,1,cfin_55,sfin_54,cur_log2_102)))
                                )
                                else
                                    {8885}out(io, illegal_parameter)
                            )
                            else
                                {8886}out(io, illegal_parameter)
                )
                else
                    {8887}out(io, unexpected_message)
            )
        )
        else
            {10370}get pre_shared_keys(c_dom'_15: domain,=dom_psk_1,=h_psk_1,id_101: identityPsk,psk_222: preSharedKey,idP_17: idProc,is_safe_88: bool) in
            {8888}event Selected_one_time_used_psk(id_client_5,psk_222,is_safe_88);
            {8889}event Selected_psk(c_dom_7,c_dom'_15,idP_17,is_safe_88);
            {8890}event Selected_psk_no_missmatch(id_client_5,dom_psk_1,h_psk_1,psk_222,id_101);
            {8891}event Selected_psk_with_ID(c_dom_7,c_dom'_15,id_101,idP_17,is_safe_88);
            {8892}let v_1969: bitstring = (id_101,psk_222,is_safe_88) in
            {8893}let v_1970: bool = success?(1-proj-3-tuple(v_1969)) in
            {8894}let is_safe_89: bool = (if v_1970 then 3-proj-3-tuple(v_1969) else caught-fail) in
            {8895}let psk_223: preSharedKey = (if v_1970 then 2-proj-3-tuple(v_1969) else caught-fail) in
            {8896}let id_102: identityPsk = (if v_1970 then 1-proj-3-tuple(v_1969) else caught-fail) in
            {8900}let k_198: bitstring = (if v_1970 then catch-fail(psk2b(psk_223)) else caught-fail) in
            {8901}let v_1971: bool = not-caught-fail(k_198) in
            {8899}let s_202: bitstring = (if v_1970 then zero else caught-fail) in
            {8902}let early_secret_149: bitstring = (if v_1970 then catch-fail((if v_1971 then hmac(h_psk_1,s_202,k_198) else fail-any)) else caught-fail) in
            {8903}let v_1972: bool = not-caught-fail(early_secret_149) in
            {8905}let m_197: bitstring = (if v_1972 then zero else caught-fail) in
            {8906}let h_529: bitstring = (if v_1972 then catch-fail(hash(h_psk_1,m_197)) else caught-fail) in
            {8907}let v_1973: bool = not-caught-fail(h_529) in
            {8904}let l_551: label = (if v_1972 then tls13_ext_res_binder else caught-fail) in
            {8908}let x_625: bitstring = (if v_1973 then (l_551,h_529) else caught-fail) in
            {8909}let binder_key_99: bitstring = (if v_1972 then catch-fail((if v_1973 then hmac(h_psk_1,early_secret_149,x_625) else fail-any)) else caught-fail) in
            {8910}let v_1974: bool = not-caught-fail(binder_key_99) in
            {8911}let v_1975: bitstring = (if v_1970 then catch-fail((if v_1972 then (if v_1974 then (early_secret_149,binder_key_99) else fail-any) else fail-any)) else caught-fail) in
            {8912}let v_1976: bool = (not-caught-fail(v_1975) && success?(1-proj-2-tuple(v_1975))) in
            {8913}let kb_99: mac_key = (if v_1976 then 2-proj-2-tuple(v_1975) else caught-fail) in
            {8914}let es_149: bitstring = (if v_1976 then 1-proj-2-tuple(v_1975) else caught-fail) in
            {8897}let offer_41: params = (if v_1970 then nego(TLS13,h_psk_1,a_psk_1,kex_ext_psk_1,SNI(dom_psk_1),ech_inner_or_grease_1,extra_psk_1,trunc_client_psk_ext(id_102)) else caught-fail) in
            {8898}let cur_log'_29: bitstring = (if v_1970 then (cur_log_23,CH(cr_psk_1,offer_41)) else caught-fail) in
            {8915}let binders_28: bitstring = (if v_1976 then catch-fail(hmac(h_psk_1,kb_99,cur_log'_29)) else caught-fail) in
            {8916}let v_1977: bool = not-caught-fail(binders_28) in
            {8917}let v_1978: bitstring = catch-fail((if v_1970 then (if v_1976 then (if v_1977 then (client_psk_ext(id_102,binders_28),(psk_223,id_102,es_149,is_safe_89)) else fail-any) else fail-any) else fail-any)) in
            {8918}let v_1979: bool = (not-caught-fail(v_1978) && success?(1-proj-2-tuple(v_1978))) in
            {8919}let psk_data_51: bitstring = (if v_1979 then 2-proj-2-tuple(v_1978) else caught-fail) in
            {8920}let psk_ext_101: preSharedKeyExt = (if v_1979 then 1-proj-2-tuple(v_1978) else caught-fail) in
            {8925}new fake_id_20[]: identityPsk;
            {8926}new fake_binder_20[]: bitstring;
            {8923}let v_1980: bool = (if v_1979 then catch-fail(@8_use_grease) else caught-fail) in
            {8932}let v_1981: hpkeContext = (if is-false(v_1980) then catch-fail(context_2) else caught-fail) in
            {8933}let v_1982: bool = (not-caught-fail(v_1981) && ((S =nf 1-proj-hpke_context(v_1981)) && success?(1-proj-hpke_context(v_1981)))) in
            {8934}let base_nonce_21: bitstring = (if v_1982 then 3-proj-hpke_context(v_1981) else caught-fail) in
            {8935}let key_21: aead_key = (if v_1982 then 2-proj-hpke_context(v_1981) else caught-fail) in
            {8931}let n_18: nat = (if is-false(v_1980) then 1 else caught-fail) in
            {8928}let o_ech_ext_ADD_16: echExt = (if is-false(v_1980) then ECHClientHelloOuter(ech_h_13,ech_a_13,config_id_13,enc_6,zero) else caught-fail) in
            {8927}let o_psk_ext_20: preSharedKeyExt = (if is-false(v_1980) then (if @8_use_psk then client_psk_ext(fake_id_20,fake_binder_20) else empty_psk_ext) else caught-fail) in
            {8929}let o_offer_ADD_16: params = (if is-false(v_1980) then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),o_ech_ext_ADD_16,empty_extra_ext,o_psk_ext_20) else caught-fail) in
            {8930}let o_client_hello_ADD_16: msg = (if is-false(v_1980) then CH(o_cr_10,o_offer_ADD_16) else caught-fail) in
            {8921}let i_offer_16: params = (if v_1979 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_5,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_101) else caught-fail) in
            {8922}let i_client_hello_21: msg = (if v_1979 then CH(i_cr_8,i_offer_16) else caught-fail) in
            {8936}let payload_22: bitstring = (if is-false(v_1980) then catch-fail((if v_1982 then aead_enc(ech_a_13,key_21,(base_nonce_21,n_18),o_client_hello_ADD_16,i_client_hello_21) else fail-any)) else caught-fail) in
            {8937}let v_1983: bool = not-caught-fail(payload_22) in
            {8938}let o_ech_ext_20: echExt = (if v_1983 then ECHClientHelloOuter(ech_h_13,ech_a_13,config_id_13,enc_6,payload_22) else caught-fail) in
            {8939}let o_offer_37: params = (if v_1983 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),o_ech_ext_20,empty_extra_ext,o_psk_ext_20) else caught-fail) in
            {8924}let o_offer_36: params = (if v_1980 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),ech_inner_or_grease_1,empty_extra_ext,psk_ext_101) else caught-fail) in
            {8940}let (o_client_hello_6: msg,i_client_hello_22: msg,o_cr_14: bytes32,i_cr_11: bytes32,o_kex_data_10: bitstring,i_kex_data_10: bitstring,o_psk_ext_21: preSharedKeyExt,psk_data_52: bitstring,o_ech_ext_21: echExt) = (if v_1979 then (if undo-catch-fail(v_1980) then (CH(o_cr_10,o_offer_36),CH(o_cr_10,o_offer_36),o_cr_10,o_cr_10,o_kex_data_7,o_kex_data_7,psk_ext_101,psk_data_51,ech_inner_or_grease_1) else (if v_1983 then (CH(o_cr_10,o_offer_37),i_client_hello_21,o_cr_10,i_cr_8,o_kex_data_7,i_kex_data_7,o_psk_ext_20,psk_data_51,o_ech_ext_20) else fail-any)) else fail-any) in
            {8941}out(io, o_client_hello_6);
            {8942}let (psk_224: preSharedKey,id_103: identityPsk,es_150: bitstring,safe_4: bool) = psk_data_52 in
            (
                {8943}if (false && (not(@8_use_grease) && (psk_224 ≠ NoPsk))) then
                {8944}let client_hello_11: bitstring = (zero,i_client_hello_22) in
                {8946}let h_530: bitstring = catch-fail(hash(@8_backend_h,client_hello_11)) in
                {8947}let v_1984: bool = not-caught-fail(h_530) in
                {8945}let l_552: label = tls13_client_early_traffic_secret in
                {8948}let x_626: bitstring = (if v_1984 then (l_552,h_530) else caught-fail) in
                {8949}let atsc0_8: bitstring = catch-fail((if v_1984 then hmac(@8_backend_h,es_150,x_626) else fail-any)) in
                {8950}let v_1985: bool = not-caught-fail(atsc0_8) in
                {8952}let h_531: bitstring = (if v_1985 then zero else caught-fail) in
                {8951}let l_553: label = (if v_1985 then tls13_key else caught-fail) in
                {8953}let x_627: bitstring = (if v_1985 then (l_553,h_531) else caught-fail) in
                {8954}let kc0_8: bitstring = (if v_1985 then catch-fail(hmac(@8_backend_h,atsc0_8,x_627)) else caught-fail) in
                {8955}let v_1986: bool = not-caught-fail(kc0_8) in
                {8957}let h_532: bitstring = (if v_1986 then catch-fail(hash(@8_backend_h,client_hello_11)) else caught-fail) in
                {8958}let v_1987: bool = not-caught-fail(h_532) in
                {8956}let l_554: label = (if v_1986 then tls13_early_exporter_master_secret else caught-fail) in
                {8959}let x_628: bitstring = (if v_1987 then (l_554,h_532) else caught-fail) in
                {8960}let ems0_16: bitstring = (if v_1986 then catch-fail((if v_1987 then hmac(@8_backend_h,es_150,x_628) else fail-any)) else caught-fail) in
                {8961}let v_1988: bool = not-caught-fail(ems0_16) in
                {8962}let (wkc0_8: aead_key,ems0_17: bitstring) = (if v_1985 then (if v_1986 then (if v_1988 then (kc0_8,ems0_16) else fail-any) else fail-any) else fail-any) in
                {8963}!
                {8964}in(io, (i_8: nat,ad_8: bitstring));
                {8965}if is_nat(i_8) then
                {8966}new msg_ed_7[]: bitstring;
                {8968}new st_17: stamp;
                {8969}event ClientSequenceClient0RTTDataWriteKey(id_client_5,st_17,i_8);
                {8970}event ClientSends0(id_client_5,i_cr_11,psk_224,i_8,ad_8,msg_ed_7);
                {8967}let enc_ed_7: bitstring = aead_enc(@8_backend_a,wkc0_8,i_8,ad_8,msg_ed_7) in
                {8971}out(io, enc_ed_7)
            ) | (
                {8972}in(io, server_hello_8: msg);
                {8973}let SH(B32(sr24_6: bytes24,sr8_21: bytes8),mode_55: params) = server_hello_8 in
                (
                    {8974}if (false && (B32(sr24_6,sr8_21) = B32(HRR24,HRR8))) then
                    (
                        {8975}if (send_kex_5 ≠ true) then
                        {8976}let nego(=TLS13,h_alg_19: hash_alg,a_alg_17: aead_alg,hrr_kex_ext(g_55: group),=empty_sni_ext,ech_ext_21: echExt,=empty_extra_ext,=empty_psk_ext) = mode_55 in
                        {8977}let v_1989: bool = (ech_ext_21 = empty_ech_ext) in
                        {8978}let hrr_mode_9: params = (if not(v_1989) then nego(TLS13,@8_backend_h,@8_backend_a,hrr_kex_ext(@8_backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) else caught-fail) in
                        {8979}let hrr_5: msg = (if not(v_1989) then SH(B32(HRR24,HRR8),hrr_mode_9) else caught-fail) in
                        {8980}let cur_log_28: bitstring = (if not(v_1989) then ((zero,i_client_hello_22),hrr_5) else caught-fail) in
                        {8981}let transcript_hrr_ech_conf_5: bitstring = (if not(v_1989) then catch-fail(hash(@8_backend_h,cur_log_28)) else caught-fail) in
                        {8982}let v_1990: bool = not-caught-fail(transcript_hrr_ech_conf_5) in
                        {8984}let k_199: bitstring = (if v_1990 then catch-fail(b32_2_b(get_random(i_client_hello_22))) else caught-fail) in
                        {8985}let v_1991: bool = not-caught-fail(k_199) in
                        {8983}let s_203: bitstring = (if v_1990 then zero else caught-fail) in
                        {8986}let k_200: bitstring = (if v_1990 then catch-fail((if v_1991 then hmac(@8_backend_h,s_203,k_199) else fail-any)) else caught-fail) in
                        {8987}let v_1992: bool = not-caught-fail(k_200) in
                        {8988}let l_555: label = (if v_1992 then hrr_ech_accept_confirmation else caught-fail) in
                        {8989}let x_629: bitstring = (if v_1992 then (l_555,cur_log_28) else caught-fail) in
                        {8990}let is_ech_accepted_4: bool = (if v_1989 then false else (if (ech_ext_21 = ECHHelloRetryRequest((if v_1990 then crop_into_bytes8((if v_1992 then hmac(@8_backend_h,k_200,x_629) else fail-any)) else fail-any))) then true else false)) in
                        {8991}event ClientEchAcceptance(id_client_5,is_ech_accepted_4);
                        {8992}if is_ech_accepted_4 then
                        (
                            {8994}let ech_config(config_id_16: configId,ech_g_16: group,pkR_18: element,o_dom_12: domain,ech_h_16: hash_alg,ech_a_16: aead_alg) = ech_conf_2 in
                            {8996}new s_204[]: seed;
                            {8997}let gx_49: element = dh_pub(@8_backend_g,dh_k(s_204)) in
                            {8998}let v_1993: bitstring = (dh_k(s_204),gx_49) in
                            {8999}let v_1994: bool = success?(1-proj-2-tuple(v_1993)) in
                            {9000}let gx_50: element = (if v_1994 then 2-proj-2-tuple(v_1993) else caught-fail) in
                            {9001}let x_630: bitstring = (if v_1994 then 1-proj-2-tuple(v_1993) else caught-fail) in
                            {8995}let send_key_share_12: bool = true in
                            {9002}let kex_20: kex_alg = (if v_1994 then (if send_key_share_12 then DHE_kex(@8_backend_g,gx_50) else DHE_group(@8_backend_g)) else caught-fail) in
                            {9003}let (i_kex_ext_7: keyShareExt,i_kex_data_11: bitstring) = (if v_1994 then (client_kex_ext(kex_20),(x_630,@8_backend_g)) else fail-any) in
                            {9005}new s_205[]: seed;
                            {9006}let gx_51: element = dh_pub(@8_tls_g,dh_k(s_205)) in
                            {9007}let v_1995: bitstring = (dh_k(s_205),gx_51) in
                            {9008}let v_1996: bool = success?(1-proj-2-tuple(v_1995)) in
                            {9009}let gx_52: element = (if v_1996 then 2-proj-2-tuple(v_1995) else caught-fail) in
                            {9010}let x_631: bitstring = (if v_1996 then 1-proj-2-tuple(v_1995) else caught-fail) in
                            {9004}let send_key_share_13: bool = true in
                            {9011}let kex_21: kex_alg = (if v_1996 then (if send_key_share_13 then DHE_kex(@8_tls_g,gx_52) else DHE_group(@8_tls_g)) else caught-fail) in
                            {9012}let (o_kex_ext_10: keyShareExt,o_kex_data_11: bitstring) = (if v_1996 then (client_kex_ext(kex_21),(x_631,@8_tls_g)) else fail-any) in
                            {9013}new rand24_21[]: bytes24;
                            {9014}new rand8_21[]: bytes8;
                            {9016}new rand24_22[]: bytes24;
                            {9017}new rand8_22[]: bytes8;
                            {9018}let o_cr_15: bytes32 = B32(rand24_22,rand8_22) in
                            {9015}let i_cr_12: bytes32 = B32(rand24_21,rand8_21) in
                            {8993}let cur_log_IN1_HRR_4: bitstring = ((zero,i_client_hello_22),server_hello_8) in
                            {9020}if @8_use_psk then
                            (
                                {9019}let ech_ext_22: echExt = ECHClientHelloInner in
                                {9021}let (psk_225: preSharedKey,id_104: identityPsk,old_es_14: bitstring,is_safe_90: bool) = psk_data_52 in
                                (
                                    {9025}let k_201: bitstring = catch-fail(psk2b(psk_225)) in
                                    {9026}let v_1997: bool = not-caught-fail(k_201) in
                                    {9024}let s_206: bitstring = zero in
                                    {9027}let early_secret_150: bitstring = catch-fail((if v_1997 then hmac(@8_backend_h,s_206,k_201) else fail-any)) in
                                    {9028}let v_1998: bool = not-caught-fail(early_secret_150) in
                                    {9030}let m_198: bitstring = (if v_1998 then zero else caught-fail) in
                                    {9031}let h_533: bitstring = (if v_1998 then catch-fail(hash(@8_backend_h,m_198)) else caught-fail) in
                                    {9032}let v_1999: bool = not-caught-fail(h_533) in
                                    {9029}let l_556: label = (if v_1998 then tls13_ext_res_binder else caught-fail) in
                                    {9033}let x_632: bitstring = (if v_1999 then (l_556,h_533) else caught-fail) in
                                    {9034}let binder_key_100: bitstring = (if v_1998 then catch-fail((if v_1999 then hmac(@8_backend_h,early_secret_150,x_632) else fail-any)) else caught-fail) in
                                    {9035}let v_2000: bool = not-caught-fail(binder_key_100) in
                                    {9036}let v_2001: bitstring = catch-fail((if v_1998 then (if v_2000 then (early_secret_150,binder_key_100) else fail-any) else fail-any)) in
                                    {9037}let v_2002: bool = (not-caught-fail(v_2001) && success?(1-proj-2-tuple(v_2001))) in
                                    {9038}let kb_100: mac_key = (if v_2002 then 2-proj-2-tuple(v_2001) else caught-fail) in
                                    {9039}let es_151: bitstring = (if v_2002 then 1-proj-2-tuple(v_2001) else caught-fail) in
                                    {9022}let offer_42: params = nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_7,SNI(backend_dom_1),ech_ext_22,@8_i_extra_ext,trunc_client_psk_ext(id_104)) in
                                    {9023}let cur_log'_30: bitstring = (cur_log_IN1_HRR_4,CH(i_cr_12,offer_42)) in
                                    {9040}let binders_29: bitstring = (if v_2002 then catch-fail(hmac(@8_backend_h,kb_100,cur_log'_30)) else caught-fail) in
                                    {9041}let v_2003: bool = not-caught-fail(binders_29) in
                                    {9042}let v_2004: bitstring = catch-fail((if v_2002 then (if v_2003 then (client_psk_ext(id_104,binders_29),(psk_225,id_104,es_151,is_safe_90)) else fail-any) else fail-any)) in
                                    {9043}let v_2005: bool = (not-caught-fail(v_2004) && success?(1-proj-2-tuple(v_2004))) in
                                    {9044}let psk_data_53: bitstring = (if v_2005 then 2-proj-2-tuple(v_2004) else caught-fail) in
                                    {9045}let psk_ext_102: preSharedKeyExt = (if v_2005 then 1-proj-2-tuple(v_2004) else caught-fail) in
                                    {9048}new fake_id_21[]: identityPsk;
                                    {9049}new fake_binder_21[]: bitstring;
                                    {9055}let v_2006: hpkeContext = (if v_2005 then catch-fail(context_2) else caught-fail) in
                                    {9056}let v_2007: bool = (not-caught-fail(v_2006) && ((S =nf 1-proj-hpke_context(v_2006)) && success?(1-proj-hpke_context(v_2006)))) in
                                    {9057}let base_nonce_22: bitstring = (if v_2007 then 3-proj-hpke_context(v_2006) else caught-fail) in
                                    {9058}let key_22: aead_key = (if v_2007 then 2-proj-hpke_context(v_2006) else caught-fail) in
                                    {9054}let n_19: nat = (if v_2005 then 2 else caught-fail) in
                                    {9051}let o_ech_ext_ADD_17: echExt = (if v_2005 then ECHClientHelloOuter(ech_h_16,ech_a_16,config_id_16,zero,zero) else caught-fail) in
                                    {9050}let o_psk_ext_22: preSharedKeyExt = (if v_2005 then (if @8_use_psk then client_psk_ext(fake_id_21,fake_binder_21) else empty_psk_ext) else caught-fail) in
                                    {9052}let o_offer_ADD_17: params = (if v_2005 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_10,SNI(o_dom_12),o_ech_ext_ADD_17,empty_extra_ext,o_psk_ext_22) else caught-fail) in
                                    {9053}let o_client_hello_ADD_17: msg = (if v_2005 then CH(o_cr_15,o_offer_ADD_17) else caught-fail) in
                                    {9046}let i_offer_17: params = (if v_2005 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_7,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_102) else caught-fail) in
                                    {9047}let i_client_hello_23: msg = (if v_2005 then CH(i_cr_12,i_offer_17) else caught-fail) in
                                    {9059}let payload_23: bitstring = (if v_2005 then catch-fail((if v_2007 then aead_enc(ech_a_16,key_22,(base_nonce_22,n_19),o_client_hello_ADD_17,i_client_hello_23) else fail-any)) else caught-fail) in
                                    {9060}let v_2008: bool = not-caught-fail(payload_23) in
                                    {9061}let o_ech_ext_22: echExt = (if v_2008 then ECHClientHelloOuter(ech_h_16,ech_a_16,config_id_16,zero,payload_23) else caught-fail) in
                                    {9062}let o_offer_38: params = (if v_2008 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_10,SNI(o_dom_12),o_ech_ext_22,empty_extra_ext,o_psk_ext_22) else caught-fail) in
                                    {9063}let (o_client_hello'_12: msg,i_client_hello'_13: msg,i_cr'_12: bytes32,i_kex_data'_12: bitstring,psk_data'_41: bitstring) = (if v_2005 then (if v_2008 then (CH(o_cr_15,o_offer_38),i_client_hello_23,i_cr_12,i_kex_data_11,psk_data_53) else fail-any) else fail-any) in
                                    {9064}out(io, o_client_hello'_12);
                                    {9065}in(io, server_hello'_37: msg);
                                    {9066}let SH(B32(sr24'_12: bytes24,sr8'_12: bytes8),params'_12: params) = server_hello'_37 in
                                    {9068}let sh_modified_17: msg = SH(B32(sr24'_12,zero8),params'_12) in
                                    {9067}let cur_log_IN1_HRR_IN2_12: bitstring = (cur_log_IN1_HRR_4,i_client_hello'_13) in
                                    {9069}let cur_log_sh_17: bitstring = (cur_log_IN1_HRR_IN2_12,sh_modified_17) in
                                    {9070}let transcript_ech_conf_17: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_17)) in
                                    {9071}let v_2009: bool = not-caught-fail(transcript_ech_conf_17) in
                                    {9073}let k_202: bitstring = (if v_2009 then catch-fail(b32_2_b(get_random(i_client_hello'_13))) else caught-fail) in
                                    {9074}let v_2010: bool = not-caught-fail(k_202) in
                                    {9072}let s_207: bitstring = (if v_2009 then zero else caught-fail) in
                                    {9075}let k_203: bitstring = (if v_2009 then catch-fail((if v_2010 then hmac(@8_backend_h,s_207,k_202) else fail-any)) else caught-fail) in
                                    {9076}let v_2011: bool = not-caught-fail(k_203) in
                                    {9077}let l_557: label = (if v_2011 then ech_accept_confirmation else caught-fail) in
                                    {9078}let x_633: bitstring = (if v_2011 then (l_557,cur_log_sh_17) else caught-fail) in
                                    {9079}let sr8_22: bytes8 = (if v_2009 then catch-fail(crop_into_bytes8((if v_2011 then hmac(@8_backend_h,k_203,x_633) else fail-any))) else caught-fail) in
                                    {9080}let v_2012: bool = not-caught-fail(sr8_22) in
                                    {9081}if (B32(sr24'_12,sr8'_12) = (if v_2009 then (if v_2012 then B32(sr24'_12,sr8_22) else fail-any) else fail-any)) then
                                    {9082}let (x_634: bitstring,g_56: group) = i_kex_data'_12 in
                                    {9083}let (psk_offer_48: preSharedKey,id_offer_48: identityPsk,es_offer_48: bitstring,is_safe_offer_48: bool) = psk_data'_41 in
                                    {9084}event Client_PSKOffer(id_client_5,psk_offer_48,id_offer_48,is_safe_offer_48);
                                    {9085}event Client_Rand_client(id_client_5,i_cr'_12);
                                    {9086}event Client_DH_client(id_client_5,dh_pub(g_56,x_634));
                                    {9087}event Client_server_domain(id_client_5,backend_dom_1);
                                    {9088}let SH(sr_59: bytes32,mode_56: params) = server_hello'_37 in
                                    {9089}event Client_Rand_server(id_client_5,sr_59);
                                    {9090}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_56,gy_49: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_103: preSharedKeyExt) = mode_56 in
                                    (
                                        {9092}event Client_DH_server(id_client_5,gy_49);
                                        {9093}let v_2013: bool = (psk_ext_103 = empty_psk_ext) in
                                        {9094}let psk_226: preSharedKey = (if v_2013 then NoPsk else caught-fail) in
                                        {9096}let k_204: bitstring = (if v_2013 then catch-fail(psk2b(psk_226)) else caught-fail) in
                                        {9097}let v_2014: bool = not-caught-fail(k_204) in
                                        {9095}let s_208: bitstring = (if v_2013 then zero else caught-fail) in
                                        {9098}let early_secret_151: bitstring = (if v_2013 then catch-fail((if v_2014 then hmac(@8_backend_h,s_208,k_204) else fail-any)) else caught-fail) in
                                        {9099}let v_2015: bool = not-caught-fail(early_secret_151) in
                                        {9101}let m_199: bitstring = (if v_2015 then zero else caught-fail) in
                                        {9102}let h_534: bitstring = (if v_2015 then catch-fail(hash(@8_backend_h,m_199)) else caught-fail) in
                                        {9103}let v_2016: bool = not-caught-fail(h_534) in
                                        {9100}let l_558: label = (if v_2015 then tls13_ext_res_binder else caught-fail) in
                                        {9104}let x_635: bitstring = (if v_2016 then (l_558,h_534) else caught-fail) in
                                        {9105}let binder_key_101: bitstring = (if v_2015 then catch-fail((if v_2016 then hmac(@8_backend_h,early_secret_151,x_635) else fail-any)) else caught-fail) in
                                        {9106}let v_2017: bool = not-caught-fail(binder_key_101) in
                                        {9107}let v_2018: bitstring = (if v_2013 then catch-fail((if v_2015 then (if v_2017 then (early_secret_151,binder_key_101) else fail-any) else fail-any)) else caught-fail) in
                                        {9108}let v_2019: bool = (not-caught-fail(v_2018) && success?(1-proj-2-tuple(v_2018))) in
                                        {9109}let kb_101: mac_key = (if v_2019 then 2-proj-2-tuple(v_2018) else caught-fail) in
                                        {9110}let es_152: bitstring = (if v_2019 then 1-proj-2-tuple(v_2018) else caught-fail) in
                                        {9111}let v_2020: bitstring = (if not(v_2013) then catch-fail(psk_data'_41) else caught-fail) in
                                        {9112}let v_2021: bool = (not-caught-fail(v_2020) && success?(1-proj-4-tuple(v_2020))) in
                                        {9113}let is_safe_91: bool = (if v_2021 then 4-proj-4-tuple(v_2020) else caught-fail) in
                                        {9114}let es_153: bitstring = (if v_2021 then 3-proj-4-tuple(v_2020) else caught-fail) in
                                        {9115}let id_105: identityPsk = (if v_2021 then 2-proj-4-tuple(v_2020) else caught-fail) in
                                        {9116}let psk_227: preSharedKey = (if v_2021 then 1-proj-4-tuple(v_2020) else caught-fail) in
                                        {9117}let (psk_228: preSharedKey,early_secret_152: bitstring,valid_48: bool,safe_psk_54: bool) = (if v_2013 then (if v_2019 then (NoPsk,es_152,true,false) else fail-any) else (if v_2021 then (psk_227,es_153,((psk_227 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_103)),is_safe_91) else fail-any)) in
                                        {9118}event Client_PSKChoosen(id_client_5,psk_228,safe_psk_54);
                                        {9119}if valid_48 then
                                        (
                                            {9122}new s_209[]: seed;
                                            {9120}let gxy_98: element = catch-fail(dh_decap_fun(g_56,gy_49,x_634)) in
                                            {9121}let v_2022: bool = not-caught-fail(gxy_98) in
                                            {9123}let gxy_99: element = (if v_2022 then gxy_98 else dh_f(s_209)) in
                                            {9124}event Client_DH_gxy(id_client_5,gxy_99);
                                            {9126}let m_200: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {9127}let v_2023: bool = not-caught-fail(m_200) in
                                            {9128}let h_535: bitstring = (if v_2023 then catch-fail(hash(@8_backend_h,m_200)) else caught-fail) in
                                            {9129}let v_2024: bool = not-caught-fail(h_535) in
                                            {9125}let l_559: label = tls13_derived in
                                            {9130}let x_636: bitstring = (if v_2024 then (l_559,h_535) else caught-fail) in
                                            {9131}let extra_106: bitstring = catch-fail((if v_2023 then (if v_2024 then hmac(@8_backend_h,early_secret_152,x_636) else fail-any) else fail-any)) in
                                            {9132}let v_2025: bool = not-caught-fail(extra_106) in
                                            {9133}let handshake_secret_49: bitstring = (if v_2025 then hmac(@8_backend_h,extra_106,gxy_99) else fail-any) in
                                            {9135}let m_201: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {9136}let v_2026: bool = not-caught-fail(m_201) in
                                            {9137}let h_536: bitstring = (if v_2026 then catch-fail(hash(@8_backend_h,m_201)) else caught-fail) in
                                            {9138}let v_2027: bool = not-caught-fail(h_536) in
                                            {9134}let l_560: label = tls13_derived in
                                            {9139}let x_637: bitstring = (if v_2027 then (l_560,h_536) else caught-fail) in
                                            {9140}let extra_107: bitstring = catch-fail((if v_2026 then (if v_2027 then hmac(@8_backend_h,handshake_secret_49,x_637) else fail-any) else fail-any)) in
                                            {9141}let v_2028: bool = not-caught-fail(extra_107) in
                                            {9142}let k_205: bitstring = (if v_2028 then zero else caught-fail) in
                                            {9143}let master_secret_105: bitstring = (if v_2028 then catch-fail(hmac(@8_backend_h,handshake_secret_49,k_205)) else caught-fail) in
                                            {9144}let v_2029: bool = not-caught-fail(master_secret_105) in
                                            {9091}let cur_log2_103: bitstring = (cur_log_IN1_HRR_IN2_12,server_hello'_37) in
                                            {9146}let h_537: bitstring = (if v_2029 then catch-fail(hash(@8_backend_h,cur_log2_103)) else caught-fail) in
                                            {9147}let v_2030: bool = not-caught-fail(h_537) in
                                            {9145}let l_561: label = (if v_2029 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {9148}let x_638: bitstring = (if v_2030 then (l_561,h_537) else caught-fail) in
                                            {9149}let client_hts_49: bitstring = (if v_2029 then catch-fail((if v_2030 then hmac(@8_backend_h,handshake_secret_49,x_638) else fail-any)) else caught-fail) in
                                            {9150}let v_2031: bool = not-caught-fail(client_hts_49) in
                                            {9152}let h_538: bitstring = (if v_2031 then catch-fail(hash(@8_backend_h,cur_log2_103)) else caught-fail) in
                                            {9153}let v_2032: bool = not-caught-fail(h_538) in
                                            {9151}let l_562: label = (if v_2031 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {9154}let x_639: bitstring = (if v_2032 then (l_562,h_538) else caught-fail) in
                                            {9155}let server_hts_49: bitstring = (if v_2031 then catch-fail((if v_2032 then hmac(@8_backend_h,handshake_secret_49,x_639) else fail-any)) else caught-fail) in
                                            {9156}let v_2033: bool = not-caught-fail(server_hts_49) in
                                            {9158}let h_539: bitstring = (if v_2033 then zero else caught-fail) in
                                            {9157}let l_563: label = (if v_2033 then tls13_key else caught-fail) in
                                            {9159}let x_640: bitstring = (if v_2033 then (l_563,h_539) else caught-fail) in
                                            {9160}let client_wkh_49: bitstring = (if v_2033 then catch-fail(hmac(@8_backend_h,client_hts_49,x_640)) else caught-fail) in
                                            {9161}let v_2034: bool = not-caught-fail(client_wkh_49) in
                                            {9163}let h_540: bitstring = (if v_2034 then zero else caught-fail) in
                                            {9162}let l_564: label = (if v_2034 then tls13_key else caught-fail) in
                                            {9164}let x_641: bitstring = (if v_2034 then (l_564,h_540) else caught-fail) in
                                            {9165}let server_wkh_49: bitstring = (if v_2034 then catch-fail(hmac(@8_backend_h,server_hts_49,x_641)) else caught-fail) in
                                            {9166}let v_2035: bool = not-caught-fail(server_wkh_49) in
                                            {9168}let h_541: bitstring = (if v_2035 then zero else caught-fail) in
                                            {9167}let l_565: label = (if v_2035 then tls13_finished else caught-fail) in
                                            {9169}let x_642: bitstring = (if v_2035 then (l_565,h_541) else caught-fail) in
                                            {9170}let client_fk_49: bitstring = (if v_2035 then catch-fail(hmac(@8_backend_h,client_hts_49,x_642)) else caught-fail) in
                                            {9171}let v_2036: bool = not-caught-fail(client_fk_49) in
                                            {9173}let h_542: bitstring = (if v_2036 then zero else caught-fail) in
                                            {9172}let l_566: label = (if v_2036 then tls13_finished else caught-fail) in
                                            {9174}let x_643: bitstring = (if v_2036 then (l_566,h_542) else caught-fail) in
                                            {9175}let server_fk_49: bitstring = (if v_2036 then catch-fail(hmac(@8_backend_h,server_hts_49,x_643)) else caught-fail) in
                                            {9176}let v_2037: bool = not-caught-fail(server_fk_49) in
                                            {9177}let (master_secret_106: bitstring,chk_56: aead_key,shk_55: aead_key,cfin_56: mac_key,sfin_55: mac_key) = (if v_2028 then (if v_2029 then (if v_2031 then (if v_2033 then (if v_2034 then (if v_2035 then (if v_2036 then (if v_2037 then (master_secret_105,client_wkh_49,server_wkh_49,client_fk_49,server_fk_49) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {9178}event Client_chk(id_client_5,chk_56);
                                            {9179}event Client_shk(id_client_5,shk_55);
                                            {9180}event Client_cfin(id_client_5,cfin_56);
                                            {9181}event Client_sfin(id_client_5,sfin_55);
                                            {9182}in(io, enc_ee_msg_48: bitstring);
                                            {9183}let ee_msg_53: msg = aead_dec(@8_backend_a,shk_55,0,zero,enc_ee_msg_48) in
                                            {9184}let EE(ech_ee_48: echExt,extra_ee_48: extraExt) = ee_msg_53 in
                                            {9185}let cur_log2_104: bitstring = (cur_log2_103,ee_msg_53) in
                                            {9186}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_12,sr_59,@8_backend_h,@8_backend_a,c_dom_7,backend_dom_1,psk_228,safe_psk_54,@8_comp_psk,master_secret_106,chk_56,0,shk_55,1,cfin_56,sfin_55,cur_log2_104)))
                                        )
                                        else
                                            {9187}out(io, illegal_parameter)
                                    )
                                    else
                                        {9188}out(io, illegal_parameter)
                                )
                                else
                                    {9365}get pre_shared_keys(c_dom'_16: domain,=backend_dom_1,=@8_backend_h,id_106: identityPsk,psk_229: preSharedKey,idP_18: idProc,is_safe_92: bool) in
                                    {9189}event Selected_one_time_used_psk(id_client_5,psk_229,is_safe_92);
                                    {9190}event Selected_psk(c_dom_7,c_dom'_16,idP_18,is_safe_92);
                                    {9191}event Selected_psk_no_missmatch(id_client_5,backend_dom_1,@8_backend_h,psk_229,id_106);
                                    {9192}event Selected_psk_with_ID(c_dom_7,c_dom'_16,id_106,idP_18,is_safe_92);
                                    {9193}let v_2038: bitstring = (id_106,psk_229,is_safe_92) in
                                    {9194}let v_2039: bool = success?(1-proj-3-tuple(v_2038)) in
                                    {9195}let is_safe_93: bool = (if v_2039 then 3-proj-3-tuple(v_2038) else caught-fail) in
                                    {9196}let psk_230: preSharedKey = (if v_2039 then 2-proj-3-tuple(v_2038) else caught-fail) in
                                    {9197}let id_107: identityPsk = (if v_2039 then 1-proj-3-tuple(v_2038) else caught-fail) in
                                    {9201}let k_206: bitstring = (if v_2039 then catch-fail(psk2b(psk_230)) else caught-fail) in
                                    {9202}let v_2040: bool = not-caught-fail(k_206) in
                                    {9200}let s_210: bitstring = (if v_2039 then zero else caught-fail) in
                                    {9203}let early_secret_153: bitstring = (if v_2039 then catch-fail((if v_2040 then hmac(@8_backend_h,s_210,k_206) else fail-any)) else caught-fail) in
                                    {9204}let v_2041: bool = not-caught-fail(early_secret_153) in
                                    {9206}let m_202: bitstring = (if v_2041 then zero else caught-fail) in
                                    {9207}let h_543: bitstring = (if v_2041 then catch-fail(hash(@8_backend_h,m_202)) else caught-fail) in
                                    {9208}let v_2042: bool = not-caught-fail(h_543) in
                                    {9205}let l_567: label = (if v_2041 then tls13_ext_res_binder else caught-fail) in
                                    {9209}let x_644: bitstring = (if v_2042 then (l_567,h_543) else caught-fail) in
                                    {9210}let binder_key_102: bitstring = (if v_2041 then catch-fail((if v_2042 then hmac(@8_backend_h,early_secret_153,x_644) else fail-any)) else caught-fail) in
                                    {9211}let v_2043: bool = not-caught-fail(binder_key_102) in
                                    {9212}let v_2044: bitstring = (if v_2039 then catch-fail((if v_2041 then (if v_2043 then (early_secret_153,binder_key_102) else fail-any) else fail-any)) else caught-fail) in
                                    {9213}let v_2045: bool = (not-caught-fail(v_2044) && success?(1-proj-2-tuple(v_2044))) in
                                    {9214}let kb_102: mac_key = (if v_2045 then 2-proj-2-tuple(v_2044) else caught-fail) in
                                    {9215}let es_154: bitstring = (if v_2045 then 1-proj-2-tuple(v_2044) else caught-fail) in
                                    {9198}let offer_43: params = (if v_2039 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_7,SNI(backend_dom_1),ech_ext_22,@8_i_extra_ext,trunc_client_psk_ext(id_107)) else caught-fail) in
                                    {9199}let cur_log'_31: bitstring = (if v_2039 then (cur_log_IN1_HRR_4,CH(i_cr_12,offer_43)) else caught-fail) in
                                    {9216}let binders_30: bitstring = (if v_2045 then catch-fail(hmac(@8_backend_h,kb_102,cur_log'_31)) else caught-fail) in
                                    {9217}let v_2046: bool = not-caught-fail(binders_30) in
                                    {9218}let v_2047: bitstring = catch-fail((if v_2039 then (if v_2045 then (if v_2046 then (client_psk_ext(id_107,binders_30),(psk_230,id_107,es_154,is_safe_93)) else fail-any) else fail-any) else fail-any)) in
                                    {9219}let v_2048: bool = (not-caught-fail(v_2047) && success?(1-proj-2-tuple(v_2047))) in
                                    {9220}let psk_data_54: bitstring = (if v_2048 then 2-proj-2-tuple(v_2047) else caught-fail) in
                                    {9221}let psk_ext_104: preSharedKeyExt = (if v_2048 then 1-proj-2-tuple(v_2047) else caught-fail) in
                                    {9224}new fake_id_22[]: identityPsk;
                                    {9225}new fake_binder_22[]: bitstring;
                                    {9231}let v_2049: hpkeContext = (if v_2048 then catch-fail(context_2) else caught-fail) in
                                    {9232}let v_2050: bool = (not-caught-fail(v_2049) && ((S =nf 1-proj-hpke_context(v_2049)) && success?(1-proj-hpke_context(v_2049)))) in
                                    {9233}let base_nonce_23: bitstring = (if v_2050 then 3-proj-hpke_context(v_2049) else caught-fail) in
                                    {9234}let key_23: aead_key = (if v_2050 then 2-proj-hpke_context(v_2049) else caught-fail) in
                                    {9230}let n_20: nat = (if v_2048 then 2 else caught-fail) in
                                    {9227}let o_ech_ext_ADD_18: echExt = (if v_2048 then ECHClientHelloOuter(ech_h_16,ech_a_16,config_id_16,zero,zero) else caught-fail) in
                                    {9226}let o_psk_ext_23: preSharedKeyExt = (if v_2048 then (if @8_use_psk then client_psk_ext(fake_id_22,fake_binder_22) else empty_psk_ext) else caught-fail) in
                                    {9228}let o_offer_ADD_18: params = (if v_2048 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_10,SNI(o_dom_12),o_ech_ext_ADD_18,empty_extra_ext,o_psk_ext_23) else caught-fail) in
                                    {9229}let o_client_hello_ADD_18: msg = (if v_2048 then CH(o_cr_15,o_offer_ADD_18) else caught-fail) in
                                    {9222}let i_offer_18: params = (if v_2048 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_7,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_104) else caught-fail) in
                                    {9223}let i_client_hello_24: msg = (if v_2048 then CH(i_cr_12,i_offer_18) else caught-fail) in
                                    {9235}let payload_24: bitstring = (if v_2048 then catch-fail((if v_2050 then aead_enc(ech_a_16,key_23,(base_nonce_23,n_20),o_client_hello_ADD_18,i_client_hello_24) else fail-any)) else caught-fail) in
                                    {9236}let v_2051: bool = not-caught-fail(payload_24) in
                                    {9237}let o_ech_ext_23: echExt = (if v_2051 then ECHClientHelloOuter(ech_h_16,ech_a_16,config_id_16,zero,payload_24) else caught-fail) in
                                    {9238}let o_offer_39: params = (if v_2051 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_10,SNI(o_dom_12),o_ech_ext_23,empty_extra_ext,o_psk_ext_23) else caught-fail) in
                                    {9239}let (o_client_hello'_13: msg,i_client_hello'_14: msg,i_cr'_13: bytes32,i_kex_data'_13: bitstring,psk_data'_42: bitstring) = (if v_2048 then (if v_2051 then (CH(o_cr_15,o_offer_39),i_client_hello_24,i_cr_12,i_kex_data_11,psk_data_54) else fail-any) else fail-any) in
                                    {9240}out(io, o_client_hello'_13);
                                    {9241}in(io, server_hello'_38: msg);
                                    {9242}let SH(B32(sr24'_13: bytes24,sr8'_13: bytes8),params'_13: params) = server_hello'_38 in
                                    {9244}let sh_modified_18: msg = SH(B32(sr24'_13,zero8),params'_13) in
                                    {9243}let cur_log_IN1_HRR_IN2_13: bitstring = (cur_log_IN1_HRR_4,i_client_hello'_14) in
                                    {9245}let cur_log_sh_18: bitstring = (cur_log_IN1_HRR_IN2_13,sh_modified_18) in
                                    {9246}let transcript_ech_conf_18: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_18)) in
                                    {9247}let v_2052: bool = not-caught-fail(transcript_ech_conf_18) in
                                    {9249}let k_207: bitstring = (if v_2052 then catch-fail(b32_2_b(get_random(i_client_hello'_14))) else caught-fail) in
                                    {9250}let v_2053: bool = not-caught-fail(k_207) in
                                    {9248}let s_211: bitstring = (if v_2052 then zero else caught-fail) in
                                    {9251}let k_208: bitstring = (if v_2052 then catch-fail((if v_2053 then hmac(@8_backend_h,s_211,k_207) else fail-any)) else caught-fail) in
                                    {9252}let v_2054: bool = not-caught-fail(k_208) in
                                    {9253}let l_568: label = (if v_2054 then ech_accept_confirmation else caught-fail) in
                                    {9254}let x_645: bitstring = (if v_2054 then (l_568,cur_log_sh_18) else caught-fail) in
                                    {9255}let sr8_23: bytes8 = (if v_2052 then catch-fail(crop_into_bytes8((if v_2054 then hmac(@8_backend_h,k_208,x_645) else fail-any))) else caught-fail) in
                                    {9256}let v_2055: bool = not-caught-fail(sr8_23) in
                                    {9257}if (B32(sr24'_13,sr8'_13) = (if v_2052 then (if v_2055 then B32(sr24'_13,sr8_23) else fail-any) else fail-any)) then
                                    {9258}let (x_646: bitstring,g_57: group) = i_kex_data'_13 in
                                    {9259}let (psk_offer_49: preSharedKey,id_offer_49: identityPsk,es_offer_49: bitstring,is_safe_offer_49: bool) = psk_data'_42 in
                                    {9260}event Client_PSKOffer(id_client_5,psk_offer_49,id_offer_49,is_safe_offer_49);
                                    {9261}event Client_Rand_client(id_client_5,i_cr'_13);
                                    {9262}event Client_DH_client(id_client_5,dh_pub(g_57,x_646));
                                    {9263}event Client_server_domain(id_client_5,backend_dom_1);
                                    {9264}let SH(sr_60: bytes32,mode_57: params) = server_hello'_38 in
                                    {9265}event Client_Rand_server(id_client_5,sr_60);
                                    {9266}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_57,gy_50: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_105: preSharedKeyExt) = mode_57 in
                                    (
                                        {9268}event Client_DH_server(id_client_5,gy_50);
                                        {9269}let v_2056: bool = (psk_ext_105 = empty_psk_ext) in
                                        {9270}let psk_231: preSharedKey = (if v_2056 then NoPsk else caught-fail) in
                                        {9272}let k_209: bitstring = (if v_2056 then catch-fail(psk2b(psk_231)) else caught-fail) in
                                        {9273}let v_2057: bool = not-caught-fail(k_209) in
                                        {9271}let s_212: bitstring = (if v_2056 then zero else caught-fail) in
                                        {9274}let early_secret_154: bitstring = (if v_2056 then catch-fail((if v_2057 then hmac(@8_backend_h,s_212,k_209) else fail-any)) else caught-fail) in
                                        {9275}let v_2058: bool = not-caught-fail(early_secret_154) in
                                        {9277}let m_203: bitstring = (if v_2058 then zero else caught-fail) in
                                        {9278}let h_544: bitstring = (if v_2058 then catch-fail(hash(@8_backend_h,m_203)) else caught-fail) in
                                        {9279}let v_2059: bool = not-caught-fail(h_544) in
                                        {9276}let l_569: label = (if v_2058 then tls13_ext_res_binder else caught-fail) in
                                        {9280}let x_647: bitstring = (if v_2059 then (l_569,h_544) else caught-fail) in
                                        {9281}let binder_key_103: bitstring = (if v_2058 then catch-fail((if v_2059 then hmac(@8_backend_h,early_secret_154,x_647) else fail-any)) else caught-fail) in
                                        {9282}let v_2060: bool = not-caught-fail(binder_key_103) in
                                        {9283}let v_2061: bitstring = (if v_2056 then catch-fail((if v_2058 then (if v_2060 then (early_secret_154,binder_key_103) else fail-any) else fail-any)) else caught-fail) in
                                        {9284}let v_2062: bool = (not-caught-fail(v_2061) && success?(1-proj-2-tuple(v_2061))) in
                                        {9285}let kb_103: mac_key = (if v_2062 then 2-proj-2-tuple(v_2061) else caught-fail) in
                                        {9286}let es_155: bitstring = (if v_2062 then 1-proj-2-tuple(v_2061) else caught-fail) in
                                        {9287}let v_2063: bitstring = (if not(v_2056) then catch-fail(psk_data'_42) else caught-fail) in
                                        {9288}let v_2064: bool = (not-caught-fail(v_2063) && success?(1-proj-4-tuple(v_2063))) in
                                        {9289}let is_safe_94: bool = (if v_2064 then 4-proj-4-tuple(v_2063) else caught-fail) in
                                        {9290}let es_156: bitstring = (if v_2064 then 3-proj-4-tuple(v_2063) else caught-fail) in
                                        {9291}let id_108: identityPsk = (if v_2064 then 2-proj-4-tuple(v_2063) else caught-fail) in
                                        {9292}let psk_232: preSharedKey = (if v_2064 then 1-proj-4-tuple(v_2063) else caught-fail) in
                                        {9293}let (psk_233: preSharedKey,early_secret_155: bitstring,valid_49: bool,safe_psk_55: bool) = (if v_2056 then (if v_2062 then (NoPsk,es_155,true,false) else fail-any) else (if v_2064 then (psk_232,es_156,((psk_232 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_105)),is_safe_94) else fail-any)) in
                                        {9294}event Client_PSKChoosen(id_client_5,psk_233,safe_psk_55);
                                        {9295}if valid_49 then
                                        (
                                            {9298}new s_213[]: seed;
                                            {9296}let gxy_100: element = catch-fail(dh_decap_fun(g_57,gy_50,x_646)) in
                                            {9297}let v_2065: bool = not-caught-fail(gxy_100) in
                                            {9299}let gxy_101: element = (if v_2065 then gxy_100 else dh_f(s_213)) in
                                            {9300}event Client_DH_gxy(id_client_5,gxy_101);
                                            {9302}let m_204: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {9303}let v_2066: bool = not-caught-fail(m_204) in
                                            {9304}let h_545: bitstring = (if v_2066 then catch-fail(hash(@8_backend_h,m_204)) else caught-fail) in
                                            {9305}let v_2067: bool = not-caught-fail(h_545) in
                                            {9301}let l_570: label = tls13_derived in
                                            {9306}let x_648: bitstring = (if v_2067 then (l_570,h_545) else caught-fail) in
                                            {9307}let extra_108: bitstring = catch-fail((if v_2066 then (if v_2067 then hmac(@8_backend_h,early_secret_155,x_648) else fail-any) else fail-any)) in
                                            {9308}let v_2068: bool = not-caught-fail(extra_108) in
                                            {9309}let handshake_secret_50: bitstring = (if v_2068 then hmac(@8_backend_h,extra_108,gxy_101) else fail-any) in
                                            {9311}let m_205: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                            {9312}let v_2069: bool = not-caught-fail(m_205) in
                                            {9313}let h_546: bitstring = (if v_2069 then catch-fail(hash(@8_backend_h,m_205)) else caught-fail) in
                                            {9314}let v_2070: bool = not-caught-fail(h_546) in
                                            {9310}let l_571: label = tls13_derived in
                                            {9315}let x_649: bitstring = (if v_2070 then (l_571,h_546) else caught-fail) in
                                            {9316}let extra_109: bitstring = catch-fail((if v_2069 then (if v_2070 then hmac(@8_backend_h,handshake_secret_50,x_649) else fail-any) else fail-any)) in
                                            {9317}let v_2071: bool = not-caught-fail(extra_109) in
                                            {9318}let k_210: bitstring = (if v_2071 then zero else caught-fail) in
                                            {9319}let master_secret_107: bitstring = (if v_2071 then catch-fail(hmac(@8_backend_h,handshake_secret_50,k_210)) else caught-fail) in
                                            {9320}let v_2072: bool = not-caught-fail(master_secret_107) in
                                            {9267}let cur_log2_105: bitstring = (cur_log_IN1_HRR_IN2_13,server_hello'_38) in
                                            {9322}let h_547: bitstring = (if v_2072 then catch-fail(hash(@8_backend_h,cur_log2_105)) else caught-fail) in
                                            {9323}let v_2073: bool = not-caught-fail(h_547) in
                                            {9321}let l_572: label = (if v_2072 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {9324}let x_650: bitstring = (if v_2073 then (l_572,h_547) else caught-fail) in
                                            {9325}let client_hts_50: bitstring = (if v_2072 then catch-fail((if v_2073 then hmac(@8_backend_h,handshake_secret_50,x_650) else fail-any)) else caught-fail) in
                                            {9326}let v_2074: bool = not-caught-fail(client_hts_50) in
                                            {9328}let h_548: bitstring = (if v_2074 then catch-fail(hash(@8_backend_h,cur_log2_105)) else caught-fail) in
                                            {9329}let v_2075: bool = not-caught-fail(h_548) in
                                            {9327}let l_573: label = (if v_2074 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {9330}let x_651: bitstring = (if v_2075 then (l_573,h_548) else caught-fail) in
                                            {9331}let server_hts_50: bitstring = (if v_2074 then catch-fail((if v_2075 then hmac(@8_backend_h,handshake_secret_50,x_651) else fail-any)) else caught-fail) in
                                            {9332}let v_2076: bool = not-caught-fail(server_hts_50) in
                                            {9334}let h_549: bitstring = (if v_2076 then zero else caught-fail) in
                                            {9333}let l_574: label = (if v_2076 then tls13_key else caught-fail) in
                                            {9335}let x_652: bitstring = (if v_2076 then (l_574,h_549) else caught-fail) in
                                            {9336}let client_wkh_50: bitstring = (if v_2076 then catch-fail(hmac(@8_backend_h,client_hts_50,x_652)) else caught-fail) in
                                            {9337}let v_2077: bool = not-caught-fail(client_wkh_50) in
                                            {9339}let h_550: bitstring = (if v_2077 then zero else caught-fail) in
                                            {9338}let l_575: label = (if v_2077 then tls13_key else caught-fail) in
                                            {9340}let x_653: bitstring = (if v_2077 then (l_575,h_550) else caught-fail) in
                                            {9341}let server_wkh_50: bitstring = (if v_2077 then catch-fail(hmac(@8_backend_h,server_hts_50,x_653)) else caught-fail) in
                                            {9342}let v_2078: bool = not-caught-fail(server_wkh_50) in
                                            {9344}let h_551: bitstring = (if v_2078 then zero else caught-fail) in
                                            {9343}let l_576: label = (if v_2078 then tls13_finished else caught-fail) in
                                            {9345}let x_654: bitstring = (if v_2078 then (l_576,h_551) else caught-fail) in
                                            {9346}let client_fk_50: bitstring = (if v_2078 then catch-fail(hmac(@8_backend_h,client_hts_50,x_654)) else caught-fail) in
                                            {9347}let v_2079: bool = not-caught-fail(client_fk_50) in
                                            {9349}let h_552: bitstring = (if v_2079 then zero else caught-fail) in
                                            {9348}let l_577: label = (if v_2079 then tls13_finished else caught-fail) in
                                            {9350}let x_655: bitstring = (if v_2079 then (l_577,h_552) else caught-fail) in
                                            {9351}let server_fk_50: bitstring = (if v_2079 then catch-fail(hmac(@8_backend_h,server_hts_50,x_655)) else caught-fail) in
                                            {9352}let v_2080: bool = not-caught-fail(server_fk_50) in
                                            {9353}let (master_secret_108: bitstring,chk_57: aead_key,shk_56: aead_key,cfin_57: mac_key,sfin_56: mac_key) = (if v_2071 then (if v_2072 then (if v_2074 then (if v_2076 then (if v_2077 then (if v_2078 then (if v_2079 then (if v_2080 then (master_secret_107,client_wkh_50,server_wkh_50,client_fk_50,server_fk_50) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {9354}event Client_chk(id_client_5,chk_57);
                                            {9355}event Client_shk(id_client_5,shk_56);
                                            {9356}event Client_cfin(id_client_5,cfin_57);
                                            {9357}event Client_sfin(id_client_5,sfin_56);
                                            {9358}in(io, enc_ee_msg_49: bitstring);
                                            {9359}let ee_msg_54: msg = aead_dec(@8_backend_a,shk_56,0,zero,enc_ee_msg_49) in
                                            {9360}let EE(ech_ee_49: echExt,extra_ee_49: extraExt) = ee_msg_54 in
                                            {9361}let cur_log2_106: bitstring = (cur_log2_105,ee_msg_54) in
                                            {9362}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_13,sr_60,@8_backend_h,@8_backend_a,c_dom_7,backend_dom_1,psk_233,safe_psk_55,@8_comp_psk,master_secret_108,chk_57,0,shk_56,1,cfin_57,sfin_56,cur_log2_106)))
                                        )
                                        else
                                            {9363}out(io, illegal_parameter)
                                    )
                                    else
                                        {9364}out(io, illegal_parameter)
                            )
                            else
                                {9366}let psk_234: preSharedKey = NoPsk in
                                {9368}let k_211: bitstring = catch-fail(psk2b(psk_234)) in
                                {9369}let v_2081: bool = not-caught-fail(k_211) in
                                {9367}let s_214: bitstring = zero in
                                {9370}let early_secret_156: bitstring = catch-fail((if v_2081 then hmac(@8_backend_h,s_214,k_211) else fail-any)) in
                                {9371}let v_2082: bool = not-caught-fail(early_secret_156) in
                                {9373}let m_206: bitstring = (if v_2082 then zero else caught-fail) in
                                {9374}let h_553: bitstring = (if v_2082 then catch-fail(hash(@8_backend_h,m_206)) else caught-fail) in
                                {9375}let v_2083: bool = not-caught-fail(h_553) in
                                {9372}let l_578: label = (if v_2082 then tls13_ext_res_binder else caught-fail) in
                                {9376}let x_656: bitstring = (if v_2083 then (l_578,h_553) else caught-fail) in
                                {9377}let binder_key_104: bitstring = (if v_2082 then catch-fail((if v_2083 then hmac(@8_backend_h,early_secret_156,x_656) else fail-any)) else caught-fail) in
                                {9378}let v_2084: bool = not-caught-fail(binder_key_104) in
                                {9379}let v_2085: bitstring = catch-fail((if v_2082 then (if v_2084 then (early_secret_156,binder_key_104) else fail-any) else fail-any)) in
                                {9380}let v_2086: bool = (not-caught-fail(v_2085) && success?(1-proj-2-tuple(v_2085))) in
                                {9381}let kb_104: mac_key = (if v_2086 then 2-proj-2-tuple(v_2085) else caught-fail) in
                                {9382}let es_157: bitstring = (if v_2086 then 1-proj-2-tuple(v_2085) else caught-fail) in
                                {9383}let v_2087: bitstring = catch-fail((if v_2086 then (empty_psk_ext,(NoPsk,zero,es_157,false)) else fail-any)) in
                                {9384}let v_2088: bool = (not-caught-fail(v_2087) && success?(1-proj-2-tuple(v_2087))) in
                                {9385}let psk_data_55: bitstring = (if v_2088 then 2-proj-2-tuple(v_2087) else caught-fail) in
                                {9386}let psk_ext_106: preSharedKeyExt = (if v_2088 then 1-proj-2-tuple(v_2087) else caught-fail) in
                                {9389}new fake_id_23[]: identityPsk;
                                {9390}new fake_binder_23[]: bitstring;
                                {9396}let v_2089: hpkeContext = (if v_2088 then catch-fail(context_2) else caught-fail) in
                                {9397}let v_2090: bool = (not-caught-fail(v_2089) && ((S =nf 1-proj-hpke_context(v_2089)) && success?(1-proj-hpke_context(v_2089)))) in
                                {9398}let base_nonce_24: bitstring = (if v_2090 then 3-proj-hpke_context(v_2089) else caught-fail) in
                                {9399}let key_24: aead_key = (if v_2090 then 2-proj-hpke_context(v_2089) else caught-fail) in
                                {9395}let n_21: nat = (if v_2088 then 2 else caught-fail) in
                                {9392}let o_ech_ext_ADD_19: echExt = (if v_2088 then ECHClientHelloOuter(ech_h_16,ech_a_16,config_id_16,zero,zero) else caught-fail) in
                                {9391}let o_psk_ext_24: preSharedKeyExt = (if v_2088 then (if @8_use_psk then client_psk_ext(fake_id_23,fake_binder_23) else empty_psk_ext) else caught-fail) in
                                {9393}let o_offer_ADD_19: params = (if v_2088 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_10,SNI(o_dom_12),o_ech_ext_ADD_19,empty_extra_ext,o_psk_ext_24) else caught-fail) in
                                {9394}let o_client_hello_ADD_19: msg = (if v_2088 then CH(o_cr_15,o_offer_ADD_19) else caught-fail) in
                                {9387}let i_offer_19: params = (if v_2088 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_7,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_106) else caught-fail) in
                                {9388}let i_client_hello_25: msg = (if v_2088 then CH(i_cr_12,i_offer_19) else caught-fail) in
                                {9400}let payload_25: bitstring = (if v_2088 then catch-fail((if v_2090 then aead_enc(ech_a_16,key_24,(base_nonce_24,n_21),o_client_hello_ADD_19,i_client_hello_25) else fail-any)) else caught-fail) in
                                {9401}let v_2091: bool = not-caught-fail(payload_25) in
                                {9402}let o_ech_ext_24: echExt = (if v_2091 then ECHClientHelloOuter(ech_h_16,ech_a_16,config_id_16,zero,payload_25) else caught-fail) in
                                {9403}let o_offer_40: params = (if v_2091 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_10,SNI(o_dom_12),o_ech_ext_24,empty_extra_ext,o_psk_ext_24) else caught-fail) in
                                {9404}let (o_client_hello'_14: msg,i_client_hello'_15: msg,i_cr'_14: bytes32,i_kex_data'_14: bitstring,psk_data'_43: bitstring) = (if v_2088 then (if v_2091 then (CH(o_cr_15,o_offer_40),i_client_hello_25,i_cr_12,i_kex_data_11,psk_data_55) else fail-any) else fail-any) in
                                {9405}out(io, o_client_hello'_14);
                                {9406}in(io, server_hello'_39: msg);
                                {9407}let SH(B32(sr24'_14: bytes24,sr8'_14: bytes8),params'_14: params) = server_hello'_39 in
                                {9409}let sh_modified_19: msg = SH(B32(sr24'_14,zero8),params'_14) in
                                {9408}let cur_log_IN1_HRR_IN2_14: bitstring = (cur_log_IN1_HRR_4,i_client_hello'_15) in
                                {9410}let cur_log_sh_19: bitstring = (cur_log_IN1_HRR_IN2_14,sh_modified_19) in
                                {9411}let transcript_ech_conf_19: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_19)) in
                                {9412}let v_2092: bool = not-caught-fail(transcript_ech_conf_19) in
                                {9414}let k_212: bitstring = (if v_2092 then catch-fail(b32_2_b(get_random(i_client_hello'_15))) else caught-fail) in
                                {9415}let v_2093: bool = not-caught-fail(k_212) in
                                {9413}let s_215: bitstring = (if v_2092 then zero else caught-fail) in
                                {9416}let k_213: bitstring = (if v_2092 then catch-fail((if v_2093 then hmac(@8_backend_h,s_215,k_212) else fail-any)) else caught-fail) in
                                {9417}let v_2094: bool = not-caught-fail(k_213) in
                                {9418}let l_579: label = (if v_2094 then ech_accept_confirmation else caught-fail) in
                                {9419}let x_657: bitstring = (if v_2094 then (l_579,cur_log_sh_19) else caught-fail) in
                                {9420}let sr8_24: bytes8 = (if v_2092 then catch-fail(crop_into_bytes8((if v_2094 then hmac(@8_backend_h,k_213,x_657) else fail-any))) else caught-fail) in
                                {9421}let v_2095: bool = not-caught-fail(sr8_24) in
                                {9422}if (B32(sr24'_14,sr8'_14) = (if v_2092 then (if v_2095 then B32(sr24'_14,sr8_24) else fail-any) else fail-any)) then
                                {9423}let (x_658: bitstring,g_58: group) = i_kex_data'_14 in
                                {9424}let (psk_offer_50: preSharedKey,id_offer_50: identityPsk,es_offer_50: bitstring,is_safe_offer_50: bool) = psk_data'_43 in
                                {9425}event Client_PSKOffer(id_client_5,psk_offer_50,id_offer_50,is_safe_offer_50);
                                {9426}event Client_Rand_client(id_client_5,i_cr'_14);
                                {9427}event Client_DH_client(id_client_5,dh_pub(g_58,x_658));
                                {9428}event Client_server_domain(id_client_5,backend_dom_1);
                                {9429}let SH(sr_61: bytes32,mode_58: params) = server_hello'_39 in
                                {9430}event Client_Rand_server(id_client_5,sr_61);
                                {9431}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_58,gy_51: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_107: preSharedKeyExt) = mode_58 in
                                (
                                    {9433}event Client_DH_server(id_client_5,gy_51);
                                    {9434}let v_2096: bool = (psk_ext_107 = empty_psk_ext) in
                                    {9435}let psk_235: preSharedKey = (if v_2096 then NoPsk else caught-fail) in
                                    {9437}let k_214: bitstring = (if v_2096 then catch-fail(psk2b(psk_235)) else caught-fail) in
                                    {9438}let v_2097: bool = not-caught-fail(k_214) in
                                    {9436}let s_216: bitstring = (if v_2096 then zero else caught-fail) in
                                    {9439}let early_secret_157: bitstring = (if v_2096 then catch-fail((if v_2097 then hmac(@8_backend_h,s_216,k_214) else fail-any)) else caught-fail) in
                                    {9440}let v_2098: bool = not-caught-fail(early_secret_157) in
                                    {9442}let m_207: bitstring = (if v_2098 then zero else caught-fail) in
                                    {9443}let h_554: bitstring = (if v_2098 then catch-fail(hash(@8_backend_h,m_207)) else caught-fail) in
                                    {9444}let v_2099: bool = not-caught-fail(h_554) in
                                    {9441}let l_580: label = (if v_2098 then tls13_ext_res_binder else caught-fail) in
                                    {9445}let x_659: bitstring = (if v_2099 then (l_580,h_554) else caught-fail) in
                                    {9446}let binder_key_105: bitstring = (if v_2098 then catch-fail((if v_2099 then hmac(@8_backend_h,early_secret_157,x_659) else fail-any)) else caught-fail) in
                                    {9447}let v_2100: bool = not-caught-fail(binder_key_105) in
                                    {9448}let v_2101: bitstring = (if v_2096 then catch-fail((if v_2098 then (if v_2100 then (early_secret_157,binder_key_105) else fail-any) else fail-any)) else caught-fail) in
                                    {9449}let v_2102: bool = (not-caught-fail(v_2101) && success?(1-proj-2-tuple(v_2101))) in
                                    {9450}let kb_105: mac_key = (if v_2102 then 2-proj-2-tuple(v_2101) else caught-fail) in
                                    {9451}let es_158: bitstring = (if v_2102 then 1-proj-2-tuple(v_2101) else caught-fail) in
                                    {9452}let v_2103: bitstring = (if not(v_2096) then catch-fail(psk_data'_43) else caught-fail) in
                                    {9453}let v_2104: bool = (not-caught-fail(v_2103) && success?(1-proj-4-tuple(v_2103))) in
                                    {9454}let is_safe_95: bool = (if v_2104 then 4-proj-4-tuple(v_2103) else caught-fail) in
                                    {9455}let es_159: bitstring = (if v_2104 then 3-proj-4-tuple(v_2103) else caught-fail) in
                                    {9456}let id_109: identityPsk = (if v_2104 then 2-proj-4-tuple(v_2103) else caught-fail) in
                                    {9457}let psk_236: preSharedKey = (if v_2104 then 1-proj-4-tuple(v_2103) else caught-fail) in
                                    {9458}let (psk_237: preSharedKey,early_secret_158: bitstring,valid_50: bool,safe_psk_56: bool) = (if v_2096 then (if v_2102 then (NoPsk,es_158,true,false) else fail-any) else (if v_2104 then (psk_236,es_159,((psk_236 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_107)),is_safe_95) else fail-any)) in
                                    {9459}event Client_PSKChoosen(id_client_5,psk_237,safe_psk_56);
                                    {9460}if valid_50 then
                                    (
                                        {9463}new s_217[]: seed;
                                        {9461}let gxy_102: element = catch-fail(dh_decap_fun(g_58,gy_51,x_658)) in
                                        {9462}let v_2105: bool = not-caught-fail(gxy_102) in
                                        {9464}let gxy_103: element = (if v_2105 then gxy_102 else dh_f(s_217)) in
                                        {9465}event Client_DH_gxy(id_client_5,gxy_103);
                                        {9467}let m_208: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {9468}let v_2106: bool = not-caught-fail(m_208) in
                                        {9469}let h_555: bitstring = (if v_2106 then catch-fail(hash(@8_backend_h,m_208)) else caught-fail) in
                                        {9470}let v_2107: bool = not-caught-fail(h_555) in
                                        {9466}let l_581: label = tls13_derived in
                                        {9471}let x_660: bitstring = (if v_2107 then (l_581,h_555) else caught-fail) in
                                        {9472}let extra_110: bitstring = catch-fail((if v_2106 then (if v_2107 then hmac(@8_backend_h,early_secret_158,x_660) else fail-any) else fail-any)) in
                                        {9473}let v_2108: bool = not-caught-fail(extra_110) in
                                        {9474}let handshake_secret_51: bitstring = (if v_2108 then hmac(@8_backend_h,extra_110,gxy_103) else fail-any) in
                                        {9476}let m_209: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {9477}let v_2109: bool = not-caught-fail(m_209) in
                                        {9478}let h_556: bitstring = (if v_2109 then catch-fail(hash(@8_backend_h,m_209)) else caught-fail) in
                                        {9479}let v_2110: bool = not-caught-fail(h_556) in
                                        {9475}let l_582: label = tls13_derived in
                                        {9480}let x_661: bitstring = (if v_2110 then (l_582,h_556) else caught-fail) in
                                        {9481}let extra_111: bitstring = catch-fail((if v_2109 then (if v_2110 then hmac(@8_backend_h,handshake_secret_51,x_661) else fail-any) else fail-any)) in
                                        {9482}let v_2111: bool = not-caught-fail(extra_111) in
                                        {9483}let k_215: bitstring = (if v_2111 then zero else caught-fail) in
                                        {9484}let master_secret_109: bitstring = (if v_2111 then catch-fail(hmac(@8_backend_h,handshake_secret_51,k_215)) else caught-fail) in
                                        {9485}let v_2112: bool = not-caught-fail(master_secret_109) in
                                        {9432}let cur_log2_107: bitstring = (cur_log_IN1_HRR_IN2_14,server_hello'_39) in
                                        {9487}let h_557: bitstring = (if v_2112 then catch-fail(hash(@8_backend_h,cur_log2_107)) else caught-fail) in
                                        {9488}let v_2113: bool = not-caught-fail(h_557) in
                                        {9486}let l_583: label = (if v_2112 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {9489}let x_662: bitstring = (if v_2113 then (l_583,h_557) else caught-fail) in
                                        {9490}let client_hts_51: bitstring = (if v_2112 then catch-fail((if v_2113 then hmac(@8_backend_h,handshake_secret_51,x_662) else fail-any)) else caught-fail) in
                                        {9491}let v_2114: bool = not-caught-fail(client_hts_51) in
                                        {9493}let h_558: bitstring = (if v_2114 then catch-fail(hash(@8_backend_h,cur_log2_107)) else caught-fail) in
                                        {9494}let v_2115: bool = not-caught-fail(h_558) in
                                        {9492}let l_584: label = (if v_2114 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {9495}let x_663: bitstring = (if v_2115 then (l_584,h_558) else caught-fail) in
                                        {9496}let server_hts_51: bitstring = (if v_2114 then catch-fail((if v_2115 then hmac(@8_backend_h,handshake_secret_51,x_663) else fail-any)) else caught-fail) in
                                        {9497}let v_2116: bool = not-caught-fail(server_hts_51) in
                                        {9499}let h_559: bitstring = (if v_2116 then zero else caught-fail) in
                                        {9498}let l_585: label = (if v_2116 then tls13_key else caught-fail) in
                                        {9500}let x_664: bitstring = (if v_2116 then (l_585,h_559) else caught-fail) in
                                        {9501}let client_wkh_51: bitstring = (if v_2116 then catch-fail(hmac(@8_backend_h,client_hts_51,x_664)) else caught-fail) in
                                        {9502}let v_2117: bool = not-caught-fail(client_wkh_51) in
                                        {9504}let h_560: bitstring = (if v_2117 then zero else caught-fail) in
                                        {9503}let l_586: label = (if v_2117 then tls13_key else caught-fail) in
                                        {9505}let x_665: bitstring = (if v_2117 then (l_586,h_560) else caught-fail) in
                                        {9506}let server_wkh_51: bitstring = (if v_2117 then catch-fail(hmac(@8_backend_h,server_hts_51,x_665)) else caught-fail) in
                                        {9507}let v_2118: bool = not-caught-fail(server_wkh_51) in
                                        {9509}let h_561: bitstring = (if v_2118 then zero else caught-fail) in
                                        {9508}let l_587: label = (if v_2118 then tls13_finished else caught-fail) in
                                        {9510}let x_666: bitstring = (if v_2118 then (l_587,h_561) else caught-fail) in
                                        {9511}let client_fk_51: bitstring = (if v_2118 then catch-fail(hmac(@8_backend_h,client_hts_51,x_666)) else caught-fail) in
                                        {9512}let v_2119: bool = not-caught-fail(client_fk_51) in
                                        {9514}let h_562: bitstring = (if v_2119 then zero else caught-fail) in
                                        {9513}let l_588: label = (if v_2119 then tls13_finished else caught-fail) in
                                        {9515}let x_667: bitstring = (if v_2119 then (l_588,h_562) else caught-fail) in
                                        {9516}let server_fk_51: bitstring = (if v_2119 then catch-fail(hmac(@8_backend_h,server_hts_51,x_667)) else caught-fail) in
                                        {9517}let v_2120: bool = not-caught-fail(server_fk_51) in
                                        {9518}let (master_secret_110: bitstring,chk_58: aead_key,shk_57: aead_key,cfin_58: mac_key,sfin_57: mac_key) = (if v_2111 then (if v_2112 then (if v_2114 then (if v_2116 then (if v_2117 then (if v_2118 then (if v_2119 then (if v_2120 then (master_secret_109,client_wkh_51,server_wkh_51,client_fk_51,server_fk_51) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {9519}event Client_chk(id_client_5,chk_58);
                                        {9520}event Client_shk(id_client_5,shk_57);
                                        {9521}event Client_cfin(id_client_5,cfin_58);
                                        {9522}event Client_sfin(id_client_5,sfin_57);
                                        {9523}in(io, enc_ee_msg_50: bitstring);
                                        {9524}let ee_msg_55: msg = aead_dec(@8_backend_a,shk_57,0,zero,enc_ee_msg_50) in
                                        {9525}let EE(ech_ee_50: echExt,extra_ee_50: extraExt) = ee_msg_55 in
                                        {9526}let cur_log2_108: bitstring = (cur_log2_107,ee_msg_55) in
                                        {9527}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_14,sr_61,@8_backend_h,@8_backend_a,c_dom_7,backend_dom_1,psk_237,safe_psk_56,@8_comp_psk,master_secret_110,chk_58,0,shk_57,1,cfin_58,sfin_57,cur_log2_108)))
                                    )
                                    else
                                        {9528}out(io, illegal_parameter)
                                )
                                else
                                    {9529}out(io, illegal_parameter)
                        )
                        else
                            {9531}let ech_config(config_id_17: configId,ech_g_17: group,pkR_19: element,o_dom_13: domain,ech_h_17: hash_alg,ech_a_17: aead_alg) = ech_conf_2 in
                            {9532}new rand24_23[]: bytes24;
                            {9533}new rand8_23[]: bytes8;
                            {9536}new s_218[]: seed;
                            {9537}let gx_53: element = dh_pub(@8_tls_g,dh_k(s_218)) in
                            {9538}let v_2121: bitstring = (dh_k(s_218),gx_53) in
                            {9539}let v_2122: bool = success?(1-proj-2-tuple(v_2121)) in
                            {9540}let gx_54: element = (if v_2122 then 2-proj-2-tuple(v_2121) else caught-fail) in
                            {9541}let x_668: bitstring = (if v_2122 then 1-proj-2-tuple(v_2121) else caught-fail) in
                            {9535}let send_key_share_14: bool = true in
                            {9542}let kex_22: kex_alg = (if v_2122 then (if send_key_share_14 then DHE_kex(@8_tls_g,gx_54) else DHE_group(@8_tls_g)) else caught-fail) in
                            {9543}let (o_kex_ext_11: keyShareExt,kex_data_11: bitstring) = (if v_2122 then (client_kex_ext(kex_22),(x_668,@8_tls_g)) else fail-any) in
                            {9534}let o_cr_16: bytes32 = B32(rand24_23,rand8_23) in
                            {9530}let cur_log_OU1_HRR_4: bitstring = ((zero,o_client_hello_6),server_hello_8) in
                            {9544}if @8_use_grease then
                            (
                                {9546}if @8_use_psk then
                                (
                                    {9545}let extra_112: extraExt = empty_extra_ext in
                                    {9547}let (psk_238: preSharedKey,id_110: identityPsk,old_es_15: bitstring,is_safe_96: bool) = psk_data_52 in
                                    (
                                        {9551}let k_216: bitstring = catch-fail(psk2b(psk_238)) in
                                        {9552}let v_2123: bool = not-caught-fail(k_216) in
                                        {9550}let s_219: bitstring = zero in
                                        {9553}let early_secret_159: bitstring = catch-fail((if v_2123 then hmac(@8_tls_h,s_219,k_216) else fail-any)) in
                                        {9554}let v_2124: bool = not-caught-fail(early_secret_159) in
                                        {9556}let m_210: bitstring = (if v_2124 then zero else caught-fail) in
                                        {9557}let h_563: bitstring = (if v_2124 then catch-fail(hash(@8_tls_h,m_210)) else caught-fail) in
                                        {9558}let v_2125: bool = not-caught-fail(h_563) in
                                        {9555}let l_589: label = (if v_2124 then tls13_ext_res_binder else caught-fail) in
                                        {9559}let x_669: bitstring = (if v_2125 then (l_589,h_563) else caught-fail) in
                                        {9560}let binder_key_106: bitstring = (if v_2124 then catch-fail((if v_2125 then hmac(@8_tls_h,early_secret_159,x_669) else fail-any)) else caught-fail) in
                                        {9561}let v_2126: bool = not-caught-fail(binder_key_106) in
                                        {9562}let v_2127: bitstring = catch-fail((if v_2124 then (if v_2126 then (early_secret_159,binder_key_106) else fail-any) else fail-any)) in
                                        {9563}let v_2128: bool = (not-caught-fail(v_2127) && success?(1-proj-2-tuple(v_2127))) in
                                        {9564}let kb_106: mac_key = (if v_2128 then 2-proj-2-tuple(v_2127) else caught-fail) in
                                        {9565}let es_160: bitstring = (if v_2128 then 1-proj-2-tuple(v_2127) else caught-fail) in
                                        {9548}let offer_44: params = nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_11,SNI(o_dom_13),o_ech_ext_21,extra_112,trunc_client_psk_ext(id_110)) in
                                        {9549}let cur_log'_32: bitstring = (cur_log_OU1_HRR_4,CH(o_cr_16,offer_44)) in
                                        {9566}let binders_31: bitstring = (if v_2128 then catch-fail(hmac(@8_tls_h,kb_106,cur_log'_32)) else caught-fail) in
                                        {9567}let v_2129: bool = not-caught-fail(binders_31) in
                                        {9568}let v_2130: bitstring = catch-fail((if v_2128 then (if v_2129 then (client_psk_ext(id_110,binders_31),(psk_238,id_110,es_160,is_safe_96)) else fail-any) else fail-any)) in
                                        {9569}let v_2131: bool = (not-caught-fail(v_2130) && success?(1-proj-2-tuple(v_2130))) in
                                        {9570}let psk_data_56: bitstring = (if v_2131 then 2-proj-2-tuple(v_2130) else caught-fail) in
                                        {9571}let psk_ext_108: preSharedKeyExt = (if v_2131 then 1-proj-2-tuple(v_2130) else caught-fail) in
                                        {9572}let o_offer_41: params = (if v_2131 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_11,SNI(o_dom_13),o_ech_ext_21,empty_extra_ext,psk_ext_108) else caught-fail) in
                                        {9573}let (client_hello'_28: msg,cr'_30: bytes32,kex_data'_25: bitstring,psk_data'_44: bitstring) = (if v_2131 then (CH(o_cr_16,o_offer_41),o_cr_16,kex_data_11,psk_data_56) else fail-any) in
                                        {9574}out(io, client_hello'_28);
                                        {9576}in(io, server_hello'_40: msg);
                                        {9577}let SH(sr'_25: bytes32,mode'_25: params) = server_hello'_40 in
                                        (
                                            {9578}if (sr'_25 = B32(HRR24,HRR8)) then
                                                {9579}out(io, unexpected_message)
                                            else
                                                {9580}let (x_670: bitstring,g_59: group) = kex_data'_25 in
                                                {9581}let (psk_offer_51: preSharedKey,id_offer_51: identityPsk,es_offer_51: bitstring,is_safe_offer_51: bool) = psk_data'_44 in
                                                {9582}event Client_PSKOffer(id_client_5,psk_offer_51,id_offer_51,is_safe_offer_51);
                                                {9583}event Client_Rand_client(id_client_5,cr'_30);
                                                {9584}event Client_DH_client(id_client_5,dh_pub(g_59,x_670));
                                                {9585}event Client_server_domain(id_client_5,o_dom_8);
                                                {9586}let SH(sr_62: bytes32,mode_59: params) = server_hello'_40 in
                                                {9587}event Client_Rand_server(id_client_5,sr_62);
                                                {9588}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_59,gy_52: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_109: preSharedKeyExt) = mode_59 in
                                                (
                                                    {9590}event Client_DH_server(id_client_5,gy_52);
                                                    {9591}let v_2132: bool = (psk_ext_109 = empty_psk_ext) in
                                                    {9592}let psk_239: preSharedKey = (if v_2132 then NoPsk else caught-fail) in
                                                    {9594}let k_217: bitstring = (if v_2132 then catch-fail(psk2b(psk_239)) else caught-fail) in
                                                    {9595}let v_2133: bool = not-caught-fail(k_217) in
                                                    {9593}let s_220: bitstring = (if v_2132 then zero else caught-fail) in
                                                    {9596}let early_secret_160: bitstring = (if v_2132 then catch-fail((if v_2133 then hmac(@8_tls_h,s_220,k_217) else fail-any)) else caught-fail) in
                                                    {9597}let v_2134: bool = not-caught-fail(early_secret_160) in
                                                    {9599}let m_211: bitstring = (if v_2134 then zero else caught-fail) in
                                                    {9600}let h_564: bitstring = (if v_2134 then catch-fail(hash(@8_tls_h,m_211)) else caught-fail) in
                                                    {9601}let v_2135: bool = not-caught-fail(h_564) in
                                                    {9598}let l_590: label = (if v_2134 then tls13_ext_res_binder else caught-fail) in
                                                    {9602}let x_671: bitstring = (if v_2135 then (l_590,h_564) else caught-fail) in
                                                    {9603}let binder_key_107: bitstring = (if v_2134 then catch-fail((if v_2135 then hmac(@8_tls_h,early_secret_160,x_671) else fail-any)) else caught-fail) in
                                                    {9604}let v_2136: bool = not-caught-fail(binder_key_107) in
                                                    {9605}let v_2137: bitstring = (if v_2132 then catch-fail((if v_2134 then (if v_2136 then (early_secret_160,binder_key_107) else fail-any) else fail-any)) else caught-fail) in
                                                    {9606}let v_2138: bool = (not-caught-fail(v_2137) && success?(1-proj-2-tuple(v_2137))) in
                                                    {9607}let kb_107: mac_key = (if v_2138 then 2-proj-2-tuple(v_2137) else caught-fail) in
                                                    {9608}let es_161: bitstring = (if v_2138 then 1-proj-2-tuple(v_2137) else caught-fail) in
                                                    {9609}let v_2139: bitstring = (if not(v_2132) then catch-fail(psk_data'_44) else caught-fail) in
                                                    {9610}let v_2140: bool = (not-caught-fail(v_2139) && success?(1-proj-4-tuple(v_2139))) in
                                                    {9611}let is_safe_97: bool = (if v_2140 then 4-proj-4-tuple(v_2139) else caught-fail) in
                                                    {9612}let es_162: bitstring = (if v_2140 then 3-proj-4-tuple(v_2139) else caught-fail) in
                                                    {9613}let id_111: identityPsk = (if v_2140 then 2-proj-4-tuple(v_2139) else caught-fail) in
                                                    {9614}let psk_240: preSharedKey = (if v_2140 then 1-proj-4-tuple(v_2139) else caught-fail) in
                                                    {9615}let (psk_241: preSharedKey,early_secret_161: bitstring,valid_51: bool,safe_psk_57: bool) = (if v_2132 then (if v_2138 then (NoPsk,es_161,true,false) else fail-any) else (if v_2140 then (psk_240,es_162,((psk_240 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_109)),is_safe_97) else fail-any)) in
                                                    {9616}event Client_PSKChoosen(id_client_5,psk_241,safe_psk_57);
                                                    {9617}if valid_51 then
                                                    (
                                                        {9620}new s_221[]: seed;
                                                        {9618}let gxy_104: element = catch-fail(dh_decap_fun(g_59,gy_52,x_670)) in
                                                        {9619}let v_2141: bool = not-caught-fail(gxy_104) in
                                                        {9621}let gxy_105: element = (if v_2141 then gxy_104 else dh_f(s_221)) in
                                                        {9622}event Client_DH_gxy(id_client_5,gxy_105);
                                                        {9624}let m_212: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {9625}let v_2142: bool = not-caught-fail(m_212) in
                                                        {9626}let h_565: bitstring = (if v_2142 then catch-fail(hash(@8_tls_h,m_212)) else caught-fail) in
                                                        {9627}let v_2143: bool = not-caught-fail(h_565) in
                                                        {9623}let l_591: label = tls13_derived in
                                                        {9628}let x_672: bitstring = (if v_2143 then (l_591,h_565) else caught-fail) in
                                                        {9629}let extra_113: bitstring = catch-fail((if v_2142 then (if v_2143 then hmac(@8_tls_h,early_secret_161,x_672) else fail-any) else fail-any)) in
                                                        {9630}let v_2144: bool = not-caught-fail(extra_113) in
                                                        {9631}let handshake_secret_52: bitstring = (if v_2144 then hmac(@8_tls_h,extra_113,gxy_105) else fail-any) in
                                                        {9633}let m_213: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {9634}let v_2145: bool = not-caught-fail(m_213) in
                                                        {9635}let h_566: bitstring = (if v_2145 then catch-fail(hash(@8_tls_h,m_213)) else caught-fail) in
                                                        {9636}let v_2146: bool = not-caught-fail(h_566) in
                                                        {9632}let l_592: label = tls13_derived in
                                                        {9637}let x_673: bitstring = (if v_2146 then (l_592,h_566) else caught-fail) in
                                                        {9638}let extra_114: bitstring = catch-fail((if v_2145 then (if v_2146 then hmac(@8_tls_h,handshake_secret_52,x_673) else fail-any) else fail-any)) in
                                                        {9639}let v_2147: bool = not-caught-fail(extra_114) in
                                                        {9640}let k_218: bitstring = (if v_2147 then zero else caught-fail) in
                                                        {9641}let master_secret_111: bitstring = (if v_2147 then catch-fail(hmac(@8_tls_h,handshake_secret_52,k_218)) else caught-fail) in
                                                        {9642}let v_2148: bool = not-caught-fail(master_secret_111) in
                                                        {9575}let cur_log_OU1_HRR_OU2_16: bitstring = (cur_log_OU1_HRR_4,client_hello'_28) in
                                                        {9589}let cur_log2_109: bitstring = (cur_log_OU1_HRR_OU2_16,server_hello'_40) in
                                                        {9644}let h_567: bitstring = (if v_2148 then catch-fail(hash(@8_tls_h,cur_log2_109)) else caught-fail) in
                                                        {9645}let v_2149: bool = not-caught-fail(h_567) in
                                                        {9643}let l_593: label = (if v_2148 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {9646}let x_674: bitstring = (if v_2149 then (l_593,h_567) else caught-fail) in
                                                        {9647}let client_hts_52: bitstring = (if v_2148 then catch-fail((if v_2149 then hmac(@8_tls_h,handshake_secret_52,x_674) else fail-any)) else caught-fail) in
                                                        {9648}let v_2150: bool = not-caught-fail(client_hts_52) in
                                                        {9650}let h_568: bitstring = (if v_2150 then catch-fail(hash(@8_tls_h,cur_log2_109)) else caught-fail) in
                                                        {9651}let v_2151: bool = not-caught-fail(h_568) in
                                                        {9649}let l_594: label = (if v_2150 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {9652}let x_675: bitstring = (if v_2151 then (l_594,h_568) else caught-fail) in
                                                        {9653}let server_hts_52: bitstring = (if v_2150 then catch-fail((if v_2151 then hmac(@8_tls_h,handshake_secret_52,x_675) else fail-any)) else caught-fail) in
                                                        {9654}let v_2152: bool = not-caught-fail(server_hts_52) in
                                                        {9656}let h_569: bitstring = (if v_2152 then zero else caught-fail) in
                                                        {9655}let l_595: label = (if v_2152 then tls13_key else caught-fail) in
                                                        {9657}let x_676: bitstring = (if v_2152 then (l_595,h_569) else caught-fail) in
                                                        {9658}let client_wkh_52: bitstring = (if v_2152 then catch-fail(hmac(@8_tls_h,client_hts_52,x_676)) else caught-fail) in
                                                        {9659}let v_2153: bool = not-caught-fail(client_wkh_52) in
                                                        {9661}let h_570: bitstring = (if v_2153 then zero else caught-fail) in
                                                        {9660}let l_596: label = (if v_2153 then tls13_key else caught-fail) in
                                                        {9662}let x_677: bitstring = (if v_2153 then (l_596,h_570) else caught-fail) in
                                                        {9663}let server_wkh_52: bitstring = (if v_2153 then catch-fail(hmac(@8_tls_h,server_hts_52,x_677)) else caught-fail) in
                                                        {9664}let v_2154: bool = not-caught-fail(server_wkh_52) in
                                                        {9666}let h_571: bitstring = (if v_2154 then zero else caught-fail) in
                                                        {9665}let l_597: label = (if v_2154 then tls13_finished else caught-fail) in
                                                        {9667}let x_678: bitstring = (if v_2154 then (l_597,h_571) else caught-fail) in
                                                        {9668}let client_fk_52: bitstring = (if v_2154 then catch-fail(hmac(@8_tls_h,client_hts_52,x_678)) else caught-fail) in
                                                        {9669}let v_2155: bool = not-caught-fail(client_fk_52) in
                                                        {9671}let h_572: bitstring = (if v_2155 then zero else caught-fail) in
                                                        {9670}let l_598: label = (if v_2155 then tls13_finished else caught-fail) in
                                                        {9672}let x_679: bitstring = (if v_2155 then (l_598,h_572) else caught-fail) in
                                                        {9673}let server_fk_52: bitstring = (if v_2155 then catch-fail(hmac(@8_tls_h,server_hts_52,x_679)) else caught-fail) in
                                                        {9674}let v_2156: bool = not-caught-fail(server_fk_52) in
                                                        {9675}let (master_secret_112: bitstring,chk_59: aead_key,shk_58: aead_key,cfin_59: mac_key,sfin_58: mac_key) = (if v_2147 then (if v_2148 then (if v_2150 then (if v_2152 then (if v_2153 then (if v_2154 then (if v_2155 then (if v_2156 then (master_secret_111,client_wkh_52,server_wkh_52,client_fk_52,server_fk_52) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {9676}event Client_chk(id_client_5,chk_59);
                                                        {9677}event Client_shk(id_client_5,shk_58);
                                                        {9678}event Client_cfin(id_client_5,cfin_59);
                                                        {9679}event Client_sfin(id_client_5,sfin_58);
                                                        {9680}in(io, enc_ee_msg_51: bitstring);
                                                        {9681}let ee_msg_56: msg = aead_dec(@8_tls_a,shk_58,0,zero,enc_ee_msg_51) in
                                                        {9682}let EE(ech_ee_51: echExt,extra_ee_51: extraExt) = ee_msg_56 in
                                                        {9683}let cur_log2_110: bitstring = (cur_log2_109,ee_msg_56) in
                                                        {9684}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_30,sr_62,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_241,safe_psk_57,@8_comp_psk,master_secret_112,chk_59,0,shk_58,1,cfin_59,sfin_58,cur_log2_110)))
                                                    )
                                                    else
                                                        {9685}out(io, illegal_parameter)
                                                )
                                                else
                                                    {9686}out(io, illegal_parameter)
                                        )
                                        else
                                            {9687}out(io, unexpected_message)
                                    )
                                    else
                                        {9837}get pre_shared_keys(c_dom'_17: domain,=o_dom_13,=@8_tls_h,id_112: identityPsk,psk_242: preSharedKey,idP_19: idProc,is_safe_98: bool) in
                                        {9688}event Selected_one_time_used_psk(id_client_5,psk_242,is_safe_98);
                                        {9689}event Selected_psk(c_dom_7,c_dom'_17,idP_19,is_safe_98);
                                        {9690}event Selected_psk_no_missmatch(id_client_5,o_dom_13,@8_tls_h,psk_242,id_112);
                                        {9691}event Selected_psk_with_ID(c_dom_7,c_dom'_17,id_112,idP_19,is_safe_98);
                                        {9692}let v_2157: bitstring = (id_112,psk_242,is_safe_98) in
                                        {9693}let v_2158: bool = success?(1-proj-3-tuple(v_2157)) in
                                        {9694}let is_safe_99: bool = (if v_2158 then 3-proj-3-tuple(v_2157) else caught-fail) in
                                        {9695}let psk_243: preSharedKey = (if v_2158 then 2-proj-3-tuple(v_2157) else caught-fail) in
                                        {9696}let id_113: identityPsk = (if v_2158 then 1-proj-3-tuple(v_2157) else caught-fail) in
                                        {9700}let k_219: bitstring = (if v_2158 then catch-fail(psk2b(psk_243)) else caught-fail) in
                                        {9701}let v_2159: bool = not-caught-fail(k_219) in
                                        {9699}let s_222: bitstring = (if v_2158 then zero else caught-fail) in
                                        {9702}let early_secret_162: bitstring = (if v_2158 then catch-fail((if v_2159 then hmac(@8_tls_h,s_222,k_219) else fail-any)) else caught-fail) in
                                        {9703}let v_2160: bool = not-caught-fail(early_secret_162) in
                                        {9705}let m_214: bitstring = (if v_2160 then zero else caught-fail) in
                                        {9706}let h_573: bitstring = (if v_2160 then catch-fail(hash(@8_tls_h,m_214)) else caught-fail) in
                                        {9707}let v_2161: bool = not-caught-fail(h_573) in
                                        {9704}let l_599: label = (if v_2160 then tls13_ext_res_binder else caught-fail) in
                                        {9708}let x_680: bitstring = (if v_2161 then (l_599,h_573) else caught-fail) in
                                        {9709}let binder_key_108: bitstring = (if v_2160 then catch-fail((if v_2161 then hmac(@8_tls_h,early_secret_162,x_680) else fail-any)) else caught-fail) in
                                        {9710}let v_2162: bool = not-caught-fail(binder_key_108) in
                                        {9711}let v_2163: bitstring = (if v_2158 then catch-fail((if v_2160 then (if v_2162 then (early_secret_162,binder_key_108) else fail-any) else fail-any)) else caught-fail) in
                                        {9712}let v_2164: bool = (not-caught-fail(v_2163) && success?(1-proj-2-tuple(v_2163))) in
                                        {9713}let kb_108: mac_key = (if v_2164 then 2-proj-2-tuple(v_2163) else caught-fail) in
                                        {9714}let es_163: bitstring = (if v_2164 then 1-proj-2-tuple(v_2163) else caught-fail) in
                                        {9697}let offer_45: params = (if v_2158 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_11,SNI(o_dom_13),o_ech_ext_21,extra_112,trunc_client_psk_ext(id_113)) else caught-fail) in
                                        {9698}let cur_log'_33: bitstring = (if v_2158 then (cur_log_OU1_HRR_4,CH(o_cr_16,offer_45)) else caught-fail) in
                                        {9715}let binders_32: bitstring = (if v_2164 then catch-fail(hmac(@8_tls_h,kb_108,cur_log'_33)) else caught-fail) in
                                        {9716}let v_2165: bool = not-caught-fail(binders_32) in
                                        {9717}let v_2166: bitstring = catch-fail((if v_2158 then (if v_2164 then (if v_2165 then (client_psk_ext(id_113,binders_32),(psk_243,id_113,es_163,is_safe_99)) else fail-any) else fail-any) else fail-any)) in
                                        {9718}let v_2167: bool = (not-caught-fail(v_2166) && success?(1-proj-2-tuple(v_2166))) in
                                        {9719}let psk_data_57: bitstring = (if v_2167 then 2-proj-2-tuple(v_2166) else caught-fail) in
                                        {9720}let psk_ext_110: preSharedKeyExt = (if v_2167 then 1-proj-2-tuple(v_2166) else caught-fail) in
                                        {9721}let o_offer_42: params = (if v_2167 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_11,SNI(o_dom_13),o_ech_ext_21,empty_extra_ext,psk_ext_110) else caught-fail) in
                                        {9722}let (client_hello'_29: msg,cr'_31: bytes32,kex_data'_26: bitstring,psk_data'_45: bitstring) = (if v_2167 then (CH(o_cr_16,o_offer_42),o_cr_16,kex_data_11,psk_data_57) else fail-any) in
                                        {9723}out(io, client_hello'_29);
                                        {9725}in(io, server_hello'_41: msg);
                                        {9726}let SH(sr'_26: bytes32,mode'_26: params) = server_hello'_41 in
                                        (
                                            {9727}if (sr'_26 = B32(HRR24,HRR8)) then
                                                {9728}out(io, unexpected_message)
                                            else
                                                {9729}let (x_681: bitstring,g_60: group) = kex_data'_26 in
                                                {9730}let (psk_offer_52: preSharedKey,id_offer_52: identityPsk,es_offer_52: bitstring,is_safe_offer_52: bool) = psk_data'_45 in
                                                {9731}event Client_PSKOffer(id_client_5,psk_offer_52,id_offer_52,is_safe_offer_52);
                                                {9732}event Client_Rand_client(id_client_5,cr'_31);
                                                {9733}event Client_DH_client(id_client_5,dh_pub(g_60,x_681));
                                                {9734}event Client_server_domain(id_client_5,o_dom_8);
                                                {9735}let SH(sr_63: bytes32,mode_60: params) = server_hello'_41 in
                                                {9736}event Client_Rand_server(id_client_5,sr_63);
                                                {9737}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_60,gy_53: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_111: preSharedKeyExt) = mode_60 in
                                                (
                                                    {9739}event Client_DH_server(id_client_5,gy_53);
                                                    {9740}let v_2168: bool = (psk_ext_111 = empty_psk_ext) in
                                                    {9741}let psk_244: preSharedKey = (if v_2168 then NoPsk else caught-fail) in
                                                    {9743}let k_220: bitstring = (if v_2168 then catch-fail(psk2b(psk_244)) else caught-fail) in
                                                    {9744}let v_2169: bool = not-caught-fail(k_220) in
                                                    {9742}let s_223: bitstring = (if v_2168 then zero else caught-fail) in
                                                    {9745}let early_secret_163: bitstring = (if v_2168 then catch-fail((if v_2169 then hmac(@8_tls_h,s_223,k_220) else fail-any)) else caught-fail) in
                                                    {9746}let v_2170: bool = not-caught-fail(early_secret_163) in
                                                    {9748}let m_215: bitstring = (if v_2170 then zero else caught-fail) in
                                                    {9749}let h_574: bitstring = (if v_2170 then catch-fail(hash(@8_tls_h,m_215)) else caught-fail) in
                                                    {9750}let v_2171: bool = not-caught-fail(h_574) in
                                                    {9747}let l_600: label = (if v_2170 then tls13_ext_res_binder else caught-fail) in
                                                    {9751}let x_682: bitstring = (if v_2171 then (l_600,h_574) else caught-fail) in
                                                    {9752}let binder_key_109: bitstring = (if v_2170 then catch-fail((if v_2171 then hmac(@8_tls_h,early_secret_163,x_682) else fail-any)) else caught-fail) in
                                                    {9753}let v_2172: bool = not-caught-fail(binder_key_109) in
                                                    {9754}let v_2173: bitstring = (if v_2168 then catch-fail((if v_2170 then (if v_2172 then (early_secret_163,binder_key_109) else fail-any) else fail-any)) else caught-fail) in
                                                    {9755}let v_2174: bool = (not-caught-fail(v_2173) && success?(1-proj-2-tuple(v_2173))) in
                                                    {9756}let kb_109: mac_key = (if v_2174 then 2-proj-2-tuple(v_2173) else caught-fail) in
                                                    {9757}let es_164: bitstring = (if v_2174 then 1-proj-2-tuple(v_2173) else caught-fail) in
                                                    {9758}let v_2175: bitstring = (if not(v_2168) then catch-fail(psk_data'_45) else caught-fail) in
                                                    {9759}let v_2176: bool = (not-caught-fail(v_2175) && success?(1-proj-4-tuple(v_2175))) in
                                                    {9760}let is_safe_100: bool = (if v_2176 then 4-proj-4-tuple(v_2175) else caught-fail) in
                                                    {9761}let es_165: bitstring = (if v_2176 then 3-proj-4-tuple(v_2175) else caught-fail) in
                                                    {9762}let id_114: identityPsk = (if v_2176 then 2-proj-4-tuple(v_2175) else caught-fail) in
                                                    {9763}let psk_245: preSharedKey = (if v_2176 then 1-proj-4-tuple(v_2175) else caught-fail) in
                                                    {9764}let (psk_246: preSharedKey,early_secret_164: bitstring,valid_52: bool,safe_psk_58: bool) = (if v_2168 then (if v_2174 then (NoPsk,es_164,true,false) else fail-any) else (if v_2176 then (psk_245,es_165,((psk_245 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_111)),is_safe_100) else fail-any)) in
                                                    {9765}event Client_PSKChoosen(id_client_5,psk_246,safe_psk_58);
                                                    {9766}if valid_52 then
                                                    (
                                                        {9769}new s_224[]: seed;
                                                        {9767}let gxy_106: element = catch-fail(dh_decap_fun(g_60,gy_53,x_681)) in
                                                        {9768}let v_2177: bool = not-caught-fail(gxy_106) in
                                                        {9770}let gxy_107: element = (if v_2177 then gxy_106 else dh_f(s_224)) in
                                                        {9771}event Client_DH_gxy(id_client_5,gxy_107);
                                                        {9773}let m_216: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {9774}let v_2178: bool = not-caught-fail(m_216) in
                                                        {9775}let h_575: bitstring = (if v_2178 then catch-fail(hash(@8_tls_h,m_216)) else caught-fail) in
                                                        {9776}let v_2179: bool = not-caught-fail(h_575) in
                                                        {9772}let l_601: label = tls13_derived in
                                                        {9777}let x_683: bitstring = (if v_2179 then (l_601,h_575) else caught-fail) in
                                                        {9778}let extra_115: bitstring = catch-fail((if v_2178 then (if v_2179 then hmac(@8_tls_h,early_secret_164,x_683) else fail-any) else fail-any)) in
                                                        {9779}let v_2180: bool = not-caught-fail(extra_115) in
                                                        {9780}let handshake_secret_53: bitstring = (if v_2180 then hmac(@8_tls_h,extra_115,gxy_107) else fail-any) in
                                                        {9782}let m_217: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                        {9783}let v_2181: bool = not-caught-fail(m_217) in
                                                        {9784}let h_576: bitstring = (if v_2181 then catch-fail(hash(@8_tls_h,m_217)) else caught-fail) in
                                                        {9785}let v_2182: bool = not-caught-fail(h_576) in
                                                        {9781}let l_602: label = tls13_derived in
                                                        {9786}let x_684: bitstring = (if v_2182 then (l_602,h_576) else caught-fail) in
                                                        {9787}let extra_116: bitstring = catch-fail((if v_2181 then (if v_2182 then hmac(@8_tls_h,handshake_secret_53,x_684) else fail-any) else fail-any)) in
                                                        {9788}let v_2183: bool = not-caught-fail(extra_116) in
                                                        {9789}let k_221: bitstring = (if v_2183 then zero else caught-fail) in
                                                        {9790}let master_secret_113: bitstring = (if v_2183 then catch-fail(hmac(@8_tls_h,handshake_secret_53,k_221)) else caught-fail) in
                                                        {9791}let v_2184: bool = not-caught-fail(master_secret_113) in
                                                        {9724}let cur_log_OU1_HRR_OU2_17: bitstring = (cur_log_OU1_HRR_4,client_hello'_29) in
                                                        {9738}let cur_log2_111: bitstring = (cur_log_OU1_HRR_OU2_17,server_hello'_41) in
                                                        {9793}let h_577: bitstring = (if v_2184 then catch-fail(hash(@8_tls_h,cur_log2_111)) else caught-fail) in
                                                        {9794}let v_2185: bool = not-caught-fail(h_577) in
                                                        {9792}let l_603: label = (if v_2184 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                        {9795}let x_685: bitstring = (if v_2185 then (l_603,h_577) else caught-fail) in
                                                        {9796}let client_hts_53: bitstring = (if v_2184 then catch-fail((if v_2185 then hmac(@8_tls_h,handshake_secret_53,x_685) else fail-any)) else caught-fail) in
                                                        {9797}let v_2186: bool = not-caught-fail(client_hts_53) in
                                                        {9799}let h_578: bitstring = (if v_2186 then catch-fail(hash(@8_tls_h,cur_log2_111)) else caught-fail) in
                                                        {9800}let v_2187: bool = not-caught-fail(h_578) in
                                                        {9798}let l_604: label = (if v_2186 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                        {9801}let x_686: bitstring = (if v_2187 then (l_604,h_578) else caught-fail) in
                                                        {9802}let server_hts_53: bitstring = (if v_2186 then catch-fail((if v_2187 then hmac(@8_tls_h,handshake_secret_53,x_686) else fail-any)) else caught-fail) in
                                                        {9803}let v_2188: bool = not-caught-fail(server_hts_53) in
                                                        {9805}let h_579: bitstring = (if v_2188 then zero else caught-fail) in
                                                        {9804}let l_605: label = (if v_2188 then tls13_key else caught-fail) in
                                                        {9806}let x_687: bitstring = (if v_2188 then (l_605,h_579) else caught-fail) in
                                                        {9807}let client_wkh_53: bitstring = (if v_2188 then catch-fail(hmac(@8_tls_h,client_hts_53,x_687)) else caught-fail) in
                                                        {9808}let v_2189: bool = not-caught-fail(client_wkh_53) in
                                                        {9810}let h_580: bitstring = (if v_2189 then zero else caught-fail) in
                                                        {9809}let l_606: label = (if v_2189 then tls13_key else caught-fail) in
                                                        {9811}let x_688: bitstring = (if v_2189 then (l_606,h_580) else caught-fail) in
                                                        {9812}let server_wkh_53: bitstring = (if v_2189 then catch-fail(hmac(@8_tls_h,server_hts_53,x_688)) else caught-fail) in
                                                        {9813}let v_2190: bool = not-caught-fail(server_wkh_53) in
                                                        {9815}let h_581: bitstring = (if v_2190 then zero else caught-fail) in
                                                        {9814}let l_607: label = (if v_2190 then tls13_finished else caught-fail) in
                                                        {9816}let x_689: bitstring = (if v_2190 then (l_607,h_581) else caught-fail) in
                                                        {9817}let client_fk_53: bitstring = (if v_2190 then catch-fail(hmac(@8_tls_h,client_hts_53,x_689)) else caught-fail) in
                                                        {9818}let v_2191: bool = not-caught-fail(client_fk_53) in
                                                        {9820}let h_582: bitstring = (if v_2191 then zero else caught-fail) in
                                                        {9819}let l_608: label = (if v_2191 then tls13_finished else caught-fail) in
                                                        {9821}let x_690: bitstring = (if v_2191 then (l_608,h_582) else caught-fail) in
                                                        {9822}let server_fk_53: bitstring = (if v_2191 then catch-fail(hmac(@8_tls_h,server_hts_53,x_690)) else caught-fail) in
                                                        {9823}let v_2192: bool = not-caught-fail(server_fk_53) in
                                                        {9824}let (master_secret_114: bitstring,chk_60: aead_key,shk_59: aead_key,cfin_60: mac_key,sfin_59: mac_key) = (if v_2183 then (if v_2184 then (if v_2186 then (if v_2188 then (if v_2189 then (if v_2190 then (if v_2191 then (if v_2192 then (master_secret_113,client_wkh_53,server_wkh_53,client_fk_53,server_fk_53) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                        {9825}event Client_chk(id_client_5,chk_60);
                                                        {9826}event Client_shk(id_client_5,shk_59);
                                                        {9827}event Client_cfin(id_client_5,cfin_60);
                                                        {9828}event Client_sfin(id_client_5,sfin_59);
                                                        {9829}in(io, enc_ee_msg_52: bitstring);
                                                        {9830}let ee_msg_57: msg = aead_dec(@8_tls_a,shk_59,0,zero,enc_ee_msg_52) in
                                                        {9831}let EE(ech_ee_52: echExt,extra_ee_52: extraExt) = ee_msg_57 in
                                                        {9832}let cur_log2_112: bitstring = (cur_log2_111,ee_msg_57) in
                                                        {9833}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_31,sr_63,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_246,safe_psk_58,@8_comp_psk,master_secret_114,chk_60,0,shk_59,1,cfin_60,sfin_59,cur_log2_112)))
                                                    )
                                                    else
                                                        {9834}out(io, illegal_parameter)
                                                )
                                                else
                                                    {9835}out(io, illegal_parameter)
                                        )
                                        else
                                            {9836}out(io, unexpected_message)
                                )
                                else
                                    {9838}let psk_247: preSharedKey = NoPsk in
                                    {9840}let k_222: bitstring = catch-fail(psk2b(psk_247)) in
                                    {9841}let v_2193: bool = not-caught-fail(k_222) in
                                    {9839}let s_225: bitstring = zero in
                                    {9842}let early_secret_165: bitstring = catch-fail((if v_2193 then hmac(@8_tls_h,s_225,k_222) else fail-any)) in
                                    {9843}let v_2194: bool = not-caught-fail(early_secret_165) in
                                    {9845}let m_218: bitstring = (if v_2194 then zero else caught-fail) in
                                    {9846}let h_583: bitstring = (if v_2194 then catch-fail(hash(@8_tls_h,m_218)) else caught-fail) in
                                    {9847}let v_2195: bool = not-caught-fail(h_583) in
                                    {9844}let l_609: label = (if v_2194 then tls13_ext_res_binder else caught-fail) in
                                    {9848}let x_691: bitstring = (if v_2195 then (l_609,h_583) else caught-fail) in
                                    {9849}let binder_key_110: bitstring = (if v_2194 then catch-fail((if v_2195 then hmac(@8_tls_h,early_secret_165,x_691) else fail-any)) else caught-fail) in
                                    {9850}let v_2196: bool = not-caught-fail(binder_key_110) in
                                    {9851}let v_2197: bitstring = catch-fail((if v_2194 then (if v_2196 then (early_secret_165,binder_key_110) else fail-any) else fail-any)) in
                                    {9852}let v_2198: bool = (not-caught-fail(v_2197) && success?(1-proj-2-tuple(v_2197))) in
                                    {9853}let kb_110: mac_key = (if v_2198 then 2-proj-2-tuple(v_2197) else caught-fail) in
                                    {9854}let es_166: bitstring = (if v_2198 then 1-proj-2-tuple(v_2197) else caught-fail) in
                                    {9855}let v_2199: bitstring = catch-fail((if v_2198 then (empty_psk_ext,(NoPsk,zero,es_166,false)) else fail-any)) in
                                    {9856}let v_2200: bool = (not-caught-fail(v_2199) && success?(1-proj-2-tuple(v_2199))) in
                                    {9857}let psk_data_58: bitstring = (if v_2200 then 2-proj-2-tuple(v_2199) else caught-fail) in
                                    {9858}let psk_ext_112: preSharedKeyExt = (if v_2200 then 1-proj-2-tuple(v_2199) else caught-fail) in
                                    {9859}let o_offer_43: params = (if v_2200 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_11,SNI(o_dom_13),o_ech_ext_21,empty_extra_ext,psk_ext_112) else caught-fail) in
                                    {9860}let (client_hello'_30: msg,cr'_32: bytes32,kex_data'_27: bitstring,psk_data'_46: bitstring) = (if v_2200 then (CH(o_cr_16,o_offer_43),o_cr_16,kex_data_11,psk_data_58) else fail-any) in
                                    {9861}out(io, client_hello'_30);
                                    {9863}in(io, server_hello'_42: msg);
                                    {9864}let SH(sr'_27: bytes32,mode'_27: params) = server_hello'_42 in
                                    (
                                        {9865}if (sr'_27 = B32(HRR24,HRR8)) then
                                            {9866}out(io, unexpected_message)
                                        else
                                            {9867}let (x_692: bitstring,g_61: group) = kex_data'_27 in
                                            {9868}let (psk_offer_53: preSharedKey,id_offer_53: identityPsk,es_offer_53: bitstring,is_safe_offer_53: bool) = psk_data'_46 in
                                            {9869}event Client_PSKOffer(id_client_5,psk_offer_53,id_offer_53,is_safe_offer_53);
                                            {9870}event Client_Rand_client(id_client_5,cr'_32);
                                            {9871}event Client_DH_client(id_client_5,dh_pub(g_61,x_692));
                                            {9872}event Client_server_domain(id_client_5,o_dom_8);
                                            {9873}let SH(sr_64: bytes32,mode_61: params) = server_hello'_42 in
                                            {9874}event Client_Rand_server(id_client_5,sr_64);
                                            {9875}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_61,gy_54: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_113: preSharedKeyExt) = mode_61 in
                                            (
                                                {9877}event Client_DH_server(id_client_5,gy_54);
                                                {9878}let v_2201: bool = (psk_ext_113 = empty_psk_ext) in
                                                {9879}let psk_248: preSharedKey = (if v_2201 then NoPsk else caught-fail) in
                                                {9881}let k_223: bitstring = (if v_2201 then catch-fail(psk2b(psk_248)) else caught-fail) in
                                                {9882}let v_2202: bool = not-caught-fail(k_223) in
                                                {9880}let s_226: bitstring = (if v_2201 then zero else caught-fail) in
                                                {9883}let early_secret_166: bitstring = (if v_2201 then catch-fail((if v_2202 then hmac(@8_tls_h,s_226,k_223) else fail-any)) else caught-fail) in
                                                {9884}let v_2203: bool = not-caught-fail(early_secret_166) in
                                                {9886}let m_219: bitstring = (if v_2203 then zero else caught-fail) in
                                                {9887}let h_584: bitstring = (if v_2203 then catch-fail(hash(@8_tls_h,m_219)) else caught-fail) in
                                                {9888}let v_2204: bool = not-caught-fail(h_584) in
                                                {9885}let l_610: label = (if v_2203 then tls13_ext_res_binder else caught-fail) in
                                                {9889}let x_693: bitstring = (if v_2204 then (l_610,h_584) else caught-fail) in
                                                {9890}let binder_key_111: bitstring = (if v_2203 then catch-fail((if v_2204 then hmac(@8_tls_h,early_secret_166,x_693) else fail-any)) else caught-fail) in
                                                {9891}let v_2205: bool = not-caught-fail(binder_key_111) in
                                                {9892}let v_2206: bitstring = (if v_2201 then catch-fail((if v_2203 then (if v_2205 then (early_secret_166,binder_key_111) else fail-any) else fail-any)) else caught-fail) in
                                                {9893}let v_2207: bool = (not-caught-fail(v_2206) && success?(1-proj-2-tuple(v_2206))) in
                                                {9894}let kb_111: mac_key = (if v_2207 then 2-proj-2-tuple(v_2206) else caught-fail) in
                                                {9895}let es_167: bitstring = (if v_2207 then 1-proj-2-tuple(v_2206) else caught-fail) in
                                                {9896}let v_2208: bitstring = (if not(v_2201) then catch-fail(psk_data'_46) else caught-fail) in
                                                {9897}let v_2209: bool = (not-caught-fail(v_2208) && success?(1-proj-4-tuple(v_2208))) in
                                                {9898}let is_safe_101: bool = (if v_2209 then 4-proj-4-tuple(v_2208) else caught-fail) in
                                                {9899}let es_168: bitstring = (if v_2209 then 3-proj-4-tuple(v_2208) else caught-fail) in
                                                {9900}let id_115: identityPsk = (if v_2209 then 2-proj-4-tuple(v_2208) else caught-fail) in
                                                {9901}let psk_249: preSharedKey = (if v_2209 then 1-proj-4-tuple(v_2208) else caught-fail) in
                                                {9902}let (psk_250: preSharedKey,early_secret_167: bitstring,valid_53: bool,safe_psk_59: bool) = (if v_2201 then (if v_2207 then (NoPsk,es_167,true,false) else fail-any) else (if v_2209 then (psk_249,es_168,((psk_249 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_113)),is_safe_101) else fail-any)) in
                                                {9903}event Client_PSKChoosen(id_client_5,psk_250,safe_psk_59);
                                                {9904}if valid_53 then
                                                (
                                                    {9907}new s_227[]: seed;
                                                    {9905}let gxy_108: element = catch-fail(dh_decap_fun(g_61,gy_54,x_692)) in
                                                    {9906}let v_2210: bool = not-caught-fail(gxy_108) in
                                                    {9908}let gxy_109: element = (if v_2210 then gxy_108 else dh_f(s_227)) in
                                                    {9909}event Client_DH_gxy(id_client_5,gxy_109);
                                                    {9911}let m_220: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {9912}let v_2211: bool = not-caught-fail(m_220) in
                                                    {9913}let h_585: bitstring = (if v_2211 then catch-fail(hash(@8_tls_h,m_220)) else caught-fail) in
                                                    {9914}let v_2212: bool = not-caught-fail(h_585) in
                                                    {9910}let l_611: label = tls13_derived in
                                                    {9915}let x_694: bitstring = (if v_2212 then (l_611,h_585) else caught-fail) in
                                                    {9916}let extra_117: bitstring = catch-fail((if v_2211 then (if v_2212 then hmac(@8_tls_h,early_secret_167,x_694) else fail-any) else fail-any)) in
                                                    {9917}let v_2213: bool = not-caught-fail(extra_117) in
                                                    {9918}let handshake_secret_54: bitstring = (if v_2213 then hmac(@8_tls_h,extra_117,gxy_109) else fail-any) in
                                                    {9920}let m_221: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {9921}let v_2214: bool = not-caught-fail(m_221) in
                                                    {9922}let h_586: bitstring = (if v_2214 then catch-fail(hash(@8_tls_h,m_221)) else caught-fail) in
                                                    {9923}let v_2215: bool = not-caught-fail(h_586) in
                                                    {9919}let l_612: label = tls13_derived in
                                                    {9924}let x_695: bitstring = (if v_2215 then (l_612,h_586) else caught-fail) in
                                                    {9925}let extra_118: bitstring = catch-fail((if v_2214 then (if v_2215 then hmac(@8_tls_h,handshake_secret_54,x_695) else fail-any) else fail-any)) in
                                                    {9926}let v_2216: bool = not-caught-fail(extra_118) in
                                                    {9927}let k_224: bitstring = (if v_2216 then zero else caught-fail) in
                                                    {9928}let master_secret_115: bitstring = (if v_2216 then catch-fail(hmac(@8_tls_h,handshake_secret_54,k_224)) else caught-fail) in
                                                    {9929}let v_2217: bool = not-caught-fail(master_secret_115) in
                                                    {9862}let cur_log_OU1_HRR_OU2_18: bitstring = (cur_log_OU1_HRR_4,client_hello'_30) in
                                                    {9876}let cur_log2_113: bitstring = (cur_log_OU1_HRR_OU2_18,server_hello'_42) in
                                                    {9931}let h_587: bitstring = (if v_2217 then catch-fail(hash(@8_tls_h,cur_log2_113)) else caught-fail) in
                                                    {9932}let v_2218: bool = not-caught-fail(h_587) in
                                                    {9930}let l_613: label = (if v_2217 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {9933}let x_696: bitstring = (if v_2218 then (l_613,h_587) else caught-fail) in
                                                    {9934}let client_hts_54: bitstring = (if v_2217 then catch-fail((if v_2218 then hmac(@8_tls_h,handshake_secret_54,x_696) else fail-any)) else caught-fail) in
                                                    {9935}let v_2219: bool = not-caught-fail(client_hts_54) in
                                                    {9937}let h_588: bitstring = (if v_2219 then catch-fail(hash(@8_tls_h,cur_log2_113)) else caught-fail) in
                                                    {9938}let v_2220: bool = not-caught-fail(h_588) in
                                                    {9936}let l_614: label = (if v_2219 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {9939}let x_697: bitstring = (if v_2220 then (l_614,h_588) else caught-fail) in
                                                    {9940}let server_hts_54: bitstring = (if v_2219 then catch-fail((if v_2220 then hmac(@8_tls_h,handshake_secret_54,x_697) else fail-any)) else caught-fail) in
                                                    {9941}let v_2221: bool = not-caught-fail(server_hts_54) in
                                                    {9943}let h_589: bitstring = (if v_2221 then zero else caught-fail) in
                                                    {9942}let l_615: label = (if v_2221 then tls13_key else caught-fail) in
                                                    {9944}let x_698: bitstring = (if v_2221 then (l_615,h_589) else caught-fail) in
                                                    {9945}let client_wkh_54: bitstring = (if v_2221 then catch-fail(hmac(@8_tls_h,client_hts_54,x_698)) else caught-fail) in
                                                    {9946}let v_2222: bool = not-caught-fail(client_wkh_54) in
                                                    {9948}let h_590: bitstring = (if v_2222 then zero else caught-fail) in
                                                    {9947}let l_616: label = (if v_2222 then tls13_key else caught-fail) in
                                                    {9949}let x_699: bitstring = (if v_2222 then (l_616,h_590) else caught-fail) in
                                                    {9950}let server_wkh_54: bitstring = (if v_2222 then catch-fail(hmac(@8_tls_h,server_hts_54,x_699)) else caught-fail) in
                                                    {9951}let v_2223: bool = not-caught-fail(server_wkh_54) in
                                                    {9953}let h_591: bitstring = (if v_2223 then zero else caught-fail) in
                                                    {9952}let l_617: label = (if v_2223 then tls13_finished else caught-fail) in
                                                    {9954}let x_700: bitstring = (if v_2223 then (l_617,h_591) else caught-fail) in
                                                    {9955}let client_fk_54: bitstring = (if v_2223 then catch-fail(hmac(@8_tls_h,client_hts_54,x_700)) else caught-fail) in
                                                    {9956}let v_2224: bool = not-caught-fail(client_fk_54) in
                                                    {9958}let h_592: bitstring = (if v_2224 then zero else caught-fail) in
                                                    {9957}let l_618: label = (if v_2224 then tls13_finished else caught-fail) in
                                                    {9959}let x_701: bitstring = (if v_2224 then (l_618,h_592) else caught-fail) in
                                                    {9960}let server_fk_54: bitstring = (if v_2224 then catch-fail(hmac(@8_tls_h,server_hts_54,x_701)) else caught-fail) in
                                                    {9961}let v_2225: bool = not-caught-fail(server_fk_54) in
                                                    {9962}let (master_secret_116: bitstring,chk_61: aead_key,shk_60: aead_key,cfin_61: mac_key,sfin_60: mac_key) = (if v_2216 then (if v_2217 then (if v_2219 then (if v_2221 then (if v_2222 then (if v_2223 then (if v_2224 then (if v_2225 then (master_secret_115,client_wkh_54,server_wkh_54,client_fk_54,server_fk_54) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {9963}event Client_chk(id_client_5,chk_61);
                                                    {9964}event Client_shk(id_client_5,shk_60);
                                                    {9965}event Client_cfin(id_client_5,cfin_61);
                                                    {9966}event Client_sfin(id_client_5,sfin_60);
                                                    {9967}in(io, enc_ee_msg_53: bitstring);
                                                    {9968}let ee_msg_58: msg = aead_dec(@8_tls_a,shk_60,0,zero,enc_ee_msg_53) in
                                                    {9969}let EE(ech_ee_53: echExt,extra_ee_53: extraExt) = ee_msg_58 in
                                                    {9970}let cur_log2_114: bitstring = (cur_log2_113,ee_msg_58) in
                                                    {9971}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_32,sr_64,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_250,safe_psk_59,@8_comp_psk,master_secret_116,chk_61,0,shk_60,1,cfin_61,sfin_60,cur_log2_114)))
                                                )
                                                else
                                                    {9972}out(io, illegal_parameter)
                                            )
                                            else
                                                {9973}out(io, illegal_parameter)
                                    )
                                    else
                                        {9974}out(io, unexpected_message)
                            )
                            else
                                {9975}let psk_251: preSharedKey = NoPsk in
                                {9977}let k_225: bitstring = catch-fail(psk2b(psk_251)) in
                                {9978}let v_2226: bool = not-caught-fail(k_225) in
                                {9976}let s_228: bitstring = zero in
                                {9979}let early_secret_168: bitstring = catch-fail((if v_2226 then hmac(@8_tls_h,s_228,k_225) else fail-any)) in
                                {9980}let v_2227: bool = not-caught-fail(early_secret_168) in
                                {9982}let m_222: bitstring = (if v_2227 then zero else caught-fail) in
                                {9983}let h_593: bitstring = (if v_2227 then catch-fail(hash(@8_tls_h,m_222)) else caught-fail) in
                                {9984}let v_2228: bool = not-caught-fail(h_593) in
                                {9981}let l_619: label = (if v_2227 then tls13_ext_res_binder else caught-fail) in
                                {9985}let x_702: bitstring = (if v_2228 then (l_619,h_593) else caught-fail) in
                                {9986}let binder_key_112: bitstring = (if v_2227 then catch-fail((if v_2228 then hmac(@8_tls_h,early_secret_168,x_702) else fail-any)) else caught-fail) in
                                {9987}let v_2229: bool = not-caught-fail(binder_key_112) in
                                {9988}let v_2230: bitstring = catch-fail((if v_2227 then (if v_2229 then (early_secret_168,binder_key_112) else fail-any) else fail-any)) in
                                {9989}let v_2231: bool = (not-caught-fail(v_2230) && success?(1-proj-2-tuple(v_2230))) in
                                {9990}let kb_112: mac_key = (if v_2231 then 2-proj-2-tuple(v_2230) else caught-fail) in
                                {9991}let es_169: bitstring = (if v_2231 then 1-proj-2-tuple(v_2230) else caught-fail) in
                                {9992}let v_2232: preSharedKeyExt = (if v_2231 then catch-fail(o_psk_ext_21) else caught-fail) in
                                {9993}let v_2233: bool = (not-caught-fail(v_2232) && success?(1-proj-client_psk_ext(v_2232))) in
                                {9994}let fake_binder_24: bitstring = (if v_2233 then 2-proj-client_psk_ext(v_2232) else caught-fail) in
                                {9995}let fake_id_24: identityPsk = (if v_2233 then 1-proj-client_psk_ext(v_2232) else caught-fail) in
                                {9996}new fake_binder'_4[]: bitstring;
                                {9997}let v_2234: bitstring = catch-fail((if v_2231 then (if v_2233 then (client_psk_ext(fake_id_24,fake_binder'_4),(NoPsk,zero,es_169,false)) else (empty_psk_ext,(NoPsk,zero,es_169,false))) else fail-any)) in
                                {9998}let v_2235: bool = (not-caught-fail(v_2234) && success?(1-proj-2-tuple(v_2234))) in
                                {9999}let psk_data_59: bitstring = (if v_2235 then 2-proj-2-tuple(v_2234) else caught-fail) in
                                {10000}let psk_ext_114: preSharedKeyExt = (if v_2235 then 1-proj-2-tuple(v_2234) else caught-fail) in
                                {10001}let o_offer_44: params = (if v_2235 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_11,SNI(o_dom_13),o_ech_ext_21,empty_extra_ext,psk_ext_114) else caught-fail) in
                                {10002}let (client_hello'_31: msg,cr'_33: bytes32,kex_data'_28: bitstring,psk_data'_47: bitstring) = (if v_2235 then (CH(o_cr_16,o_offer_44),o_cr_16,kex_data_11,psk_data_59) else fail-any) in
                                {10003}out(io, client_hello'_31);
                                {10005}in(io, server_hello'_43: msg);
                                {10006}let SH(sr'_28: bytes32,mode'_28: params) = server_hello'_43 in
                                (
                                    {10007}if (sr'_28 = B32(HRR24,HRR8)) then
                                        {10008}out(io, unexpected_message)
                                    else
                                        {10009}let (x_703: bitstring,g_62: group) = kex_data'_28 in
                                        {10010}let (psk_offer_54: preSharedKey,id_offer_54: identityPsk,es_offer_54: bitstring,is_safe_offer_54: bool) = psk_data'_47 in
                                        {10011}event Client_PSKOffer(id_client_5,psk_offer_54,id_offer_54,is_safe_offer_54);
                                        {10012}event Client_Rand_client(id_client_5,cr'_33);
                                        {10013}event Client_DH_client(id_client_5,dh_pub(g_62,x_703));
                                        {10014}event Client_server_domain(id_client_5,o_dom_8);
                                        {10015}let SH(sr_65: bytes32,mode_62: params) = server_hello'_43 in
                                        {10016}event Client_Rand_server(id_client_5,sr_65);
                                        {10017}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_62,gy_55: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_115: preSharedKeyExt) = mode_62 in
                                        (
                                            {10019}event Client_DH_server(id_client_5,gy_55);
                                            {10020}let v_2236: bool = (psk_ext_115 = empty_psk_ext) in
                                            {10021}let psk_252: preSharedKey = (if v_2236 then NoPsk else caught-fail) in
                                            {10023}let k_226: bitstring = (if v_2236 then catch-fail(psk2b(psk_252)) else caught-fail) in
                                            {10024}let v_2237: bool = not-caught-fail(k_226) in
                                            {10022}let s_229: bitstring = (if v_2236 then zero else caught-fail) in
                                            {10025}let early_secret_169: bitstring = (if v_2236 then catch-fail((if v_2237 then hmac(@8_tls_h,s_229,k_226) else fail-any)) else caught-fail) in
                                            {10026}let v_2238: bool = not-caught-fail(early_secret_169) in
                                            {10028}let m_223: bitstring = (if v_2238 then zero else caught-fail) in
                                            {10029}let h_594: bitstring = (if v_2238 then catch-fail(hash(@8_tls_h,m_223)) else caught-fail) in
                                            {10030}let v_2239: bool = not-caught-fail(h_594) in
                                            {10027}let l_620: label = (if v_2238 then tls13_ext_res_binder else caught-fail) in
                                            {10031}let x_704: bitstring = (if v_2239 then (l_620,h_594) else caught-fail) in
                                            {10032}let binder_key_113: bitstring = (if v_2238 then catch-fail((if v_2239 then hmac(@8_tls_h,early_secret_169,x_704) else fail-any)) else caught-fail) in
                                            {10033}let v_2240: bool = not-caught-fail(binder_key_113) in
                                            {10034}let v_2241: bitstring = (if v_2236 then catch-fail((if v_2238 then (if v_2240 then (early_secret_169,binder_key_113) else fail-any) else fail-any)) else caught-fail) in
                                            {10035}let v_2242: bool = (not-caught-fail(v_2241) && success?(1-proj-2-tuple(v_2241))) in
                                            {10036}let kb_113: mac_key = (if v_2242 then 2-proj-2-tuple(v_2241) else caught-fail) in
                                            {10037}let es_170: bitstring = (if v_2242 then 1-proj-2-tuple(v_2241) else caught-fail) in
                                            {10038}let v_2243: bitstring = (if not(v_2236) then catch-fail(psk_data'_47) else caught-fail) in
                                            {10039}let v_2244: bool = (not-caught-fail(v_2243) && success?(1-proj-4-tuple(v_2243))) in
                                            {10040}let is_safe_102: bool = (if v_2244 then 4-proj-4-tuple(v_2243) else caught-fail) in
                                            {10041}let es_171: bitstring = (if v_2244 then 3-proj-4-tuple(v_2243) else caught-fail) in
                                            {10042}let id_116: identityPsk = (if v_2244 then 2-proj-4-tuple(v_2243) else caught-fail) in
                                            {10043}let psk_253: preSharedKey = (if v_2244 then 1-proj-4-tuple(v_2243) else caught-fail) in
                                            {10044}let (psk_254: preSharedKey,early_secret_170: bitstring,valid_54: bool,safe_psk_60: bool) = (if v_2236 then (if v_2242 then (NoPsk,es_170,true,false) else fail-any) else (if v_2244 then (psk_253,es_171,((psk_253 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_115)),is_safe_102) else fail-any)) in
                                            {10045}event Client_PSKChoosen(id_client_5,psk_254,safe_psk_60);
                                            {10046}if valid_54 then
                                            (
                                                {10049}new s_230[]: seed;
                                                {10047}let gxy_110: element = catch-fail(dh_decap_fun(g_62,gy_55,x_703)) in
                                                {10048}let v_2245: bool = not-caught-fail(gxy_110) in
                                                {10050}let gxy_111: element = (if v_2245 then gxy_110 else dh_f(s_230)) in
                                                {10051}event Client_DH_gxy(id_client_5,gxy_111);
                                                {10053}let m_224: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                {10054}let v_2246: bool = not-caught-fail(m_224) in
                                                {10055}let h_595: bitstring = (if v_2246 then catch-fail(hash(@8_tls_h,m_224)) else caught-fail) in
                                                {10056}let v_2247: bool = not-caught-fail(h_595) in
                                                {10052}let l_621: label = tls13_derived in
                                                {10057}let x_705: bitstring = (if v_2247 then (l_621,h_595) else caught-fail) in
                                                {10058}let extra_119: bitstring = catch-fail((if v_2246 then (if v_2247 then hmac(@8_tls_h,early_secret_170,x_705) else fail-any) else fail-any)) in
                                                {10059}let v_2248: bool = not-caught-fail(extra_119) in
                                                {10060}let handshake_secret_55: bitstring = (if v_2248 then hmac(@8_tls_h,extra_119,gxy_111) else fail-any) in
                                                {10062}let m_225: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                {10063}let v_2249: bool = not-caught-fail(m_225) in
                                                {10064}let h_596: bitstring = (if v_2249 then catch-fail(hash(@8_tls_h,m_225)) else caught-fail) in
                                                {10065}let v_2250: bool = not-caught-fail(h_596) in
                                                {10061}let l_622: label = tls13_derived in
                                                {10066}let x_706: bitstring = (if v_2250 then (l_622,h_596) else caught-fail) in
                                                {10067}let extra_120: bitstring = catch-fail((if v_2249 then (if v_2250 then hmac(@8_tls_h,handshake_secret_55,x_706) else fail-any) else fail-any)) in
                                                {10068}let v_2251: bool = not-caught-fail(extra_120) in
                                                {10069}let k_227: bitstring = (if v_2251 then zero else caught-fail) in
                                                {10070}let master_secret_117: bitstring = (if v_2251 then catch-fail(hmac(@8_tls_h,handshake_secret_55,k_227)) else caught-fail) in
                                                {10071}let v_2252: bool = not-caught-fail(master_secret_117) in
                                                {10004}let cur_log_OU1_HRR_OU2_19: bitstring = (cur_log_OU1_HRR_4,client_hello'_31) in
                                                {10018}let cur_log2_115: bitstring = (cur_log_OU1_HRR_OU2_19,server_hello'_43) in
                                                {10073}let h_597: bitstring = (if v_2252 then catch-fail(hash(@8_tls_h,cur_log2_115)) else caught-fail) in
                                                {10074}let v_2253: bool = not-caught-fail(h_597) in
                                                {10072}let l_623: label = (if v_2252 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {10075}let x_707: bitstring = (if v_2253 then (l_623,h_597) else caught-fail) in
                                                {10076}let client_hts_55: bitstring = (if v_2252 then catch-fail((if v_2253 then hmac(@8_tls_h,handshake_secret_55,x_707) else fail-any)) else caught-fail) in
                                                {10077}let v_2254: bool = not-caught-fail(client_hts_55) in
                                                {10079}let h_598: bitstring = (if v_2254 then catch-fail(hash(@8_tls_h,cur_log2_115)) else caught-fail) in
                                                {10080}let v_2255: bool = not-caught-fail(h_598) in
                                                {10078}let l_624: label = (if v_2254 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {10081}let x_708: bitstring = (if v_2255 then (l_624,h_598) else caught-fail) in
                                                {10082}let server_hts_55: bitstring = (if v_2254 then catch-fail((if v_2255 then hmac(@8_tls_h,handshake_secret_55,x_708) else fail-any)) else caught-fail) in
                                                {10083}let v_2256: bool = not-caught-fail(server_hts_55) in
                                                {10085}let h_599: bitstring = (if v_2256 then zero else caught-fail) in
                                                {10084}let l_625: label = (if v_2256 then tls13_key else caught-fail) in
                                                {10086}let x_709: bitstring = (if v_2256 then (l_625,h_599) else caught-fail) in
                                                {10087}let client_wkh_55: bitstring = (if v_2256 then catch-fail(hmac(@8_tls_h,client_hts_55,x_709)) else caught-fail) in
                                                {10088}let v_2257: bool = not-caught-fail(client_wkh_55) in
                                                {10090}let h_600: bitstring = (if v_2257 then zero else caught-fail) in
                                                {10089}let l_626: label = (if v_2257 then tls13_key else caught-fail) in
                                                {10091}let x_710: bitstring = (if v_2257 then (l_626,h_600) else caught-fail) in
                                                {10092}let server_wkh_55: bitstring = (if v_2257 then catch-fail(hmac(@8_tls_h,server_hts_55,x_710)) else caught-fail) in
                                                {10093}let v_2258: bool = not-caught-fail(server_wkh_55) in
                                                {10095}let h_601: bitstring = (if v_2258 then zero else caught-fail) in
                                                {10094}let l_627: label = (if v_2258 then tls13_finished else caught-fail) in
                                                {10096}let x_711: bitstring = (if v_2258 then (l_627,h_601) else caught-fail) in
                                                {10097}let client_fk_55: bitstring = (if v_2258 then catch-fail(hmac(@8_tls_h,client_hts_55,x_711)) else caught-fail) in
                                                {10098}let v_2259: bool = not-caught-fail(client_fk_55) in
                                                {10100}let h_602: bitstring = (if v_2259 then zero else caught-fail) in
                                                {10099}let l_628: label = (if v_2259 then tls13_finished else caught-fail) in
                                                {10101}let x_712: bitstring = (if v_2259 then (l_628,h_602) else caught-fail) in
                                                {10102}let server_fk_55: bitstring = (if v_2259 then catch-fail(hmac(@8_tls_h,server_hts_55,x_712)) else caught-fail) in
                                                {10103}let v_2260: bool = not-caught-fail(server_fk_55) in
                                                {10104}let (master_secret_118: bitstring,chk_62: aead_key,shk_61: aead_key,cfin_62: mac_key,sfin_61: mac_key) = (if v_2251 then (if v_2252 then (if v_2254 then (if v_2256 then (if v_2257 then (if v_2258 then (if v_2259 then (if v_2260 then (master_secret_117,client_wkh_55,server_wkh_55,client_fk_55,server_fk_55) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {10105}event Client_chk(id_client_5,chk_62);
                                                {10106}event Client_shk(id_client_5,shk_61);
                                                {10107}event Client_cfin(id_client_5,cfin_62);
                                                {10108}event Client_sfin(id_client_5,sfin_61);
                                                {10109}in(io, enc_ee_msg_54: bitstring);
                                                {10110}let ee_msg_59: msg = aead_dec(@8_tls_a,shk_61,0,zero,enc_ee_msg_54) in
                                                {10111}let EE(ech_ee_54: echExt,extra_ee_54: extraExt) = ee_msg_59 in
                                                {10112}let cur_log2_116: bitstring = (cur_log2_115,ee_msg_59) in
                                                {10113}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_33,sr_65,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_254,safe_psk_60,@8_comp_psk,master_secret_118,chk_62,0,shk_61,1,cfin_62,sfin_61,cur_log2_116)))
                                            )
                                            else
                                                {10114}out(io, illegal_parameter)
                                        )
                                        else
                                            {10115}out(io, illegal_parameter)
                                )
                                else
                                    {10116}out(io, unexpected_message)
                    )
                    else
                        {10118}let sh_modified_20: msg = SH(B32(sr24_6,zero8),mode_55) in
                        {10117}let cur_log_29: bitstring = (zero,i_client_hello_22) in
                        {10119}let cur_log_sh_20: bitstring = (cur_log_29,sh_modified_20) in
                        {10120}let transcript_ech_conf_20: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_20)) in
                        {10121}let v_2261: bool = not-caught-fail(transcript_ech_conf_20) in
                        {10123}let k_228: bitstring = (if v_2261 then catch-fail(b32_2_b(get_random(i_client_hello_22))) else caught-fail) in
                        {10124}let v_2262: bool = not-caught-fail(k_228) in
                        {10122}let s_231: bitstring = (if v_2261 then zero else caught-fail) in
                        {10125}let k_229: bitstring = (if v_2261 then catch-fail((if v_2262 then hmac(@8_backend_h,s_231,k_228) else fail-any)) else caught-fail) in
                        {10126}let v_2263: bool = not-caught-fail(k_229) in
                        {10127}let l_629: label = (if v_2263 then ech_accept_confirmation else caught-fail) in
                        {10128}let x_713: bitstring = (if v_2263 then (l_629,cur_log_sh_20) else caught-fail) in
                        {10129}let sr8_25: bytes8 = (if v_2261 then catch-fail(crop_into_bytes8((if v_2263 then hmac(@8_backend_h,k_229,x_713) else fail-any))) else caught-fail) in
                        {10130}let v_2264: bool = not-caught-fail(sr8_25) in
                        {10131}if (B32(sr24_6,sr8_21) = (if v_2261 then (if v_2264 then B32(sr24_6,sr8_25) else fail-any) else fail-any)) then
                        (
                            {10132}event ClientEchAcceptance(id_client_5,true);
                            {10134}let (x_714: bitstring,g_63: group) = i_kex_data_10 in
                            {10135}let (psk_offer_55: preSharedKey,id_offer_55: identityPsk,es_offer_55: bitstring,is_safe_offer_55: bool) = psk_data_52 in
                            {10136}event Client_PSKOffer(id_client_5,psk_offer_55,id_offer_55,is_safe_offer_55);
                            {10137}event Client_Rand_client(id_client_5,i_cr_11);
                            {10138}event Client_DH_client(id_client_5,dh_pub(g_63,x_714));
                            {10139}event Client_server_domain(id_client_5,backend_dom_1);
                            {10140}let SH(sr_66: bytes32,mode_63: params) = server_hello_8 in
                            {10141}event Client_Rand_server(id_client_5,sr_66);
                            {10142}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_63,gy_56: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_116: preSharedKeyExt) = mode_63 in
                            (
                                {10144}event Client_DH_server(id_client_5,gy_56);
                                {10145}let v_2265: bool = (psk_ext_116 = empty_psk_ext) in
                                {10146}let psk_255: preSharedKey = (if v_2265 then NoPsk else caught-fail) in
                                {10148}let k_230: bitstring = (if v_2265 then catch-fail(psk2b(psk_255)) else caught-fail) in
                                {10149}let v_2266: bool = not-caught-fail(k_230) in
                                {10147}let s_232: bitstring = (if v_2265 then zero else caught-fail) in
                                {10150}let early_secret_171: bitstring = (if v_2265 then catch-fail((if v_2266 then hmac(@8_backend_h,s_232,k_230) else fail-any)) else caught-fail) in
                                {10151}let v_2267: bool = not-caught-fail(early_secret_171) in
                                {10153}let m_226: bitstring = (if v_2267 then zero else caught-fail) in
                                {10154}let h_603: bitstring = (if v_2267 then catch-fail(hash(@8_backend_h,m_226)) else caught-fail) in
                                {10155}let v_2268: bool = not-caught-fail(h_603) in
                                {10152}let l_630: label = (if v_2267 then tls13_ext_res_binder else caught-fail) in
                                {10156}let x_715: bitstring = (if v_2268 then (l_630,h_603) else caught-fail) in
                                {10157}let binder_key_114: bitstring = (if v_2267 then catch-fail((if v_2268 then hmac(@8_backend_h,early_secret_171,x_715) else fail-any)) else caught-fail) in
                                {10158}let v_2269: bool = not-caught-fail(binder_key_114) in
                                {10159}let v_2270: bitstring = (if v_2265 then catch-fail((if v_2267 then (if v_2269 then (early_secret_171,binder_key_114) else fail-any) else fail-any)) else caught-fail) in
                                {10160}let v_2271: bool = (not-caught-fail(v_2270) && success?(1-proj-2-tuple(v_2270))) in
                                {10161}let kb_114: mac_key = (if v_2271 then 2-proj-2-tuple(v_2270) else caught-fail) in
                                {10162}let es_172: bitstring = (if v_2271 then 1-proj-2-tuple(v_2270) else caught-fail) in
                                {10163}let v_2272: bitstring = (if not(v_2265) then catch-fail(psk_data_52) else caught-fail) in
                                {10164}let v_2273: bool = (not-caught-fail(v_2272) && success?(1-proj-4-tuple(v_2272))) in
                                {10165}let is_safe_103: bool = (if v_2273 then 4-proj-4-tuple(v_2272) else caught-fail) in
                                {10166}let es_173: bitstring = (if v_2273 then 3-proj-4-tuple(v_2272) else caught-fail) in
                                {10167}let id_117: identityPsk = (if v_2273 then 2-proj-4-tuple(v_2272) else caught-fail) in
                                {10168}let psk_256: preSharedKey = (if v_2273 then 1-proj-4-tuple(v_2272) else caught-fail) in
                                {10169}let (psk_257: preSharedKey,early_secret_172: bitstring,valid_55: bool,safe_psk_61: bool) = (if v_2265 then (if v_2271 then (NoPsk,es_172,true,false) else fail-any) else (if v_2273 then (psk_256,es_173,((psk_256 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_116)),is_safe_103) else fail-any)) in
                                {10170}event Client_PSKChoosen(id_client_5,psk_257,safe_psk_61);
                                {10171}if valid_55 then
                                (
                                    {10174}new s_233[]: seed;
                                    {10172}let gxy_112: element = catch-fail(dh_decap_fun(g_63,gy_56,x_714)) in
                                    {10173}let v_2274: bool = not-caught-fail(gxy_112) in
                                    {10175}let gxy_113: element = (if v_2274 then gxy_112 else dh_f(s_233)) in
                                    {10176}event Client_DH_gxy(id_client_5,gxy_113);
                                    {10178}let m_227: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                    {10179}let v_2275: bool = not-caught-fail(m_227) in
                                    {10180}let h_604: bitstring = (if v_2275 then catch-fail(hash(@8_backend_h,m_227)) else caught-fail) in
                                    {10181}let v_2276: bool = not-caught-fail(h_604) in
                                    {10177}let l_631: label = tls13_derived in
                                    {10182}let x_716: bitstring = (if v_2276 then (l_631,h_604) else caught-fail) in
                                    {10183}let extra_121: bitstring = catch-fail((if v_2275 then (if v_2276 then hmac(@8_backend_h,early_secret_172,x_716) else fail-any) else fail-any)) in
                                    {10184}let v_2277: bool = not-caught-fail(extra_121) in
                                    {10185}let handshake_secret_56: bitstring = (if v_2277 then hmac(@8_backend_h,extra_121,gxy_113) else fail-any) in
                                    {10187}let m_228: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                    {10188}let v_2278: bool = not-caught-fail(m_228) in
                                    {10189}let h_605: bitstring = (if v_2278 then catch-fail(hash(@8_backend_h,m_228)) else caught-fail) in
                                    {10190}let v_2279: bool = not-caught-fail(h_605) in
                                    {10186}let l_632: label = tls13_derived in
                                    {10191}let x_717: bitstring = (if v_2279 then (l_632,h_605) else caught-fail) in
                                    {10192}let extra_122: bitstring = catch-fail((if v_2278 then (if v_2279 then hmac(@8_backend_h,handshake_secret_56,x_717) else fail-any) else fail-any)) in
                                    {10193}let v_2280: bool = not-caught-fail(extra_122) in
                                    {10194}let k_231: bitstring = (if v_2280 then zero else caught-fail) in
                                    {10195}let master_secret_119: bitstring = (if v_2280 then catch-fail(hmac(@8_backend_h,handshake_secret_56,k_231)) else caught-fail) in
                                    {10196}let v_2281: bool = not-caught-fail(master_secret_119) in
                                    {10133}let cur_log_30: bitstring = (zero,i_client_hello_22) in
                                    {10143}let cur_log2_117: bitstring = (cur_log_30,server_hello_8) in
                                    {10198}let h_606: bitstring = (if v_2281 then catch-fail(hash(@8_backend_h,cur_log2_117)) else caught-fail) in
                                    {10199}let v_2282: bool = not-caught-fail(h_606) in
                                    {10197}let l_633: label = (if v_2281 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {10200}let x_718: bitstring = (if v_2282 then (l_633,h_606) else caught-fail) in
                                    {10201}let client_hts_56: bitstring = (if v_2281 then catch-fail((if v_2282 then hmac(@8_backend_h,handshake_secret_56,x_718) else fail-any)) else caught-fail) in
                                    {10202}let v_2283: bool = not-caught-fail(client_hts_56) in
                                    {10204}let h_607: bitstring = (if v_2283 then catch-fail(hash(@8_backend_h,cur_log2_117)) else caught-fail) in
                                    {10205}let v_2284: bool = not-caught-fail(h_607) in
                                    {10203}let l_634: label = (if v_2283 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {10206}let x_719: bitstring = (if v_2284 then (l_634,h_607) else caught-fail) in
                                    {10207}let server_hts_56: bitstring = (if v_2283 then catch-fail((if v_2284 then hmac(@8_backend_h,handshake_secret_56,x_719) else fail-any)) else caught-fail) in
                                    {10208}let v_2285: bool = not-caught-fail(server_hts_56) in
                                    {10210}let h_608: bitstring = (if v_2285 then zero else caught-fail) in
                                    {10209}let l_635: label = (if v_2285 then tls13_key else caught-fail) in
                                    {10211}let x_720: bitstring = (if v_2285 then (l_635,h_608) else caught-fail) in
                                    {10212}let client_wkh_56: bitstring = (if v_2285 then catch-fail(hmac(@8_backend_h,client_hts_56,x_720)) else caught-fail) in
                                    {10213}let v_2286: bool = not-caught-fail(client_wkh_56) in
                                    {10215}let h_609: bitstring = (if v_2286 then zero else caught-fail) in
                                    {10214}let l_636: label = (if v_2286 then tls13_key else caught-fail) in
                                    {10216}let x_721: bitstring = (if v_2286 then (l_636,h_609) else caught-fail) in
                                    {10217}let server_wkh_56: bitstring = (if v_2286 then catch-fail(hmac(@8_backend_h,server_hts_56,x_721)) else caught-fail) in
                                    {10218}let v_2287: bool = not-caught-fail(server_wkh_56) in
                                    {10220}let h_610: bitstring = (if v_2287 then zero else caught-fail) in
                                    {10219}let l_637: label = (if v_2287 then tls13_finished else caught-fail) in
                                    {10221}let x_722: bitstring = (if v_2287 then (l_637,h_610) else caught-fail) in
                                    {10222}let client_fk_56: bitstring = (if v_2287 then catch-fail(hmac(@8_backend_h,client_hts_56,x_722)) else caught-fail) in
                                    {10223}let v_2288: bool = not-caught-fail(client_fk_56) in
                                    {10225}let h_611: bitstring = (if v_2288 then zero else caught-fail) in
                                    {10224}let l_638: label = (if v_2288 then tls13_finished else caught-fail) in
                                    {10226}let x_723: bitstring = (if v_2288 then (l_638,h_611) else caught-fail) in
                                    {10227}let server_fk_56: bitstring = (if v_2288 then catch-fail(hmac(@8_backend_h,server_hts_56,x_723)) else caught-fail) in
                                    {10228}let v_2289: bool = not-caught-fail(server_fk_56) in
                                    {10229}let (master_secret_120: bitstring,chk_63: aead_key,shk_62: aead_key,cfin_63: mac_key,sfin_62: mac_key) = (if v_2280 then (if v_2281 then (if v_2283 then (if v_2285 then (if v_2286 then (if v_2287 then (if v_2288 then (if v_2289 then (master_secret_119,client_wkh_56,server_wkh_56,client_fk_56,server_fk_56) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {10230}event Client_chk(id_client_5,chk_63);
                                    {10231}event Client_shk(id_client_5,shk_62);
                                    {10232}event Client_cfin(id_client_5,cfin_63);
                                    {10233}event Client_sfin(id_client_5,sfin_62);
                                    {10234}in(io, enc_ee_msg_55: bitstring);
                                    {10235}let ee_msg_60: msg = aead_dec(@8_backend_a,shk_62,0,zero,enc_ee_msg_55) in
                                    {10236}let EE(ech_ee_55: echExt,extra_ee_55: extraExt) = ee_msg_60 in
                                    {10237}let cur_log2_118: bitstring = (cur_log2_117,ee_msg_60) in
                                    {10238}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr_11,sr_66,@8_backend_h,@8_backend_a,c_dom_7,backend_dom_1,psk_257,safe_psk_61,@8_comp_psk,master_secret_120,chk_63,0,shk_62,1,cfin_63,sfin_62,cur_log2_118)))
                                )
                                else
                                    {10239}out(io, illegal_parameter)
                            )
                            else
                                {10240}out(io, illegal_parameter)
                        )
                        else
                            {10241}event ClientEchAcceptance(id_client_5,false);
                            {10242}let v_2290: bool = @8_use_grease in
                            {10243}let psk_258: preSharedKey = (if not(v_2290) then NoPsk else caught-fail) in
                            {10245}let k_232: bitstring = (if not(v_2290) then catch-fail(psk2b(psk_258)) else caught-fail) in
                            {10246}let v_2291: bool = not-caught-fail(k_232) in
                            {10244}let s_234: bitstring = (if not(v_2290) then zero else caught-fail) in
                            {10247}let early_secret_173: bitstring = (if not(v_2290) then catch-fail((if v_2291 then hmac(@8_tls_h,s_234,k_232) else fail-any)) else caught-fail) in
                            {10248}let v_2292: bool = not-caught-fail(early_secret_173) in
                            {10250}let m_229: bitstring = (if v_2292 then zero else caught-fail) in
                            {10251}let h_612: bitstring = (if v_2292 then catch-fail(hash(@8_tls_h,m_229)) else caught-fail) in
                            {10252}let v_2293: bool = not-caught-fail(h_612) in
                            {10249}let l_639: label = (if v_2292 then tls13_ext_res_binder else caught-fail) in
                            {10253}let x_724: bitstring = (if v_2293 then (l_639,h_612) else caught-fail) in
                            {10254}let binder_key_115: bitstring = (if v_2292 then catch-fail((if v_2293 then hmac(@8_tls_h,early_secret_173,x_724) else fail-any)) else caught-fail) in
                            {10255}let v_2294: bool = not-caught-fail(binder_key_115) in
                            {10256}let v_2295: bitstring = (if not(v_2290) then catch-fail((if v_2292 then (if v_2294 then (early_secret_173,binder_key_115) else fail-any) else fail-any)) else caught-fail) in
                            {10257}let v_2296: bool = (not-caught-fail(v_2295) && success?(1-proj-2-tuple(v_2295))) in
                            {10258}let kb_115: mac_key = (if v_2296 then 2-proj-2-tuple(v_2295) else caught-fail) in
                            {10259}let es'_4: bitstring = (if v_2296 then 1-proj-2-tuple(v_2295) else caught-fail) in
                            {10260}let psk_data'_48: bitstring = (if v_2290 then psk_data_52 else (if v_2296 then (NoPsk,zero,es'_4,false) else fail-any)) in
                            {10262}let (x_725: bitstring,g_64: group) = o_kex_data_10 in
                            {10263}let (psk_offer_56: preSharedKey,id_offer_56: identityPsk,es_offer_56: bitstring,is_safe_offer_56: bool) = psk_data'_48 in
                            {10264}event Client_PSKOffer(id_client_5,psk_offer_56,id_offer_56,is_safe_offer_56);
                            {10265}event Client_Rand_client(id_client_5,o_cr_14);
                            {10266}event Client_DH_client(id_client_5,dh_pub(g_64,x_725));
                            {10267}event Client_server_domain(id_client_5,o_dom_8);
                            {10268}let SH(sr_67: bytes32,mode_64: params) = server_hello_8 in
                            {10269}event Client_Rand_server(id_client_5,sr_67);
                            {10270}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_64,gy_57: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_117: preSharedKeyExt) = mode_64 in
                            (
                                {10272}event Client_DH_server(id_client_5,gy_57);
                                {10273}let v_2297: bool = (psk_ext_117 = empty_psk_ext) in
                                {10274}let psk_259: preSharedKey = (if v_2297 then NoPsk else caught-fail) in
                                {10276}let k_233: bitstring = (if v_2297 then catch-fail(psk2b(psk_259)) else caught-fail) in
                                {10277}let v_2298: bool = not-caught-fail(k_233) in
                                {10275}let s_235: bitstring = (if v_2297 then zero else caught-fail) in
                                {10278}let early_secret_174: bitstring = (if v_2297 then catch-fail((if v_2298 then hmac(@8_tls_h,s_235,k_233) else fail-any)) else caught-fail) in
                                {10279}let v_2299: bool = not-caught-fail(early_secret_174) in
                                {10281}let m_230: bitstring = (if v_2299 then zero else caught-fail) in
                                {10282}let h_613: bitstring = (if v_2299 then catch-fail(hash(@8_tls_h,m_230)) else caught-fail) in
                                {10283}let v_2300: bool = not-caught-fail(h_613) in
                                {10280}let l_640: label = (if v_2299 then tls13_ext_res_binder else caught-fail) in
                                {10284}let x_726: bitstring = (if v_2300 then (l_640,h_613) else caught-fail) in
                                {10285}let binder_key_116: bitstring = (if v_2299 then catch-fail((if v_2300 then hmac(@8_tls_h,early_secret_174,x_726) else fail-any)) else caught-fail) in
                                {10286}let v_2301: bool = not-caught-fail(binder_key_116) in
                                {10287}let v_2302: bitstring = (if v_2297 then catch-fail((if v_2299 then (if v_2301 then (early_secret_174,binder_key_116) else fail-any) else fail-any)) else caught-fail) in
                                {10288}let v_2303: bool = (not-caught-fail(v_2302) && success?(1-proj-2-tuple(v_2302))) in
                                {10289}let kb_116: mac_key = (if v_2303 then 2-proj-2-tuple(v_2302) else caught-fail) in
                                {10290}let es_174: bitstring = (if v_2303 then 1-proj-2-tuple(v_2302) else caught-fail) in
                                {10291}let v_2304: bitstring = (if not(v_2297) then catch-fail(psk_data'_48) else caught-fail) in
                                {10292}let v_2305: bool = (not-caught-fail(v_2304) && success?(1-proj-4-tuple(v_2304))) in
                                {10293}let is_safe_104: bool = (if v_2305 then 4-proj-4-tuple(v_2304) else caught-fail) in
                                {10294}let es_175: bitstring = (if v_2305 then 3-proj-4-tuple(v_2304) else caught-fail) in
                                {10295}let id_118: identityPsk = (if v_2305 then 2-proj-4-tuple(v_2304) else caught-fail) in
                                {10296}let psk_260: preSharedKey = (if v_2305 then 1-proj-4-tuple(v_2304) else caught-fail) in
                                {10297}let (psk_261: preSharedKey,early_secret_175: bitstring,valid_56: bool,safe_psk_62: bool) = (if v_2297 then (if v_2303 then (NoPsk,es_174,true,false) else fail-any) else (if v_2305 then (psk_260,es_175,((psk_260 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_117)),is_safe_104) else fail-any)) in
                                {10298}event Client_PSKChoosen(id_client_5,psk_261,safe_psk_62);
                                {10299}if valid_56 then
                                (
                                    {10302}new s_236[]: seed;
                                    {10300}let gxy_114: element = catch-fail(dh_decap_fun(g_64,gy_57,x_725)) in
                                    {10301}let v_2306: bool = not-caught-fail(gxy_114) in
                                    {10303}let gxy_115: element = (if v_2306 then gxy_114 else dh_f(s_236)) in
                                    {10304}event Client_DH_gxy(id_client_5,gxy_115);
                                    {10306}let m_231: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                    {10307}let v_2307: bool = not-caught-fail(m_231) in
                                    {10308}let h_614: bitstring = (if v_2307 then catch-fail(hash(@8_tls_h,m_231)) else caught-fail) in
                                    {10309}let v_2308: bool = not-caught-fail(h_614) in
                                    {10305}let l_641: label = tls13_derived in
                                    {10310}let x_727: bitstring = (if v_2308 then (l_641,h_614) else caught-fail) in
                                    {10311}let extra_123: bitstring = catch-fail((if v_2307 then (if v_2308 then hmac(@8_tls_h,early_secret_175,x_727) else fail-any) else fail-any)) in
                                    {10312}let v_2309: bool = not-caught-fail(extra_123) in
                                    {10313}let handshake_secret_57: bitstring = (if v_2309 then hmac(@8_tls_h,extra_123,gxy_115) else fail-any) in
                                    {10315}let m_232: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                    {10316}let v_2310: bool = not-caught-fail(m_232) in
                                    {10317}let h_615: bitstring = (if v_2310 then catch-fail(hash(@8_tls_h,m_232)) else caught-fail) in
                                    {10318}let v_2311: bool = not-caught-fail(h_615) in
                                    {10314}let l_642: label = tls13_derived in
                                    {10319}let x_728: bitstring = (if v_2311 then (l_642,h_615) else caught-fail) in
                                    {10320}let extra_124: bitstring = catch-fail((if v_2310 then (if v_2311 then hmac(@8_tls_h,handshake_secret_57,x_728) else fail-any) else fail-any)) in
                                    {10321}let v_2312: bool = not-caught-fail(extra_124) in
                                    {10322}let k_234: bitstring = (if v_2312 then zero else caught-fail) in
                                    {10323}let master_secret_121: bitstring = (if v_2312 then catch-fail(hmac(@8_tls_h,handshake_secret_57,k_234)) else caught-fail) in
                                    {10324}let v_2313: bool = not-caught-fail(master_secret_121) in
                                    {10261}let cur_log_31: bitstring = (zero,o_client_hello_6) in
                                    {10271}let cur_log2_119: bitstring = (cur_log_31,server_hello_8) in
                                    {10326}let h_616: bitstring = (if v_2313 then catch-fail(hash(@8_tls_h,cur_log2_119)) else caught-fail) in
                                    {10327}let v_2314: bool = not-caught-fail(h_616) in
                                    {10325}let l_643: label = (if v_2313 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {10328}let x_729: bitstring = (if v_2314 then (l_643,h_616) else caught-fail) in
                                    {10329}let client_hts_57: bitstring = (if v_2313 then catch-fail((if v_2314 then hmac(@8_tls_h,handshake_secret_57,x_729) else fail-any)) else caught-fail) in
                                    {10330}let v_2315: bool = not-caught-fail(client_hts_57) in
                                    {10332}let h_617: bitstring = (if v_2315 then catch-fail(hash(@8_tls_h,cur_log2_119)) else caught-fail) in
                                    {10333}let v_2316: bool = not-caught-fail(h_617) in
                                    {10331}let l_644: label = (if v_2315 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {10334}let x_730: bitstring = (if v_2316 then (l_644,h_617) else caught-fail) in
                                    {10335}let server_hts_57: bitstring = (if v_2315 then catch-fail((if v_2316 then hmac(@8_tls_h,handshake_secret_57,x_730) else fail-any)) else caught-fail) in
                                    {10336}let v_2317: bool = not-caught-fail(server_hts_57) in
                                    {10338}let h_618: bitstring = (if v_2317 then zero else caught-fail) in
                                    {10337}let l_645: label = (if v_2317 then tls13_key else caught-fail) in
                                    {10339}let x_731: bitstring = (if v_2317 then (l_645,h_618) else caught-fail) in
                                    {10340}let client_wkh_57: bitstring = (if v_2317 then catch-fail(hmac(@8_tls_h,client_hts_57,x_731)) else caught-fail) in
                                    {10341}let v_2318: bool = not-caught-fail(client_wkh_57) in
                                    {10343}let h_619: bitstring = (if v_2318 then zero else caught-fail) in
                                    {10342}let l_646: label = (if v_2318 then tls13_key else caught-fail) in
                                    {10344}let x_732: bitstring = (if v_2318 then (l_646,h_619) else caught-fail) in
                                    {10345}let server_wkh_57: bitstring = (if v_2318 then catch-fail(hmac(@8_tls_h,server_hts_57,x_732)) else caught-fail) in
                                    {10346}let v_2319: bool = not-caught-fail(server_wkh_57) in
                                    {10348}let h_620: bitstring = (if v_2319 then zero else caught-fail) in
                                    {10347}let l_647: label = (if v_2319 then tls13_finished else caught-fail) in
                                    {10349}let x_733: bitstring = (if v_2319 then (l_647,h_620) else caught-fail) in
                                    {10350}let client_fk_57: bitstring = (if v_2319 then catch-fail(hmac(@8_tls_h,client_hts_57,x_733)) else caught-fail) in
                                    {10351}let v_2320: bool = not-caught-fail(client_fk_57) in
                                    {10353}let h_621: bitstring = (if v_2320 then zero else caught-fail) in
                                    {10352}let l_648: label = (if v_2320 then tls13_finished else caught-fail) in
                                    {10354}let x_734: bitstring = (if v_2320 then (l_648,h_621) else caught-fail) in
                                    {10355}let server_fk_57: bitstring = (if v_2320 then catch-fail(hmac(@8_tls_h,server_hts_57,x_734)) else caught-fail) in
                                    {10356}let v_2321: bool = not-caught-fail(server_fk_57) in
                                    {10357}let (master_secret_122: bitstring,chk_64: aead_key,shk_63: aead_key,cfin_64: mac_key,sfin_63: mac_key) = (if v_2312 then (if v_2313 then (if v_2315 then (if v_2317 then (if v_2318 then (if v_2319 then (if v_2320 then (if v_2321 then (master_secret_121,client_wkh_57,server_wkh_57,client_fk_57,server_fk_57) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {10358}event Client_chk(id_client_5,chk_64);
                                    {10359}event Client_shk(id_client_5,shk_63);
                                    {10360}event Client_cfin(id_client_5,cfin_64);
                                    {10361}event Client_sfin(id_client_5,sfin_63);
                                    {10362}in(io, enc_ee_msg_56: bitstring);
                                    {10363}let ee_msg_61: msg = aead_dec(@8_tls_a,shk_63,0,zero,enc_ee_msg_56) in
                                    {10364}let EE(ech_ee_56: echExt,extra_ee_56: extraExt) = ee_msg_61 in
                                    {10365}let cur_log2_120: bitstring = (cur_log2_119,ee_msg_61) in
                                    {10366}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(o_cr_14,sr_67,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_261,safe_psk_62,@8_comp_psk,master_secret_122,chk_64,0,shk_63,1,cfin_64,sfin_63,cur_log2_120)))
                                )
                                else
                                    {10367}out(io, illegal_parameter)
                            )
                            else
                                {10368}out(io, illegal_parameter)
                )
                else
                    {10369}out(io, unexpected_message)
            )
    )
    else
        {10371}let psk_262: preSharedKey = NoPsk in
        {10373}let k_235: bitstring = catch-fail(psk2b(psk_262)) in
        {10374}let v_2322: bool = not-caught-fail(k_235) in
        {10372}let s_237: bitstring = zero in
        {10375}let early_secret_176: bitstring = catch-fail((if v_2322 then hmac(h_psk_1,s_237,k_235) else fail-any)) in
        {10376}let v_2323: bool = not-caught-fail(early_secret_176) in
        {10378}let m_233: bitstring = (if v_2323 then zero else caught-fail) in
        {10379}let h_622: bitstring = (if v_2323 then catch-fail(hash(h_psk_1,m_233)) else caught-fail) in
        {10380}let v_2324: bool = not-caught-fail(h_622) in
        {10377}let l_649: label = (if v_2323 then tls13_ext_res_binder else caught-fail) in
        {10381}let x_735: bitstring = (if v_2324 then (l_649,h_622) else caught-fail) in
        {10382}let binder_key_117: bitstring = (if v_2323 then catch-fail((if v_2324 then hmac(h_psk_1,early_secret_176,x_735) else fail-any)) else caught-fail) in
        {10383}let v_2325: bool = not-caught-fail(binder_key_117) in
        {10384}let v_2326: bitstring = catch-fail((if v_2323 then (if v_2325 then (early_secret_176,binder_key_117) else fail-any) else fail-any)) in
        {10385}let v_2327: bool = (not-caught-fail(v_2326) && success?(1-proj-2-tuple(v_2326))) in
        {10386}let kb_117: mac_key = (if v_2327 then 2-proj-2-tuple(v_2326) else caught-fail) in
        {10387}let es_176: bitstring = (if v_2327 then 1-proj-2-tuple(v_2326) else caught-fail) in
        {10388}let v_2328: bitstring = catch-fail((if v_2327 then (empty_psk_ext,(NoPsk,zero,es_176,false)) else fail-any)) in
        {10389}let v_2329: bool = (not-caught-fail(v_2328) && success?(1-proj-2-tuple(v_2328))) in
        {10390}let psk_data_60: bitstring = (if v_2329 then 2-proj-2-tuple(v_2328) else caught-fail) in
        {10391}let psk_ext_118: preSharedKeyExt = (if v_2329 then 1-proj-2-tuple(v_2328) else caught-fail) in
        {10396}new fake_id_25[]: identityPsk;
        {10397}new fake_binder_25[]: bitstring;
        {10394}let v_2330: bool = (if v_2329 then catch-fail(@8_use_grease) else caught-fail) in
        {10403}let v_2331: hpkeContext = (if is-false(v_2330) then catch-fail(context_2) else caught-fail) in
        {10404}let v_2332: bool = (not-caught-fail(v_2331) && ((S =nf 1-proj-hpke_context(v_2331)) && success?(1-proj-hpke_context(v_2331)))) in
        {10405}let base_nonce_25: bitstring = (if v_2332 then 3-proj-hpke_context(v_2331) else caught-fail) in
        {10406}let key_25: aead_key = (if v_2332 then 2-proj-hpke_context(v_2331) else caught-fail) in
        {10402}let n_22: nat = (if is-false(v_2330) then 1 else caught-fail) in
        {10399}let o_ech_ext_ADD_20: echExt = (if is-false(v_2330) then ECHClientHelloOuter(ech_h_13,ech_a_13,config_id_13,enc_6,zero) else caught-fail) in
        {10398}let o_psk_ext_25: preSharedKeyExt = (if is-false(v_2330) then (if @8_use_psk then client_psk_ext(fake_id_25,fake_binder_25) else empty_psk_ext) else caught-fail) in
        {10400}let o_offer_ADD_20: params = (if is-false(v_2330) then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),o_ech_ext_ADD_20,empty_extra_ext,o_psk_ext_25) else caught-fail) in
        {10401}let o_client_hello_ADD_20: msg = (if is-false(v_2330) then CH(o_cr_10,o_offer_ADD_20) else caught-fail) in
        {10392}let i_offer_20: params = (if v_2329 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_5,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_118) else caught-fail) in
        {10393}let i_client_hello_26: msg = (if v_2329 then CH(i_cr_8,i_offer_20) else caught-fail) in
        {10407}let payload_26: bitstring = (if is-false(v_2330) then catch-fail((if v_2332 then aead_enc(ech_a_13,key_25,(base_nonce_25,n_22),o_client_hello_ADD_20,i_client_hello_26) else fail-any)) else caught-fail) in
        {10408}let v_2333: bool = not-caught-fail(payload_26) in
        {10409}let o_ech_ext_25: echExt = (if v_2333 then ECHClientHelloOuter(ech_h_13,ech_a_13,config_id_13,enc_6,payload_26) else caught-fail) in
        {10410}let o_offer_46: params = (if v_2333 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),o_ech_ext_25,empty_extra_ext,o_psk_ext_25) else caught-fail) in
        {10395}let o_offer_45: params = (if v_2330 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_7,SNI(o_dom_9),ech_inner_or_grease_1,empty_extra_ext,psk_ext_118) else caught-fail) in
        {10411}let (o_client_hello_7: msg,i_client_hello_27: msg,o_cr_17: bytes32,i_cr_13: bytes32,o_kex_data_12: bitstring,i_kex_data_12: bitstring,o_psk_ext_26: preSharedKeyExt,psk_data_61: bitstring,o_ech_ext_26: echExt) = (if v_2329 then (if undo-catch-fail(v_2330) then (CH(o_cr_10,o_offer_45),CH(o_cr_10,o_offer_45),o_cr_10,o_cr_10,o_kex_data_7,o_kex_data_7,psk_ext_118,psk_data_60,ech_inner_or_grease_1) else (if v_2333 then (CH(o_cr_10,o_offer_46),i_client_hello_26,o_cr_10,i_cr_8,o_kex_data_7,i_kex_data_7,o_psk_ext_25,psk_data_60,o_ech_ext_25) else fail-any)) else fail-any) in
        {10412}out(io, o_client_hello_7);
        {10413}let (psk_263: preSharedKey,id_119: identityPsk,es_177: bitstring,safe_5: bool) = psk_data_61 in
        (
            {10414}if (false && (not(@8_use_grease) && (psk_263 ≠ NoPsk))) then
            {10415}let client_hello_12: bitstring = (zero,i_client_hello_27) in
            {10417}let h_623: bitstring = catch-fail(hash(@8_backend_h,client_hello_12)) in
            {10418}let v_2334: bool = not-caught-fail(h_623) in
            {10416}let l_650: label = tls13_client_early_traffic_secret in
            {10419}let x_736: bitstring = (if v_2334 then (l_650,h_623) else caught-fail) in
            {10420}let atsc0_9: bitstring = catch-fail((if v_2334 then hmac(@8_backend_h,es_177,x_736) else fail-any)) in
            {10421}let v_2335: bool = not-caught-fail(atsc0_9) in
            {10423}let h_624: bitstring = (if v_2335 then zero else caught-fail) in
            {10422}let l_651: label = (if v_2335 then tls13_key else caught-fail) in
            {10424}let x_737: bitstring = (if v_2335 then (l_651,h_624) else caught-fail) in
            {10425}let kc0_9: bitstring = (if v_2335 then catch-fail(hmac(@8_backend_h,atsc0_9,x_737)) else caught-fail) in
            {10426}let v_2336: bool = not-caught-fail(kc0_9) in
            {10428}let h_625: bitstring = (if v_2336 then catch-fail(hash(@8_backend_h,client_hello_12)) else caught-fail) in
            {10429}let v_2337: bool = not-caught-fail(h_625) in
            {10427}let l_652: label = (if v_2336 then tls13_early_exporter_master_secret else caught-fail) in
            {10430}let x_738: bitstring = (if v_2337 then (l_652,h_625) else caught-fail) in
            {10431}let ems0_18: bitstring = (if v_2336 then catch-fail((if v_2337 then hmac(@8_backend_h,es_177,x_738) else fail-any)) else caught-fail) in
            {10432}let v_2338: bool = not-caught-fail(ems0_18) in
            {10433}let (wkc0_9: aead_key,ems0_19: bitstring) = (if v_2335 then (if v_2336 then (if v_2338 then (kc0_9,ems0_18) else fail-any) else fail-any) else fail-any) in
            {10434}!
            {10435}in(io, (i_9: nat,ad_9: bitstring));
            {10436}if is_nat(i_9) then
            {10437}new msg_ed_8[]: bitstring;
            {10439}new st_18: stamp;
            {10440}event ClientSequenceClient0RTTDataWriteKey(id_client_5,st_18,i_9);
            {10441}event ClientSends0(id_client_5,i_cr_13,psk_263,i_9,ad_9,msg_ed_8);
            {10438}let enc_ed_8: bitstring = aead_enc(@8_backend_a,wkc0_9,i_9,ad_9,msg_ed_8) in
            {10442}out(io, enc_ed_8)
        ) | (
            {10443}in(io, server_hello_9: msg);
            {10444}let SH(B32(sr24_7: bytes24,sr8_26: bytes8),mode_65: params) = server_hello_9 in
            (
                {10445}if (false && (B32(sr24_7,sr8_26) = B32(HRR24,HRR8))) then
                (
                    {10446}if (send_kex_5 ≠ true) then
                    {10447}let nego(=TLS13,h_alg_20: hash_alg,a_alg_18: aead_alg,hrr_kex_ext(g_65: group),=empty_sni_ext,ech_ext_23: echExt,=empty_extra_ext,=empty_psk_ext) = mode_65 in
                    {10448}let v_2339: bool = (ech_ext_23 = empty_ech_ext) in
                    {10449}let hrr_mode_10: params = (if not(v_2339) then nego(TLS13,@8_backend_h,@8_backend_a,hrr_kex_ext(@8_backend_g),empty_sni_ext,ECHHelloRetryRequest(zero8),empty_extra_ext,empty_psk_ext) else caught-fail) in
                    {10450}let hrr_6: msg = (if not(v_2339) then SH(B32(HRR24,HRR8),hrr_mode_10) else caught-fail) in
                    {10451}let cur_log_32: bitstring = (if not(v_2339) then ((zero,i_client_hello_27),hrr_6) else caught-fail) in
                    {10452}let transcript_hrr_ech_conf_6: bitstring = (if not(v_2339) then catch-fail(hash(@8_backend_h,cur_log_32)) else caught-fail) in
                    {10453}let v_2340: bool = not-caught-fail(transcript_hrr_ech_conf_6) in
                    {10455}let k_236: bitstring = (if v_2340 then catch-fail(b32_2_b(get_random(i_client_hello_27))) else caught-fail) in
                    {10456}let v_2341: bool = not-caught-fail(k_236) in
                    {10454}let s_238: bitstring = (if v_2340 then zero else caught-fail) in
                    {10457}let k_237: bitstring = (if v_2340 then catch-fail((if v_2341 then hmac(@8_backend_h,s_238,k_236) else fail-any)) else caught-fail) in
                    {10458}let v_2342: bool = not-caught-fail(k_237) in
                    {10459}let l_653: label = (if v_2342 then hrr_ech_accept_confirmation else caught-fail) in
                    {10460}let x_739: bitstring = (if v_2342 then (l_653,cur_log_32) else caught-fail) in
                    {10461}let is_ech_accepted_5: bool = (if v_2339 then false else (if (ech_ext_23 = ECHHelloRetryRequest((if v_2340 then crop_into_bytes8((if v_2342 then hmac(@8_backend_h,k_237,x_739) else fail-any)) else fail-any))) then true else false)) in
                    {10462}event ClientEchAcceptance(id_client_5,is_ech_accepted_5);
                    {10463}if is_ech_accepted_5 then
                    (
                        {10465}let ech_config(config_id_18: configId,ech_g_18: group,pkR_20: element,o_dom_14: domain,ech_h_18: hash_alg,ech_a_18: aead_alg) = ech_conf_2 in
                        {10467}new s_239[]: seed;
                        {10468}let gx_55: element = dh_pub(@8_backend_g,dh_k(s_239)) in
                        {10469}let v_2343: bitstring = (dh_k(s_239),gx_55) in
                        {10470}let v_2344: bool = success?(1-proj-2-tuple(v_2343)) in
                        {10471}let gx_56: element = (if v_2344 then 2-proj-2-tuple(v_2343) else caught-fail) in
                        {10472}let x_740: bitstring = (if v_2344 then 1-proj-2-tuple(v_2343) else caught-fail) in
                        {10466}let send_key_share_15: bool = true in
                        {10473}let kex_23: kex_alg = (if v_2344 then (if send_key_share_15 then DHE_kex(@8_backend_g,gx_56) else DHE_group(@8_backend_g)) else caught-fail) in
                        {10474}let (i_kex_ext_8: keyShareExt,i_kex_data_13: bitstring) = (if v_2344 then (client_kex_ext(kex_23),(x_740,@8_backend_g)) else fail-any) in
                        {10476}new s_240[]: seed;
                        {10477}let gx_57: element = dh_pub(@8_tls_g,dh_k(s_240)) in
                        {10478}let v_2345: bitstring = (dh_k(s_240),gx_57) in
                        {10479}let v_2346: bool = success?(1-proj-2-tuple(v_2345)) in
                        {10480}let gx_58: element = (if v_2346 then 2-proj-2-tuple(v_2345) else caught-fail) in
                        {10481}let x_741: bitstring = (if v_2346 then 1-proj-2-tuple(v_2345) else caught-fail) in
                        {10475}let send_key_share_16: bool = true in
                        {10482}let kex_24: kex_alg = (if v_2346 then (if send_key_share_16 then DHE_kex(@8_tls_g,gx_58) else DHE_group(@8_tls_g)) else caught-fail) in
                        {10483}let (o_kex_ext_12: keyShareExt,o_kex_data_13: bitstring) = (if v_2346 then (client_kex_ext(kex_24),(x_741,@8_tls_g)) else fail-any) in
                        {10484}new rand24_24[]: bytes24;
                        {10485}new rand8_24[]: bytes8;
                        {10487}new rand24_25[]: bytes24;
                        {10488}new rand8_25[]: bytes8;
                        {10489}let o_cr_18: bytes32 = B32(rand24_25,rand8_25) in
                        {10486}let i_cr_14: bytes32 = B32(rand24_24,rand8_24) in
                        {10464}let cur_log_IN1_HRR_5: bitstring = ((zero,i_client_hello_27),server_hello_9) in
                        {10491}if @8_use_psk then
                        (
                            {10490}let ech_ext_24: echExt = ECHClientHelloInner in
                            {10492}let (psk_264: preSharedKey,id_120: identityPsk,old_es_16: bitstring,is_safe_105: bool) = psk_data_61 in
                            (
                                {10496}let k_238: bitstring = catch-fail(psk2b(psk_264)) in
                                {10497}let v_2347: bool = not-caught-fail(k_238) in
                                {10495}let s_241: bitstring = zero in
                                {10498}let early_secret_177: bitstring = catch-fail((if v_2347 then hmac(@8_backend_h,s_241,k_238) else fail-any)) in
                                {10499}let v_2348: bool = not-caught-fail(early_secret_177) in
                                {10501}let m_234: bitstring = (if v_2348 then zero else caught-fail) in
                                {10502}let h_626: bitstring = (if v_2348 then catch-fail(hash(@8_backend_h,m_234)) else caught-fail) in
                                {10503}let v_2349: bool = not-caught-fail(h_626) in
                                {10500}let l_654: label = (if v_2348 then tls13_ext_res_binder else caught-fail) in
                                {10504}let x_742: bitstring = (if v_2349 then (l_654,h_626) else caught-fail) in
                                {10505}let binder_key_118: bitstring = (if v_2348 then catch-fail((if v_2349 then hmac(@8_backend_h,early_secret_177,x_742) else fail-any)) else caught-fail) in
                                {10506}let v_2350: bool = not-caught-fail(binder_key_118) in
                                {10507}let v_2351: bitstring = catch-fail((if v_2348 then (if v_2350 then (early_secret_177,binder_key_118) else fail-any) else fail-any)) in
                                {10508}let v_2352: bool = (not-caught-fail(v_2351) && success?(1-proj-2-tuple(v_2351))) in
                                {10509}let kb_118: mac_key = (if v_2352 then 2-proj-2-tuple(v_2351) else caught-fail) in
                                {10510}let es_178: bitstring = (if v_2352 then 1-proj-2-tuple(v_2351) else caught-fail) in
                                {10493}let offer_46: params = nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_8,SNI(backend_dom_1),ech_ext_24,@8_i_extra_ext,trunc_client_psk_ext(id_120)) in
                                {10494}let cur_log'_34: bitstring = (cur_log_IN1_HRR_5,CH(i_cr_14,offer_46)) in
                                {10511}let binders_33: bitstring = (if v_2352 then catch-fail(hmac(@8_backend_h,kb_118,cur_log'_34)) else caught-fail) in
                                {10512}let v_2353: bool = not-caught-fail(binders_33) in
                                {10513}let v_2354: bitstring = catch-fail((if v_2352 then (if v_2353 then (client_psk_ext(id_120,binders_33),(psk_264,id_120,es_178,is_safe_105)) else fail-any) else fail-any)) in
                                {10514}let v_2355: bool = (not-caught-fail(v_2354) && success?(1-proj-2-tuple(v_2354))) in
                                {10515}let psk_data_62: bitstring = (if v_2355 then 2-proj-2-tuple(v_2354) else caught-fail) in
                                {10516}let psk_ext_119: preSharedKeyExt = (if v_2355 then 1-proj-2-tuple(v_2354) else caught-fail) in
                                {10519}new fake_id_26[]: identityPsk;
                                {10520}new fake_binder_26[]: bitstring;
                                {10526}let v_2356: hpkeContext = (if v_2355 then catch-fail(context_2) else caught-fail) in
                                {10527}let v_2357: bool = (not-caught-fail(v_2356) && ((S =nf 1-proj-hpke_context(v_2356)) && success?(1-proj-hpke_context(v_2356)))) in
                                {10528}let base_nonce_26: bitstring = (if v_2357 then 3-proj-hpke_context(v_2356) else caught-fail) in
                                {10529}let key_26: aead_key = (if v_2357 then 2-proj-hpke_context(v_2356) else caught-fail) in
                                {10525}let n_23: nat = (if v_2355 then 2 else caught-fail) in
                                {10522}let o_ech_ext_ADD_21: echExt = (if v_2355 then ECHClientHelloOuter(ech_h_18,ech_a_18,config_id_18,zero,zero) else caught-fail) in
                                {10521}let o_psk_ext_27: preSharedKeyExt = (if v_2355 then (if @8_use_psk then client_psk_ext(fake_id_26,fake_binder_26) else empty_psk_ext) else caught-fail) in
                                {10523}let o_offer_ADD_21: params = (if v_2355 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_12,SNI(o_dom_14),o_ech_ext_ADD_21,empty_extra_ext,o_psk_ext_27) else caught-fail) in
                                {10524}let o_client_hello_ADD_21: msg = (if v_2355 then CH(o_cr_18,o_offer_ADD_21) else caught-fail) in
                                {10517}let i_offer_21: params = (if v_2355 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_8,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_119) else caught-fail) in
                                {10518}let i_client_hello_28: msg = (if v_2355 then CH(i_cr_14,i_offer_21) else caught-fail) in
                                {10530}let payload_27: bitstring = (if v_2355 then catch-fail((if v_2357 then aead_enc(ech_a_18,key_26,(base_nonce_26,n_23),o_client_hello_ADD_21,i_client_hello_28) else fail-any)) else caught-fail) in
                                {10531}let v_2358: bool = not-caught-fail(payload_27) in
                                {10532}let o_ech_ext_27: echExt = (if v_2358 then ECHClientHelloOuter(ech_h_18,ech_a_18,config_id_18,zero,payload_27) else caught-fail) in
                                {10533}let o_offer_47: params = (if v_2358 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_12,SNI(o_dom_14),o_ech_ext_27,empty_extra_ext,o_psk_ext_27) else caught-fail) in
                                {10534}let (o_client_hello'_15: msg,i_client_hello'_16: msg,i_cr'_15: bytes32,i_kex_data'_15: bitstring,psk_data'_49: bitstring) = (if v_2355 then (if v_2358 then (CH(o_cr_18,o_offer_47),i_client_hello_28,i_cr_14,i_kex_data_13,psk_data_62) else fail-any) else fail-any) in
                                {10535}out(io, o_client_hello'_15);
                                {10536}in(io, server_hello'_44: msg);
                                {10537}let SH(B32(sr24'_15: bytes24,sr8'_15: bytes8),params'_15: params) = server_hello'_44 in
                                {10539}let sh_modified_21: msg = SH(B32(sr24'_15,zero8),params'_15) in
                                {10538}let cur_log_IN1_HRR_IN2_15: bitstring = (cur_log_IN1_HRR_5,i_client_hello'_16) in
                                {10540}let cur_log_sh_21: bitstring = (cur_log_IN1_HRR_IN2_15,sh_modified_21) in
                                {10541}let transcript_ech_conf_21: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_21)) in
                                {10542}let v_2359: bool = not-caught-fail(transcript_ech_conf_21) in
                                {10544}let k_239: bitstring = (if v_2359 then catch-fail(b32_2_b(get_random(i_client_hello'_16))) else caught-fail) in
                                {10545}let v_2360: bool = not-caught-fail(k_239) in
                                {10543}let s_242: bitstring = (if v_2359 then zero else caught-fail) in
                                {10546}let k_240: bitstring = (if v_2359 then catch-fail((if v_2360 then hmac(@8_backend_h,s_242,k_239) else fail-any)) else caught-fail) in
                                {10547}let v_2361: bool = not-caught-fail(k_240) in
                                {10548}let l_655: label = (if v_2361 then ech_accept_confirmation else caught-fail) in
                                {10549}let x_743: bitstring = (if v_2361 then (l_655,cur_log_sh_21) else caught-fail) in
                                {10550}let sr8_27: bytes8 = (if v_2359 then catch-fail(crop_into_bytes8((if v_2361 then hmac(@8_backend_h,k_240,x_743) else fail-any))) else caught-fail) in
                                {10551}let v_2362: bool = not-caught-fail(sr8_27) in
                                {10552}if (B32(sr24'_15,sr8'_15) = (if v_2359 then (if v_2362 then B32(sr24'_15,sr8_27) else fail-any) else fail-any)) then
                                {10553}let (x_744: bitstring,g_66: group) = i_kex_data'_15 in
                                {10554}let (psk_offer_57: preSharedKey,id_offer_57: identityPsk,es_offer_57: bitstring,is_safe_offer_57: bool) = psk_data'_49 in
                                {10555}event Client_PSKOffer(id_client_5,psk_offer_57,id_offer_57,is_safe_offer_57);
                                {10556}event Client_Rand_client(id_client_5,i_cr'_15);
                                {10557}event Client_DH_client(id_client_5,dh_pub(g_66,x_744));
                                {10558}event Client_server_domain(id_client_5,backend_dom_1);
                                {10559}let SH(sr_68: bytes32,mode_66: params) = server_hello'_44 in
                                {10560}event Client_Rand_server(id_client_5,sr_68);
                                {10561}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_66,gy_58: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_120: preSharedKeyExt) = mode_66 in
                                (
                                    {10563}event Client_DH_server(id_client_5,gy_58);
                                    {10564}let v_2363: bool = (psk_ext_120 = empty_psk_ext) in
                                    {10565}let psk_265: preSharedKey = (if v_2363 then NoPsk else caught-fail) in
                                    {10567}let k_241: bitstring = (if v_2363 then catch-fail(psk2b(psk_265)) else caught-fail) in
                                    {10568}let v_2364: bool = not-caught-fail(k_241) in
                                    {10566}let s_243: bitstring = (if v_2363 then zero else caught-fail) in
                                    {10569}let early_secret_178: bitstring = (if v_2363 then catch-fail((if v_2364 then hmac(@8_backend_h,s_243,k_241) else fail-any)) else caught-fail) in
                                    {10570}let v_2365: bool = not-caught-fail(early_secret_178) in
                                    {10572}let m_235: bitstring = (if v_2365 then zero else caught-fail) in
                                    {10573}let h_627: bitstring = (if v_2365 then catch-fail(hash(@8_backend_h,m_235)) else caught-fail) in
                                    {10574}let v_2366: bool = not-caught-fail(h_627) in
                                    {10571}let l_656: label = (if v_2365 then tls13_ext_res_binder else caught-fail) in
                                    {10575}let x_745: bitstring = (if v_2366 then (l_656,h_627) else caught-fail) in
                                    {10576}let binder_key_119: bitstring = (if v_2365 then catch-fail((if v_2366 then hmac(@8_backend_h,early_secret_178,x_745) else fail-any)) else caught-fail) in
                                    {10577}let v_2367: bool = not-caught-fail(binder_key_119) in
                                    {10578}let v_2368: bitstring = (if v_2363 then catch-fail((if v_2365 then (if v_2367 then (early_secret_178,binder_key_119) else fail-any) else fail-any)) else caught-fail) in
                                    {10579}let v_2369: bool = (not-caught-fail(v_2368) && success?(1-proj-2-tuple(v_2368))) in
                                    {10580}let kb_119: mac_key = (if v_2369 then 2-proj-2-tuple(v_2368) else caught-fail) in
                                    {10581}let es_179: bitstring = (if v_2369 then 1-proj-2-tuple(v_2368) else caught-fail) in
                                    {10582}let v_2370: bitstring = (if not(v_2363) then catch-fail(psk_data'_49) else caught-fail) in
                                    {10583}let v_2371: bool = (not-caught-fail(v_2370) && success?(1-proj-4-tuple(v_2370))) in
                                    {10584}let is_safe_106: bool = (if v_2371 then 4-proj-4-tuple(v_2370) else caught-fail) in
                                    {10585}let es_180: bitstring = (if v_2371 then 3-proj-4-tuple(v_2370) else caught-fail) in
                                    {10586}let id_121: identityPsk = (if v_2371 then 2-proj-4-tuple(v_2370) else caught-fail) in
                                    {10587}let psk_266: preSharedKey = (if v_2371 then 1-proj-4-tuple(v_2370) else caught-fail) in
                                    {10588}let (psk_267: preSharedKey,early_secret_179: bitstring,valid_57: bool,safe_psk_63: bool) = (if v_2363 then (if v_2369 then (NoPsk,es_179,true,false) else fail-any) else (if v_2371 then (psk_266,es_180,((psk_266 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_120)),is_safe_106) else fail-any)) in
                                    {10589}event Client_PSKChoosen(id_client_5,psk_267,safe_psk_63);
                                    {10590}if valid_57 then
                                    (
                                        {10593}new s_244[]: seed;
                                        {10591}let gxy_116: element = catch-fail(dh_decap_fun(g_66,gy_58,x_744)) in
                                        {10592}let v_2372: bool = not-caught-fail(gxy_116) in
                                        {10594}let gxy_117: element = (if v_2372 then gxy_116 else dh_f(s_244)) in
                                        {10595}event Client_DH_gxy(id_client_5,gxy_117);
                                        {10597}let m_236: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {10598}let v_2373: bool = not-caught-fail(m_236) in
                                        {10599}let h_628: bitstring = (if v_2373 then catch-fail(hash(@8_backend_h,m_236)) else caught-fail) in
                                        {10600}let v_2374: bool = not-caught-fail(h_628) in
                                        {10596}let l_657: label = tls13_derived in
                                        {10601}let x_746: bitstring = (if v_2374 then (l_657,h_628) else caught-fail) in
                                        {10602}let extra_125: bitstring = catch-fail((if v_2373 then (if v_2374 then hmac(@8_backend_h,early_secret_179,x_746) else fail-any) else fail-any)) in
                                        {10603}let v_2375: bool = not-caught-fail(extra_125) in
                                        {10604}let handshake_secret_58: bitstring = (if v_2375 then hmac(@8_backend_h,extra_125,gxy_117) else fail-any) in
                                        {10606}let m_237: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {10607}let v_2376: bool = not-caught-fail(m_237) in
                                        {10608}let h_629: bitstring = (if v_2376 then catch-fail(hash(@8_backend_h,m_237)) else caught-fail) in
                                        {10609}let v_2377: bool = not-caught-fail(h_629) in
                                        {10605}let l_658: label = tls13_derived in
                                        {10610}let x_747: bitstring = (if v_2377 then (l_658,h_629) else caught-fail) in
                                        {10611}let extra_126: bitstring = catch-fail((if v_2376 then (if v_2377 then hmac(@8_backend_h,handshake_secret_58,x_747) else fail-any) else fail-any)) in
                                        {10612}let v_2378: bool = not-caught-fail(extra_126) in
                                        {10613}let k_242: bitstring = (if v_2378 then zero else caught-fail) in
                                        {10614}let master_secret_123: bitstring = (if v_2378 then catch-fail(hmac(@8_backend_h,handshake_secret_58,k_242)) else caught-fail) in
                                        {10615}let v_2379: bool = not-caught-fail(master_secret_123) in
                                        {10562}let cur_log2_121: bitstring = (cur_log_IN1_HRR_IN2_15,server_hello'_44) in
                                        {10617}let h_630: bitstring = (if v_2379 then catch-fail(hash(@8_backend_h,cur_log2_121)) else caught-fail) in
                                        {10618}let v_2380: bool = not-caught-fail(h_630) in
                                        {10616}let l_659: label = (if v_2379 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {10619}let x_748: bitstring = (if v_2380 then (l_659,h_630) else caught-fail) in
                                        {10620}let client_hts_58: bitstring = (if v_2379 then catch-fail((if v_2380 then hmac(@8_backend_h,handshake_secret_58,x_748) else fail-any)) else caught-fail) in
                                        {10621}let v_2381: bool = not-caught-fail(client_hts_58) in
                                        {10623}let h_631: bitstring = (if v_2381 then catch-fail(hash(@8_backend_h,cur_log2_121)) else caught-fail) in
                                        {10624}let v_2382: bool = not-caught-fail(h_631) in
                                        {10622}let l_660: label = (if v_2381 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {10625}let x_749: bitstring = (if v_2382 then (l_660,h_631) else caught-fail) in
                                        {10626}let server_hts_58: bitstring = (if v_2381 then catch-fail((if v_2382 then hmac(@8_backend_h,handshake_secret_58,x_749) else fail-any)) else caught-fail) in
                                        {10627}let v_2383: bool = not-caught-fail(server_hts_58) in
                                        {10629}let h_632: bitstring = (if v_2383 then zero else caught-fail) in
                                        {10628}let l_661: label = (if v_2383 then tls13_key else caught-fail) in
                                        {10630}let x_750: bitstring = (if v_2383 then (l_661,h_632) else caught-fail) in
                                        {10631}let client_wkh_58: bitstring = (if v_2383 then catch-fail(hmac(@8_backend_h,client_hts_58,x_750)) else caught-fail) in
                                        {10632}let v_2384: bool = not-caught-fail(client_wkh_58) in
                                        {10634}let h_633: bitstring = (if v_2384 then zero else caught-fail) in
                                        {10633}let l_662: label = (if v_2384 then tls13_key else caught-fail) in
                                        {10635}let x_751: bitstring = (if v_2384 then (l_662,h_633) else caught-fail) in
                                        {10636}let server_wkh_58: bitstring = (if v_2384 then catch-fail(hmac(@8_backend_h,server_hts_58,x_751)) else caught-fail) in
                                        {10637}let v_2385: bool = not-caught-fail(server_wkh_58) in
                                        {10639}let h_634: bitstring = (if v_2385 then zero else caught-fail) in
                                        {10638}let l_663: label = (if v_2385 then tls13_finished else caught-fail) in
                                        {10640}let x_752: bitstring = (if v_2385 then (l_663,h_634) else caught-fail) in
                                        {10641}let client_fk_58: bitstring = (if v_2385 then catch-fail(hmac(@8_backend_h,client_hts_58,x_752)) else caught-fail) in
                                        {10642}let v_2386: bool = not-caught-fail(client_fk_58) in
                                        {10644}let h_635: bitstring = (if v_2386 then zero else caught-fail) in
                                        {10643}let l_664: label = (if v_2386 then tls13_finished else caught-fail) in
                                        {10645}let x_753: bitstring = (if v_2386 then (l_664,h_635) else caught-fail) in
                                        {10646}let server_fk_58: bitstring = (if v_2386 then catch-fail(hmac(@8_backend_h,server_hts_58,x_753)) else caught-fail) in
                                        {10647}let v_2387: bool = not-caught-fail(server_fk_58) in
                                        {10648}let (master_secret_124: bitstring,chk_65: aead_key,shk_64: aead_key,cfin_65: mac_key,sfin_64: mac_key) = (if v_2378 then (if v_2379 then (if v_2381 then (if v_2383 then (if v_2384 then (if v_2385 then (if v_2386 then (if v_2387 then (master_secret_123,client_wkh_58,server_wkh_58,client_fk_58,server_fk_58) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {10649}event Client_chk(id_client_5,chk_65);
                                        {10650}event Client_shk(id_client_5,shk_64);
                                        {10651}event Client_cfin(id_client_5,cfin_65);
                                        {10652}event Client_sfin(id_client_5,sfin_64);
                                        {10653}in(io, enc_ee_msg_57: bitstring);
                                        {10654}let ee_msg_62: msg = aead_dec(@8_backend_a,shk_64,0,zero,enc_ee_msg_57) in
                                        {10655}let EE(ech_ee_57: echExt,extra_ee_57: extraExt) = ee_msg_62 in
                                        {10656}let cur_log2_122: bitstring = (cur_log2_121,ee_msg_62) in
                                        {10657}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_15,sr_68,@8_backend_h,@8_backend_a,c_dom_7,backend_dom_1,psk_267,safe_psk_63,@8_comp_psk,master_secret_124,chk_65,0,shk_64,1,cfin_65,sfin_64,cur_log2_122)))
                                    )
                                    else
                                        {10658}out(io, illegal_parameter)
                                )
                                else
                                    {10659}out(io, illegal_parameter)
                            )
                            else
                                {10836}get pre_shared_keys(c_dom'_18: domain,=backend_dom_1,=@8_backend_h,id_122: identityPsk,psk_268: preSharedKey,idP_20: idProc,is_safe_107: bool) in
                                {10660}event Selected_one_time_used_psk(id_client_5,psk_268,is_safe_107);
                                {10661}event Selected_psk(c_dom_7,c_dom'_18,idP_20,is_safe_107);
                                {10662}event Selected_psk_no_missmatch(id_client_5,backend_dom_1,@8_backend_h,psk_268,id_122);
                                {10663}event Selected_psk_with_ID(c_dom_7,c_dom'_18,id_122,idP_20,is_safe_107);
                                {10664}let v_2388: bitstring = (id_122,psk_268,is_safe_107) in
                                {10665}let v_2389: bool = success?(1-proj-3-tuple(v_2388)) in
                                {10666}let is_safe_108: bool = (if v_2389 then 3-proj-3-tuple(v_2388) else caught-fail) in
                                {10667}let psk_269: preSharedKey = (if v_2389 then 2-proj-3-tuple(v_2388) else caught-fail) in
                                {10668}let id_123: identityPsk = (if v_2389 then 1-proj-3-tuple(v_2388) else caught-fail) in
                                {10672}let k_243: bitstring = (if v_2389 then catch-fail(psk2b(psk_269)) else caught-fail) in
                                {10673}let v_2390: bool = not-caught-fail(k_243) in
                                {10671}let s_245: bitstring = (if v_2389 then zero else caught-fail) in
                                {10674}let early_secret_180: bitstring = (if v_2389 then catch-fail((if v_2390 then hmac(@8_backend_h,s_245,k_243) else fail-any)) else caught-fail) in
                                {10675}let v_2391: bool = not-caught-fail(early_secret_180) in
                                {10677}let m_238: bitstring = (if v_2391 then zero else caught-fail) in
                                {10678}let h_636: bitstring = (if v_2391 then catch-fail(hash(@8_backend_h,m_238)) else caught-fail) in
                                {10679}let v_2392: bool = not-caught-fail(h_636) in
                                {10676}let l_665: label = (if v_2391 then tls13_ext_res_binder else caught-fail) in
                                {10680}let x_754: bitstring = (if v_2392 then (l_665,h_636) else caught-fail) in
                                {10681}let binder_key_120: bitstring = (if v_2391 then catch-fail((if v_2392 then hmac(@8_backend_h,early_secret_180,x_754) else fail-any)) else caught-fail) in
                                {10682}let v_2393: bool = not-caught-fail(binder_key_120) in
                                {10683}let v_2394: bitstring = (if v_2389 then catch-fail((if v_2391 then (if v_2393 then (early_secret_180,binder_key_120) else fail-any) else fail-any)) else caught-fail) in
                                {10684}let v_2395: bool = (not-caught-fail(v_2394) && success?(1-proj-2-tuple(v_2394))) in
                                {10685}let kb_120: mac_key = (if v_2395 then 2-proj-2-tuple(v_2394) else caught-fail) in
                                {10686}let es_181: bitstring = (if v_2395 then 1-proj-2-tuple(v_2394) else caught-fail) in
                                {10669}let offer_47: params = (if v_2389 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_8,SNI(backend_dom_1),ech_ext_24,@8_i_extra_ext,trunc_client_psk_ext(id_123)) else caught-fail) in
                                {10670}let cur_log'_35: bitstring = (if v_2389 then (cur_log_IN1_HRR_5,CH(i_cr_14,offer_47)) else caught-fail) in
                                {10687}let binders_34: bitstring = (if v_2395 then catch-fail(hmac(@8_backend_h,kb_120,cur_log'_35)) else caught-fail) in
                                {10688}let v_2396: bool = not-caught-fail(binders_34) in
                                {10689}let v_2397: bitstring = catch-fail((if v_2389 then (if v_2395 then (if v_2396 then (client_psk_ext(id_123,binders_34),(psk_269,id_123,es_181,is_safe_108)) else fail-any) else fail-any) else fail-any)) in
                                {10690}let v_2398: bool = (not-caught-fail(v_2397) && success?(1-proj-2-tuple(v_2397))) in
                                {10691}let psk_data_63: bitstring = (if v_2398 then 2-proj-2-tuple(v_2397) else caught-fail) in
                                {10692}let psk_ext_121: preSharedKeyExt = (if v_2398 then 1-proj-2-tuple(v_2397) else caught-fail) in
                                {10695}new fake_id_27[]: identityPsk;
                                {10696}new fake_binder_27[]: bitstring;
                                {10702}let v_2399: hpkeContext = (if v_2398 then catch-fail(context_2) else caught-fail) in
                                {10703}let v_2400: bool = (not-caught-fail(v_2399) && ((S =nf 1-proj-hpke_context(v_2399)) && success?(1-proj-hpke_context(v_2399)))) in
                                {10704}let base_nonce_27: bitstring = (if v_2400 then 3-proj-hpke_context(v_2399) else caught-fail) in
                                {10705}let key_27: aead_key = (if v_2400 then 2-proj-hpke_context(v_2399) else caught-fail) in
                                {10701}let n_24: nat = (if v_2398 then 2 else caught-fail) in
                                {10698}let o_ech_ext_ADD_22: echExt = (if v_2398 then ECHClientHelloOuter(ech_h_18,ech_a_18,config_id_18,zero,zero) else caught-fail) in
                                {10697}let o_psk_ext_28: preSharedKeyExt = (if v_2398 then (if @8_use_psk then client_psk_ext(fake_id_27,fake_binder_27) else empty_psk_ext) else caught-fail) in
                                {10699}let o_offer_ADD_22: params = (if v_2398 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_12,SNI(o_dom_14),o_ech_ext_ADD_22,empty_extra_ext,o_psk_ext_28) else caught-fail) in
                                {10700}let o_client_hello_ADD_22: msg = (if v_2398 then CH(o_cr_18,o_offer_ADD_22) else caught-fail) in
                                {10693}let i_offer_22: params = (if v_2398 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_8,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_121) else caught-fail) in
                                {10694}let i_client_hello_29: msg = (if v_2398 then CH(i_cr_14,i_offer_22) else caught-fail) in
                                {10706}let payload_28: bitstring = (if v_2398 then catch-fail((if v_2400 then aead_enc(ech_a_18,key_27,(base_nonce_27,n_24),o_client_hello_ADD_22,i_client_hello_29) else fail-any)) else caught-fail) in
                                {10707}let v_2401: bool = not-caught-fail(payload_28) in
                                {10708}let o_ech_ext_28: echExt = (if v_2401 then ECHClientHelloOuter(ech_h_18,ech_a_18,config_id_18,zero,payload_28) else caught-fail) in
                                {10709}let o_offer_48: params = (if v_2401 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_12,SNI(o_dom_14),o_ech_ext_28,empty_extra_ext,o_psk_ext_28) else caught-fail) in
                                {10710}let (o_client_hello'_16: msg,i_client_hello'_17: msg,i_cr'_16: bytes32,i_kex_data'_16: bitstring,psk_data'_50: bitstring) = (if v_2398 then (if v_2401 then (CH(o_cr_18,o_offer_48),i_client_hello_29,i_cr_14,i_kex_data_13,psk_data_63) else fail-any) else fail-any) in
                                {10711}out(io, o_client_hello'_16);
                                {10712}in(io, server_hello'_45: msg);
                                {10713}let SH(B32(sr24'_16: bytes24,sr8'_16: bytes8),params'_16: params) = server_hello'_45 in
                                {10715}let sh_modified_22: msg = SH(B32(sr24'_16,zero8),params'_16) in
                                {10714}let cur_log_IN1_HRR_IN2_16: bitstring = (cur_log_IN1_HRR_5,i_client_hello'_17) in
                                {10716}let cur_log_sh_22: bitstring = (cur_log_IN1_HRR_IN2_16,sh_modified_22) in
                                {10717}let transcript_ech_conf_22: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_22)) in
                                {10718}let v_2402: bool = not-caught-fail(transcript_ech_conf_22) in
                                {10720}let k_244: bitstring = (if v_2402 then catch-fail(b32_2_b(get_random(i_client_hello'_17))) else caught-fail) in
                                {10721}let v_2403: bool = not-caught-fail(k_244) in
                                {10719}let s_246: bitstring = (if v_2402 then zero else caught-fail) in
                                {10722}let k_245: bitstring = (if v_2402 then catch-fail((if v_2403 then hmac(@8_backend_h,s_246,k_244) else fail-any)) else caught-fail) in
                                {10723}let v_2404: bool = not-caught-fail(k_245) in
                                {10724}let l_666: label = (if v_2404 then ech_accept_confirmation else caught-fail) in
                                {10725}let x_755: bitstring = (if v_2404 then (l_666,cur_log_sh_22) else caught-fail) in
                                {10726}let sr8_28: bytes8 = (if v_2402 then catch-fail(crop_into_bytes8((if v_2404 then hmac(@8_backend_h,k_245,x_755) else fail-any))) else caught-fail) in
                                {10727}let v_2405: bool = not-caught-fail(sr8_28) in
                                {10728}if (B32(sr24'_16,sr8'_16) = (if v_2402 then (if v_2405 then B32(sr24'_16,sr8_28) else fail-any) else fail-any)) then
                                {10729}let (x_756: bitstring,g_67: group) = i_kex_data'_16 in
                                {10730}let (psk_offer_58: preSharedKey,id_offer_58: identityPsk,es_offer_58: bitstring,is_safe_offer_58: bool) = psk_data'_50 in
                                {10731}event Client_PSKOffer(id_client_5,psk_offer_58,id_offer_58,is_safe_offer_58);
                                {10732}event Client_Rand_client(id_client_5,i_cr'_16);
                                {10733}event Client_DH_client(id_client_5,dh_pub(g_67,x_756));
                                {10734}event Client_server_domain(id_client_5,backend_dom_1);
                                {10735}let SH(sr_69: bytes32,mode_67: params) = server_hello'_45 in
                                {10736}event Client_Rand_server(id_client_5,sr_69);
                                {10737}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_67,gy_59: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_122: preSharedKeyExt) = mode_67 in
                                (
                                    {10739}event Client_DH_server(id_client_5,gy_59);
                                    {10740}let v_2406: bool = (psk_ext_122 = empty_psk_ext) in
                                    {10741}let psk_270: preSharedKey = (if v_2406 then NoPsk else caught-fail) in
                                    {10743}let k_246: bitstring = (if v_2406 then catch-fail(psk2b(psk_270)) else caught-fail) in
                                    {10744}let v_2407: bool = not-caught-fail(k_246) in
                                    {10742}let s_247: bitstring = (if v_2406 then zero else caught-fail) in
                                    {10745}let early_secret_181: bitstring = (if v_2406 then catch-fail((if v_2407 then hmac(@8_backend_h,s_247,k_246) else fail-any)) else caught-fail) in
                                    {10746}let v_2408: bool = not-caught-fail(early_secret_181) in
                                    {10748}let m_239: bitstring = (if v_2408 then zero else caught-fail) in
                                    {10749}let h_637: bitstring = (if v_2408 then catch-fail(hash(@8_backend_h,m_239)) else caught-fail) in
                                    {10750}let v_2409: bool = not-caught-fail(h_637) in
                                    {10747}let l_667: label = (if v_2408 then tls13_ext_res_binder else caught-fail) in
                                    {10751}let x_757: bitstring = (if v_2409 then (l_667,h_637) else caught-fail) in
                                    {10752}let binder_key_121: bitstring = (if v_2408 then catch-fail((if v_2409 then hmac(@8_backend_h,early_secret_181,x_757) else fail-any)) else caught-fail) in
                                    {10753}let v_2410: bool = not-caught-fail(binder_key_121) in
                                    {10754}let v_2411: bitstring = (if v_2406 then catch-fail((if v_2408 then (if v_2410 then (early_secret_181,binder_key_121) else fail-any) else fail-any)) else caught-fail) in
                                    {10755}let v_2412: bool = (not-caught-fail(v_2411) && success?(1-proj-2-tuple(v_2411))) in
                                    {10756}let kb_121: mac_key = (if v_2412 then 2-proj-2-tuple(v_2411) else caught-fail) in
                                    {10757}let es_182: bitstring = (if v_2412 then 1-proj-2-tuple(v_2411) else caught-fail) in
                                    {10758}let v_2413: bitstring = (if not(v_2406) then catch-fail(psk_data'_50) else caught-fail) in
                                    {10759}let v_2414: bool = (not-caught-fail(v_2413) && success?(1-proj-4-tuple(v_2413))) in
                                    {10760}let is_safe_109: bool = (if v_2414 then 4-proj-4-tuple(v_2413) else caught-fail) in
                                    {10761}let es_183: bitstring = (if v_2414 then 3-proj-4-tuple(v_2413) else caught-fail) in
                                    {10762}let id_124: identityPsk = (if v_2414 then 2-proj-4-tuple(v_2413) else caught-fail) in
                                    {10763}let psk_271: preSharedKey = (if v_2414 then 1-proj-4-tuple(v_2413) else caught-fail) in
                                    {10764}let (psk_272: preSharedKey,early_secret_182: bitstring,valid_58: bool,safe_psk_64: bool) = (if v_2406 then (if v_2412 then (NoPsk,es_182,true,false) else fail-any) else (if v_2414 then (psk_271,es_183,((psk_271 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_122)),is_safe_109) else fail-any)) in
                                    {10765}event Client_PSKChoosen(id_client_5,psk_272,safe_psk_64);
                                    {10766}if valid_58 then
                                    (
                                        {10769}new s_248[]: seed;
                                        {10767}let gxy_118: element = catch-fail(dh_decap_fun(g_67,gy_59,x_756)) in
                                        {10768}let v_2415: bool = not-caught-fail(gxy_118) in
                                        {10770}let gxy_119: element = (if v_2415 then gxy_118 else dh_f(s_248)) in
                                        {10771}event Client_DH_gxy(id_client_5,gxy_119);
                                        {10773}let m_240: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {10774}let v_2416: bool = not-caught-fail(m_240) in
                                        {10775}let h_638: bitstring = (if v_2416 then catch-fail(hash(@8_backend_h,m_240)) else caught-fail) in
                                        {10776}let v_2417: bool = not-caught-fail(h_638) in
                                        {10772}let l_668: label = tls13_derived in
                                        {10777}let x_758: bitstring = (if v_2417 then (l_668,h_638) else caught-fail) in
                                        {10778}let extra_127: bitstring = catch-fail((if v_2416 then (if v_2417 then hmac(@8_backend_h,early_secret_182,x_758) else fail-any) else fail-any)) in
                                        {10779}let v_2418: bool = not-caught-fail(extra_127) in
                                        {10780}let handshake_secret_59: bitstring = (if v_2418 then hmac(@8_backend_h,extra_127,gxy_119) else fail-any) in
                                        {10782}let m_241: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                        {10783}let v_2419: bool = not-caught-fail(m_241) in
                                        {10784}let h_639: bitstring = (if v_2419 then catch-fail(hash(@8_backend_h,m_241)) else caught-fail) in
                                        {10785}let v_2420: bool = not-caught-fail(h_639) in
                                        {10781}let l_669: label = tls13_derived in
                                        {10786}let x_759: bitstring = (if v_2420 then (l_669,h_639) else caught-fail) in
                                        {10787}let extra_128: bitstring = catch-fail((if v_2419 then (if v_2420 then hmac(@8_backend_h,handshake_secret_59,x_759) else fail-any) else fail-any)) in
                                        {10788}let v_2421: bool = not-caught-fail(extra_128) in
                                        {10789}let k_247: bitstring = (if v_2421 then zero else caught-fail) in
                                        {10790}let master_secret_125: bitstring = (if v_2421 then catch-fail(hmac(@8_backend_h,handshake_secret_59,k_247)) else caught-fail) in
                                        {10791}let v_2422: bool = not-caught-fail(master_secret_125) in
                                        {10738}let cur_log2_123: bitstring = (cur_log_IN1_HRR_IN2_16,server_hello'_45) in
                                        {10793}let h_640: bitstring = (if v_2422 then catch-fail(hash(@8_backend_h,cur_log2_123)) else caught-fail) in
                                        {10794}let v_2423: bool = not-caught-fail(h_640) in
                                        {10792}let l_670: label = (if v_2422 then tls13_client_handshake_traffic_secret else caught-fail) in
                                        {10795}let x_760: bitstring = (if v_2423 then (l_670,h_640) else caught-fail) in
                                        {10796}let client_hts_59: bitstring = (if v_2422 then catch-fail((if v_2423 then hmac(@8_backend_h,handshake_secret_59,x_760) else fail-any)) else caught-fail) in
                                        {10797}let v_2424: bool = not-caught-fail(client_hts_59) in
                                        {10799}let h_641: bitstring = (if v_2424 then catch-fail(hash(@8_backend_h,cur_log2_123)) else caught-fail) in
                                        {10800}let v_2425: bool = not-caught-fail(h_641) in
                                        {10798}let l_671: label = (if v_2424 then tls13_server_handshake_traffic_secret else caught-fail) in
                                        {10801}let x_761: bitstring = (if v_2425 then (l_671,h_641) else caught-fail) in
                                        {10802}let server_hts_59: bitstring = (if v_2424 then catch-fail((if v_2425 then hmac(@8_backend_h,handshake_secret_59,x_761) else fail-any)) else caught-fail) in
                                        {10803}let v_2426: bool = not-caught-fail(server_hts_59) in
                                        {10805}let h_642: bitstring = (if v_2426 then zero else caught-fail) in
                                        {10804}let l_672: label = (if v_2426 then tls13_key else caught-fail) in
                                        {10806}let x_762: bitstring = (if v_2426 then (l_672,h_642) else caught-fail) in
                                        {10807}let client_wkh_59: bitstring = (if v_2426 then catch-fail(hmac(@8_backend_h,client_hts_59,x_762)) else caught-fail) in
                                        {10808}let v_2427: bool = not-caught-fail(client_wkh_59) in
                                        {10810}let h_643: bitstring = (if v_2427 then zero else caught-fail) in
                                        {10809}let l_673: label = (if v_2427 then tls13_key else caught-fail) in
                                        {10811}let x_763: bitstring = (if v_2427 then (l_673,h_643) else caught-fail) in
                                        {10812}let server_wkh_59: bitstring = (if v_2427 then catch-fail(hmac(@8_backend_h,server_hts_59,x_763)) else caught-fail) in
                                        {10813}let v_2428: bool = not-caught-fail(server_wkh_59) in
                                        {10815}let h_644: bitstring = (if v_2428 then zero else caught-fail) in
                                        {10814}let l_674: label = (if v_2428 then tls13_finished else caught-fail) in
                                        {10816}let x_764: bitstring = (if v_2428 then (l_674,h_644) else caught-fail) in
                                        {10817}let client_fk_59: bitstring = (if v_2428 then catch-fail(hmac(@8_backend_h,client_hts_59,x_764)) else caught-fail) in
                                        {10818}let v_2429: bool = not-caught-fail(client_fk_59) in
                                        {10820}let h_645: bitstring = (if v_2429 then zero else caught-fail) in
                                        {10819}let l_675: label = (if v_2429 then tls13_finished else caught-fail) in
                                        {10821}let x_765: bitstring = (if v_2429 then (l_675,h_645) else caught-fail) in
                                        {10822}let server_fk_59: bitstring = (if v_2429 then catch-fail(hmac(@8_backend_h,server_hts_59,x_765)) else caught-fail) in
                                        {10823}let v_2430: bool = not-caught-fail(server_fk_59) in
                                        {10824}let (master_secret_126: bitstring,chk_66: aead_key,shk_65: aead_key,cfin_66: mac_key,sfin_65: mac_key) = (if v_2421 then (if v_2422 then (if v_2424 then (if v_2426 then (if v_2427 then (if v_2428 then (if v_2429 then (if v_2430 then (master_secret_125,client_wkh_59,server_wkh_59,client_fk_59,server_fk_59) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                        {10825}event Client_chk(id_client_5,chk_66);
                                        {10826}event Client_shk(id_client_5,shk_65);
                                        {10827}event Client_cfin(id_client_5,cfin_66);
                                        {10828}event Client_sfin(id_client_5,sfin_65);
                                        {10829}in(io, enc_ee_msg_58: bitstring);
                                        {10830}let ee_msg_63: msg = aead_dec(@8_backend_a,shk_65,0,zero,enc_ee_msg_58) in
                                        {10831}let EE(ech_ee_58: echExt,extra_ee_58: extraExt) = ee_msg_63 in
                                        {10832}let cur_log2_124: bitstring = (cur_log2_123,ee_msg_63) in
                                        {10833}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_16,sr_69,@8_backend_h,@8_backend_a,c_dom_7,backend_dom_1,psk_272,safe_psk_64,@8_comp_psk,master_secret_126,chk_66,0,shk_65,1,cfin_66,sfin_65,cur_log2_124)))
                                    )
                                    else
                                        {10834}out(io, illegal_parameter)
                                )
                                else
                                    {10835}out(io, illegal_parameter)
                        )
                        else
                            {10837}let psk_273: preSharedKey = NoPsk in
                            {10839}let k_248: bitstring = catch-fail(psk2b(psk_273)) in
                            {10840}let v_2431: bool = not-caught-fail(k_248) in
                            {10838}let s_249: bitstring = zero in
                            {10841}let early_secret_183: bitstring = catch-fail((if v_2431 then hmac(@8_backend_h,s_249,k_248) else fail-any)) in
                            {10842}let v_2432: bool = not-caught-fail(early_secret_183) in
                            {10844}let m_242: bitstring = (if v_2432 then zero else caught-fail) in
                            {10845}let h_646: bitstring = (if v_2432 then catch-fail(hash(@8_backend_h,m_242)) else caught-fail) in
                            {10846}let v_2433: bool = not-caught-fail(h_646) in
                            {10843}let l_676: label = (if v_2432 then tls13_ext_res_binder else caught-fail) in
                            {10847}let x_766: bitstring = (if v_2433 then (l_676,h_646) else caught-fail) in
                            {10848}let binder_key_122: bitstring = (if v_2432 then catch-fail((if v_2433 then hmac(@8_backend_h,early_secret_183,x_766) else fail-any)) else caught-fail) in
                            {10849}let v_2434: bool = not-caught-fail(binder_key_122) in
                            {10850}let v_2435: bitstring = catch-fail((if v_2432 then (if v_2434 then (early_secret_183,binder_key_122) else fail-any) else fail-any)) in
                            {10851}let v_2436: bool = (not-caught-fail(v_2435) && success?(1-proj-2-tuple(v_2435))) in
                            {10852}let kb_122: mac_key = (if v_2436 then 2-proj-2-tuple(v_2435) else caught-fail) in
                            {10853}let es_184: bitstring = (if v_2436 then 1-proj-2-tuple(v_2435) else caught-fail) in
                            {10854}let v_2437: bitstring = catch-fail((if v_2436 then (empty_psk_ext,(NoPsk,zero,es_184,false)) else fail-any)) in
                            {10855}let v_2438: bool = (not-caught-fail(v_2437) && success?(1-proj-2-tuple(v_2437))) in
                            {10856}let psk_data_64: bitstring = (if v_2438 then 2-proj-2-tuple(v_2437) else caught-fail) in
                            {10857}let psk_ext_123: preSharedKeyExt = (if v_2438 then 1-proj-2-tuple(v_2437) else caught-fail) in
                            {10860}new fake_id_28[]: identityPsk;
                            {10861}new fake_binder_28[]: bitstring;
                            {10867}let v_2439: hpkeContext = (if v_2438 then catch-fail(context_2) else caught-fail) in
                            {10868}let v_2440: bool = (not-caught-fail(v_2439) && ((S =nf 1-proj-hpke_context(v_2439)) && success?(1-proj-hpke_context(v_2439)))) in
                            {10869}let base_nonce_28: bitstring = (if v_2440 then 3-proj-hpke_context(v_2439) else caught-fail) in
                            {10870}let key_28: aead_key = (if v_2440 then 2-proj-hpke_context(v_2439) else caught-fail) in
                            {10866}let n_25: nat = (if v_2438 then 2 else caught-fail) in
                            {10863}let o_ech_ext_ADD_23: echExt = (if v_2438 then ECHClientHelloOuter(ech_h_18,ech_a_18,config_id_18,zero,zero) else caught-fail) in
                            {10862}let o_psk_ext_29: preSharedKeyExt = (if v_2438 then (if @8_use_psk then client_psk_ext(fake_id_28,fake_binder_28) else empty_psk_ext) else caught-fail) in
                            {10864}let o_offer_ADD_23: params = (if v_2438 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_12,SNI(o_dom_14),o_ech_ext_ADD_23,empty_extra_ext,o_psk_ext_29) else caught-fail) in
                            {10865}let o_client_hello_ADD_23: msg = (if v_2438 then CH(o_cr_18,o_offer_ADD_23) else caught-fail) in
                            {10858}let i_offer_23: params = (if v_2438 then nego(TLS13,@8_backend_h,@8_backend_a,i_kex_ext_8,SNI(backend_dom_1),ECHClientHelloInner,@8_i_extra_ext,psk_ext_123) else caught-fail) in
                            {10859}let i_client_hello_30: msg = (if v_2438 then CH(i_cr_14,i_offer_23) else caught-fail) in
                            {10871}let payload_29: bitstring = (if v_2438 then catch-fail((if v_2440 then aead_enc(ech_a_18,key_28,(base_nonce_28,n_25),o_client_hello_ADD_23,i_client_hello_30) else fail-any)) else caught-fail) in
                            {10872}let v_2441: bool = not-caught-fail(payload_29) in
                            {10873}let o_ech_ext_29: echExt = (if v_2441 then ECHClientHelloOuter(ech_h_18,ech_a_18,config_id_18,zero,payload_29) else caught-fail) in
                            {10874}let o_offer_49: params = (if v_2441 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_12,SNI(o_dom_14),o_ech_ext_29,empty_extra_ext,o_psk_ext_29) else caught-fail) in
                            {10875}let (o_client_hello'_17: msg,i_client_hello'_18: msg,i_cr'_17: bytes32,i_kex_data'_17: bitstring,psk_data'_51: bitstring) = (if v_2438 then (if v_2441 then (CH(o_cr_18,o_offer_49),i_client_hello_30,i_cr_14,i_kex_data_13,psk_data_64) else fail-any) else fail-any) in
                            {10876}out(io, o_client_hello'_17);
                            {10877}in(io, server_hello'_46: msg);
                            {10878}let SH(B32(sr24'_17: bytes24,sr8'_17: bytes8),params'_17: params) = server_hello'_46 in
                            {10880}let sh_modified_23: msg = SH(B32(sr24'_17,zero8),params'_17) in
                            {10879}let cur_log_IN1_HRR_IN2_17: bitstring = (cur_log_IN1_HRR_5,i_client_hello'_18) in
                            {10881}let cur_log_sh_23: bitstring = (cur_log_IN1_HRR_IN2_17,sh_modified_23) in
                            {10882}let transcript_ech_conf_23: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_23)) in
                            {10883}let v_2442: bool = not-caught-fail(transcript_ech_conf_23) in
                            {10885}let k_249: bitstring = (if v_2442 then catch-fail(b32_2_b(get_random(i_client_hello'_18))) else caught-fail) in
                            {10886}let v_2443: bool = not-caught-fail(k_249) in
                            {10884}let s_250: bitstring = (if v_2442 then zero else caught-fail) in
                            {10887}let k_250: bitstring = (if v_2442 then catch-fail((if v_2443 then hmac(@8_backend_h,s_250,k_249) else fail-any)) else caught-fail) in
                            {10888}let v_2444: bool = not-caught-fail(k_250) in
                            {10889}let l_677: label = (if v_2444 then ech_accept_confirmation else caught-fail) in
                            {10890}let x_767: bitstring = (if v_2444 then (l_677,cur_log_sh_23) else caught-fail) in
                            {10891}let sr8_29: bytes8 = (if v_2442 then catch-fail(crop_into_bytes8((if v_2444 then hmac(@8_backend_h,k_250,x_767) else fail-any))) else caught-fail) in
                            {10892}let v_2445: bool = not-caught-fail(sr8_29) in
                            {10893}if (B32(sr24'_17,sr8'_17) = (if v_2442 then (if v_2445 then B32(sr24'_17,sr8_29) else fail-any) else fail-any)) then
                            {10894}let (x_768: bitstring,g_68: group) = i_kex_data'_17 in
                            {10895}let (psk_offer_59: preSharedKey,id_offer_59: identityPsk,es_offer_59: bitstring,is_safe_offer_59: bool) = psk_data'_51 in
                            {10896}event Client_PSKOffer(id_client_5,psk_offer_59,id_offer_59,is_safe_offer_59);
                            {10897}event Client_Rand_client(id_client_5,i_cr'_17);
                            {10898}event Client_DH_client(id_client_5,dh_pub(g_68,x_768));
                            {10899}event Client_server_domain(id_client_5,backend_dom_1);
                            {10900}let SH(sr_70: bytes32,mode_68: params) = server_hello'_46 in
                            {10901}event Client_Rand_server(id_client_5,sr_70);
                            {10902}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_68,gy_60: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_124: preSharedKeyExt) = mode_68 in
                            (
                                {10904}event Client_DH_server(id_client_5,gy_60);
                                {10905}let v_2446: bool = (psk_ext_124 = empty_psk_ext) in
                                {10906}let psk_274: preSharedKey = (if v_2446 then NoPsk else caught-fail) in
                                {10908}let k_251: bitstring = (if v_2446 then catch-fail(psk2b(psk_274)) else caught-fail) in
                                {10909}let v_2447: bool = not-caught-fail(k_251) in
                                {10907}let s_251: bitstring = (if v_2446 then zero else caught-fail) in
                                {10910}let early_secret_184: bitstring = (if v_2446 then catch-fail((if v_2447 then hmac(@8_backend_h,s_251,k_251) else fail-any)) else caught-fail) in
                                {10911}let v_2448: bool = not-caught-fail(early_secret_184) in
                                {10913}let m_243: bitstring = (if v_2448 then zero else caught-fail) in
                                {10914}let h_647: bitstring = (if v_2448 then catch-fail(hash(@8_backend_h,m_243)) else caught-fail) in
                                {10915}let v_2449: bool = not-caught-fail(h_647) in
                                {10912}let l_678: label = (if v_2448 then tls13_ext_res_binder else caught-fail) in
                                {10916}let x_769: bitstring = (if v_2449 then (l_678,h_647) else caught-fail) in
                                {10917}let binder_key_123: bitstring = (if v_2448 then catch-fail((if v_2449 then hmac(@8_backend_h,early_secret_184,x_769) else fail-any)) else caught-fail) in
                                {10918}let v_2450: bool = not-caught-fail(binder_key_123) in
                                {10919}let v_2451: bitstring = (if v_2446 then catch-fail((if v_2448 then (if v_2450 then (early_secret_184,binder_key_123) else fail-any) else fail-any)) else caught-fail) in
                                {10920}let v_2452: bool = (not-caught-fail(v_2451) && success?(1-proj-2-tuple(v_2451))) in
                                {10921}let kb_123: mac_key = (if v_2452 then 2-proj-2-tuple(v_2451) else caught-fail) in
                                {10922}let es_185: bitstring = (if v_2452 then 1-proj-2-tuple(v_2451) else caught-fail) in
                                {10923}let v_2453: bitstring = (if not(v_2446) then catch-fail(psk_data'_51) else caught-fail) in
                                {10924}let v_2454: bool = (not-caught-fail(v_2453) && success?(1-proj-4-tuple(v_2453))) in
                                {10925}let is_safe_110: bool = (if v_2454 then 4-proj-4-tuple(v_2453) else caught-fail) in
                                {10926}let es_186: bitstring = (if v_2454 then 3-proj-4-tuple(v_2453) else caught-fail) in
                                {10927}let id_125: identityPsk = (if v_2454 then 2-proj-4-tuple(v_2453) else caught-fail) in
                                {10928}let psk_275: preSharedKey = (if v_2454 then 1-proj-4-tuple(v_2453) else caught-fail) in
                                {10929}let (psk_276: preSharedKey,early_secret_185: bitstring,valid_59: bool,safe_psk_65: bool) = (if v_2446 then (if v_2452 then (NoPsk,es_185,true,false) else fail-any) else (if v_2454 then (psk_275,es_186,((psk_275 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_124)),is_safe_110) else fail-any)) in
                                {10930}event Client_PSKChoosen(id_client_5,psk_276,safe_psk_65);
                                {10931}if valid_59 then
                                (
                                    {10934}new s_252[]: seed;
                                    {10932}let gxy_120: element = catch-fail(dh_decap_fun(g_68,gy_60,x_768)) in
                                    {10933}let v_2455: bool = not-caught-fail(gxy_120) in
                                    {10935}let gxy_121: element = (if v_2455 then gxy_120 else dh_f(s_252)) in
                                    {10936}event Client_DH_gxy(id_client_5,gxy_121);
                                    {10938}let m_244: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                    {10939}let v_2456: bool = not-caught-fail(m_244) in
                                    {10940}let h_648: bitstring = (if v_2456 then catch-fail(hash(@8_backend_h,m_244)) else caught-fail) in
                                    {10941}let v_2457: bool = not-caught-fail(h_648) in
                                    {10937}let l_679: label = tls13_derived in
                                    {10942}let x_770: bitstring = (if v_2457 then (l_679,h_648) else caught-fail) in
                                    {10943}let extra_129: bitstring = catch-fail((if v_2456 then (if v_2457 then hmac(@8_backend_h,early_secret_185,x_770) else fail-any) else fail-any)) in
                                    {10944}let v_2458: bool = not-caught-fail(extra_129) in
                                    {10945}let handshake_secret_60: bitstring = (if v_2458 then hmac(@8_backend_h,extra_129,gxy_121) else fail-any) in
                                    {10947}let m_245: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                    {10948}let v_2459: bool = not-caught-fail(m_245) in
                                    {10949}let h_649: bitstring = (if v_2459 then catch-fail(hash(@8_backend_h,m_245)) else caught-fail) in
                                    {10950}let v_2460: bool = not-caught-fail(h_649) in
                                    {10946}let l_680: label = tls13_derived in
                                    {10951}let x_771: bitstring = (if v_2460 then (l_680,h_649) else caught-fail) in
                                    {10952}let extra_130: bitstring = catch-fail((if v_2459 then (if v_2460 then hmac(@8_backend_h,handshake_secret_60,x_771) else fail-any) else fail-any)) in
                                    {10953}let v_2461: bool = not-caught-fail(extra_130) in
                                    {10954}let k_252: bitstring = (if v_2461 then zero else caught-fail) in
                                    {10955}let master_secret_127: bitstring = (if v_2461 then catch-fail(hmac(@8_backend_h,handshake_secret_60,k_252)) else caught-fail) in
                                    {10956}let v_2462: bool = not-caught-fail(master_secret_127) in
                                    {10903}let cur_log2_125: bitstring = (cur_log_IN1_HRR_IN2_17,server_hello'_46) in
                                    {10958}let h_650: bitstring = (if v_2462 then catch-fail(hash(@8_backend_h,cur_log2_125)) else caught-fail) in
                                    {10959}let v_2463: bool = not-caught-fail(h_650) in
                                    {10957}let l_681: label = (if v_2462 then tls13_client_handshake_traffic_secret else caught-fail) in
                                    {10960}let x_772: bitstring = (if v_2463 then (l_681,h_650) else caught-fail) in
                                    {10961}let client_hts_60: bitstring = (if v_2462 then catch-fail((if v_2463 then hmac(@8_backend_h,handshake_secret_60,x_772) else fail-any)) else caught-fail) in
                                    {10962}let v_2464: bool = not-caught-fail(client_hts_60) in
                                    {10964}let h_651: bitstring = (if v_2464 then catch-fail(hash(@8_backend_h,cur_log2_125)) else caught-fail) in
                                    {10965}let v_2465: bool = not-caught-fail(h_651) in
                                    {10963}let l_682: label = (if v_2464 then tls13_server_handshake_traffic_secret else caught-fail) in
                                    {10966}let x_773: bitstring = (if v_2465 then (l_682,h_651) else caught-fail) in
                                    {10967}let server_hts_60: bitstring = (if v_2464 then catch-fail((if v_2465 then hmac(@8_backend_h,handshake_secret_60,x_773) else fail-any)) else caught-fail) in
                                    {10968}let v_2466: bool = not-caught-fail(server_hts_60) in
                                    {10970}let h_652: bitstring = (if v_2466 then zero else caught-fail) in
                                    {10969}let l_683: label = (if v_2466 then tls13_key else caught-fail) in
                                    {10971}let x_774: bitstring = (if v_2466 then (l_683,h_652) else caught-fail) in
                                    {10972}let client_wkh_60: bitstring = (if v_2466 then catch-fail(hmac(@8_backend_h,client_hts_60,x_774)) else caught-fail) in
                                    {10973}let v_2467: bool = not-caught-fail(client_wkh_60) in
                                    {10975}let h_653: bitstring = (if v_2467 then zero else caught-fail) in
                                    {10974}let l_684: label = (if v_2467 then tls13_key else caught-fail) in
                                    {10976}let x_775: bitstring = (if v_2467 then (l_684,h_653) else caught-fail) in
                                    {10977}let server_wkh_60: bitstring = (if v_2467 then catch-fail(hmac(@8_backend_h,server_hts_60,x_775)) else caught-fail) in
                                    {10978}let v_2468: bool = not-caught-fail(server_wkh_60) in
                                    {10980}let h_654: bitstring = (if v_2468 then zero else caught-fail) in
                                    {10979}let l_685: label = (if v_2468 then tls13_finished else caught-fail) in
                                    {10981}let x_776: bitstring = (if v_2468 then (l_685,h_654) else caught-fail) in
                                    {10982}let client_fk_60: bitstring = (if v_2468 then catch-fail(hmac(@8_backend_h,client_hts_60,x_776)) else caught-fail) in
                                    {10983}let v_2469: bool = not-caught-fail(client_fk_60) in
                                    {10985}let h_655: bitstring = (if v_2469 then zero else caught-fail) in
                                    {10984}let l_686: label = (if v_2469 then tls13_finished else caught-fail) in
                                    {10986}let x_777: bitstring = (if v_2469 then (l_686,h_655) else caught-fail) in
                                    {10987}let server_fk_60: bitstring = (if v_2469 then catch-fail(hmac(@8_backend_h,server_hts_60,x_777)) else caught-fail) in
                                    {10988}let v_2470: bool = not-caught-fail(server_fk_60) in
                                    {10989}let (master_secret_128: bitstring,chk_67: aead_key,shk_66: aead_key,cfin_67: mac_key,sfin_66: mac_key) = (if v_2461 then (if v_2462 then (if v_2464 then (if v_2466 then (if v_2467 then (if v_2468 then (if v_2469 then (if v_2470 then (master_secret_127,client_wkh_60,server_wkh_60,client_fk_60,server_fk_60) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                    {10990}event Client_chk(id_client_5,chk_67);
                                    {10991}event Client_shk(id_client_5,shk_66);
                                    {10992}event Client_cfin(id_client_5,cfin_67);
                                    {10993}event Client_sfin(id_client_5,sfin_66);
                                    {10994}in(io, enc_ee_msg_59: bitstring);
                                    {10995}let ee_msg_64: msg = aead_dec(@8_backend_a,shk_66,0,zero,enc_ee_msg_59) in
                                    {10996}let EE(ech_ee_59: echExt,extra_ee_59: extraExt) = ee_msg_64 in
                                    {10997}let cur_log2_126: bitstring = (cur_log2_125,ee_msg_64) in
                                    {10998}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr'_17,sr_70,@8_backend_h,@8_backend_a,c_dom_7,backend_dom_1,psk_276,safe_psk_65,@8_comp_psk,master_secret_128,chk_67,0,shk_66,1,cfin_67,sfin_66,cur_log2_126)))
                                )
                                else
                                    {10999}out(io, illegal_parameter)
                            )
                            else
                                {11000}out(io, illegal_parameter)
                    )
                    else
                        {11002}let ech_config(config_id_19: configId,ech_g_19: group,pkR_21: element,o_dom_15: domain,ech_h_19: hash_alg,ech_a_19: aead_alg) = ech_conf_2 in
                        {11003}new rand24_26[]: bytes24;
                        {11004}new rand8_26[]: bytes8;
                        {11007}new s_253[]: seed;
                        {11008}let gx_59: element = dh_pub(@8_tls_g,dh_k(s_253)) in
                        {11009}let v_2471: bitstring = (dh_k(s_253),gx_59) in
                        {11010}let v_2472: bool = success?(1-proj-2-tuple(v_2471)) in
                        {11011}let gx_60: element = (if v_2472 then 2-proj-2-tuple(v_2471) else caught-fail) in
                        {11012}let x_778: bitstring = (if v_2472 then 1-proj-2-tuple(v_2471) else caught-fail) in
                        {11006}let send_key_share_17: bool = true in
                        {11013}let kex_25: kex_alg = (if v_2472 then (if send_key_share_17 then DHE_kex(@8_tls_g,gx_60) else DHE_group(@8_tls_g)) else caught-fail) in
                        {11014}let (o_kex_ext_13: keyShareExt,kex_data_12: bitstring) = (if v_2472 then (client_kex_ext(kex_25),(x_778,@8_tls_g)) else fail-any) in
                        {11005}let o_cr_19: bytes32 = B32(rand24_26,rand8_26) in
                        {11001}let cur_log_OU1_HRR_5: bitstring = ((zero,o_client_hello_7),server_hello_9) in
                        {11015}if @8_use_grease then
                        (
                            {11017}if @8_use_psk then
                            (
                                {11016}let extra_131: extraExt = empty_extra_ext in
                                {11018}let (psk_277: preSharedKey,id_126: identityPsk,old_es_17: bitstring,is_safe_111: bool) = psk_data_61 in
                                (
                                    {11022}let k_253: bitstring = catch-fail(psk2b(psk_277)) in
                                    {11023}let v_2473: bool = not-caught-fail(k_253) in
                                    {11021}let s_254: bitstring = zero in
                                    {11024}let early_secret_186: bitstring = catch-fail((if v_2473 then hmac(@8_tls_h,s_254,k_253) else fail-any)) in
                                    {11025}let v_2474: bool = not-caught-fail(early_secret_186) in
                                    {11027}let m_246: bitstring = (if v_2474 then zero else caught-fail) in
                                    {11028}let h_656: bitstring = (if v_2474 then catch-fail(hash(@8_tls_h,m_246)) else caught-fail) in
                                    {11029}let v_2475: bool = not-caught-fail(h_656) in
                                    {11026}let l_687: label = (if v_2474 then tls13_ext_res_binder else caught-fail) in
                                    {11030}let x_779: bitstring = (if v_2475 then (l_687,h_656) else caught-fail) in
                                    {11031}let binder_key_124: bitstring = (if v_2474 then catch-fail((if v_2475 then hmac(@8_tls_h,early_secret_186,x_779) else fail-any)) else caught-fail) in
                                    {11032}let v_2476: bool = not-caught-fail(binder_key_124) in
                                    {11033}let v_2477: bitstring = catch-fail((if v_2474 then (if v_2476 then (early_secret_186,binder_key_124) else fail-any) else fail-any)) in
                                    {11034}let v_2478: bool = (not-caught-fail(v_2477) && success?(1-proj-2-tuple(v_2477))) in
                                    {11035}let kb_124: mac_key = (if v_2478 then 2-proj-2-tuple(v_2477) else caught-fail) in
                                    {11036}let es_187: bitstring = (if v_2478 then 1-proj-2-tuple(v_2477) else caught-fail) in
                                    {11019}let offer_48: params = nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_13,SNI(o_dom_15),o_ech_ext_26,extra_131,trunc_client_psk_ext(id_126)) in
                                    {11020}let cur_log'_36: bitstring = (cur_log_OU1_HRR_5,CH(o_cr_19,offer_48)) in
                                    {11037}let binders_35: bitstring = (if v_2478 then catch-fail(hmac(@8_tls_h,kb_124,cur_log'_36)) else caught-fail) in
                                    {11038}let v_2479: bool = not-caught-fail(binders_35) in
                                    {11039}let v_2480: bitstring = catch-fail((if v_2478 then (if v_2479 then (client_psk_ext(id_126,binders_35),(psk_277,id_126,es_187,is_safe_111)) else fail-any) else fail-any)) in
                                    {11040}let v_2481: bool = (not-caught-fail(v_2480) && success?(1-proj-2-tuple(v_2480))) in
                                    {11041}let psk_data_65: bitstring = (if v_2481 then 2-proj-2-tuple(v_2480) else caught-fail) in
                                    {11042}let psk_ext_125: preSharedKeyExt = (if v_2481 then 1-proj-2-tuple(v_2480) else caught-fail) in
                                    {11043}let o_offer_50: params = (if v_2481 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_13,SNI(o_dom_15),o_ech_ext_26,empty_extra_ext,psk_ext_125) else caught-fail) in
                                    {11044}let (client_hello'_32: msg,cr'_34: bytes32,kex_data'_29: bitstring,psk_data'_52: bitstring) = (if v_2481 then (CH(o_cr_19,o_offer_50),o_cr_19,kex_data_12,psk_data_65) else fail-any) in
                                    {11045}out(io, client_hello'_32);
                                    {11047}in(io, server_hello'_47: msg);
                                    {11048}let SH(sr'_29: bytes32,mode'_29: params) = server_hello'_47 in
                                    (
                                        {11049}if (sr'_29 = B32(HRR24,HRR8)) then
                                            {11050}out(io, unexpected_message)
                                        else
                                            {11051}let (x_780: bitstring,g_69: group) = kex_data'_29 in
                                            {11052}let (psk_offer_60: preSharedKey,id_offer_60: identityPsk,es_offer_60: bitstring,is_safe_offer_60: bool) = psk_data'_52 in
                                            {11053}event Client_PSKOffer(id_client_5,psk_offer_60,id_offer_60,is_safe_offer_60);
                                            {11054}event Client_Rand_client(id_client_5,cr'_34);
                                            {11055}event Client_DH_client(id_client_5,dh_pub(g_69,x_780));
                                            {11056}event Client_server_domain(id_client_5,o_dom_8);
                                            {11057}let SH(sr_71: bytes32,mode_69: params) = server_hello'_47 in
                                            {11058}event Client_Rand_server(id_client_5,sr_71);
                                            {11059}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_69,gy_61: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_126: preSharedKeyExt) = mode_69 in
                                            (
                                                {11061}event Client_DH_server(id_client_5,gy_61);
                                                {11062}let v_2482: bool = (psk_ext_126 = empty_psk_ext) in
                                                {11063}let psk_278: preSharedKey = (if v_2482 then NoPsk else caught-fail) in
                                                {11065}let k_254: bitstring = (if v_2482 then catch-fail(psk2b(psk_278)) else caught-fail) in
                                                {11066}let v_2483: bool = not-caught-fail(k_254) in
                                                {11064}let s_255: bitstring = (if v_2482 then zero else caught-fail) in
                                                {11067}let early_secret_187: bitstring = (if v_2482 then catch-fail((if v_2483 then hmac(@8_tls_h,s_255,k_254) else fail-any)) else caught-fail) in
                                                {11068}let v_2484: bool = not-caught-fail(early_secret_187) in
                                                {11070}let m_247: bitstring = (if v_2484 then zero else caught-fail) in
                                                {11071}let h_657: bitstring = (if v_2484 then catch-fail(hash(@8_tls_h,m_247)) else caught-fail) in
                                                {11072}let v_2485: bool = not-caught-fail(h_657) in
                                                {11069}let l_688: label = (if v_2484 then tls13_ext_res_binder else caught-fail) in
                                                {11073}let x_781: bitstring = (if v_2485 then (l_688,h_657) else caught-fail) in
                                                {11074}let binder_key_125: bitstring = (if v_2484 then catch-fail((if v_2485 then hmac(@8_tls_h,early_secret_187,x_781) else fail-any)) else caught-fail) in
                                                {11075}let v_2486: bool = not-caught-fail(binder_key_125) in
                                                {11076}let v_2487: bitstring = (if v_2482 then catch-fail((if v_2484 then (if v_2486 then (early_secret_187,binder_key_125) else fail-any) else fail-any)) else caught-fail) in
                                                {11077}let v_2488: bool = (not-caught-fail(v_2487) && success?(1-proj-2-tuple(v_2487))) in
                                                {11078}let kb_125: mac_key = (if v_2488 then 2-proj-2-tuple(v_2487) else caught-fail) in
                                                {11079}let es_188: bitstring = (if v_2488 then 1-proj-2-tuple(v_2487) else caught-fail) in
                                                {11080}let v_2489: bitstring = (if not(v_2482) then catch-fail(psk_data'_52) else caught-fail) in
                                                {11081}let v_2490: bool = (not-caught-fail(v_2489) && success?(1-proj-4-tuple(v_2489))) in
                                                {11082}let is_safe_112: bool = (if v_2490 then 4-proj-4-tuple(v_2489) else caught-fail) in
                                                {11083}let es_189: bitstring = (if v_2490 then 3-proj-4-tuple(v_2489) else caught-fail) in
                                                {11084}let id_127: identityPsk = (if v_2490 then 2-proj-4-tuple(v_2489) else caught-fail) in
                                                {11085}let psk_279: preSharedKey = (if v_2490 then 1-proj-4-tuple(v_2489) else caught-fail) in
                                                {11086}let (psk_280: preSharedKey,early_secret_188: bitstring,valid_60: bool,safe_psk_66: bool) = (if v_2482 then (if v_2488 then (NoPsk,es_188,true,false) else fail-any) else (if v_2490 then (psk_279,es_189,((psk_279 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_126)),is_safe_112) else fail-any)) in
                                                {11087}event Client_PSKChoosen(id_client_5,psk_280,safe_psk_66);
                                                {11088}if valid_60 then
                                                (
                                                    {11091}new s_256[]: seed;
                                                    {11089}let gxy_122: element = catch-fail(dh_decap_fun(g_69,gy_61,x_780)) in
                                                    {11090}let v_2491: bool = not-caught-fail(gxy_122) in
                                                    {11092}let gxy_123: element = (if v_2491 then gxy_122 else dh_f(s_256)) in
                                                    {11093}event Client_DH_gxy(id_client_5,gxy_123);
                                                    {11095}let m_248: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {11096}let v_2492: bool = not-caught-fail(m_248) in
                                                    {11097}let h_658: bitstring = (if v_2492 then catch-fail(hash(@8_tls_h,m_248)) else caught-fail) in
                                                    {11098}let v_2493: bool = not-caught-fail(h_658) in
                                                    {11094}let l_689: label = tls13_derived in
                                                    {11099}let x_782: bitstring = (if v_2493 then (l_689,h_658) else caught-fail) in
                                                    {11100}let extra_132: bitstring = catch-fail((if v_2492 then (if v_2493 then hmac(@8_tls_h,early_secret_188,x_782) else fail-any) else fail-any)) in
                                                    {11101}let v_2494: bool = not-caught-fail(extra_132) in
                                                    {11102}let handshake_secret_61: bitstring = (if v_2494 then hmac(@8_tls_h,extra_132,gxy_123) else fail-any) in
                                                    {11104}let m_249: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {11105}let v_2495: bool = not-caught-fail(m_249) in
                                                    {11106}let h_659: bitstring = (if v_2495 then catch-fail(hash(@8_tls_h,m_249)) else caught-fail) in
                                                    {11107}let v_2496: bool = not-caught-fail(h_659) in
                                                    {11103}let l_690: label = tls13_derived in
                                                    {11108}let x_783: bitstring = (if v_2496 then (l_690,h_659) else caught-fail) in
                                                    {11109}let extra_133: bitstring = catch-fail((if v_2495 then (if v_2496 then hmac(@8_tls_h,handshake_secret_61,x_783) else fail-any) else fail-any)) in
                                                    {11110}let v_2497: bool = not-caught-fail(extra_133) in
                                                    {11111}let k_255: bitstring = (if v_2497 then zero else caught-fail) in
                                                    {11112}let master_secret_129: bitstring = (if v_2497 then catch-fail(hmac(@8_tls_h,handshake_secret_61,k_255)) else caught-fail) in
                                                    {11113}let v_2498: bool = not-caught-fail(master_secret_129) in
                                                    {11046}let cur_log_OU1_HRR_OU2_20: bitstring = (cur_log_OU1_HRR_5,client_hello'_32) in
                                                    {11060}let cur_log2_127: bitstring = (cur_log_OU1_HRR_OU2_20,server_hello'_47) in
                                                    {11115}let h_660: bitstring = (if v_2498 then catch-fail(hash(@8_tls_h,cur_log2_127)) else caught-fail) in
                                                    {11116}let v_2499: bool = not-caught-fail(h_660) in
                                                    {11114}let l_691: label = (if v_2498 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {11117}let x_784: bitstring = (if v_2499 then (l_691,h_660) else caught-fail) in
                                                    {11118}let client_hts_61: bitstring = (if v_2498 then catch-fail((if v_2499 then hmac(@8_tls_h,handshake_secret_61,x_784) else fail-any)) else caught-fail) in
                                                    {11119}let v_2500: bool = not-caught-fail(client_hts_61) in
                                                    {11121}let h_661: bitstring = (if v_2500 then catch-fail(hash(@8_tls_h,cur_log2_127)) else caught-fail) in
                                                    {11122}let v_2501: bool = not-caught-fail(h_661) in
                                                    {11120}let l_692: label = (if v_2500 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {11123}let x_785: bitstring = (if v_2501 then (l_692,h_661) else caught-fail) in
                                                    {11124}let server_hts_61: bitstring = (if v_2500 then catch-fail((if v_2501 then hmac(@8_tls_h,handshake_secret_61,x_785) else fail-any)) else caught-fail) in
                                                    {11125}let v_2502: bool = not-caught-fail(server_hts_61) in
                                                    {11127}let h_662: bitstring = (if v_2502 then zero else caught-fail) in
                                                    {11126}let l_693: label = (if v_2502 then tls13_key else caught-fail) in
                                                    {11128}let x_786: bitstring = (if v_2502 then (l_693,h_662) else caught-fail) in
                                                    {11129}let client_wkh_61: bitstring = (if v_2502 then catch-fail(hmac(@8_tls_h,client_hts_61,x_786)) else caught-fail) in
                                                    {11130}let v_2503: bool = not-caught-fail(client_wkh_61) in
                                                    {11132}let h_663: bitstring = (if v_2503 then zero else caught-fail) in
                                                    {11131}let l_694: label = (if v_2503 then tls13_key else caught-fail) in
                                                    {11133}let x_787: bitstring = (if v_2503 then (l_694,h_663) else caught-fail) in
                                                    {11134}let server_wkh_61: bitstring = (if v_2503 then catch-fail(hmac(@8_tls_h,server_hts_61,x_787)) else caught-fail) in
                                                    {11135}let v_2504: bool = not-caught-fail(server_wkh_61) in
                                                    {11137}let h_664: bitstring = (if v_2504 then zero else caught-fail) in
                                                    {11136}let l_695: label = (if v_2504 then tls13_finished else caught-fail) in
                                                    {11138}let x_788: bitstring = (if v_2504 then (l_695,h_664) else caught-fail) in
                                                    {11139}let client_fk_61: bitstring = (if v_2504 then catch-fail(hmac(@8_tls_h,client_hts_61,x_788)) else caught-fail) in
                                                    {11140}let v_2505: bool = not-caught-fail(client_fk_61) in
                                                    {11142}let h_665: bitstring = (if v_2505 then zero else caught-fail) in
                                                    {11141}let l_696: label = (if v_2505 then tls13_finished else caught-fail) in
                                                    {11143}let x_789: bitstring = (if v_2505 then (l_696,h_665) else caught-fail) in
                                                    {11144}let server_fk_61: bitstring = (if v_2505 then catch-fail(hmac(@8_tls_h,server_hts_61,x_789)) else caught-fail) in
                                                    {11145}let v_2506: bool = not-caught-fail(server_fk_61) in
                                                    {11146}let (master_secret_130: bitstring,chk_68: aead_key,shk_67: aead_key,cfin_68: mac_key,sfin_67: mac_key) = (if v_2497 then (if v_2498 then (if v_2500 then (if v_2502 then (if v_2503 then (if v_2504 then (if v_2505 then (if v_2506 then (master_secret_129,client_wkh_61,server_wkh_61,client_fk_61,server_fk_61) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {11147}event Client_chk(id_client_5,chk_68);
                                                    {11148}event Client_shk(id_client_5,shk_67);
                                                    {11149}event Client_cfin(id_client_5,cfin_68);
                                                    {11150}event Client_sfin(id_client_5,sfin_67);
                                                    {11151}in(io, enc_ee_msg_60: bitstring);
                                                    {11152}let ee_msg_65: msg = aead_dec(@8_tls_a,shk_67,0,zero,enc_ee_msg_60) in
                                                    {11153}let EE(ech_ee_60: echExt,extra_ee_60: extraExt) = ee_msg_65 in
                                                    {11154}let cur_log2_128: bitstring = (cur_log2_127,ee_msg_65) in
                                                    {11155}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_34,sr_71,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_280,safe_psk_66,@8_comp_psk,master_secret_130,chk_68,0,shk_67,1,cfin_68,sfin_67,cur_log2_128)))
                                                )
                                                else
                                                    {11156}out(io, illegal_parameter)
                                            )
                                            else
                                                {11157}out(io, illegal_parameter)
                                    )
                                    else
                                        {11158}out(io, unexpected_message)
                                )
                                else
                                    {11308}get pre_shared_keys(c_dom'_19: domain,=o_dom_15,=@8_tls_h,id_128: identityPsk,psk_281: preSharedKey,idP_21: idProc,is_safe_113: bool) in
                                    {11159}event Selected_one_time_used_psk(id_client_5,psk_281,is_safe_113);
                                    {11160}event Selected_psk(c_dom_7,c_dom'_19,idP_21,is_safe_113);
                                    {11161}event Selected_psk_no_missmatch(id_client_5,o_dom_15,@8_tls_h,psk_281,id_128);
                                    {11162}event Selected_psk_with_ID(c_dom_7,c_dom'_19,id_128,idP_21,is_safe_113);
                                    {11163}let v_2507: bitstring = (id_128,psk_281,is_safe_113) in
                                    {11164}let v_2508: bool = success?(1-proj-3-tuple(v_2507)) in
                                    {11165}let is_safe_114: bool = (if v_2508 then 3-proj-3-tuple(v_2507) else caught-fail) in
                                    {11166}let psk_282: preSharedKey = (if v_2508 then 2-proj-3-tuple(v_2507) else caught-fail) in
                                    {11167}let id_129: identityPsk = (if v_2508 then 1-proj-3-tuple(v_2507) else caught-fail) in
                                    {11171}let k_256: bitstring = (if v_2508 then catch-fail(psk2b(psk_282)) else caught-fail) in
                                    {11172}let v_2509: bool = not-caught-fail(k_256) in
                                    {11170}let s_257: bitstring = (if v_2508 then zero else caught-fail) in
                                    {11173}let early_secret_189: bitstring = (if v_2508 then catch-fail((if v_2509 then hmac(@8_tls_h,s_257,k_256) else fail-any)) else caught-fail) in
                                    {11174}let v_2510: bool = not-caught-fail(early_secret_189) in
                                    {11176}let m_250: bitstring = (if v_2510 then zero else caught-fail) in
                                    {11177}let h_666: bitstring = (if v_2510 then catch-fail(hash(@8_tls_h,m_250)) else caught-fail) in
                                    {11178}let v_2511: bool = not-caught-fail(h_666) in
                                    {11175}let l_697: label = (if v_2510 then tls13_ext_res_binder else caught-fail) in
                                    {11179}let x_790: bitstring = (if v_2511 then (l_697,h_666) else caught-fail) in
                                    {11180}let binder_key_126: bitstring = (if v_2510 then catch-fail((if v_2511 then hmac(@8_tls_h,early_secret_189,x_790) else fail-any)) else caught-fail) in
                                    {11181}let v_2512: bool = not-caught-fail(binder_key_126) in
                                    {11182}let v_2513: bitstring = (if v_2508 then catch-fail((if v_2510 then (if v_2512 then (early_secret_189,binder_key_126) else fail-any) else fail-any)) else caught-fail) in
                                    {11183}let v_2514: bool = (not-caught-fail(v_2513) && success?(1-proj-2-tuple(v_2513))) in
                                    {11184}let kb_126: mac_key = (if v_2514 then 2-proj-2-tuple(v_2513) else caught-fail) in
                                    {11185}let es_190: bitstring = (if v_2514 then 1-proj-2-tuple(v_2513) else caught-fail) in
                                    {11168}let offer_49: params = (if v_2508 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_13,SNI(o_dom_15),o_ech_ext_26,extra_131,trunc_client_psk_ext(id_129)) else caught-fail) in
                                    {11169}let cur_log'_37: bitstring = (if v_2508 then (cur_log_OU1_HRR_5,CH(o_cr_19,offer_49)) else caught-fail) in
                                    {11186}let binders_36: bitstring = (if v_2514 then catch-fail(hmac(@8_tls_h,kb_126,cur_log'_37)) else caught-fail) in
                                    {11187}let v_2515: bool = not-caught-fail(binders_36) in
                                    {11188}let v_2516: bitstring = catch-fail((if v_2508 then (if v_2514 then (if v_2515 then (client_psk_ext(id_129,binders_36),(psk_282,id_129,es_190,is_safe_114)) else fail-any) else fail-any) else fail-any)) in
                                    {11189}let v_2517: bool = (not-caught-fail(v_2516) && success?(1-proj-2-tuple(v_2516))) in
                                    {11190}let psk_data_66: bitstring = (if v_2517 then 2-proj-2-tuple(v_2516) else caught-fail) in
                                    {11191}let psk_ext_127: preSharedKeyExt = (if v_2517 then 1-proj-2-tuple(v_2516) else caught-fail) in
                                    {11192}let o_offer_51: params = (if v_2517 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_13,SNI(o_dom_15),o_ech_ext_26,empty_extra_ext,psk_ext_127) else caught-fail) in
                                    {11193}let (client_hello'_33: msg,cr'_35: bytes32,kex_data'_30: bitstring,psk_data'_53: bitstring) = (if v_2517 then (CH(o_cr_19,o_offer_51),o_cr_19,kex_data_12,psk_data_66) else fail-any) in
                                    {11194}out(io, client_hello'_33);
                                    {11196}in(io, server_hello'_48: msg);
                                    {11197}let SH(sr'_30: bytes32,mode'_30: params) = server_hello'_48 in
                                    (
                                        {11198}if (sr'_30 = B32(HRR24,HRR8)) then
                                            {11199}out(io, unexpected_message)
                                        else
                                            {11200}let (x_791: bitstring,g_70: group) = kex_data'_30 in
                                            {11201}let (psk_offer_61: preSharedKey,id_offer_61: identityPsk,es_offer_61: bitstring,is_safe_offer_61: bool) = psk_data'_53 in
                                            {11202}event Client_PSKOffer(id_client_5,psk_offer_61,id_offer_61,is_safe_offer_61);
                                            {11203}event Client_Rand_client(id_client_5,cr'_35);
                                            {11204}event Client_DH_client(id_client_5,dh_pub(g_70,x_791));
                                            {11205}event Client_server_domain(id_client_5,o_dom_8);
                                            {11206}let SH(sr_72: bytes32,mode_70: params) = server_hello'_48 in
                                            {11207}event Client_Rand_server(id_client_5,sr_72);
                                            {11208}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_70,gy_62: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_128: preSharedKeyExt) = mode_70 in
                                            (
                                                {11210}event Client_DH_server(id_client_5,gy_62);
                                                {11211}let v_2518: bool = (psk_ext_128 = empty_psk_ext) in
                                                {11212}let psk_283: preSharedKey = (if v_2518 then NoPsk else caught-fail) in
                                                {11214}let k_257: bitstring = (if v_2518 then catch-fail(psk2b(psk_283)) else caught-fail) in
                                                {11215}let v_2519: bool = not-caught-fail(k_257) in
                                                {11213}let s_258: bitstring = (if v_2518 then zero else caught-fail) in
                                                {11216}let early_secret_190: bitstring = (if v_2518 then catch-fail((if v_2519 then hmac(@8_tls_h,s_258,k_257) else fail-any)) else caught-fail) in
                                                {11217}let v_2520: bool = not-caught-fail(early_secret_190) in
                                                {11219}let m_251: bitstring = (if v_2520 then zero else caught-fail) in
                                                {11220}let h_667: bitstring = (if v_2520 then catch-fail(hash(@8_tls_h,m_251)) else caught-fail) in
                                                {11221}let v_2521: bool = not-caught-fail(h_667) in
                                                {11218}let l_698: label = (if v_2520 then tls13_ext_res_binder else caught-fail) in
                                                {11222}let x_792: bitstring = (if v_2521 then (l_698,h_667) else caught-fail) in
                                                {11223}let binder_key_127: bitstring = (if v_2520 then catch-fail((if v_2521 then hmac(@8_tls_h,early_secret_190,x_792) else fail-any)) else caught-fail) in
                                                {11224}let v_2522: bool = not-caught-fail(binder_key_127) in
                                                {11225}let v_2523: bitstring = (if v_2518 then catch-fail((if v_2520 then (if v_2522 then (early_secret_190,binder_key_127) else fail-any) else fail-any)) else caught-fail) in
                                                {11226}let v_2524: bool = (not-caught-fail(v_2523) && success?(1-proj-2-tuple(v_2523))) in
                                                {11227}let kb_127: mac_key = (if v_2524 then 2-proj-2-tuple(v_2523) else caught-fail) in
                                                {11228}let es_191: bitstring = (if v_2524 then 1-proj-2-tuple(v_2523) else caught-fail) in
                                                {11229}let v_2525: bitstring = (if not(v_2518) then catch-fail(psk_data'_53) else caught-fail) in
                                                {11230}let v_2526: bool = (not-caught-fail(v_2525) && success?(1-proj-4-tuple(v_2525))) in
                                                {11231}let is_safe_115: bool = (if v_2526 then 4-proj-4-tuple(v_2525) else caught-fail) in
                                                {11232}let es_192: bitstring = (if v_2526 then 3-proj-4-tuple(v_2525) else caught-fail) in
                                                {11233}let id_130: identityPsk = (if v_2526 then 2-proj-4-tuple(v_2525) else caught-fail) in
                                                {11234}let psk_284: preSharedKey = (if v_2526 then 1-proj-4-tuple(v_2525) else caught-fail) in
                                                {11235}let (psk_285: preSharedKey,early_secret_191: bitstring,valid_61: bool,safe_psk_67: bool) = (if v_2518 then (if v_2524 then (NoPsk,es_191,true,false) else fail-any) else (if v_2526 then (psk_284,es_192,((psk_284 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_128)),is_safe_115) else fail-any)) in
                                                {11236}event Client_PSKChoosen(id_client_5,psk_285,safe_psk_67);
                                                {11237}if valid_61 then
                                                (
                                                    {11240}new s_259[]: seed;
                                                    {11238}let gxy_124: element = catch-fail(dh_decap_fun(g_70,gy_62,x_791)) in
                                                    {11239}let v_2527: bool = not-caught-fail(gxy_124) in
                                                    {11241}let gxy_125: element = (if v_2527 then gxy_124 else dh_f(s_259)) in
                                                    {11242}event Client_DH_gxy(id_client_5,gxy_125);
                                                    {11244}let m_252: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {11245}let v_2528: bool = not-caught-fail(m_252) in
                                                    {11246}let h_668: bitstring = (if v_2528 then catch-fail(hash(@8_tls_h,m_252)) else caught-fail) in
                                                    {11247}let v_2529: bool = not-caught-fail(h_668) in
                                                    {11243}let l_699: label = tls13_derived in
                                                    {11248}let x_793: bitstring = (if v_2529 then (l_699,h_668) else caught-fail) in
                                                    {11249}let extra_134: bitstring = catch-fail((if v_2528 then (if v_2529 then hmac(@8_tls_h,early_secret_191,x_793) else fail-any) else fail-any)) in
                                                    {11250}let v_2530: bool = not-caught-fail(extra_134) in
                                                    {11251}let handshake_secret_62: bitstring = (if v_2530 then hmac(@8_tls_h,extra_134,gxy_125) else fail-any) in
                                                    {11253}let m_253: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                    {11254}let v_2531: bool = not-caught-fail(m_253) in
                                                    {11255}let h_669: bitstring = (if v_2531 then catch-fail(hash(@8_tls_h,m_253)) else caught-fail) in
                                                    {11256}let v_2532: bool = not-caught-fail(h_669) in
                                                    {11252}let l_700: label = tls13_derived in
                                                    {11257}let x_794: bitstring = (if v_2532 then (l_700,h_669) else caught-fail) in
                                                    {11258}let extra_135: bitstring = catch-fail((if v_2531 then (if v_2532 then hmac(@8_tls_h,handshake_secret_62,x_794) else fail-any) else fail-any)) in
                                                    {11259}let v_2533: bool = not-caught-fail(extra_135) in
                                                    {11260}let k_258: bitstring = (if v_2533 then zero else caught-fail) in
                                                    {11261}let master_secret_131: bitstring = (if v_2533 then catch-fail(hmac(@8_tls_h,handshake_secret_62,k_258)) else caught-fail) in
                                                    {11262}let v_2534: bool = not-caught-fail(master_secret_131) in
                                                    {11195}let cur_log_OU1_HRR_OU2_21: bitstring = (cur_log_OU1_HRR_5,client_hello'_33) in
                                                    {11209}let cur_log2_129: bitstring = (cur_log_OU1_HRR_OU2_21,server_hello'_48) in
                                                    {11264}let h_670: bitstring = (if v_2534 then catch-fail(hash(@8_tls_h,cur_log2_129)) else caught-fail) in
                                                    {11265}let v_2535: bool = not-caught-fail(h_670) in
                                                    {11263}let l_701: label = (if v_2534 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                    {11266}let x_795: bitstring = (if v_2535 then (l_701,h_670) else caught-fail) in
                                                    {11267}let client_hts_62: bitstring = (if v_2534 then catch-fail((if v_2535 then hmac(@8_tls_h,handshake_secret_62,x_795) else fail-any)) else caught-fail) in
                                                    {11268}let v_2536: bool = not-caught-fail(client_hts_62) in
                                                    {11270}let h_671: bitstring = (if v_2536 then catch-fail(hash(@8_tls_h,cur_log2_129)) else caught-fail) in
                                                    {11271}let v_2537: bool = not-caught-fail(h_671) in
                                                    {11269}let l_702: label = (if v_2536 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                    {11272}let x_796: bitstring = (if v_2537 then (l_702,h_671) else caught-fail) in
                                                    {11273}let server_hts_62: bitstring = (if v_2536 then catch-fail((if v_2537 then hmac(@8_tls_h,handshake_secret_62,x_796) else fail-any)) else caught-fail) in
                                                    {11274}let v_2538: bool = not-caught-fail(server_hts_62) in
                                                    {11276}let h_672: bitstring = (if v_2538 then zero else caught-fail) in
                                                    {11275}let l_703: label = (if v_2538 then tls13_key else caught-fail) in
                                                    {11277}let x_797: bitstring = (if v_2538 then (l_703,h_672) else caught-fail) in
                                                    {11278}let client_wkh_62: bitstring = (if v_2538 then catch-fail(hmac(@8_tls_h,client_hts_62,x_797)) else caught-fail) in
                                                    {11279}let v_2539: bool = not-caught-fail(client_wkh_62) in
                                                    {11281}let h_673: bitstring = (if v_2539 then zero else caught-fail) in
                                                    {11280}let l_704: label = (if v_2539 then tls13_key else caught-fail) in
                                                    {11282}let x_798: bitstring = (if v_2539 then (l_704,h_673) else caught-fail) in
                                                    {11283}let server_wkh_62: bitstring = (if v_2539 then catch-fail(hmac(@8_tls_h,server_hts_62,x_798)) else caught-fail) in
                                                    {11284}let v_2540: bool = not-caught-fail(server_wkh_62) in
                                                    {11286}let h_674: bitstring = (if v_2540 then zero else caught-fail) in
                                                    {11285}let l_705: label = (if v_2540 then tls13_finished else caught-fail) in
                                                    {11287}let x_799: bitstring = (if v_2540 then (l_705,h_674) else caught-fail) in
                                                    {11288}let client_fk_62: bitstring = (if v_2540 then catch-fail(hmac(@8_tls_h,client_hts_62,x_799)) else caught-fail) in
                                                    {11289}let v_2541: bool = not-caught-fail(client_fk_62) in
                                                    {11291}let h_675: bitstring = (if v_2541 then zero else caught-fail) in
                                                    {11290}let l_706: label = (if v_2541 then tls13_finished else caught-fail) in
                                                    {11292}let x_800: bitstring = (if v_2541 then (l_706,h_675) else caught-fail) in
                                                    {11293}let server_fk_62: bitstring = (if v_2541 then catch-fail(hmac(@8_tls_h,server_hts_62,x_800)) else caught-fail) in
                                                    {11294}let v_2542: bool = not-caught-fail(server_fk_62) in
                                                    {11295}let (master_secret_132: bitstring,chk_69: aead_key,shk_68: aead_key,cfin_69: mac_key,sfin_68: mac_key) = (if v_2533 then (if v_2534 then (if v_2536 then (if v_2538 then (if v_2539 then (if v_2540 then (if v_2541 then (if v_2542 then (master_secret_131,client_wkh_62,server_wkh_62,client_fk_62,server_fk_62) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                    {11296}event Client_chk(id_client_5,chk_69);
                                                    {11297}event Client_shk(id_client_5,shk_68);
                                                    {11298}event Client_cfin(id_client_5,cfin_69);
                                                    {11299}event Client_sfin(id_client_5,sfin_68);
                                                    {11300}in(io, enc_ee_msg_61: bitstring);
                                                    {11301}let ee_msg_66: msg = aead_dec(@8_tls_a,shk_68,0,zero,enc_ee_msg_61) in
                                                    {11302}let EE(ech_ee_61: echExt,extra_ee_61: extraExt) = ee_msg_66 in
                                                    {11303}let cur_log2_130: bitstring = (cur_log2_129,ee_msg_66) in
                                                    {11304}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_35,sr_72,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_285,safe_psk_67,@8_comp_psk,master_secret_132,chk_69,0,shk_68,1,cfin_69,sfin_68,cur_log2_130)))
                                                )
                                                else
                                                    {11305}out(io, illegal_parameter)
                                            )
                                            else
                                                {11306}out(io, illegal_parameter)
                                    )
                                    else
                                        {11307}out(io, unexpected_message)
                            )
                            else
                                {11309}let psk_286: preSharedKey = NoPsk in
                                {11311}let k_259: bitstring = catch-fail(psk2b(psk_286)) in
                                {11312}let v_2543: bool = not-caught-fail(k_259) in
                                {11310}let s_260: bitstring = zero in
                                {11313}let early_secret_192: bitstring = catch-fail((if v_2543 then hmac(@8_tls_h,s_260,k_259) else fail-any)) in
                                {11314}let v_2544: bool = not-caught-fail(early_secret_192) in
                                {11316}let m_254: bitstring = (if v_2544 then zero else caught-fail) in
                                {11317}let h_676: bitstring = (if v_2544 then catch-fail(hash(@8_tls_h,m_254)) else caught-fail) in
                                {11318}let v_2545: bool = not-caught-fail(h_676) in
                                {11315}let l_707: label = (if v_2544 then tls13_ext_res_binder else caught-fail) in
                                {11319}let x_801: bitstring = (if v_2545 then (l_707,h_676) else caught-fail) in
                                {11320}let binder_key_128: bitstring = (if v_2544 then catch-fail((if v_2545 then hmac(@8_tls_h,early_secret_192,x_801) else fail-any)) else caught-fail) in
                                {11321}let v_2546: bool = not-caught-fail(binder_key_128) in
                                {11322}let v_2547: bitstring = catch-fail((if v_2544 then (if v_2546 then (early_secret_192,binder_key_128) else fail-any) else fail-any)) in
                                {11323}let v_2548: bool = (not-caught-fail(v_2547) && success?(1-proj-2-tuple(v_2547))) in
                                {11324}let kb_128: mac_key = (if v_2548 then 2-proj-2-tuple(v_2547) else caught-fail) in
                                {11325}let es_193: bitstring = (if v_2548 then 1-proj-2-tuple(v_2547) else caught-fail) in
                                {11326}let v_2549: bitstring = catch-fail((if v_2548 then (empty_psk_ext,(NoPsk,zero,es_193,false)) else fail-any)) in
                                {11327}let v_2550: bool = (not-caught-fail(v_2549) && success?(1-proj-2-tuple(v_2549))) in
                                {11328}let psk_data_67: bitstring = (if v_2550 then 2-proj-2-tuple(v_2549) else caught-fail) in
                                {11329}let psk_ext_129: preSharedKeyExt = (if v_2550 then 1-proj-2-tuple(v_2549) else caught-fail) in
                                {11330}let o_offer_52: params = (if v_2550 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_13,SNI(o_dom_15),o_ech_ext_26,empty_extra_ext,psk_ext_129) else caught-fail) in
                                {11331}let (client_hello'_34: msg,cr'_36: bytes32,kex_data'_31: bitstring,psk_data'_54: bitstring) = (if v_2550 then (CH(o_cr_19,o_offer_52),o_cr_19,kex_data_12,psk_data_67) else fail-any) in
                                {11332}out(io, client_hello'_34);
                                {11334}in(io, server_hello'_49: msg);
                                {11335}let SH(sr'_31: bytes32,mode'_31: params) = server_hello'_49 in
                                (
                                    {11336}if (sr'_31 = B32(HRR24,HRR8)) then
                                        {11337}out(io, unexpected_message)
                                    else
                                        {11338}let (x_802: bitstring,g_71: group) = kex_data'_31 in
                                        {11339}let (psk_offer_62: preSharedKey,id_offer_62: identityPsk,es_offer_62: bitstring,is_safe_offer_62: bool) = psk_data'_54 in
                                        {11340}event Client_PSKOffer(id_client_5,psk_offer_62,id_offer_62,is_safe_offer_62);
                                        {11341}event Client_Rand_client(id_client_5,cr'_36);
                                        {11342}event Client_DH_client(id_client_5,dh_pub(g_71,x_802));
                                        {11343}event Client_server_domain(id_client_5,o_dom_8);
                                        {11344}let SH(sr_73: bytes32,mode_71: params) = server_hello'_49 in
                                        {11345}event Client_Rand_server(id_client_5,sr_73);
                                        {11346}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_71,gy_63: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_130: preSharedKeyExt) = mode_71 in
                                        (
                                            {11348}event Client_DH_server(id_client_5,gy_63);
                                            {11349}let v_2551: bool = (psk_ext_130 = empty_psk_ext) in
                                            {11350}let psk_287: preSharedKey = (if v_2551 then NoPsk else caught-fail) in
                                            {11352}let k_260: bitstring = (if v_2551 then catch-fail(psk2b(psk_287)) else caught-fail) in
                                            {11353}let v_2552: bool = not-caught-fail(k_260) in
                                            {11351}let s_261: bitstring = (if v_2551 then zero else caught-fail) in
                                            {11354}let early_secret_193: bitstring = (if v_2551 then catch-fail((if v_2552 then hmac(@8_tls_h,s_261,k_260) else fail-any)) else caught-fail) in
                                            {11355}let v_2553: bool = not-caught-fail(early_secret_193) in
                                            {11357}let m_255: bitstring = (if v_2553 then zero else caught-fail) in
                                            {11358}let h_677: bitstring = (if v_2553 then catch-fail(hash(@8_tls_h,m_255)) else caught-fail) in
                                            {11359}let v_2554: bool = not-caught-fail(h_677) in
                                            {11356}let l_708: label = (if v_2553 then tls13_ext_res_binder else caught-fail) in
                                            {11360}let x_803: bitstring = (if v_2554 then (l_708,h_677) else caught-fail) in
                                            {11361}let binder_key_129: bitstring = (if v_2553 then catch-fail((if v_2554 then hmac(@8_tls_h,early_secret_193,x_803) else fail-any)) else caught-fail) in
                                            {11362}let v_2555: bool = not-caught-fail(binder_key_129) in
                                            {11363}let v_2556: bitstring = (if v_2551 then catch-fail((if v_2553 then (if v_2555 then (early_secret_193,binder_key_129) else fail-any) else fail-any)) else caught-fail) in
                                            {11364}let v_2557: bool = (not-caught-fail(v_2556) && success?(1-proj-2-tuple(v_2556))) in
                                            {11365}let kb_129: mac_key = (if v_2557 then 2-proj-2-tuple(v_2556) else caught-fail) in
                                            {11366}let es_194: bitstring = (if v_2557 then 1-proj-2-tuple(v_2556) else caught-fail) in
                                            {11367}let v_2558: bitstring = (if not(v_2551) then catch-fail(psk_data'_54) else caught-fail) in
                                            {11368}let v_2559: bool = (not-caught-fail(v_2558) && success?(1-proj-4-tuple(v_2558))) in
                                            {11369}let is_safe_116: bool = (if v_2559 then 4-proj-4-tuple(v_2558) else caught-fail) in
                                            {11370}let es_195: bitstring = (if v_2559 then 3-proj-4-tuple(v_2558) else caught-fail) in
                                            {11371}let id_131: identityPsk = (if v_2559 then 2-proj-4-tuple(v_2558) else caught-fail) in
                                            {11372}let psk_288: preSharedKey = (if v_2559 then 1-proj-4-tuple(v_2558) else caught-fail) in
                                            {11373}let (psk_289: preSharedKey,early_secret_194: bitstring,valid_62: bool,safe_psk_68: bool) = (if v_2551 then (if v_2557 then (NoPsk,es_194,true,false) else fail-any) else (if v_2559 then (psk_288,es_195,((psk_288 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_130)),is_safe_116) else fail-any)) in
                                            {11374}event Client_PSKChoosen(id_client_5,psk_289,safe_psk_68);
                                            {11375}if valid_62 then
                                            (
                                                {11378}new s_262[]: seed;
                                                {11376}let gxy_126: element = catch-fail(dh_decap_fun(g_71,gy_63,x_802)) in
                                                {11377}let v_2560: bool = not-caught-fail(gxy_126) in
                                                {11379}let gxy_127: element = (if v_2560 then gxy_126 else dh_f(s_262)) in
                                                {11380}event Client_DH_gxy(id_client_5,gxy_127);
                                                {11382}let m_256: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                {11383}let v_2561: bool = not-caught-fail(m_256) in
                                                {11384}let h_678: bitstring = (if v_2561 then catch-fail(hash(@8_tls_h,m_256)) else caught-fail) in
                                                {11385}let v_2562: bool = not-caught-fail(h_678) in
                                                {11381}let l_709: label = tls13_derived in
                                                {11386}let x_804: bitstring = (if v_2562 then (l_709,h_678) else caught-fail) in
                                                {11387}let extra_136: bitstring = catch-fail((if v_2561 then (if v_2562 then hmac(@8_tls_h,early_secret_194,x_804) else fail-any) else fail-any)) in
                                                {11388}let v_2563: bool = not-caught-fail(extra_136) in
                                                {11389}let handshake_secret_63: bitstring = (if v_2563 then hmac(@8_tls_h,extra_136,gxy_127) else fail-any) in
                                                {11391}let m_257: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                                {11392}let v_2564: bool = not-caught-fail(m_257) in
                                                {11393}let h_679: bitstring = (if v_2564 then catch-fail(hash(@8_tls_h,m_257)) else caught-fail) in
                                                {11394}let v_2565: bool = not-caught-fail(h_679) in
                                                {11390}let l_710: label = tls13_derived in
                                                {11395}let x_805: bitstring = (if v_2565 then (l_710,h_679) else caught-fail) in
                                                {11396}let extra_137: bitstring = catch-fail((if v_2564 then (if v_2565 then hmac(@8_tls_h,handshake_secret_63,x_805) else fail-any) else fail-any)) in
                                                {11397}let v_2566: bool = not-caught-fail(extra_137) in
                                                {11398}let k_261: bitstring = (if v_2566 then zero else caught-fail) in
                                                {11399}let master_secret_133: bitstring = (if v_2566 then catch-fail(hmac(@8_tls_h,handshake_secret_63,k_261)) else caught-fail) in
                                                {11400}let v_2567: bool = not-caught-fail(master_secret_133) in
                                                {11333}let cur_log_OU1_HRR_OU2_22: bitstring = (cur_log_OU1_HRR_5,client_hello'_34) in
                                                {11347}let cur_log2_131: bitstring = (cur_log_OU1_HRR_OU2_22,server_hello'_49) in
                                                {11402}let h_680: bitstring = (if v_2567 then catch-fail(hash(@8_tls_h,cur_log2_131)) else caught-fail) in
                                                {11403}let v_2568: bool = not-caught-fail(h_680) in
                                                {11401}let l_711: label = (if v_2567 then tls13_client_handshake_traffic_secret else caught-fail) in
                                                {11404}let x_806: bitstring = (if v_2568 then (l_711,h_680) else caught-fail) in
                                                {11405}let client_hts_63: bitstring = (if v_2567 then catch-fail((if v_2568 then hmac(@8_tls_h,handshake_secret_63,x_806) else fail-any)) else caught-fail) in
                                                {11406}let v_2569: bool = not-caught-fail(client_hts_63) in
                                                {11408}let h_681: bitstring = (if v_2569 then catch-fail(hash(@8_tls_h,cur_log2_131)) else caught-fail) in
                                                {11409}let v_2570: bool = not-caught-fail(h_681) in
                                                {11407}let l_712: label = (if v_2569 then tls13_server_handshake_traffic_secret else caught-fail) in
                                                {11410}let x_807: bitstring = (if v_2570 then (l_712,h_681) else caught-fail) in
                                                {11411}let server_hts_63: bitstring = (if v_2569 then catch-fail((if v_2570 then hmac(@8_tls_h,handshake_secret_63,x_807) else fail-any)) else caught-fail) in
                                                {11412}let v_2571: bool = not-caught-fail(server_hts_63) in
                                                {11414}let h_682: bitstring = (if v_2571 then zero else caught-fail) in
                                                {11413}let l_713: label = (if v_2571 then tls13_key else caught-fail) in
                                                {11415}let x_808: bitstring = (if v_2571 then (l_713,h_682) else caught-fail) in
                                                {11416}let client_wkh_63: bitstring = (if v_2571 then catch-fail(hmac(@8_tls_h,client_hts_63,x_808)) else caught-fail) in
                                                {11417}let v_2572: bool = not-caught-fail(client_wkh_63) in
                                                {11419}let h_683: bitstring = (if v_2572 then zero else caught-fail) in
                                                {11418}let l_714: label = (if v_2572 then tls13_key else caught-fail) in
                                                {11420}let x_809: bitstring = (if v_2572 then (l_714,h_683) else caught-fail) in
                                                {11421}let server_wkh_63: bitstring = (if v_2572 then catch-fail(hmac(@8_tls_h,server_hts_63,x_809)) else caught-fail) in
                                                {11422}let v_2573: bool = not-caught-fail(server_wkh_63) in
                                                {11424}let h_684: bitstring = (if v_2573 then zero else caught-fail) in
                                                {11423}let l_715: label = (if v_2573 then tls13_finished else caught-fail) in
                                                {11425}let x_810: bitstring = (if v_2573 then (l_715,h_684) else caught-fail) in
                                                {11426}let client_fk_63: bitstring = (if v_2573 then catch-fail(hmac(@8_tls_h,client_hts_63,x_810)) else caught-fail) in
                                                {11427}let v_2574: bool = not-caught-fail(client_fk_63) in
                                                {11429}let h_685: bitstring = (if v_2574 then zero else caught-fail) in
                                                {11428}let l_716: label = (if v_2574 then tls13_finished else caught-fail) in
                                                {11430}let x_811: bitstring = (if v_2574 then (l_716,h_685) else caught-fail) in
                                                {11431}let server_fk_63: bitstring = (if v_2574 then catch-fail(hmac(@8_tls_h,server_hts_63,x_811)) else caught-fail) in
                                                {11432}let v_2575: bool = not-caught-fail(server_fk_63) in
                                                {11433}let (master_secret_134: bitstring,chk_70: aead_key,shk_69: aead_key,cfin_70: mac_key,sfin_69: mac_key) = (if v_2566 then (if v_2567 then (if v_2569 then (if v_2571 then (if v_2572 then (if v_2573 then (if v_2574 then (if v_2575 then (master_secret_133,client_wkh_63,server_wkh_63,client_fk_63,server_fk_63) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                                {11434}event Client_chk(id_client_5,chk_70);
                                                {11435}event Client_shk(id_client_5,shk_69);
                                                {11436}event Client_cfin(id_client_5,cfin_70);
                                                {11437}event Client_sfin(id_client_5,sfin_69);
                                                {11438}in(io, enc_ee_msg_62: bitstring);
                                                {11439}let ee_msg_67: msg = aead_dec(@8_tls_a,shk_69,0,zero,enc_ee_msg_62) in
                                                {11440}let EE(ech_ee_62: echExt,extra_ee_62: extraExt) = ee_msg_67 in
                                                {11441}let cur_log2_132: bitstring = (cur_log2_131,ee_msg_67) in
                                                {11442}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_36,sr_73,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_289,safe_psk_68,@8_comp_psk,master_secret_134,chk_70,0,shk_69,1,cfin_70,sfin_69,cur_log2_132)))
                                            )
                                            else
                                                {11443}out(io, illegal_parameter)
                                        )
                                        else
                                            {11444}out(io, illegal_parameter)
                                )
                                else
                                    {11445}out(io, unexpected_message)
                        )
                        else
                            {11446}let psk_290: preSharedKey = NoPsk in
                            {11448}let k_262: bitstring = catch-fail(psk2b(psk_290)) in
                            {11449}let v_2576: bool = not-caught-fail(k_262) in
                            {11447}let s_263: bitstring = zero in
                            {11450}let early_secret_195: bitstring = catch-fail((if v_2576 then hmac(@8_tls_h,s_263,k_262) else fail-any)) in
                            {11451}let v_2577: bool = not-caught-fail(early_secret_195) in
                            {11453}let m_258: bitstring = (if v_2577 then zero else caught-fail) in
                            {11454}let h_686: bitstring = (if v_2577 then catch-fail(hash(@8_tls_h,m_258)) else caught-fail) in
                            {11455}let v_2578: bool = not-caught-fail(h_686) in
                            {11452}let l_717: label = (if v_2577 then tls13_ext_res_binder else caught-fail) in
                            {11456}let x_812: bitstring = (if v_2578 then (l_717,h_686) else caught-fail) in
                            {11457}let binder_key_130: bitstring = (if v_2577 then catch-fail((if v_2578 then hmac(@8_tls_h,early_secret_195,x_812) else fail-any)) else caught-fail) in
                            {11458}let v_2579: bool = not-caught-fail(binder_key_130) in
                            {11459}let v_2580: bitstring = catch-fail((if v_2577 then (if v_2579 then (early_secret_195,binder_key_130) else fail-any) else fail-any)) in
                            {11460}let v_2581: bool = (not-caught-fail(v_2580) && success?(1-proj-2-tuple(v_2580))) in
                            {11461}let kb_130: mac_key = (if v_2581 then 2-proj-2-tuple(v_2580) else caught-fail) in
                            {11462}let es_196: bitstring = (if v_2581 then 1-proj-2-tuple(v_2580) else caught-fail) in
                            {11463}let v_2582: preSharedKeyExt = (if v_2581 then catch-fail(o_psk_ext_26) else caught-fail) in
                            {11464}let v_2583: bool = (not-caught-fail(v_2582) && success?(1-proj-client_psk_ext(v_2582))) in
                            {11465}let fake_binder_29: bitstring = (if v_2583 then 2-proj-client_psk_ext(v_2582) else caught-fail) in
                            {11466}let fake_id_29: identityPsk = (if v_2583 then 1-proj-client_psk_ext(v_2582) else caught-fail) in
                            {11467}new fake_binder'_5[]: bitstring;
                            {11468}let v_2584: bitstring = catch-fail((if v_2581 then (if v_2583 then (client_psk_ext(fake_id_29,fake_binder'_5),(NoPsk,zero,es_196,false)) else (empty_psk_ext,(NoPsk,zero,es_196,false))) else fail-any)) in
                            {11469}let v_2585: bool = (not-caught-fail(v_2584) && success?(1-proj-2-tuple(v_2584))) in
                            {11470}let psk_data_68: bitstring = (if v_2585 then 2-proj-2-tuple(v_2584) else caught-fail) in
                            {11471}let psk_ext_131: preSharedKeyExt = (if v_2585 then 1-proj-2-tuple(v_2584) else caught-fail) in
                            {11472}let o_offer_53: params = (if v_2585 then nego(TLS13,@8_tls_h,@8_tls_a,o_kex_ext_13,SNI(o_dom_15),o_ech_ext_26,empty_extra_ext,psk_ext_131) else caught-fail) in
                            {11473}let (client_hello'_35: msg,cr'_37: bytes32,kex_data'_32: bitstring,psk_data'_55: bitstring) = (if v_2585 then (CH(o_cr_19,o_offer_53),o_cr_19,kex_data_12,psk_data_68) else fail-any) in
                            {11474}out(io, client_hello'_35);
                            {11476}in(io, server_hello'_50: msg);
                            {11477}let SH(sr'_32: bytes32,mode'_32: params) = server_hello'_50 in
                            (
                                {11478}if (sr'_32 = B32(HRR24,HRR8)) then
                                    {11479}out(io, unexpected_message)
                                else
                                    {11480}let (x_813: bitstring,g_72: group) = kex_data'_32 in
                                    {11481}let (psk_offer_63: preSharedKey,id_offer_63: identityPsk,es_offer_63: bitstring,is_safe_offer_63: bool) = psk_data'_55 in
                                    {11482}event Client_PSKOffer(id_client_5,psk_offer_63,id_offer_63,is_safe_offer_63);
                                    {11483}event Client_Rand_client(id_client_5,cr'_37);
                                    {11484}event Client_DH_client(id_client_5,dh_pub(g_72,x_813));
                                    {11485}event Client_server_domain(id_client_5,o_dom_8);
                                    {11486}let SH(sr_74: bytes32,mode_72: params) = server_hello'_50 in
                                    {11487}event Client_Rand_server(id_client_5,sr_74);
                                    {11488}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_72,gy_64: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_132: preSharedKeyExt) = mode_72 in
                                    (
                                        {11490}event Client_DH_server(id_client_5,gy_64);
                                        {11491}let v_2586: bool = (psk_ext_132 = empty_psk_ext) in
                                        {11492}let psk_291: preSharedKey = (if v_2586 then NoPsk else caught-fail) in
                                        {11494}let k_263: bitstring = (if v_2586 then catch-fail(psk2b(psk_291)) else caught-fail) in
                                        {11495}let v_2587: bool = not-caught-fail(k_263) in
                                        {11493}let s_264: bitstring = (if v_2586 then zero else caught-fail) in
                                        {11496}let early_secret_196: bitstring = (if v_2586 then catch-fail((if v_2587 then hmac(@8_tls_h,s_264,k_263) else fail-any)) else caught-fail) in
                                        {11497}let v_2588: bool = not-caught-fail(early_secret_196) in
                                        {11499}let m_259: bitstring = (if v_2588 then zero else caught-fail) in
                                        {11500}let h_687: bitstring = (if v_2588 then catch-fail(hash(@8_tls_h,m_259)) else caught-fail) in
                                        {11501}let v_2589: bool = not-caught-fail(h_687) in
                                        {11498}let l_718: label = (if v_2588 then tls13_ext_res_binder else caught-fail) in
                                        {11502}let x_814: bitstring = (if v_2589 then (l_718,h_687) else caught-fail) in
                                        {11503}let binder_key_131: bitstring = (if v_2588 then catch-fail((if v_2589 then hmac(@8_tls_h,early_secret_196,x_814) else fail-any)) else caught-fail) in
                                        {11504}let v_2590: bool = not-caught-fail(binder_key_131) in
                                        {11505}let v_2591: bitstring = (if v_2586 then catch-fail((if v_2588 then (if v_2590 then (early_secret_196,binder_key_131) else fail-any) else fail-any)) else caught-fail) in
                                        {11506}let v_2592: bool = (not-caught-fail(v_2591) && success?(1-proj-2-tuple(v_2591))) in
                                        {11507}let kb_131: mac_key = (if v_2592 then 2-proj-2-tuple(v_2591) else caught-fail) in
                                        {11508}let es_197: bitstring = (if v_2592 then 1-proj-2-tuple(v_2591) else caught-fail) in
                                        {11509}let v_2593: bitstring = (if not(v_2586) then catch-fail(psk_data'_55) else caught-fail) in
                                        {11510}let v_2594: bool = (not-caught-fail(v_2593) && success?(1-proj-4-tuple(v_2593))) in
                                        {11511}let is_safe_117: bool = (if v_2594 then 4-proj-4-tuple(v_2593) else caught-fail) in
                                        {11512}let es_198: bitstring = (if v_2594 then 3-proj-4-tuple(v_2593) else caught-fail) in
                                        {11513}let id_132: identityPsk = (if v_2594 then 2-proj-4-tuple(v_2593) else caught-fail) in
                                        {11514}let psk_292: preSharedKey = (if v_2594 then 1-proj-4-tuple(v_2593) else caught-fail) in
                                        {11515}let (psk_293: preSharedKey,early_secret_197: bitstring,valid_63: bool,safe_psk_69: bool) = (if v_2586 then (if v_2592 then (NoPsk,es_197,true,false) else fail-any) else (if v_2594 then (psk_292,es_198,((psk_292 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_132)),is_safe_117) else fail-any)) in
                                        {11516}event Client_PSKChoosen(id_client_5,psk_293,safe_psk_69);
                                        {11517}if valid_63 then
                                        (
                                            {11520}new s_265[]: seed;
                                            {11518}let gxy_128: element = catch-fail(dh_decap_fun(g_72,gy_64,x_813)) in
                                            {11519}let v_2595: bool = not-caught-fail(gxy_128) in
                                            {11521}let gxy_129: element = (if v_2595 then gxy_128 else dh_f(s_265)) in
                                            {11522}event Client_DH_gxy(id_client_5,gxy_129);
                                            {11524}let m_260: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                            {11525}let v_2596: bool = not-caught-fail(m_260) in
                                            {11526}let h_688: bitstring = (if v_2596 then catch-fail(hash(@8_tls_h,m_260)) else caught-fail) in
                                            {11527}let v_2597: bool = not-caught-fail(h_688) in
                                            {11523}let l_719: label = tls13_derived in
                                            {11528}let x_815: bitstring = (if v_2597 then (l_719,h_688) else caught-fail) in
                                            {11529}let extra_138: bitstring = catch-fail((if v_2596 then (if v_2597 then hmac(@8_tls_h,early_secret_197,x_815) else fail-any) else fail-any)) in
                                            {11530}let v_2598: bool = not-caught-fail(extra_138) in
                                            {11531}let handshake_secret_64: bitstring = (if v_2598 then hmac(@8_tls_h,extra_138,gxy_129) else fail-any) in
                                            {11533}let m_261: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                            {11534}let v_2599: bool = not-caught-fail(m_261) in
                                            {11535}let h_689: bitstring = (if v_2599 then catch-fail(hash(@8_tls_h,m_261)) else caught-fail) in
                                            {11536}let v_2600: bool = not-caught-fail(h_689) in
                                            {11532}let l_720: label = tls13_derived in
                                            {11537}let x_816: bitstring = (if v_2600 then (l_720,h_689) else caught-fail) in
                                            {11538}let extra_139: bitstring = catch-fail((if v_2599 then (if v_2600 then hmac(@8_tls_h,handshake_secret_64,x_816) else fail-any) else fail-any)) in
                                            {11539}let v_2601: bool = not-caught-fail(extra_139) in
                                            {11540}let k_264: bitstring = (if v_2601 then zero else caught-fail) in
                                            {11541}let master_secret_135: bitstring = (if v_2601 then catch-fail(hmac(@8_tls_h,handshake_secret_64,k_264)) else caught-fail) in
                                            {11542}let v_2602: bool = not-caught-fail(master_secret_135) in
                                            {11475}let cur_log_OU1_HRR_OU2_23: bitstring = (cur_log_OU1_HRR_5,client_hello'_35) in
                                            {11489}let cur_log2_133: bitstring = (cur_log_OU1_HRR_OU2_23,server_hello'_50) in
                                            {11544}let h_690: bitstring = (if v_2602 then catch-fail(hash(@8_tls_h,cur_log2_133)) else caught-fail) in
                                            {11545}let v_2603: bool = not-caught-fail(h_690) in
                                            {11543}let l_721: label = (if v_2602 then tls13_client_handshake_traffic_secret else caught-fail) in
                                            {11546}let x_817: bitstring = (if v_2603 then (l_721,h_690) else caught-fail) in
                                            {11547}let client_hts_64: bitstring = (if v_2602 then catch-fail((if v_2603 then hmac(@8_tls_h,handshake_secret_64,x_817) else fail-any)) else caught-fail) in
                                            {11548}let v_2604: bool = not-caught-fail(client_hts_64) in
                                            {11550}let h_691: bitstring = (if v_2604 then catch-fail(hash(@8_tls_h,cur_log2_133)) else caught-fail) in
                                            {11551}let v_2605: bool = not-caught-fail(h_691) in
                                            {11549}let l_722: label = (if v_2604 then tls13_server_handshake_traffic_secret else caught-fail) in
                                            {11552}let x_818: bitstring = (if v_2605 then (l_722,h_691) else caught-fail) in
                                            {11553}let server_hts_64: bitstring = (if v_2604 then catch-fail((if v_2605 then hmac(@8_tls_h,handshake_secret_64,x_818) else fail-any)) else caught-fail) in
                                            {11554}let v_2606: bool = not-caught-fail(server_hts_64) in
                                            {11556}let h_692: bitstring = (if v_2606 then zero else caught-fail) in
                                            {11555}let l_723: label = (if v_2606 then tls13_key else caught-fail) in
                                            {11557}let x_819: bitstring = (if v_2606 then (l_723,h_692) else caught-fail) in
                                            {11558}let client_wkh_64: bitstring = (if v_2606 then catch-fail(hmac(@8_tls_h,client_hts_64,x_819)) else caught-fail) in
                                            {11559}let v_2607: bool = not-caught-fail(client_wkh_64) in
                                            {11561}let h_693: bitstring = (if v_2607 then zero else caught-fail) in
                                            {11560}let l_724: label = (if v_2607 then tls13_key else caught-fail) in
                                            {11562}let x_820: bitstring = (if v_2607 then (l_724,h_693) else caught-fail) in
                                            {11563}let server_wkh_64: bitstring = (if v_2607 then catch-fail(hmac(@8_tls_h,server_hts_64,x_820)) else caught-fail) in
                                            {11564}let v_2608: bool = not-caught-fail(server_wkh_64) in
                                            {11566}let h_694: bitstring = (if v_2608 then zero else caught-fail) in
                                            {11565}let l_725: label = (if v_2608 then tls13_finished else caught-fail) in
                                            {11567}let x_821: bitstring = (if v_2608 then (l_725,h_694) else caught-fail) in
                                            {11568}let client_fk_64: bitstring = (if v_2608 then catch-fail(hmac(@8_tls_h,client_hts_64,x_821)) else caught-fail) in
                                            {11569}let v_2609: bool = not-caught-fail(client_fk_64) in
                                            {11571}let h_695: bitstring = (if v_2609 then zero else caught-fail) in
                                            {11570}let l_726: label = (if v_2609 then tls13_finished else caught-fail) in
                                            {11572}let x_822: bitstring = (if v_2609 then (l_726,h_695) else caught-fail) in
                                            {11573}let server_fk_64: bitstring = (if v_2609 then catch-fail(hmac(@8_tls_h,server_hts_64,x_822)) else caught-fail) in
                                            {11574}let v_2610: bool = not-caught-fail(server_fk_64) in
                                            {11575}let (master_secret_136: bitstring,chk_71: aead_key,shk_70: aead_key,cfin_71: mac_key,sfin_70: mac_key) = (if v_2601 then (if v_2602 then (if v_2604 then (if v_2606 then (if v_2607 then (if v_2608 then (if v_2609 then (if v_2610 then (master_secret_135,client_wkh_64,server_wkh_64,client_fk_64,server_fk_64) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                            {11576}event Client_chk(id_client_5,chk_71);
                                            {11577}event Client_shk(id_client_5,shk_70);
                                            {11578}event Client_cfin(id_client_5,cfin_71);
                                            {11579}event Client_sfin(id_client_5,sfin_70);
                                            {11580}in(io, enc_ee_msg_63: bitstring);
                                            {11581}let ee_msg_68: msg = aead_dec(@8_tls_a,shk_70,0,zero,enc_ee_msg_63) in
                                            {11582}let EE(ech_ee_63: echExt,extra_ee_63: extraExt) = ee_msg_68 in
                                            {11583}let cur_log2_134: bitstring = (cur_log2_133,ee_msg_68) in
                                            {11584}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(cr'_37,sr_74,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_293,safe_psk_69,@8_comp_psk,master_secret_136,chk_71,0,shk_70,1,cfin_71,sfin_70,cur_log2_134)))
                                        )
                                        else
                                            {11585}out(io, illegal_parameter)
                                    )
                                    else
                                        {11586}out(io, illegal_parameter)
                            )
                            else
                                {11587}out(io, unexpected_message)
                )
                else
                    {11589}let sh_modified_24: msg = SH(B32(sr24_7,zero8),mode_65) in
                    {11588}let cur_log_33: bitstring = (zero,i_client_hello_27) in
                    {11590}let cur_log_sh_24: bitstring = (cur_log_33,sh_modified_24) in
                    {11591}let transcript_ech_conf_24: bitstring = catch-fail(hash(@8_backend_h,cur_log_sh_24)) in
                    {11592}let v_2611: bool = not-caught-fail(transcript_ech_conf_24) in
                    {11594}let k_265: bitstring = (if v_2611 then catch-fail(b32_2_b(get_random(i_client_hello_27))) else caught-fail) in
                    {11595}let v_2612: bool = not-caught-fail(k_265) in
                    {11593}let s_266: bitstring = (if v_2611 then zero else caught-fail) in
                    {11596}let k_266: bitstring = (if v_2611 then catch-fail((if v_2612 then hmac(@8_backend_h,s_266,k_265) else fail-any)) else caught-fail) in
                    {11597}let v_2613: bool = not-caught-fail(k_266) in
                    {11598}let l_727: label = (if v_2613 then ech_accept_confirmation else caught-fail) in
                    {11599}let x_823: bitstring = (if v_2613 then (l_727,cur_log_sh_24) else caught-fail) in
                    {11600}let sr8_30: bytes8 = (if v_2611 then catch-fail(crop_into_bytes8((if v_2613 then hmac(@8_backend_h,k_266,x_823) else fail-any))) else caught-fail) in
                    {11601}let v_2614: bool = not-caught-fail(sr8_30) in
                    {11602}if (B32(sr24_7,sr8_26) = (if v_2611 then (if v_2614 then B32(sr24_7,sr8_30) else fail-any) else fail-any)) then
                    (
                        {11603}event ClientEchAcceptance(id_client_5,true);
                        {11605}let (x_824: bitstring,g_73: group) = i_kex_data_12 in
                        {11606}let (psk_offer_64: preSharedKey,id_offer_64: identityPsk,es_offer_64: bitstring,is_safe_offer_64: bool) = psk_data_61 in
                        {11607}event Client_PSKOffer(id_client_5,psk_offer_64,id_offer_64,is_safe_offer_64);
                        {11608}event Client_Rand_client(id_client_5,i_cr_13);
                        {11609}event Client_DH_client(id_client_5,dh_pub(g_73,x_824));
                        {11610}event Client_server_domain(id_client_5,backend_dom_1);
                        {11611}let SH(sr_75: bytes32,mode_73: params) = server_hello_9 in
                        {11612}event Client_Rand_server(id_client_5,sr_75);
                        {11613}let nego(=TLS13,=@8_backend_h,=@8_backend_a,server_kex_ext(DHE_kex(=g_73,gy_65: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_133: preSharedKeyExt) = mode_73 in
                        (
                            {11615}event Client_DH_server(id_client_5,gy_65);
                            {11616}let v_2615: bool = (psk_ext_133 = empty_psk_ext) in
                            {11617}let psk_294: preSharedKey = (if v_2615 then NoPsk else caught-fail) in
                            {11619}let k_267: bitstring = (if v_2615 then catch-fail(psk2b(psk_294)) else caught-fail) in
                            {11620}let v_2616: bool = not-caught-fail(k_267) in
                            {11618}let s_267: bitstring = (if v_2615 then zero else caught-fail) in
                            {11621}let early_secret_198: bitstring = (if v_2615 then catch-fail((if v_2616 then hmac(@8_backend_h,s_267,k_267) else fail-any)) else caught-fail) in
                            {11622}let v_2617: bool = not-caught-fail(early_secret_198) in
                            {11624}let m_262: bitstring = (if v_2617 then zero else caught-fail) in
                            {11625}let h_696: bitstring = (if v_2617 then catch-fail(hash(@8_backend_h,m_262)) else caught-fail) in
                            {11626}let v_2618: bool = not-caught-fail(h_696) in
                            {11623}let l_728: label = (if v_2617 then tls13_ext_res_binder else caught-fail) in
                            {11627}let x_825: bitstring = (if v_2618 then (l_728,h_696) else caught-fail) in
                            {11628}let binder_key_132: bitstring = (if v_2617 then catch-fail((if v_2618 then hmac(@8_backend_h,early_secret_198,x_825) else fail-any)) else caught-fail) in
                            {11629}let v_2619: bool = not-caught-fail(binder_key_132) in
                            {11630}let v_2620: bitstring = (if v_2615 then catch-fail((if v_2617 then (if v_2619 then (early_secret_198,binder_key_132) else fail-any) else fail-any)) else caught-fail) in
                            {11631}let v_2621: bool = (not-caught-fail(v_2620) && success?(1-proj-2-tuple(v_2620))) in
                            {11632}let kb_132: mac_key = (if v_2621 then 2-proj-2-tuple(v_2620) else caught-fail) in
                            {11633}let es_199: bitstring = (if v_2621 then 1-proj-2-tuple(v_2620) else caught-fail) in
                            {11634}let v_2622: bitstring = (if not(v_2615) then catch-fail(psk_data_61) else caught-fail) in
                            {11635}let v_2623: bool = (not-caught-fail(v_2622) && success?(1-proj-4-tuple(v_2622))) in
                            {11636}let is_safe_118: bool = (if v_2623 then 4-proj-4-tuple(v_2622) else caught-fail) in
                            {11637}let es_200: bitstring = (if v_2623 then 3-proj-4-tuple(v_2622) else caught-fail) in
                            {11638}let id_133: identityPsk = (if v_2623 then 2-proj-4-tuple(v_2622) else caught-fail) in
                            {11639}let psk_295: preSharedKey = (if v_2623 then 1-proj-4-tuple(v_2622) else caught-fail) in
                            {11640}let (psk_296: preSharedKey,early_secret_199: bitstring,valid_64: bool,safe_psk_70: bool) = (if v_2615 then (if v_2621 then (NoPsk,es_199,true,false) else fail-any) else (if v_2623 then (psk_295,es_200,((psk_295 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_133)),is_safe_118) else fail-any)) in
                            {11641}event Client_PSKChoosen(id_client_5,psk_296,safe_psk_70);
                            {11642}if valid_64 then
                            (
                                {11645}new s_268[]: seed;
                                {11643}let gxy_130: element = catch-fail(dh_decap_fun(g_73,gy_65,x_824)) in
                                {11644}let v_2624: bool = not-caught-fail(gxy_130) in
                                {11646}let gxy_131: element = (if v_2624 then gxy_130 else dh_f(s_268)) in
                                {11647}event Client_DH_gxy(id_client_5,gxy_131);
                                {11649}let m_263: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                {11650}let v_2625: bool = not-caught-fail(m_263) in
                                {11651}let h_697: bitstring = (if v_2625 then catch-fail(hash(@8_backend_h,m_263)) else caught-fail) in
                                {11652}let v_2626: bool = not-caught-fail(h_697) in
                                {11648}let l_729: label = tls13_derived in
                                {11653}let x_826: bitstring = (if v_2626 then (l_729,h_697) else caught-fail) in
                                {11654}let extra_140: bitstring = catch-fail((if v_2625 then (if v_2626 then hmac(@8_backend_h,early_secret_199,x_826) else fail-any) else fail-any)) in
                                {11655}let v_2627: bool = not-caught-fail(extra_140) in
                                {11656}let handshake_secret_65: bitstring = (if v_2627 then hmac(@8_backend_h,extra_140,gxy_131) else fail-any) in
                                {11658}let m_264: bitstring = catch-fail(hash(@8_backend_h,zero)) in
                                {11659}let v_2628: bool = not-caught-fail(m_264) in
                                {11660}let h_698: bitstring = (if v_2628 then catch-fail(hash(@8_backend_h,m_264)) else caught-fail) in
                                {11661}let v_2629: bool = not-caught-fail(h_698) in
                                {11657}let l_730: label = tls13_derived in
                                {11662}let x_827: bitstring = (if v_2629 then (l_730,h_698) else caught-fail) in
                                {11663}let extra_141: bitstring = catch-fail((if v_2628 then (if v_2629 then hmac(@8_backend_h,handshake_secret_65,x_827) else fail-any) else fail-any)) in
                                {11664}let v_2630: bool = not-caught-fail(extra_141) in
                                {11665}let k_268: bitstring = (if v_2630 then zero else caught-fail) in
                                {11666}let master_secret_137: bitstring = (if v_2630 then catch-fail(hmac(@8_backend_h,handshake_secret_65,k_268)) else caught-fail) in
                                {11667}let v_2631: bool = not-caught-fail(master_secret_137) in
                                {11604}let cur_log_34: bitstring = (zero,i_client_hello_27) in
                                {11614}let cur_log2_135: bitstring = (cur_log_34,server_hello_9) in
                                {11669}let h_699: bitstring = (if v_2631 then catch-fail(hash(@8_backend_h,cur_log2_135)) else caught-fail) in
                                {11670}let v_2632: bool = not-caught-fail(h_699) in
                                {11668}let l_731: label = (if v_2631 then tls13_client_handshake_traffic_secret else caught-fail) in
                                {11671}let x_828: bitstring = (if v_2632 then (l_731,h_699) else caught-fail) in
                                {11672}let client_hts_65: bitstring = (if v_2631 then catch-fail((if v_2632 then hmac(@8_backend_h,handshake_secret_65,x_828) else fail-any)) else caught-fail) in
                                {11673}let v_2633: bool = not-caught-fail(client_hts_65) in
                                {11675}let h_700: bitstring = (if v_2633 then catch-fail(hash(@8_backend_h,cur_log2_135)) else caught-fail) in
                                {11676}let v_2634: bool = not-caught-fail(h_700) in
                                {11674}let l_732: label = (if v_2633 then tls13_server_handshake_traffic_secret else caught-fail) in
                                {11677}let x_829: bitstring = (if v_2634 then (l_732,h_700) else caught-fail) in
                                {11678}let server_hts_65: bitstring = (if v_2633 then catch-fail((if v_2634 then hmac(@8_backend_h,handshake_secret_65,x_829) else fail-any)) else caught-fail) in
                                {11679}let v_2635: bool = not-caught-fail(server_hts_65) in
                                {11681}let h_701: bitstring = (if v_2635 then zero else caught-fail) in
                                {11680}let l_733: label = (if v_2635 then tls13_key else caught-fail) in
                                {11682}let x_830: bitstring = (if v_2635 then (l_733,h_701) else caught-fail) in
                                {11683}let client_wkh_65: bitstring = (if v_2635 then catch-fail(hmac(@8_backend_h,client_hts_65,x_830)) else caught-fail) in
                                {11684}let v_2636: bool = not-caught-fail(client_wkh_65) in
                                {11686}let h_702: bitstring = (if v_2636 then zero else caught-fail) in
                                {11685}let l_734: label = (if v_2636 then tls13_key else caught-fail) in
                                {11687}let x_831: bitstring = (if v_2636 then (l_734,h_702) else caught-fail) in
                                {11688}let server_wkh_65: bitstring = (if v_2636 then catch-fail(hmac(@8_backend_h,server_hts_65,x_831)) else caught-fail) in
                                {11689}let v_2637: bool = not-caught-fail(server_wkh_65) in
                                {11691}let h_703: bitstring = (if v_2637 then zero else caught-fail) in
                                {11690}let l_735: label = (if v_2637 then tls13_finished else caught-fail) in
                                {11692}let x_832: bitstring = (if v_2637 then (l_735,h_703) else caught-fail) in
                                {11693}let client_fk_65: bitstring = (if v_2637 then catch-fail(hmac(@8_backend_h,client_hts_65,x_832)) else caught-fail) in
                                {11694}let v_2638: bool = not-caught-fail(client_fk_65) in
                                {11696}let h_704: bitstring = (if v_2638 then zero else caught-fail) in
                                {11695}let l_736: label = (if v_2638 then tls13_finished else caught-fail) in
                                {11697}let x_833: bitstring = (if v_2638 then (l_736,h_704) else caught-fail) in
                                {11698}let server_fk_65: bitstring = (if v_2638 then catch-fail(hmac(@8_backend_h,server_hts_65,x_833)) else caught-fail) in
                                {11699}let v_2639: bool = not-caught-fail(server_fk_65) in
                                {11700}let (master_secret_138: bitstring,chk_72: aead_key,shk_71: aead_key,cfin_72: mac_key,sfin_71: mac_key) = (if v_2630 then (if v_2631 then (if v_2633 then (if v_2635 then (if v_2636 then (if v_2637 then (if v_2638 then (if v_2639 then (master_secret_137,client_wkh_65,server_wkh_65,client_fk_65,server_fk_65) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                {11701}event Client_chk(id_client_5,chk_72);
                                {11702}event Client_shk(id_client_5,shk_71);
                                {11703}event Client_cfin(id_client_5,cfin_72);
                                {11704}event Client_sfin(id_client_5,sfin_71);
                                {11705}in(io, enc_ee_msg_64: bitstring);
                                {11706}let ee_msg_69: msg = aead_dec(@8_backend_a,shk_71,0,zero,enc_ee_msg_64) in
                                {11707}let EE(ech_ee_64: echExt,extra_ee_64: extraExt) = ee_msg_69 in
                                {11708}let cur_log2_136: bitstring = (cur_log2_135,ee_msg_69) in
                                {11709}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(i_cr_13,sr_75,@8_backend_h,@8_backend_a,c_dom_7,backend_dom_1,psk_296,safe_psk_70,@8_comp_psk,master_secret_138,chk_72,0,shk_71,1,cfin_72,sfin_71,cur_log2_136)))
                            )
                            else
                                {11710}out(io, illegal_parameter)
                        )
                        else
                            {11711}out(io, illegal_parameter)
                    )
                    else
                        {11712}event ClientEchAcceptance(id_client_5,false);
                        {11713}let v_2640: bool = @8_use_grease in
                        {11714}let psk_297: preSharedKey = (if not(v_2640) then NoPsk else caught-fail) in
                        {11716}let k_269: bitstring = (if not(v_2640) then catch-fail(psk2b(psk_297)) else caught-fail) in
                        {11717}let v_2641: bool = not-caught-fail(k_269) in
                        {11715}let s_269: bitstring = (if not(v_2640) then zero else caught-fail) in
                        {11718}let early_secret_200: bitstring = (if not(v_2640) then catch-fail((if v_2641 then hmac(@8_tls_h,s_269,k_269) else fail-any)) else caught-fail) in
                        {11719}let v_2642: bool = not-caught-fail(early_secret_200) in
                        {11721}let m_265: bitstring = (if v_2642 then zero else caught-fail) in
                        {11722}let h_705: bitstring = (if v_2642 then catch-fail(hash(@8_tls_h,m_265)) else caught-fail) in
                        {11723}let v_2643: bool = not-caught-fail(h_705) in
                        {11720}let l_737: label = (if v_2642 then tls13_ext_res_binder else caught-fail) in
                        {11724}let x_834: bitstring = (if v_2643 then (l_737,h_705) else caught-fail) in
                        {11725}let binder_key_133: bitstring = (if v_2642 then catch-fail((if v_2643 then hmac(@8_tls_h,early_secret_200,x_834) else fail-any)) else caught-fail) in
                        {11726}let v_2644: bool = not-caught-fail(binder_key_133) in
                        {11727}let v_2645: bitstring = (if not(v_2640) then catch-fail((if v_2642 then (if v_2644 then (early_secret_200,binder_key_133) else fail-any) else fail-any)) else caught-fail) in
                        {11728}let v_2646: bool = (not-caught-fail(v_2645) && success?(1-proj-2-tuple(v_2645))) in
                        {11729}let kb_133: mac_key = (if v_2646 then 2-proj-2-tuple(v_2645) else caught-fail) in
                        {11730}let es'_5: bitstring = (if v_2646 then 1-proj-2-tuple(v_2645) else caught-fail) in
                        {11731}let psk_data'_56: bitstring = (if v_2640 then psk_data_61 else (if v_2646 then (NoPsk,zero,es'_5,false) else fail-any)) in
                        {11733}let (x_835: bitstring,g_74: group) = o_kex_data_12 in
                        {11734}let (psk_offer_65: preSharedKey,id_offer_65: identityPsk,es_offer_65: bitstring,is_safe_offer_65: bool) = psk_data'_56 in
                        {11735}event Client_PSKOffer(id_client_5,psk_offer_65,id_offer_65,is_safe_offer_65);
                        {11736}event Client_Rand_client(id_client_5,o_cr_17);
                        {11737}event Client_DH_client(id_client_5,dh_pub(g_74,x_835));
                        {11738}event Client_server_domain(id_client_5,o_dom_8);
                        {11739}let SH(sr_76: bytes32,mode_74: params) = server_hello_9 in
                        {11740}event Client_Rand_server(id_client_5,sr_76);
                        {11741}let nego(=TLS13,=@8_tls_h,=@8_tls_a,server_kex_ext(DHE_kex(=g_74,gy_66: element)),=empty_sni_ext,=empty_ech_ext,=empty_extra_ext,psk_ext_134: preSharedKeyExt) = mode_74 in
                        (
                            {11743}event Client_DH_server(id_client_5,gy_66);
                            {11744}let v_2647: bool = (psk_ext_134 = empty_psk_ext) in
                            {11745}let psk_298: preSharedKey = (if v_2647 then NoPsk else caught-fail) in
                            {11747}let k_270: bitstring = (if v_2647 then catch-fail(psk2b(psk_298)) else caught-fail) in
                            {11748}let v_2648: bool = not-caught-fail(k_270) in
                            {11746}let s_270: bitstring = (if v_2647 then zero else caught-fail) in
                            {11749}let early_secret_201: bitstring = (if v_2647 then catch-fail((if v_2648 then hmac(@8_tls_h,s_270,k_270) else fail-any)) else caught-fail) in
                            {11750}let v_2649: bool = not-caught-fail(early_secret_201) in
                            {11752}let m_266: bitstring = (if v_2649 then zero else caught-fail) in
                            {11753}let h_706: bitstring = (if v_2649 then catch-fail(hash(@8_tls_h,m_266)) else caught-fail) in
                            {11754}let v_2650: bool = not-caught-fail(h_706) in
                            {11751}let l_738: label = (if v_2649 then tls13_ext_res_binder else caught-fail) in
                            {11755}let x_836: bitstring = (if v_2650 then (l_738,h_706) else caught-fail) in
                            {11756}let binder_key_134: bitstring = (if v_2649 then catch-fail((if v_2650 then hmac(@8_tls_h,early_secret_201,x_836) else fail-any)) else caught-fail) in
                            {11757}let v_2651: bool = not-caught-fail(binder_key_134) in
                            {11758}let v_2652: bitstring = (if v_2647 then catch-fail((if v_2649 then (if v_2651 then (early_secret_201,binder_key_134) else fail-any) else fail-any)) else caught-fail) in
                            {11759}let v_2653: bool = (not-caught-fail(v_2652) && success?(1-proj-2-tuple(v_2652))) in
                            {11760}let kb_134: mac_key = (if v_2653 then 2-proj-2-tuple(v_2652) else caught-fail) in
                            {11761}let es_201: bitstring = (if v_2653 then 1-proj-2-tuple(v_2652) else caught-fail) in
                            {11762}let v_2654: bitstring = (if not(v_2647) then catch-fail(psk_data'_56) else caught-fail) in
                            {11763}let v_2655: bool = (not-caught-fail(v_2654) && success?(1-proj-4-tuple(v_2654))) in
                            {11764}let is_safe_119: bool = (if v_2655 then 4-proj-4-tuple(v_2654) else caught-fail) in
                            {11765}let es_202: bitstring = (if v_2655 then 3-proj-4-tuple(v_2654) else caught-fail) in
                            {11766}let id_134: identityPsk = (if v_2655 then 2-proj-4-tuple(v_2654) else caught-fail) in
                            {11767}let psk_299: preSharedKey = (if v_2655 then 1-proj-4-tuple(v_2654) else caught-fail) in
                            {11768}let (psk_300: preSharedKey,early_secret_202: bitstring,valid_65: bool,safe_psk_71: bool) = (if v_2647 then (if v_2653 then (NoPsk,es_201,true,false) else fail-any) else (if v_2655 then (psk_299,es_202,((psk_299 ≠ NoPsk) && (server_psk_ext(1) = psk_ext_134)),is_safe_119) else fail-any)) in
                            {11769}event Client_PSKChoosen(id_client_5,psk_300,safe_psk_71);
                            {11770}if valid_65 then
                            (
                                {11773}new s_271[]: seed;
                                {11771}let gxy_132: element = catch-fail(dh_decap_fun(g_74,gy_66,x_835)) in
                                {11772}let v_2656: bool = not-caught-fail(gxy_132) in
                                {11774}let gxy_133: element = (if v_2656 then gxy_132 else dh_f(s_271)) in
                                {11775}event Client_DH_gxy(id_client_5,gxy_133);
                                {11777}let m_267: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                {11778}let v_2657: bool = not-caught-fail(m_267) in
                                {11779}let h_707: bitstring = (if v_2657 then catch-fail(hash(@8_tls_h,m_267)) else caught-fail) in
                                {11780}let v_2658: bool = not-caught-fail(h_707) in
                                {11776}let l_739: label = tls13_derived in
                                {11781}let x_837: bitstring = (if v_2658 then (l_739,h_707) else caught-fail) in
                                {11782}let extra_142: bitstring = catch-fail((if v_2657 then (if v_2658 then hmac(@8_tls_h,early_secret_202,x_837) else fail-any) else fail-any)) in
                                {11783}let v_2659: bool = not-caught-fail(extra_142) in
                                {11784}let handshake_secret_66: bitstring = (if v_2659 then hmac(@8_tls_h,extra_142,gxy_133) else fail-any) in
                                {11786}let m_268: bitstring = catch-fail(hash(@8_tls_h,zero)) in
                                {11787}let v_2660: bool = not-caught-fail(m_268) in
                                {11788}let h_708: bitstring = (if v_2660 then catch-fail(hash(@8_tls_h,m_268)) else caught-fail) in
                                {11789}let v_2661: bool = not-caught-fail(h_708) in
                                {11785}let l_740: label = tls13_derived in
                                {11790}let x_838: bitstring = (if v_2661 then (l_740,h_708) else caught-fail) in
                                {11791}let extra_143: bitstring = catch-fail((if v_2660 then (if v_2661 then hmac(@8_tls_h,handshake_secret_66,x_838) else fail-any) else fail-any)) in
                                {11792}let v_2662: bool = not-caught-fail(extra_143) in
                                {11793}let k_271: bitstring = (if v_2662 then zero else caught-fail) in
                                {11794}let master_secret_139: bitstring = (if v_2662 then catch-fail(hmac(@8_tls_h,handshake_secret_66,k_271)) else caught-fail) in
                                {11795}let v_2663: bool = not-caught-fail(master_secret_139) in
                                {11732}let cur_log_35: bitstring = (zero,o_client_hello_7) in
                                {11742}let cur_log2_137: bitstring = (cur_log_35,server_hello_9) in
                                {11797}let h_709: bitstring = (if v_2663 then catch-fail(hash(@8_tls_h,cur_log2_137)) else caught-fail) in
                                {11798}let v_2664: bool = not-caught-fail(h_709) in
                                {11796}let l_741: label = (if v_2663 then tls13_client_handshake_traffic_secret else caught-fail) in
                                {11799}let x_839: bitstring = (if v_2664 then (l_741,h_709) else caught-fail) in
                                {11800}let client_hts_66: bitstring = (if v_2663 then catch-fail((if v_2664 then hmac(@8_tls_h,handshake_secret_66,x_839) else fail-any)) else caught-fail) in
                                {11801}let v_2665: bool = not-caught-fail(client_hts_66) in
                                {11803}let h_710: bitstring = (if v_2665 then catch-fail(hash(@8_tls_h,cur_log2_137)) else caught-fail) in
                                {11804}let v_2666: bool = not-caught-fail(h_710) in
                                {11802}let l_742: label = (if v_2665 then tls13_server_handshake_traffic_secret else caught-fail) in
                                {11805}let x_840: bitstring = (if v_2666 then (l_742,h_710) else caught-fail) in
                                {11806}let server_hts_66: bitstring = (if v_2665 then catch-fail((if v_2666 then hmac(@8_tls_h,handshake_secret_66,x_840) else fail-any)) else caught-fail) in
                                {11807}let v_2667: bool = not-caught-fail(server_hts_66) in
                                {11809}let h_711: bitstring = (if v_2667 then zero else caught-fail) in
                                {11808}let l_743: label = (if v_2667 then tls13_key else caught-fail) in
                                {11810}let x_841: bitstring = (if v_2667 then (l_743,h_711) else caught-fail) in
                                {11811}let client_wkh_66: bitstring = (if v_2667 then catch-fail(hmac(@8_tls_h,client_hts_66,x_841)) else caught-fail) in
                                {11812}let v_2668: bool = not-caught-fail(client_wkh_66) in
                                {11814}let h_712: bitstring = (if v_2668 then zero else caught-fail) in
                                {11813}let l_744: label = (if v_2668 then tls13_key else caught-fail) in
                                {11815}let x_842: bitstring = (if v_2668 then (l_744,h_712) else caught-fail) in
                                {11816}let server_wkh_66: bitstring = (if v_2668 then catch-fail(hmac(@8_tls_h,server_hts_66,x_842)) else caught-fail) in
                                {11817}let v_2669: bool = not-caught-fail(server_wkh_66) in
                                {11819}let h_713: bitstring = (if v_2669 then zero else caught-fail) in
                                {11818}let l_745: label = (if v_2669 then tls13_finished else caught-fail) in
                                {11820}let x_843: bitstring = (if v_2669 then (l_745,h_713) else caught-fail) in
                                {11821}let client_fk_66: bitstring = (if v_2669 then catch-fail(hmac(@8_tls_h,client_hts_66,x_843)) else caught-fail) in
                                {11822}let v_2670: bool = not-caught-fail(client_fk_66) in
                                {11824}let h_714: bitstring = (if v_2670 then zero else caught-fail) in
                                {11823}let l_746: label = (if v_2670 then tls13_finished else caught-fail) in
                                {11825}let x_844: bitstring = (if v_2670 then (l_746,h_714) else caught-fail) in
                                {11826}let server_fk_66: bitstring = (if v_2670 then catch-fail(hmac(@8_tls_h,server_hts_66,x_844)) else caught-fail) in
                                {11827}let v_2671: bool = not-caught-fail(server_fk_66) in
                                {11828}let (master_secret_140: bitstring,chk_73: aead_key,shk_72: aead_key,cfin_73: mac_key,sfin_72: mac_key) = (if v_2662 then (if v_2663 then (if v_2665 then (if v_2667 then (if v_2668 then (if v_2669 then (if v_2670 then (if v_2671 then (master_secret_139,client_wkh_66,server_wkh_66,client_fk_66,server_fk_66) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
                                {11829}event Client_chk(id_client_5,chk_73);
                                {11830}event Client_shk(id_client_5,shk_72);
                                {11831}event Client_cfin(id_client_5,cfin_73);
                                {11832}event Client_sfin(id_client_5,sfin_72);
                                {11833}in(io, enc_ee_msg_65: bitstring);
                                {11834}let ee_msg_70: msg = aead_dec(@8_tls_a,shk_72,0,zero,enc_ee_msg_65) in
                                {11835}let EE(ech_ee_65: echExt,extra_ee_65: extraExt) = ee_msg_70 in
                                {11836}let cur_log2_138: bitstring = (cur_log2_137,ee_msg_70) in
                                {11837}out(ch_client_after_EE, (id_client_5,ArgsClientAfterEE(o_cr_17,sr_76,@8_tls_h,@8_tls_a,c_dom_7,o_dom_8,psk_300,safe_psk_71,@8_comp_psk,master_secret_140,chk_73,0,shk_72,1,cfin_73,sfin_72,cur_log2_138)))
                            )
                            else
                                {11838}out(io, illegal_parameter)
                        )
                        else
                            {11839}out(io, illegal_parameter)
            )
            else
                {11840}out(io, unexpected_message)
        )
)

Declared: select table2(pre_shared_keys(*c_dom_8,*s_dom_16,*h_715,*id_135,*x_845,*idP_22,*safe_6),pre_shared_keys(*c_dom'_20,*s_dom'_1,*h',*id',*x',*idP',*safe'))/400000
Declared: select table2(ech_configurations(*config_2,*skR_4),ech_configurations(*config',*skR'_1))/400000
Declared: select table2(long_term_keys(*c_dom_8,*sk_d_1,*pkr,*crt_12,*idP_22),long_term_keys(*c_dom'_20,*sk_d',*pkr',*crt',*idP'))/400000
Declared: select mess2(ch_server_SH[],*x_845,ch_server_SH[],*x')/300000
Declared: select mess2(ch_server_CRT[],*x_845,ch_server_CRT[],*x')/300000
Declared: select mess2(ch_server_FIN[],*x_845,ch_server_FIN[],*x')/300000
Declared: select mess2(ch_server_CFIN[],*x_845,ch_server_CFIN[],*x')/300000
Declared: select mess2(ch_client_after_EE[],*x_845,ch_client_after_EE[],*x')/300000
Declared: select mess2(ch_client_CRT[],*x_845,ch_client_CRT[],*x')/300000
Declared: select mess2(ch_client_FIN[],*x_845,ch_client_FIN[],*x')/300000
Declared: select mess2(ch_client_CFIN[],*x_845,ch_client_CFIN[],*x')/300000
-- Axiom event(PreciseMess(ch,choice[id_135,id2_1],choice[st1_9,st2_2],choice[x1,x2])) && event(PreciseMess(ch,choice[id_135,id2'],choice[st1',st2'],choice[x1',x2'])) ==> st1_9 = st1' && x1 = x1'; event(PreciseMess(ch,choice[id1_1,id_135],choice[st1_9,st2_2],choice[x1,x2])) && event(PreciseMess(ch,choice[id1',id_135],choice[st1',st2'],choice[x1',x2'])) ==> st2_2 = st2' && x2 = x2'; event(PreciseMess(ch,choice[id1_1,id2_1],choice[st_19,st2_2],choice[x1,x2])) && event(PreciseMess(ch,choice[id1',id2'],choice[st_19,st2'],choice[x1',x2'])) ==> id1_1 = id1' && x1 = x1'; event(PreciseMess(ch,choice[id1_1,id2_1],choice[st1_9,st_19],choice[x1,x2])) && event(PreciseMess(ch,choice[id1',id2'],choice[st1',st_19],choice[x1',x2'])) ==> id2_1 = id2' && x2 = x2'
Encoding: 
axiom event(PreciseMess(ch,choice[id_135,id2_1],choice[st1_9,st2_2],choice[x1,x2])) && event(PreciseMess(ch,choice[id_135,id2'],choice[st1',st2'],choice[x1',x2'])) ==> st1_9 = st1' && x1 = x1' encoded as event2(PreciseMess(ch,id_135,st1_9,x1),PreciseMess(ch,id2_1,st2_2,x2)) && event2(PreciseMess(ch,id_135,st1',x1'),PreciseMess(ch,id2',st2',x2')) ==> st1_9 = st1' && x1 = x1'
axiom event(PreciseMess(ch,choice[id1_1,id_135],choice[st1_9,st2_2],choice[x1,x2])) && event(PreciseMess(ch,choice[id1',id_135],choice[st1',st2'],choice[x1',x2'])) ==> st2_2 = st2' && x2 = x2' encoded as event2(PreciseMess(ch,id1_1,st1_9,x1),PreciseMess(ch,id_135,st2_2,x2)) && event2(PreciseMess(ch,id1',st1',x1'),PreciseMess(ch,id_135,st2',x2')) ==> st2_2 = st2' && x2 = x2'
axiom event(PreciseMess(ch,choice[id1_1,id2_1],choice[st_19,st2_2],choice[x1,x2])) && event(PreciseMess(ch,choice[id1',id2'],choice[st_19,st2'],choice[x1',x2'])) ==> id1_1 = id1' && x1 = x1' encoded as event2(PreciseMess(ch,id1_1,st_19,x1),PreciseMess(ch,id2_1,st2_2,x2)) && event2(PreciseMess(ch,id1',st_19,x1'),PreciseMess(ch,id2',st2',x2')) ==> id1_1 = id1' && x1 = x1'
axiom event(PreciseMess(ch,choice[id1_1,id2_1],choice[st1_9,st_19],choice[x1,x2])) && event(PreciseMess(ch,choice[id1',id2'],choice[st1',st_19],choice[x1',x2'])) ==> id2_1 = id2' && x2 = x2' encoded as event2(PreciseMess(ch,id1_1,st1_9,x1),PreciseMess(ch,id2_1,st_19,x2)) && event2(PreciseMess(ch,id1',st1',x1'),PreciseMess(ch,id2',st_19,x2')) ==> id2_1 = id2' && x2 = x2'
in biprocess 1.
-- Axiom event(PreciseInput(st_19,choice[x_845,x1])) && event(PreciseInput(st_19,choice[x',x2])) ==> x_845 = x' && x1 = x2 encoded as event2(PreciseInput(st_19,x_845),PreciseInput(st_19,x1)) && event2(PreciseInput(st_19,x'),PreciseInput(st_19,x2)) ==> x_845 = x' && x1 = x2 in biprocess 1.
-- Axiom event(Server_DH_client(choice[id_135,id1_1],choice[e,e1])) && event(Server_DH_client(choice[id_135,id2_1],choice[e',e2])) ==> e = e'; event(Server_DH_client(choice[id1_1,id_135],choice[e1,e])) && event(Server_DH_client(choice[id2_1,id_135],choice[e2,e'])) ==> e = e'
Encoding: 
axiom event(Server_DH_client(choice[id_135,id1_1],choice[e,e1])) && event(Server_DH_client(choice[id_135,id2_1],choice[e',e2])) ==> e = e' encoded as event2(Server_DH_client(id_135,e),Server_DH_client(id1_1,e1)) && event2(Server_DH_client(id_135,e'),Server_DH_client(id2_1,e2)) ==> e = e'
axiom event(Server_DH_client(choice[id1_1,id_135],choice[e1,e])) && event(Server_DH_client(choice[id2_1,id_135],choice[e2,e'])) ==> e = e' encoded as event2(Server_DH_client(id1_1,e1),Server_DH_client(id_135,e)) && event2(Server_DH_client(id2_1,e2),Server_DH_client(id_135,e')) ==> e = e'
in biprocess 1.
-- Axiom event(Server_new_PSK(choice[id_135,id1_1],choice[k_272,k1])) && event(Server_new_PSK(choice[id_135,id2_1],choice[k',k2])) ==> k_272 = k'; event(Server_new_PSK(choice[id1_1,id_135],choice[k1,k_272])) && event(Server_new_PSK(choice[id2_1,id_135],choice[k2,k'])) ==> k_272 = k'
Encoding: 
axiom event(Server_new_PSK(choice[id_135,id1_1],choice[k_272,k1])) && event(Server_new_PSK(choice[id_135,id2_1],choice[k',k2])) ==> k_272 = k' encoded as event2(Server_new_PSK(id_135,k_272),Server_new_PSK(id1_1,k1)) && event2(Server_new_PSK(id_135,k'),Server_new_PSK(id2_1,k2)) ==> k_272 = k'
axiom event(Server_new_PSK(choice[id1_1,id_135],choice[k1,k_272])) && event(Server_new_PSK(choice[id2_1,id_135],choice[k2,k'])) ==> k_272 = k' encoded as event2(Server_new_PSK(id1_1,k1),Server_new_PSK(id_135,k_272)) && event2(Server_new_PSK(id2_1,k2),Server_new_PSK(id_135,k')) ==> k_272 = k'
in biprocess 1.
-- Axiom not (table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,is_safe'])) && attacker(choice[psk_301,psk''])); not (table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',true])) && attacker(choice[psk'',psk_301])); table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[is_safe_120,is_safe'])) && attacker(choice[psk_301,psk'']) ==> is_safe_120 ≠ true; table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',is_safe_120])) && attacker(choice[psk'',psk_301]) ==> is_safe_120 ≠ true; table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[is_safe_120,is_safe'])) ==> psk_301 ≠ NoPsk && psk_301 ≠ zero; table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',is_safe_120])) ==> psk_301 ≠ NoPsk && psk_301 ≠ zero; attacker(choice[mk_idpsk(s_dom_16,h_715,psk_301),idpsk]) ==> psk_301 ≠ NoPsk && psk_301 ≠ zero; attacker(choice[idpsk,mk_idpsk(s_dom_16,h_715,psk_301)]) ==> psk_301 ≠ NoPsk && psk_301 ≠ zero; not (table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_10,zero,psk_301),x_845])); not (table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',true])) && attacker(choice[x_845,hmac_ideal(i_10,zero,psk_301)])); not (table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_ext_res_binder,hash_ideal(i_10,zero))),x_845])); not (table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',true])) && attacker(choice[x_845,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_ext_res_binder,hash_ideal(i_10,zero)))])); not (table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),x_845])); not (table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',true])) && attacker(choice[x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e)])); not (table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero)),x_845])); not (table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',true])) && attacker(choice[x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero))])); not (table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero)),x_845])); not (table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',true])) && attacker(choice[x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero))])); not (table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero)),x_845])); not (table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',true])) && attacker(choice[x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero))])); not (table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero)),x_845])); not (table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',true])) && attacker(choice[x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero))]))
Encoding: 
axiom not (table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,is_safe'])) && attacker(choice[psk_301,psk''])) encoded as not (table2(pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true),pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(psk_301,psk''))
axiom not (table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',true])) && attacker(choice[psk'',psk_301])) encoded as not (table2(pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true)) && attacker2(psk'',psk_301))
axiom table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[is_safe_120,is_safe'])) && attacker(choice[psk_301,psk'']) ==> is_safe_120 ≠ true encoded as table2(pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,is_safe_120),pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(psk_301,psk'') ==> is_safe_120 ≠ true
axiom table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',is_safe_120])) && attacker(choice[psk'',psk_301]) ==> is_safe_120 ≠ true encoded as table2(pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,is_safe_120)) && attacker2(psk'',psk_301) ==> is_safe_120 ≠ true
axiom table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[is_safe_120,is_safe'])) ==> psk_301 ≠ NoPsk && psk_301 ≠ zero encoded as table2(pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,is_safe_120),pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe')) ==> psk_301 ≠ NoPsk && psk_301 ≠ zero
axiom table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',is_safe_120])) ==> psk_301 ≠ NoPsk && psk_301 ≠ zero encoded as table2(pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,is_safe_120)) ==> psk_301 ≠ NoPsk && psk_301 ≠ zero
axiom attacker(choice[mk_idpsk(s_dom_16,h_715,psk_301),idpsk]) ==> psk_301 ≠ NoPsk && psk_301 ≠ zero encoded as attacker2(mk_idpsk(s_dom_16,h_715,psk_301),idpsk) ==> psk_301 ≠ NoPsk && psk_301 ≠ zero
axiom attacker(choice[idpsk,mk_idpsk(s_dom_16,h_715,psk_301)]) ==> psk_301 ≠ NoPsk && psk_301 ≠ zero encoded as attacker2(idpsk,mk_idpsk(s_dom_16,h_715,psk_301)) ==> psk_301 ≠ NoPsk && psk_301 ≠ zero
axiom not (table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_10,zero,psk_301),x_845])) encoded as not (table2(pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true),pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_10,zero,psk_301),x_845))
axiom not (table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',true])) && attacker(choice[x_845,hmac_ideal(i_10,zero,psk_301)])) encoded as not (table2(pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true)) && attacker2(x_845,hmac_ideal(i_10,zero,psk_301)))
axiom not (table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_ext_res_binder,hash_ideal(i_10,zero))),x_845])) encoded as not (table2(pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true),pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_ext_res_binder,hash_ideal(i_10,zero))),x_845))
axiom not (table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',true])) && attacker(choice[x_845,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_ext_res_binder,hash_ideal(i_10,zero)))])) encoded as not (table2(pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true)) && attacker2(x_845,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_ext_res_binder,hash_ideal(i_10,zero)))))
axiom not (table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),x_845])) encoded as not (table2(pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true),pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),x_845))
axiom not (table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',true])) && attacker(choice[x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e)])) encoded as not (table2(pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true)) && attacker2(x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e)))
axiom not (table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero)),x_845])) encoded as not (table2(pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true),pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero)),x_845))
axiom not (table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',true])) && attacker(choice[x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero))])) encoded as not (table2(pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true)) && attacker2(x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero))))
axiom not (table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero)),x_845])) encoded as not (table2(pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true),pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero)),x_845))
axiom not (table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',true])) && attacker(choice[x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero))])) encoded as not (table2(pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true)) && attacker2(x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero))))
axiom not (table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero)),x_845])) encoded as not (table2(pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true),pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero)),x_845))
axiom not (table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',true])) && attacker(choice[x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero))])) encoded as not (table2(pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true)) && attacker2(x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero))))
axiom not (table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero)),x_845])) encoded as not (table2(pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true),pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero)),x_845))
axiom not (table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',true])) && attacker(choice[x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero))])) encoded as not (table2(pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true)) && attacker2(x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero))))
in biprocess 1.
-- Axiom not (event(Server_new_PSK(choice[id_s,id_s_1],choice[new_psk,new_psk'])) && table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[new_psk,new_psk''],choice[id_c,id_c'],choice[is_safe_120,is_safe'])) && event(Server_DH_client(choice[id_s,id_s_2],choice[dh_pub(g_75,x_845),e])) && attacker(choice[x_845,x'])); not (event(Server_new_PSK(choice[id_s_1,id_s],choice[new_psk',new_psk])) && table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[new_psk'',new_psk],choice[id_c',id_c],choice[is_safe',is_safe_120])) && event(Server_DH_client(choice[id_s_2,id_s],choice[e,dh_pub(g_75,x_845)])) && attacker(choice[x',x_845]))
Encoding: 
axiom not (event(Server_new_PSK(choice[id_s,id_s_1],choice[new_psk,new_psk'])) && table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[new_psk,new_psk''],choice[id_c,id_c'],choice[is_safe_120,is_safe'])) && event(Server_DH_client(choice[id_s,id_s_2],choice[dh_pub(g_75,x_845),e])) && attacker(choice[x_845,x'])) encoded as not (event2(Server_new_PSK(id_s,new_psk),Server_new_PSK(id_s_1,new_psk')) && table2(pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,new_psk,id_c,is_safe_120),pre_shared_keys(c_dom'_20,s_dom'_1,h',id',new_psk'',id_c',is_safe')) && event2(Server_DH_client(id_s,dh_pub(g_75,x_845)),Server_DH_client(id_s_2,e)) && attacker2(x_845,x'))
axiom not (event(Server_new_PSK(choice[id_s_1,id_s],choice[new_psk',new_psk])) && table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[new_psk'',new_psk],choice[id_c',id_c],choice[is_safe',is_safe_120])) && event(Server_DH_client(choice[id_s_2,id_s],choice[e,dh_pub(g_75,x_845)])) && attacker(choice[x',x_845])) encoded as not (event2(Server_new_PSK(id_s_1,new_psk'),Server_new_PSK(id_s,new_psk)) && table2(pre_shared_keys(c_dom'_20,s_dom'_1,h',id',new_psk'',id_c',is_safe'),pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,new_psk,id_c,is_safe_120)) && event2(Server_DH_client(id_s_2,e),Server_DH_client(id_s,dh_pub(g_75,x_845))) && attacker2(x',x_845))
in biprocess 1.
-- Axiom table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_alg_21,h_alg'_1],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,safe'])) ==> id_135 = mk_idpsk(s_dom_16,h_alg_21,psk_301); table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h_alg'_1,h_alg_21],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[safe',true])) ==> id_135 = mk_idpsk(s_dom_16,h_alg_21,psk_301)
Encoding: 
axiom table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_alg_21,h_alg'_1],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,safe'])) ==> id_135 = mk_idpsk(s_dom_16,h_alg_21,psk_301) encoded as table2(pre_shared_keys(c_dom_8,s_dom_16,h_alg_21,id_135,psk_301,idP_22,true),pre_shared_keys(c_dom'_20,s_dom'_1,h_alg'_1,id',psk',idP',safe')) ==> id_135 = mk_idpsk(s_dom_16,h_alg_21,psk_301)
axiom table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h_alg'_1,h_alg_21],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[safe',true])) ==> id_135 = mk_idpsk(s_dom_16,h_alg_21,psk_301) encoded as table2(pre_shared_keys(c_dom'_20,s_dom'_1,h_alg'_1,id',psk',idP',safe'),pre_shared_keys(c_dom_8,s_dom_16,h_alg_21,id_135,psk_301,idP_22,true)) ==> id_135 = mk_idpsk(s_dom_16,h_alg_21,psk_301)
in biprocess 1.
-- Axiom table(pre_shared_keys(choice[c_dom_8,c_dom1_1],choice[s_dom_16,s_dom1],choice[h_alg_21,h_alg1],choice[id_135,id1_1],choice[psk_301,psk1_1],choice[idP_22,idP1_2],choice[safe_6,safe1_1])) && table(pre_shared_keys(choice[c_dom'_20,c_dom2_1],choice[s_dom'_1,s_dom2],choice[h_alg'_1,h_alg2],choice[id',id2_1],choice[psk',psk2_1],choice[idP_22,idP2_2],choice[safe',safe2_1])) ==> c_dom_8 = c_dom'_20 && s_dom_16 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_135 = id' && psk_301 = psk' && safe_6 = safe'; table(pre_shared_keys(choice[c_dom1_1,c_dom_8],choice[s_dom1,s_dom_16],choice[h_alg1,h_alg_21],choice[id1_1,id_135],choice[psk1_1,psk_301],choice[idP1_2,idP_22],choice[safe1_1,safe_6])) && table(pre_shared_keys(choice[c_dom2_1,c_dom'_20],choice[s_dom2,s_dom'_1],choice[h_alg2,h_alg'_1],choice[id2_1,id'],choice[psk2_1,psk'],choice[idP2_2,idP_22],choice[safe2_1,safe'])) ==> c_dom_8 = c_dom'_20 && s_dom_16 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_135 = id' && psk_301 = psk' && safe_6 = safe'; table(pre_shared_keys(choice[c_dom_8,c_dom1_1],choice[s_dom_16,s_dom1],choice[h_alg_21,h_alg1],choice[id_135,id1_1],choice[psk_301,psk1_1],choice[idP_22,idP1_2],choice[safe_6,safe1_1])) && table(pre_shared_keys(choice[c_dom'_20,c_dom2_1],choice[s_dom'_1,s_dom2],choice[h_alg'_1,h_alg2],choice[id',id2_1],choice[psk_301,psk2_1],choice[idP',idP2_2],choice[safe',safe2_1])) ==> c_dom_8 = c_dom'_20 && s_dom_16 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_135 = id' && idP_22 = idP' && safe_6 = safe'; table(pre_shared_keys(choice[c_dom1_1,c_dom_8],choice[s_dom1,s_dom_16],choice[h_alg1,h_alg_21],choice[id1_1,id_135],choice[psk1_1,psk_301],choice[idP1_2,idP_22],choice[safe1_1,safe_6])) && table(pre_shared_keys(choice[c_dom2_1,c_dom'_20],choice[s_dom2,s_dom'_1],choice[h_alg2,h_alg'_1],choice[id2_1,id'],choice[psk2_1,psk_301],choice[idP2_2,idP'],choice[safe2_1,safe'])) ==> c_dom_8 = c_dom'_20 && s_dom_16 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_135 = id' && idP_22 = idP' && safe_6 = safe'
Encoding: 
axiom table(pre_shared_keys(choice[c_dom_8,c_dom1_1],choice[s_dom_16,s_dom1],choice[h_alg_21,h_alg1],choice[id_135,id1_1],choice[psk_301,psk1_1],choice[idP_22,idP1_2],choice[safe_6,safe1_1])) && table(pre_shared_keys(choice[c_dom'_20,c_dom2_1],choice[s_dom'_1,s_dom2],choice[h_alg'_1,h_alg2],choice[id',id2_1],choice[psk',psk2_1],choice[idP_22,idP2_2],choice[safe',safe2_1])) ==> c_dom_8 = c_dom'_20 && s_dom_16 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_135 = id' && psk_301 = psk' && safe_6 = safe' encoded as table2(pre_shared_keys(c_dom_8,s_dom_16,h_alg_21,id_135,psk_301,idP_22,safe_6),pre_shared_keys(c_dom1_1,s_dom1,h_alg1,id1_1,psk1_1,idP1_2,safe1_1)) && table2(pre_shared_keys(c_dom'_20,s_dom'_1,h_alg'_1,id',psk',idP_22,safe'),pre_shared_keys(c_dom2_1,s_dom2,h_alg2,id2_1,psk2_1,idP2_2,safe2_1)) ==> c_dom_8 = c_dom'_20 && s_dom_16 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_135 = id' && psk_301 = psk' && safe_6 = safe'
axiom table(pre_shared_keys(choice[c_dom1_1,c_dom_8],choice[s_dom1,s_dom_16],choice[h_alg1,h_alg_21],choice[id1_1,id_135],choice[psk1_1,psk_301],choice[idP1_2,idP_22],choice[safe1_1,safe_6])) && table(pre_shared_keys(choice[c_dom2_1,c_dom'_20],choice[s_dom2,s_dom'_1],choice[h_alg2,h_alg'_1],choice[id2_1,id'],choice[psk2_1,psk'],choice[idP2_2,idP_22],choice[safe2_1,safe'])) ==> c_dom_8 = c_dom'_20 && s_dom_16 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_135 = id' && psk_301 = psk' && safe_6 = safe' encoded as table2(pre_shared_keys(c_dom1_1,s_dom1,h_alg1,id1_1,psk1_1,idP1_2,safe1_1),pre_shared_keys(c_dom_8,s_dom_16,h_alg_21,id_135,psk_301,idP_22,safe_6)) && table2(pre_shared_keys(c_dom2_1,s_dom2,h_alg2,id2_1,psk2_1,idP2_2,safe2_1),pre_shared_keys(c_dom'_20,s_dom'_1,h_alg'_1,id',psk',idP_22,safe')) ==> c_dom_8 = c_dom'_20 && s_dom_16 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_135 = id' && psk_301 = psk' && safe_6 = safe'
axiom table(pre_shared_keys(choice[c_dom_8,c_dom1_1],choice[s_dom_16,s_dom1],choice[h_alg_21,h_alg1],choice[id_135,id1_1],choice[psk_301,psk1_1],choice[idP_22,idP1_2],choice[safe_6,safe1_1])) && table(pre_shared_keys(choice[c_dom'_20,c_dom2_1],choice[s_dom'_1,s_dom2],choice[h_alg'_1,h_alg2],choice[id',id2_1],choice[psk_301,psk2_1],choice[idP',idP2_2],choice[safe',safe2_1])) ==> c_dom_8 = c_dom'_20 && s_dom_16 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_135 = id' && idP_22 = idP' && safe_6 = safe' encoded as table2(pre_shared_keys(c_dom_8,s_dom_16,h_alg_21,id_135,psk_301,idP_22,safe_6),pre_shared_keys(c_dom1_1,s_dom1,h_alg1,id1_1,psk1_1,idP1_2,safe1_1)) && table2(pre_shared_keys(c_dom'_20,s_dom'_1,h_alg'_1,id',psk_301,idP',safe'),pre_shared_keys(c_dom2_1,s_dom2,h_alg2,id2_1,psk2_1,idP2_2,safe2_1)) ==> c_dom_8 = c_dom'_20 && s_dom_16 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_135 = id' && idP_22 = idP' && safe_6 = safe'
axiom table(pre_shared_keys(choice[c_dom1_1,c_dom_8],choice[s_dom1,s_dom_16],choice[h_alg1,h_alg_21],choice[id1_1,id_135],choice[psk1_1,psk_301],choice[idP1_2,idP_22],choice[safe1_1,safe_6])) && table(pre_shared_keys(choice[c_dom2_1,c_dom'_20],choice[s_dom2,s_dom'_1],choice[h_alg2,h_alg'_1],choice[id2_1,id'],choice[psk2_1,psk_301],choice[idP2_2,idP'],choice[safe2_1,safe'])) ==> c_dom_8 = c_dom'_20 && s_dom_16 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_135 = id' && idP_22 = idP' && safe_6 = safe' encoded as table2(pre_shared_keys(c_dom1_1,s_dom1,h_alg1,id1_1,psk1_1,idP1_2,safe1_1),pre_shared_keys(c_dom_8,s_dom_16,h_alg_21,id_135,psk_301,idP_22,safe_6)) && table2(pre_shared_keys(c_dom2_1,s_dom2,h_alg2,id2_1,psk2_1,idP2_2,safe2_1),pre_shared_keys(c_dom'_20,s_dom'_1,h_alg'_1,id',psk_301,idP',safe')) ==> c_dom_8 = c_dom'_20 && s_dom_16 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_135 = id' && idP_22 = idP' && safe_6 = safe'
in biprocess 1.
-- Restriction event(Same(choice[x_845,x'])) ==> x_845 = x' encoded as event2(Same(x_845),Same(x')) ==> x_845 = x' in biprocess 1.
-- Restriction not (event(ConfigOffered(id_c,config_2)) && event(CompromisedEchKeyForEquiv(config_2))) encoded as not (event2(ConfigOffered(id_c,config_2),ConfigOffered(id_c,config_2)) && event2(CompromisedEchKeyForEquiv(config_2),CompromisedEchKeyForEquiv(config_2))) in biprocess 1.
-- Restriction not (event(ConfigOffered(idClientDiff(s_272),ech_config(id_135,g_75,pkR_22,frontend,h_alg_21,a_alg_19))) && event(Client_server_domain(idClientDiff(s_272),frontend)) && event(Client_Cert_server(idClientDiff(s_272),s_pkey_7)) && event(CompromisedLtkForEquiv(s_pkey_7))) encoded as not (event2(ConfigOffered(idClientDiff(s_272),ech_config(id_135,g_75,pkR_22,frontend,h_alg_21,a_alg_19)),ConfigOffered(idClientDiff(s_272),ech_config(id_135,g_75,pkR_22,frontend,h_alg_21,a_alg_19))) && event2(Client_server_domain(idClientDiff(s_272),frontend),Client_server_domain(idClientDiff(s_272),frontend)) && event2(Client_Cert_server(idClientDiff(s_272),s_pkey_7),Client_Cert_server(idClientDiff(s_272),s_pkey_7)) && event2(CompromisedLtkForEquiv(s_pkey_7),CompromisedLtkForEquiv(s_pkey_7))) in biprocess 1.
-- Restriction event(Selected_ltk(choice[dom1_1,dom1'],choice[dom2_1,dom2'],choice[idP_22,idP'])) ==> dom1_1 = dom2_1 && dom1' = dom2' && ((dom1_1 = dom1' && idP_22 = idP') || dom1_1 ≠ dom1') encoded as event2(Selected_ltk(dom1_1,dom2_1,idP_22),Selected_ltk(dom1',dom2',idP')) ==> dom1_1 = dom2_1 && dom1' = dom2' && ((dom1_1 = dom1' && idP_22 = idP') || dom1_1 ≠ dom1') in biprocess 1.
-- Restriction event(Selected_psk(choice[dom1_1,dom1'],choice[dom2_1,dom2'],choice[idP_22,idP'],choice[safe_6,safe'])) ==> dom1_1 = dom2_1 && dom1' = dom2' && (dom1_1 ≠ dom1' || (dom1_1 = dom1' && idP_22 = idP')) encoded as event2(Selected_psk(dom1_1,dom2_1,idP_22,safe_6),Selected_psk(dom1',dom2',idP',safe')) ==> dom1_1 = dom2_1 && dom1' = dom2' && (dom1_1 ≠ dom1' || (dom1_1 = dom1' && idP_22 = idP')) in biprocess 1.
-- Restriction event(Selected_psk_no_missmatch(idClientDiff(s_272),choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[psk_301,psk'],choice[id_135,id'])) ==> id_135 = mk_idpsk(s_dom_16,h_715,psk_301) && id' = mk_idpsk(s_dom'_1,h',psk') encoded as event2(Selected_psk_no_missmatch(idClientDiff(s_272),s_dom_16,h_715,psk_301,id_135),Selected_psk_no_missmatch(idClientDiff(s_272),s_dom'_1,h',psk',id')) ==> id_135 = mk_idpsk(s_dom_16,h_715,psk_301) && id' = mk_idpsk(s_dom'_1,h',psk') in biprocess 1.
-- Restriction event(ClientSequenceClientDataWriteKey(idP_22,st_19,i_10)) && event(ClientSequenceClientDataWriteKey(idP_22,st',i_10)) ==> st_19 = st'; event(ClientSequenceServerDataWriteKey(idP_22,st_19,i_10)) && event(ClientSequenceServerDataWriteKey(idP_22,st',i_10)) ==> st_19 = st'; event(ServerSequenceServerDataWriteKey(idP_22,st_19,i_10)) && event(ServerSequenceServerDataWriteKey(idP_22,st',i_10)) ==> st_19 = st'; event(ServerSequenceClientDataWriteKey(idP_22,st_19,i_10)) && event(ServerSequenceClientDataWriteKey(idP_22,st',i_10)) ==> st_19 = st'
Encoding: 
restriction event(ClientSequenceClientDataWriteKey(idP_22,st_19,i_10)) && event(ClientSequenceClientDataWriteKey(idP_22,st',i_10)) ==> st_19 = st' encoded as event2(ClientSequenceClientDataWriteKey(idP_22,st_19,i_10),ClientSequenceClientDataWriteKey(idP_22,st_19,i_10)) && event2(ClientSequenceClientDataWriteKey(idP_22,st',i_10),ClientSequenceClientDataWriteKey(idP_22,st',i_10)) ==> st_19 = st'
restriction event(ClientSequenceServerDataWriteKey(idP_22,st_19,i_10)) && event(ClientSequenceServerDataWriteKey(idP_22,st',i_10)) ==> st_19 = st' encoded as event2(ClientSequenceServerDataWriteKey(idP_22,st_19,i_10),ClientSequenceServerDataWriteKey(idP_22,st_19,i_10)) && event2(ClientSequenceServerDataWriteKey(idP_22,st',i_10),ClientSequenceServerDataWriteKey(idP_22,st',i_10)) ==> st_19 = st'
restriction event(ServerSequenceServerDataWriteKey(idP_22,st_19,i_10)) && event(ServerSequenceServerDataWriteKey(idP_22,st',i_10)) ==> st_19 = st' encoded as event2(ServerSequenceServerDataWriteKey(idP_22,st_19,i_10),ServerSequenceServerDataWriteKey(idP_22,st_19,i_10)) && event2(ServerSequenceServerDataWriteKey(idP_22,st',i_10),ServerSequenceServerDataWriteKey(idP_22,st',i_10)) ==> st_19 = st'
restriction event(ServerSequenceClientDataWriteKey(idP_22,st_19,i_10)) && event(ServerSequenceClientDataWriteKey(idP_22,st',i_10)) ==> st_19 = st' encoded as event2(ServerSequenceClientDataWriteKey(idP_22,st_19,i_10),ServerSequenceClientDataWriteKey(idP_22,st_19,i_10)) && event2(ServerSequenceClientDataWriteKey(idP_22,st',i_10),ServerSequenceClientDataWriteKey(idP_22,st',i_10)) ==> st_19 = st'
in biprocess 1.
-- Diff-equivalence in biprocess 1.
Translating the process into Horn clauses...
Termination warning: v_2672 ≠ v_2673 && attacker2(v_2674,v_2672) && attacker2(v_2674,v_2673) -> bad
Selecting 0
Termination warning: v_2672 ≠ v_2673 && attacker2(v_2672,v_2674) && attacker2(v_2673,v_2674) -> bad
Selecting 0
Completing...
200 rules inserted. Base: 200 rules (87 with conclusion selected). Queue: 12888 rules.
400 rules inserted. Base: 400 rules (106 with conclusion selected). Queue: 12688 rules.
Termination warning: v_2672 ≠ v_2673 && attacker2(v_2674,v_2672) && attacker2(v_2674,v_2673) -> bad
Selecting 0
Warning of non termination (Selected):
attacker2(v_2672,v_2673)
v_2673 ≠ v_2674 && attacker2(v_2672,v_2673) && attacker2(v_2672,v_2674) -> bad
Termination warning: v_2672 ≠ v_2673 && attacker2(v_2672,v_2674) && attacker2(v_2673,v_2674) -> bad
Selecting 0
Warning of non termination (Selected):
attacker2(v_2672,v_2673)
v_2672 ≠ v_2674 && attacker2(v_2672,v_2673) && attacker2(v_2674,v_2673) -> bad
600 rules inserted. Base: 600 rules (134 with conclusion selected). Queue: 12524 rules.
800 rules inserted. Base: 800 rules (134 with conclusion selected). Queue: 12324 rules.
1000 rules inserted. Base: 1000 rules (134 with conclusion selected). Queue: 12124 rules.
1200 rules inserted. Base: 1200 rules (134 with conclusion selected). Queue: 11924 rules.
1400 rules inserted. Base: 1400 rules (134 with conclusion selected). Queue: 11724 rules.
1600 rules inserted. Base: 1600 rules (134 with conclusion selected). Queue: 11524 rules.
1800 rules inserted. Base: 1800 rules (134 with conclusion selected). Queue: 11324 rules.
2000 rules inserted. Base: 2000 rules (134 with conclusion selected). Queue: 11124 rules.
2200 rules inserted. Base: 2200 rules (134 with conclusion selected). Queue: 10924 rules.
2400 rules inserted. Base: 2400 rules (135 with conclusion selected). Queue: 10726 rules.
2600 rules inserted. Base: 2600 rules (135 with conclusion selected). Queue: 10526 rules.
2800 rules inserted. Base: 2800 rules (135 with conclusion selected). Queue: 10326 rules.
3000 rules inserted. Base: 3000 rules (137 with conclusion selected). Queue: 10164 rules.
3200 rules inserted. Base: 3200 rules (137 with conclusion selected). Queue: 9964 rules.
3400 rules inserted. Base: 3400 rules (137 with conclusion selected). Queue: 9764 rules.
3600 rules inserted. Base: 3600 rules (137 with conclusion selected). Queue: 9564 rules.
3800 rules inserted. Base: 3800 rules (137 with conclusion selected). Queue: 9364 rules.
4000 rules inserted. Base: 4000 rules (137 with conclusion selected). Queue: 9164 rules.
4200 rules inserted. Base: 4200 rules (137 with conclusion selected). Queue: 8964 rules.
4400 rules inserted. Base: 4400 rules (137 with conclusion selected). Queue: 8764 rules.
4600 rules inserted. Base: 4600 rules (137 with conclusion selected). Queue: 8564 rules.
4800 rules inserted. Base: 4800 rules (137 with conclusion selected). Queue: 8364 rules.
5000 rules inserted. Base: 5000 rules (137 with conclusion selected). Queue: 8164 rules.
5200 rules inserted. Base: 5200 rules (137 with conclusion selected). Queue: 7964 rules.
5400 rules inserted. Base: 5400 rules (137 with conclusion selected). Queue: 7764 rules.
5600 rules inserted. Base: 5600 rules (137 with conclusion selected). Queue: 7564 rules.
5800 rules inserted. Base: 5800 rules (137 with conclusion selected). Queue: 7364 rules.
6000 rules inserted. Base: 6000 rules (137 with conclusion selected). Queue: 7164 rules.
6200 rules inserted. Base: 6200 rules (137 with conclusion selected). Queue: 6964 rules.
6400 rules inserted. Base: 6400 rules (137 with conclusion selected). Queue: 6764 rules.
6600 rules inserted. Base: 6600 rules (137 with conclusion selected). Queue: 6564 rules.
6800 rules inserted. Base: 6800 rules (137 with conclusion selected). Queue: 6364 rules.
7000 rules inserted. Base: 7000 rules (137 with conclusion selected). Queue: 6164 rules.
7200 rules inserted. Base: 7200 rules (137 with conclusion selected). Queue: 5964 rules.
7400 rules inserted. Base: 7400 rules (137 with conclusion selected). Queue: 5764 rules.
7600 rules inserted. Base: 7600 rules (137 with conclusion selected). Queue: 5564 rules.
7800 rules inserted. Base: 7800 rules (137 with conclusion selected). Queue: 5364 rules.
8000 rules inserted. Base: 8000 rules (137 with conclusion selected). Queue: 5164 rules.
8200 rules inserted. Base: 8200 rules (137 with conclusion selected). Queue: 4964 rules.
8400 rules inserted. Base: 8400 rules (137 with conclusion selected). Queue: 4764 rules.
8600 rules inserted. Base: 8600 rules (137 with conclusion selected). Queue: 4564 rules.
8800 rules inserted. Base: 8800 rules (137 with conclusion selected). Queue: 4364 rules.
9000 rules inserted. Base: 9000 rules (137 with conclusion selected). Queue: 4164 rules.
9200 rules inserted. Base: 9200 rules (137 with conclusion selected). Queue: 3964 rules.
9400 rules inserted. Base: 9400 rules (137 with conclusion selected). Queue: 3764 rules.
9600 rules inserted. Base: 9600 rules (137 with conclusion selected). Queue: 3564 rules.
9800 rules inserted. Base: 9800 rules (137 with conclusion selected). Queue: 3364 rules.
10000 rules inserted. Base: 10000 rules (137 with conclusion selected). Queue: 3164 rules.
10200 rules inserted. Base: 10200 rules (137 with conclusion selected). Queue: 2964 rules.
10400 rules inserted. Base: 10400 rules (137 with conclusion selected). Queue: 2764 rules.
10600 rules inserted. Base: 10600 rules (137 with conclusion selected). Queue: 2564 rules.
10800 rules inserted. Base: 10800 rules (137 with conclusion selected). Queue: 2364 rules.
11000 rules inserted. Base: 11000 rules (137 with conclusion selected). Queue: 2164 rules.
11200 rules inserted. Base: 11200 rules (137 with conclusion selected). Queue: 1964 rules.
11400 rules inserted. Base: 11400 rules (137 with conclusion selected). Queue: 1764 rules.
11600 rules inserted. Base: 11600 rules (137 with conclusion selected). Queue: 1564 rules.
11800 rules inserted. Base: 11800 rules (137 with conclusion selected). Queue: 1364 rules.
12000 rules inserted. Base: 12000 rules (137 with conclusion selected). Queue: 1164 rules.
12200 rules inserted. Base: 12200 rules (138 with conclusion selected). Queue: 1038 rules.
12400 rules inserted. Base: 12400 rules (139 with conclusion selected). Queue: 944 rules.
12600 rules inserted. Base: 12600 rules (140 with conclusion selected). Queue: 794 rules.
12800 rules inserted. Base: 12787 rules (145 with conclusion selected). Queue: 609 rules.
13000 rules inserted. Base: 12987 rules (145 with conclusion selected). Queue: 526 rules.
13200 rules inserted. Base: 13187 rules (147 with conclusion selected). Queue: 342 rules.
13400 rules inserted. Base: 13387 rules (147 with conclusion selected). Queue: 181 rules.
13600 rules inserted. Base: 13584 rules (178 with conclusion selected). Queue: 674 rules.
13800 rules inserted. Base: 13776 rules (250 with conclusion selected). Queue: 899 rules.
14000 rules inserted. Base: 13976 rules (250 with conclusion selected). Queue: 699 rules.
14200 rules inserted. Base: 14176 rules (250 with conclusion selected). Queue: 499 rules.
14400 rules inserted. Base: 14354 rules (275 with conclusion selected). Queue: 523 rules.
14600 rules inserted. Base: 14537 rules (329 with conclusion selected). Queue: 683 rules.
14800 rules inserted. Base: 14713 rules (351 with conclusion selected). Queue: 768 rules.
15000 rules inserted. Base: 14902 rules (360 with conclusion selected). Queue: 755 rules.
15200 rules inserted. Base: 15096 rules (371 with conclusion selected). Queue: 753 rules.
15400 rules inserted. Base: 15278 rules (408 with conclusion selected). Queue: 856 rules.
15600 rules inserted. Base: 15455 rules (417 with conclusion selected). Queue: 846 rules.
15800 rules inserted. Base: 15649 rules (417 with conclusion selected). Queue: 812 rules.
16000 rules inserted. Base: 15837 rules (417 with conclusion selected). Queue: 781 rules.
16200 rules inserted. Base: 16033 rules (453 with conclusion selected). Queue: 876 rules.
16400 rules inserted. Base: 16217 rules (461 with conclusion selected). Queue: 872 rules.
16600 rules inserted. Base: 16381 rules (461 with conclusion selected). Queue: 848 rules.
16800 rules inserted. Base: 16553 rules (461 with conclusion selected). Queue: 824 rules.
17000 rules inserted. Base: 16752 rules (474 with conclusion selected). Queue: 829 rules.
17200 rules inserted. Base: 16933 rules (486 with conclusion selected). Queue: 829 rules.
17400 rules inserted. Base: 17110 rules (486 with conclusion selected). Queue: 925 rules.
17600 rules inserted. Base: 17288 rules (486 with conclusion selected). Queue: 923 rules.
17800 rules inserted. Base: 17488 rules (489 with conclusion selected). Queue: 898 rules.
18000 rules inserted. Base: 17676 rules (494 with conclusion selected). Queue: 922 rules.
18200 rules inserted. Base: 17842 rules (495 with conclusion selected). Queue: 804 rules.
18400 rules inserted. Base: 18008 rules (495 with conclusion selected). Queue: 766 rules.
18600 rules inserted. Base: 18192 rules (495 with conclusion selected). Queue: 746 rules.
18800 rules inserted. Base: 18387 rules (509 with conclusion selected). Queue: 762 rules.
19000 rules inserted. Base: 18550 rules (518 with conclusion selected). Queue: 769 rules.
19200 rules inserted. Base: 18688 rules (518 with conclusion selected). Queue: 757 rules.
19400 rules inserted. Base: 18845 rules (518 with conclusion selected). Queue: 733 rules.
19600 rules inserted. Base: 19028 rules (536 with conclusion selected). Queue: 769 rules.
19800 rules inserted. Base: 19178 rules (544 with conclusion selected). Queue: 826 rules.
20000 rules inserted. Base: 19307 rules (544 with conclusion selected). Queue: 786 rules.
20200 rules inserted. Base: 19468 rules (544 with conclusion selected). Queue: 762 rules.
20400 rules inserted. Base: 19642 rules (562 with conclusion selected). Queue: 753 rules.
20600 rules inserted. Base: 19827 rules (564 with conclusion selected). Queue: 621 rules.
20800 rules inserted. Base: 19951 rules (566 with conclusion selected). Queue: 611 rules.
21000 rules inserted. Base: 20112 rules (573 with conclusion selected). Queue: 618 rules.
21200 rules inserted. Base: 20290 rules (584 with conclusion selected). Queue: 599 rules.
21400 rules inserted. Base: 20342 rules (584 with conclusion selected). Queue: 586 rules.
21600 rules inserted. Base: 20509 rules (586 with conclusion selected). Queue: 576 rules.
21800 rules inserted. Base: 20669 rules (597 with conclusion selected). Queue: 582 rules.
22000 rules inserted. Base: 20810 rules (600 with conclusion selected). Queue: 550 rules.
22200 rules inserted. Base: 20940 rules (600 with conclusion selected). Queue: 528 rules.
22400 rules inserted. Base: 21108 rules (602 with conclusion selected). Queue: 472 rules.
22600 rules inserted. Base: 21222 rules (614 with conclusion selected). Queue: 466 rules.
22800 rules inserted. Base: 21364 rules (614 with conclusion selected). Queue: 445 rules.
23000 rules inserted. Base: 21487 rules (629 with conclusion selected). Queue: 552 rules.
23200 rules inserted. Base: 21614 rules (638 with conclusion selected). Queue: 565 rules.
23400 rules inserted. Base: 21757 rules (652 with conclusion selected). Queue: 653 rules.
23600 rules inserted. Base: 21907 rules (667 with conclusion selected). Queue: 731 rules.
23800 rules inserted. Base: 22059 rules (667 with conclusion selected). Queue: 654 rules.
24000 rules inserted. Base: 22216 rules (675 with conclusion selected). Queue: 657 rules.
24200 rules inserted. Base: 22382 rules (679 with conclusion selected). Queue: 640 rules.
24400 rules inserted. Base: 22512 rules (687 with conclusion selected). Queue: 679 rules.
24600 rules inserted. Base: 22661 rules (703 with conclusion selected). Queue: 761 rules.
24800 rules inserted. Base: 22800 rules (703 with conclusion selected). Queue: 718 rules.
25000 rules inserted. Base: 22935 rules (709 with conclusion selected). Queue: 729 rules.
25200 rules inserted. Base: 23103 rules (711 with conclusion selected). Queue: 687 rules.
25400 rules inserted. Base: 23218 rules (715 with conclusion selected). Queue: 657 rules.
25600 rules inserted. Base: 23283 rules (715 with conclusion selected). Queue: 641 rules.
25800 rules inserted. Base: 23426 rules (751 with conclusion selected). Queue: 814 rules.
26000 rules inserted. Base: 23539 rules (805 with conclusion selected). Queue: 1125 rules.
26200 rules inserted. Base: 23638 rules (812 with conclusion selected). Queue: 1166 rules.
26400 rules inserted. Base: 23784 rules (823 with conclusion selected). Queue: 1188 rules.
26600 rules inserted. Base: 23952 rules (830 with conclusion selected). Queue: 1120 rules.
26800 rules inserted. Base: 24105 rules (836 with conclusion selected). Queue: 1091 rules.
27000 rules inserted. Base: 24289 rules (843 with conclusion selected). Queue: 1001 rules.
27200 rules inserted. Base: 24446 rules (844 with conclusion selected). Queue: 932 rules.
27400 rules inserted. Base: 24588 rules (844 with conclusion selected). Queue: 860 rules.
27600 rules inserted. Base: 24727 rules (856 with conclusion selected). Queue: 972 rules.
27800 rules inserted. Base: 24881 rules (864 with conclusion selected). Queue: 1026 rules.
28000 rules inserted. Base: 25078 rules (888 with conclusion selected). Queue: 1275 rules.
28200 rules inserted. Base: 25239 rules (896 with conclusion selected). Queue: 1268 rules.
28400 rules inserted. Base: 25366 rules (898 with conclusion selected). Queue: 1244 rules.
28600 rules inserted. Base: 25550 rules (902 with conclusion selected). Queue: 1248 rules.
28800 rules inserted. Base: 25732 rules (912 with conclusion selected). Queue: 1265 rules.
29000 rules inserted. Base: 25923 rules (912 with conclusion selected). Queue: 1236 rules.
29200 rules inserted. Base: 26123 rules (912 with conclusion selected). Queue: 1205 rules.
29400 rules inserted. Base: 26269 rules (912 with conclusion selected). Queue: 1155 rules.
29600 rules inserted. Base: 26375 rules (912 with conclusion selected). Queue: 1137 rules.
29800 rules inserted. Base: 26535 rules (916 with conclusion selected). Queue: 1149 rules.
30000 rules inserted. Base: 26710 rules (924 with conclusion selected). Queue: 1175 rules.
30200 rules inserted. Base: 26876 rules (928 with conclusion selected). Queue: 1153 rules.
30400 rules inserted. Base: 27076 rules (935 with conclusion selected). Queue: 1171 rules.
30600 rules inserted. Base: 27184 rules (936 with conclusion selected). Queue: 1141 rules.
30800 rules inserted. Base: 27282 rules (936 with conclusion selected). Queue: 1111 rules.
31000 rules inserted. Base: 27468 rules (966 with conclusion selected). Queue: 1335 rules.
31200 rules inserted. Base: 27616 rules (984 with conclusion selected). Queue: 1469 rules.
31400 rules inserted. Base: 27807 rules (1044 with conclusion selected). Queue: 1961 rules.
31600 rules inserted. Base: 28007 rules (1104 with conclusion selected). Queue: 2445 rules.
31800 rules inserted. Base: 28008 rules (1104 with conclusion selected). Queue: 2423 rules.
32000 rules inserted. Base: 28109 rules (1104 with conclusion selected). Queue: 2380 rules.
32200 rules inserted. Base: 28249 rules (1104 with conclusion selected). Queue: 2315 rules.
32400 rules inserted. Base: 28401 rules (1104 with conclusion selected). Queue: 2264 rules.
32600 rules inserted. Base: 28549 rules (1104 with conclusion selected). Queue: 2206 rules.
32800 rules inserted. Base: 28644 rules (1104 with conclusion selected). Queue: 2155 rules.
33000 rules inserted. Base: 28796 rules (1104 with conclusion selected). Queue: 2091 rules.
33200 rules inserted. Base: 28948 rules (1104 with conclusion selected). Queue: 2021 rules.
33400 rules inserted. Base: 29090 rules (1104 with conclusion selected). Queue: 1963 rules.
33600 rules inserted. Base: 29240 rules (1104 with conclusion selected). Queue: 1893 rules.
33800 rules inserted. Base: 29394 rules (1104 with conclusion selected). Queue: 1828 rules.
34000 rules inserted. Base: 29546 rules (1104 with conclusion selected). Queue: 1763 rules.
34200 rules inserted. Base: 29599 rules (1109 with conclusion selected). Queue: 1762 rules.
34400 rules inserted. Base: 29759 rules (1109 with conclusion selected). Queue: 1705 rules.
34600 rules inserted. Base: 29925 rules (1109 with conclusion selected). Queue: 1612 rules.
34800 rules inserted. Base: 30093 rules (1109 with conclusion selected). Queue: 1506 rules.
35000 rules inserted. Base: 30215 rules (1113 with conclusion selected). Queue: 1450 rules.
35200 rules inserted. Base: 30379 rules (1113 with conclusion selected). Queue: 1347 rules.
35400 rules inserted. Base: 30547 rules (1113 with conclusion selected). Queue: 1236 rules.
35600 rules inserted. Base: 30711 rules (1113 with conclusion selected). Queue: 1129 rules.
35800 rules inserted. Base: 30874 rules (1113 with conclusion selected). Queue: 1022 rules.
36000 rules inserted. Base: 30939 rules (1147 with conclusion selected). Queue: 1156 rules.
36200 rules inserted. Base: 31078 rules (1147 with conclusion selected). Queue: 1097 rules.
36400 rules inserted. Base: 31235 rules (1180 with conclusion selected). Queue: 1192 rules.
36600 rules inserted. Base: 31433 rules (1180 with conclusion selected). Queue: 1046 rules.
36800 rules inserted. Base: 31629 rules (1180 with conclusion selected). Queue: 901 rules.
37000 rules inserted. Base: 31779 rules (1190 with conclusion selected). Queue: 917 rules.
37200 rules inserted. Base: 31913 rules (1200 with conclusion selected). Queue: 855 rules.
37400 rules inserted. Base: 32047 rules (1203 with conclusion selected). Queue: 821 rules.
37600 rules inserted. Base: 32222 rules (1214 with conclusion selected). Queue: 791 rules.
37800 rules inserted. Base: 32371 rules (1224 with conclusion selected). Queue: 769 rules.
38000 rules inserted. Base: 32519 rules (1260 with conclusion selected). Queue: 851 rules.
38200 rules inserted. Base: 32647 rules (1263 with conclusion selected). Queue: 794 rules.
38400 rules inserted. Base: 32828 rules (1263 with conclusion selected). Queue: 753 rules.
38600 rules inserted. Base: 33010 rules (1264 with conclusion selected). Queue: 673 rules.
38800 rules inserted. Base: 33202 rules (1279 with conclusion selected). Queue: 830 rules.
39000 rules inserted. Base: 33372 rules (1284 with conclusion selected). Queue: 798 rules.
39200 rules inserted. Base: 33547 rules (1284 with conclusion selected). Queue: 773 rules.
39400 rules inserted. Base: 33711 rules (1284 with conclusion selected). Queue: 767 rules.
39600 rules inserted. Base: 33911 rules (1284 with conclusion selected). Queue: 751 rules.
39800 rules inserted. Base: 34043 rules (1284 with conclusion selected). Queue: 717 rules.
40000 rules inserted. Base: 34194 rules (1284 with conclusion selected). Queue: 708 rules.
40200 rules inserted. Base: 34364 rules (1300 with conclusion selected). Queue: 839 rules.
40400 rules inserted. Base: 34554 rules (1300 with conclusion selected). Queue: 789 rules.
40600 rules inserted. Base: 34716 rules (1316 with conclusion selected). Queue: 934 rules.
40800 rules inserted. Base: 34881 rules (1323 with conclusion selected). Queue: 945 rules.
41000 rules inserted. Base: 35051 rules (1323 with conclusion selected). Queue: 901 rules.
41200 rules inserted. Base: 35241 rules (1323 with conclusion selected). Queue: 901 rules.
41400 rules inserted. Base: 35383 rules (1327 with conclusion selected). Queue: 911 rules.
41600 rules inserted. Base: 35563 rules (1327 with conclusion selected). Queue: 867 rules.
41800 rules inserted. Base: 35719 rules (1332 with conclusion selected). Queue: 884 rules.
42000 rules inserted. Base: 35883 rules (1336 with conclusion selected). Queue: 880 rules.
42200 rules inserted. Base: 36034 rules (1336 with conclusion selected). Queue: 854 rules.
42400 rules inserted. Base: 36222 rules (1354 with conclusion selected). Queue: 1012 rules.
42600 rules inserted. Base: 36387 rules (1369 with conclusion selected). Queue: 1113 rules.
42800 rules inserted. Base: 36574 rules (1405 with conclusion selected). Queue: 1391 rules.
43000 rules inserted. Base: 36743 rules (1405 with conclusion selected). Queue: 1345 rules.
43200 rules inserted. Base: 36931 rules (1405 with conclusion selected). Queue: 1329 rules.
43400 rules inserted. Base: 37127 rules (1437 with conclusion selected). Queue: 1569 rules.
43600 rules inserted. Base: 37273 rules (1453 with conclusion selected). Queue: 1687 rules.
43800 rules inserted. Base: 37417 rules (1453 with conclusion selected). Queue: 1621 rules.
44000 rules inserted. Base: 37545 rules (1453 with conclusion selected). Queue: 1562 rules.
44200 rules inserted. Base: 37689 rules (1453 with conclusion selected). Queue: 1499 rules.
44400 rules inserted. Base: 37819 rules (1453 with conclusion selected). Queue: 1495 rules.
44600 rules inserted. Base: 38002 rules (1459 with conclusion selected). Queue: 1541 rules.
44800 rules inserted. Base: 38147 rules (1459 with conclusion selected). Queue: 1474 rules.
45000 rules inserted. Base: 38291 rules (1459 with conclusion selected). Queue: 1411 rules.
45200 rules inserted. Base: 38436 rules (1461 with conclusion selected). Queue: 1370 rules.
45400 rules inserted. Base: 38588 rules (1471 with conclusion selected). Queue: 1379 rules.
45600 rules inserted. Base: 38754 rules (1481 with conclusion selected). Queue: 1363 rules.
45800 rules inserted. Base: 38932 rules (1486 with conclusion selected). Queue: 1347 rules.
46000 rules inserted. Base: 39118 rules (1501 with conclusion selected). Queue: 1424 rules.
46200 rules inserted. Base: 39296 rules (1501 with conclusion selected). Queue: 1384 rules.
46400 rules inserted. Base: 39461 rules (1501 with conclusion selected). Queue: 1286 rules.
46600 rules inserted. Base: 39617 rules (1501 with conclusion selected). Queue: 1212 rules.
46800 rules inserted. Base: 39799 rules (1501 with conclusion selected). Queue: 1132 rules.
47000 rules inserted. Base: 39987 rules (1501 with conclusion selected). Queue: 1055 rules.
47200 rules inserted. Base: 40163 rules (1501 with conclusion selected). Queue: 1001 rules.
47400 rules inserted. Base: 40348 rules (1501 with conclusion selected). Queue: 946 rules.
47600 rules inserted. Base: 40513 rules (1501 with conclusion selected). Queue: 900 rules.
47800 rules inserted. Base: 40687 rules (1501 with conclusion selected). Queue: 827 rules.
48000 rules inserted. Base: 40762 rules (1501 with conclusion selected). Queue: 803 rules.
48200 rules inserted. Base: 40846 rules (1501 with conclusion selected). Queue: 779 rules.
48400 rules inserted. Base: 40987 rules (1505 with conclusion selected). Queue: 811 rules.
48600 rules inserted. Base: 41161 rules (1505 with conclusion selected). Queue: 749 rules.
48800 rules inserted. Base: 41225 rules (1505 with conclusion selected). Queue: 727 rules.
49000 rules inserted. Base: 41311 rules (1505 with conclusion selected). Queue: 713 rules.
49200 rules inserted. Base: 41452 rules (1505 with conclusion selected). Queue: 695 rules.
49400 rules inserted. Base: 41587 rules (1505 with conclusion selected). Queue: 660 rules.
49600 rules inserted. Base: 41667 rules (1505 with conclusion selected). Queue: 651 rules.
49800 rules inserted. Base: 41743 rules (1505 with conclusion selected). Queue: 646 rules.
50000 rules inserted. Base: 41918 rules (1505 with conclusion selected). Queue: 593 rules.
50200 rules inserted. Base: 41957 rules (1505 with conclusion selected). Queue: 589 rules.
50400 rules inserted. Base: 42033 rules (1505 with conclusion selected). Queue: 587 rules.
50600 rules inserted. Base: 42177 rules (1505 with conclusion selected). Queue: 589 rules.
50800 rules inserted. Base: 42222 rules (1508 with conclusion selected). Queue: 596 rules.
51000 rules inserted. Base: 42272 rules (1508 with conclusion selected). Queue: 598 rules.
51200 rules inserted. Base: 42419 rules (1508 with conclusion selected). Queue: 580 rules.
51400 rules inserted. Base: 42439 rules (1510 with conclusion selected). Queue: 610 rules.
51600 rules inserted. Base: 42467 rules (1510 with conclusion selected). Queue: 610 rules.
51800 rules inserted. Base: 42605 rules (1510 with conclusion selected). Queue: 614 rules.
52000 rules inserted. Base: 42758 rules (1622 with conclusion selected). Queue: 1186 rules.
52200 rules inserted. Base: 42914 rules (1734 with conclusion selected). Queue: 1766 rules.
52400 rules inserted. Base: 43031 rules (1734 with conclusion selected). Queue: 1760 rules.
52600 rules inserted. Base: 43207 rules (1739 with conclusion selected). Queue: 1697 rules.
52800 rules inserted. Base: 43391 rules (1749 with conclusion selected). Queue: 1608 rules.
53000 rules inserted. Base: 43573 rules (1755 with conclusion selected). Queue: 1524 rules.
53200 rules inserted. Base: 43728 rules (1763 with conclusion selected). Queue: 1457 rules.
53400 rules inserted. Base: 43867 rules (1768 with conclusion selected). Queue: 1404 rules.
53600 rules inserted. Base: 44046 rules (1777 with conclusion selected). Queue: 1315 rules.
53800 rules inserted. Base: 44219 rules (1783 with conclusion selected). Queue: 1233 rules.
54000 rules inserted. Base: 44383 rules (1791 with conclusion selected). Queue: 1166 rules.
54200 rules inserted. Base: 44529 rules (1791 with conclusion selected). Queue: 1144 rules.
54400 rules inserted. Base: 44693 rules (1792 with conclusion selected). Queue: 1128 rules.
54600 rules inserted. Base: 44857 rules (1792 with conclusion selected). Queue: 1100 rules.
54800 rules inserted. Base: 44965 rules (1792 with conclusion selected). Queue: 1088 rules.
55000 rules inserted. Base: 45127 rules (1792 with conclusion selected). Queue: 1060 rules.
55200 rules inserted. Base: 45271 rules (1792 with conclusion selected). Queue: 1042 rules.
55400 rules inserted. Base: 45389 rules (1792 with conclusion selected). Queue: 1033 rules.
55600 rules inserted. Base: 45539 rules (1792 with conclusion selected). Queue: 1033 rules.
55800 rules inserted. Base: 45683 rules (1792 with conclusion selected). Queue: 1033 rules.
56000 rules inserted. Base: 45841 rules (1792 with conclusion selected). Queue: 1033 rules.
56200 rules inserted. Base: 45988 rules (1792 with conclusion selected). Queue: 1041 rules.
56400 rules inserted. Base: 46057 rules (1794 with conclusion selected). Queue: 1054 rules.
56600 rules inserted. Base: 46213 rules (1794 with conclusion selected). Queue: 988 rules.
56800 rules inserted. Base: 46376 rules (1794 with conclusion selected). Queue: 943 rules.
57000 rules inserted. Base: 46539 rules (1794 with conclusion selected). Queue: 885 rules.
57200 rules inserted. Base: 46702 rules (1794 with conclusion selected). Queue: 833 rules.
57400 rules inserted. Base: 46806 rules (1795 with conclusion selected). Queue: 827 rules.
57600 rules inserted. Base: 46960 rules (1805 with conclusion selected). Queue: 825 rules.
57800 rules inserted. Base: 47018 rules (1805 with conclusion selected). Queue: 771 rules.
58000 rules inserted. Base: 47156 rules (1805 with conclusion selected). Queue: 693 rules.
58200 rules inserted. Base: 47250 rules (1809 with conclusion selected). Queue: 713 rules.
58400 rules inserted. Base: 47356 rules (1811 with conclusion selected). Queue: 698 rules.
58600 rules inserted. Base: 47441 rules (1811 with conclusion selected). Queue: 669 rules.
58800 rules inserted. Base: 47514 rules (1811 with conclusion selected). Queue: 665 rules.
59000 rules inserted. Base: 47612 rules (1811 with conclusion selected). Queue: 635 rules.
59200 rules inserted. Base: 47726 rules (1811 with conclusion selected). Queue: 532 rules.
59400 rules inserted. Base: 47841 rules (1811 with conclusion selected). Queue: 421 rules.
59600 rules inserted. Base: 47888 rules (1811 with conclusion selected). Queue: 427 rules.
59800 rules inserted. Base: 48034 rules (1922 with conclusion selected). Queue: 1675 rules.
60000 rules inserted. Base: 48106 rules (1923 with conclusion selected). Queue: 1687 rules.
60200 rules inserted. Base: 48278 rules (1923 with conclusion selected). Queue: 1659 rules.
60400 rules inserted. Base: 48478 rules (1923 with conclusion selected). Queue: 1611 rules.
60600 rules inserted. Base: 48678 rules (1923 with conclusion selected). Queue: 1563 rules.
60800 rules inserted. Base: 48878 rules (1933 with conclusion selected). Queue: 1575 rules.
61000 rules inserted. Base: 49078 rules (1933 with conclusion selected). Queue: 1527 rules.
61200 rules inserted. Base: 49278 rules (1935 with conclusion selected). Queue: 1491 rules.
61400 rules inserted. Base: 49478 rules (1935 with conclusion selected). Queue: 1443 rules.
61600 rules inserted. Base: 49622 rules (1935 with conclusion selected). Queue: 1407 rules.
61800 rules inserted. Base: 49733 rules (1937 with conclusion selected). Queue: 1410 rules.
62000 rules inserted. Base: 49933 rules (1948 with conclusion selected). Queue: 1489 rules.
62200 rules inserted. Base: 50127 rules (1958 with conclusion selected). Queue: 1573 rules.
62400 rules inserted. Base: 50327 rules (1965 with conclusion selected). Queue: 1587 rules.
62600 rules inserted. Base: 50527 rules (1975 with conclusion selected). Queue: 1657 rules.
62800 rules inserted. Base: 50727 rules (1985 with conclusion selected). Queue: 1735 rules.
63000 rules inserted. Base: 50890 rules (1991 with conclusion selected). Queue: 1753 rules.
63200 rules inserted. Base: 50986 rules (2019 with conclusion selected). Queue: 1973 rules.
63400 rules inserted. Base: 51186 rules (2074 with conclusion selected). Queue: 2415 rules.
63600 rules inserted. Base: 51376 rules (2135 with conclusion selected). Queue: 2930 rules.
63800 rules inserted. Base: 51576 rules (2187 with conclusion selected). Queue: 3341 rules.
64000 rules inserted. Base: 51736 rules (2239 with conclusion selected). Queue: 3769 rules.
64200 rules inserted. Base: 51936 rules (2295 with conclusion selected). Queue: 4221 rules.
64400 rules inserted. Base: 52128 rules (2355 with conclusion selected). Queue: 4714 rules.
64600 rules inserted. Base: 52328 rules (2409 with conclusion selected). Queue: 5150 rules.
64800 rules inserted. Base: 52442 rules (2427 with conclusion selected). Queue: 5269 rules.
65000 rules inserted. Base: 52552 rules (2427 with conclusion selected). Queue: 5236 rules.
65200 rules inserted. Base: 52704 rules (2427 with conclusion selected). Queue: 5169 rules.
65400 rules inserted. Base: 52856 rules (2427 with conclusion selected). Queue: 5101 rules.
65600 rules inserted. Base: 53008 rules (2427 with conclusion selected). Queue: 5035 rules.
65800 rules inserted. Base: 53150 rules (2427 with conclusion selected). Queue: 4969 rules.
66000 rules inserted. Base: 53296 rules (2427 with conclusion selected). Queue: 4904 rules.
66200 rules inserted. Base: 53438 rules (2427 with conclusion selected). Queue: 4844 rules.
66400 rules inserted. Base: 53590 rules (2427 with conclusion selected). Queue: 4775 rules.
66600 rules inserted. Base: 53742 rules (2427 with conclusion selected). Queue: 4710 rules.
66800 rules inserted. Base: 53894 rules (2427 with conclusion selected). Queue: 4643 rules.
67000 rules inserted. Base: 54038 rules (2427 with conclusion selected). Queue: 4577 rules.
67200 rules inserted. Base: 54182 rules (2427 with conclusion selected). Queue: 4510 rules.
67400 rules inserted. Base: 54330 rules (2427 with conclusion selected). Queue: 4447 rules.
67600 rules inserted. Base: 54484 rules (2427 with conclusion selected). Queue: 4389 rules.
67800 rules inserted. Base: 54634 rules (2427 with conclusion selected). Queue: 4320 rules.
68000 rules inserted. Base: 54790 rules (2427 with conclusion selected). Queue: 4254 rules.
68200 rules inserted. Base: 54932 rules (2427 with conclusion selected). Queue: 4187 rules.
68400 rules inserted. Base: 55078 rules (2427 with conclusion selected). Queue: 4123 rules.
68600 rules inserted. Base: 55226 rules (2427 with conclusion selected). Queue: 4057 rules.
68800 rules inserted. Base: 55369 rules (2427 with conclusion selected). Queue: 3992 rules.
69000 rules inserted. Base: 55522 rules (2427 with conclusion selected). Queue: 3925 rules.
69200 rules inserted. Base: 55670 rules (2427 with conclusion selected). Queue: 3858 rules.
69400 rules inserted. Base: 55822 rules (2427 with conclusion selected). Queue: 3793 rules.
69600 rules inserted. Base: 55966 rules (2427 with conclusion selected). Queue: 3724 rules.
69800 rules inserted. Base: 56114 rules (2427 with conclusion selected). Queue: 3661 rules.
70000 rules inserted. Base: 56255 rules (2429 with conclusion selected). Queue: 3607 rules.
70200 rules inserted. Base: 56338 rules (2429 with conclusion selected). Queue: 3578 rules.
70400 rules inserted. Base: 56502 rules (2429 with conclusion selected). Queue: 3474 rules.
70600 rules inserted. Base: 56664 rules (2429 with conclusion selected). Queue: 3373 rules.
70800 rules inserted. Base: 56830 rules (2429 with conclusion selected). Queue: 3267 rules.
71000 rules inserted. Base: 56998 rules (2429 with conclusion selected). Queue: 3160 rules.
71200 rules inserted. Base: 57166 rules (2429 with conclusion selected). Queue: 3061 rules.
71400 rules inserted. Base: 57329 rules (2429 with conclusion selected). Queue: 2959 rules.
71600 rules inserted. Base: 57494 rules (2429 with conclusion selected). Queue: 2854 rules.
71800 rules inserted. Base: 57662 rules (2429 with conclusion selected). Queue: 2747 rules.
72000 rules inserted. Base: 57834 rules (2429 with conclusion selected). Queue: 2654 rules.
72200 rules inserted. Base: 57998 rules (2429 with conclusion selected). Queue: 2554 rules.
72400 rules inserted. Base: 58166 rules (2429 with conclusion selected). Queue: 2446 rules.
72600 rules inserted. Base: 58333 rules (2429 with conclusion selected). Queue: 2341 rules.
72800 rules inserted. Base: 58498 rules (2429 with conclusion selected). Queue: 2241 rules.
73000 rules inserted. Base: 58662 rules (2429 with conclusion selected). Queue: 2135 rules.
73200 rules inserted. Base: 58828 rules (2429 with conclusion selected). Queue: 2031 rules.
73400 rules inserted. Base: 58994 rules (2429 with conclusion selected). Queue: 1925 rules.
73600 rules inserted. Base: 59164 rules (2431 with conclusion selected). Queue: 1828 rules.
73800 rules inserted. Base: 59242 rules (2434 with conclusion selected). Queue: 1814 rules.
74000 rules inserted. Base: 59438 rules (2434 with conclusion selected). Queue: 1673 rules.
74200 rules inserted. Base: 59618 rules (2434 with conclusion selected). Queue: 1577 rules.
74400 rules inserted. Base: 59814 rules (2434 with conclusion selected). Queue: 1436 rules.
74600 rules inserted. Base: 59973 rules (2434 with conclusion selected). Queue: 1347 rules.
74800 rules inserted. Base: 60166 rules (2434 with conclusion selected). Queue: 1202 rules.
75000 rules inserted. Base: 60350 rules (2434 with conclusion selected). Queue: 1100 rules.
75200 rules inserted. Base: 60540 rules (2434 with conclusion selected). Queue: 955 rules.
75400 rules inserted. Base: 60724 rules (2434 with conclusion selected). Queue: 854 rules.
75600 rules inserted. Base: 60812 rules (2436 with conclusion selected). Queue: 837 rules.
75800 rules inserted. Base: 60955 rules (2436 with conclusion selected). Queue: 748 rules.
76000 rules inserted. Base: 61060 rules (2436 with conclusion selected). Queue: 680 rules.
76200 rules inserted. Base: 61199 rules (2436 with conclusion selected). Queue: 586 rules.
76400 rules inserted. Base: 61312 rules (2439 with conclusion selected). Queue: 567 rules.
76600 rules inserted. Base: 61405 rules (2439 with conclusion selected). Queue: 450 rules.
76800 rules inserted. Base: 61557 rules (2439 with conclusion selected). Queue: 358 rules.
77000 rules inserted. Base: 61630 rules (2442 with conclusion selected). Queue: 345 rules.
77200 rules inserted. Base: 61798 rules (2444 with conclusion selected). Queue: 275 rules.
77400 rules inserted. Base: 61924 rules (2459 with conclusion selected). Queue: 356 rules.
77600 rules inserted. Base: 62059 rules (2461 with conclusion selected). Queue: 355 rules.
77800 rules inserted. Base: 62220 rules (2465 with conclusion selected). Queue: 357 rules.
78000 rules inserted. Base: 62352 rules (2465 with conclusion selected). Queue: 339 rules.
78200 rules inserted. Base: 62468 rules (2466 with conclusion selected). Queue: 311 rules.
78400 rules inserted. Base: 62631 rules (2473 with conclusion selected). Queue: 331 rules.
78600 rules inserted. Base: 62749 rules (2475 with conclusion selected). Queue: 349 rules.
78800 rules inserted. Base: 62919 rules (2477 with conclusion selected). Queue: 341 rules.
79000 rules inserted. Base: 63061 rules (2483 with conclusion selected). Queue: 345 rules.
79200 rules inserted. Base: 63208 rules (2483 with conclusion selected). Queue: 327 rules.
79400 rules inserted. Base: 63338 rules (2483 with conclusion selected). Queue: 303 rules.
79600 rules inserted. Base: 63435 rules (2483 with conclusion selected). Queue: 295 rules.
79800 rules inserted. Base: 63539 rules (2487 with conclusion selected). Queue: 321 rules.
80000 rules inserted. Base: 63643 rules (2491 with conclusion selected). Queue: 363 rules.
80200 rules inserted. Base: 63815 rules (2491 with conclusion selected). Queue: 321 rules.
80400 rules inserted. Base: 63925 rules (2491 with conclusion selected). Queue: 301 rules.
80600 rules inserted. Base: 64061 rules (2497 with conclusion selected). Queue: 317 rules.
80800 rules inserted. Base: 64206 rules (2497 with conclusion selected). Queue: 287 rules.
81000 rules inserted. Base: 64309 rules (2497 with conclusion selected). Queue: 253 rules.
81200 rules inserted. Base: 64335 rules (2513 with conclusion selected). Queue: 381 rules.
81400 rules inserted. Base: 64412 rules (2513 with conclusion selected). Queue: 371 rules.
81600 rules inserted. Base: 64569 rules (2517 with conclusion selected). Queue: 361 rules.
81800 rules inserted. Base: 64579 rules (2529 with conclusion selected). Queue: 459 rules.
82000 rules inserted. Base: 64719 rules (2529 with conclusion selected). Queue: 445 rules.
82200 rules inserted. Base: 64901 rules (2529 with conclusion selected). Queue: 413 rules.
82400 rules inserted. Base: 65053 rules (2529 with conclusion selected). Queue: 405 rules.
82600 rules inserted. Base: 65211 rules (2532 with conclusion selected). Queue: 408 rules.
82800 rules inserted. Base: 65376 rules (2532 with conclusion selected). Queue: 382 rules.
83000 rules inserted. Base: 65547 rules (2534 with conclusion selected). Queue: 330 rules.
83200 rules inserted. Base: 65610 rules (2534 with conclusion selected). Queue: 314 rules.
83400 rules inserted. Base: 65751 rules (2536 with conclusion selected). Queue: 308 rules.
83600 rules inserted. Base: 65821 rules (2536 with conclusion selected). Queue: 298 rules.
83800 rules inserted. Base: 65909 rules (2538 with conclusion selected). Queue: 308 rules.
84000 rules inserted. Base: 66063 rules (2538 with conclusion selected). Queue: 214 rules.
84200 rules inserted. Base: 66146 rules (2538 with conclusion selected). Queue: 200 rules.
84400 rules inserted. Base: 66209 rules (2551 with conclusion selected). Queue: 237 rules.
84600 rules inserted. Base: 66265 rules (2553 with conclusion selected). Queue: 231 rules.
84800 rules inserted. Base: 66383 rules (2557 with conclusion selected). Queue: 225 rules.
85000 rules inserted. Base: 66499 rules (2560 with conclusion selected). Queue: 242 rules.
85200 rules inserted. Base: 66647 rules (2566 with conclusion selected). Queue: 244 rules.
85400 rules inserted. Base: 66731 rules (2568 with conclusion selected). Queue: 242 rules.
85600 rules inserted. Base: 66859 rules (2580 with conclusion selected). Queue: 262 rules.
85800 rules inserted. Base: 66957 rules (2580 with conclusion selected). Queue: 212 rules.
86000 rules inserted. Base: 67117 rules (2580 with conclusion selected). Queue: 168 rules.
86200 rules inserted. Base: 67179 rules (2588 with conclusion selected). Queue: 212 rules.
86400 rules inserted. Base: 67305 rules (2592 with conclusion selected). Queue: 206 rules.
86600 rules inserted. Base: 67439 rules (2604 with conclusion selected). Queue: 237 rules.
86800 rules inserted. Base: 67631 rules (2608 with conclusion selected). Queue: 204 rules.
87000 rules inserted. Base: 67813 rules (2608 with conclusion selected). Queue: 192 rules.
87200 rules inserted. Base: 67961 rules (2608 with conclusion selected). Queue: 210 rules.
87400 rules inserted. Base: 68141 rules (2614 with conclusion selected). Queue: 218 rules.
87600 rules inserted. Base: 68327 rules (2614 with conclusion selected). Queue: 204 rules.
87800 rules inserted. Base: 68509 rules (2614 with conclusion selected). Queue: 194 rules.
88000 rules inserted. Base: 68663 rules (2614 with conclusion selected). Queue: 180 rules.
88200 rules inserted. Base: 68825 rules (2614 with conclusion selected). Queue: 170 rules.
88400 rules inserted. Base: 68977 rules (2614 with conclusion selected). Queue: 156 rules.
88600 rules inserted. Base: 69125 rules (2616 with conclusion selected). Queue: 154 rules.
88800 rules inserted. Base: 69281 rules (2622 with conclusion selected). Queue: 172 rules.
89000 rules inserted. Base: 69449 rules (2622 with conclusion selected). Queue: 174 rules.
89200 rules inserted. Base: 69593 rules (2622 with conclusion selected). Queue: 162 rules.
89400 rules inserted. Base: 69741 rules (2626 with conclusion selected). Queue: 166 rules.
89600 rules inserted. Base: 69913 rules (2626 with conclusion selected). Queue: 166 rules.
89800 rules inserted. Base: 70061 rules (2626 with conclusion selected). Queue: 146 rules.
90000 rules inserted. Base: 70213 rules (2634 with conclusion selected). Queue: 154 rules.
90200 rules inserted. Base: 70369 rules (2634 with conclusion selected). Queue: 150 rules.
90400 rules inserted. Base: 70521 rules (2638 with conclusion selected). Queue: 158 rules.
90600 rules inserted. Base: 70701 rules (2644 with conclusion selected). Queue: 154 rules.
90800 rules inserted. Base: 70881 rules (2646 with conclusion selected). Queue: 168 rules.
91000 rules inserted. Base: 71061 rules (2646 with conclusion selected). Queue: 178 rules.
91200 rules inserted. Base: 71261 rules (2650 with conclusion selected). Queue: 152 rules.
91400 rules inserted. Base: 71461 rules (2650 with conclusion selected). Queue: 128 rules.
91600 rules inserted. Base: 71661 rules (2650 with conclusion selected). Queue: 108 rules.
91800 rules inserted. Base: 71861 rules (2650 with conclusion selected). Queue: 62 rules.
ok, secrecy assumption verified: fact unreachable attacker2(ch_client_CFIN[],ch_client_CFIN[])
ok, secrecy assumption verified: fact unreachable attacker2(ch_client_FIN[],ch_client_FIN[])
ok, secrecy assumption verified: fact unreachable attacker2(ch_client_CRT[],ch_client_CRT[])
ok, secrecy assumption verified: fact unreachable attacker2(ch_client_after_EE[],ch_client_after_EE[])
ok, secrecy assumption verified: fact unreachable attacker2(ch_server_CFIN[],ch_server_CFIN[])
ok, secrecy assumption verified: fact unreachable attacker2(ch_server_FIN[],ch_server_FIN[])
ok, secrecy assumption verified: fact unreachable attacker2(ch_server_CRT[],ch_server_CRT[])
ok, secrecy assumption verified: fact unreachable attacker2(ch_server_SH[],ch_server_SH[])
ok, secrecy assumption verified: fact unreachable attacker2(uc_privkey(s_272),x_845)
ok, secrecy assumption verified: fact unreachable attacker2(x_845,uc_privkey(s_272))
ok, secrecy assumption verified: fact unreachable attacker2(uc_psk(s_272),x_845)
ok, secrecy assumption verified: fact unreachable attacker2(x_845,uc_psk(s_272))
ok, secrecy assumption verified: fact unreachable attacker2(x_845,dh_k(s_272))
ok, secrecy assumption verified: fact unreachable attacker2(dh_k(s_272),x_845)
ok, secrecy assumption verified: fact unreachable attacker2(x_845,hmac_ideal(i_10,zero,uc_psk(s_272)))
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_10,zero,uc_psk(s_272)),x_845)
ok, secrecy assumption verified: fact unreachable attacker2(x_845,hmac_ideal(i_10,hmac_ideal(i_10,zero,uc_psk(s_272)),(tls13_ext_res_binder,hash_ideal(i_10,zero))))
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_10,hmac_ideal(i_10,zero,uc_psk(s_272)),(tls13_ext_res_binder,hash_ideal(i_10,zero))),x_845)
ok, secrecy assumption verified: fact unreachable attacker2(x_845,dh_f(s_272))
ok, secrecy assumption verified: fact unreachable attacker2(dh_f(s_272),x_845)
ok, secrecy assumption verified: fact unreachable attacker2(x_845,dh_xy(s_xy,CH(r_5,nego(v_2672,h_715,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)))),sn,e,ex,p))))
ok, secrecy assumption verified: fact unreachable attacker2(dh_xy(s_xy,CH(r_5,nego(v_2672,h_715,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)))),sn,e,ex,p))),x_845)
ok, secrecy assumption verified: fact unreachable attacker2(x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,uc_psk(s_272)),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e))
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,uc_psk(s_272)),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),x_845)
ok, secrecy assumption verified: fact unreachable attacker2(x_845,hmac_ideal(i_10,extra_es,dh_f(s_272)))
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_10,extra_es,dh_f(s_272)),x_845)
ok, secrecy assumption verified: fact unreachable attacker2(x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,uc_psk(s_272)),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero)))
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,uc_psk(s_272)),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero)),x_845)
ok, secrecy assumption verified: fact unreachable attacker2(x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,uc_psk(s_272)),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero)))
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,uc_psk(s_272)),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero)),x_845)
ok, secrecy assumption verified: fact unreachable attacker2(x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,uc_psk(s_272)),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero)))
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,uc_psk(s_272)),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero)),x_845)
ok, secrecy assumption verified: fact unreachable attacker2(x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,uc_psk(s_272)),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero)))
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,uc_psk(s_272)),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero)),x_845)
ok, secrecy assumption verified: fact unreachable attacker2(t,aead_enc(a_2,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,extra_es,dh_f(s_272)),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero)),x_845,y,z))
ok, secrecy assumption verified: fact unreachable attacker2(aead_enc(a_2,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,extra_es,dh_f(s_272)),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero)),x_845,y,z),t)
ok, secrecy assumption verified: fact unreachable attacker2(t,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,extra_es,dh_f(s_272)),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero)))
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,extra_es,dh_f(s_272)),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero)),t)
ok, secrecy assumption verified: fact unreachable attacker2(t,aead_enc(a_2,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,extra_es,dh_f(s_272)),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero)),x_845,y,z))
ok, secrecy assumption verified: fact unreachable attacker2(aead_enc(a_2,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,extra_es,dh_f(s_272)),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero)),x_845,y,z),t)
ok, secrecy assumption verified: fact unreachable attacker2(t,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,extra_es,dh_f(s_272)),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero)))
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,extra_es,dh_f(s_272)),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero)),t)
200 rules inserted. Base: 200 rules (0 with conclusion selected). Queue: 27 rules.
ok, secrecy assumption verified: fact unreachable attacker2(t,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,extra_es,dh_xy(s_xy,CH(r_5,nego(v_2672,h_715,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)))),sn,e,ex,p)))),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,((log,CH(r_5,nego(v_2672,h_715,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)))),sn,e,ex,p))),SH(r',nego(v',h',a',server_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_encap_fun(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)),dh_xy(s_xy,CH(r_5,nego(v_2672,h_715,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)))),sn,e,ex,p)))))),sn',e',ex',p')))))),(tls13_key,zero)))
200 rules inserted. Base: 200 rules (0 with conclusion selected). Queue: 27 rules.
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,extra_es,dh_xy(s_xy,CH(r_5,nego(v_2672,h_715,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)))),sn,e,ex,p)))),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,((log,CH(r_5,nego(v_2672,h_715,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)))),sn,e,ex,p))),SH(r',nego(v',h',a',server_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_encap_fun(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)),dh_xy(s_xy,CH(r_5,nego(v_2672,h_715,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)))),sn,e,ex,p)))))),sn',e',ex',p')))))),(tls13_key,zero)),t)
200 rules inserted. Base: 200 rules (0 with conclusion selected). Queue: 27 rules.
ok, secrecy assumption verified: fact unreachable attacker2(t,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,extra_es,dh_xy(s_xy,CH(r_5,nego(v_2672,h_715,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)))),sn,e,ex,p)))),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,((log,CH(r_5,nego(v_2672,h_715,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)))),sn,e,ex,p))),SH(r',nego(v',h',a',server_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_encap_fun(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)),dh_xy(s_xy,CH(r_5,nego(v_2672,h_715,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)))),sn,e,ex,p)))))),sn',e',ex',p')))))),(tls13_finished,zero)))
200 rules inserted. Base: 200 rules (0 with conclusion selected). Queue: 27 rules.
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,extra_es,dh_xy(s_xy,CH(r_5,nego(v_2672,h_715,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)))),sn,e,ex,p)))),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,((log,CH(r_5,nego(v_2672,h_715,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)))),sn,e,ex,p))),SH(r',nego(v',h',a',server_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_encap_fun(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)),dh_xy(s_xy,CH(r_5,nego(v_2672,h_715,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)))),sn,e,ex,p)))))),sn',e',ex',p')))))),(tls13_finished,zero)),t)
200 rules inserted. Base: 200 rules (0 with conclusion selected). Queue: 27 rules.
ok, secrecy assumption verified: fact unreachable attacker2(t,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,extra_es,dh_xy(s_xy,CH(r_5,nego(v_2672,h_715,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)))),sn,e,ex,p)))),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,((log,CH(r_5,nego(v_2672,h_715,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)))),sn,e,ex,p))),SH(r',nego(v',h',a',server_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_encap_fun(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)),dh_xy(s_xy,CH(r_5,nego(v_2672,h_715,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)))),sn,e,ex,p)))))),sn',e',ex',p')))))),(tls13_key,zero)))
200 rules inserted. Base: 200 rules (0 with conclusion selected). Queue: 27 rules.
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,extra_es,dh_xy(s_xy,CH(r_5,nego(v_2672,h_715,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)))),sn,e,ex,p)))),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,((log,CH(r_5,nego(v_2672,h_715,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)))),sn,e,ex,p))),SH(r',nego(v',h',a',server_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_encap_fun(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)),dh_xy(s_xy,CH(r_5,nego(v_2672,h_715,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)))),sn,e,ex,p)))))),sn',e',ex',p')))))),(tls13_key,zero)),t)
200 rules inserted. Base: 200 rules (0 with conclusion selected). Queue: 27 rules.
ok, secrecy assumption verified: fact unreachable attacker2(t,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,extra_es,dh_xy(s_xy,CH(r_5,nego(v_2672,h_715,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)))),sn,e,ex,p)))),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,((log,CH(r_5,nego(v_2672,h_715,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)))),sn,e,ex,p))),SH(r',nego(v',h',a',server_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_encap_fun(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)),dh_xy(s_xy,CH(r_5,nego(v_2672,h_715,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)))),sn,e,ex,p)))))),sn',e',ex',p')))))),(tls13_finished,zero)))
200 rules inserted. Base: 200 rules (0 with conclusion selected). Queue: 27 rules.
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,extra_es,dh_xy(s_xy,CH(r_5,nego(v_2672,h_715,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)))),sn,e,ex,p)))),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,((log,CH(r_5,nego(v_2672,h_715,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)))),sn,e,ex,p))),SH(r',nego(v',h',a',server_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_encap_fun(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)),dh_xy(s_xy,CH(r_5,nego(v_2672,h_715,a_2,client_kex_ext(DHE_kex(id_g(StrongDH,i_10),dh_pub(id_g(StrongDH,i_10),dh_k(s_x)))),sn,e,ex,p)))))),sn',e',ex',p')))))),(tls13_finished,zero)),t)
ok, secrecy assumption verified: fact unreachable attacker2(x_845,dh_xy(s',dh_pub(id_g(StrongDH,i_10),dh_k(s_272))))
ok, secrecy assumption verified: fact unreachable attacker2(dh_xy(s',dh_pub(id_g(StrongDH,i_10),dh_k(s_272))),x_845)
ok, secrecy assumption verified: fact unreachable attacker2(x_845,hmac_ideal(i_10,hmac_ideal(i_10,dh_xy(s',dh_pub(id_g(StrongDH,i_10),dh_k(s_272))),(hpke_secret,zero)),(hpke_key,hmac_ideal(i_10,zero,(hpke_info_hash,info_3)))))
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_10,hmac_ideal(i_10,dh_xy(s',dh_pub(id_g(StrongDH,i_10),dh_k(s_272))),(hpke_secret,zero)),(hpke_key,hmac_ideal(i_10,zero,(hpke_info_hash,info_3)))),x_845)
ok, secrecy assumption verified: fact unreachable attacker2(x_845,hmac_ideal(i_10,hmac_ideal(i_10,dh_f(s'),(hpke_secret,zero)),(hpke_key,hmac_ideal(i_10,zero,(hpke_info_hash,info_3)))))
ok, secrecy assumption verified: fact unreachable attacker2(hmac_ideal(i_10,hmac_ideal(i_10,dh_f(s'),(hpke_secret,zero)),(hpke_key,hmac_ideal(i_10,zero,(hpke_info_hash,info_3)))),x_845)
RESULT Diff-equivalence is true.

--------------------------------------------------------------
Verification summary:

Query(ies):
 - Diff-equivalence is true.
Associated axiom(s):
 - 
Axiom event(PreciseMess(ch,choice[id_135,id2_1],choice[st1_9,st2_2],choice[x1,x2])) && event(PreciseMess(ch,choice[id_135,id2'],choice[st1',st2'],choice[x1',x2'])) ==> st1_9 = st1' && x1 = x1' encoded as event2(PreciseMess(ch,id_135,st1_9,x1),PreciseMess(ch,id2_1,st2_2,x2)) && event2(PreciseMess(ch,id_135,st1',x1'),PreciseMess(ch,id2',st2',x2')) ==> st1_9 = st1' && x1 = x1'
axiom event(PreciseMess(ch,choice[id1_1,id_135],choice[st1_9,st2_2],choice[x1,x2])) && event(PreciseMess(ch,choice[id1',id_135],choice[st1',st2'],choice[x1',x2'])) ==> st2_2 = st2' && x2 = x2' encoded as event2(PreciseMess(ch,id1_1,st1_9,x1),PreciseMess(ch,id_135,st2_2,x2)) && event2(PreciseMess(ch,id1',st1',x1'),PreciseMess(ch,id_135,st2',x2')) ==> st2_2 = st2' && x2 = x2'
axiom event(PreciseMess(ch,choice[id1_1,id2_1],choice[st_19,st2_2],choice[x1,x2])) && event(PreciseMess(ch,choice[id1',id2'],choice[st_19,st2'],choice[x1',x2'])) ==> id1_1 = id1' && x1 = x1' encoded as event2(PreciseMess(ch,id1_1,st_19,x1),PreciseMess(ch,id2_1,st2_2,x2)) && event2(PreciseMess(ch,id1',st_19,x1'),PreciseMess(ch,id2',st2',x2')) ==> id1_1 = id1' && x1 = x1'
axiom event(PreciseMess(ch,choice[id1_1,id2_1],choice[st1_9,st_19],choice[x1,x2])) && event(PreciseMess(ch,choice[id1',id2'],choice[st1',st_19],choice[x1',x2'])) ==> id2_1 = id2' && x2 = x2' encoded as event2(PreciseMess(ch,id1_1,st1_9,x1),PreciseMess(ch,id2_1,st_19,x2)) && event2(PreciseMess(ch,id1',st1',x1'),PreciseMess(ch,id2',st_19,x2')) ==> id2_1 = id2' && x2 = x2'
 in biprocess 1.
 - Axiom event(PreciseInput(st_19,choice[x_845,x1])) && event(PreciseInput(st_19,choice[x',x2])) ==> x_845 = x' && x1 = x2 encoded as event2(PreciseInput(st_19,x_845),PreciseInput(st_19,x1)) && event2(PreciseInput(st_19,x'),PreciseInput(st_19,x2)) ==> x_845 = x' && x1 = x2 in biprocess 1.
 - 
Axiom event(Server_DH_client(choice[id_135,id1_1],choice[e,e1])) && event(Server_DH_client(choice[id_135,id2_1],choice[e',e2])) ==> e = e' encoded as event2(Server_DH_client(id_135,e),Server_DH_client(id1_1,e1)) && event2(Server_DH_client(id_135,e'),Server_DH_client(id2_1,e2)) ==> e = e'
axiom event(Server_DH_client(choice[id1_1,id_135],choice[e1,e])) && event(Server_DH_client(choice[id2_1,id_135],choice[e2,e'])) ==> e = e' encoded as event2(Server_DH_client(id1_1,e1),Server_DH_client(id_135,e)) && event2(Server_DH_client(id2_1,e2),Server_DH_client(id_135,e')) ==> e = e'
 in biprocess 1.
 - 
Axiom event(Server_new_PSK(choice[id_135,id1_1],choice[k_272,k1])) && event(Server_new_PSK(choice[id_135,id2_1],choice[k',k2])) ==> k_272 = k' encoded as event2(Server_new_PSK(id_135,k_272),Server_new_PSK(id1_1,k1)) && event2(Server_new_PSK(id_135,k'),Server_new_PSK(id2_1,k2)) ==> k_272 = k'
axiom event(Server_new_PSK(choice[id1_1,id_135],choice[k1,k_272])) && event(Server_new_PSK(choice[id2_1,id_135],choice[k2,k'])) ==> k_272 = k' encoded as event2(Server_new_PSK(id1_1,k1),Server_new_PSK(id_135,k_272)) && event2(Server_new_PSK(id2_1,k2),Server_new_PSK(id_135,k')) ==> k_272 = k'
 in biprocess 1.
 - 
Axiom not (table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,is_safe'])) && attacker(choice[psk_301,psk''])) encoded as not (table2(pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true),pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(psk_301,psk''))
axiom not (table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',true])) && attacker(choice[psk'',psk_301])) encoded as not (table2(pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true)) && attacker2(psk'',psk_301))
axiom table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[is_safe_120,is_safe'])) && attacker(choice[psk_301,psk'']) ==> is_safe_120 ≠ true encoded as table2(pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,is_safe_120),pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(psk_301,psk'') ==> is_safe_120 ≠ true
axiom table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',is_safe_120])) && attacker(choice[psk'',psk_301]) ==> is_safe_120 ≠ true encoded as table2(pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,is_safe_120)) && attacker2(psk'',psk_301) ==> is_safe_120 ≠ true
axiom table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[is_safe_120,is_safe'])) ==> psk_301 ≠ NoPsk && psk_301 ≠ zero encoded as table2(pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,is_safe_120),pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe')) ==> psk_301 ≠ NoPsk && psk_301 ≠ zero
axiom table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',is_safe_120])) ==> psk_301 ≠ NoPsk && psk_301 ≠ zero encoded as table2(pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,is_safe_120)) ==> psk_301 ≠ NoPsk && psk_301 ≠ zero
axiom attacker(choice[mk_idpsk(s_dom_16,h_715,psk_301),idpsk]) ==> psk_301 ≠ NoPsk && psk_301 ≠ zero encoded as attacker2(mk_idpsk(s_dom_16,h_715,psk_301),idpsk) ==> psk_301 ≠ NoPsk && psk_301 ≠ zero
axiom attacker(choice[idpsk,mk_idpsk(s_dom_16,h_715,psk_301)]) ==> psk_301 ≠ NoPsk && psk_301 ≠ zero encoded as attacker2(idpsk,mk_idpsk(s_dom_16,h_715,psk_301)) ==> psk_301 ≠ NoPsk && psk_301 ≠ zero
axiom not (table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_10,zero,psk_301),x_845])) encoded as not (table2(pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true),pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_10,zero,psk_301),x_845))
axiom not (table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',true])) && attacker(choice[x_845,hmac_ideal(i_10,zero,psk_301)])) encoded as not (table2(pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true)) && attacker2(x_845,hmac_ideal(i_10,zero,psk_301)))
axiom not (table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_ext_res_binder,hash_ideal(i_10,zero))),x_845])) encoded as not (table2(pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true),pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_ext_res_binder,hash_ideal(i_10,zero))),x_845))
axiom not (table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',true])) && attacker(choice[x_845,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_ext_res_binder,hash_ideal(i_10,zero)))])) encoded as not (table2(pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true)) && attacker2(x_845,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_ext_res_binder,hash_ideal(i_10,zero)))))
axiom not (table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),x_845])) encoded as not (table2(pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true),pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),x_845))
axiom not (table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',true])) && attacker(choice[x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e)])) encoded as not (table2(pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true)) && attacker2(x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e)))
axiom not (table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero)),x_845])) encoded as not (table2(pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true),pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero)),x_845))
axiom not (table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',true])) && attacker(choice[x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero))])) encoded as not (table2(pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true)) && attacker2(x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero))))
axiom not (table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero)),x_845])) encoded as not (table2(pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true),pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero)),x_845))
axiom not (table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',true])) && attacker(choice[x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero))])) encoded as not (table2(pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true)) && attacker2(x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_client_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero))))
axiom not (table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero)),x_845])) encoded as not (table2(pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true),pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero)),x_845))
axiom not (table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',true])) && attacker(choice[x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero))])) encoded as not (table2(pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true)) && attacker2(x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_key,zero))))
axiom not (table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,is_safe'])) && attacker(choice[hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero)),x_845])) encoded as not (table2(pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true),pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe')) && attacker2(hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero)),x_845))
axiom not (table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[is_safe',true])) && attacker(choice[x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero))])) encoded as not (table2(pre_shared_keys(c_dom'_20,s_dom'_1,h',id',psk',idP',is_safe'),pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,psk_301,idP_22,true)) && attacker2(x_845,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,hmac_ideal(i_10,zero,psk_301),(tls13_derived,hash_ideal(i_10,hash_ideal(i_10,zero)))),e),(tls13_server_handshake_traffic_secret,hash_ideal(i_10,log))),(tls13_finished,zero))))
 in biprocess 1.
 - 
Axiom not (event(Server_new_PSK(choice[id_s,id_s_1],choice[new_psk,new_psk'])) && table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[id_135,id'],choice[new_psk,new_psk''],choice[id_c,id_c'],choice[is_safe_120,is_safe'])) && event(Server_DH_client(choice[id_s,id_s_2],choice[dh_pub(g_75,x_845),e])) && attacker(choice[x_845,x'])) encoded as not (event2(Server_new_PSK(id_s,new_psk),Server_new_PSK(id_s_1,new_psk')) && table2(pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,new_psk,id_c,is_safe_120),pre_shared_keys(c_dom'_20,s_dom'_1,h',id',new_psk'',id_c',is_safe')) && event2(Server_DH_client(id_s,dh_pub(g_75,x_845)),Server_DH_client(id_s_2,e)) && attacker2(x_845,x'))
axiom not (event(Server_new_PSK(choice[id_s_1,id_s],choice[new_psk',new_psk])) && table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h',h_715],choice[id',id_135],choice[new_psk'',new_psk],choice[id_c',id_c],choice[is_safe',is_safe_120])) && event(Server_DH_client(choice[id_s_2,id_s],choice[e,dh_pub(g_75,x_845)])) && attacker(choice[x',x_845])) encoded as not (event2(Server_new_PSK(id_s_1,new_psk'),Server_new_PSK(id_s,new_psk)) && table2(pre_shared_keys(c_dom'_20,s_dom'_1,h',id',new_psk'',id_c',is_safe'),pre_shared_keys(c_dom_8,s_dom_16,h_715,id_135,new_psk,id_c,is_safe_120)) && event2(Server_DH_client(id_s_2,e),Server_DH_client(id_s,dh_pub(g_75,x_845))) && attacker2(x',x_845))
 in biprocess 1.
 - 
Axiom table(pre_shared_keys(choice[c_dom_8,c_dom'_20],choice[s_dom_16,s_dom'_1],choice[h_alg_21,h_alg'_1],choice[id_135,id'],choice[psk_301,psk'],choice[idP_22,idP'],choice[true,safe'])) ==> id_135 = mk_idpsk(s_dom_16,h_alg_21,psk_301) encoded as table2(pre_shared_keys(c_dom_8,s_dom_16,h_alg_21,id_135,psk_301,idP_22,true),pre_shared_keys(c_dom'_20,s_dom'_1,h_alg'_1,id',psk',idP',safe')) ==> id_135 = mk_idpsk(s_dom_16,h_alg_21,psk_301)
axiom table(pre_shared_keys(choice[c_dom'_20,c_dom_8],choice[s_dom'_1,s_dom_16],choice[h_alg'_1,h_alg_21],choice[id',id_135],choice[psk',psk_301],choice[idP',idP_22],choice[safe',true])) ==> id_135 = mk_idpsk(s_dom_16,h_alg_21,psk_301) encoded as table2(pre_shared_keys(c_dom'_20,s_dom'_1,h_alg'_1,id',psk',idP',safe'),pre_shared_keys(c_dom_8,s_dom_16,h_alg_21,id_135,psk_301,idP_22,true)) ==> id_135 = mk_idpsk(s_dom_16,h_alg_21,psk_301)
 in biprocess 1.
 - 
Axiom table(pre_shared_keys(choice[c_dom_8,c_dom1_1],choice[s_dom_16,s_dom1],choice[h_alg_21,h_alg1],choice[id_135,id1_1],choice[psk_301,psk1_1],choice[idP_22,idP1_2],choice[safe_6,safe1_1])) && table(pre_shared_keys(choice[c_dom'_20,c_dom2_1],choice[s_dom'_1,s_dom2],choice[h_alg'_1,h_alg2],choice[id',id2_1],choice[psk',psk2_1],choice[idP_22,idP2_2],choice[safe',safe2_1])) ==> c_dom_8 = c_dom'_20 && s_dom_16 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_135 = id' && psk_301 = psk' && safe_6 = safe' encoded as table2(pre_shared_keys(c_dom_8,s_dom_16,h_alg_21,id_135,psk_301,idP_22,safe_6),pre_shared_keys(c_dom1_1,s_dom1,h_alg1,id1_1,psk1_1,idP1_2,safe1_1)) && table2(pre_shared_keys(c_dom'_20,s_dom'_1,h_alg'_1,id',psk',idP_22,safe'),pre_shared_keys(c_dom2_1,s_dom2,h_alg2,id2_1,psk2_1,idP2_2,safe2_1)) ==> c_dom_8 = c_dom'_20 && s_dom_16 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_135 = id' && psk_301 = psk' && safe_6 = safe'
axiom table(pre_shared_keys(choice[c_dom1_1,c_dom_8],choice[s_dom1,s_dom_16],choice[h_alg1,h_alg_21],choice[id1_1,id_135],choice[psk1_1,psk_301],choice[idP1_2,idP_22],choice[safe1_1,safe_6])) && table(pre_shared_keys(choice[c_dom2_1,c_dom'_20],choice[s_dom2,s_dom'_1],choice[h_alg2,h_alg'_1],choice[id2_1,id'],choice[psk2_1,psk'],choice[idP2_2,idP_22],choice[safe2_1,safe'])) ==> c_dom_8 = c_dom'_20 && s_dom_16 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_135 = id' && psk_301 = psk' && safe_6 = safe' encoded as table2(pre_shared_keys(c_dom1_1,s_dom1,h_alg1,id1_1,psk1_1,idP1_2,safe1_1),pre_shared_keys(c_dom_8,s_dom_16,h_alg_21,id_135,psk_301,idP_22,safe_6)) && table2(pre_shared_keys(c_dom2_1,s_dom2,h_alg2,id2_1,psk2_1,idP2_2,safe2_1),pre_shared_keys(c_dom'_20,s_dom'_1,h_alg'_1,id',psk',idP_22,safe')) ==> c_dom_8 = c_dom'_20 && s_dom_16 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_135 = id' && psk_301 = psk' && safe_6 = safe'
axiom table(pre_shared_keys(choice[c_dom_8,c_dom1_1],choice[s_dom_16,s_dom1],choice[h_alg_21,h_alg1],choice[id_135,id1_1],choice[psk_301,psk1_1],choice[idP_22,idP1_2],choice[safe_6,safe1_1])) && table(pre_shared_keys(choice[c_dom'_20,c_dom2_1],choice[s_dom'_1,s_dom2],choice[h_alg'_1,h_alg2],choice[id',id2_1],choice[psk_301,psk2_1],choice[idP',idP2_2],choice[safe',safe2_1])) ==> c_dom_8 = c_dom'_20 && s_dom_16 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_135 = id' && idP_22 = idP' && safe_6 = safe' encoded as table2(pre_shared_keys(c_dom_8,s_dom_16,h_alg_21,id_135,psk_301,idP_22,safe_6),pre_shared_keys(c_dom1_1,s_dom1,h_alg1,id1_1,psk1_1,idP1_2,safe1_1)) && table2(pre_shared_keys(c_dom'_20,s_dom'_1,h_alg'_1,id',psk_301,idP',safe'),pre_shared_keys(c_dom2_1,s_dom2,h_alg2,id2_1,psk2_1,idP2_2,safe2_1)) ==> c_dom_8 = c_dom'_20 && s_dom_16 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_135 = id' && idP_22 = idP' && safe_6 = safe'
axiom table(pre_shared_keys(choice[c_dom1_1,c_dom_8],choice[s_dom1,s_dom_16],choice[h_alg1,h_alg_21],choice[id1_1,id_135],choice[psk1_1,psk_301],choice[idP1_2,idP_22],choice[safe1_1,safe_6])) && table(pre_shared_keys(choice[c_dom2_1,c_dom'_20],choice[s_dom2,s_dom'_1],choice[h_alg2,h_alg'_1],choice[id2_1,id'],choice[psk2_1,psk_301],choice[idP2_2,idP'],choice[safe2_1,safe'])) ==> c_dom_8 = c_dom'_20 && s_dom_16 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_135 = id' && idP_22 = idP' && safe_6 = safe' encoded as table2(pre_shared_keys(c_dom1_1,s_dom1,h_alg1,id1_1,psk1_1,idP1_2,safe1_1),pre_shared_keys(c_dom_8,s_dom_16,h_alg_21,id_135,psk_301,idP_22,safe_6)) && table2(pre_shared_keys(c_dom2_1,s_dom2,h_alg2,id2_1,psk2_1,idP2_2,safe2_1),pre_shared_keys(c_dom'_20,s_dom'_1,h_alg'_1,id',psk_301,idP',safe')) ==> c_dom_8 = c_dom'_20 && s_dom_16 = s_dom'_1 && h_alg_21 = h_alg'_1 && id_135 = id' && idP_22 = idP' && safe_6 = safe'
 in biprocess 1.
Associated restriction(s):
 - Restriction event(Same(choice[x_845,x'])) ==> x_845 = x' encoded as event2(Same(x_845),Same(x')) ==> x_845 = x' in biprocess 1.
 - Restriction not (event(ConfigOffered(id_c,config_2)) && event(CompromisedEchKeyForEquiv(config_2))) encoded as not (event2(ConfigOffered(id_c,config_2),ConfigOffered(id_c,config_2)) && event2(CompromisedEchKeyForEquiv(config_2),CompromisedEchKeyForEquiv(config_2))) in biprocess 1.
 - Restriction not (event(ConfigOffered(idClientDiff(s_272),ech_config(id_135,g_75,pkR_22,frontend,h_alg_21,a_alg_19))) && event(Client_server_domain(idClientDiff(s_272),frontend)) && event(Client_Cert_server(idClientDiff(s_272),s_pkey_7)) && event(CompromisedLtkForEquiv(s_pkey_7))) encoded as not (event2(ConfigOffered(idClientDiff(s_272),ech_config(id_135,g_75,pkR_22,frontend,h_alg_21,a_alg_19)),ConfigOffered(idClientDiff(s_272),ech_config(id_135,g_75,pkR_22,frontend,h_alg_21,a_alg_19))) && event2(Client_server_domain(idClientDiff(s_272),frontend),Client_server_domain(idClientDiff(s_272),frontend)) && event2(Client_Cert_server(idClientDiff(s_272),s_pkey_7),Client_Cert_server(idClientDiff(s_272),s_pkey_7)) && event2(CompromisedLtkForEquiv(s_pkey_7),CompromisedLtkForEquiv(s_pkey_7))) in biprocess 1.
 - Restriction event(Selected_ltk(choice[dom1_1,dom1'],choice[dom2_1,dom2'],choice[idP_22,idP'])) ==> dom1_1 = dom2_1 && dom1' = dom2' && ((dom1_1 = dom1' && idP_22 = idP') || dom1_1 ≠ dom1') encoded as event2(Selected_ltk(dom1_1,dom2_1,idP_22),Selected_ltk(dom1',dom2',idP')) ==> dom1_1 = dom2_1 && dom1' = dom2' && ((dom1_1 = dom1' && idP_22 = idP') || dom1_1 ≠ dom1') in biprocess 1.
 - Restriction event(Selected_psk(choice[dom1_1,dom1'],choice[dom2_1,dom2'],choice[idP_22,idP'],choice[safe_6,safe'])) ==> dom1_1 = dom2_1 && dom1' = dom2' && (dom1_1 ≠ dom1' || (dom1_1 = dom1' && idP_22 = idP')) encoded as event2(Selected_psk(dom1_1,dom2_1,idP_22,safe_6),Selected_psk(dom1',dom2',idP',safe')) ==> dom1_1 = dom2_1 && dom1' = dom2' && (dom1_1 ≠ dom1' || (dom1_1 = dom1' && idP_22 = idP')) in biprocess 1.
 - Restriction event(Selected_psk_no_missmatch(idClientDiff(s_272),choice[s_dom_16,s_dom'_1],choice[h_715,h'],choice[psk_301,psk'],choice[id_135,id'])) ==> id_135 = mk_idpsk(s_dom_16,h_715,psk_301) && id' = mk_idpsk(s_dom'_1,h',psk') encoded as event2(Selected_psk_no_missmatch(idClientDiff(s_272),s_dom_16,h_715,psk_301,id_135),Selected_psk_no_missmatch(idClientDiff(s_272),s_dom'_1,h',psk',id')) ==> id_135 = mk_idpsk(s_dom_16,h_715,psk_301) && id' = mk_idpsk(s_dom'_1,h',psk') in biprocess 1.
 - 
Restriction event(ClientSequenceClientDataWriteKey(idP_22,st_19,i_10)) && event(ClientSequenceClientDataWriteKey(idP_22,st',i_10)) ==> st_19 = st' encoded as event2(ClientSequenceClientDataWriteKey(idP_22,st_19,i_10),ClientSequenceClientDataWriteKey(idP_22,st_19,i_10)) && event2(ClientSequenceClientDataWriteKey(idP_22,st',i_10),ClientSequenceClientDataWriteKey(idP_22,st',i_10)) ==> st_19 = st'
restriction event(ClientSequenceServerDataWriteKey(idP_22,st_19,i_10)) && event(ClientSequenceServerDataWriteKey(idP_22,st',i_10)) ==> st_19 = st' encoded as event2(ClientSequenceServerDataWriteKey(idP_22,st_19,i_10),ClientSequenceServerDataWriteKey(idP_22,st_19,i_10)) && event2(ClientSequenceServerDataWriteKey(idP_22,st',i_10),ClientSequenceServerDataWriteKey(idP_22,st',i_10)) ==> st_19 = st'
restriction event(ServerSequenceServerDataWriteKey(idP_22,st_19,i_10)) && event(ServerSequenceServerDataWriteKey(idP_22,st',i_10)) ==> st_19 = st' encoded as event2(ServerSequenceServerDataWriteKey(idP_22,st_19,i_10),ServerSequenceServerDataWriteKey(idP_22,st_19,i_10)) && event2(ServerSequenceServerDataWriteKey(idP_22,st',i_10),ServerSequenceServerDataWriteKey(idP_22,st',i_10)) ==> st_19 = st'
restriction event(ServerSequenceClientDataWriteKey(idP_22,st_19,i_10)) && event(ServerSequenceClientDataWriteKey(idP_22,st',i_10)) ==> st_19 = st' encoded as event2(ServerSequenceClientDataWriteKey(idP_22,st_19,i_10),ServerSequenceClientDataWriteKey(idP_22,st_19,i_10)) && event2(ServerSequenceClientDataWriteKey(idP_22,st',i_10),ServerSequenceClientDataWriteKey(idP_22,st',i_10)) ==> st_19 = st'
 in biprocess 1.

--------------------------------------------------------------

16077.25user 397.33system 4:34:51elapsed 99%CPU (0avgtext+0avgdata 213521172maxresident)k
6232inputs+8600outputs (14major+55560756minor)pagefaults 0swaps
