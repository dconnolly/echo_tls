
set removeEventsForLemma = true.

nounif s_dom:domain, h_alg:hash_alg, psk:preSharedKey; attacker(mk_idpsk( *s_dom, *h_alg, *psk)).

nounif c_dom,s_dom:domain,h:hash_alg,id:identityPsk,x:preSharedKey, idP:idProc,is_safe:bool;
  table(pre_shared_keys( *c_dom, *s_dom, *h, *id, *x, *idP, *is_safe))
.

axiom c_dom,s_dom:domain,h:hash_alg,id:identityPsk,cr,sr:bytes32,old_psk,psk:preSharedKey,idP:idProc,is_safe:bool,i:nat,e:element,s:seed,log:bitstring, s_pkey:pubkey;
  table(pre_shared_keys(c_dom,s_dom,h,id,psk,idP,is_safe)) ==> attacker(id) || id = mk_idpsk(s_dom,h,psk);
  table(pre_shared_keys(c_dom,s_dom,h,id,psk,idP,true)) ==> id = mk_idpsk(s_dom,h,psk);
  table(pre_shared_keys(c_dom,s_dom,h,id,psk,idP,true)) && attacker(psk);
  table(pre_shared_keys(c_dom,s_dom,h,id,psk,idP,is_safe)) && attacker(psk) ==> is_safe = false;
  table(pre_shared_keys(c_dom,s_dom,h,id,psk,idP,false)) ==> event(CompromisedPsk(psk));
  table(pre_shared_keys(c_dom,s_dom,h,id,psk,idP,is_safe)) ==> psk <> NoPsk && psk <> b2psk(zero);
  (* ------ *)
  table(pre_shared_keys(c_dom,s_dom,h,id,psk,idP,true)) &&
  let early_secret = hmac_ideal(i,b2mk(zero),psk2b_pf(psk)) in
  attacker(early_secret);
  (* ------ *)
  table(pre_shared_keys(c_dom,s_dom,h,id,psk,idP,true)) &&
  let early_secret = hmac_ideal(i,b2mk(zero),psk2b_pf(psk)) in
  let binder_key = hmac_ideal(i,b2mk(early_secret),(tls13_ext_res_binder,hash_ideal(i,zero))) in
  attacker(binder_key);
  (* ------ *)
  table(pre_shared_keys(c_dom,s_dom,h,id,psk,idP,true)) &&
  let early_secret = hmac_ideal(i,b2mk(zero),psk2b_pf(psk)) in
  let extra_es = hmac_ideal(i,b2mk(early_secret),(tls13_derived,hash_ideal(i,hash_ideal(i,zero)))) in
  let handshake_secret = hmac_ideal(i,b2mk(extra_es),e2b(e)) in
  attacker(handshake_secret);
  (* ------ *)
  table(pre_shared_keys(c_dom,s_dom,h,id,psk,idP,true)) &&
  let early_secret = hmac_ideal(i,b2mk(zero),psk2b_pf(psk)) in
  let extra_es = hmac_ideal(i,b2mk(early_secret),(tls13_derived,hash_ideal(i,hash_ideal(i,zero)))) in
  let handshake_secret = hmac_ideal(i,b2mk(extra_es),e2b(e)) in

  let client_hts = hmac_ideal(i,b2mk(handshake_secret),(tls13_client_handshake_traffic_secret,hash_ideal(i,log))) in
  let client_wkh = hmac_ideal(i,b2mk(client_hts),(tls13_key,zero)) in
  attacker(client_wkh);
  (* ------ *)
  table(pre_shared_keys(c_dom,s_dom,h,id,psk,idP,true)) &&
  let early_secret = hmac_ideal(i,b2mk(zero),psk2b_pf(psk)) in
  let extra_es = hmac_ideal(i,b2mk(early_secret),(tls13_derived,hash_ideal(i,hash_ideal(i,zero)))) in
  let handshake_secret = hmac_ideal(i,b2mk(extra_es),e2b(e)) in

  let client_hts = hmac_ideal(i,b2mk(handshake_secret),(tls13_client_handshake_traffic_secret,hash_ideal(i,log))) in
  let client_fk = hmac_ideal(i,b2mk(client_hts),(tls13_finished,zero)) in
  attacker(client_fk);
  (* ------ *)
  table(pre_shared_keys(c_dom,s_dom,h,id,psk,idP,true)) &&
  let early_secret = hmac_ideal(i,b2mk(zero),psk2b_pf(psk)) in
  let extra_es = hmac_ideal(i,b2mk(early_secret),(tls13_derived,hash_ideal(i,hash_ideal(i,zero)))) in
  let handshake_secret = hmac_ideal(i,b2mk(extra_es),e2b(e)) in

  let server_hts = hmac_ideal(i,b2mk(handshake_secret),(tls13_server_handshake_traffic_secret,hash_ideal(i,log))) in
  let server_wkh = hmac_ideal(i,b2mk(server_hts),(tls13_key,zero)) in
  attacker(server_wkh);
  (* ------ *)
  table(pre_shared_keys(c_dom,s_dom,h,id,psk,idP,true)) &&
  let early_secret = hmac_ideal(i,b2mk(zero),psk2b_pf(psk)) in
  let extra_es = hmac_ideal(i,b2mk(early_secret),(tls13_derived,hash_ideal(i,hash_ideal(i,zero)))) in
  let handshake_secret = hmac_ideal(i,b2mk(extra_es),e2b(e)) in

  let server_hts = hmac_ideal(i,b2mk(handshake_secret),(tls13_server_handshake_traffic_secret,hash_ideal(i,log))) in
  let server_fk = hmac_ideal(i,b2mk(server_hts),(tls13_finished,zero)) in
  attacker(server_fk)
  [fullSat]
.

(* Secrecy properties *)

(* 1-RTT handshake : secrecy and authentication queries *)

axiom id_c,id_s:idProc,chk,shk:aead_key,cfin,sfin:mac_key,x:bitstring,gx,gxy:element,psk:preSharedKey,is_safe:bool,g:group,s:seed,m:bitstring;
  event(Client_chk(id_c,chk)) && attacker(chk) ==>
    let x' = dh_k(s) in
    event(Client_DH_client(id_c,dh_pub(g,x'))) &&
    event(Client_DH_server(id_c,dh_encap_fun(g,dh_pub(g,x'),gxy))) &&
    event(Client_DH_gxy(id_c,gxy)) &&
    attacker(gxy) &&
    event(Client_PSKChoosen(id_c,psk,is_safe)) &&
    (psk = NoPsk || (attacker(psk) && psk <> NoPsk));

  event(Client_shk(id_c,shk)) && attacker(shk) ==>
    let x' = dh_k(s) in
    event(Client_DH_client(id_c,dh_pub(g,x'))) &&
    event(Client_DH_server(id_c,dh_encap_fun(g,dh_pub(g,x'),gxy))) &&
    event(Client_DH_gxy(id_c,gxy)) &&
    attacker(gxy) &&
    event(Client_PSKChoosen(id_c,psk,is_safe)) &&
    (psk = NoPsk || (attacker(psk) && psk <> NoPsk));

  event(Client_cfin(id_c,cfin)) && attacker(cfin) ==>
    let x' = dh_k(s) in
    event(Client_DH_client(id_c,dh_pub(g,x'))) &&
    event(Client_DH_server(id_c,dh_encap_fun(g,dh_pub(g,x'),gxy))) &&
    event(Client_DH_gxy(id_c,gxy)) &&
    attacker(gxy) &&
    event(Client_PSKChoosen(id_c,psk,is_safe)) &&
    (psk = NoPsk || (attacker(psk) && psk <> NoPsk));

  event(Client_sfin(id_c,sfin)) && attacker(sfin) ==>
    let x' = dh_k(s) in
    event(Client_DH_client(id_c,dh_pub(g,x'))) &&
    event(Client_DH_server(id_c,dh_encap_fun(g,dh_pub(g,x'),gxy))) &&
    event(Client_DH_gxy(id_c,gxy)) &&
    attacker(gxy) &&
    event(Client_PSKChoosen(id_c,psk,is_safe)) &&
    (psk = NoPsk || (attacker(psk) && psk <> NoPsk));

  event(Server_chk(id_s,chk)) && attacker(chk) ==>
    let gxy' = dh_xy(s,m) in
    event(Server_DH_client(id_s,gx)) &&
    (
      attacker(gx) ||
      (gx = dh_pub(g,x) && event(ServerChoosesGroup(id_s,g)) && attacker(x))
    ) &&
    event(Server_DH_server(id_s,dh_encap_fun(g,gx,gxy'))) &&
    event(Server_DH_gxy(id_s,gxy')) &&
    event(Server_PSKChoosen(id_s,psk)) &&
    (psk = NoPsk || (attacker(psk) && psk <> NoPsk));

  event(Server_shk(id_s,shk)) && attacker(shk) ==>
    let gxy' = dh_xy(s,m) in
    event(Server_DH_client(id_s,gx)) &&
    (
      attacker(gx) ||
      (gx = dh_pub(g,x) && event(ServerChoosesGroup(id_s,g)) && attacker(x))
    ) &&
    event(Server_DH_server(id_s,dh_encap_fun(g,gx,gxy'))) &&
    event(Server_DH_gxy(id_s,gxy')) &&
    event(Server_PSKChoosen(id_s,psk)) &&
    (psk = NoPsk || (attacker(psk) && psk <> NoPsk));

  event(Server_cfin(id_s,cfin)) && attacker(cfin) ==>
    let gxy' = dh_xy(s,m) in
    event(Server_DH_client(id_s,gx)) &&
    (
      attacker(gx) ||
      (gx = dh_pub(g,x) && event(ServerChoosesGroup(id_s,g)) && attacker(x))
    ) &&
    event(Server_DH_server(id_s,dh_encap_fun(g,gx,gxy'))) &&
    event(Server_DH_gxy(id_s,gxy')) &&
    event(Server_PSKChoosen(id_s,psk)) &&
    (psk = NoPsk || (attacker(psk) && psk <> NoPsk));

  event(Server_sfin(id_s,sfin)) && attacker(sfin) ==>
    let gxy' = dh_xy(s,m) in
    event(Server_DH_client(id_s,gx)) &&
    (
      attacker(gx) ||
      (gx = dh_pub(g,x) && event(ServerChoosesGroup(id_s,g)) && attacker(x))
    ) &&
    event(Server_DH_server(id_s,dh_encap_fun(g,gx,gxy'))) &&
    event(Server_DH_gxy(id_s,gxy')) &&
    event(Server_PSKChoosen(id_s,psk)) &&
    (psk = NoPsk || (attacker(psk) && psk <> NoPsk))
  [induction,fullSat]
.

lemma id_c,id_s:idProc,k:aead_key,mk:mac_key,s_pkey:pubkey,s:seed,x,m:bitstring,gx,gxy:element,psk:preSharedKey,is_safe:bool,g:group;
  event(Client_cak(id_c,k)) && attacker(k) ==>
    event(Client_DH_client(id_c,dh_pub(g,x))) &&
    event(Client_DH_server(id_c,dh_encap_fun(g,dh_pub(g,x),gxy))) &&
    attacker(gxy) &&
    event(Client_PSKChoosen(id_c,psk,is_safe)) &&
    (
      (psk = NoPsk && event(Client_Cert_server(id_c,pk(new sk_d)))) ||
      (psk <> NoPsk && attacker(psk))
    );

  event(Client_sak(id_c,k)) && attacker(k) ==>
    event(Client_DH_client(id_c,dh_pub(g,x))) &&
    event(Client_DH_server(id_c,dh_encap_fun(g,dh_pub(g,x),gxy))) &&
    attacker(gxy) &&
    event(Client_PSKChoosen(id_c,psk,is_safe)) &&
    (
      (psk = NoPsk && event(Client_Cert_server(id_c,pk(new sk_d)))) ||
      (psk <> NoPsk && attacker(psk))
    );

  event(Client_cfkad(id_c,mk)) && attacker(mk) ==>
    event(Client_DH_client(id_c,dh_pub(g,x))) &&
    event(Client_DH_server(id_c,dh_encap_fun(g,dh_pub(g,x),gxy))) &&
    attacker(gxy) &&
    event(Client_PSKChoosen(id_c,psk,is_safe)) &&
    (
      (psk = NoPsk && event(Client_Cert_server(id_c,pk(new sk_d)))) ||
      (psk <> NoPsk && attacker(psk))
    );

  event(Server_cak(id_s,k)) && attacker(k) ==>
    let gxy' = dh_xy(s,m) in
    event(Server_DH_client(id_s,gx)) &&
    (
      attacker(gx) ||
      (gx = dh_pub(g,x) && event(ServerChoosesGroup(id_s,g)) && attacker(x))
    ) &&
    event(Server_DH_server(id_s,dh_encap_fun(g,gx,gxy'))) &&
    event(Server_DH_gxy(id_s,gxy')) &&
    event(Server_PSKChoosen(id_s,psk)) &&
    (
      (psk = NoPsk && event(Server_Cert_server(id_c,pk(new sk_d)))) ||
      (psk <> NoPsk && attacker(psk))
    );

  event(Server_sak(id_s,k)) && attacker(k) ==>
    let gxy' = dh_xy(s,m) in
    event(Server_DH_client(id_s,gx)) &&
    (
      attacker(gx) ||
      (gx = dh_pub(g,x) && event(ServerChoosesGroup(id_s,g)) && attacker(x))
    ) &&
    event(Server_DH_server(id_s,dh_encap_fun(g,gx,gxy'))) &&
    event(Server_DH_gxy(id_s,gxy')) &&
    event(Server_PSKChoosen(id_s,psk)) &&
    (
      (psk = NoPsk && event(Server_Cert_server(id_c,pk(new sk_d)))) ||
      (psk <> NoPsk && attacker(psk))
    );

  event(Server_cfkad(id_s,mk)) && attacker(mk) ==>
    let gxy' = dh_xy(s,m) in
    event(Server_DH_client(id_s,gx)) &&
    (
      attacker(gx) ||
      (gx = dh_pub(g,x) && event(ServerChoosesGroup(id_s,g)) && attacker(x))
    ) &&
    event(Server_DH_server(id_s,dh_encap_fun(g,gx,gxy'))) &&
    event(Server_DH_gxy(id_s,gxy')) &&
    event(Server_PSKChoosen(id_s,psk)) &&
    (
      (psk = NoPsk && event(Server_Cert_server(id_c,pk(new sk_d)))) ||
      (psk <> NoPsk && attacker(psk))
    )
  [induction,fullSat]
  .

query id_c,id_s:idProc,k:bitstring,s_pkey,c_pkey:pubkey,s:seed,x,m:bitstring,gx,gxy:element,psk,new_psk:preSharedKey,is_safe:bool,g:group;
  event(Client_rms(id_c,k)) && attacker(k) ==>
    event(Client_DH_client(id_c,dh_pub(g,x))) &&
    event(Client_DH_server(id_c,dh_encap_fun(g,dh_pub(g,x),gxy))) &&
    attacker(gxy) &&
    event(Client_PSKChoosen(id_c,psk,is_safe)) &&
    (
      (
        psk = NoPsk &&
        event(Client_Cert_server(id_c,pk(new sk_d))) &&
        event(Client_Cert_client(id_c,c_pkey)) && (c_pkey = NoPubKey || c_pkey = pk(new sk_d))
      ) ||
      (psk <> NoPsk && attacker(psk))
    );

  event(Client_new_PSK(id_c,new_psk)) && attacker(new_psk) ==>
    event(Client_DH_client(id_c,dh_pub(g,x))) &&
    event(Client_DH_server(id_c,dh_encap_fun(g,dh_pub(g,x),gxy))) &&
    attacker(gxy) &&
    event(Client_PSKChoosen(id_c,psk,is_safe)) &&
    (
      (
        psk = NoPsk &&
        event(Client_Cert_server(id_c,pk(new sk_d))) &&
        event(Client_Cert_client(id_c,c_pkey)) && (c_pkey = NoPubKey || c_pkey = pk(new sk_d))
      ) ||
      (psk <> NoPsk && attacker(psk))
    );

  event(Server_rms(id_s,k)) && attacker(k) ==>
    let gxy' = dh_xy(s,m) in
    event(Server_DH_client(id_s,gx)) &&
    (
      attacker(gx) ||
      (gx = dh_pub(g,x) && event(ServerChoosesGroup(id_s,g)) && attacker(x))
    ) &&
    event(Server_DH_server(id_s,dh_encap_fun(g,gx,gxy'))) &&
    event(Server_DH_gxy(id_s,gxy')) &&
    event(Server_PSKChoosen(id_s,psk)) &&
    (
      (
        psk = NoPsk &&
        event(Server_Cert_server(id_s,pk(new sk_d))) &&
        event(Server_Cert_client(id_s,c_pkey)) && (c_pkey = NoPubKey || c_pkey = pk(new sk_d))
      ) ||
      (psk <> NoPsk && attacker(psk))
    );

  event(Server_new_PSK(id_s,new_psk)) && attacker(new_psk) ==>
    let gxy' = dh_xy(s,m) in
    event(Server_DH_client(id_s,gx)) &&
    (
      attacker(gx) ||
      (gx = dh_pub(g,x) && event(ServerChoosesGroup(id_s,g)) && attacker(x))
    ) &&
    event(Server_DH_server(id_s,dh_encap_fun(g,gx,gxy'))) &&
    event(Server_DH_gxy(id_s,gxy')) &&
    event(Server_PSKChoosen(id_s,psk)) &&
    (
      (
        psk = NoPsk &&
        event(Server_Cert_server(id_s,pk(new sk_d))) &&
        event(Server_Cert_client(id_s,c_pkey)) && (c_pkey = NoPubKey || c_pkey = pk(new sk_d))
      ) ||
      (psk <> NoPsk && attacker(psk))
    )
  .

query config:echConfig, id_c,id_s:idProc,cr,cr',sr,sr':bytes32,psk,psk':preSharedKey,s_pkey,s_pkey',c_pkey,c_pkey':pubkey,cak,cak',sak,sak':aead_key,ems,ems',rms,rms':bitstring;
  (* Secrecy *)
  event(ClientFinished(id_c,cr,sr,psk,s_pkey,c_pkey,cak,sak,ems,rms)) && attacker(cak) ==>
    (
      event(CompromisedLtk(s_pkey)) ||
      event(CompromisedPsk(psk))
    ) && (
      event(ClientEchAcceptance(id_c,false)) ||
      (
        event(ClientOffersEchConfig(id_c,config)) &&
        event(CompromisedEchKey(config))
      )
    );

  (* Authentication *)

  event(ClientFinished(id_c,cr,sr,psk,s_pkey,c_pkey,cak,sak,ems,rms)) &&
  event(ServerFinished(id_s,cr',sr',psk',s_pkey',c_pkey',cak',sak',ems,rms')) ==>
    cr = cr' && sr = sr' && s_pkey = s_pkey' && c_pkey = c_pkey';

  event(ClientFinished(id_c,cr,sr,psk,s_pkey,c_pkey,cak,sak,ems,rms)) &&
  event(ServerFinished(id_s,cr',sr',psk',s_pkey',c_pkey',cak',sak',ems',rms)) ==>
    cr = cr' && sr = sr' && s_pkey = s_pkey' && c_pkey = c_pkey';

  event(ClientFinished(id_c,cr,sr,psk,s_pkey,c_pkey,cak,sak,ems,rms)) &&
  event(ServerFinished(id_s,cr',sr',psk',s_pkey',c_pkey',cak,sak,ems',rms')) ==>
    cr = cr' && sr = sr' && s_pkey = s_pkey' && c_pkey = c_pkey'
.

expand macro_ech_client(true,false,run_ech_client).
expand macro_standard_client(true,run_tls_client).

process
  (
    (* Generates the keys *)
      gen_honest_key
    | gen_dishonest_key
    | all_internal_processes
  ) | (
    if clients_with_tls then
    (* TLS*)
    !
    new id_tls_client:idProc;
    (* Domains *)
    in(io,s_dom:domain);
    in(io,c_dom:domain);

    run_tls_client(id_tls_client,c_dom,s_dom)
  ) | (
    if clients_with_ech then
    (* ECH client *)
    !
    new id_client:idProc;
    (* Domains *)
    in(io,backend_dom:domain);
    in(io,frontend_dom:domain);
    in(io,c_dom:domain);

    get ech_configurations(ech_config(id,g,pkR,=frontend_dom,h_alg,a_alg),skR) in
    let ech_conf = ech_config(id,g,pkR,frontend_dom,h_alg,a_alg) in

    run_ech_client(id_client,empty_extra_ext,c_dom,backend_dom,ech_conf)
  ) | (
    !
    (* Server *)
    in(io,s_dom:domain);
    run_server(s_dom,empty_extra_ext)
  )
