#!/bin/bash

max_time=172800

mkdir -p tests
mkdir -p generated_configs

fullname=""
isequiv=0

# Arguments:
# 	$1: name of the query
#		$2: Functionalities
#		$3: Safety
#		$4: Behavior
#		$5: Agents
#		$6: Output file
#		$7: 0 when query is reachability, 1 when equivalence
function header() {
	echo "" >> $6
	echo "---------------------------------------------------------------------" >> $6
	echo "  Result of the execution of the following command: " >> $6
	echo "" >> $6
	echo "    proverif \\" >> $6
	echo "      -lib generated_configs/config_F${2}_S${3}_B${4}_A${5}.pvl \\" >> $6
	echo "      -lib libraries/primitives.pvl \\" >> $6
	echo "      -lib libraries/format.pvl \\" >> $6
	echo "      -lib libraries/key_schedule.pvl \\" >> $6
	echo "      -lib libraries/events.pvl \\" >> $6
	echo "      -lib security_properties/${1}/config_proof_helper.m4.pvl \\" >> $6
	echo "      -lib libraries/tls_functions.pvl \\" >> $6
	echo "      -lib libraries/ech_functions.pvl \\" >> $6
	echo "      -lib libraries/main_processes.pvl \\" >> $6
	echo "      -lib libraries/client.pvl \\" >> $6
	echo "      -lib libraries/main_processes.pvl \\" >> $6
	if [ $isequiv -eq 0 ]; then
		echo "      -lib libraries/proof_helper_reachability.pvl \\" >> $6
	else
		echo "      -lib libraries/proof_helper_equivalence.pvl \\" >> $6
	fi
	echo "      security_properties/${1}/${1}.pv" >> $6
	echo "" >> $6
	echo "---------------------------------------------------------------------" >> $6
	echo "" >> $6
	m4 -D F$2 -D S$3 -D B$4 -D A$5 scenario.m4 >> $6
	echo "" >> $6
	echo "---------------------------------------------------------------------" >> $6
	echo "" >> $6
	echo "   ProVerif output:" >> $6
	echo "" >> $6
}

# Arguments:
# 	$1: name of the query
function run_scenario() {
	querydone=0
	if [ -f "security_properties/${1}/result.txt" ]; then
		querydone="$(grep -c "${1} - Scenario F${2} S${3} B${4} A${5}" security_properties/${1}/result.txt)"
	fi
	if [ $querydone -eq 0 ]; then
		# Generation of the config file
		cat m4_declarations.m4 > tmp.m4
		cat libraries/config_script.m4.pvl >> tmp.m4
		m4 -D F$2 -D S$3 -D B$4 -D A$5 tmp.m4 > generated_configs/config_F${2}_S${3}_B${4}_A${5}.pvl
		rm tmp.m4

		# Generation of file names
		date_str=$(date "+%Y-%m-%d_%Hh%Mm%Ss")
		mkdir -p "tests/${1}-${date_str}"
		TMPDIR=tests/${1}-${date_str}
		outputfile="${TMPDIR}/output.txt"
		timefile="${TMPDIR}/time.txt"

		header $1 $2 $3 $4 $5 $outputfile

		#Generation of the librairies
		lib="-lib generated_configs/config_F${2}_S${3}_B${4}_A${5}.pvl"
		lib="${lib} -lib libraries/primitives.pvl"
		lib="${lib} -lib libraries/format.pvl"
		lib="${lib} -lib libraries/key_schedule.pvl"
		lib="${lib} -lib libraries/events.pvl"
		lib="${lib} -lib security_properties/${1}/config_proof_helper.m4.pvl"
		lib="${lib} -lib libraries/tls_functions.pvl"
		lib="${lib} -lib libraries/ech_functions.pvl"
		lib="${lib} -lib libraries/server.pvl"
		lib="${lib} -lib libraries/client.pvl"
		lib="${lib} -lib libraries/main_processes.pvl"
		lib="${lib} -lib libraries/proof_helper_reachability.pvl"
		command="proverif ${lib} security_properties/${1}/${1}.pv"
		(ulimit -t $max_time > .tmp; ulimit -H -t > .tmp;
		if uname -a | egrep -q \(Darwin\)
		then
			{ gtime -f "Time %E - Memory %Mk" $command >> $outputfile ;} 2> $timefile;
		else
			{ /usr/bin/time -f "Time %E - Memory %Mk" $command >> $outputfile ;} 2> $timefile;
		fi
		time_tmp=$(cat $timefile | grep Time);
		limit_tmp=$(cat $timefile | grep 'Command terminated by signal 9');
		nbTrue="$(grep -c 'RESULT.*is true.' ${outputfile})"
		echo "${1} - Scenario F${2} S${3} B${4} A${5} - ${nbTrue} true queries - ${time_tmp} ${limit_tmp}" >> security_properties/${1}/result.txt
		rm .tmp
		echo "Verified: ${1} - Scenario F${2} S${3} B${4} A${5}"
		)
	else
		echo "Already verified: ${1} - Scenario F${2} S${3} B${4} A${5}"
	fi
}

function doall() {
	# NoHRR
	for F in 1 2 3 4 5 6 7 8
	do
		for S in 1 2 3
		do
			for B in 1 2 3
			do
				for A in 1 2 3 4
				do
					run_scenario $1 $F $S $B $A
				done
			done
		done
	done
}

function getfullname() {
	case .$1 in
		.secrecy)
			fullname="secrecy"
			;;
		.early)
			fullname="early_data"
			;;
		.auth)
			fullname="authentication"
			;;
		.downgrade)
			fullname="downgrade_resilient_ech"
			;;
		.key)
			fullname="key_sequentiality"
			;;
		.PHauth)
			fullname="post_handshake_authentication"
			;;
		.PHdata)
			fullname="post_handshake_data"
			;;
		.Rlemma)
			fullname="lemmas_reachability"
			;;
	esac
}

case .$1 in
	.one)
		echo Verifying one scenario.
		getfullname $2
		run_scenario $fullname $3 $4 $5 $6
		;;
	.all)
		echo Verifying all scenarios.
		getfullname $2
		doall $fullname
		;;
	.clean)
		echo Removing all generated files
		rm -f generated_configs/*.pvl
		;;
esac
