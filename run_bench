#!/bin/bash

lib_reach="-lib libraries/primitives.pvl -lib libraries/format.pvl -lib libraries/key_schedule.pvl -lib libraries/secrecy_assumption.pvl -lib libraries/misc.pvl -lib libraries/client.pvl -lib libraries/client_ech.pvl -lib libraries/server.pvl -lib libraries/main_processes.pvl"
lib_equiv="-lib libraries/primitives.pvl -lib libraries/format.pvl -lib libraries/key_schedule.pvl -lib libraries/secrecy_assumption_equiv.pvl -lib libraries/misc.pvl -lib libraries/client.pvl -lib libraries/client_ech.pvl -lib libraries/server.pvl -lib libraries/main_processes.pvl"

mkdir -p tests
mkdir -p tmp

if [ \( .$1 = .clean \) ]
then
	rm -f tests/*
else
	function sanity() {
		for file in generated_models/*.pv
		do
			filename_ext=${path##*/}
			filename=${filename_ext%.*}
			analyze -progopt $lib_reach -set displayDerivation false -set traceDisplay none -set verboseClauses none -endprogopt PV test_add tmp $filename file generated_models $filename_ext
		done
	}

	function analyze_one_file() {
		file=$1
		filename_ext=${file##*/}
		filename=${filename_ext%.*}
		analyze -progopt $lib_equiv -set displayDerivation false -set traceDisplay none -set verboseClauses none -endprogopt PV test_add tmp $filename file generated_models $filename_ext
	}

	### Prepare the scenation

	./prepare

	if [ \( .$1 = .inner \) ]
	then
		analyze_one_file "generated_models/strong_secrecy_inner_SCENARIO$2.pv"
	fi
	if [ \( .$1 = .backend \) ]
	then
		analyze_one_file "generated_models/privacy_backend_SCENARIO$2.pv"
	fi
	if [ \( .$1 = .client \) ]
	then
		analyze_one_file "generated_models/privacy_client_SCENARIO$2.pv"
	fi
	if [ \( .$1 = .client_ech \) ]
	then
		analyze_one_file "generated_models/privacy_client_ech_SCENARIO$2.pv"
	fi
	if [ \( .$1 = .ror \) ]
	then
		analyze_one_file "generated_models/real_or_random_psk_SCENARIO$2.pv"
	fi
	if [ \( .$1 = .sanity \) ]
	then
		sanity
	fi
fi
