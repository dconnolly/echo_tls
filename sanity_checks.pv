(* ProVerif settings *)

set preciseActions = true.
set removeEventsForLemma = true.
set redundancyElim = no.

(* Restriction for tables *)

restriction c_dom1,c_dom2:domain,sk:privkey,spkey:pubkey,crt:certificate;
  event(Selected_lgt(c_dom1,c_dom2,sk,spkey,crt)) ==> c_dom1 = c_dom2
.

restriction c_dom1,c_dom2,s_dom1,s_dom2:domain,id:identityPsk,ipsk:internal_preSharedKey;
  event(Selected_psk(c_dom1,c_dom2,s_dom1,s_dom2,id,ipsk)) ==> s_dom1 = s_dom2 && c_dom1 = c_dom2
.

(********************************************************)
(* The scenario                                         *)
(********************************************************)

process
  (* The group and cipher suite between TLS and Ech should be incompatible *)
  let tls_h = id_hash(StrongHash,1) in
  let tls_a = id_aead(StrongAE,1) in
  let tls_g = id_g(StrongDH,1) in
  let ech_h = id_hash(StrongHash,2) in
  let ech_a = id_aead(StrongAE,2) in
  let ech_g = id_g(StrongDH,2) in

  (
    (* The clients subprocesses *)
      send_finished_message
    | receive_finished_message
    | process_server_certificate_message
    | receive_after_encrypted_extension
    (* The server subprocesses *)
    | receive_client_finished_message
    | send_server_finished_message
    | send_server_certificate_message
    | process_client_hello_noHRR
    (* The key generation *)
    | gen_honest_long_term_keys ()
    | gen_honest_pre_shared_keys (tls_h)
    | gen_ech_config(ech_g,ech_h,ech_a)
    (* The application data *)
    | application_data
    | (
      !
      in(io,(use_psk:bool,send_kex:bool,c_dom:domain,s_dom:domain));
      standard_client(use_psk,send_kex,c_dom,s_dom,tls_g,tls_h,tls_a,empty_extra_ext)
    ) | (
      !
      in(io,(use_grease:bool,use_psk:bool,send_kex:bool,c_dom:domain,cfs_dom:domain,backend_dom:domain));
      get ech_configurations(ech_config(id,g,pkR,=cfs_dom,h_alg,a_alg),skR) in
      let ech_conf = ech_config(id,g,pkR,cfs_dom,h_alg,a_alg) in
      echo_client(use_grease,use_psk,send_kex,c_dom,backend_dom,tls_g,tls_h,tls_a,ech_conf,empty_extra_ext,empty_extra_ext)
    ) | (
      !
      in(io,(use_ech:bool,use_psk:bool,cert_req:bool,s_dom:domain));
      server(use_ech,use_psk,cert_req,s_dom,tls_g,tls_h,tls_a,empty_extra_ext)
    )
  )
