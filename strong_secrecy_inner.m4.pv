set removeEventsForLemma = true.

ifdef(<!DISECH!>,<!dnl
(* Some public free domains *)

free HonestServer:domain.
!>)dnl

(* Dishonest key generation *)

let gen_dishonest_long_term_keys =
  !
  in(io,a:domain);
  event Same(d2b(a));
  new sk_d:privkey;
  out(io,(sk_d,valid_cert(a,pk(sk_d))))
.

let gen_dishonest_pre_shared_keys(h_alg:hash_alg) =
  !
  new idP:idProc;
  in(io,(c_dom:domain,s_dom:domain));
  event Same((c_dom,s_dom));
  new psk_d:internal_preSharedKey;
  let id = mk_idpsk(c_dom,s_dom,h_alg,psk_d) in
  insert pre_shared_keys(c_dom,s_dom,h_alg,id,psk_d,idP);
  out(io,psk_d)
.

ifdef(<!DISECH!>,<!dnl
let gen_dishonest_ech_config(g:group,h_alg:hash_alg,a_alg:aead_alg) =
  !
  in(io,o_dom:domain);
  if o_dom <> HonestServer then
  event Same(d2b(o_dom));
  new id: configId;
  new skR_d:bitstring;
  let pkR_d = dh_pub(g,skR_d) in
  let config = ech_config(id,g,pkR_d,o_dom,h_alg,a_alg) in
  insert ech_configurations(config,skR_d);
  out(io,(config,skR_d))
.
!>)dnl

process
  (* The group and cipher suite between TLS and Ech should be incompatible *)
  let tls_h = id_hash(StrongHash,1) in
  let tls_a = id_aead(StrongAE,1) in
  let tls_g = id_g(StrongDH,1) in
  let ech_h = id_hash(StrongHash,2) in
  let ech_a = id_aead(StrongAE,2) in
  let ech_g = id_g(StrongDH,2) in
  (
      main_process(tls_h,ech_h,tls_a,ech_a,tls_g,ech_g)
    | gen_dishonest_long_term_keys
    | gen_dishonest_pre_shared_keys(tls_h)
ifdef(<!DISECH!>,<!dnl
    | gen_dishonest_ech_config(ech_g,ech_h,ech_a)
!>)dnl
    | (
      !
      new id_client:idProc;
      ifdef(<!PSK!>,<!let use_psk = true in!>) ifdef(<!NOPSK!>,<!let use_psk = false in!>) ifdef(<!UPSK!>,<!in(io,use_psk:bool);!>)
      ifdef(<!KEX!>,<!let send_kex = true in!>) ifdef(<!NOKEX!>,<!let send_kex = false in!>) ifdef(<!UKEX!>,<!in(io,send_kex:bool);!>)
      in(io,(c_dom:domain,s_dom:domain));
      event Same((use_psk,send_kex,c_dom,s_dom));
      standard_client(id_client,use_psk,send_kex,c_dom,s_dom,tls_g,tls_h,tls_a,empty_extra_ext)
    ) | (
      !
      in(io,x:extraExt) [precise];
      in(io,x':extraExt) [precise];
      let inner_ext = diff[x,x'] in
      ifdef(<!GREASE!>,<!let use_grease = true in!>) ifdef(<!NOGREASE!>,<!let use_grease = false in!>) ifdef(<!UGREASE!>,<!in(io,use_grease:bool);!>)
      ifdef(<!PSK!>,<!let use_psk = true in!>) ifdef(<!NOPSK!>,<!let use_psk = false in!>) ifdef(<!UPSK!>,<!in(io,use_psk:bool);!>)
      ifdef(<!KEX!>,<!let send_kex = true in!>) ifdef(<!NOKEX!>,<!let send_kex = false in!>) ifdef(<!UKEX!>,<!in(io,send_kex:bool);!>)
ifdef(<!DISECH!>,<!dnl
      in(io,(c_dom:domain,backend_dom:domain));
      let cfs_dom = HonestServer in
!>,<!dnl
      in(io,(c_dom:domain,cfs_dom:domain,backend_dom:domain));
!>)dnl
      event Same((use_grease,use_psk,send_kex,c_dom,cfs_dom,backend_dom));
      get ech_configurations(ech_config(id,g,pkR,=cfs_dom,h_alg,a_alg),skR) in
      let ech_conf = ech_config(id,g,pkR,cfs_dom,h_alg,a_alg) in
      echo_client(use_grease,use_psk,send_kex,c_dom,backend_dom,tls_g,tls_h,tls_a,ech_conf,inner_ext,empty_extra_ext)
    ) | (
      !
      ifdef(<!PSK!>,<!let use_psk = true in!>) ifdef(<!NOPSK!>,<!let use_psk = false in!>) ifdef(<!UPSK!>,<!in(io,use_psk:bool) [precise];!>)
      ifdef(<!CERT!>,<!let cert_req = true in!>) ifdef(<!NOCERT!>,<!let cert_req = false in!>) ifdef(<!UCERT!>,<!in(io,cert_req:bool) [precise];!>)
      in(io,(use_ech:bool,s_dom:domain)) [precise];
      event Same((use_ech,use_psk,cert_req,s_dom));
      server(use_ech,use_psk,cert_req,s_dom,tls_g,tls_h,tls_a,empty_extra_ext)
ifdef(<!DISECH!>,<!dnl
    ) | (
      !
      ifdef(<!GREASE!>,<!let use_grease = true in!>) ifdef(<!NOGREASE!>,<!let use_grease = false in!>) ifdef(<!UGREASE!>,<!in(io,use_grease:bool);!>)
      ifdef(<!PSK!>,<!let use_psk = true in!>) ifdef(<!NOPSK!>,<!let use_psk = false in!>) ifdef(<!UPSK!>,<!in(io,use_psk:bool);!>)
      ifdef(<!KEX!>,<!let send_kex = true in!>) ifdef(<!NOKEX!>,<!let send_kex = false in!>) ifdef(<!UKEX!>,<!in(io,send_kex:bool);!>)
      in(io,(c_dom:domain,cfs_dom:domain,backend_dom:domain));
      event Same((use_grease,use_psk,send_kex,c_dom,cfs_dom,backend_dom));
      get ech_configurations(ech_config(id,g,pkR,=cfs_dom,h_alg,a_alg),skR) in
      let ech_conf = ech_config(id,g,pkR,cfs_dom,h_alg,a_alg) in
      echo_client(use_grease,use_psk,send_kex,c_dom,backend_dom,tls_g,tls_h,tls_a,ech_conf,empty_extra_ext,empty_extra_ext)
!>)dnl
    )
  )

ifdef(<!SCENARIO1!>,<!
ifdef(<!NOHRR!>,<!!>,<!
(* EXPECTPV FILENAME: ./strong_secrecy_inner.m4.pv TAG: 1
END *)
!>)dnl
!>)dnl
ifdef(<!SCENARIO2!>,<!
ifdef(<!NOHRR!>,<!!>,<!
(* EXPECTPV FILENAME: ./strong_secrecy_inner.m4.pv TAG: 2
END *)
!>)dnl
!>)dnl
ifdef(<!SCENARIO3!>,<!
ifdef(<!NOHRR!>,<!!>,<!
(* EXPECTPV FILENAME: ./strong_secrecy_inner.m4.pv TAG: 3
END *)
!>)dnl
!>)dnl
ifdef(<!SCENARIO4!>,<!
ifdef(<!NOHRR!>,<!!>,<!
(* EXPECTPV FILENAME: ./strong_secrecy_inner.m4.pv TAG: 4
END *)
!>)dnl
!>)dnl
ifdef(<!SCENARIO5!>,<!
ifdef(<!NOHRR!>,<!!>,<!
(* EXPECTPV FILENAME: ./strong_secrecy_inner.m4.pv TAG: 5
END *)
!>)dnl
!>)dnl
ifdef(<!SCENARIO6!>,<!
ifdef(<!NOHRR!>,<!!>,<!
(* EXPECTPV FILENAME: ./strong_secrecy_inner.m4.pv TAG: 6
END *)
!>)dnl
!>)dnl
ifdef(<!SCENARIO1!>,<!
ifdef(<!NOHRR!>,<!
(* EXPECTPV FILENAME: ./strong_secrecy_inner.m4.pv TAG: 7
RESULT Diff-equivalence is true.
847.397s (user 841.737s + system 5.660s), max rss 4201712K
END *)
!>)dnl
!>)dnl
ifdef(<!SCENARIO2!>,<!
ifdef(<!NOHRR!>,<!
(* EXPECTPV FILENAME: ./strong_secrecy_inner.m4.pv TAG: 8
RESULT Diff-equivalence is true.
258.231s (user 256.991s + system 1.240s), max rss 1823692K
END *)
!>)dnl
!>)dnl
ifdef(<!SCENARIO3!>,<!
ifdef(<!NOHRR!>,<!
(* EXPECTPV FILENAME: ./strong_secrecy_inner.m4.pv TAG: 9
RESULT Diff-equivalence is true.
587.264s (user 583.412s + system 3.852s), max rss 3183740K
END *)
!>)dnl
!>)dnl
ifdef(<!SCENARIO4!>,<!
ifdef(<!NOHRR!>,<!
(* EXPECTPV FILENAME: ./strong_secrecy_inner.m4.pv TAG: 10
RESULT Diff-equivalence is true.
11621.533s (user 11516.651s + system 104.882s), max rss 14762232K
END *)
!>)dnl
!>)dnl
ifdef(<!SCENARIO5!>,<!
ifdef(<!NOHRR!>,<!
(* EXPECTPV FILENAME: ./strong_secrecy_inner.m4.pv TAG: 11
END *)
!>)dnl
!>)dnl
ifdef(<!SCENARIO6!>,<!
ifdef(<!NOHRR!>,<!
(* EXPECTPV FILENAME: ./strong_secrecy_inner.m4.pv TAG: 12
END *)
!>)dnl
!>)dnl
